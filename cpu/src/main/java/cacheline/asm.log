Java HotSpot(TM) 64-Bit Server VM warning: PrintAssembly is enabled; turning on DebugNonSafepoints to gain additional output
Loaded disassembler from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/server/hsdis-amd64.dylib
Decoding compiled method 0x000000010f73f7d0:
Code:
[Disassembling for mach='i386:x86-64']
[Entry Point]
  # {method} {0x000000010ea7e930} 'arraycopy' '(Ljava/lang/Object;ILjava/lang/Object;II)V' in 'java/lang/System'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx       = int
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8        = int
  # parm4:    r9        = int
  #           [sp+0x60]  (sp of caller)
  0x000000010f73f940: mov    0x8(%rsi),%r10d
  0x000000010f73f944: shl    $0x3,%r10
  0x000000010f73f948: cmp    %r10,%rax
  0x000000010f73f94b: je     0x000000010f73f958
  0x000000010f73f951: jmpq   0x000000010f716e60  ;   {runtime_call}
  0x000000010f73f956: xchg   %ax,%ax
[Verified Entry Point]
  0x000000010f73f958: mov    %eax,-0x14000(%rsp)
  0x000000010f73f95f: push   %rbp
  0x000000010f73f960: mov    %rsp,%rbp
  0x000000010f73f963: sub    $0x50,%rsp
  0x000000010f73f967: mov    %r9,(%rsp)
  0x000000010f73f96b: mov    %r8,%r9
  0x000000010f73f96e: mov    %rcx,0x18(%rsp)
  0x000000010f73f973: cmp    $0x0,%rcx
  0x000000010f73f977: lea    0x18(%rsp),%r8
  0x000000010f73f97c: cmove  0x18(%rsp),%r8
  0x000000010f73f982: mov    %rdx,%rcx
  0x000000010f73f985: mov    %rsi,0x8(%rsp)
  0x000000010f73f98a: cmp    $0x0,%rsi
  0x000000010f73f98e: lea    0x8(%rsp),%rdx
  0x000000010f73f993: cmove  0x8(%rsp),%rdx
  0x000000010f73f999: movabs $0x795580c78,%r14  ;   {oop(a 'java/lang/Class' = 'java/lang/System')}
  0x000000010f73f9a3: mov    %r14,0x38(%rsp)
  0x000000010f73f9a8: lea    0x38(%rsp),%r14
  0x000000010f73f9ad: mov    %r14,%rsi          ; OopMap{[24]=Oop [8]=Oop [56]=Oop off=112}
  0x000000010f73f9b0: movabs $0x10f73f9b0,%r10  ;   {section_word}
  0x000000010f73f9ba: mov    %r10,0x1e0(%r15)
  0x000000010f73f9c1: mov    %rsp,0x1d8(%r15)
  0x000000010f73f9c8: cmpb   $0x0,-0x5e4d615(%rip)        # 0x00000001098f23ba
                                                ;   {external_word}
  0x000000010f73f9cf: je     0x000000010f73fa13
  0x000000010f73f9d5: push   %rsi
  0x000000010f73f9d6: push   %rdx
  0x000000010f73f9d7: push   %rcx
  0x000000010f73f9d8: push   %r8
  0x000000010f73f9da: push   %r9
  0x000000010f73f9dc: movabs $0x10ea7e930,%rsi  ;   {metadata({method} {0x000000010ea7e930} 'arraycopy' '(Ljava/lang/Object;ILjava/lang/Object;II)V' in 'java/lang/System')}
  0x000000010f73f9e6: mov    %r15,%rdi
  0x000000010f73f9e9: test   $0xf,%esp
  0x000000010f73f9ef: je     0x000000010f73fa07
  0x000000010f73f9f5: sub    $0x8,%rsp
  0x000000010f73f9f9: callq  0x00000001094ed064  ;   {runtime_call}
  0x000000010f73f9fe: add    $0x8,%rsp
  0x000000010f73fa02: jmpq   0x000000010f73fa0c
  0x000000010f73fa07: callq  0x00000001094ed064  ;   {runtime_call}
  0x000000010f73fa0c: pop    %r9
  0x000000010f73fa0e: pop    %r8
  0x000000010f73fa10: pop    %rcx
  0x000000010f73fa11: pop    %rdx
  0x000000010f73fa12: pop    %rsi
  0x000000010f73fa13: lea    0x1f8(%r15),%rdi
  0x000000010f73fa1a: movl   $0x4,0x270(%r15)
  0x000000010f73fa25: callq  0x0000000109346ea4  ;   {runtime_call}
  0x000000010f73fa2a: vzeroupper 
  0x000000010f73fa2d: movl   $0x5,0x270(%r15)
  0x000000010f73fa38: lock addl $0x0,(%rsp)
  0x000000010f73fa3d: cmpl   $0x0,-0x5e42cd7(%rip)        # 0x00000001098fcd70
                                                ;   {external_word}
  0x000000010f73fa47: jne    0x000000010f73fa5b
  0x000000010f73fa4d: cmpl   $0x0,0x30(%r15)
  0x000000010f73fa55: je     0x000000010f73fa74
  0x000000010f73fa5b: mov    %r15,%rdi
  0x000000010f73fa5e: mov    %rsp,%r12
  0x000000010f73fa61: sub    $0x0,%rsp
  0x000000010f73fa65: and    $0xfffffffffffffff0,%rsp
  0x000000010f73fa69: callq  0x000000010956fe1e  ;   {runtime_call}
  0x000000010f73fa6e: mov    %r12,%rsp
  0x000000010f73fa71: xor    %r12,%r12
  0x000000010f73fa74: movl   $0x8,0x270(%r15)
  0x000000010f73fa7f: cmpl   $0x1,0x29c(%r15)
  0x000000010f73fa8a: je     0x000000010f73fb12
  0x000000010f73fa90: cmpb   $0x0,-0x5e4d6dd(%rip)        # 0x00000001098f23ba
                                                ;   {external_word}
  0x000000010f73fa97: je     0x000000010f73facd
  0x000000010f73fa9d: movabs $0x10ea7e930,%rsi  ;   {metadata({method} {0x000000010ea7e930} 'arraycopy' '(Ljava/lang/Object;ILjava/lang/Object;II)V' in 'java/lang/System')}
  0x000000010f73faa7: mov    %r15,%rdi
  0x000000010f73faaa: test   $0xf,%esp
  0x000000010f73fab0: je     0x000000010f73fac8
  0x000000010f73fab6: sub    $0x8,%rsp
  0x000000010f73faba: callq  0x00000001094ecfd6  ;   {runtime_call}
  0x000000010f73fabf: add    $0x8,%rsp
  0x000000010f73fac3: jmpq   0x000000010f73facd
  0x000000010f73fac8: callq  0x00000001094ecfd6  ;   {runtime_call}
  0x000000010f73facd: movabs $0x0,%r10
  0x000000010f73fad7: mov    %r10,0x1d8(%r15)
  0x000000010f73fade: movabs $0x0,%r10
  0x000000010f73fae8: mov    %r10,0x1e0(%r15)
  0x000000010f73faef: mov    0x38(%r15),%rcx
  0x000000010f73faf3: movl   $0x0,0x100(%rcx)
  0x000000010f73fafd: leaveq 
  0x000000010f73fafe: cmpq   $0x0,0x8(%r15)
  0x000000010f73fb06: jne    0x000000010f73fb0d
  0x000000010f73fb0c: retq   
  0x000000010f73fb0d: jmpq   Stub::forward exception  ;   {runtime_call}
  0x000000010f73fb12: mov    %rsp,%r12
  0x000000010f73fb15: sub    $0x0,%rsp
  0x000000010f73fb19: and    $0xfffffffffffffff0,%rsp
  0x000000010f73fb1d: callq  0x00000001094ead1c  ;   {runtime_call}
  0x000000010f73fb22: mov    %r12,%rsp
  0x000000010f73fb25: xor    %r12,%r12
  0x000000010f73fb28: jmpq   0x000000010f73fa90
  0x000000010f73fb2d: hlt    
  0x000000010f73fb2e: hlt    
  0x000000010f73fb2f: hlt    
Decoding compiled method 0x000000010f7d4fd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010eada260} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder'
  # this:     rsi:rsi   = 'java/lang/AbstractStringBuilder'
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x000000010f7d5140: mov    0x8(%rsi),%r10d
  0x000000010f7d5144: shl    $0x3,%r10
  0x000000010f7d5148: cmp    %rax,%r10
  0x000000010f7d514b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7d5151: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7d515c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7d5160: mov    %eax,-0x14000(%rsp)
  0x000000010f7d5167: push   %rbp
  0x000000010f7d5168: sub    $0x30,%rsp
  0x000000010f7d516c: mov    %rsi,%r8
  0x000000010f7d516f: movabs $0x10ec9a3e8,%rbx  ;   {metadata(method data for {method} {0x000000010eada260} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f7d5179: mov    0xdc(%rbx),%esi
  0x000000010f7d517f: add    $0x8,%esi
  0x000000010f7d5182: mov    %esi,0xdc(%rbx)
  0x000000010f7d5188: movabs $0x10eada260,%rbx  ;   {metadata({method} {0x000000010eada260} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f7d5192: and    $0x1ff8,%esi
  0x000000010f7d5198: cmp    $0x0,%esi
  0x000000010f7d519b: je     0x000000010f7d528c  ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::<init>@0 (line 67)

  0x000000010f7d51a1: mov    %r8,%rbx
  0x000000010f7d51a4: movabs $0x10ec9a3e8,%rsi  ;   {metadata(method data for {method} {0x000000010eada260} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f7d51ae: addq   $0x1,0x108(%rsi)
  0x000000010f7d51b6: movabs $0x10ebdca10,%rbx  ;   {metadata(method data for {method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f7d51c0: mov    0xdc(%rbx),%esi
  0x000000010f7d51c6: add    $0x8,%esi
  0x000000010f7d51c9: mov    %esi,0xdc(%rbx)
  0x000000010f7d51cf: movabs $0x10ea65480,%rbx  ;   {metadata({method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f7d51d9: and    $0x7ffff8,%esi
  0x000000010f7d51df: cmp    $0x0,%esi
  0x000000010f7d51e2: je     0x000000010f7d52a3
  0x000000010f7d51e8: mov    %rdx,%rbx
  0x000000010f7d51eb: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000000010f7d51f5: movslq %ebx,%rbx
  0x000000010f7d51f8: mov    %rbx,%rdi
  0x000000010f7d51fb: cmp    $0xffffff,%rbx
  0x000000010f7d5202: ja     0x000000010f7d52ba
  0x000000010f7d5208: movabs $0x17,%rsi
  0x000000010f7d5212: lea    (%rsi,%rbx,2),%rsi
  0x000000010f7d5216: and    $0xfffffffffffffff8,%rsi
  0x000000010f7d521a: mov    0x60(%r15),%rax
  0x000000010f7d521e: lea    (%rax,%rsi,1),%rsi
  0x000000010f7d5222: cmp    0x70(%r15),%rsi
  0x000000010f7d5226: ja     0x000000010f7d52ba
  0x000000010f7d522c: mov    %rsi,0x60(%r15)
  0x000000010f7d5230: sub    %rax,%rsi
  0x000000010f7d5233: movq   $0x1,(%rax)
  0x000000010f7d523a: mov    %rdx,%rcx
  0x000000010f7d523d: shr    $0x3,%rcx
  0x000000010f7d5241: mov    %ecx,0x8(%rax)
  0x000000010f7d5244: mov    %ebx,0xc(%rax)
  0x000000010f7d5247: sub    $0x10,%rsi
  0x000000010f7d524b: je     0x000000010f7d5262
  0x000000010f7d5251: xor    %rbx,%rbx
  0x000000010f7d5254: shr    $0x3,%rsi
  0x000000010f7d5258: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000010f7d525d: dec    %rsi
  0x000000010f7d5260: jne    0x000000010f7d5258  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::<init>@6 (line 68)

  0x000000010f7d5262: mov    %rax,%r10
  0x000000010f7d5265: shr    $0x3,%r10
  0x000000010f7d5269: mov    %r10d,0x10(%r8)
  0x000000010f7d526d: shr    $0x9,%r8
  0x000000010f7d5271: movabs $0x1065b9000,%rsi
  0x000000010f7d527b: movb   $0x0,(%r8,%rsi,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::<init>@8 (line 68)

  0x000000010f7d5280: add    $0x30,%rsp
  0x000000010f7d5284: pop    %rbp
  0x000000010f7d5285: test   %eax,-0x8d3a18b(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7d528b: retq   
  0x000000010f7d528c: mov    %rbx,0x8(%rsp)
  0x000000010f7d5291: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7d5299: callq  0x000000010f7d1a20  ; OopMap{r8=Oop off=350}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::<init>@-1 (line 67)
                                                ;   {runtime_call}
  0x000000010f7d529e: jmpq   0x000000010f7d51a1
  0x000000010f7d52a3: mov    %rbx,0x8(%rsp)
  0x000000010f7d52a8: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7d52b0: callq  0x000000010f7d1a20  ; OopMap{r8=Oop off=373}
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::<init>@1 (line 67)
                                                ;   {runtime_call}
  0x000000010f7d52b5: jmpq   0x000000010f7d51e8
  0x000000010f7d52ba: callq  0x000000010f7ce120  ; OopMap{r8=Oop off=383}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::<init>@6 (line 68)
                                                ;   {runtime_call}
  0x000000010f7d52bf: jmp    0x000000010f7d5262
  0x000000010f7d52c1: nop
  0x000000010f7d52c2: nop
  0x000000010f7d52c3: mov    0x2a8(%r15),%rax
  0x000000010f7d52ca: movabs $0x0,%r10
  0x000000010f7d52d4: mov    %r10,0x2a8(%r15)
  0x000000010f7d52db: movabs $0x0,%r10
  0x000000010f7d52e5: mov    %r10,0x2b0(%r15)
  0x000000010f7d52ec: add    $0x30,%rsp
  0x000000010f7d52f0: pop    %rbp
  0x000000010f7d52f1: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7d52f6: hlt    
  0x000000010f7d52f7: hlt    
  0x000000010f7d52f8: hlt    
  0x000000010f7d52f9: hlt    
  0x000000010f7d52fa: hlt    
  0x000000010f7d52fb: hlt    
  0x000000010f7d52fc: hlt    
  0x000000010f7d52fd: hlt    
  0x000000010f7d52fe: hlt    
  0x000000010f7d52ff: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f7d5300: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f7d5305: mov    %rsp,-0x28(%rsp)
  0x000000010f7d530a: sub    $0x80,%rsp
  0x000000010f7d5311: mov    %rax,0x78(%rsp)
  0x000000010f7d5316: mov    %rcx,0x70(%rsp)
  0x000000010f7d531b: mov    %rdx,0x68(%rsp)
  0x000000010f7d5320: mov    %rbx,0x60(%rsp)
  0x000000010f7d5325: mov    %rbp,0x50(%rsp)
  0x000000010f7d532a: mov    %rsi,0x48(%rsp)
  0x000000010f7d532f: mov    %rdi,0x40(%rsp)
  0x000000010f7d5334: mov    %r8,0x38(%rsp)
  0x000000010f7d5339: mov    %r9,0x30(%rsp)
  0x000000010f7d533e: mov    %r10,0x28(%rsp)
  0x000000010f7d5343: mov    %r11,0x20(%rsp)
  0x000000010f7d5348: mov    %r12,0x18(%rsp)
  0x000000010f7d534d: mov    %r13,0x10(%rsp)
  0x000000010f7d5352: mov    %r14,0x8(%rsp)
  0x000000010f7d5357: mov    %r15,(%rsp)
  0x000000010f7d535b: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7d5365: movabs $0x10f7d5305,%rsi  ;   {internal_word}
  0x000000010f7d536f: mov    %rsp,%rdx
  0x000000010f7d5372: and    $0xfffffffffffffff0,%rsp
  0x000000010f7d5376: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7d537b: hlt    
[Deopt Handler Code]
  0x000000010f7d537c: movabs $0x10f7d537c,%r10  ;   {section_word}
  0x000000010f7d5386: push   %r10
  0x000000010f7d5388: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7d538d: hlt    
  0x000000010f7d538e: hlt    
  0x000000010f7d538f: hlt    
Decoding compiled method 0x000000010f7d45d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ea69618} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x000000010f7d4760: mov    0x8(%rsi),%r10d
  0x000000010f7d4764: shl    $0x3,%r10
  0x000000010f7d4768: cmp    %rax,%r10
  0x000000010f7d476b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7d4771: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7d477c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7d4780: mov    %eax,-0x14000(%rsp)
  0x000000010f7d4787: push   %rbp
  0x000000010f7d4788: sub    $0x30,%rsp
  0x000000010f7d478c: movabs $0x10ec3a9e8,%rax  ;   {metadata(method data for {method} {0x000000010ea69618} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010f7d4796: mov    0xdc(%rax),%edi
  0x000000010f7d479c: add    $0x8,%edi
  0x000000010f7d479f: mov    %edi,0xdc(%rax)
  0x000000010f7d47a5: movabs $0x10ea69618,%rax  ;   {metadata({method} {0x000000010ea69618} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010f7d47af: and    $0x1ff8,%edi
  0x000000010f7d47b5: cmp    $0x0,%edi
  0x000000010f7d47b8: je     0x000000010f7d4b86  ;*aload_0
                                                ; - java.lang.String::equals@0 (line 977)

  0x000000010f7d47be: cmp    %rdx,%rsi
  0x000000010f7d47c1: movabs $0x10ec3a9e8,%rax  ;   {metadata(method data for {method} {0x000000010ea69618} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010f7d47cb: movabs $0x108,%rdi
  0x000000010f7d47d5: jne    0x000000010f7d47e5
  0x000000010f7d47db: movabs $0x118,%rdi
  0x000000010f7d47e5: mov    (%rax,%rdi,1),%rbx
  0x000000010f7d47e9: lea    0x1(%rbx),%rbx
  0x000000010f7d47ed: mov    %rbx,(%rax,%rdi,1)
  0x000000010f7d47f1: je     0x000000010f7d4b75  ;*if_acmpne
                                                ; - java.lang.String::equals@2 (line 977)

  0x000000010f7d47f7: cmp    $0x0,%rdx
  0x000000010f7d47fb: jne    0x000000010f7d4816
  0x000000010f7d47fd: movabs $0x10ec3a9e8,%rbx  ;   {metadata(method data for {method} {0x000000010ea69618} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010f7d4807: orl    $0x100,0x120(%rbx)
  0x000000010f7d4811: jmpq   0x000000010f7d48d6
  0x000000010f7d4816: movabs $0x7c00016d0,%rcx  ;   {metadata('java/lang/String')}
  0x000000010f7d4820: mov    0x8(%rdx),%edi
  0x000000010f7d4823: shl    $0x3,%rdi
  0x000000010f7d4827: cmp    %rdi,%rcx
  0x000000010f7d482a: jne    0x000000010f7d48ba
  0x000000010f7d4830: movabs $0x10ec3a9e8,%rbx  ;   {metadata(method data for {method} {0x000000010ea69618} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010f7d483a: mov    0x8(%rdx),%ecx
  0x000000010f7d483d: shl    $0x3,%rcx
  0x000000010f7d4841: cmp    0x130(%rbx),%rcx
  0x000000010f7d4848: jne    0x000000010f7d4857
  0x000000010f7d484a: addq   $0x1,0x138(%rbx)
  0x000000010f7d4852: jmpq   0x000000010f7d48db
  0x000000010f7d4857: cmp    0x140(%rbx),%rcx
  0x000000010f7d485e: jne    0x000000010f7d486d
  0x000000010f7d4860: addq   $0x1,0x148(%rbx)
  0x000000010f7d4868: jmpq   0x000000010f7d48db
  0x000000010f7d486d: cmpq   $0x0,0x130(%rbx)
  0x000000010f7d4878: jne    0x000000010f7d4891
  0x000000010f7d487a: mov    %rcx,0x130(%rbx)
  0x000000010f7d4881: movq   $0x1,0x138(%rbx)
  0x000000010f7d488c: jmpq   0x000000010f7d48db
  0x000000010f7d4891: cmpq   $0x0,0x140(%rbx)
  0x000000010f7d489c: jne    0x000000010f7d48b5
  0x000000010f7d489e: mov    %rcx,0x140(%rbx)
  0x000000010f7d48a5: movq   $0x1,0x148(%rbx)
  0x000000010f7d48b0: jmpq   0x000000010f7d48db
  0x000000010f7d48b5: jmpq   0x000000010f7d48db
  0x000000010f7d48ba: movabs $0x10ec3a9e8,%rbx  ;   {metadata(method data for {method} {0x000000010ea69618} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010f7d48c4: subq   $0x1,0x128(%rbx)
  0x000000010f7d48cc: jmpq   0x000000010f7d48d6
  0x000000010f7d48d1: jmpq   0x000000010f7d48db
  0x000000010f7d48d6: xor    %rax,%rax
  0x000000010f7d48d9: jmp    0x000000010f7d48e5
  0x000000010f7d48db: movabs $0x1,%rax          ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)

  0x000000010f7d48e5: cmp    $0x0,%eax
  0x000000010f7d48e8: movabs $0x10ec3a9e8,%rax  ;   {metadata(method data for {method} {0x000000010ea69618} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010f7d48f2: movabs $0x158,%rdi
  0x000000010f7d48fc: je     0x000000010f7d490c
  0x000000010f7d4902: movabs $0x168,%rdi
  0x000000010f7d490c: mov    (%rax,%rdi,1),%rbx
  0x000000010f7d4910: lea    0x1(%rbx),%rbx
  0x000000010f7d4914: mov    %rbx,(%rax,%rdi,1)
  0x000000010f7d4918: je     0x000000010f7d4b64  ;*ifeq
                                                ; - java.lang.String::equals@11 (line 980)

  0x000000010f7d491e: cmp    $0x0,%rdx
  0x000000010f7d4922: jne    0x000000010f7d493d
  0x000000010f7d4924: movabs $0x10ec3a9e8,%rbx  ;   {metadata(method data for {method} {0x000000010ea69618} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010f7d492e: orl    $0x100,0x170(%rbx)
  0x000000010f7d4938: jmpq   0x000000010f7d49fd
  0x000000010f7d493d: movabs $0x7c00016d0,%rax  ;   {metadata('java/lang/String')}
  0x000000010f7d4947: mov    0x8(%rdx),%edi
  0x000000010f7d494a: shl    $0x3,%rdi
  0x000000010f7d494e: cmp    %rdi,%rax
  0x000000010f7d4951: jne    0x000000010f7d49e1
  0x000000010f7d4957: movabs $0x10ec3a9e8,%rbx  ;   {metadata(method data for {method} {0x000000010ea69618} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010f7d4961: mov    0x8(%rdx),%eax
  0x000000010f7d4964: shl    $0x3,%rax
  0x000000010f7d4968: cmp    0x180(%rbx),%rax
  0x000000010f7d496f: jne    0x000000010f7d497e
  0x000000010f7d4971: addq   $0x1,0x188(%rbx)
  0x000000010f7d4979: jmpq   0x000000010f7d49fd
  0x000000010f7d497e: cmp    0x190(%rbx),%rax
  0x000000010f7d4985: jne    0x000000010f7d4994
  0x000000010f7d4987: addq   $0x1,0x198(%rbx)
  0x000000010f7d498f: jmpq   0x000000010f7d49fd
  0x000000010f7d4994: cmpq   $0x0,0x180(%rbx)
  0x000000010f7d499f: jne    0x000000010f7d49b8
  0x000000010f7d49a1: mov    %rax,0x180(%rbx)
  0x000000010f7d49a8: movq   $0x1,0x188(%rbx)
  0x000000010f7d49b3: jmpq   0x000000010f7d49fd
  0x000000010f7d49b8: cmpq   $0x0,0x190(%rbx)
  0x000000010f7d49c3: jne    0x000000010f7d49dc
  0x000000010f7d49c5: mov    %rax,0x190(%rbx)
  0x000000010f7d49cc: movq   $0x1,0x198(%rbx)
  0x000000010f7d49d7: jmpq   0x000000010f7d49fd
  0x000000010f7d49dc: jmpq   0x000000010f7d49fd
  0x000000010f7d49e1: movabs $0x10ec3a9e8,%rbx  ;   {metadata(method data for {method} {0x000000010ea69618} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010f7d49eb: subq   $0x1,0x178(%rbx)
  0x000000010f7d49f3: jmpq   0x000000010f7d4b9d
  0x000000010f7d49f8: jmpq   0x000000010f7d49fd
  0x000000010f7d49fd: mov    %rdx,%rax          ;*checkcast
                                                ; - java.lang.String::equals@15 (line 981)

  0x000000010f7d4a00: mov    0xc(%rsi),%esi
  0x000000010f7d4a03: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::equals@20 (line 982)

  0x000000010f7d4a07: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)
                                                ; implicit exception: dispatches to 0x000000010f7d4ba6
  0x000000010f7d4a0a: mov    0xc(%rax),%eax     ; implicit exception: dispatches to 0x000000010f7d4bab
  0x000000010f7d4a0d: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::equals@27 (line 983)

  0x000000010f7d4a11: mov    0xc(%rax),%ebx     ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ; implicit exception: dispatches to 0x000000010f7d4bb0
  0x000000010f7d4a14: cmp    %ebx,%edi
  0x000000010f7d4a16: movabs $0x10ec3a9e8,%rbx  ;   {metadata(method data for {method} {0x000000010ea69618} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010f7d4a20: movabs $0x1a8,%rdx
  0x000000010f7d4a2a: jne    0x000000010f7d4a3a
  0x000000010f7d4a30: movabs $0x1b8,%rdx
  0x000000010f7d4a3a: mov    (%rbx,%rdx,1),%rcx
  0x000000010f7d4a3e: lea    0x1(%rcx),%rcx
  0x000000010f7d4a42: mov    %rcx,(%rbx,%rdx,1)
  0x000000010f7d4a46: jne    0x000000010f7d4b64  ;*if_icmpne
                                                ; - java.lang.String::equals@31 (line 983)

  0x000000010f7d4a4c: mov    $0x0,%ebx
  0x000000010f7d4a51: jmpq   0x000000010f7d4aff  ;*iload_3
                                                ; - java.lang.String::equals@49 (line 987)

  0x000000010f7d4a56: xchg   %ax,%ax
  0x000000010f7d4a58: movslq %ebx,%rdi
  0x000000010f7d4a5b: cmp    0xc(%rsi),%ebx
  0x000000010f7d4a5e: jae    0x000000010f7d4bb5
  0x000000010f7d4a64: movzwl 0x10(%rsi,%rdi,2),%edi  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x000000010f7d4a69: movslq %ebx,%rcx
  0x000000010f7d4a6c: cmp    0xc(%rax),%ebx
  0x000000010f7d4a6f: jae    0x000000010f7d4bbe
  0x000000010f7d4a75: movzwl 0x10(%rax,%rcx,2),%ecx  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x000000010f7d4a7a: cmp    %ecx,%edi
  0x000000010f7d4a7c: movabs $0x10ec3a9e8,%rdi  ;   {metadata(method data for {method} {0x000000010ea69618} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010f7d4a86: movabs $0x1e8,%rcx
  0x000000010f7d4a90: je     0x000000010f7d4aa0
  0x000000010f7d4a96: movabs $0x1f8,%rcx
  0x000000010f7d4aa0: mov    (%rdi,%rcx,1),%r8
  0x000000010f7d4aa4: lea    0x1(%r8),%r8
  0x000000010f7d4aa8: mov    %r8,(%rdi,%rcx,1)
  0x000000010f7d4aac: jne    0x000000010f7d4b42  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x000000010f7d4ab2: inc    %ebx
  0x000000010f7d4ab4: movabs $0x10ec3a9e8,%rdi  ;   {metadata(method data for {method} {0x000000010ea69618} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010f7d4abe: mov    0xe0(%rdi),%ecx
  0x000000010f7d4ac4: add    $0x8,%ecx
  0x000000010f7d4ac7: mov    %ecx,0xe0(%rdi)
  0x000000010f7d4acd: movabs $0x10ea69618,%rdi  ;   {metadata({method} {0x000000010ea69618} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010f7d4ad7: and    $0xfff8,%ecx
  0x000000010f7d4add: cmp    $0x0,%ecx
  0x000000010f7d4ae0: je     0x000000010f7d4bc7  ; OopMap{rax=Oop rsi=Oop off=902}
                                                ;*goto
                                                ; - java.lang.String::equals@74 (line 990)

  0x000000010f7d4ae6: test   %eax,-0x8d399ec(%rip)        # 0x0000000106a9b100
                                                ;   {poll}
  0x000000010f7d4aec: movabs $0x10ec3a9e8,%rdi  ;   {metadata(method data for {method} {0x000000010ea69618} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010f7d4af6: incl   0x208(%rdi)
  0x000000010f7d4afc: mov    %rdx,%rdi          ;*goto
                                                ; - java.lang.String::equals@74 (line 990)

  0x000000010f7d4aff: mov    %rdi,%rdx
  0x000000010f7d4b02: dec    %edx
  0x000000010f7d4b04: cmp    $0x0,%edi
  0x000000010f7d4b07: movabs $0x10ec3a9e8,%rdi  ;   {metadata(method data for {method} {0x000000010ea69618} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010f7d4b11: movabs $0x1c8,%rcx
  0x000000010f7d4b1b: je     0x000000010f7d4b2b
  0x000000010f7d4b21: movabs $0x1d8,%rcx
  0x000000010f7d4b2b: mov    (%rdi,%rcx,1),%r8
  0x000000010f7d4b2f: lea    0x1(%r8),%r8
  0x000000010f7d4b33: mov    %r8,(%rdi,%rcx,1)
  0x000000010f7d4b37: je     0x000000010f7d4b53
  0x000000010f7d4b3d: jmpq   0x000000010f7d4a58  ;*ifeq
                                                ; - java.lang.String::equals@53 (line 987)

  0x000000010f7d4b42: mov    $0x0,%eax
  0x000000010f7d4b47: add    $0x30,%rsp
  0x000000010f7d4b4b: pop    %rbp
  0x000000010f7d4b4c: test   %eax,-0x8d39a52(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7d4b52: retq                      ;*ireturn
                                                ; - java.lang.String::equals@70 (line 989)

  0x000000010f7d4b53: mov    $0x1,%eax
  0x000000010f7d4b58: add    $0x30,%rsp
  0x000000010f7d4b5c: pop    %rbp
  0x000000010f7d4b5d: test   %eax,-0x8d39a63(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7d4b63: retq                      ;*ireturn
                                                ; - java.lang.String::equals@78 (line 992)

  0x000000010f7d4b64: mov    $0x0,%eax
  0x000000010f7d4b69: add    $0x30,%rsp
  0x000000010f7d4b6d: pop    %rbp
  0x000000010f7d4b6e: test   %eax,-0x8d39a74(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7d4b74: retq                      ;*ireturn
                                                ; - java.lang.String::equals@80 (line 995)

  0x000000010f7d4b75: mov    $0x1,%eax
  0x000000010f7d4b7a: add    $0x30,%rsp
  0x000000010f7d4b7e: pop    %rbp
  0x000000010f7d4b7f: test   %eax,-0x8d39a85(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7d4b85: retq   
  0x000000010f7d4b86: mov    %rax,0x8(%rsp)
  0x000000010f7d4b8b: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7d4b93: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop rdx=Oop off=1080}
                                                ;*synchronization entry
                                                ; - java.lang.String::equals@-1 (line 977)
                                                ;   {runtime_call}
  0x000000010f7d4b98: jmpq   0x000000010f7d47be
  0x000000010f7d4b9d: mov    %rdx,(%rsp)
  0x000000010f7d4ba1: callq  0x000000010f7cf480  ; OopMap{rsi=Oop off=1094}
                                                ;*checkcast
                                                ; - java.lang.String::equals@15 (line 981)
                                                ;   {runtime_call}
  0x000000010f7d4ba6: callq  0x000000010f7cd0c0  ; OopMap{rax=Oop rsi=Oop off=1099}
                                                ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)
                                                ;   {runtime_call}
  0x000000010f7d4bab: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop off=1104}
                                                ;*getfield value
                                                ; - java.lang.String::equals@27 (line 983)
                                                ;   {runtime_call}
  0x000000010f7d4bb0: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop rax=Oop off=1109}
                                                ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ;   {runtime_call}
  0x000000010f7d4bb5: mov    %rbx,(%rsp)
  0x000000010f7d4bb9: callq  0x000000010f7cca00  ; OopMap{rax=Oop rsi=Oop off=1118}
                                                ;*caload
                                                ; - java.lang.String::equals@60 (line 988)
                                                ;   {runtime_call}
  0x000000010f7d4bbe: mov    %rbx,(%rsp)
  0x000000010f7d4bc2: callq  0x000000010f7cca00  ; OopMap{rax=Oop rsi=Oop off=1127}
                                                ;*caload
                                                ; - java.lang.String::equals@65 (line 988)
                                                ;   {runtime_call}
  0x000000010f7d4bc7: mov    %rdi,0x8(%rsp)
  0x000000010f7d4bcc: movq   $0x4a,(%rsp)
  0x000000010f7d4bd4: callq  0x000000010f7d1a20  ; OopMap{rax=Oop rsi=Oop off=1145}
                                                ;*goto
                                                ; - java.lang.String::equals@74 (line 990)
                                                ;   {runtime_call}
  0x000000010f7d4bd9: jmpq   0x000000010f7d4ae6
  0x000000010f7d4bde: nop
  0x000000010f7d4bdf: nop
  0x000000010f7d4be0: mov    0x2a8(%r15),%rax
  0x000000010f7d4be7: movabs $0x0,%r10
  0x000000010f7d4bf1: mov    %r10,0x2a8(%r15)
  0x000000010f7d4bf8: movabs $0x0,%r10
  0x000000010f7d4c02: mov    %r10,0x2b0(%r15)
  0x000000010f7d4c09: add    $0x30,%rsp
  0x000000010f7d4c0d: pop    %rbp
  0x000000010f7d4c0e: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7d4c13: hlt    
  0x000000010f7d4c14: hlt    
  0x000000010f7d4c15: hlt    
  0x000000010f7d4c16: hlt    
  0x000000010f7d4c17: hlt    
  0x000000010f7d4c18: hlt    
  0x000000010f7d4c19: hlt    
  0x000000010f7d4c1a: hlt    
  0x000000010f7d4c1b: hlt    
  0x000000010f7d4c1c: hlt    
  0x000000010f7d4c1d: hlt    
  0x000000010f7d4c1e: hlt    
  0x000000010f7d4c1f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f7d4c20: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f7d4c25: mov    %rsp,-0x28(%rsp)
  0x000000010f7d4c2a: sub    $0x80,%rsp
  0x000000010f7d4c31: mov    %rax,0x78(%rsp)
  0x000000010f7d4c36: mov    %rcx,0x70(%rsp)
  0x000000010f7d4c3b: mov    %rdx,0x68(%rsp)
  0x000000010f7d4c40: mov    %rbx,0x60(%rsp)
  0x000000010f7d4c45: mov    %rbp,0x50(%rsp)
  0x000000010f7d4c4a: mov    %rsi,0x48(%rsp)
  0x000000010f7d4c4f: mov    %rdi,0x40(%rsp)
  0x000000010f7d4c54: mov    %r8,0x38(%rsp)
  0x000000010f7d4c59: mov    %r9,0x30(%rsp)
  0x000000010f7d4c5e: mov    %r10,0x28(%rsp)
  0x000000010f7d4c63: mov    %r11,0x20(%rsp)
  0x000000010f7d4c68: mov    %r12,0x18(%rsp)
  0x000000010f7d4c6d: mov    %r13,0x10(%rsp)
  0x000000010f7d4c72: mov    %r14,0x8(%rsp)
  0x000000010f7d4c77: mov    %r15,(%rsp)
  0x000000010f7d4c7b: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7d4c85: movabs $0x10f7d4c25,%rsi  ;   {internal_word}
  0x000000010f7d4c8f: mov    %rsp,%rdx
  0x000000010f7d4c92: and    $0xfffffffffffffff0,%rsp
  0x000000010f7d4c96: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7d4c9b: hlt    
[Deopt Handler Code]
  0x000000010f7d4c9c: movabs $0x10f7d4c9c,%r10  ;   {section_word}
  0x000000010f7d4ca6: push   %r10
  0x000000010f7d4ca8: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7d4cad: hlt    
  0x000000010f7d4cae: hlt    
  0x000000010f7d4caf: hlt    
Decoding compiled method 0x000000010f7d6390:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ebccea8} 'normalize' '(Ljava/lang/String;)Ljava/lang/String;' in 'java/io/UnixFileSystem'
  # this:     rsi:rsi   = 'java/io/UnixFileSystem'
  # parm0:    rdx:rdx   = 'java/lang/String'
  #           [sp+0x90]  (sp of caller)
  0x000000010f7d6560: mov    0x8(%rsi),%r10d
  0x000000010f7d6564: shl    $0x3,%r10
  0x000000010f7d6568: cmp    %rax,%r10
  0x000000010f7d656b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7d6571: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7d657c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7d6580: mov    %eax,-0x14000(%rsp)
  0x000000010f7d6587: push   %rbp
  0x000000010f7d6588: sub    $0x80,%rsp
  0x000000010f7d658f: movabs $0x10ec7aa08,%rcx  ;   {metadata(method data for {method} {0x000000010ebccea8} 'normalize' '(Ljava/lang/String;)Ljava/lang/String;' in 'java/io/UnixFileSystem')}
  0x000000010f7d6599: mov    0xdc(%rcx),%r8d
  0x000000010f7d65a0: add    $0x8,%r8d
  0x000000010f7d65a4: mov    %r8d,0xdc(%rcx)
  0x000000010f7d65ab: movabs $0x10ebccea8,%rcx  ;   {metadata({method} {0x000000010ebccea8} 'normalize' '(Ljava/lang/String;)Ljava/lang/String;' in 'java/io/UnixFileSystem')}
  0x000000010f7d65b5: and    $0x1ff8,%r8d
  0x000000010f7d65bc: cmp    $0x0,%r8d
  0x000000010f7d65c0: je     0x000000010f7d6a16  ;*aload_1
                                                ; - java.io.UnixFileSystem::normalize@0 (line 84)

  0x000000010f7d65c6: cmp    (%rdx),%rax        ;*invokevirtual length
                                                ; - java.io.UnixFileSystem::normalize@1 (line 84)
                                                ; implicit exception: dispatches to 0x000000010f7d6a2d
  0x000000010f7d65c9: mov    %rdx,%rcx
  0x000000010f7d65cc: movabs $0x10ec7aa08,%r8   ;   {metadata(method data for {method} {0x000000010ebccea8} 'normalize' '(Ljava/lang/String;)Ljava/lang/String;' in 'java/io/UnixFileSystem')}
  0x000000010f7d65d6: mov    0x8(%rcx),%ecx
  0x000000010f7d65d9: shl    $0x3,%rcx
  0x000000010f7d65dd: cmp    0x110(%r8),%rcx
  0x000000010f7d65e4: jne    0x000000010f7d65f3
  0x000000010f7d65e6: addq   $0x1,0x118(%r8)
  0x000000010f7d65ee: jmpq   0x000000010f7d6659
  0x000000010f7d65f3: cmp    0x120(%r8),%rcx
  0x000000010f7d65fa: jne    0x000000010f7d6609
  0x000000010f7d65fc: addq   $0x1,0x128(%r8)
  0x000000010f7d6604: jmpq   0x000000010f7d6659
  0x000000010f7d6609: cmpq   $0x0,0x110(%r8)
  0x000000010f7d6614: jne    0x000000010f7d662d
  0x000000010f7d6616: mov    %rcx,0x110(%r8)
  0x000000010f7d661d: movq   $0x1,0x118(%r8)
  0x000000010f7d6628: jmpq   0x000000010f7d6659
  0x000000010f7d662d: cmpq   $0x0,0x120(%r8)
  0x000000010f7d6638: jne    0x000000010f7d6651
  0x000000010f7d663a: mov    %rcx,0x120(%r8)
  0x000000010f7d6641: movq   $0x1,0x128(%r8)
  0x000000010f7d664c: jmpq   0x000000010f7d6659
  0x000000010f7d6651: addq   $0x1,0x108(%r8)
  0x000000010f7d6659: movabs $0x10ec39558,%rcx  ;   {metadata(method data for {method} {0x000000010ea68c60} 'length' '()I' in 'java/lang/String')}
  0x000000010f7d6663: mov    0xdc(%rcx),%r8d
  0x000000010f7d666a: add    $0x8,%r8d
  0x000000010f7d666e: mov    %r8d,0xdc(%rcx)
  0x000000010f7d6675: movabs $0x10ea68c60,%rcx  ;   {metadata({method} {0x000000010ea68c60} 'length' '()I' in 'java/lang/String')}
  0x000000010f7d667f: and    $0x7ffff8,%r8d
  0x000000010f7d6686: cmp    $0x0,%r8d
  0x000000010f7d668a: je     0x000000010f7d6a32
  0x000000010f7d6690: mov    0xc(%rdx),%ecx
  0x000000010f7d6693: shl    $0x3,%rcx          ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - java.io.UnixFileSystem::normalize@1 (line 84)

  0x000000010f7d6697: mov    0xc(%rcx),%edi     ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.io.UnixFileSystem::normalize@1 (line 84)
                                                ; implicit exception: dispatches to 0x000000010f7d6a49
  0x000000010f7d669a: mov    $0x0,%ebx
  0x000000010f7d669f: mov    $0x0,%ecx          ;*iload
                                                ; - java.io.UnixFileSystem::normalize@10 (line 86)

  0x000000010f7d66a4: nopl   0x0(%rax)
  0x000000010f7d66a8: cmp    %edi,%ebx
  0x000000010f7d66aa: movabs $0x10ec7aa08,%r8   ;   {metadata(method data for {method} {0x000000010ebccea8} 'normalize' '(Ljava/lang/String;)Ljava/lang/String;' in 'java/io/UnixFileSystem')}
  0x000000010f7d66b4: movabs $0x138,%rax
  0x000000010f7d66be: jge    0x000000010f7d66ce
  0x000000010f7d66c4: movabs $0x148,%rax
  0x000000010f7d66ce: mov    (%r8,%rax,1),%r9
  0x000000010f7d66d2: lea    0x1(%r9),%r9
  0x000000010f7d66d6: mov    %r9,(%r8,%rax,1)
  0x000000010f7d66da: jge    0x000000010f7d6901  ;*if_icmpge
                                                ; - java.io.UnixFileSystem::normalize@13 (line 86)

  0x000000010f7d66e0: mov    %rdx,%r8
  0x000000010f7d66e3: movabs $0x10ec7aa08,%rax  ;   {metadata(method data for {method} {0x000000010ebccea8} 'normalize' '(Ljava/lang/String;)Ljava/lang/String;' in 'java/io/UnixFileSystem')}
  0x000000010f7d66ed: mov    0x8(%r8),%r8d
  0x000000010f7d66f1: shl    $0x3,%r8
  0x000000010f7d66f5: cmp    0x160(%rax),%r8
  0x000000010f7d66fc: jne    0x000000010f7d670b
  0x000000010f7d66fe: addq   $0x1,0x168(%rax)
  0x000000010f7d6706: jmpq   0x000000010f7d6771
  0x000000010f7d670b: cmp    0x170(%rax),%r8
  0x000000010f7d6712: jne    0x000000010f7d6721
  0x000000010f7d6714: addq   $0x1,0x178(%rax)
  0x000000010f7d671c: jmpq   0x000000010f7d6771
  0x000000010f7d6721: cmpq   $0x0,0x160(%rax)
  0x000000010f7d672c: jne    0x000000010f7d6745
  0x000000010f7d672e: mov    %r8,0x160(%rax)
  0x000000010f7d6735: movq   $0x1,0x168(%rax)
  0x000000010f7d6740: jmpq   0x000000010f7d6771
  0x000000010f7d6745: cmpq   $0x0,0x170(%rax)
  0x000000010f7d6750: jne    0x000000010f7d6769
  0x000000010f7d6752: mov    %r8,0x170(%rax)
  0x000000010f7d6759: movq   $0x1,0x178(%rax)
  0x000000010f7d6764: jmpq   0x000000010f7d6771
  0x000000010f7d6769: addq   $0x1,0x158(%rax)
  0x000000010f7d6771: movabs $0x10ebeb488,%r8   ;   {metadata(method data for {method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f7d677b: mov    0xdc(%r8),%eax
  0x000000010f7d6782: add    $0x8,%eax
  0x000000010f7d6785: mov    %eax,0xdc(%r8)
  0x000000010f7d678c: movabs $0x10ea68db0,%r8   ;   {metadata({method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f7d6796: and    $0x7ffff8,%eax
  0x000000010f7d679c: cmp    $0x0,%eax
  0x000000010f7d679f: je     0x000000010f7d6a4e
  0x000000010f7d67a5: cmp    $0x0,%ebx
  0x000000010f7d67a8: movabs $0x10ebeb488,%r8   ;   {metadata(method data for {method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f7d67b2: movabs $0x108,%rax
  0x000000010f7d67bc: jl     0x000000010f7d67cc
  0x000000010f7d67c2: movabs $0x118,%rax
  0x000000010f7d67cc: mov    (%r8,%rax,1),%r9
  0x000000010f7d67d0: lea    0x1(%r9),%r9
  0x000000010f7d67d4: mov    %r9,(%r8,%rax,1)
  0x000000010f7d67d8: jl     0x000000010f7d69bb  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)

  0x000000010f7d67de: mov    0xc(%rdx),%r8d
  0x000000010f7d67e2: shl    $0x3,%r8           ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)

  0x000000010f7d67e6: mov    0xc(%r8),%eax      ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)
                                                ; implicit exception: dispatches to 0x000000010f7d6a65
  0x000000010f7d67ea: cmp    %eax,%ebx
  0x000000010f7d67ec: movabs $0x10ebeb488,%rax  ;   {metadata(method data for {method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f7d67f6: movabs $0x128,%r9
  0x000000010f7d6800: jl     0x000000010f7d6810
  0x000000010f7d6806: movabs $0x138,%r9
  0x000000010f7d6810: mov    (%rax,%r9,1),%r11
  0x000000010f7d6814: lea    0x1(%r11),%r11
  0x000000010f7d6818: mov    %r11,(%rax,%r9,1)
  0x000000010f7d681c: jge    0x000000010f7d69bb  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)

  0x000000010f7d6822: movslq %ebx,%rax
  0x000000010f7d6825: cmp    0xc(%r8),%ebx
  0x000000010f7d6829: jae    0x000000010f7d6a6a
  0x000000010f7d682f: movzwl 0x10(%r8,%rax,2),%r8d  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)

  0x000000010f7d6835: and    $0xffff,%r8d
  0x000000010f7d683c: cmp    $0x2f,%ecx
  0x000000010f7d683f: movabs $0x10ec7aa08,%rcx  ;   {metadata(method data for {method} {0x000000010ebccea8} 'normalize' '(Ljava/lang/String;)Ljava/lang/String;' in 'java/io/UnixFileSystem')}
  0x000000010f7d6849: movabs $0x188,%rax
  0x000000010f7d6853: jne    0x000000010f7d6863
  0x000000010f7d6859: movabs $0x198,%rax
  0x000000010f7d6863: mov    (%rcx,%rax,1),%r9
  0x000000010f7d6867: lea    0x1(%r9),%r9
  0x000000010f7d686b: mov    %r9,(%rcx,%rax,1)
  0x000000010f7d686f: jne    0x000000010f7d68af  ;*if_icmpne
                                                ; - java.io.UnixFileSystem::normalize@27 (line 88)

  0x000000010f7d6875: cmp    $0x2f,%r8d
  0x000000010f7d6879: movabs $0x10ec7aa08,%rcx  ;   {metadata(method data for {method} {0x000000010ebccea8} 'normalize' '(Ljava/lang/String;)Ljava/lang/String;' in 'java/io/UnixFileSystem')}
  0x000000010f7d6883: movabs $0x1a8,%rax
  0x000000010f7d688d: jne    0x000000010f7d689d
  0x000000010f7d6893: movabs $0x1b8,%rax
  0x000000010f7d689d: mov    (%rcx,%rax,1),%r9
  0x000000010f7d68a1: lea    0x1(%r9),%r9
  0x000000010f7d68a5: mov    %r9,(%rcx,%rax,1)
  0x000000010f7d68a9: je     0x000000010f7d6985  ;*if_icmpne
                                                ; - java.io.UnixFileSystem::normalize@34 (line 88)

  0x000000010f7d68af: inc    %ebx
  0x000000010f7d68b1: movabs $0x10ec7aa08,%rcx  ;   {metadata(method data for {method} {0x000000010ebccea8} 'normalize' '(Ljava/lang/String;)Ljava/lang/String;' in 'java/io/UnixFileSystem')}
  0x000000010f7d68bb: mov    0xe0(%rcx),%eax
  0x000000010f7d68c1: add    $0x8,%eax
  0x000000010f7d68c4: mov    %eax,0xe0(%rcx)
  0x000000010f7d68ca: movabs $0x10ebccea8,%rcx  ;   {metadata({method} {0x000000010ebccea8} 'normalize' '(Ljava/lang/String;)Ljava/lang/String;' in 'java/io/UnixFileSystem')}
  0x000000010f7d68d4: and    $0xfff8,%eax
  0x000000010f7d68da: cmp    $0x0,%eax
  0x000000010f7d68dd: je     0x000000010f7d6a73  ; OopMap{rsi=Oop rdx=Oop off=899}
                                                ;*goto
                                                ; - java.io.UnixFileSystem::normalize@54 (line 86)

  0x000000010f7d68e3: test   %eax,-0x8d3b7e9(%rip)        # 0x0000000106a9b100
                                                ;   {poll}
  0x000000010f7d68e9: movabs $0x10ec7aa08,%rcx  ;   {metadata(method data for {method} {0x000000010ebccea8} 'normalize' '(Ljava/lang/String;)Ljava/lang/String;' in 'java/io/UnixFileSystem')}
  0x000000010f7d68f3: incl   0x1d8(%rcx)
  0x000000010f7d68f9: mov    %r8,%rcx
  0x000000010f7d68fc: jmpq   0x000000010f7d66a8  ;*goto
                                                ; - java.io.UnixFileSystem::normalize@54 (line 86)

  0x000000010f7d6901: cmp    $0x2f,%ecx
  0x000000010f7d6904: movabs $0x10ec7aa08,%rcx  ;   {metadata(method data for {method} {0x000000010ebccea8} 'normalize' '(Ljava/lang/String;)Ljava/lang/String;' in 'java/io/UnixFileSystem')}
  0x000000010f7d690e: movabs $0x1f0,%r8
  0x000000010f7d6918: jne    0x000000010f7d6928
  0x000000010f7d691e: movabs $0x200,%r8
  0x000000010f7d6928: mov    (%rcx,%r8,1),%rbx
  0x000000010f7d692c: lea    0x1(%rbx),%rbx
  0x000000010f7d6930: mov    %rbx,(%rcx,%r8,1)
  0x000000010f7d6934: jne    0x000000010f7d6973  ;*if_icmpne
                                                ; - java.io.UnixFileSystem::normalize@60 (line 92)

  0x000000010f7d693a: mov    %rsi,%rcx
  0x000000010f7d693d: movabs $0x10ec7aa08,%r8   ;   {metadata(method data for {method} {0x000000010ebccea8} 'normalize' '(Ljava/lang/String;)Ljava/lang/String;' in 'java/io/UnixFileSystem')}
  0x000000010f7d6947: addq   $0x1,0x210(%r8)
  0x000000010f7d694f: mov    %rdi,%r8
  0x000000010f7d6952: dec    %r8d
  0x000000010f7d6955: mov    %rdi,%rcx          ;*invokespecial normalize
                                                ; - java.io.UnixFileSystem::normalize@69 (line 92)

  0x000000010f7d6958: nop
  0x000000010f7d6959: nop
  0x000000010f7d695a: nop
  0x000000010f7d695b: nop
  0x000000010f7d695c: nop
  0x000000010f7d695d: nop
  0x000000010f7d695e: nop
  0x000000010f7d695f: callq  0x000000010f7170a0  ; OopMap{off=1028}
                                                ;*invokespecial normalize
                                                ; - java.io.UnixFileSystem::normalize@69 (line 92)
                                                ;   {optimized virtual_call}
  0x000000010f7d6964: add    $0x80,%rsp
  0x000000010f7d696b: pop    %rbp
  0x000000010f7d696c: test   %eax,-0x8d3b872(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7d6972: retq                      ;*areturn
                                                ; - java.io.UnixFileSystem::normalize@72 (line 92)

  0x000000010f7d6973: mov    %rdx,%rax
  0x000000010f7d6976: add    $0x80,%rsp
  0x000000010f7d697d: pop    %rbp
  0x000000010f7d697e: test   %eax,-0x8d3b884(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7d6984: retq                      ;*areturn
                                                ; - java.io.UnixFileSystem::normalize@74 (line 93)

  0x000000010f7d6985: mov    %rsi,%rcx
  0x000000010f7d6988: movabs $0x10ec7aa08,%r8   ;   {metadata(method data for {method} {0x000000010ebccea8} 'normalize' '(Ljava/lang/String;)Ljava/lang/String;' in 'java/io/UnixFileSystem')}
  0x000000010f7d6992: addq   $0x1,0x1c8(%r8)
  0x000000010f7d699a: dec    %ebx
  0x000000010f7d699c: mov    %rdi,%rcx
  0x000000010f7d699f: mov    %rbx,%r8           ;*invokespecial normalize
                                                ; - java.io.UnixFileSystem::normalize@44 (line 89)

  0x000000010f7d69a2: nop
  0x000000010f7d69a3: nop
  0x000000010f7d69a4: nop
  0x000000010f7d69a5: nop
  0x000000010f7d69a6: nop
  0x000000010f7d69a7: callq  0x000000010f7170a0  ; OopMap{off=1100}
                                                ;*invokespecial normalize
                                                ; - java.io.UnixFileSystem::normalize@44 (line 89)
                                                ;   {optimized virtual_call}
  0x000000010f7d69ac: add    $0x80,%rsp
  0x000000010f7d69b3: pop    %rbp
  0x000000010f7d69b4: test   %eax,-0x8d3b8ba(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7d69ba: retq                      ;*areturn
                                                ; - java.io.UnixFileSystem::normalize@47 (line 89)

  0x000000010f7d69bb: mov    %ecx,0x6c(%rsp)
  0x000000010f7d69bf: mov    %edi,0x68(%rsp)
  0x000000010f7d69c3: mov    %rdx,0x60(%rsp)
  0x000000010f7d69c8: mov    %rsi,0x58(%rsp)
  0x000000010f7d69cd: data16 xchg %ax,%ax
  0x000000010f7d69d0: jmpq   0x000000010f7d6a99  ;   {no_reloc}
  0x000000010f7d69d5: add    %al,(%rax)
  0x000000010f7d69d7: add    %al,(%rax)
  0x000000010f7d69d9: add    %ch,%cl
  0x000000010f7d69db: (bad)  
  0x000000010f7d69dc: add    %al,(%rax)
  0x000000010f7d69de: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)

  0x000000010f7d69e1: rorb   -0x47(%rcx)        ;   {metadata(method data for {method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f7d69e4: mov    %dh,0x10e(%rsi,%rdi,4)
  0x000000010f7d69eb: add    %cl,-0x7d(%rcx)
  0x000000010f7d69ee: orl    $0x48010000,0x1(%rax)
  0x000000010f7d69f5: mov    %ebx,%edx
  0x000000010f7d69f7: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)

  0x000000010f7d69fa: mov    %ebx,0x70(%rsp)
  0x000000010f7d69fe: mov    %rax,0x50(%rsp)
  0x000000010f7d6a03: nop
  0x000000010f7d6a04: nop
  0x000000010f7d6a05: nop
  0x000000010f7d6a06: nop
  0x000000010f7d6a07: callq  0x000000010f7170a0  ; OopMap{[80]=Oop [96]=Oop [88]=Oop off=1196}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)
                                                ;   {optimized virtual_call}
  0x000000010f7d6a0c: mov    0x50(%rsp),%rax
  0x000000010f7d6a11: jmpq   0x000000010f7d6adb
  0x000000010f7d6a16: mov    %rcx,0x8(%rsp)
  0x000000010f7d6a1b: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7d6a23: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop rdx=Oop off=1224}
                                                ;*synchronization entry
                                                ; - java.io.UnixFileSystem::normalize@-1 (line 84)
                                                ;   {runtime_call}
  0x000000010f7d6a28: jmpq   0x000000010f7d65c6
  0x000000010f7d6a2d: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop rdx=Oop off=1234}
                                                ;*invokevirtual length
                                                ; - java.io.UnixFileSystem::normalize@1 (line 84)
                                                ;   {runtime_call}
  0x000000010f7d6a32: mov    %rcx,0x8(%rsp)
  0x000000010f7d6a37: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7d6a3f: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop rdx=Oop off=1252}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ; - java.io.UnixFileSystem::normalize@1 (line 84)
                                                ;   {runtime_call}
  0x000000010f7d6a44: jmpq   0x000000010f7d6690
  0x000000010f7d6a49: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop rdx=Oop off=1262}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.io.UnixFileSystem::normalize@1 (line 84)
                                                ;   {runtime_call}
  0x000000010f7d6a4e: mov    %r8,0x8(%rsp)
  0x000000010f7d6a53: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7d6a5b: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop rdx=Oop off=1280}
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)
                                                ;   {runtime_call}
  0x000000010f7d6a60: jmpq   0x000000010f7d67a5
  0x000000010f7d6a65: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop rdx=Oop r8=Oop off=1290}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)
                                                ;   {runtime_call}
  0x000000010f7d6a6a: mov    %rbx,(%rsp)
  0x000000010f7d6a6e: callq  0x000000010f7cca00  ; OopMap{rsi=Oop rdx=Oop r8=Oop off=1299}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)
                                                ;   {runtime_call}
  0x000000010f7d6a73: mov    %rcx,0x8(%rsp)
  0x000000010f7d6a78: movq   $0x36,(%rsp)
  0x000000010f7d6a80: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop rdx=Oop off=1317}
                                                ;*goto
                                                ; - java.io.UnixFileSystem::normalize@54 (line 86)
                                                ;   {runtime_call}
  0x000000010f7d6a85: jmpq   0x000000010f7d68e3
  0x000000010f7d6a8a: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f7d6a94: mov    $0xa050f00,%eax
  0x000000010f7d6a99: callq  0x000000010f7d08e0  ; OopMap{[88]=Oop [96]=Oop off=1342}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)
                                                ;   {runtime_call}
  0x000000010f7d6a9e: jmpq   0x000000010f7d69d0
  0x000000010f7d6aa3: mov    %rdx,%rdx
  0x000000010f7d6aa6: callq  0x000000010f7cd560  ; OopMap{[88]=Oop [96]=Oop off=1355}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)
                                                ;   {runtime_call}
  0x000000010f7d6aab: jmpq   0x000000010f7d69df
  0x000000010f7d6ab0: nop
  0x000000010f7d6ab1: nop
  0x000000010f7d6ab2: mov    0x2a8(%r15),%rax
  0x000000010f7d6ab9: movabs $0x0,%r10
  0x000000010f7d6ac3: mov    %r10,0x2a8(%r15)
  0x000000010f7d6aca: movabs $0x0,%r10
  0x000000010f7d6ad4: mov    %r10,0x2b0(%r15)
  0x000000010f7d6adb: add    $0x80,%rsp
  0x000000010f7d6ae2: pop    %rbp
  0x000000010f7d6ae3: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7d6ae8: hlt    
  0x000000010f7d6ae9: hlt    
  0x000000010f7d6aea: hlt    
  0x000000010f7d6aeb: hlt    
  0x000000010f7d6aec: hlt    
  0x000000010f7d6aed: hlt    
  0x000000010f7d6aee: hlt    
  0x000000010f7d6aef: hlt    
  0x000000010f7d6af0: hlt    
  0x000000010f7d6af1: hlt    
  0x000000010f7d6af2: hlt    
  0x000000010f7d6af3: hlt    
  0x000000010f7d6af4: hlt    
  0x000000010f7d6af5: hlt    
  0x000000010f7d6af6: hlt    
  0x000000010f7d6af7: hlt    
  0x000000010f7d6af8: hlt    
  0x000000010f7d6af9: hlt    
  0x000000010f7d6afa: hlt    
  0x000000010f7d6afb: hlt    
  0x000000010f7d6afc: hlt    
  0x000000010f7d6afd: hlt    
  0x000000010f7d6afe: hlt    
  0x000000010f7d6aff: hlt    
[Stub Code]
  0x000000010f7d6b00: nop                       ;   {no_reloc}
  0x000000010f7d6b01: nop
  0x000000010f7d6b02: nop
  0x000000010f7d6b03: nop
  0x000000010f7d6b04: nop
  0x000000010f7d6b05: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7d6b0f: jmpq   0x000000010f7d6b0f  ;   {runtime_call}
  0x000000010f7d6b14: nop
  0x000000010f7d6b15: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7d6b1f: jmpq   0x000000010f7d6b1f  ;   {runtime_call}
  0x000000010f7d6b24: nop
  0x000000010f7d6b25: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7d6b2f: jmpq   0x000000010f7d6b2f  ;   {runtime_call}
[Exception Handler]
  0x000000010f7d6b34: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f7d6b39: mov    %rsp,-0x28(%rsp)
  0x000000010f7d6b3e: sub    $0x80,%rsp
  0x000000010f7d6b45: mov    %rax,0x78(%rsp)
  0x000000010f7d6b4a: mov    %rcx,0x70(%rsp)
  0x000000010f7d6b4f: mov    %rdx,0x68(%rsp)
  0x000000010f7d6b54: mov    %rbx,0x60(%rsp)
  0x000000010f7d6b59: mov    %rbp,0x50(%rsp)
  0x000000010f7d6b5e: mov    %rsi,0x48(%rsp)
  0x000000010f7d6b63: mov    %rdi,0x40(%rsp)
  0x000000010f7d6b68: mov    %r8,0x38(%rsp)
  0x000000010f7d6b6d: mov    %r9,0x30(%rsp)
  0x000000010f7d6b72: mov    %r10,0x28(%rsp)
  0x000000010f7d6b77: mov    %r11,0x20(%rsp)
  0x000000010f7d6b7c: mov    %r12,0x18(%rsp)
  0x000000010f7d6b81: mov    %r13,0x10(%rsp)
  0x000000010f7d6b86: mov    %r14,0x8(%rsp)
  0x000000010f7d6b8b: mov    %r15,(%rsp)
  0x000000010f7d6b8f: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7d6b99: movabs $0x10f7d6b39,%rsi  ;   {internal_word}
  0x000000010f7d6ba3: mov    %rsp,%rdx
  0x000000010f7d6ba6: and    $0xfffffffffffffff0,%rsp
  0x000000010f7d6baa: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7d6baf: hlt    
[Deopt Handler Code]
  0x000000010f7d6bb0: movabs $0x10f7d6bb0,%r10  ;   {section_word}
  0x000000010f7d6bba: push   %r10
  0x000000010f7d6bbc: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7d6bc1: hlt    
  0x000000010f7d6bc2: hlt    
  0x000000010f7d6bc3: hlt    
  0x000000010f7d6bc4: hlt    
  0x000000010f7d6bc5: hlt    
  0x000000010f7d6bc6: hlt    
  0x000000010f7d6bc7: hlt    
Decoding compiled method 0x000000010f7d2e10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ea68c60} 'length' '()I' in 'java/lang/String'
  #           [sp+0x40]  (sp of caller)
  0x000000010f7d2f80: mov    0x8(%rsi),%r10d
  0x000000010f7d2f84: shl    $0x3,%r10
  0x000000010f7d2f88: cmp    %rax,%r10
  0x000000010f7d2f8b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7d2f91: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7d2f9c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7d2fa0: mov    %eax,-0x14000(%rsp)
  0x000000010f7d2fa7: push   %rbp
  0x000000010f7d2fa8: sub    $0x30,%rsp
  0x000000010f7d2fac: movabs $0x10ec39558,%rax  ;   {metadata(method data for {method} {0x000000010ea68c60} 'length' '()I' in 'java/lang/String')}
  0x000000010f7d2fb6: mov    0xdc(%rax),%edi
  0x000000010f7d2fbc: add    $0x8,%edi
  0x000000010f7d2fbf: mov    %edi,0xdc(%rax)
  0x000000010f7d2fc5: movabs $0x10ea68c60,%rax  ;   {metadata({method} {0x000000010ea68c60} 'length' '()I' in 'java/lang/String')}
  0x000000010f7d2fcf: and    $0x1ff8,%edi
  0x000000010f7d2fd5: cmp    $0x0,%edi
  0x000000010f7d2fd8: je     0x000000010f7d2ff4  ;*aload_0
                                                ; - java.lang.String::length@0 (line 623)

  0x000000010f7d2fde: mov    0xc(%rsi),%eax
  0x000000010f7d2fe1: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)

  0x000000010f7d2fe5: mov    0xc(%rax),%eax     ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; implicit exception: dispatches to 0x000000010f7d3008
  0x000000010f7d2fe8: add    $0x30,%rsp
  0x000000010f7d2fec: pop    %rbp
  0x000000010f7d2fed: test   %eax,-0x8d37ef3(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7d2ff3: retq   
  0x000000010f7d2ff4: mov    %rax,0x8(%rsp)
  0x000000010f7d2ff9: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7d3001: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=134}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ;   {runtime_call}
  0x000000010f7d3006: jmp    0x000000010f7d2fde
  0x000000010f7d3008: callq  0x000000010f7cd0c0  ; OopMap{off=141}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ;   {runtime_call}
  0x000000010f7d300d: nop
  0x000000010f7d300e: nop
  0x000000010f7d300f: mov    0x2a8(%r15),%rax
  0x000000010f7d3016: movabs $0x0,%r10
  0x000000010f7d3020: mov    %r10,0x2a8(%r15)
  0x000000010f7d3027: movabs $0x0,%r10
  0x000000010f7d3031: mov    %r10,0x2b0(%r15)
  0x000000010f7d3038: add    $0x30,%rsp
  0x000000010f7d303c: pop    %rbp
  0x000000010f7d303d: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7d3042: hlt    
  0x000000010f7d3043: hlt    
  0x000000010f7d3044: hlt    
  0x000000010f7d3045: hlt    
  0x000000010f7d3046: hlt    
  0x000000010f7d3047: hlt    
  0x000000010f7d3048: hlt    
  0x000000010f7d3049: hlt    
  0x000000010f7d304a: hlt    
  0x000000010f7d304b: hlt    
  0x000000010f7d304c: hlt    
  0x000000010f7d304d: hlt    
  0x000000010f7d304e: hlt    
  0x000000010f7d304f: hlt    
  0x000000010f7d3050: hlt    
  0x000000010f7d3051: hlt    
  0x000000010f7d3052: hlt    
  0x000000010f7d3053: hlt    
  0x000000010f7d3054: hlt    
  0x000000010f7d3055: hlt    
  0x000000010f7d3056: hlt    
  0x000000010f7d3057: hlt    
  0x000000010f7d3058: hlt    
  0x000000010f7d3059: hlt    
  0x000000010f7d305a: hlt    
  0x000000010f7d305b: hlt    
  0x000000010f7d305c: hlt    
  0x000000010f7d305d: hlt    
  0x000000010f7d305e: hlt    
  0x000000010f7d305f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f7d3060: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f7d3065: mov    %rsp,-0x28(%rsp)
  0x000000010f7d306a: sub    $0x80,%rsp
  0x000000010f7d3071: mov    %rax,0x78(%rsp)
  0x000000010f7d3076: mov    %rcx,0x70(%rsp)
  0x000000010f7d307b: mov    %rdx,0x68(%rsp)
  0x000000010f7d3080: mov    %rbx,0x60(%rsp)
  0x000000010f7d3085: mov    %rbp,0x50(%rsp)
  0x000000010f7d308a: mov    %rsi,0x48(%rsp)
  0x000000010f7d308f: mov    %rdi,0x40(%rsp)
  0x000000010f7d3094: mov    %r8,0x38(%rsp)
  0x000000010f7d3099: mov    %r9,0x30(%rsp)
  0x000000010f7d309e: mov    %r10,0x28(%rsp)
  0x000000010f7d30a3: mov    %r11,0x20(%rsp)
  0x000000010f7d30a8: mov    %r12,0x18(%rsp)
  0x000000010f7d30ad: mov    %r13,0x10(%rsp)
  0x000000010f7d30b2: mov    %r14,0x8(%rsp)
  0x000000010f7d30b7: mov    %r15,(%rsp)
  0x000000010f7d30bb: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7d30c5: movabs $0x10f7d3065,%rsi  ;   {internal_word}
  0x000000010f7d30cf: mov    %rsp,%rdx
  0x000000010f7d30d2: and    $0xfffffffffffffff0,%rsp
  0x000000010f7d30d6: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7d30db: hlt    
[Deopt Handler Code]
  0x000000010f7d30dc: movabs $0x10f7d30dc,%r10  ;   {section_word}
  0x000000010f7d30e6: push   %r10
  0x000000010f7d30e8: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7d30ed: hlt    
  0x000000010f7d30ee: hlt    
  0x000000010f7d30ef: hlt    
Decoding compiled method 0x000000010f7d6050:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010ea7e778} 'getSecurityManager' '()Ljava/lang/SecurityManager;' in 'java/lang/System'
  #           [sp+0x40]  (sp of caller)
  0x000000010f7d61a0: mov    %eax,-0x14000(%rsp)
  0x000000010f7d61a7: push   %rbp
  0x000000010f7d61a8: sub    $0x30,%rsp
  0x000000010f7d61ac: movabs $0x10ec81848,%rax  ;   {metadata(method data for {method} {0x000000010ea7e778} 'getSecurityManager' '()Ljava/lang/SecurityManager;' in 'java/lang/System')}
  0x000000010f7d61b6: mov    0xdc(%rax),%esi
  0x000000010f7d61bc: add    $0x8,%esi
  0x000000010f7d61bf: mov    %esi,0xdc(%rax)
  0x000000010f7d61c5: movabs $0x10ea7e778,%rax  ;   {metadata({method} {0x000000010ea7e778} 'getSecurityManager' '()Ljava/lang/SecurityManager;' in 'java/lang/System')}
  0x000000010f7d61cf: and    $0x1ff8,%esi
  0x000000010f7d61d5: cmp    $0x0,%esi
  0x000000010f7d61d8: je     0x000000010f7d61fb
  0x000000010f7d61de: movabs $0x795580c78,%rax  ;   {oop(a 'java/lang/Class' = 'java/lang/System')}
  0x000000010f7d61e8: mov    0x74(%rax),%eax
  0x000000010f7d61eb: shl    $0x3,%rax          ;*getstatic security
                                                ; - java.lang.System::getSecurityManager@0 (line 334)

  0x000000010f7d61ef: add    $0x30,%rsp
  0x000000010f7d61f3: pop    %rbp
  0x000000010f7d61f4: test   %eax,-0x8d3b0fa(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7d61fa: retq   
  0x000000010f7d61fb: mov    %rax,0x8(%rsp)
  0x000000010f7d6200: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7d6208: callq  0x000000010f7d1a20  ; OopMap{off=109}
                                                ;*synchronization entry
                                                ; - java.lang.System::getSecurityManager@-1 (line 334)
                                                ;   {runtime_call}
  0x000000010f7d620d: jmp    0x000000010f7d61de
  0x000000010f7d620f: nop
  0x000000010f7d6210: nop
  0x000000010f7d6211: mov    0x2a8(%r15),%rax
  0x000000010f7d6218: movabs $0x0,%r10
  0x000000010f7d6222: mov    %r10,0x2a8(%r15)
  0x000000010f7d6229: movabs $0x0,%r10
  0x000000010f7d6233: mov    %r10,0x2b0(%r15)
  0x000000010f7d623a: add    $0x30,%rsp
  0x000000010f7d623e: pop    %rbp
  0x000000010f7d623f: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7d6244: hlt    
  0x000000010f7d6245: hlt    
  0x000000010f7d6246: hlt    
  0x000000010f7d6247: hlt    
  0x000000010f7d6248: hlt    
  0x000000010f7d6249: hlt    
  0x000000010f7d624a: hlt    
  0x000000010f7d624b: hlt    
  0x000000010f7d624c: hlt    
  0x000000010f7d624d: hlt    
  0x000000010f7d624e: hlt    
  0x000000010f7d624f: hlt    
  0x000000010f7d6250: hlt    
  0x000000010f7d6251: hlt    
  0x000000010f7d6252: hlt    
  0x000000010f7d6253: hlt    
  0x000000010f7d6254: hlt    
  0x000000010f7d6255: hlt    
  0x000000010f7d6256: hlt    
  0x000000010f7d6257: hlt    
  0x000000010f7d6258: hlt    
  0x000000010f7d6259: hlt    
  0x000000010f7d625a: hlt    
  0x000000010f7d625b: hlt    
  0x000000010f7d625c: hlt    
  0x000000010f7d625d: hlt    
  0x000000010f7d625e: hlt    
  0x000000010f7d625f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f7d6260: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f7d6265: mov    %rsp,-0x28(%rsp)
  0x000000010f7d626a: sub    $0x80,%rsp
  0x000000010f7d6271: mov    %rax,0x78(%rsp)
  0x000000010f7d6276: mov    %rcx,0x70(%rsp)
  0x000000010f7d627b: mov    %rdx,0x68(%rsp)
  0x000000010f7d6280: mov    %rbx,0x60(%rsp)
  0x000000010f7d6285: mov    %rbp,0x50(%rsp)
  0x000000010f7d628a: mov    %rsi,0x48(%rsp)
  0x000000010f7d628f: mov    %rdi,0x40(%rsp)
  0x000000010f7d6294: mov    %r8,0x38(%rsp)
  0x000000010f7d6299: mov    %r9,0x30(%rsp)
  0x000000010f7d629e: mov    %r10,0x28(%rsp)
  0x000000010f7d62a3: mov    %r11,0x20(%rsp)
  0x000000010f7d62a8: mov    %r12,0x18(%rsp)
  0x000000010f7d62ad: mov    %r13,0x10(%rsp)
  0x000000010f7d62b2: mov    %r14,0x8(%rsp)
  0x000000010f7d62b7: mov    %r15,(%rsp)
  0x000000010f7d62bb: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7d62c5: movabs $0x10f7d6265,%rsi  ;   {internal_word}
  0x000000010f7d62cf: mov    %rsp,%rdx
  0x000000010f7d62d2: and    $0xfffffffffffffff0,%rsp
  0x000000010f7d62d6: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7d62db: hlt    
[Deopt Handler Code]
  0x000000010f7d62dc: movabs $0x10f7d62dc,%r10  ;   {section_word}
  0x000000010f7d62e6: push   %r10
  0x000000010f7d62e8: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7d62ed: hlt    
  0x000000010f7d62ee: hlt    
  0x000000010f7d62ef: hlt    
Decoding compiled method 0x000000010f7d5d10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x000000010f7d5e60: mov    0x8(%rsi),%r10d
  0x000000010f7d5e64: shl    $0x3,%r10
  0x000000010f7d5e68: cmp    %rax,%r10
  0x000000010f7d5e6b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7d5e71: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7d5e7c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7d5e80: mov    %eax,-0x14000(%rsp)
  0x000000010f7d5e87: push   %rbp
  0x000000010f7d5e88: sub    $0x30,%rsp
  0x000000010f7d5e8c: movabs $0x10eb1a140,%rdi
  0x000000010f7d5e96: mov    0x8(%rdi),%ebx
  0x000000010f7d5e99: add    $0x8,%ebx
  0x000000010f7d5e9c: mov    %ebx,0x8(%rdi)
  0x000000010f7d5e9f: movabs $0x10ea65480,%rdi  ;   {metadata({method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f7d5ea9: and    $0x3ff8,%ebx
  0x000000010f7d5eaf: cmp    $0x0,%ebx
  0x000000010f7d5eb2: je     0x000000010f7d5ed1
  0x000000010f7d5eb8: mov    %rsi,%rdi          ;*return
                                                ; - java.lang.Object::<init>@0 (line 37)

  0x000000010f7d5ebb: mov    %rsi,0x20(%rsp)
  0x000000010f7d5ec0: callq  0x000000010f7cd2e0  ; OopMap{[32]=Oop off=101}
                                                ;*return
                                                ; - java.lang.Object::<init>@0 (line 37)
                                                ;   {runtime_call}
  0x000000010f7d5ec5: add    $0x30,%rsp
  0x000000010f7d5ec9: pop    %rbp
  0x000000010f7d5eca: test   %eax,-0x8d3add0(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7d5ed0: retq   
  0x000000010f7d5ed1: mov    %rdi,0x8(%rsp)
  0x000000010f7d5ed6: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7d5ede: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=131}
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 37)
                                                ;   {runtime_call}
  0x000000010f7d5ee3: jmp    0x000000010f7d5eb8
  0x000000010f7d5ee5: nop
  0x000000010f7d5ee6: nop
  0x000000010f7d5ee7: mov    0x2a8(%r15),%rax
  0x000000010f7d5eee: movabs $0x0,%r10
  0x000000010f7d5ef8: mov    %r10,0x2a8(%r15)
  0x000000010f7d5eff: movabs $0x0,%r10
  0x000000010f7d5f09: mov    %r10,0x2b0(%r15)
  0x000000010f7d5f10: add    $0x30,%rsp
  0x000000010f7d5f14: pop    %rbp
  0x000000010f7d5f15: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7d5f1a: hlt    
  0x000000010f7d5f1b: hlt    
  0x000000010f7d5f1c: hlt    
  0x000000010f7d5f1d: hlt    
  0x000000010f7d5f1e: hlt    
  0x000000010f7d5f1f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f7d5f20: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f7d5f25: mov    %rsp,-0x28(%rsp)
  0x000000010f7d5f2a: sub    $0x80,%rsp
  0x000000010f7d5f31: mov    %rax,0x78(%rsp)
  0x000000010f7d5f36: mov    %rcx,0x70(%rsp)
  0x000000010f7d5f3b: mov    %rdx,0x68(%rsp)
  0x000000010f7d5f40: mov    %rbx,0x60(%rsp)
  0x000000010f7d5f45: mov    %rbp,0x50(%rsp)
  0x000000010f7d5f4a: mov    %rsi,0x48(%rsp)
  0x000000010f7d5f4f: mov    %rdi,0x40(%rsp)
  0x000000010f7d5f54: mov    %r8,0x38(%rsp)
  0x000000010f7d5f59: mov    %r9,0x30(%rsp)
  0x000000010f7d5f5e: mov    %r10,0x28(%rsp)
  0x000000010f7d5f63: mov    %r11,0x20(%rsp)
  0x000000010f7d5f68: mov    %r12,0x18(%rsp)
  0x000000010f7d5f6d: mov    %r13,0x10(%rsp)
  0x000000010f7d5f72: mov    %r14,0x8(%rsp)
  0x000000010f7d5f77: mov    %r15,(%rsp)
  0x000000010f7d5f7b: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7d5f85: movabs $0x10f7d5f25,%rsi  ;   {internal_word}
  0x000000010f7d5f8f: mov    %rsp,%rdx
  0x000000010f7d5f92: and    $0xfffffffffffffff0,%rsp
  0x000000010f7d5f96: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7d5f9b: hlt    
[Deopt Handler Code]
  0x000000010f7d5f9c: movabs $0x10f7d5f9c,%r10  ;   {section_word}
  0x000000010f7d5fa6: push   %r10
  0x000000010f7d5fa8: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7d5fad: hlt    
  0x000000010f7d5fae: hlt    
  0x000000010f7d5faf: hlt    
Decoding compiled method 0x000000010f7e0c10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010eb4f6a0} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap'
  # this:     rsi:rsi   = 'java/util/HashMap'
  # parm0:    rdx       = int
  # parm1:    rcx:rcx   = 'java/lang/Object'
  #           [sp+0x60]  (sp of caller)
  0x000000010f7e0de0: mov    0x8(%rsi),%r10d
  0x000000010f7e0de4: shl    $0x3,%r10
  0x000000010f7e0de8: cmp    %rax,%r10
  0x000000010f7e0deb: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7e0df1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7e0dfc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7e0e00: mov    %eax,-0x14000(%rsp)
  0x000000010f7e0e07: push   %rbp
  0x000000010f7e0e08: sub    $0x50,%rsp
  0x000000010f7e0e0c: mov    %edx,0x28(%rsp)
  0x000000010f7e0e10: mov    %rcx,0x30(%rsp)
  0x000000010f7e0e15: movabs $0x10ec802f8,%rdi  ;   {metadata(method data for {method} {0x000000010eb4f6a0} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000010f7e0e1f: mov    0xdc(%rdi),%ebx
  0x000000010f7e0e25: add    $0x8,%ebx
  0x000000010f7e0e28: mov    %ebx,0xdc(%rdi)
  0x000000010f7e0e2e: movabs $0x10eb4f6a0,%rdi  ;   {metadata({method} {0x000000010eb4f6a0} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000010f7e0e38: and    $0x1ff8,%ebx
  0x000000010f7e0e3e: cmp    $0x0,%ebx
  0x000000010f7e0e41: je     0x000000010f7e1617  ;*aload_0
                                                ; - java.util.HashMap::getNode@0 (line 569)

  0x000000010f7e0e47: mov    0x24(%rsi),%esi
  0x000000010f7e0e4a: shl    $0x3,%rsi          ;*getfield table
                                                ; - java.util.HashMap::getNode@1 (line 569)

  0x000000010f7e0e4e: cmp    $0x0,%rsi
  0x000000010f7e0e52: movabs $0x10ec802f8,%rdi  ;   {metadata(method data for {method} {0x000000010eb4f6a0} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000010f7e0e5c: movabs $0x108,%rbx
  0x000000010f7e0e66: je     0x000000010f7e0e76
  0x000000010f7e0e6c: movabs $0x118,%rbx
  0x000000010f7e0e76: mov    (%rdi,%rbx,1),%rax
  0x000000010f7e0e7a: lea    0x1(%rax),%rax
  0x000000010f7e0e7e: mov    %rax,(%rdi,%rbx,1)
  0x000000010f7e0e82: je     0x000000010f7e1462  ;*ifnull
                                                ; - java.util.HashMap::getNode@6 (line 569)

  0x000000010f7e0e88: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - java.util.HashMap::getNode@10 (line 569)
                                                ; implicit exception: dispatches to 0x000000010f7e162e
  0x000000010f7e0e8b: cmp    $0x0,%edi
  0x000000010f7e0e8e: movabs $0x10ec802f8,%rbx  ;   {metadata(method data for {method} {0x000000010eb4f6a0} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000010f7e0e98: movabs $0x128,%rax
  0x000000010f7e0ea2: jle    0x000000010f7e0eb2
  0x000000010f7e0ea8: movabs $0x138,%rax
  0x000000010f7e0eb2: mov    (%rbx,%rax,1),%r8
  0x000000010f7e0eb6: lea    0x1(%r8),%r8
  0x000000010f7e0eba: mov    %r8,(%rbx,%rax,1)
  0x000000010f7e0ebe: jle    0x000000010f7e1462  ;*ifle
                                                ; - java.util.HashMap::getNode@14 (line 569)

  0x000000010f7e0ec4: dec    %edi
  0x000000010f7e0ec6: and    %rdx,%rdi
  0x000000010f7e0ec9: movslq %edi,%rbx
  0x000000010f7e0ecc: cmp    0xc(%rsi),%edi
  0x000000010f7e0ecf: jae    0x000000010f7e1633
  0x000000010f7e0ed5: mov    0x10(%rsi,%rbx,4),%edi
  0x000000010f7e0ed9: shl    $0x3,%rdi          ;*aaload
                                                ; - java.util.HashMap::getNode@24 (line 569)

  0x000000010f7e0edd: cmp    $0x0,%rdi
  0x000000010f7e0ee1: movabs $0x10ec802f8,%rsi  ;   {metadata(method data for {method} {0x000000010eb4f6a0} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000010f7e0eeb: movabs $0x148,%rbx
  0x000000010f7e0ef5: je     0x000000010f7e0f05
  0x000000010f7e0efb: movabs $0x158,%rbx
  0x000000010f7e0f05: mov    (%rsi,%rbx,1),%rax
  0x000000010f7e0f09: lea    0x1(%rax),%rax
  0x000000010f7e0f0d: mov    %rax,(%rsi,%rbx,1)
  0x000000010f7e0f11: je     0x000000010f7e1462  ;*ifnull
                                                ; - java.util.HashMap::getNode@28 (line 569)

  0x000000010f7e0f17: mov    0xc(%rdi),%esi     ;*getfield hash
                                                ; - java.util.HashMap::getNode@33 (line 571)
                                                ; implicit exception: dispatches to 0x000000010f7e163c
  0x000000010f7e0f1a: cmp    %edx,%esi
  0x000000010f7e0f1c: movabs $0x10ec802f8,%rsi  ;   {metadata(method data for {method} {0x000000010eb4f6a0} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000010f7e0f26: movabs $0x168,%rbx
  0x000000010f7e0f30: jne    0x000000010f7e0f40
  0x000000010f7e0f36: movabs $0x178,%rbx
  0x000000010f7e0f40: mov    (%rsi,%rbx,1),%rax
  0x000000010f7e0f44: lea    0x1(%rax),%rax
  0x000000010f7e0f48: mov    %rax,(%rsi,%rbx,1)
  0x000000010f7e0f4c: jne    0x000000010f7e10ba  ;*if_icmpne
                                                ; - java.util.HashMap::getNode@37 (line 571)

  0x000000010f7e0f52: mov    0x10(%rdi),%esi
  0x000000010f7e0f55: shl    $0x3,%rsi          ;*getfield key
                                                ; - java.util.HashMap::getNode@42 (line 571)

  0x000000010f7e0f59: cmp    %rcx,%rsi
  0x000000010f7e0f5c: movabs $0x10ec802f8,%rbx  ;   {metadata(method data for {method} {0x000000010eb4f6a0} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000010f7e0f66: movabs $0x188,%rax
  0x000000010f7e0f70: je     0x000000010f7e0f80
  0x000000010f7e0f76: movabs $0x198,%rax
  0x000000010f7e0f80: mov    (%rbx,%rax,1),%r8
  0x000000010f7e0f84: lea    0x1(%r8),%r8
  0x000000010f7e0f88: mov    %r8,(%rbx,%rax,1)
  0x000000010f7e0f8c: je     0x000000010f7e1608  ;*if_acmpeq
                                                ; - java.util.HashMap::getNode@49 (line 571)

  0x000000010f7e0f92: cmp    $0x0,%rcx
  0x000000010f7e0f96: movabs $0x10ec802f8,%rbx  ;   {metadata(method data for {method} {0x000000010eb4f6a0} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000010f7e0fa0: movabs $0x1a8,%rax
  0x000000010f7e0faa: je     0x000000010f7e0fba
  0x000000010f7e0fb0: movabs $0x1b8,%rax
  0x000000010f7e0fba: mov    (%rbx,%rax,1),%r8
  0x000000010f7e0fbe: lea    0x1(%r8),%r8
  0x000000010f7e0fc2: mov    %r8,(%rbx,%rax,1)
  0x000000010f7e0fc6: je     0x000000010f7e10ba  ;*ifnull
                                                ; - java.util.HashMap::getNode@53 (line 571)

  0x000000010f7e0fcc: mov    %rdi,0x20(%rsp)
  0x000000010f7e0fd1: cmp    (%rcx),%rax        ; implicit exception: dispatches to 0x000000010f7e1641
  0x000000010f7e0fd4: mov    %rcx,%rbx
  0x000000010f7e0fd7: movabs $0x10ec802f8,%rax  ;   {metadata(method data for {method} {0x000000010eb4f6a0} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000010f7e0fe1: mov    0x8(%rbx),%ebx
  0x000000010f7e0fe4: shl    $0x3,%rbx
  0x000000010f7e0fe8: cmp    0x1d0(%rax),%rbx
  0x000000010f7e0fef: jne    0x000000010f7e0ffe
  0x000000010f7e0ff1: addq   $0x1,0x1d8(%rax)
  0x000000010f7e0ff9: jmpq   0x000000010f7e1064
  0x000000010f7e0ffe: cmp    0x1e0(%rax),%rbx
  0x000000010f7e1005: jne    0x000000010f7e1014
  0x000000010f7e1007: addq   $0x1,0x1e8(%rax)
  0x000000010f7e100f: jmpq   0x000000010f7e1064
  0x000000010f7e1014: cmpq   $0x0,0x1d0(%rax)
  0x000000010f7e101f: jne    0x000000010f7e1038
  0x000000010f7e1021: mov    %rbx,0x1d0(%rax)
  0x000000010f7e1028: movq   $0x1,0x1d8(%rax)
  0x000000010f7e1033: jmpq   0x000000010f7e1064
  0x000000010f7e1038: cmpq   $0x0,0x1e0(%rax)
  0x000000010f7e1043: jne    0x000000010f7e105c
  0x000000010f7e1045: mov    %rbx,0x1e0(%rax)
  0x000000010f7e104c: movq   $0x1,0x1e8(%rax)
  0x000000010f7e1057: jmpq   0x000000010f7e1064
  0x000000010f7e105c: addq   $0x1,0x1c8(%rax)
  0x000000010f7e1064: mov    %rsi,%rdx
  0x000000010f7e1067: mov    %rcx,%rsi          ;*invokevirtual equals
                                                ; - java.util.HashMap::getNode@59 (line 572)

  0x000000010f7e106a: nop
  0x000000010f7e106b: nop
  0x000000010f7e106c: nop
  0x000000010f7e106d: movabs $0xffffffffffffffff,%rax
  0x000000010f7e1077: callq  0x000000010f7172e0  ; OopMap{[48]=Oop [32]=Oop off=668}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::getNode@59 (line 572)
                                                ;   {virtual_call}
  0x000000010f7e107c: cmp    $0x0,%eax
  0x000000010f7e107f: movabs $0x10ec802f8,%rdx  ;   {metadata(method data for {method} {0x000000010eb4f6a0} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000010f7e1089: movabs $0x1f8,%rsi
  0x000000010f7e1093: je     0x000000010f7e10a3
  0x000000010f7e1099: movabs $0x208,%rsi
  0x000000010f7e10a3: mov    (%rdx,%rsi,1),%rdi
  0x000000010f7e10a7: lea    0x1(%rdi),%rdi
  0x000000010f7e10ab: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f7e10af: mov    0x20(%rsp),%rdi
  0x000000010f7e10b4: jne    0x000000010f7e1608  ;*ifeq
                                                ; - java.util.HashMap::getNode@62 (line 572)

  0x000000010f7e10ba: mov    0x18(%rdi),%edx
  0x000000010f7e10bd: shl    $0x3,%rdx          ;*getfield next
                                                ; - java.util.HashMap::getNode@70 (line 574)

  0x000000010f7e10c1: cmp    $0x0,%rdx
  0x000000010f7e10c5: movabs $0x10ec802f8,%rsi  ;   {metadata(method data for {method} {0x000000010eb4f6a0} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000010f7e10cf: movabs $0x218,%rbx
  0x000000010f7e10d9: je     0x000000010f7e10e9
  0x000000010f7e10df: movabs $0x228,%rbx
  0x000000010f7e10e9: mov    (%rsi,%rbx,1),%rax
  0x000000010f7e10ed: lea    0x1(%rax),%rax
  0x000000010f7e10f1: mov    %rax,(%rsi,%rbx,1)
  0x000000010f7e10f5: je     0x000000010f7e1462  ;*ifnull
                                                ; - java.util.HashMap::getNode@76 (line 574)

  0x000000010f7e10fb: cmp    $0x0,%rdi
  0x000000010f7e10ff: jne    0x000000010f7e111a
  0x000000010f7e1101: movabs $0x10ec802f8,%rax  ;   {metadata(method data for {method} {0x000000010eb4f6a0} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000010f7e110b: orl    $0x100,0x230(%rax)
  0x000000010f7e1115: jmpq   0x000000010f7e11da
  0x000000010f7e111a: movabs $0x7c0032c30,%rcx  ;   {metadata('java/util/HashMap$TreeNode')}
  0x000000010f7e1124: mov    0x8(%rdi),%ebx
  0x000000010f7e1127: shl    $0x3,%rbx
  0x000000010f7e112b: cmp    %rbx,%rcx
  0x000000010f7e112e: jne    0x000000010f7e11be
  0x000000010f7e1134: movabs $0x10ec802f8,%rax  ;   {metadata(method data for {method} {0x000000010eb4f6a0} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000010f7e113e: mov    0x8(%rdi),%ecx
  0x000000010f7e1141: shl    $0x3,%rcx
  0x000000010f7e1145: cmp    0x240(%rax),%rcx
  0x000000010f7e114c: jne    0x000000010f7e115b
  0x000000010f7e114e: addq   $0x1,0x248(%rax)
  0x000000010f7e1156: jmpq   0x000000010f7e11df
  0x000000010f7e115b: cmp    0x250(%rax),%rcx
  0x000000010f7e1162: jne    0x000000010f7e1171
  0x000000010f7e1164: addq   $0x1,0x258(%rax)
  0x000000010f7e116c: jmpq   0x000000010f7e11df
  0x000000010f7e1171: cmpq   $0x0,0x240(%rax)
  0x000000010f7e117c: jne    0x000000010f7e1195
  0x000000010f7e117e: mov    %rcx,0x240(%rax)
  0x000000010f7e1185: movq   $0x1,0x248(%rax)
  0x000000010f7e1190: jmpq   0x000000010f7e11df
  0x000000010f7e1195: cmpq   $0x0,0x250(%rax)
  0x000000010f7e11a0: jne    0x000000010f7e11b9
  0x000000010f7e11a2: mov    %rcx,0x250(%rax)
  0x000000010f7e11a9: movq   $0x1,0x258(%rax)
  0x000000010f7e11b4: jmpq   0x000000010f7e11df
  0x000000010f7e11b9: jmpq   0x000000010f7e11df
  0x000000010f7e11be: movabs $0x10ec802f8,%rax  ;   {metadata(method data for {method} {0x000000010eb4f6a0} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000010f7e11c8: subq   $0x1,0x238(%rax)
  0x000000010f7e11d0: jmpq   0x000000010f7e11da
  0x000000010f7e11d5: jmpq   0x000000010f7e11df
  0x000000010f7e11da: xor    %rsi,%rsi
  0x000000010f7e11dd: jmp    0x000000010f7e11e9
  0x000000010f7e11df: movabs $0x1,%rsi          ;*instanceof
                                                ; - java.util.HashMap::getNode@81 (line 575)

  0x000000010f7e11e9: cmp    $0x0,%esi
  0x000000010f7e11ec: movabs $0x10ec802f8,%rsi  ;   {metadata(method data for {method} {0x000000010eb4f6a0} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000010f7e11f6: movabs $0x268,%rbx
  0x000000010f7e1200: je     0x000000010f7e1210
  0x000000010f7e1206: movabs $0x278,%rbx
  0x000000010f7e1210: mov    (%rsi,%rbx,1),%rax
  0x000000010f7e1214: lea    0x1(%rax),%rax
  0x000000010f7e1218: mov    %rax,(%rsi,%rbx,1)
  0x000000010f7e121c: jne    0x000000010f7e1478  ;*ifeq
                                                ; - java.util.HashMap::getNode@84 (line 575)

  0x000000010f7e1222: nopw   0x0(%rax,%rax,1)
  0x000000010f7e1228: mov    0x30(%rsp),%rcx
  0x000000010f7e122d: mov    0x28(%rsp),%edi
  0x000000010f7e1231: mov    0xc(%rdx),%esi     ;*getfield hash
                                                ; - java.util.HashMap::getNode@100 (line 578)
                                                ; implicit exception: dispatches to 0x000000010f7e1646
  0x000000010f7e1234: cmp    %edi,%esi
  0x000000010f7e1236: movabs $0x10ec802f8,%rsi  ;   {metadata(method data for {method} {0x000000010eb4f6a0} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000010f7e1240: movabs $0x2e8,%rbx
  0x000000010f7e124a: jne    0x000000010f7e125a
  0x000000010f7e1250: movabs $0x2f8,%rbx
  0x000000010f7e125a: mov    (%rsi,%rbx,1),%rax
  0x000000010f7e125e: lea    0x1(%rax),%rax
  0x000000010f7e1262: mov    %rax,(%rsi,%rbx,1)
  0x000000010f7e1266: jne    0x000000010f7e13d2  ;*if_icmpne
                                                ; - java.util.HashMap::getNode@104 (line 578)

  0x000000010f7e126c: mov    0x10(%rdx),%esi
  0x000000010f7e126f: shl    $0x3,%rsi          ;*getfield key
                                                ; - java.util.HashMap::getNode@109 (line 578)

  0x000000010f7e1273: cmp    %rcx,%rsi
  0x000000010f7e1276: movabs $0x10ec802f8,%rbx  ;   {metadata(method data for {method} {0x000000010eb4f6a0} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000010f7e1280: movabs $0x308,%rax
  0x000000010f7e128a: je     0x000000010f7e129a
  0x000000010f7e1290: movabs $0x318,%rax
  0x000000010f7e129a: mov    (%rbx,%rax,1),%r8
  0x000000010f7e129e: lea    0x1(%r8),%r8
  0x000000010f7e12a2: mov    %r8,(%rbx,%rax,1)
  0x000000010f7e12a6: je     0x000000010f7e1453  ;*if_acmpeq
                                                ; - java.util.HashMap::getNode@116 (line 578)

  0x000000010f7e12ac: cmp    $0x0,%rcx
  0x000000010f7e12b0: movabs $0x10ec802f8,%rbx  ;   {metadata(method data for {method} {0x000000010eb4f6a0} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000010f7e12ba: movabs $0x328,%rax
  0x000000010f7e12c4: je     0x000000010f7e12d4
  0x000000010f7e12ca: movabs $0x338,%rax
  0x000000010f7e12d4: mov    (%rbx,%rax,1),%r8
  0x000000010f7e12d8: lea    0x1(%r8),%r8
  0x000000010f7e12dc: mov    %r8,(%rbx,%rax,1)
  0x000000010f7e12e0: je     0x000000010f7e13d2  ;*ifnull
                                                ; - java.util.HashMap::getNode@120 (line 578)

  0x000000010f7e12e6: mov    %rdx,0x38(%rsp)
  0x000000010f7e12eb: cmp    (%rcx),%rax        ; implicit exception: dispatches to 0x000000010f7e164b
  0x000000010f7e12ee: mov    %rcx,%rbx
  0x000000010f7e12f1: movabs $0x10ec802f8,%rax  ;   {metadata(method data for {method} {0x000000010eb4f6a0} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000010f7e12fb: mov    0x8(%rbx),%ebx
  0x000000010f7e12fe: shl    $0x3,%rbx
  0x000000010f7e1302: cmp    0x350(%rax),%rbx
  0x000000010f7e1309: jne    0x000000010f7e1318
  0x000000010f7e130b: addq   $0x1,0x358(%rax)
  0x000000010f7e1313: jmpq   0x000000010f7e137e
  0x000000010f7e1318: cmp    0x360(%rax),%rbx
  0x000000010f7e131f: jne    0x000000010f7e132e
  0x000000010f7e1321: addq   $0x1,0x368(%rax)
  0x000000010f7e1329: jmpq   0x000000010f7e137e
  0x000000010f7e132e: cmpq   $0x0,0x350(%rax)
  0x000000010f7e1339: jne    0x000000010f7e1352
  0x000000010f7e133b: mov    %rbx,0x350(%rax)
  0x000000010f7e1342: movq   $0x1,0x358(%rax)
  0x000000010f7e134d: jmpq   0x000000010f7e137e
  0x000000010f7e1352: cmpq   $0x0,0x360(%rax)
  0x000000010f7e135d: jne    0x000000010f7e1376
  0x000000010f7e135f: mov    %rbx,0x360(%rax)
  0x000000010f7e1366: movq   $0x1,0x368(%rax)
  0x000000010f7e1371: jmpq   0x000000010f7e137e
  0x000000010f7e1376: addq   $0x1,0x348(%rax)
  0x000000010f7e137e: mov    %rsi,%rdx
  0x000000010f7e1381: mov    %rcx,%rsi          ;*invokevirtual equals
                                                ; - java.util.HashMap::getNode@126 (line 579)

  0x000000010f7e1384: nop
  0x000000010f7e1385: movabs $0xffffffffffffffff,%rax
  0x000000010f7e138f: callq  0x000000010f7172e0  ; OopMap{[56]=Oop [48]=Oop off=1460}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::getNode@126 (line 579)
                                                ;   {virtual_call}
  0x000000010f7e1394: cmp    $0x0,%eax
  0x000000010f7e1397: movabs $0x10ec802f8,%rax  ;   {metadata(method data for {method} {0x000000010eb4f6a0} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000010f7e13a1: movabs $0x378,%rdx
  0x000000010f7e13ab: je     0x000000010f7e13bb
  0x000000010f7e13b1: movabs $0x388,%rdx
  0x000000010f7e13bb: mov    (%rax,%rdx,1),%rcx
  0x000000010f7e13bf: lea    0x1(%rcx),%rcx
  0x000000010f7e13c3: mov    %rcx,(%rax,%rdx,1)
  0x000000010f7e13c7: mov    0x38(%rsp),%rdx
  0x000000010f7e13cc: jne    0x000000010f7e1453  ;*ifeq
                                                ; - java.util.HashMap::getNode@129 (line 579)

  0x000000010f7e13d2: mov    0x18(%rdx),%eax
  0x000000010f7e13d5: shl    $0x3,%rax          ;*getfield next
                                                ; - java.util.HashMap::getNode@137 (line 581)

  0x000000010f7e13d9: movabs $0x10ec802f8,%rdx  ;   {metadata(method data for {method} {0x000000010eb4f6a0} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000010f7e13e3: mov    0xe0(%rdx),%ecx
  0x000000010f7e13e9: add    $0x8,%ecx
  0x000000010f7e13ec: mov    %ecx,0xe0(%rdx)
  0x000000010f7e13f2: movabs $0x10eb4f6a0,%rdx  ;   {metadata({method} {0x000000010eb4f6a0} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000010f7e13fc: and    $0xfff8,%ecx
  0x000000010f7e1402: cmp    $0x0,%ecx
  0x000000010f7e1405: je     0x000000010f7e1650  ; OopMap{[48]=Oop rax=Oop off=1579}
                                                ;*ifnonnull
                                                ; - java.util.HashMap::getNode@143 (line 581)

  0x000000010f7e140b: test   %eax,-0x8d46311(%rip)        # 0x0000000106a9b100
                                                ;   {poll}
  0x000000010f7e1411: cmp    $0x0,%rax
  0x000000010f7e1415: movabs $0x10ec802f8,%rdx  ;   {metadata(method data for {method} {0x000000010eb4f6a0} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000010f7e141f: movabs $0x398,%rcx
  0x000000010f7e1429: jne    0x000000010f7e1439
  0x000000010f7e142f: movabs $0x3a8,%rcx
  0x000000010f7e1439: mov    (%rdx,%rcx,1),%rsi
  0x000000010f7e143d: lea    0x1(%rsi),%rsi
  0x000000010f7e1441: mov    %rsi,(%rdx,%rcx,1)
  0x000000010f7e1445: je     0x000000010f7e1462  ;*ifnonnull
                                                ; - java.util.HashMap::getNode@143 (line 581)

  0x000000010f7e144b: mov    %rax,%rdx
  0x000000010f7e144e: jmpq   0x000000010f7e1228  ;*aload
                                                ; - java.util.HashMap::getNode@98 (line 578)

  0x000000010f7e1453: mov    %rdx,%rax
  0x000000010f7e1456: add    $0x50,%rsp
  0x000000010f7e145a: pop    %rbp
  0x000000010f7e145b: test   %eax,-0x8d46361(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7e1461: retq                      ;*areturn
                                                ; - java.util.HashMap::getNode@134 (line 580)

  0x000000010f7e1462: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000010f7e146c: add    $0x50,%rsp
  0x000000010f7e1470: pop    %rbp
  0x000000010f7e1471: test   %eax,-0x8d46377(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7e1477: retq                      ;*areturn
                                                ; - java.util.HashMap::getNode@147 (line 584)

  0x000000010f7e1478: mov    0x30(%rsp),%rcx
  0x000000010f7e147d: mov    0x28(%rsp),%edx
  0x000000010f7e1481: cmp    $0x0,%rdi
  0x000000010f7e1485: jne    0x000000010f7e14a0
  0x000000010f7e1487: movabs $0x10ec802f8,%rbx  ;   {metadata(method data for {method} {0x000000010eb4f6a0} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000010f7e1491: orl    $0x100,0x280(%rbx)
  0x000000010f7e149b: jmpq   0x000000010f7e1560
  0x000000010f7e14a0: movabs $0x7c0032c30,%rax  ;   {metadata('java/util/HashMap$TreeNode')}
  0x000000010f7e14aa: mov    0x8(%rdi),%esi
  0x000000010f7e14ad: shl    $0x3,%rsi
  0x000000010f7e14b1: cmp    %rsi,%rax
  0x000000010f7e14b4: jne    0x000000010f7e1544
  0x000000010f7e14ba: movabs $0x10ec802f8,%rbx  ;   {metadata(method data for {method} {0x000000010eb4f6a0} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000010f7e14c4: mov    0x8(%rdi),%eax
  0x000000010f7e14c7: shl    $0x3,%rax
  0x000000010f7e14cb: cmp    0x290(%rbx),%rax
  0x000000010f7e14d2: jne    0x000000010f7e14e1
  0x000000010f7e14d4: addq   $0x1,0x298(%rbx)
  0x000000010f7e14dc: jmpq   0x000000010f7e1560
  0x000000010f7e14e1: cmp    0x2a0(%rbx),%rax
  0x000000010f7e14e8: jne    0x000000010f7e14f7
  0x000000010f7e14ea: addq   $0x1,0x2a8(%rbx)
  0x000000010f7e14f2: jmpq   0x000000010f7e1560
  0x000000010f7e14f7: cmpq   $0x0,0x290(%rbx)
  0x000000010f7e1502: jne    0x000000010f7e151b
  0x000000010f7e1504: mov    %rax,0x290(%rbx)
  0x000000010f7e150b: movq   $0x1,0x298(%rbx)
  0x000000010f7e1516: jmpq   0x000000010f7e1560
  0x000000010f7e151b: cmpq   $0x0,0x2a0(%rbx)
  0x000000010f7e1526: jne    0x000000010f7e153f
  0x000000010f7e1528: mov    %rax,0x2a0(%rbx)
  0x000000010f7e152f: movq   $0x1,0x2a8(%rbx)
  0x000000010f7e153a: jmpq   0x000000010f7e1560
  0x000000010f7e153f: jmpq   0x000000010f7e1560
  0x000000010f7e1544: movabs $0x10ec802f8,%rbx  ;   {metadata(method data for {method} {0x000000010eb4f6a0} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000010f7e154e: subq   $0x1,0x288(%rbx)
  0x000000010f7e1556: jmpq   0x000000010f7e1667
  0x000000010f7e155b: jmpq   0x000000010f7e1560
  0x000000010f7e1560: mov    %rdi,%rsi          ;*checkcast
                                                ; - java.util.HashMap::getNode@89 (line 576)

  0x000000010f7e1563: cmp    (%rsi),%rax        ;*invokevirtual getTreeNode
                                                ; - java.util.HashMap::getNode@94 (line 576)
                                                ; implicit exception: dispatches to 0x000000010f7e1670
  0x000000010f7e1566: mov    %rsi,%rdi
  0x000000010f7e1569: movabs $0x10ec802f8,%rbx  ;   {metadata(method data for {method} {0x000000010eb4f6a0} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000010f7e1573: mov    0x8(%rdi),%edi
  0x000000010f7e1576: shl    $0x3,%rdi
  0x000000010f7e157a: cmp    0x2c0(%rbx),%rdi
  0x000000010f7e1581: jne    0x000000010f7e1590
  0x000000010f7e1583: addq   $0x1,0x2c8(%rbx)
  0x000000010f7e158b: jmpq   0x000000010f7e15f6
  0x000000010f7e1590: cmp    0x2d0(%rbx),%rdi
  0x000000010f7e1597: jne    0x000000010f7e15a6
  0x000000010f7e1599: addq   $0x1,0x2d8(%rbx)
  0x000000010f7e15a1: jmpq   0x000000010f7e15f6
  0x000000010f7e15a6: cmpq   $0x0,0x2c0(%rbx)
  0x000000010f7e15b1: jne    0x000000010f7e15ca
  0x000000010f7e15b3: mov    %rdi,0x2c0(%rbx)
  0x000000010f7e15ba: movq   $0x1,0x2c8(%rbx)
  0x000000010f7e15c5: jmpq   0x000000010f7e15f6
  0x000000010f7e15ca: cmpq   $0x0,0x2d0(%rbx)
  0x000000010f7e15d5: jne    0x000000010f7e15ee
  0x000000010f7e15d7: mov    %rdi,0x2d0(%rbx)
  0x000000010f7e15de: movq   $0x1,0x2d8(%rbx)
  0x000000010f7e15e9: jmpq   0x000000010f7e15f6
  0x000000010f7e15ee: addq   $0x1,0x2b8(%rbx)
  0x000000010f7e15f6: nop
  0x000000010f7e15f7: callq  0x000000010f7170a0  ; OopMap{off=2076}
                                                ;*invokevirtual getTreeNode
                                                ; - java.util.HashMap::getNode@94 (line 576)
                                                ;   {optimized virtual_call}
  0x000000010f7e15fc: add    $0x50,%rsp
  0x000000010f7e1600: pop    %rbp
  0x000000010f7e1601: test   %eax,-0x8d46507(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7e1607: retq                      ;*areturn
                                                ; - java.util.HashMap::getNode@97 (line 576)

  0x000000010f7e1608: mov    %rdi,%rax
  0x000000010f7e160b: add    $0x50,%rsp
  0x000000010f7e160f: pop    %rbp
  0x000000010f7e1610: test   %eax,-0x8d46516(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7e1616: retq   
  0x000000010f7e1617: mov    %rdi,0x8(%rsp)
  0x000000010f7e161c: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7e1624: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop rcx=Oop [48]=Oop off=2121}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::getNode@-1 (line 569)
                                                ;   {runtime_call}
  0x000000010f7e1629: jmpq   0x000000010f7e0e47
  0x000000010f7e162e: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop rcx=Oop [48]=Oop off=2131}
                                                ;*arraylength
                                                ; - java.util.HashMap::getNode@10 (line 569)
                                                ;   {runtime_call}
  0x000000010f7e1633: mov    %rdi,(%rsp)
  0x000000010f7e1637: callq  0x000000010f7cca00  ; OopMap{rcx=Oop [48]=Oop rsi=Oop off=2140}
                                                ;*aaload
                                                ; - java.util.HashMap::getNode@24 (line 569)
                                                ;   {runtime_call}
  0x000000010f7e163c: callq  0x000000010f7cd0c0  ; OopMap{rdi=Oop rcx=Oop [48]=Oop off=2145}
                                                ;*getfield hash
                                                ; - java.util.HashMap::getNode@33 (line 571)
                                                ;   {runtime_call}
  0x000000010f7e1641: callq  0x000000010f7cd0c0  ; OopMap{rcx=Oop [48]=Oop [32]=Oop rsi=Oop off=2150}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::getNode@59 (line 572)
                                                ;   {runtime_call}
  0x000000010f7e1646: callq  0x000000010f7cd0c0  ; OopMap{rdx=Oop rcx=Oop [48]=Oop off=2155}
                                                ;*getfield hash
                                                ; - java.util.HashMap::getNode@100 (line 578)
                                                ;   {runtime_call}
  0x000000010f7e164b: callq  0x000000010f7cd0c0  ; OopMap{rcx=Oop [48]=Oop [56]=Oop rsi=Oop off=2160}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::getNode@126 (line 579)
                                                ;   {runtime_call}
  0x000000010f7e1650: mov    %rdx,0x8(%rsp)
  0x000000010f7e1655: movq   $0x8f,(%rsp)
  0x000000010f7e165d: callq  0x000000010f7d1a20  ; OopMap{[48]=Oop rax=Oop off=2178}
                                                ;*ifnonnull
                                                ; - java.util.HashMap::getNode@143 (line 581)
                                                ;   {runtime_call}
  0x000000010f7e1662: jmpq   0x000000010f7e140b
  0x000000010f7e1667: mov    %rdi,(%rsp)
  0x000000010f7e166b: callq  0x000000010f7cf480  ; OopMap{rcx=Oop [48]=Oop off=2192}
                                                ;*checkcast
                                                ; - java.util.HashMap::getNode@89 (line 576)
                                                ;   {runtime_call}
  0x000000010f7e1670: callq  0x000000010f7cd0c0  ; OopMap{rcx=Oop [48]=Oop rsi=Oop off=2197}
                                                ;*invokevirtual getTreeNode
                                                ; - java.util.HashMap::getNode@94 (line 576)
                                                ;   {runtime_call}
  0x000000010f7e1675: nop
  0x000000010f7e1676: nop
  0x000000010f7e1677: mov    0x2a8(%r15),%rax
  0x000000010f7e167e: movabs $0x0,%r10
  0x000000010f7e1688: mov    %r10,0x2a8(%r15)
  0x000000010f7e168f: movabs $0x0,%r10
  0x000000010f7e1699: mov    %r10,0x2b0(%r15)
  0x000000010f7e16a0: add    $0x50,%rsp
  0x000000010f7e16a4: pop    %rbp
  0x000000010f7e16a5: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7e16aa: hlt    
  0x000000010f7e16ab: hlt    
  0x000000010f7e16ac: hlt    
  0x000000010f7e16ad: hlt    
  0x000000010f7e16ae: hlt    
  0x000000010f7e16af: hlt    
  0x000000010f7e16b0: hlt    
  0x000000010f7e16b1: hlt    
  0x000000010f7e16b2: hlt    
  0x000000010f7e16b3: hlt    
  0x000000010f7e16b4: hlt    
  0x000000010f7e16b5: hlt    
  0x000000010f7e16b6: hlt    
  0x000000010f7e16b7: hlt    
  0x000000010f7e16b8: hlt    
  0x000000010f7e16b9: hlt    
  0x000000010f7e16ba: hlt    
  0x000000010f7e16bb: hlt    
  0x000000010f7e16bc: hlt    
  0x000000010f7e16bd: hlt    
  0x000000010f7e16be: hlt    
  0x000000010f7e16bf: hlt    
[Stub Code]
  0x000000010f7e16c0: nop                       ;   {no_reloc}
  0x000000010f7e16c1: nop
  0x000000010f7e16c2: nop
  0x000000010f7e16c3: nop
  0x000000010f7e16c4: nop
  0x000000010f7e16c5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7e16cf: jmpq   0x000000010f7e16cf  ;   {runtime_call}
  0x000000010f7e16d4: nop
  0x000000010f7e16d5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7e16df: jmpq   0x000000010f7e16df  ;   {runtime_call}
  0x000000010f7e16e4: nop
  0x000000010f7e16e5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7e16ef: jmpq   0x000000010f7e16ef  ;   {runtime_call}
[Exception Handler]
  0x000000010f7e16f4: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f7e16f9: mov    %rsp,-0x28(%rsp)
  0x000000010f7e16fe: sub    $0x80,%rsp
  0x000000010f7e1705: mov    %rax,0x78(%rsp)
  0x000000010f7e170a: mov    %rcx,0x70(%rsp)
  0x000000010f7e170f: mov    %rdx,0x68(%rsp)
  0x000000010f7e1714: mov    %rbx,0x60(%rsp)
  0x000000010f7e1719: mov    %rbp,0x50(%rsp)
  0x000000010f7e171e: mov    %rsi,0x48(%rsp)
  0x000000010f7e1723: mov    %rdi,0x40(%rsp)
  0x000000010f7e1728: mov    %r8,0x38(%rsp)
  0x000000010f7e172d: mov    %r9,0x30(%rsp)
  0x000000010f7e1732: mov    %r10,0x28(%rsp)
  0x000000010f7e1737: mov    %r11,0x20(%rsp)
  0x000000010f7e173c: mov    %r12,0x18(%rsp)
  0x000000010f7e1741: mov    %r13,0x10(%rsp)
  0x000000010f7e1746: mov    %r14,0x8(%rsp)
  0x000000010f7e174b: mov    %r15,(%rsp)
  0x000000010f7e174f: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7e1759: movabs $0x10f7e16f9,%rsi  ;   {internal_word}
  0x000000010f7e1763: mov    %rsp,%rdx
  0x000000010f7e1766: and    $0xfffffffffffffff0,%rsp
  0x000000010f7e176a: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7e176f: hlt    
[Deopt Handler Code]
  0x000000010f7e1770: movabs $0x10f7e1770,%r10  ;   {section_word}
  0x000000010f7e177a: push   %r10
  0x000000010f7e177c: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7e1781: hlt    
  0x000000010f7e1782: hlt    
  0x000000010f7e1783: hlt    
  0x000000010f7e1784: hlt    
  0x000000010f7e1785: hlt    
  0x000000010f7e1786: hlt    
  0x000000010f7e1787: hlt    
Decoding compiled method 0x000000010f7df410:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ec40f48} 'getSnapshotTransformerList' '()[Lsun/instrument/TransformerManager$TransformerInfo;' in 'sun/instrument/TransformerManager'
  #           [sp+0x40]  (sp of caller)
  0x000000010f7df560: mov    0x8(%rsi),%r10d
  0x000000010f7df564: shl    $0x3,%r10
  0x000000010f7df568: cmp    %rax,%r10
  0x000000010f7df56b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7df571: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7df57c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7df580: mov    %eax,-0x14000(%rsp)
  0x000000010f7df587: push   %rbp
  0x000000010f7df588: sub    $0x30,%rsp         ;*aload_0
                                                ; - sun.instrument.TransformerManager::getSnapshotTransformerList@0 (line 166)

  0x000000010f7df58c: mov    0x10(%rsi),%eax
  0x000000010f7df58f: shl    $0x3,%rax          ;*getfield mTransformerList
                                                ; - sun.instrument.TransformerManager::getSnapshotTransformerList@1 (line 166)

  0x000000010f7df593: add    $0x30,%rsp
  0x000000010f7df597: pop    %rbp
  0x000000010f7df598: test   %eax,-0x8d4449e(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7df59e: retq   
  0x000000010f7df59f: nop
  0x000000010f7df5a0: nop
  0x000000010f7df5a1: mov    0x2a8(%r15),%rax
  0x000000010f7df5a8: movabs $0x0,%r10
  0x000000010f7df5b2: mov    %r10,0x2a8(%r15)
  0x000000010f7df5b9: movabs $0x0,%r10
  0x000000010f7df5c3: mov    %r10,0x2b0(%r15)
  0x000000010f7df5ca: add    $0x30,%rsp
  0x000000010f7df5ce: pop    %rbp
  0x000000010f7df5cf: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7df5d4: hlt    
  0x000000010f7df5d5: hlt    
  0x000000010f7df5d6: hlt    
  0x000000010f7df5d7: hlt    
  0x000000010f7df5d8: hlt    
  0x000000010f7df5d9: hlt    
  0x000000010f7df5da: hlt    
  0x000000010f7df5db: hlt    
  0x000000010f7df5dc: hlt    
  0x000000010f7df5dd: hlt    
  0x000000010f7df5de: hlt    
  0x000000010f7df5df: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f7df5e0: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f7df5e5: mov    %rsp,-0x28(%rsp)
  0x000000010f7df5ea: sub    $0x80,%rsp
  0x000000010f7df5f1: mov    %rax,0x78(%rsp)
  0x000000010f7df5f6: mov    %rcx,0x70(%rsp)
  0x000000010f7df5fb: mov    %rdx,0x68(%rsp)
  0x000000010f7df600: mov    %rbx,0x60(%rsp)
  0x000000010f7df605: mov    %rbp,0x50(%rsp)
  0x000000010f7df60a: mov    %rsi,0x48(%rsp)
  0x000000010f7df60f: mov    %rdi,0x40(%rsp)
  0x000000010f7df614: mov    %r8,0x38(%rsp)
  0x000000010f7df619: mov    %r9,0x30(%rsp)
  0x000000010f7df61e: mov    %r10,0x28(%rsp)
  0x000000010f7df623: mov    %r11,0x20(%rsp)
  0x000000010f7df628: mov    %r12,0x18(%rsp)
  0x000000010f7df62d: mov    %r13,0x10(%rsp)
  0x000000010f7df632: mov    %r14,0x8(%rsp)
  0x000000010f7df637: mov    %r15,(%rsp)
  0x000000010f7df63b: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7df645: movabs $0x10f7df5e5,%rsi  ;   {internal_word}
  0x000000010f7df64f: mov    %rsp,%rdx
  0x000000010f7df652: and    $0xfffffffffffffff0,%rsp
  0x000000010f7df656: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7df65b: hlt    
[Deopt Handler Code]
  0x000000010f7df65c: movabs $0x10f7df65c,%r10  ;   {section_word}
  0x000000010f7df666: push   %r10
  0x000000010f7df668: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7df66d: hlt    
  0x000000010f7df66e: hlt    
  0x000000010f7df66f: hlt    
Decoding compiled method 0x000000010f7e37d0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010ebb4d90} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder'
  0x000000010f7e3940: callq  0x000000010948a904  ;   {runtime_call}
  0x000000010f7e3945: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7e3950: mov    %eax,-0x14000(%rsp)
  0x000000010f7e3957: push   %rbp
  0x000000010f7e3958: sub    $0x50,%rsp
  0x000000010f7e395c: mov    0x10(%rsi),%r14d
  0x000000010f7e3960: mov    0x18(%rsi),%r10d
  0x000000010f7e3964: mov    %r10d,0x8(%rsp)
  0x000000010f7e3969: mov    0x48(%rsi),%rbp
  0x000000010f7e396d: mov    0x40(%rsi),%r10
  0x000000010f7e3971: mov    %r10,(%rsp)
  0x000000010f7e3975: mov    0x20(%rsi),%r11d
  0x000000010f7e3979: mov    %r11d,0x24(%rsp)
  0x000000010f7e397e: mov    0x28(%rsi),%r13
  0x000000010f7e3982: mov    0x38(%rsi),%ebx
  0x000000010f7e3985: mov    %rsi,%rdi
  0x000000010f7e3988: movabs $0x1094e9b52,%r10
  0x000000010f7e3992: callq  *%r10
  0x000000010f7e3995: test   %rbp,%rbp
  0x000000010f7e3998: je     0x000000010f7e3bb3
  0x000000010f7e399e: mov    %rbp,%r8
  0x000000010f7e39a1: mov    0x8(%rbp),%r11d
  0x000000010f7e39a5: cmp    $0xf80051d9,%r11d  ;   {metadata('sun/nio/cs/UTF_8$Encoder')}
  0x000000010f7e39ac: jne    0x000000010f7e3cb5
  0x000000010f7e39b2: mov    %rbp,%rax
  0x000000010f7e39b5: mov    (%rsp),%r9
  0x000000010f7e39b9: test   %r9,%r9
  0x000000010f7e39bc: je     0x000000010f7e3bbd
  0x000000010f7e39c2: mov    0x8(%r9),%r10d
  0x000000010f7e39c6: cmp    $0xf8000041,%r10d  ;   {metadata({type array char})}
  0x000000010f7e39cd: jne    0x000000010f7e3cb9
  0x000000010f7e39d3: mov    %r9,%r11
  0x000000010f7e39d6: test   %r13,%r13
  0x000000010f7e39d9: je     0x000000010f7e3bc5
  0x000000010f7e39df: mov    0x8(%r13),%r10d
  0x000000010f7e39e3: cmp    $0xf80000f5,%r10d  ;   {metadata({type array byte})}
  0x000000010f7e39ea: jne    0x000000010f7e3cb9  ;*iload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@20 (line 709)

  0x000000010f7e39f0: mov    %r13,%rbp
  0x000000010f7e39f3: add    $0xc,%rbp          ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x000000010f7e39f7: mov    0x8(%rsp),%edi
  0x000000010f7e39fb: cmp    %r14d,%edi
  0x000000010f7e39fe: jge    0x000000010f7e3b9b  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@24 (line 709)

  0x000000010f7e3a04: mov    %ebx,%r10d
  0x000000010f7e3a07: sub    %edi,%r10d         ;*iload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@20 (line 709)

  0x000000010f7e3a0a: mov    %edi,%r9d
  0x000000010f7e3a0d: sub    %ebx,%r9d
  0x000000010f7e3a10: mov    %edi,%r8d
  0x000000010f7e3a13: inc    %r8d
  0x000000010f7e3a16: cmp    %r9d,%r8d
  0x000000010f7e3a19: cmovl  %r9d,%r8d
  0x000000010f7e3a1d: xor    %r9d,%r9d
  0x000000010f7e3a20: cmp    %r9d,%r8d
  0x000000010f7e3a23: cmovl  %r9d,%r8d
  0x000000010f7e3a27: cmp    %r14d,%r8d
  0x000000010f7e3a2a: mov    %r14d,%ecx
  0x000000010f7e3a2d: cmovg  %r14d,%r8d         ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x000000010f7e3a31: mov    %edi,%ebx
  0x000000010f7e3a33: add    %r10d,%ebx
  0x000000010f7e3a36: mov    0xc(%r11),%r14d    ; implicit exception: dispatches to 0x000000010f7e3d2f
  0x000000010f7e3a3a: cmp    %r14d,%ebx
  0x000000010f7e3a3d: jae    0x000000010f7e3c21
  0x000000010f7e3a43: movzwl 0x10(%r11,%rbx,2),%edx  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x000000010f7e3a49: cmp    $0x80,%edx
  0x000000010f7e3a4f: jge    0x000000010f7e3ce4  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x000000010f7e3a55: test   %r13,%r13
  0x000000010f7e3a58: je     0x000000010f7e3c59
  0x000000010f7e3a5e: vmovq  %rax,%xmm0
  0x000000010f7e3a63: mov    0x0(%rbp),%esi     ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x000000010f7e3a66: mov    %edi,%r9d
  0x000000010f7e3a69: inc    %r9d               ;*iinc
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@40 (line 710)

  0x000000010f7e3a6c: cmp    %esi,%edi
  0x000000010f7e3a6e: jae    0x000000010f7e3c71
  0x000000010f7e3a74: movslq %edi,%rdi
  0x000000010f7e3a77: mov    %dl,0x10(%r13,%rdi,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x000000010f7e3a7c: cmp    %r8d,%r9d
  0x000000010f7e3a7f: jge    0x000000010f7e3a86  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@24 (line 709)

  0x000000010f7e3a81: mov    %r9d,%edi
  0x000000010f7e3a84: jmp    0x000000010f7e3a31
  0x000000010f7e3a86: mov    %r14d,%edi
  0x000000010f7e3a89: sub    %r10d,%edi
  0x000000010f7e3a8c: cmp    %esi,%edi
  0x000000010f7e3a8e: cmovg  %esi,%edi
  0x000000010f7e3a91: cmp    %ecx,%edi
  0x000000010f7e3a93: cmovg  %ecx,%edi
  0x000000010f7e3a96: mov    %edi,%r8d
  0x000000010f7e3a99: add    $0xfffffffd,%r8d
  0x000000010f7e3a9d: mov    $0x80000000,%eax
  0x000000010f7e3aa2: cmp    %r8d,%edi
  0x000000010f7e3aa5: cmovl  %eax,%r8d
  0x000000010f7e3aa9: cmp    %r8d,%r9d
  0x000000010f7e3aac: jge    0x000000010f7e3cdd
  0x000000010f7e3ab2: jmp    0x000000010f7e3ac2
  0x000000010f7e3ab4: nopl   0x0(%rax,%rax,1)
  0x000000010f7e3abc: data16 data16 xchg %ax,%ax
  0x000000010f7e3ac0: mov    %ebp,%ecx          ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x000000010f7e3ac2: mov    %r9d,%ebx
  0x000000010f7e3ac5: add    %r10d,%ebx
  0x000000010f7e3ac8: movzwl 0x10(%r11,%rbx,2),%edi  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x000000010f7e3ace: cmp    $0x80,%edi
  0x000000010f7e3ad4: jge    0x000000010f7e3bdb  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x000000010f7e3ada: mov    %ecx,%ebp
  0x000000010f7e3adc: movslq %ebx,%rcx
  0x000000010f7e3adf: movzwl 0x12(%r11,%rcx,2),%edx  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x000000010f7e3ae5: movslq %r9d,%rcx
  0x000000010f7e3ae8: mov    %dil,0x10(%r13,%rcx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x000000010f7e3aed: cmp    $0x80,%edx
  0x000000010f7e3af3: jge    0x000000010f7e3bdf  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x000000010f7e3af9: mov    %r10d,%ebx
  0x000000010f7e3afc: add    %r9d,%ebx
  0x000000010f7e3aff: movslq %r9d,%rcx
  0x000000010f7e3b02: mov    %dl,0x11(%r13,%rcx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x000000010f7e3b07: movslq %ebx,%rdx
  0x000000010f7e3b0a: movzwl 0x14(%r11,%rdx,2),%edi  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x000000010f7e3b10: cmp    $0x80,%edi
  0x000000010f7e3b16: jge    0x000000010f7e3bd2  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x000000010f7e3b1c: mov    %dil,0x12(%r13,%rcx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x000000010f7e3b21: movzwl 0x16(%r11,%rdx,2),%edx  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x000000010f7e3b27: cmp    $0x80,%edx
  0x000000010f7e3b2d: jge    0x000000010f7e3be6  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x000000010f7e3b33: mov    %dl,0x13(%r13,%rcx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x000000010f7e3b38: add    $0x4,%r9d          ;*iinc
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@40 (line 710)

  0x000000010f7e3b3c: cmp    %r8d,%r9d
  0x000000010f7e3b3f: jl     0x000000010f7e3ac0  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@24 (line 709)

  0x000000010f7e3b45: add    $0x4,%ebx          ;*iinc
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@45 (line 710)

  0x000000010f7e3b48: mov    %ebp,%ecx
  0x000000010f7e3b4a: cmp    %ecx,%r9d
  0x000000010f7e3b4d: jge    0x000000010f7e3b93  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x000000010f7e3b4f: mov    %r9d,%ebx
  0x000000010f7e3b52: add    %r10d,%ebx
  0x000000010f7e3b55: cmp    %r14d,%ebx
  0x000000010f7e3b58: jae    0x000000010f7e3c26
  0x000000010f7e3b5e: movzwl 0x10(%r11,%rbx,2),%edx  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x000000010f7e3b64: cmp    $0x80,%edx
  0x000000010f7e3b6a: jge    0x000000010f7e3d25  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x000000010f7e3b70: mov    %r9d,%edi
  0x000000010f7e3b73: inc    %edi               ;*iinc
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@40 (line 710)

  0x000000010f7e3b75: cmp    %esi,%r9d
  0x000000010f7e3b78: jae    0x000000010f7e3c7f
  0x000000010f7e3b7e: movslq %r9d,%r8
  0x000000010f7e3b81: mov    %dl,0x10(%r13,%r8,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x000000010f7e3b86: cmp    %ecx,%edi
  0x000000010f7e3b88: jge    0x000000010f7e3b8f  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@24 (line 709)

  0x000000010f7e3b8a: mov    %edi,%r9d
  0x000000010f7e3b8d: jmp    0x000000010f7e3b4f
  0x000000010f7e3b8f: inc    %ebx               ;*iinc
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@45 (line 710)

  0x000000010f7e3b91: jmp    0x000000010f7e3b96
  0x000000010f7e3b93: mov    %r9d,%edi
  0x000000010f7e3b96: vmovq  %xmm0,%rax
  0x000000010f7e3b9b: cmp    0x24(%rsp),%ebx
  0x000000010f7e3b9f: jl     0x000000010f7e3cec  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@57 (line 712)

  0x000000010f7e3ba5: mov    %edi,%eax
  0x000000010f7e3ba7: add    $0x50,%rsp
  0x000000010f7e3bab: pop    %rbp
  0x000000010f7e3bac: test   %eax,-0x8d48bb2(%rip)        # 0x0000000106a9b000
                                                ;   {poll_return}
  0x000000010f7e3bb2: retq   
  0x000000010f7e3bb3: xor    %eax,%eax
  0x000000010f7e3bb5: mov    %rbp,%r8
  0x000000010f7e3bb8: jmpq   0x000000010f7e39b5
  0x000000010f7e3bbd: xor    %r11d,%r11d
  0x000000010f7e3bc0: jmpq   0x000000010f7e39d6
  0x000000010f7e3bc5: mov    $0xc,%ebp
  0x000000010f7e3bca: xor    %r13d,%r13d
  0x000000010f7e3bcd: jmpq   0x000000010f7e39f7
  0x000000010f7e3bd2: add    $0x2,%ebx          ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x000000010f7e3bd5: add    $0x2,%r9d          ;*iinc
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@40 (line 710)

  0x000000010f7e3bd9: mov    %ebp,%ecx
  0x000000010f7e3bdb: mov    %edi,%edx
  0x000000010f7e3bdd: jmp    0x000000010f7e3bef
  0x000000010f7e3bdf: inc    %ebx               ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x000000010f7e3be1: inc    %r9d               ;*iinc
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@40 (line 710)

  0x000000010f7e3be4: jmp    0x000000010f7e3bed
  0x000000010f7e3be6: add    $0x3,%ebx          ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x000000010f7e3be9: add    $0x3,%r9d          ;*iinc
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@40 (line 710)

  0x000000010f7e3bed: mov    %ebp,%ecx
  0x000000010f7e3bef: vmovq  %xmm0,%rax         ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x000000010f7e3bf4: mov    $0xffffff65,%esi
  0x000000010f7e3bf9: mov    %r11,%rbp
  0x000000010f7e3bfc: mov    %ebx,(%rsp)
  0x000000010f7e3bff: mov    %r13,0x8(%rsp)
  0x000000010f7e3c04: mov    %r9d,0x4(%rsp)
  0x000000010f7e3c09: mov    %edx,0x10(%rsp)
  0x000000010f7e3c0d: mov    %rax,0x18(%rsp)
  0x000000010f7e3c12: mov    %ecx,0x20(%rsp)
  0x000000010f7e3c16: nop
  0x000000010f7e3c17: callq  0x000000010f7166a0  ; OopMap{rbp=Oop [8]=Oop [24]=Oop off=732}
                                                ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)
                                                ;   {runtime_call}
  0x000000010f7e3c1c: callq  0x000000010948a904  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)
                                                ;   {runtime_call}
  0x000000010f7e3c21: mov    %edi,%r9d
  0x000000010f7e3c24: jmp    0x000000010f7e3c2b
  0x000000010f7e3c26: vmovq  %xmm0,%rax
  0x000000010f7e3c2b: mov    $0xffffffe4,%esi
  0x000000010f7e3c30: mov    %r13,0x8(%rsp)
  0x000000010f7e3c35: mov    %r9d,0x4(%rsp)
  0x000000010f7e3c3a: mov    %r11,0x10(%rsp)
  0x000000010f7e3c3f: mov    %ebx,0x18(%rsp)
  0x000000010f7e3c43: mov    %rax,0x28(%rsp)
  0x000000010f7e3c48: mov    %ecx,0x20(%rsp)
  0x000000010f7e3c4c: data16 xchg %ax,%ax
  0x000000010f7e3c4f: callq  0x000000010f7166a0  ; OopMap{[8]=Oop [16]=Oop [40]=Oop off=788}
                                                ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)
                                                ;   {runtime_call}
  0x000000010f7e3c54: callq  0x000000010948a904  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)
                                                ;   {runtime_call}
  0x000000010f7e3c59: movsbl %dl,%ebp           ;*i2b  ; - sun.nio.cs.UTF_8$Encoder::encode@49 (line 710)

  0x000000010f7e3c5c: mov    $0xfffffff6,%esi
  0x000000010f7e3c61: mov    %edi,(%rsp)
  0x000000010f7e3c64: data16 xchg %ax,%ax
  0x000000010f7e3c67: callq  0x000000010f7166a0  ; OopMap{off=812}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)
                                                ;   {runtime_call}
  0x000000010f7e3c6c: callq  0x000000010948a904  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)
                                                ;   {runtime_call}
  0x000000010f7e3c71: movsbl %dl,%ebp           ;*i2b  ; - sun.nio.cs.UTF_8$Encoder::encode@49 (line 710)

  0x000000010f7e3c74: inc    %ebx               ;*iinc
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@45 (line 710)

  0x000000010f7e3c76: mov    %r9d,(%rsp)
  0x000000010f7e3c7a: mov    %edi,%r9d
  0x000000010f7e3c7d: jmp    0x000000010f7e3c87
  0x000000010f7e3c7f: movsbl %dl,%ebp           ;*i2b  ; - sun.nio.cs.UTF_8$Encoder::encode@49 (line 710)

  0x000000010f7e3c82: inc    %ebx               ;*iinc
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@45 (line 710)

  0x000000010f7e3c84: mov    %edi,(%rsp)
  0x000000010f7e3c87: mov    $0xffffffe4,%esi
  0x000000010f7e3c8c: mov    %r11,0x8(%rsp)
  0x000000010f7e3c91: mov    %ebx,0x4(%rsp)
  0x000000010f7e3c95: mov    %r13,0x18(%rsp)
  0x000000010f7e3c9a: mov    %r9d,0x20(%rsp)
  0x000000010f7e3c9f: vmovsd %xmm0,0x28(%rsp)
  0x000000010f7e3ca5: mov    %ecx,0x30(%rsp)
  0x000000010f7e3ca9: xchg   %ax,%ax
  0x000000010f7e3cab: callq  0x000000010f7166a0  ; OopMap{[8]=Oop [24]=Oop [40]=Oop off=880}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)
                                                ;   {runtime_call}
  0x000000010f7e3cb0: callq  0x000000010948a904  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)
                                                ;   {runtime_call}
  0x000000010f7e3cb5: mov    (%rsp),%r9
  0x000000010f7e3cb9: mov    $0xffffff9d,%esi
  0x000000010f7e3cbe: mov    %ebx,%ebp
  0x000000010f7e3cc0: mov    %r13,(%rsp)
  0x000000010f7e3cc4: mov    %r8,0x10(%rsp)
  0x000000010f7e3cc9: mov    %r9,0x18(%rsp)
  0x000000010f7e3cce: mov    %r14d,0x20(%rsp)
  0x000000010f7e3cd3: callq  0x000000010f7166a0  ; OopMap{[0]=Oop [16]=Oop [24]=Oop off=920}
                                                ;*iload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@20 (line 709)
                                                ;   {runtime_call}
  0x000000010f7e3cd8: callq  0x000000010948a904  ;*iload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@20 (line 709)
                                                ;   {runtime_call}
  0x000000010f7e3cdd: inc    %ebx               ;*iinc
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@45 (line 710)

  0x000000010f7e3cdf: jmpq   0x000000010f7e3b4a
  0x000000010f7e3ce4: mov    %edi,%r9d
  0x000000010f7e3ce7: jmpq   0x000000010f7e3bf4  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@24 (line 709)

  0x000000010f7e3cec: mov    $0xffffff65,%esi
  0x000000010f7e3cf1: mov    %r11,%rbp
  0x000000010f7e3cf4: mov    %r13,0x8(%rsp)
  0x000000010f7e3cf9: mov    %edi,0x4(%rsp)
  0x000000010f7e3cfd: mov    %ebx,0x10(%rsp)
  0x000000010f7e3d01: mov    %rax,0x18(%rsp)
  0x000000010f7e3d06: mov    %rax,-0x8(%rsp)
  0x000000010f7e3d0b: mov    0x24(%rsp),%eax
  0x000000010f7e3d0f: mov    %eax,0x14(%rsp)
  0x000000010f7e3d13: mov    -0x8(%rsp),%rax
  0x000000010f7e3d18: data16 xchg %ax,%ax
  0x000000010f7e3d1b: callq  0x000000010f7166a0  ; OopMap{rbp=Oop [8]=Oop [24]=Oop off=992}
                                                ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@57 (line 712)
                                                ;   {runtime_call}
  0x000000010f7e3d20: callq  0x000000010948a904  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@57 (line 712)
                                                ;   {runtime_call}
  0x000000010f7e3d25: vmovq  %xmm0,%rax
  0x000000010f7e3d2a: jmpq   0x000000010f7e3bf4
  0x000000010f7e3d2f: mov    $0xfffffff6,%esi
  0x000000010f7e3d34: mov    %ebx,%ebp
  0x000000010f7e3d36: nop
  0x000000010f7e3d37: callq  0x000000010f7166a0  ; OopMap{off=1020}
                                                ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)
                                                ;   {runtime_call}
  0x000000010f7e3d3c: callq  0x000000010948a904  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)
                                                ;   {runtime_call}
  0x000000010f7e3d41: hlt    
  0x000000010f7e3d42: hlt    
  0x000000010f7e3d43: hlt    
  0x000000010f7e3d44: hlt    
  0x000000010f7e3d45: hlt    
  0x000000010f7e3d46: hlt    
  0x000000010f7e3d47: hlt    
  0x000000010f7e3d48: hlt    
  0x000000010f7e3d49: hlt    
  0x000000010f7e3d4a: hlt    
  0x000000010f7e3d4b: hlt    
  0x000000010f7e3d4c: hlt    
  0x000000010f7e3d4d: hlt    
  0x000000010f7e3d4e: hlt    
  0x000000010f7e3d4f: hlt    
  0x000000010f7e3d50: hlt    
  0x000000010f7e3d51: hlt    
  0x000000010f7e3d52: hlt    
  0x000000010f7e3d53: hlt    
  0x000000010f7e3d54: hlt    
  0x000000010f7e3d55: hlt    
  0x000000010f7e3d56: hlt    
  0x000000010f7e3d57: hlt    
  0x000000010f7e3d58: hlt    
  0x000000010f7e3d59: hlt    
  0x000000010f7e3d5a: hlt    
  0x000000010f7e3d5b: hlt    
  0x000000010f7e3d5c: hlt    
  0x000000010f7e3d5d: hlt    
  0x000000010f7e3d5e: hlt    
  0x000000010f7e3d5f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f7e3d60: jmpq   0x000000010f73fba0  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010f7e3d65: callq  0x000000010f7e3d6a
  0x000000010f7e3d6a: subq   $0x5,(%rsp)
  0x000000010f7e3d6f: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7e3d74: hlt    
  0x000000010f7e3d75: hlt    
  0x000000010f7e3d76: hlt    
  0x000000010f7e3d77: hlt    
Decoding compiled method 0x000000010f7d4210:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010eade248} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder'
  # this:     rsi:rsi   = 'java/lang/StringBuilder'
  # parm0:    rdx:rdx   = 'java/lang/String'
  #           [sp+0x40]  (sp of caller)
  0x000000010f7d4380: mov    0x8(%rsi),%r10d
  0x000000010f7d4384: shl    $0x3,%r10
  0x000000010f7d4388: cmp    %rax,%r10
  0x000000010f7d438b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7d4391: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7d439c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7d43a0: mov    %eax,-0x14000(%rsp)
  0x000000010f7d43a7: push   %rbp
  0x000000010f7d43a8: sub    $0x30,%rsp
  0x000000010f7d43ac: movabs $0x10ec81440,%rdi  ;   {metadata(method data for {method} {0x000000010eade248} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f7d43b6: mov    0xdc(%rdi),%ebx
  0x000000010f7d43bc: add    $0x8,%ebx
  0x000000010f7d43bf: mov    %ebx,0xdc(%rdi)
  0x000000010f7d43c5: movabs $0x10eade248,%rdi  ;   {metadata({method} {0x000000010eade248} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f7d43cf: and    $0x1ff8,%ebx
  0x000000010f7d43d5: cmp    $0x0,%ebx
  0x000000010f7d43d8: je     0x000000010f7d4415  ;*aload_0
                                                ; - java.lang.StringBuilder::append@0 (line 136)

  0x000000010f7d43de: mov    %rsi,%rdi
  0x000000010f7d43e1: movabs $0x10ec81440,%rbx  ;   {metadata(method data for {method} {0x000000010eade248} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f7d43eb: addq   $0x1,0x108(%rbx)
  0x000000010f7d43f3: mov    %rsi,%rdi
  0x000000010f7d43f6: mov    %rdi,%rsi          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010f7d43f9: mov    %rdi,0x20(%rsp)
  0x000000010f7d43fe: nop
  0x000000010f7d43ff: callq  0x000000010f7170a0  ; OopMap{[32]=Oop off=132}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ;   {optimized virtual_call}
  0x000000010f7d4404: mov    0x20(%rsp),%rax
  0x000000010f7d4409: add    $0x30,%rsp
  0x000000010f7d440d: pop    %rbp
  0x000000010f7d440e: test   %eax,-0x8d39314(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7d4414: retq   
  0x000000010f7d4415: mov    %rdi,0x8(%rsp)
  0x000000010f7d441a: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7d4422: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop rdx=Oop off=167}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ;   {runtime_call}
  0x000000010f7d4427: jmp    0x000000010f7d43de
  0x000000010f7d4429: nop
  0x000000010f7d442a: nop
  0x000000010f7d442b: mov    0x2a8(%r15),%rax
  0x000000010f7d4432: movabs $0x0,%r10
  0x000000010f7d443c: mov    %r10,0x2a8(%r15)
  0x000000010f7d4443: movabs $0x0,%r10
  0x000000010f7d444d: mov    %r10,0x2b0(%r15)
  0x000000010f7d4454: add    $0x30,%rsp
  0x000000010f7d4458: pop    %rbp
  0x000000010f7d4459: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7d445e: hlt    
  0x000000010f7d445f: hlt    
[Stub Code]
  0x000000010f7d4460: nop                       ;   {no_reloc}
  0x000000010f7d4461: nop
  0x000000010f7d4462: nop
  0x000000010f7d4463: nop
  0x000000010f7d4464: nop
  0x000000010f7d4465: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7d446f: jmpq   0x000000010f7d446f  ;   {runtime_call}
[Exception Handler]
  0x000000010f7d4474: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f7d4479: mov    %rsp,-0x28(%rsp)
  0x000000010f7d447e: sub    $0x80,%rsp
  0x000000010f7d4485: mov    %rax,0x78(%rsp)
  0x000000010f7d448a: mov    %rcx,0x70(%rsp)
  0x000000010f7d448f: mov    %rdx,0x68(%rsp)
  0x000000010f7d4494: mov    %rbx,0x60(%rsp)
  0x000000010f7d4499: mov    %rbp,0x50(%rsp)
  0x000000010f7d449e: mov    %rsi,0x48(%rsp)
  0x000000010f7d44a3: mov    %rdi,0x40(%rsp)
  0x000000010f7d44a8: mov    %r8,0x38(%rsp)
  0x000000010f7d44ad: mov    %r9,0x30(%rsp)
  0x000000010f7d44b2: mov    %r10,0x28(%rsp)
  0x000000010f7d44b7: mov    %r11,0x20(%rsp)
  0x000000010f7d44bc: mov    %r12,0x18(%rsp)
  0x000000010f7d44c1: mov    %r13,0x10(%rsp)
  0x000000010f7d44c6: mov    %r14,0x8(%rsp)
  0x000000010f7d44cb: mov    %r15,(%rsp)
  0x000000010f7d44cf: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7d44d9: movabs $0x10f7d4479,%rsi  ;   {internal_word}
  0x000000010f7d44e3: mov    %rsp,%rdx
  0x000000010f7d44e6: and    $0xfffffffffffffff0,%rsp
  0x000000010f7d44ea: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7d44ef: hlt    
[Deopt Handler Code]
  0x000000010f7d44f0: movabs $0x10f7d44f0,%r10  ;   {section_word}
  0x000000010f7d44fa: push   %r10
  0x000000010f7d44fc: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7d4501: hlt    
  0x000000010f7d4502: hlt    
  0x000000010f7d4503: hlt    
  0x000000010f7d4504: hlt    
  0x000000010f7d4505: hlt    
  0x000000010f7d4506: hlt    
  0x000000010f7d4507: hlt    
Decoding compiled method 0x000000010f7e4310:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010ea6a180} 'indexOf' '(II)I' in 'java/lang/String'
  0x000000010f7e4460: callq  0x000000010948a904  ;   {runtime_call}
  0x000000010f7e4465: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7e4470: mov    %eax,-0x14000(%rsp)
  0x000000010f7e4477: push   %rbp
  0x000000010f7e4478: sub    $0x30,%rsp
  0x000000010f7e447c: mov    (%rsi),%ebx
  0x000000010f7e447e: mov    0x8(%rsi),%r14
  0x000000010f7e4482: mov    0x20(%rsi),%r13d
  0x000000010f7e4486: mov    0x10(%rsi),%ebp
  0x000000010f7e4489: mov    %rsi,%rdi
  0x000000010f7e448c: movabs $0x1094e9b52,%r10
  0x000000010f7e4496: callq  *%r10
  0x000000010f7e4499: test   %r14,%r14
  0x000000010f7e449c: je     0x000000010f7e45e3
  0x000000010f7e44a2: mov    0x8(%r14),%r11d
  0x000000010f7e44a6: cmp    $0xf8000041,%r11d  ;   {metadata({type array char})}
  0x000000010f7e44ad: jne    0x000000010f7e4629  ;*iload
                                                ; - java.lang.String::indexOf@37 (line 1558)

  0x000000010f7e44b3: mov    %r14,%r10
  0x000000010f7e44b6: add    $0xc,%r10          ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010f7e44ba: cmp    %ebp,%ebx
  0x000000010f7e44bc: jge    0x000000010f7e45ae  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x000000010f7e44c2: mov    %ebx,%r11d
  0x000000010f7e44c5: inc    %r11d
  0x000000010f7e44c8: xor    %r8d,%r8d
  0x000000010f7e44cb: cmp    %r8d,%r11d
  0x000000010f7e44ce: cmovl  %r8d,%r11d
  0x000000010f7e44d2: cmp    %ebp,%r11d
  0x000000010f7e44d5: cmovg  %ebp,%r11d
  0x000000010f7e44d9: test   %r14,%r14
  0x000000010f7e44dc: je     0x000000010f7e45f1
  0x000000010f7e44e2: mov    (%r10),%r9d
  0x000000010f7e44e5: cmp    %r9d,%ebx
  0x000000010f7e44e8: jae    0x000000010f7e4605  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010f7e44ee: movzwl 0x10(%r14,%rbx,2),%r8d
  0x000000010f7e44f4: cmp    %r13d,%r8d
  0x000000010f7e44f7: je     0x000000010f7e45b3  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010f7e44fd: inc    %ebx               ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x000000010f7e44ff: cmp    %r11d,%ebx
  0x000000010f7e4502: jl     0x000000010f7e44d9  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x000000010f7e4504: cmp    %r9d,%ebp
  0x000000010f7e4507: mov    %ebp,%r11d
  0x000000010f7e450a: cmovg  %r9d,%r11d
  0x000000010f7e450e: mov    %r11d,%edi
  0x000000010f7e4511: add    $0xfffffff9,%edi
  0x000000010f7e4514: mov    $0x80000000,%r8d
  0x000000010f7e451a: cmp    %edi,%r11d
  0x000000010f7e451d: cmovl  %r8d,%edi
  0x000000010f7e4521: cmp    %edi,%ebx
  0x000000010f7e4523: jge    0x000000010f7e4592
  0x000000010f7e4525: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7e4530: movzwl 0x10(%r14,%rbx,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010f7e4536: cmp    %r13d,%r11d
  0x000000010f7e4539: je     0x000000010f7e45b3  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010f7e453b: movslq %ebx,%r10
  0x000000010f7e453e: movzwl 0x12(%r14,%r10,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010f7e4544: cmp    %r13d,%r11d
  0x000000010f7e4547: je     0x000000010f7e45c1  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010f7e4549: movzwl 0x14(%r14,%r10,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010f7e454f: cmp    %r13d,%r11d
  0x000000010f7e4552: je     0x000000010f7e45c5  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010f7e4554: movzwl 0x16(%r14,%r10,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010f7e455a: cmp    %r13d,%r11d
  0x000000010f7e455d: je     0x000000010f7e45ca  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010f7e455f: movzwl 0x18(%r14,%r10,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010f7e4565: cmp    %r13d,%r11d
  0x000000010f7e4568: je     0x000000010f7e45cf  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010f7e456a: movzwl 0x1a(%r14,%r10,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010f7e4570: cmp    %r13d,%r11d
  0x000000010f7e4573: je     0x000000010f7e45d4  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010f7e4575: movzwl 0x1c(%r14,%r10,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010f7e457b: cmp    %r13d,%r11d
  0x000000010f7e457e: je     0x000000010f7e45d9  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010f7e4580: movzwl 0x1e(%r14,%r10,2),%r10d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010f7e4586: cmp    %r13d,%r10d
  0x000000010f7e4589: je     0x000000010f7e45de  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010f7e458b: add    $0x8,%ebx          ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x000000010f7e458e: cmp    %edi,%ebx
  0x000000010f7e4590: jl     0x000000010f7e4530  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x000000010f7e4592: cmp    %ebp,%ebx
  0x000000010f7e4594: jge    0x000000010f7e45ae
  0x000000010f7e4596: xchg   %ax,%ax
  0x000000010f7e4598: cmp    %r9d,%ebx
  0x000000010f7e459b: jae    0x000000010f7e460a  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010f7e459d: movzwl 0x10(%r14,%rbx,2),%r11d
  0x000000010f7e45a3: cmp    %r13d,%r11d
  0x000000010f7e45a6: je     0x000000010f7e45b3  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010f7e45a8: inc    %ebx               ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x000000010f7e45aa: cmp    %ebp,%ebx
  0x000000010f7e45ac: jl     0x000000010f7e4598  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x000000010f7e45ae: mov    $0xffffffff,%ebx   ;*iload
                                                ; - java.lang.String::indexOf@37 (line 1558)

  0x000000010f7e45b3: mov    %ebx,%eax
  0x000000010f7e45b5: add    $0x30,%rsp
  0x000000010f7e45b9: pop    %rbp
  0x000000010f7e45ba: test   %eax,-0x8d495c0(%rip)        # 0x0000000106a9b000
                                                ;   {poll_return}
  0x000000010f7e45c0: retq   
  0x000000010f7e45c1: inc    %ebx
  0x000000010f7e45c3: jmp    0x000000010f7e45b3
  0x000000010f7e45c5: add    $0x2,%ebx
  0x000000010f7e45c8: jmp    0x000000010f7e45b3
  0x000000010f7e45ca: add    $0x3,%ebx
  0x000000010f7e45cd: jmp    0x000000010f7e45b3
  0x000000010f7e45cf: add    $0x4,%ebx
  0x000000010f7e45d2: jmp    0x000000010f7e45b3
  0x000000010f7e45d4: add    $0x5,%ebx
  0x000000010f7e45d7: jmp    0x000000010f7e45b3
  0x000000010f7e45d9: add    $0x6,%ebx
  0x000000010f7e45dc: jmp    0x000000010f7e45b3
  0x000000010f7e45de: add    $0x7,%ebx          ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x000000010f7e45e1: jmp    0x000000010f7e45b3
  0x000000010f7e45e3: xor    %r14d,%r14d
  0x000000010f7e45e6: mov    $0xc,%r10d
  0x000000010f7e45ec: jmpq   0x000000010f7e44ba
  0x000000010f7e45f1: mov    $0xfffffff6,%esi
  0x000000010f7e45f6: mov    %ebx,%ebp
  0x000000010f7e45f8: data16 xchg %ax,%ax
  0x000000010f7e45fb: callq  0x000000010f7166a0  ; OopMap{off=416}
                                                ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)
                                                ;   {runtime_call}
  0x000000010f7e4600: callq  0x000000010948a904  ;   {runtime_call}
  0x000000010f7e4605: mov    %ebx,(%rsp)
  0x000000010f7e4608: jmp    0x000000010f7e460d
  0x000000010f7e460a: mov    %ebx,(%rsp)
  0x000000010f7e460d: mov    $0xffffffe4,%esi
  0x000000010f7e4612: mov    %r13d,0x4(%rsp)
  0x000000010f7e4617: mov    %r14,0x10(%rsp)
  0x000000010f7e461c: data16 xchg %ax,%ax
  0x000000010f7e461f: callq  0x000000010f7166a0  ; OopMap{[16]=Oop off=452}
                                                ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)
                                                ;   {runtime_call}
  0x000000010f7e4624: callq  0x000000010948a904  ;   {runtime_call}
  0x000000010f7e4629: mov    $0xffffff9d,%esi
  0x000000010f7e462e: mov    %r13d,(%rsp)
  0x000000010f7e4632: mov    %r14,0x8(%rsp)
  0x000000010f7e4637: mov    %ebx,0x4(%rsp)
  0x000000010f7e463b: callq  0x000000010f7166a0  ; OopMap{[8]=Oop off=480}
                                                ;*iload
                                                ; - java.lang.String::indexOf@37 (line 1558)
                                                ;   {runtime_call}
  0x000000010f7e4640: callq  0x000000010948a904  ;*iload
                                                ; - java.lang.String::indexOf@37 (line 1558)
                                                ;   {runtime_call}
  0x000000010f7e4645: hlt    
  0x000000010f7e4646: hlt    
  0x000000010f7e4647: hlt    
  0x000000010f7e4648: hlt    
  0x000000010f7e4649: hlt    
  0x000000010f7e464a: hlt    
  0x000000010f7e464b: hlt    
  0x000000010f7e464c: hlt    
  0x000000010f7e464d: hlt    
  0x000000010f7e464e: hlt    
  0x000000010f7e464f: hlt    
  0x000000010f7e4650: hlt    
  0x000000010f7e4651: hlt    
  0x000000010f7e4652: hlt    
  0x000000010f7e4653: hlt    
  0x000000010f7e4654: hlt    
  0x000000010f7e4655: hlt    
  0x000000010f7e4656: hlt    
  0x000000010f7e4657: hlt    
  0x000000010f7e4658: hlt    
  0x000000010f7e4659: hlt    
  0x000000010f7e465a: hlt    
  0x000000010f7e465b: hlt    
  0x000000010f7e465c: hlt    
  0x000000010f7e465d: hlt    
  0x000000010f7e465e: hlt    
  0x000000010f7e465f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f7e4660: jmpq   0x000000010f73fba0  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010f7e4665: callq  0x000000010f7e466a
  0x000000010f7e466a: subq   $0x5,(%rsp)
  0x000000010f7e466f: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7e4674: hlt    
  0x000000010f7e4675: hlt    
  0x000000010f7e4676: hlt    
  0x000000010f7e4677: hlt    
Decoding compiled method 0x000000010f7d3c10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx       = int
  #           [sp+0x30]  (sp of caller)
  0x000000010f7d3d60: mov    0x8(%rsi),%r10d
  0x000000010f7d3d64: shl    $0x3,%r10
  0x000000010f7d3d68: cmp    %r10,%rax
  0x000000010f7d3d6b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7d3d71: data16 xchg %ax,%ax
  0x000000010f7d3d74: nopl   0x0(%rax,%rax,1)
  0x000000010f7d3d7c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7d3d80: mov    %eax,-0x14000(%rsp)
  0x000000010f7d3d87: push   %rbp
  0x000000010f7d3d88: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)

  0x000000010f7d3d8c: test   %edx,%edx
  0x000000010f7d3d8e: jl     0x000000010f7d3dcd  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)

  0x000000010f7d3d90: mov    0xc(%rsi),%r10d    ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)

  0x000000010f7d3d94: mov    0xc(%r12,%r10,8),%ebp  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; implicit exception: dispatches to 0x000000010f7d3dfd
  0x000000010f7d3d99: cmp    %ebp,%edx
  0x000000010f7d3d9b: jge    0x000000010f7d3de5  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)

  0x000000010f7d3d9d: cmp    %ebp,%edx
  0x000000010f7d3d9f: jae    0x000000010f7d3db7
  0x000000010f7d3da1: shl    $0x3,%r10
  0x000000010f7d3da5: movzwl 0x10(%r10,%rdx,2),%eax
  0x000000010f7d3dab: add    $0x20,%rsp
  0x000000010f7d3daf: pop    %rbp
  0x000000010f7d3db0: test   %eax,-0x8d38db6(%rip)        # 0x0000000106a9b000
                                                ;   {poll_return}
  0x000000010f7d3db6: retq   
  0x000000010f7d3db7: mov    $0xffffffe4,%esi
  0x000000010f7d3dbc: mov    %edx,%ebp
  0x000000010f7d3dbe: mov    %r10d,(%rsp)
  0x000000010f7d3dc2: nop
  0x000000010f7d3dc3: callq  0x000000010f7166a0  ; OopMap{[0]=NarrowOop off=104}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ;   {runtime_call}
  0x000000010f7d3dc8: callq  0x000000010948a904  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ;   {runtime_call}
  0x000000010f7d3dcd: mov    %rsi,%rbp
  0x000000010f7d3dd0: mov    %edx,0x4(%rsp)
  0x000000010f7d3dd4: mov    $0xffffff65,%esi
  0x000000010f7d3dd9: xchg   %ax,%ax
  0x000000010f7d3ddb: callq  0x000000010f7166a0  ; OopMap{rbp=Oop off=128}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ;   {runtime_call}
  0x000000010f7d3de0: callq  0x000000010948a904  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ;   {runtime_call}
  0x000000010f7d3de5: mov    %rsi,(%rsp)
  0x000000010f7d3de9: mov    %edx,0xc(%rsp)
  0x000000010f7d3ded: mov    $0xffffff65,%esi
  0x000000010f7d3df2: nop
  0x000000010f7d3df3: callq  0x000000010f7166a0  ; OopMap{[0]=Oop off=152}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ;   {runtime_call}
  0x000000010f7d3df8: callq  0x000000010948a904  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ;   {runtime_call}
  0x000000010f7d3dfd: mov    $0xfffffff6,%esi
  0x000000010f7d3e02: nop
  0x000000010f7d3e03: callq  0x000000010f7166a0  ; OopMap{off=168}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ;   {runtime_call}
  0x000000010f7d3e08: callq  0x000000010948a904  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ;   {runtime_call}
  0x000000010f7d3e0d: hlt    
  0x000000010f7d3e0e: hlt    
  0x000000010f7d3e0f: hlt    
  0x000000010f7d3e10: hlt    
  0x000000010f7d3e11: hlt    
  0x000000010f7d3e12: hlt    
  0x000000010f7d3e13: hlt    
  0x000000010f7d3e14: hlt    
  0x000000010f7d3e15: hlt    
  0x000000010f7d3e16: hlt    
  0x000000010f7d3e17: hlt    
  0x000000010f7d3e18: hlt    
  0x000000010f7d3e19: hlt    
  0x000000010f7d3e1a: hlt    
  0x000000010f7d3e1b: hlt    
  0x000000010f7d3e1c: hlt    
  0x000000010f7d3e1d: hlt    
  0x000000010f7d3e1e: hlt    
  0x000000010f7d3e1f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f7d3e20: jmpq   0x000000010f73fba0  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010f7d3e25: callq  0x000000010f7d3e2a
  0x000000010f7d3e2a: subq   $0x5,(%rsp)
  0x000000010f7d3e2f: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7d3e34: hlt    
  0x000000010f7d3e35: hlt    
  0x000000010f7d3e36: hlt    
  0x000000010f7d3e37: hlt    
Decoding compiled method 0x000000010f7e4990:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010ea6a000} 'hashCode' '()I' in 'java/lang/String'
  0x000000010f7e4ae0: callq  0x000000010948a904  ;   {runtime_call}
  0x000000010f7e4ae5: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7e4af0: mov    %eax,-0x14000(%rsp)
  0x000000010f7e4af7: push   %rbp
  0x000000010f7e4af8: sub    $0x30,%rsp
  0x000000010f7e4afc: mov    (%rsi),%r13d
  0x000000010f7e4aff: mov    0x10(%rsi),%ebx
  0x000000010f7e4b02: mov    0x18(%rsi),%rbp
  0x000000010f7e4b06: mov    0x8(%rsi),%r14
  0x000000010f7e4b0a: mov    %rsi,%rdi
  0x000000010f7e4b0d: movabs $0x1094e9b52,%r10
  0x000000010f7e4b17: callq  *%r10
  0x000000010f7e4b1a: test   %rbp,%rbp
  0x000000010f7e4b1d: je     0x000000010f7e4cb6
  0x000000010f7e4b23: mov    0x8(%rbp),%r11d
  0x000000010f7e4b27: cmp    $0xf80002da,%r11d  ;   {metadata('java/lang/String')}
  0x000000010f7e4b2e: jne    0x000000010f7e4ce5
  0x000000010f7e4b34: mov    %rbp,%r10
  0x000000010f7e4b37: test   %r14,%r14
  0x000000010f7e4b3a: je     0x000000010f7e4cbe
  0x000000010f7e4b40: mov    0x8(%r14),%r11d
  0x000000010f7e4b44: cmp    $0xf8000041,%r11d  ;   {metadata({type array char})}
  0x000000010f7e4b4b: jne    0x000000010f7e4ce5  ;*iload_3
                                                ; - java.lang.String::hashCode@24 (line 1470)

  0x000000010f7e4b51: mov    0xc(%r10),%r8d     ;*getfield value
                                                ; - java.lang.String::hashCode@26 (line 1470)
                                                ; implicit exception: dispatches to 0x000000010f7e4d01
  0x000000010f7e4b55: mov    0xc(%r12,%r8,8),%r11d  ;*arraylength
                                                ; - java.lang.String::hashCode@29 (line 1470)
                                                ; implicit exception: dispatches to 0x000000010f7e4d01
  0x000000010f7e4b5a: cmp    %r11d,%r13d
  0x000000010f7e4b5d: jge    0x000000010f7e4ca4  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x000000010f7e4b63: mov    %r13d,%r9d
  0x000000010f7e4b66: inc    %r9d
  0x000000010f7e4b69: xor    %ecx,%ecx
  0x000000010f7e4b6b: cmp    %ecx,%r9d
  0x000000010f7e4b6e: cmovl  %ecx,%r9d
  0x000000010f7e4b72: cmp    %r11d,%r9d
  0x000000010f7e4b75: cmovg  %r11d,%r9d
  0x000000010f7e4b79: mov    0xc(%r14),%eax     ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)
                                                ; implicit exception: dispatches to 0x000000010f7e4d21
  0x000000010f7e4b7d: mov    %ebx,%ebp
  0x000000010f7e4b7f: shl    $0x5,%ebp
  0x000000010f7e4b82: sub    %ebx,%ebp          ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1471)

  0x000000010f7e4b84: cmp    %eax,%r13d
  0x000000010f7e4b87: jae    0x000000010f7e4cc6  ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x000000010f7e4b8d: movzwl 0x10(%r14,%r13,2),%ebx
  0x000000010f7e4b93: add    %ebp,%ebx          ;*iadd
                                                ; - java.lang.String::hashCode@40 (line 1471)

  0x000000010f7e4b95: inc    %r13d              ;*iinc
                                                ; - java.lang.String::hashCode@42 (line 1470)

  0x000000010f7e4b98: cmp    %r9d,%r13d
  0x000000010f7e4b9b: jl     0x000000010f7e4b79  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x000000010f7e4b9d: cmp    %eax,%r11d
  0x000000010f7e4ba0: mov    %r11d,%r8d
  0x000000010f7e4ba3: cmovg  %eax,%r8d
  0x000000010f7e4ba7: mov    %r8d,%edx
  0x000000010f7e4baa: add    $0xfffffff9,%edx
  0x000000010f7e4bad: mov    $0x80000000,%r9d
  0x000000010f7e4bb3: cmp    %edx,%r8d
  0x000000010f7e4bb6: cmovl  %r9d,%edx
  0x000000010f7e4bba: cmp    %edx,%r13d
  0x000000010f7e4bbd: jge    0x000000010f7e4c81
  0x000000010f7e4bc3: mov    %ebx,(%rsp)
  0x000000010f7e4bc6: vmovq  %r10,%xmm0
  0x000000010f7e4bcb: vmovd  %r11d,%xmm2        ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x000000010f7e4bd0: movzwl 0x10(%r14,%r13,2),%r10d
  0x000000010f7e4bd6: movslq %r13d,%rsi
  0x000000010f7e4bd9: movzwl 0x12(%r14,%rsi,2),%ebx
  0x000000010f7e4bdf: movzwl 0x1e(%r14,%rsi,2),%r11d
  0x000000010f7e4be5: movzwl 0x1c(%r14,%rsi,2),%r9d
  0x000000010f7e4beb: movzwl 0x1a(%r14,%rsi,2),%r8d
  0x000000010f7e4bf1: movzwl 0x18(%r14,%rsi,2),%edi
  0x000000010f7e4bf7: movzwl 0x16(%r14,%rsi,2),%ecx
  0x000000010f7e4bfd: movzwl 0x14(%r14,%rsi,2),%esi
  0x000000010f7e4c03: mov    (%rsp),%ebp
  0x000000010f7e4c06: shl    $0x5,%ebp
  0x000000010f7e4c09: sub    (%rsp),%ebp
  0x000000010f7e4c0c: add    %r10d,%ebp
  0x000000010f7e4c0f: mov    %ebp,%r10d
  0x000000010f7e4c12: shl    $0x5,%r10d
  0x000000010f7e4c16: sub    %ebp,%r10d
  0x000000010f7e4c19: add    %ebx,%r10d
  0x000000010f7e4c1c: mov    %r10d,%ebp
  0x000000010f7e4c1f: shl    $0x5,%ebp
  0x000000010f7e4c22: sub    %r10d,%ebp
  0x000000010f7e4c25: add    %esi,%ebp
  0x000000010f7e4c27: mov    %ebp,%r10d
  0x000000010f7e4c2a: shl    $0x5,%r10d
  0x000000010f7e4c2e: sub    %ebp,%r10d
  0x000000010f7e4c31: add    %ecx,%r10d
  0x000000010f7e4c34: mov    %r10d,%ecx
  0x000000010f7e4c37: shl    $0x5,%ecx
  0x000000010f7e4c3a: sub    %r10d,%ecx
  0x000000010f7e4c3d: add    %edi,%ecx
  0x000000010f7e4c3f: mov    %ecx,%ebx
  0x000000010f7e4c41: shl    $0x5,%ebx
  0x000000010f7e4c44: sub    %ecx,%ebx
  0x000000010f7e4c46: add    %r8d,%ebx
  0x000000010f7e4c49: mov    %ebx,%r10d
  0x000000010f7e4c4c: shl    $0x5,%r10d
  0x000000010f7e4c50: sub    %ebx,%r10d
  0x000000010f7e4c53: add    %r9d,%r10d
  0x000000010f7e4c56: mov    %r10d,%r8d
  0x000000010f7e4c59: shl    $0x5,%r8d
  0x000000010f7e4c5d: sub    %r10d,%r8d
  0x000000010f7e4c60: add    %r11d,%r8d         ;*iadd
                                                ; - java.lang.String::hashCode@40 (line 1471)

  0x000000010f7e4c63: mov    %r8d,(%rsp)
  0x000000010f7e4c67: add    $0x8,%r13d         ;*iinc
                                                ; - java.lang.String::hashCode@42 (line 1470)

  0x000000010f7e4c6b: cmp    %edx,%r13d
  0x000000010f7e4c6e: jl     0x000000010f7e4bd0  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x000000010f7e4c74: mov    %r8d,%ebx
  0x000000010f7e4c77: vmovq  %xmm0,%r10
  0x000000010f7e4c7c: vmovd  %xmm2,%r11d
  0x000000010f7e4c81: cmp    %r11d,%r13d
  0x000000010f7e4c84: jge    0x000000010f7e4ca4
  0x000000010f7e4c86: xchg   %ax,%ax            ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x000000010f7e4c88: mov    %ebx,%ebp
  0x000000010f7e4c8a: shl    $0x5,%ebp
  0x000000010f7e4c8d: sub    %ebx,%ebp          ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1471)

  0x000000010f7e4c8f: cmp    %eax,%r13d
  0x000000010f7e4c92: jae    0x000000010f7e4cc6  ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x000000010f7e4c94: movzwl 0x10(%r14,%r13,2),%ebx
  0x000000010f7e4c9a: add    %ebp,%ebx          ;*iadd
                                                ; - java.lang.String::hashCode@40 (line 1471)

  0x000000010f7e4c9c: inc    %r13d              ;*iinc
                                                ; - java.lang.String::hashCode@42 (line 1470)

  0x000000010f7e4c9f: cmp    %r11d,%r13d
  0x000000010f7e4ca2: jl     0x000000010f7e4c88  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x000000010f7e4ca4: mov    %ebx,0x10(%r10)    ;*putfield hash
                                                ; - java.lang.String::hashCode@50 (line 1473)

  0x000000010f7e4ca8: mov    %ebx,%eax
  0x000000010f7e4caa: add    $0x30,%rsp
  0x000000010f7e4cae: pop    %rbp
  0x000000010f7e4caf: test   %eax,-0x8d49cb5(%rip)        # 0x0000000106a9b000
                                                ;   {poll_return}
  0x000000010f7e4cb5: retq   
  0x000000010f7e4cb6: xor    %r10d,%r10d
  0x000000010f7e4cb9: jmpq   0x000000010f7e4b37
  0x000000010f7e4cbe: xor    %r14d,%r14d
  0x000000010f7e4cc1: jmpq   0x000000010f7e4b51
  0x000000010f7e4cc6: mov    $0xffffffe4,%esi
  0x000000010f7e4ccb: mov    %r14,0x10(%rsp)
  0x000000010f7e4cd0: mov    %r13d,0xc(%rsp)
  0x000000010f7e4cd5: mov    %r10,0x18(%rsp)
  0x000000010f7e4cda: nop
  0x000000010f7e4cdb: callq  0x000000010f7166a0  ; OopMap{[16]=Oop [24]=Oop off=512}
                                                ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)
                                                ;   {runtime_call}
  0x000000010f7e4ce0: callq  0x000000010948a904  ;   {runtime_call}
  0x000000010f7e4ce5: mov    $0xffffff9d,%esi
  0x000000010f7e4cea: mov    %ebx,(%rsp)
  0x000000010f7e4ced: mov    %r14,0x8(%rsp)
  0x000000010f7e4cf2: mov    %r13d,0x4(%rsp)
  0x000000010f7e4cf7: callq  0x000000010f7166a0  ; OopMap{rbp=Oop [8]=Oop off=540}
                                                ;*iload_3
                                                ; - java.lang.String::hashCode@24 (line 1470)
                                                ;   {runtime_call}
  0x000000010f7e4cfc: callq  0x000000010948a904  ;   {runtime_call}
  0x000000010f7e4d01: mov    $0xffffff86,%esi
  0x000000010f7e4d06: mov    %ebx,%ebp
  0x000000010f7e4d08: mov    %r14,(%rsp)
  0x000000010f7e4d0c: mov    %r13d,0x8(%rsp)
  0x000000010f7e4d11: mov    %r10,0x10(%rsp)
  0x000000010f7e4d16: nop
  0x000000010f7e4d17: callq  0x000000010f7166a0  ; OopMap{[0]=Oop [16]=Oop off=572}
                                                ;*iload_3
                                                ; - java.lang.String::hashCode@24 (line 1470)
                                                ;   {runtime_call}
  0x000000010f7e4d1c: callq  0x000000010948a904  ;   {runtime_call}
  0x000000010f7e4d21: mov    $0xfffffff6,%esi
  0x000000010f7e4d26: mov    %r13d,%ebp
  0x000000010f7e4d29: xchg   %ax,%ax
  0x000000010f7e4d2b: callq  0x000000010f7166a0  ; OopMap{off=592}
                                                ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)
                                                ;   {runtime_call}
  0x000000010f7e4d30: callq  0x000000010948a904  ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)
                                                ;   {runtime_call}
  0x000000010f7e4d35: hlt    
  0x000000010f7e4d36: hlt    
  0x000000010f7e4d37: hlt    
  0x000000010f7e4d38: hlt    
  0x000000010f7e4d39: hlt    
  0x000000010f7e4d3a: hlt    
  0x000000010f7e4d3b: hlt    
  0x000000010f7e4d3c: hlt    
  0x000000010f7e4d3d: hlt    
  0x000000010f7e4d3e: hlt    
  0x000000010f7e4d3f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f7e4d40: jmpq   0x000000010f73fba0  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010f7e4d45: callq  0x000000010f7e4d4a
  0x000000010f7e4d4a: subq   $0x5,(%rsp)
  0x000000010f7e4d4f: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7e4d54: hlt    
  0x000000010f7e4d55: hlt    
  0x000000010f7e4d56: hlt    
  0x000000010f7e4d57: hlt    
Decoding compiled method 0x000000010f7e20d0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010eb5b7d8} 'min' '(II)I' in 'java/lang/Math'
  # parm0:    rsi       = int
  # parm1:    rdx       = int
  #           [sp+0x20]  (sp of caller)
  0x000000010f7e2200: sub    $0x18,%rsp
  0x000000010f7e2207: mov    %rbp,0x10(%rsp)    ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)

  0x000000010f7e220c: cmp    %edx,%esi
  0x000000010f7e220e: mov    %edx,%eax
  0x000000010f7e2210: cmovle %esi,%eax          ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)

  0x000000010f7e2213: add    $0x10,%rsp
  0x000000010f7e2217: pop    %rbp
  0x000000010f7e2218: test   %eax,-0x8d4721e(%rip)        # 0x0000000106a9b000
                                                ;   {poll_return}
  0x000000010f7e221e: retq   
  0x000000010f7e221f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f7e2220: jmpq   0x000000010f73fba0  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010f7e2225: callq  0x000000010f7e222a
  0x000000010f7e222a: subq   $0x5,(%rsp)
  0x000000010f7e222f: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7e2234: hlt    
  0x000000010f7e2235: hlt    
  0x000000010f7e2236: hlt    
  0x000000010f7e2237: hlt    
Decoding compiled method 0x000000010f7e2490:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010eb806e8} 'copyOfRange' '([CII)[C' in 'java/util/Arrays'
  # parm0:    rsi:rsi   = '[C'
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0xb0]  (sp of caller)
  0x000000010f7e26a0: mov    %eax,-0x14000(%rsp)
  0x000000010f7e26a7: push   %rbp
  0x000000010f7e26a8: sub    $0xa0,%rsp
  0x000000010f7e26af: mov    %rsi,%r8
  0x000000010f7e26b2: mov    %rdx,%r9
  0x000000010f7e26b5: movabs $0x10ec3a140,%rbx  ;   {metadata(method data for {method} {0x000000010eb806e8} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x000000010f7e26bf: mov    0xdc(%rbx),%edx
  0x000000010f7e26c5: add    $0x8,%edx
  0x000000010f7e26c8: mov    %edx,0xdc(%rbx)
  0x000000010f7e26ce: movabs $0x10eb806e8,%rbx  ;   {metadata({method} {0x000000010eb806e8} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x000000010f7e26d8: and    $0x1ff8,%edx
  0x000000010f7e26de: cmp    $0x0,%edx
  0x000000010f7e26e1: je     0x000000010f7e2f41  ;*iload_2
                                                ; - java.util.Arrays::copyOfRange@0 (line 3661)

  0x000000010f7e26e7: mov    %rcx,%r11
  0x000000010f7e26ea: sub    %r9d,%r11d
  0x000000010f7e26ed: cmp    $0x0,%r11d
  0x000000010f7e26f1: movabs $0x10ec3a140,%rbx  ;   {metadata(method data for {method} {0x000000010eb806e8} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x000000010f7e26fb: movabs $0x108,%rdx
  0x000000010f7e2705: jge    0x000000010f7e2715
  0x000000010f7e270b: movabs $0x118,%rdx
  0x000000010f7e2715: mov    (%rbx,%rdx,1),%rsi
  0x000000010f7e2719: lea    0x1(%rsi),%rsi
  0x000000010f7e271d: mov    %rsi,(%rbx,%rdx,1)
  0x000000010f7e2721: jl     0x000000010f7e28e4  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)

  0x000000010f7e2727: mov    %r11,%rbx
  0x000000010f7e272a: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000000010f7e2734: movslq %ebx,%rbx
  0x000000010f7e2737: mov    %rbx,%rdi
  0x000000010f7e273a: cmp    $0xffffff,%rbx
  0x000000010f7e2741: ja     0x000000010f7e2f58
  0x000000010f7e2747: movabs $0x17,%rsi
  0x000000010f7e2751: lea    (%rsi,%rbx,2),%rsi
  0x000000010f7e2755: and    $0xfffffffffffffff8,%rsi
  0x000000010f7e2759: mov    0x60(%r15),%rax
  0x000000010f7e275d: lea    (%rax,%rsi,1),%rsi
  0x000000010f7e2761: cmp    0x70(%r15),%rsi
  0x000000010f7e2765: ja     0x000000010f7e2f58
  0x000000010f7e276b: mov    %rsi,0x60(%r15)
  0x000000010f7e276f: sub    %rax,%rsi
  0x000000010f7e2772: movq   $0x1,(%rax)
  0x000000010f7e2779: mov    %rdx,%rcx
  0x000000010f7e277c: shr    $0x3,%rcx
  0x000000010f7e2780: mov    %ecx,0x8(%rax)
  0x000000010f7e2783: mov    %ebx,0xc(%rax)
  0x000000010f7e2786: sub    $0x10,%rsi
  0x000000010f7e278a: je     0x000000010f7e27a1
  0x000000010f7e2790: xor    %rbx,%rbx
  0x000000010f7e2793: shr    $0x3,%rsi
  0x000000010f7e2797: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000010f7e279c: dec    %rsi
  0x000000010f7e279f: jne    0x000000010f7e2797  ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)

  0x000000010f7e27a1: mov    0xc(%r8),%esi      ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ; implicit exception: dispatches to 0x000000010f7e2f62
  0x000000010f7e27a5: sub    %r9d,%esi
  0x000000010f7e27a8: movabs $0x10ec3a140,%rdx  ;   {metadata(method data for {method} {0x000000010eb806e8} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x000000010f7e27b2: addq   $0x1,0x208(%rdx)
  0x000000010f7e27ba: movabs $0x10ec2f708,%rdx  ;   {metadata(method data for {method} {0x000000010eb5b7d8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010f7e27c4: mov    0xdc(%rdx),%ecx
  0x000000010f7e27ca: add    $0x8,%ecx
  0x000000010f7e27cd: mov    %ecx,0xdc(%rdx)
  0x000000010f7e27d3: movabs $0x10eb5b7d8,%rdx  ;   {metadata({method} {0x000000010eb5b7d8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010f7e27dd: and    $0x7ffff8,%ecx
  0x000000010f7e27e3: cmp    $0x0,%ecx
  0x000000010f7e27e6: je     0x000000010f7e2f67
  0x000000010f7e27ec: cmp    %r11d,%esi
  0x000000010f7e27ef: movabs $0x10ec2f708,%rdx  ;   {metadata(method data for {method} {0x000000010eb5b7d8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010f7e27f9: movabs $0x108,%rcx
  0x000000010f7e2803: jg     0x000000010f7e2813
  0x000000010f7e2809: movabs $0x118,%rcx
  0x000000010f7e2813: mov    (%rdx,%rcx,1),%rdi
  0x000000010f7e2817: lea    0x1(%rdi),%rdi
  0x000000010f7e281b: mov    %rdi,(%rdx,%rcx,1)
  0x000000010f7e281f: jg     0x000000010f7e283d  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x000000010f7e2825: movabs $0x10ec2f708,%rdx  ;   {metadata(method data for {method} {0x000000010eb5b7d8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010f7e282f: incl   0x128(%rdx)
  0x000000010f7e2835: mov    %rsi,%rdi
  0x000000010f7e2838: jmpq   0x000000010f7e2840  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x000000010f7e283d: mov    %r11,%rdi          ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x000000010f7e2840: movabs $0x10ec3a140,%rsi  ;   {metadata(method data for {method} {0x000000010eb806e8} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x000000010f7e284a: addq   $0x1,0x218(%rsi)
  0x000000010f7e2852: mov    %r8,%rsi
  0x000000010f7e2855: mov    %r9,%rdx
  0x000000010f7e2858: mov    %rax,%rcx
  0x000000010f7e285b: mov    $0x0,%r8d
  0x000000010f7e2861: mov    %rdi,%r9
  0x000000010f7e2864: mov    %rax,0x70(%rsp)
  0x000000010f7e2869: test   %edx,%edx
  0x000000010f7e286b: jl     0x000000010f7e2f7e
  0x000000010f7e2871: lea    (%rdx,%r9,1),%rdi
  0x000000010f7e2875: cmp    0xc(%rsi),%edi
  0x000000010f7e2878: ja     0x000000010f7e2f7e
  0x000000010f7e287e: lea    (%r8,%r9,1),%rdi
  0x000000010f7e2882: cmp    0xc(%rcx),%edi
  0x000000010f7e2885: ja     0x000000010f7e2f7e
  0x000000010f7e288b: test   %r9d,%r9d
  0x000000010f7e288e: jl     0x000000010f7e2f7e
  0x000000010f7e2894: je     0x000000010f7e28d0
  0x000000010f7e289a: movslq %edx,%rdx
  0x000000010f7e289d: movslq %r8d,%r8
  0x000000010f7e28a0: lea    0x10(%rsi,%rdx,2),%rdi
  0x000000010f7e28a5: lea    0x10(%rcx,%r8,2),%rsi
  0x000000010f7e28aa: mov    %r9,%rdx
  0x000000010f7e28ad: test   $0xf,%esp
  0x000000010f7e28b3: je     0x000000010f7e28cb
  0x000000010f7e28b9: sub    $0x8,%rsp
  0x000000010f7e28bd: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x000000010f7e28c2: add    $0x8,%rsp
  0x000000010f7e28c6: jmpq   0x000000010f7e28d0
  0x000000010f7e28cb: callq  Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ;   {runtime_call}
  0x000000010f7e28d0: mov    0x70(%rsp),%rax
  0x000000010f7e28d5: add    $0xa0,%rsp
  0x000000010f7e28dc: pop    %rbp
  0x000000010f7e28dd: test   %eax,-0x8d477e3(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7e28e3: retq                      ;*areturn
                                                ; - java.util.Arrays::copyOfRange@62 (line 3667)

  0x000000010f7e28e4: mov    %ecx,0x80(%rsp)
  0x000000010f7e28eb: nopl   0x0(%rax,%rax,1)
  0x000000010f7e28f0: jmpq   0x000000010f7e2f98  ;   {no_reloc}
  0x000000010f7e28f5: add    %al,(%rax)
  0x000000010f7e28f7: add    %al,(%rax)
  0x000000010f7e28f9: add    %cl,-0x75(%rcx)
  0x000000010f7e28fc: rex.RXB (bad) 
  0x000000010f7e28fe: lea    0x20(%rax),%rdi
  0x000000010f7e2902: cmp    0x70(%r15),%rdi
  0x000000010f7e2906: ja     0x000000010f7e2fa2
  0x000000010f7e290c: mov    %rdi,0x60(%r15)
  0x000000010f7e2910: mov    0xa8(%rdx),%rcx
  0x000000010f7e2917: mov    %rcx,(%rax)
  0x000000010f7e291a: mov    %rdx,%rcx
  0x000000010f7e291d: shr    $0x3,%rcx
  0x000000010f7e2921: mov    %ecx,0x8(%rax)
  0x000000010f7e2924: xor    %rcx,%rcx
  0x000000010f7e2927: mov    %ecx,0xc(%rax)
  0x000000010f7e292a: xor    %rcx,%rcx
  0x000000010f7e292d: mov    %rcx,0x10(%rax)
  0x000000010f7e2931: mov    %rcx,0x18(%rax)    ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)

  0x000000010f7e2935: data16 xchg %ax,%ax
  0x000000010f7e2938: jmpq   0x000000010f7e2fbe  ;   {no_reloc}
  0x000000010f7e293d: add    %al,(%rax)
  0x000000010f7e293f: add    %al,(%rax)
  0x000000010f7e2941: add    %cl,-0x77(%rax)
  0x000000010f7e2944: test   %ah,(%rax,%rcx,4)
  0x000000010f7e2947: add    %al,(%rax)
  0x000000010f7e2949: add    %cl,-0x75(%rcx)
  0x000000010f7e294c: rex.RXB (bad) 
  0x000000010f7e294e: lea    0x18(%rax),%rdi
  0x000000010f7e2952: cmp    0x70(%r15),%rdi
  0x000000010f7e2956: ja     0x000000010f7e2fc8
  0x000000010f7e295c: mov    %rdi,0x60(%r15)
  0x000000010f7e2960: mov    0xa8(%rdx),%rcx
  0x000000010f7e2967: mov    %rcx,(%rax)
  0x000000010f7e296a: mov    %rdx,%rcx
  0x000000010f7e296d: shr    $0x3,%rcx
  0x000000010f7e2971: mov    %ecx,0x8(%rax)
  0x000000010f7e2974: xor    %rcx,%rcx
  0x000000010f7e2977: mov    %ecx,0xc(%rax)
  0x000000010f7e297a: xor    %rcx,%rcx
  0x000000010f7e297d: mov    %rcx,0x10(%rax)    ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)

  0x000000010f7e2981: mov    %rax,%rbx
  0x000000010f7e2984: movabs $0x10ec3a140,%rdx  ;   {metadata(method data for {method} {0x000000010eb806e8} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x000000010f7e298e: addq   $0x1,0x128(%rdx)
  0x000000010f7e2996: movabs $0x10ed0ae70,%rbx  ;   {metadata(method data for {method} {0x000000010eaddf30} '<init>' '()V' in 'java/lang/StringBuilder')}
  0x000000010f7e29a0: mov    0xdc(%rbx),%edx
  0x000000010f7e29a6: add    $0x8,%edx
  0x000000010f7e29a9: mov    %edx,0xdc(%rbx)
  0x000000010f7e29af: movabs $0x10eaddf30,%rbx  ;   {metadata({method} {0x000000010eaddf30} '<init>' '()V' in 'java/lang/StringBuilder')}
  0x000000010f7e29b9: and    $0x7ffff8,%edx
  0x000000010f7e29bf: cmp    $0x0,%edx
  0x000000010f7e29c2: je     0x000000010f7e2fd5
  0x000000010f7e29c8: mov    %rax,%rbx
  0x000000010f7e29cb: movabs $0x10ed0ae70,%rdx  ;   {metadata(method data for {method} {0x000000010eaddf30} '<init>' '()V' in 'java/lang/StringBuilder')}
  0x000000010f7e29d5: addq   $0x1,0x108(%rdx)
  0x000000010f7e29dd: movabs $0x10ec9a3e8,%rbx  ;   {metadata(method data for {method} {0x000000010eada260} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f7e29e7: mov    0xdc(%rbx),%edx
  0x000000010f7e29ed: add    $0x8,%edx
  0x000000010f7e29f0: mov    %edx,0xdc(%rbx)
  0x000000010f7e29f6: movabs $0x10eada260,%rbx  ;   {metadata({method} {0x000000010eada260} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f7e2a00: and    $0x7ffff8,%edx
  0x000000010f7e2a06: cmp    $0x0,%edx
  0x000000010f7e2a09: je     0x000000010f7e2fec
  0x000000010f7e2a0f: mov    %rax,%rbx
  0x000000010f7e2a12: movabs $0x10ec9a3e8,%rdx  ;   {metadata(method data for {method} {0x000000010eada260} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f7e2a1c: addq   $0x1,0x108(%rdx)
  0x000000010f7e2a24: movabs $0x10ebdca10,%rbx  ;   {metadata(method data for {method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f7e2a2e: mov    0xdc(%rbx),%edx
  0x000000010f7e2a34: add    $0x8,%edx
  0x000000010f7e2a37: mov    %edx,0xdc(%rbx)
  0x000000010f7e2a3d: movabs $0x10ea65480,%rbx  ;   {metadata({method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f7e2a47: and    $0x7ffff8,%edx
  0x000000010f7e2a4d: cmp    $0x0,%edx
  0x000000010f7e2a50: je     0x000000010f7e3003
  0x000000010f7e2a56: mov    $0x10,%ebx
  0x000000010f7e2a5b: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000000010f7e2a65: mov    %rax,%r13
  0x000000010f7e2a68: movslq %ebx,%rbx
  0x000000010f7e2a6b: mov    %rbx,%rdi
  0x000000010f7e2a6e: cmp    $0xffffff,%rbx
  0x000000010f7e2a75: ja     0x000000010f7e301a
  0x000000010f7e2a7b: movabs $0x17,%rsi
  0x000000010f7e2a85: lea    (%rsi,%rbx,2),%rsi
  0x000000010f7e2a89: and    $0xfffffffffffffff8,%rsi
  0x000000010f7e2a8d: mov    0x60(%r15),%rax
  0x000000010f7e2a91: lea    (%rax,%rsi,1),%rsi
  0x000000010f7e2a95: cmp    0x70(%r15),%rsi
  0x000000010f7e2a99: ja     0x000000010f7e301a
  0x000000010f7e2a9f: mov    %rsi,0x60(%r15)
  0x000000010f7e2aa3: sub    %rax,%rsi
  0x000000010f7e2aa6: movq   $0x1,(%rax)
  0x000000010f7e2aad: mov    %rdx,%rcx
  0x000000010f7e2ab0: shr    $0x3,%rcx
  0x000000010f7e2ab4: mov    %ecx,0x8(%rax)
  0x000000010f7e2ab7: mov    %ebx,0xc(%rax)
  0x000000010f7e2aba: sub    $0x10,%rsi
  0x000000010f7e2abe: je     0x000000010f7e2ad5
  0x000000010f7e2ac4: xor    %rbx,%rbx
  0x000000010f7e2ac7: shr    $0x3,%rsi
  0x000000010f7e2acb: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000010f7e2ad0: dec    %rsi
  0x000000010f7e2ad3: jne    0x000000010f7e2acb  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::<init>@6 (line 68)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)

  0x000000010f7e2ad5: mov    %rax,%r10
  0x000000010f7e2ad8: shr    $0x3,%r10
  0x000000010f7e2adc: mov    %r10d,0x10(%r13)
  0x000000010f7e2ae0: mov    %r13,%rax
  0x000000010f7e2ae3: shr    $0x9,%rax
  0x000000010f7e2ae7: movabs $0x1065b9000,%rdx
  0x000000010f7e2af1: movb   $0x0,(%rax,%rdx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::<init>@8 (line 68)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)

  0x000000010f7e2af5: mov    %r13,%rax
  0x000000010f7e2af8: movabs $0x10ec3a140,%rdx  ;   {metadata(method data for {method} {0x000000010eb806e8} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x000000010f7e2b02: mov    0x8(%rax),%eax
  0x000000010f7e2b05: shl    $0x3,%rax
  0x000000010f7e2b09: cmp    0x140(%rdx),%rax
  0x000000010f7e2b10: jne    0x000000010f7e2b1f
  0x000000010f7e2b12: addq   $0x1,0x148(%rdx)
  0x000000010f7e2b1a: jmpq   0x000000010f7e2b85
  0x000000010f7e2b1f: cmp    0x150(%rdx),%rax
  0x000000010f7e2b26: jne    0x000000010f7e2b35
  0x000000010f7e2b28: addq   $0x1,0x158(%rdx)
  0x000000010f7e2b30: jmpq   0x000000010f7e2b85
  0x000000010f7e2b35: cmpq   $0x0,0x140(%rdx)
  0x000000010f7e2b40: jne    0x000000010f7e2b59
  0x000000010f7e2b42: mov    %rax,0x140(%rdx)
  0x000000010f7e2b49: movq   $0x1,0x148(%rdx)
  0x000000010f7e2b54: jmpq   0x000000010f7e2b85
  0x000000010f7e2b59: cmpq   $0x0,0x150(%rdx)
  0x000000010f7e2b64: jne    0x000000010f7e2b7d
  0x000000010f7e2b66: mov    %rax,0x150(%rdx)
  0x000000010f7e2b6d: movq   $0x1,0x158(%rdx)
  0x000000010f7e2b78: jmpq   0x000000010f7e2b85
  0x000000010f7e2b7d: addq   $0x1,0x138(%rdx)
  0x000000010f7e2b85: movabs $0x10ed0b000,%rdx  ;   {metadata(method data for {method} {0x000000010eade708} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f7e2b8f: mov    0xdc(%rdx),%esi
  0x000000010f7e2b95: add    $0x8,%esi
  0x000000010f7e2b98: mov    %esi,0xdc(%rdx)
  0x000000010f7e2b9e: movabs $0x10eade708,%rdx  ;   {metadata({method} {0x000000010eade708} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f7e2ba8: and    $0x7ffff8,%esi
  0x000000010f7e2bae: cmp    $0x0,%esi
  0x000000010f7e2bb1: je     0x000000010f7e3024
  0x000000010f7e2bb7: mov    %r13,%rax
  0x000000010f7e2bba: movabs $0x10ed0b000,%rdx  ;   {metadata(method data for {method} {0x000000010eade708} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f7e2bc4: addq   $0x1,0x108(%rdx)
  0x000000010f7e2bcc: mov    %r9,%rdx
  0x000000010f7e2bcf: mov    %r13,%rsi          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)

  0x000000010f7e2bd2: mov    %r13,0x78(%rsp)
  0x000000010f7e2bd7: callq  0x000000010f7170a0  ; OopMap{[120]=Oop [136]=Oop off=1340}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)
                                                ;   {optimized virtual_call}
  0x000000010f7e2bdc: mov    0x78(%rsp),%rax
  0x000000010f7e2be1: movabs $0x10ec3a140,%rdx  ;   {metadata(method data for {method} {0x000000010eb806e8} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x000000010f7e2beb: mov    0x8(%rax),%eax
  0x000000010f7e2bee: shl    $0x3,%rax
  0x000000010f7e2bf2: cmp    0x170(%rdx),%rax
  0x000000010f7e2bf9: jne    0x000000010f7e2c08
  0x000000010f7e2bfb: addq   $0x1,0x178(%rdx)
  0x000000010f7e2c03: jmpq   0x000000010f7e2c6e
  0x000000010f7e2c08: cmp    0x180(%rdx),%rax
  0x000000010f7e2c0f: jne    0x000000010f7e2c1e
  0x000000010f7e2c11: addq   $0x1,0x188(%rdx)
  0x000000010f7e2c19: jmpq   0x000000010f7e2c6e
  0x000000010f7e2c1e: cmpq   $0x0,0x170(%rdx)
  0x000000010f7e2c29: jne    0x000000010f7e2c42
  0x000000010f7e2c2b: mov    %rax,0x170(%rdx)
  0x000000010f7e2c32: movq   $0x1,0x178(%rdx)
  0x000000010f7e2c3d: jmpq   0x000000010f7e2c6e
  0x000000010f7e2c42: cmpq   $0x0,0x180(%rdx)
  0x000000010f7e2c4d: jne    0x000000010f7e2c66
  0x000000010f7e2c4f: mov    %rax,0x180(%rdx)
  0x000000010f7e2c56: movq   $0x1,0x188(%rdx)
  0x000000010f7e2c61: jmpq   0x000000010f7e2c6e
  0x000000010f7e2c66: addq   $0x1,0x168(%rdx)
  0x000000010f7e2c6e: movabs $0x10ec81440,%rdx  ;   {metadata(method data for {method} {0x000000010eade248} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f7e2c78: mov    0xdc(%rdx),%esi
  0x000000010f7e2c7e: add    $0x8,%esi
  0x000000010f7e2c81: mov    %esi,0xdc(%rdx)
  0x000000010f7e2c87: movabs $0x10eade248,%rdx  ;   {metadata({method} {0x000000010eade248} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f7e2c91: and    $0x7ffff8,%esi
  0x000000010f7e2c97: cmp    $0x0,%esi
  0x000000010f7e2c9a: je     0x000000010f7e303b
  0x000000010f7e2ca0: mov    0x78(%rsp),%rax
  0x000000010f7e2ca5: movabs $0x10ec81440,%rdx  ;   {metadata(method data for {method} {0x000000010eade248} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f7e2caf: addq   $0x1,0x108(%rdx)
  0x000000010f7e2cb7: movabs $0x795968ba8,%rdx  ;   {oop(" > ")}
  0x000000010f7e2cc1: mov    0x78(%rsp),%rsi    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)

  0x000000010f7e2cc6: nop
  0x000000010f7e2cc7: callq  0x000000010f7170a0  ; OopMap{[120]=Oop [136]=Oop off=1580}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)
                                                ;   {optimized virtual_call}
  0x000000010f7e2ccc: mov    0x78(%rsp),%rax
  0x000000010f7e2cd1: movabs $0x10ec3a140,%rdx  ;   {metadata(method data for {method} {0x000000010eb806e8} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x000000010f7e2cdb: mov    0x8(%rax),%eax
  0x000000010f7e2cde: shl    $0x3,%rax
  0x000000010f7e2ce2: cmp    0x1a0(%rdx),%rax
  0x000000010f7e2ce9: jne    0x000000010f7e2cf8
  0x000000010f7e2ceb: addq   $0x1,0x1a8(%rdx)
  0x000000010f7e2cf3: jmpq   0x000000010f7e2d5e
  0x000000010f7e2cf8: cmp    0x1b0(%rdx),%rax
  0x000000010f7e2cff: jne    0x000000010f7e2d0e
  0x000000010f7e2d01: addq   $0x1,0x1b8(%rdx)
  0x000000010f7e2d09: jmpq   0x000000010f7e2d5e
  0x000000010f7e2d0e: cmpq   $0x0,0x1a0(%rdx)
  0x000000010f7e2d19: jne    0x000000010f7e2d32
  0x000000010f7e2d1b: mov    %rax,0x1a0(%rdx)
  0x000000010f7e2d22: movq   $0x1,0x1a8(%rdx)
  0x000000010f7e2d2d: jmpq   0x000000010f7e2d5e
  0x000000010f7e2d32: cmpq   $0x0,0x1b0(%rdx)
  0x000000010f7e2d3d: jne    0x000000010f7e2d56
  0x000000010f7e2d3f: mov    %rax,0x1b0(%rdx)
  0x000000010f7e2d46: movq   $0x1,0x1b8(%rdx)
  0x000000010f7e2d51: jmpq   0x000000010f7e2d5e
  0x000000010f7e2d56: addq   $0x1,0x198(%rdx)
  0x000000010f7e2d5e: movabs $0x10ed0b000,%rdx  ;   {metadata(method data for {method} {0x000000010eade708} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f7e2d68: mov    0xdc(%rdx),%esi
  0x000000010f7e2d6e: add    $0x8,%esi
  0x000000010f7e2d71: mov    %esi,0xdc(%rdx)
  0x000000010f7e2d77: movabs $0x10eade708,%rdx  ;   {metadata({method} {0x000000010eade708} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f7e2d81: and    $0x7ffff8,%esi
  0x000000010f7e2d87: cmp    $0x0,%esi
  0x000000010f7e2d8a: je     0x000000010f7e3052
  0x000000010f7e2d90: mov    0x78(%rsp),%rax
  0x000000010f7e2d95: movabs $0x10ed0b000,%rdx  ;   {metadata(method data for {method} {0x000000010eade708} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f7e2d9f: addq   $0x1,0x108(%rdx)
  0x000000010f7e2da7: mov    0x80(%rsp),%edx
  0x000000010f7e2dae: mov    0x78(%rsp),%rsi    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)

  0x000000010f7e2db3: nop
  0x000000010f7e2db4: nop
  0x000000010f7e2db5: nop
  0x000000010f7e2db6: nop
  0x000000010f7e2db7: callq  0x000000010f7170a0  ; OopMap{[120]=Oop [136]=Oop off=1820}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)
                                                ;   {optimized virtual_call}
  0x000000010f7e2dbc: mov    0x78(%rsp),%rax
  0x000000010f7e2dc1: movabs $0x10ec3a140,%rdx  ;   {metadata(method data for {method} {0x000000010eb806e8} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x000000010f7e2dcb: mov    0x8(%rax),%eax
  0x000000010f7e2dce: shl    $0x3,%rax
  0x000000010f7e2dd2: cmp    0x1d0(%rdx),%rax
  0x000000010f7e2dd9: jne    0x000000010f7e2de8
  0x000000010f7e2ddb: addq   $0x1,0x1d8(%rdx)
  0x000000010f7e2de3: jmpq   0x000000010f7e2e4e
  0x000000010f7e2de8: cmp    0x1e0(%rdx),%rax
  0x000000010f7e2def: jne    0x000000010f7e2dfe
  0x000000010f7e2df1: addq   $0x1,0x1e8(%rdx)
  0x000000010f7e2df9: jmpq   0x000000010f7e2e4e
  0x000000010f7e2dfe: cmpq   $0x0,0x1d0(%rdx)
  0x000000010f7e2e09: jne    0x000000010f7e2e22
  0x000000010f7e2e0b: mov    %rax,0x1d0(%rdx)
  0x000000010f7e2e12: movq   $0x1,0x1d8(%rdx)
  0x000000010f7e2e1d: jmpq   0x000000010f7e2e4e
  0x000000010f7e2e22: cmpq   $0x0,0x1e0(%rdx)
  0x000000010f7e2e2d: jne    0x000000010f7e2e46
  0x000000010f7e2e2f: mov    %rax,0x1e0(%rdx)
  0x000000010f7e2e36: movq   $0x1,0x1e8(%rdx)
  0x000000010f7e2e41: jmpq   0x000000010f7e2e4e
  0x000000010f7e2e46: addq   $0x1,0x1c8(%rdx)
  0x000000010f7e2e4e: movabs $0x10ed00b80,%rdx  ;   {metadata(method data for {method} {0x000000010eadf5f8} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder')}
  0x000000010f7e2e58: mov    0xdc(%rdx),%esi
  0x000000010f7e2e5e: add    $0x8,%esi
  0x000000010f7e2e61: mov    %esi,0xdc(%rdx)
  0x000000010f7e2e67: movabs $0x10eadf5f8,%rdx  ;   {metadata({method} {0x000000010eadf5f8} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder')}
  0x000000010f7e2e71: and    $0x7ffff8,%esi
  0x000000010f7e2e77: cmp    $0x0,%esi
  0x000000010f7e2e7a: je     0x000000010f7e3069
  0x000000010f7e2e80: movabs $0x7c00016d0,%rdx  ;   {metadata('java/lang/String')}
  0x000000010f7e2e8a: mov    0x60(%r15),%rax
  0x000000010f7e2e8e: lea    0x18(%rax),%rdi
  0x000000010f7e2e92: cmp    0x70(%r15),%rdi
  0x000000010f7e2e96: ja     0x000000010f7e3080
  0x000000010f7e2e9c: mov    %rdi,0x60(%r15)
  0x000000010f7e2ea0: mov    0xa8(%rdx),%rcx
  0x000000010f7e2ea7: mov    %rcx,(%rax)
  0x000000010f7e2eaa: mov    %rdx,%rcx
  0x000000010f7e2ead: shr    $0x3,%rcx
  0x000000010f7e2eb1: mov    %ecx,0x8(%rax)
  0x000000010f7e2eb4: xor    %rcx,%rcx
  0x000000010f7e2eb7: mov    %ecx,0xc(%rax)
  0x000000010f7e2eba: xor    %rcx,%rcx
  0x000000010f7e2ebd: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x000000010f7e2ec1: mov    0x78(%rsp),%rdx
  0x000000010f7e2ec6: mov    0x10(%rdx),%ecx
  0x000000010f7e2ec9: shl    $0x3,%rcx          ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x000000010f7e2ecd: mov    0xc(%rdx),%r8d     ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x000000010f7e2ed1: mov    %rax,%rdx
  0x000000010f7e2ed4: movabs $0x10ed00b80,%rsi  ;   {metadata(method data for {method} {0x000000010eadf5f8} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder')}
  0x000000010f7e2ede: addq   $0x1,0x108(%rsi)
  0x000000010f7e2ee6: mov    %rcx,%rdx
  0x000000010f7e2ee9: mov    $0x0,%ecx
  0x000000010f7e2eee: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x000000010f7e2ef1: mov    %rax,0x90(%rsp)
  0x000000010f7e2ef9: nop
  0x000000010f7e2efa: nop
  0x000000010f7e2efb: nop
  0x000000010f7e2efc: nop
  0x000000010f7e2efd: nop
  0x000000010f7e2efe: nop
  0x000000010f7e2eff: callq  0x000000010f7170a0  ; OopMap{[136]=Oop [144]=Oop off=2148}
                                                ;*invokespecial <init>
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {optimized virtual_call}
  0x000000010f7e2f04: mov    0x88(%rsp),%rax
  0x000000010f7e2f0c: movabs $0x10ec3a140,%rdx  ;   {metadata(method data for {method} {0x000000010eb806e8} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x000000010f7e2f16: addq   $0x1,0x1f8(%rdx)
  0x000000010f7e2f1e: mov    0x90(%rsp),%rdx
  0x000000010f7e2f26: mov    0x88(%rsp),%rsi    ;*invokespecial <init>
                                                ; - java.util.Arrays::copyOfRange@35 (line 3663)

  0x000000010f7e2f2e: nop
  0x000000010f7e2f2f: callq  0x000000010f7170a0  ; OopMap{[136]=Oop off=2196}
                                                ;*invokespecial <init>
                                                ; - java.util.Arrays::copyOfRange@35 (line 3663)
                                                ;   {optimized virtual_call}
  0x000000010f7e2f34: mov    0x88(%rsp),%rax
  0x000000010f7e2f3c: jmpq   0x000000010f7e30b8
  0x000000010f7e2f41: mov    %rbx,0x8(%rsp)
  0x000000010f7e2f46: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7e2f4e: callq  0x000000010f7d1a20  ; OopMap{r8=Oop off=2227}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOfRange@-1 (line 3661)
                                                ;   {runtime_call}
  0x000000010f7e2f53: jmpq   0x000000010f7e26e7
  0x000000010f7e2f58: callq  0x000000010f7ce120  ; OopMap{r8=Oop off=2237}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ;   {runtime_call}
  0x000000010f7e2f5d: jmpq   0x000000010f7e27a1
  0x000000010f7e2f62: callq  0x000000010f7cd0c0  ; OopMap{r8=Oop rax=Oop off=2247}
                                                ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ;   {runtime_call}
  0x000000010f7e2f67: mov    %rdx,0x8(%rsp)
  0x000000010f7e2f6c: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7e2f74: callq  0x000000010f7d1a20  ; OopMap{r8=Oop rax=Oop off=2265}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)
                                                ;   {runtime_call}
  0x000000010f7e2f79: jmpq   0x000000010f7e27ec
  0x000000010f7e2f7e: nop
  0x000000010f7e2f7f: callq  0x000000010f717520  ; OopMap{[112]=Oop off=2276}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ;   {static_call}
  0x000000010f7e2f84: jmpq   0x000000010f7e28d0
  0x000000010f7e2f89: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f7e2f93: mov    $0xa050f00,%eax
  0x000000010f7e2f98: callq  0x000000010f7d08e0  ; OopMap{off=2301}
                                                ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)
                                                ;   {runtime_call}
  0x000000010f7e2f9d: jmpq   0x000000010f7e28f0
  0x000000010f7e2fa2: mov    %rdx,%rdx
  0x000000010f7e2fa5: callq  0x000000010f7cd820  ; OopMap{off=2314}
                                                ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)
                                                ;   {runtime_call}
  0x000000010f7e2faa: jmpq   0x000000010f7e2935
  0x000000010f7e2faf: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f7e2fb9: mov    $0xa050f00,%eax
  0x000000010f7e2fbe: callq  0x000000010f7d08e0  ; OopMap{rax=Oop off=2339}
                                                ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)
                                                ;   {runtime_call}
  0x000000010f7e2fc3: jmpq   0x000000010f7e2938
  0x000000010f7e2fc8: mov    %rdx,%rdx
  0x000000010f7e2fcb: callq  0x000000010f7cd820  ; OopMap{[136]=Oop off=2352}
                                                ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)
                                                ;   {runtime_call}
  0x000000010f7e2fd0: jmpq   0x000000010f7e2981
  0x000000010f7e2fd5: mov    %rbx,0x8(%rsp)
  0x000000010f7e2fda: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7e2fe2: callq  0x000000010f7d1a20  ; OopMap{[136]=Oop rax=Oop off=2375}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::<init>@-1 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x000000010f7e2fe7: jmpq   0x000000010f7e29c8
  0x000000010f7e2fec: mov    %rbx,0x8(%rsp)
  0x000000010f7e2ff1: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7e2ff9: callq  0x000000010f7d1a20  ; OopMap{[136]=Oop rax=Oop off=2398}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::<init>@-1 (line 67)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x000000010f7e2ffe: jmpq   0x000000010f7e2a0f
  0x000000010f7e3003: mov    %rbx,0x8(%rsp)
  0x000000010f7e3008: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7e3010: callq  0x000000010f7d1a20  ; OopMap{[136]=Oop rax=Oop off=2421}
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::<init>@1 (line 67)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x000000010f7e3015: jmpq   0x000000010f7e2a56
  0x000000010f7e301a: callq  0x000000010f7ce120  ; OopMap{[136]=Oop r13=Oop off=2431}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::<init>@6 (line 68)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x000000010f7e301f: jmpq   0x000000010f7e2ad5
  0x000000010f7e3024: mov    %rdx,0x8(%rsp)
  0x000000010f7e3029: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7e3031: callq  0x000000010f7d1a20  ; OopMap{[136]=Oop r13=Oop off=2454}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)
                                                ;   {runtime_call}
  0x000000010f7e3036: jmpq   0x000000010f7e2bb7
  0x000000010f7e303b: mov    %rdx,0x8(%rsp)
  0x000000010f7e3040: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7e3048: callq  0x000000010f7d1a20  ; OopMap{[120]=Oop [136]=Oop off=2477}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)
                                                ;   {runtime_call}
  0x000000010f7e304d: jmpq   0x000000010f7e2ca0
  0x000000010f7e3052: mov    %rdx,0x8(%rsp)
  0x000000010f7e3057: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7e305f: callq  0x000000010f7d1a20  ; OopMap{[120]=Oop [136]=Oop off=2500}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)
                                                ;   {runtime_call}
  0x000000010f7e3064: jmpq   0x000000010f7e2d90
  0x000000010f7e3069: mov    %rdx,0x8(%rsp)
  0x000000010f7e306e: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7e3076: callq  0x000000010f7d1a20  ; OopMap{[120]=Oop [136]=Oop off=2523}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {runtime_call}
  0x000000010f7e307b: jmpq   0x000000010f7e2e80
  0x000000010f7e3080: mov    %rdx,%rdx
  0x000000010f7e3083: callq  0x000000010f7cd820  ; OopMap{[120]=Oop [136]=Oop off=2536}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {runtime_call}
  0x000000010f7e3088: jmpq   0x000000010f7e2ec1
  0x000000010f7e308d: nop
  0x000000010f7e308e: nop
  0x000000010f7e308f: mov    0x2a8(%r15),%rax
  0x000000010f7e3096: movabs $0x0,%r10
  0x000000010f7e30a0: mov    %r10,0x2a8(%r15)
  0x000000010f7e30a7: movabs $0x0,%r10
  0x000000010f7e30b1: mov    %r10,0x2b0(%r15)
  0x000000010f7e30b8: add    $0xa0,%rsp
  0x000000010f7e30bf: pop    %rbp
  0x000000010f7e30c0: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7e30c5: hlt    
  0x000000010f7e30c6: hlt    
  0x000000010f7e30c7: hlt    
  0x000000010f7e30c8: hlt    
  0x000000010f7e30c9: hlt    
  0x000000010f7e30ca: hlt    
  0x000000010f7e30cb: hlt    
  0x000000010f7e30cc: hlt    
  0x000000010f7e30cd: hlt    
  0x000000010f7e30ce: hlt    
  0x000000010f7e30cf: hlt    
  0x000000010f7e30d0: hlt    
  0x000000010f7e30d1: hlt    
  0x000000010f7e30d2: hlt    
  0x000000010f7e30d3: hlt    
  0x000000010f7e30d4: hlt    
  0x000000010f7e30d5: hlt    
  0x000000010f7e30d6: hlt    
  0x000000010f7e30d7: hlt    
  0x000000010f7e30d8: hlt    
  0x000000010f7e30d9: hlt    
  0x000000010f7e30da: hlt    
  0x000000010f7e30db: hlt    
  0x000000010f7e30dc: hlt    
  0x000000010f7e30dd: hlt    
  0x000000010f7e30de: hlt    
  0x000000010f7e30df: hlt    
[Stub Code]
  0x000000010f7e30e0: nop                       ;   {no_reloc}
  0x000000010f7e30e1: nop
  0x000000010f7e30e2: nop
  0x000000010f7e30e3: nop
  0x000000010f7e30e4: nop
  0x000000010f7e30e5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7e30ef: jmpq   0x000000010f7e30ef  ;   {runtime_call}
  0x000000010f7e30f4: nop
  0x000000010f7e30f5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7e30ff: jmpq   0x000000010f7e30ff  ;   {runtime_call}
  0x000000010f7e3104: nop
  0x000000010f7e3105: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7e310f: jmpq   0x000000010f7e310f  ;   {runtime_call}
  0x000000010f7e3114: nop
  0x000000010f7e3115: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7e311f: jmpq   0x000000010f7e311f  ;   {runtime_call}
  0x000000010f7e3124: nop
  0x000000010f7e3125: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7e312f: jmpq   0x000000010f7e312f  ;   {runtime_call}
  0x000000010f7e3134: nop
  0x000000010f7e3135: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7e313f: jmpq   0x000000010f7e313f  ;   {runtime_call}
[Exception Handler]
  0x000000010f7e3144: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f7e3149: mov    %rsp,-0x28(%rsp)
  0x000000010f7e314e: sub    $0x80,%rsp
  0x000000010f7e3155: mov    %rax,0x78(%rsp)
  0x000000010f7e315a: mov    %rcx,0x70(%rsp)
  0x000000010f7e315f: mov    %rdx,0x68(%rsp)
  0x000000010f7e3164: mov    %rbx,0x60(%rsp)
  0x000000010f7e3169: mov    %rbp,0x50(%rsp)
  0x000000010f7e316e: mov    %rsi,0x48(%rsp)
  0x000000010f7e3173: mov    %rdi,0x40(%rsp)
  0x000000010f7e3178: mov    %r8,0x38(%rsp)
  0x000000010f7e317d: mov    %r9,0x30(%rsp)
  0x000000010f7e3182: mov    %r10,0x28(%rsp)
  0x000000010f7e3187: mov    %r11,0x20(%rsp)
  0x000000010f7e318c: mov    %r12,0x18(%rsp)
  0x000000010f7e3191: mov    %r13,0x10(%rsp)
  0x000000010f7e3196: mov    %r14,0x8(%rsp)
  0x000000010f7e319b: mov    %r15,(%rsp)
  0x000000010f7e319f: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7e31a9: movabs $0x10f7e3149,%rsi  ;   {internal_word}
  0x000000010f7e31b3: mov    %rsp,%rdx
  0x000000010f7e31b6: and    $0xfffffffffffffff0,%rsp
  0x000000010f7e31ba: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7e31bf: hlt    
[Deopt Handler Code]
  0x000000010f7e31c0: movabs $0x10f7e31c0,%r10  ;   {section_word}
  0x000000010f7e31ca: push   %r10
  0x000000010f7e31cc: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7e31d1: hlt    
  0x000000010f7e31d2: hlt    
  0x000000010f7e31d3: hlt    
  0x000000010f7e31d4: hlt    
  0x000000010f7e31d5: hlt    
  0x000000010f7e31d6: hlt    
  0x000000010f7e31d7: hlt    
Decoding compiled method 0x000000010f7dfd50:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010eb7ff20} 'copyOf' '([CI)[C' in 'java/util/Arrays'
  # parm0:    rsi:rsi   = '[C'
  # parm1:    rdx       = int
  #           [sp+0x70]  (sp of caller)
  0x000000010f7dfee0: mov    %eax,-0x14000(%rsp)
  0x000000010f7dfee7: push   %rbp
  0x000000010f7dfee8: sub    $0x60,%rsp
  0x000000010f7dfeec: mov    %rsi,%r8
  0x000000010f7dfeef: mov    %rdx,%r9
  0x000000010f7dfef2: movabs $0x10ec8c690,%rbx  ;   {metadata(method data for {method} {0x000000010eb7ff20} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x000000010f7dfefc: mov    0xdc(%rbx),%edx
  0x000000010f7dff02: add    $0x8,%edx
  0x000000010f7dff05: mov    %edx,0xdc(%rbx)
  0x000000010f7dff0b: movabs $0x10eb7ff20,%rbx  ;   {metadata({method} {0x000000010eb7ff20} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x000000010f7dff15: and    $0x1ff8,%edx
  0x000000010f7dff1b: cmp    $0x0,%edx
  0x000000010f7dff1e: je     0x000000010f7e00ca  ;*iload_1
                                                ; - java.util.Arrays::copyOf@0 (line 3332)

  0x000000010f7dff24: mov    %r9,%rbx
  0x000000010f7dff27: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000000010f7dff31: movslq %ebx,%rbx
  0x000000010f7dff34: mov    %rbx,%rdi
  0x000000010f7dff37: cmp    $0xffffff,%rbx
  0x000000010f7dff3e: ja     0x000000010f7e00e1
  0x000000010f7dff44: movabs $0x17,%rsi
  0x000000010f7dff4e: lea    (%rsi,%rbx,2),%rsi
  0x000000010f7dff52: and    $0xfffffffffffffff8,%rsi
  0x000000010f7dff56: mov    0x60(%r15),%rax
  0x000000010f7dff5a: lea    (%rax,%rsi,1),%rsi
  0x000000010f7dff5e: cmp    0x70(%r15),%rsi
  0x000000010f7dff62: ja     0x000000010f7e00e1
  0x000000010f7dff68: mov    %rsi,0x60(%r15)
  0x000000010f7dff6c: sub    %rax,%rsi
  0x000000010f7dff6f: movq   $0x1,(%rax)
  0x000000010f7dff76: mov    %rdx,%rcx
  0x000000010f7dff79: shr    $0x3,%rcx
  0x000000010f7dff7d: mov    %ecx,0x8(%rax)
  0x000000010f7dff80: mov    %ebx,0xc(%rax)
  0x000000010f7dff83: sub    $0x10,%rsi
  0x000000010f7dff87: je     0x000000010f7dff9e
  0x000000010f7dff8d: xor    %rbx,%rbx
  0x000000010f7dff90: shr    $0x3,%rsi
  0x000000010f7dff94: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000010f7dff99: dec    %rsi
  0x000000010f7dff9c: jne    0x000000010f7dff94  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)

  0x000000010f7dff9e: mov    0xc(%r8),%esi      ;*arraylength
                                                ; - java.util.Arrays::copyOf@9 (line 3333)
                                                ; implicit exception: dispatches to 0x000000010f7e00eb
  0x000000010f7dffa2: movabs $0x10ec8c690,%rdx  ;   {metadata(method data for {method} {0x000000010eb7ff20} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x000000010f7dffac: addq   $0x1,0x108(%rdx)
  0x000000010f7dffb4: movabs $0x10ec2f708,%rdx  ;   {metadata(method data for {method} {0x000000010eb5b7d8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010f7dffbe: mov    0xdc(%rdx),%ecx
  0x000000010f7dffc4: add    $0x8,%ecx
  0x000000010f7dffc7: mov    %ecx,0xdc(%rdx)
  0x000000010f7dffcd: movabs $0x10eb5b7d8,%rdx  ;   {metadata({method} {0x000000010eb5b7d8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010f7dffd7: and    $0x7ffff8,%ecx
  0x000000010f7dffdd: cmp    $0x0,%ecx
  0x000000010f7dffe0: je     0x000000010f7e00f0
  0x000000010f7dffe6: cmp    %r9d,%esi
  0x000000010f7dffe9: movabs $0x10ec2f708,%rdx  ;   {metadata(method data for {method} {0x000000010eb5b7d8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010f7dfff3: movabs $0x108,%rcx
  0x000000010f7dfffd: jg     0x000000010f7e000d
  0x000000010f7e0003: movabs $0x118,%rcx
  0x000000010f7e000d: mov    (%rdx,%rcx,1),%rdi
  0x000000010f7e0011: lea    0x1(%rdi),%rdi
  0x000000010f7e0015: mov    %rdi,(%rdx,%rcx,1)
  0x000000010f7e0019: jg     0x000000010f7e0032  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)

  0x000000010f7e001f: movabs $0x10ec2f708,%rdx  ;   {metadata(method data for {method} {0x000000010eb5b7d8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010f7e0029: incl   0x128(%rdx)
  0x000000010f7e002f: mov    %rsi,%r9           ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)

  0x000000010f7e0032: movabs $0x10ec8c690,%rsi  ;   {metadata(method data for {method} {0x000000010eb7ff20} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x000000010f7e003c: addq   $0x1,0x118(%rsi)
  0x000000010f7e0044: mov    %r8,%rsi
  0x000000010f7e0047: mov    $0x0,%edx
  0x000000010f7e004c: mov    %rax,%rcx
  0x000000010f7e004f: mov    $0x0,%r8d
  0x000000010f7e0055: mov    %rax,0x50(%rsp)
  0x000000010f7e005a: lea    (%rdx,%r9,1),%rdi
  0x000000010f7e005e: cmp    0xc(%rsi),%edi
  0x000000010f7e0061: ja     0x000000010f7e0107
  0x000000010f7e0067: lea    (%r8,%r9,1),%rdi
  0x000000010f7e006b: cmp    0xc(%rcx),%edi
  0x000000010f7e006e: ja     0x000000010f7e0107
  0x000000010f7e0074: test   %r9d,%r9d
  0x000000010f7e0077: jl     0x000000010f7e0107
  0x000000010f7e007d: je     0x000000010f7e00b9
  0x000000010f7e0083: movslq %edx,%rdx
  0x000000010f7e0086: movslq %r8d,%r8
  0x000000010f7e0089: lea    0x10(%rsi,%rdx,2),%rdi
  0x000000010f7e008e: lea    0x10(%rcx,%r8,2),%rsi
  0x000000010f7e0093: mov    %r9,%rdx
  0x000000010f7e0096: test   $0xf,%esp
  0x000000010f7e009c: je     0x000000010f7e00b4
  0x000000010f7e00a2: sub    $0x8,%rsp
  0x000000010f7e00a6: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x000000010f7e00ab: add    $0x8,%rsp
  0x000000010f7e00af: jmpq   0x000000010f7e00b9
  0x000000010f7e00b4: callq  Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ;   {runtime_call}
  0x000000010f7e00b9: mov    0x50(%rsp),%rax
  0x000000010f7e00be: add    $0x60,%rsp
  0x000000010f7e00c2: pop    %rbp
  0x000000010f7e00c3: test   %eax,-0x8d44fc9(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7e00c9: retq   
  0x000000010f7e00ca: mov    %rbx,0x8(%rsp)
  0x000000010f7e00cf: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7e00d7: callq  0x000000010f7d1a20  ; OopMap{r8=Oop off=508}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ;   {runtime_call}
  0x000000010f7e00dc: jmpq   0x000000010f7dff24
  0x000000010f7e00e1: callq  0x000000010f7ce120  ; OopMap{r8=Oop off=518}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ;   {runtime_call}
  0x000000010f7e00e6: jmpq   0x000000010f7dff9e
  0x000000010f7e00eb: callq  0x000000010f7cd0c0  ; OopMap{r8=Oop rax=Oop off=528}
                                                ;*arraylength
                                                ; - java.util.Arrays::copyOf@9 (line 3333)
                                                ;   {runtime_call}
  0x000000010f7e00f0: mov    %rdx,0x8(%rsp)
  0x000000010f7e00f5: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7e00fd: callq  0x000000010f7d1a20  ; OopMap{r8=Oop rax=Oop off=546}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ;   {runtime_call}
  0x000000010f7e0102: jmpq   0x000000010f7dffe6
  0x000000010f7e0107: callq  0x000000010f717520  ; OopMap{[80]=Oop off=556}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ;   {static_call}
  0x000000010f7e010c: jmp    0x000000010f7e00b9
  0x000000010f7e010e: nop
  0x000000010f7e010f: nop
  0x000000010f7e0110: mov    0x2a8(%r15),%rax
  0x000000010f7e0117: movabs $0x0,%r10
  0x000000010f7e0121: mov    %r10,0x2a8(%r15)
  0x000000010f7e0128: movabs $0x0,%r10
  0x000000010f7e0132: mov    %r10,0x2b0(%r15)
  0x000000010f7e0139: add    $0x60,%rsp
  0x000000010f7e013d: pop    %rbp
  0x000000010f7e013e: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7e0143: hlt    
  0x000000010f7e0144: hlt    
  0x000000010f7e0145: hlt    
  0x000000010f7e0146: hlt    
  0x000000010f7e0147: hlt    
  0x000000010f7e0148: hlt    
  0x000000010f7e0149: hlt    
  0x000000010f7e014a: hlt    
  0x000000010f7e014b: hlt    
  0x000000010f7e014c: hlt    
  0x000000010f7e014d: hlt    
  0x000000010f7e014e: hlt    
  0x000000010f7e014f: hlt    
  0x000000010f7e0150: hlt    
  0x000000010f7e0151: hlt    
  0x000000010f7e0152: hlt    
  0x000000010f7e0153: hlt    
  0x000000010f7e0154: hlt    
  0x000000010f7e0155: hlt    
  0x000000010f7e0156: hlt    
  0x000000010f7e0157: hlt    
  0x000000010f7e0158: hlt    
  0x000000010f7e0159: hlt    
  0x000000010f7e015a: hlt    
  0x000000010f7e015b: hlt    
  0x000000010f7e015c: hlt    
  0x000000010f7e015d: hlt    
  0x000000010f7e015e: hlt    
  0x000000010f7e015f: hlt    
[Stub Code]
  0x000000010f7e0160: nop                       ;   {no_reloc}
  0x000000010f7e0161: nop
  0x000000010f7e0162: nop
  0x000000010f7e0163: nop
  0x000000010f7e0164: nop
  0x000000010f7e0165: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7e016f: jmpq   0x000000010f7e016f  ;   {runtime_call}
[Exception Handler]
  0x000000010f7e0174: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f7e0179: mov    %rsp,-0x28(%rsp)
  0x000000010f7e017e: sub    $0x80,%rsp
  0x000000010f7e0185: mov    %rax,0x78(%rsp)
  0x000000010f7e018a: mov    %rcx,0x70(%rsp)
  0x000000010f7e018f: mov    %rdx,0x68(%rsp)
  0x000000010f7e0194: mov    %rbx,0x60(%rsp)
  0x000000010f7e0199: mov    %rbp,0x50(%rsp)
  0x000000010f7e019e: mov    %rsi,0x48(%rsp)
  0x000000010f7e01a3: mov    %rdi,0x40(%rsp)
  0x000000010f7e01a8: mov    %r8,0x38(%rsp)
  0x000000010f7e01ad: mov    %r9,0x30(%rsp)
  0x000000010f7e01b2: mov    %r10,0x28(%rsp)
  0x000000010f7e01b7: mov    %r11,0x20(%rsp)
  0x000000010f7e01bc: mov    %r12,0x18(%rsp)
  0x000000010f7e01c1: mov    %r13,0x10(%rsp)
  0x000000010f7e01c6: mov    %r14,0x8(%rsp)
  0x000000010f7e01cb: mov    %r15,(%rsp)
  0x000000010f7e01cf: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7e01d9: movabs $0x10f7e0179,%rsi  ;   {internal_word}
  0x000000010f7e01e3: mov    %rsp,%rdx
  0x000000010f7e01e6: and    $0xfffffffffffffff0,%rsp
  0x000000010f7e01ea: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7e01ef: hlt    
[Deopt Handler Code]
  0x000000010f7e01f0: movabs $0x10f7e01f0,%r10  ;   {section_word}
  0x000000010f7e01fa: push   %r10
  0x000000010f7e01fc: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7e0201: hlt    
  0x000000010f7e0202: hlt    
  0x000000010f7e0203: hlt    
  0x000000010f7e0204: hlt    
  0x000000010f7e0205: hlt    
  0x000000010f7e0206: hlt    
  0x000000010f7e0207: hlt    
Decoding compiled method 0x000000010f7df910:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ea6a098} 'indexOf' '(I)I' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x000000010f7dfa80: mov    0x8(%rsi),%r10d
  0x000000010f7dfa84: shl    $0x3,%r10
  0x000000010f7dfa88: cmp    %rax,%r10
  0x000000010f7dfa8b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7dfa91: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7dfa9c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7dfaa0: mov    %eax,-0x14000(%rsp)
  0x000000010f7dfaa7: push   %rbp
  0x000000010f7dfaa8: sub    $0x30,%rsp
  0x000000010f7dfaac: movabs $0x10ec3ac50,%rcx  ;   {metadata(method data for {method} {0x000000010ea6a098} 'indexOf' '(I)I' in 'java/lang/String')}
  0x000000010f7dfab6: mov    0xdc(%rcx),%edi
  0x000000010f7dfabc: add    $0x8,%edi
  0x000000010f7dfabf: mov    %edi,0xdc(%rcx)
  0x000000010f7dfac5: movabs $0x10ea6a098,%rcx  ;   {metadata({method} {0x000000010ea6a098} 'indexOf' '(I)I' in 'java/lang/String')}
  0x000000010f7dfacf: and    $0x1ff8,%edi
  0x000000010f7dfad5: cmp    $0x0,%edi
  0x000000010f7dfad8: je     0x000000010f7dfb88  ;*aload_0
                                                ; - java.lang.String::indexOf@0 (line 1503)

  0x000000010f7dfade: mov    %rsi,%rcx
  0x000000010f7dfae1: movabs $0x10ec3ac50,%rdi  ;   {metadata(method data for {method} {0x000000010ea6a098} 'indexOf' '(I)I' in 'java/lang/String')}
  0x000000010f7dfaeb: mov    0x8(%rcx),%ecx
  0x000000010f7dfaee: shl    $0x3,%rcx
  0x000000010f7dfaf2: cmp    0x110(%rdi),%rcx
  0x000000010f7dfaf9: jne    0x000000010f7dfb08
  0x000000010f7dfafb: addq   $0x1,0x118(%rdi)
  0x000000010f7dfb03: jmpq   0x000000010f7dfb6e
  0x000000010f7dfb08: cmp    0x120(%rdi),%rcx
  0x000000010f7dfb0f: jne    0x000000010f7dfb1e
  0x000000010f7dfb11: addq   $0x1,0x128(%rdi)
  0x000000010f7dfb19: jmpq   0x000000010f7dfb6e
  0x000000010f7dfb1e: cmpq   $0x0,0x110(%rdi)
  0x000000010f7dfb29: jne    0x000000010f7dfb42
  0x000000010f7dfb2b: mov    %rcx,0x110(%rdi)
  0x000000010f7dfb32: movq   $0x1,0x118(%rdi)
  0x000000010f7dfb3d: jmpq   0x000000010f7dfb6e
  0x000000010f7dfb42: cmpq   $0x0,0x120(%rdi)
  0x000000010f7dfb4d: jne    0x000000010f7dfb66
  0x000000010f7dfb4f: mov    %rcx,0x120(%rdi)
  0x000000010f7dfb56: movq   $0x1,0x128(%rdi)
  0x000000010f7dfb61: jmpq   0x000000010f7dfb6e
  0x000000010f7dfb66: addq   $0x1,0x108(%rdi)
  0x000000010f7dfb6e: mov    $0x0,%ecx          ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3 (line 1503)

  0x000000010f7dfb73: nop
  0x000000010f7dfb74: nop
  0x000000010f7dfb75: nop
  0x000000010f7dfb76: nop
  0x000000010f7dfb77: callq  0x000000010f7170a0  ; OopMap{off=252}
                                                ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3 (line 1503)
                                                ;   {optimized virtual_call}
  0x000000010f7dfb7c: add    $0x30,%rsp
  0x000000010f7dfb80: pop    %rbp
  0x000000010f7dfb81: test   %eax,-0x8d44a87(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7dfb87: retq   
  0x000000010f7dfb88: mov    %rcx,0x8(%rsp)
  0x000000010f7dfb8d: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7dfb95: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=282}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1503)
                                                ;   {runtime_call}
  0x000000010f7dfb9a: jmpq   0x000000010f7dfade
  0x000000010f7dfb9f: nop
  0x000000010f7dfba0: nop
  0x000000010f7dfba1: mov    0x2a8(%r15),%rax
  0x000000010f7dfba8: movabs $0x0,%r10
  0x000000010f7dfbb2: mov    %r10,0x2a8(%r15)
  0x000000010f7dfbb9: movabs $0x0,%r10
  0x000000010f7dfbc3: mov    %r10,0x2b0(%r15)
  0x000000010f7dfbca: add    $0x30,%rsp
  0x000000010f7dfbce: pop    %rbp
  0x000000010f7dfbcf: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7dfbd4: hlt    
  0x000000010f7dfbd5: hlt    
  0x000000010f7dfbd6: hlt    
  0x000000010f7dfbd7: hlt    
  0x000000010f7dfbd8: hlt    
  0x000000010f7dfbd9: hlt    
  0x000000010f7dfbda: hlt    
  0x000000010f7dfbdb: hlt    
  0x000000010f7dfbdc: hlt    
  0x000000010f7dfbdd: hlt    
  0x000000010f7dfbde: hlt    
  0x000000010f7dfbdf: hlt    
[Stub Code]
  0x000000010f7dfbe0: nop                       ;   {no_reloc}
  0x000000010f7dfbe1: nop
  0x000000010f7dfbe2: nop
  0x000000010f7dfbe3: nop
  0x000000010f7dfbe4: nop
  0x000000010f7dfbe5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7dfbef: jmpq   0x000000010f7dfbef  ;   {runtime_call}
[Exception Handler]
  0x000000010f7dfbf4: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f7dfbf9: mov    %rsp,-0x28(%rsp)
  0x000000010f7dfbfe: sub    $0x80,%rsp
  0x000000010f7dfc05: mov    %rax,0x78(%rsp)
  0x000000010f7dfc0a: mov    %rcx,0x70(%rsp)
  0x000000010f7dfc0f: mov    %rdx,0x68(%rsp)
  0x000000010f7dfc14: mov    %rbx,0x60(%rsp)
  0x000000010f7dfc19: mov    %rbp,0x50(%rsp)
  0x000000010f7dfc1e: mov    %rsi,0x48(%rsp)
  0x000000010f7dfc23: mov    %rdi,0x40(%rsp)
  0x000000010f7dfc28: mov    %r8,0x38(%rsp)
  0x000000010f7dfc2d: mov    %r9,0x30(%rsp)
  0x000000010f7dfc32: mov    %r10,0x28(%rsp)
  0x000000010f7dfc37: mov    %r11,0x20(%rsp)
  0x000000010f7dfc3c: mov    %r12,0x18(%rsp)
  0x000000010f7dfc41: mov    %r13,0x10(%rsp)
  0x000000010f7dfc46: mov    %r14,0x8(%rsp)
  0x000000010f7dfc4b: mov    %r15,(%rsp)
  0x000000010f7dfc4f: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7dfc59: movabs $0x10f7dfbf9,%rsi  ;   {internal_word}
  0x000000010f7dfc63: mov    %rsp,%rdx
  0x000000010f7dfc66: and    $0xfffffffffffffff0,%rsp
  0x000000010f7dfc6a: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7dfc6f: hlt    
[Deopt Handler Code]
  0x000000010f7dfc70: movabs $0x10f7dfc70,%r10  ;   {section_word}
  0x000000010f7dfc7a: push   %r10
  0x000000010f7dfc7c: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7dfc81: hlt    
  0x000000010f7dfc82: hlt    
  0x000000010f7dfc83: hlt    
  0x000000010f7dfc84: hlt    
  0x000000010f7dfc85: hlt    
  0x000000010f7dfc86: hlt    
  0x000000010f7dfc87: hlt    
Decoding compiled method 0x000000010f7e5c90:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ea681a0} '<init>' '([CII)V' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx:rdx   = '[C'
  # parm1:    rcx       = int
  # parm2:    r8        = int
  #           [sp+0x70]  (sp of caller)
  0x000000010f7e5e60: mov    0x8(%rsi),%r10d
  0x000000010f7e5e64: shl    $0x3,%r10
  0x000000010f7e5e68: cmp    %rax,%r10
  0x000000010f7e5e6b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7e5e71: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7e5e7c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7e5e80: mov    %eax,-0x14000(%rsp)
  0x000000010f7e5e87: push   %rbp
  0x000000010f7e5e88: sub    $0x60,%rsp
  0x000000010f7e5e8c: movabs $0x10ec39ef0,%rdi  ;   {metadata(method data for {method} {0x000000010ea681a0} '<init>' '([CII)V' in 'java/lang/String')}
  0x000000010f7e5e96: mov    0xdc(%rdi),%ebx
  0x000000010f7e5e9c: add    $0x8,%ebx
  0x000000010f7e5e9f: mov    %ebx,0xdc(%rdi)
  0x000000010f7e5ea5: movabs $0x10ea681a0,%rdi  ;   {metadata({method} {0x000000010ea681a0} '<init>' '([CII)V' in 'java/lang/String')}
  0x000000010f7e5eaf: and    $0x1ff8,%ebx
  0x000000010f7e5eb5: cmp    $0x0,%ebx
  0x000000010f7e5eb8: je     0x000000010f7e6186  ;*aload_0
                                                ; - java.lang.String::<init>@0 (line 190)

  0x000000010f7e5ebe: mov    %rsi,%rdi
  0x000000010f7e5ec1: movabs $0x10ec39ef0,%rbx  ;   {metadata(method data for {method} {0x000000010ea681a0} '<init>' '([CII)V' in 'java/lang/String')}
  0x000000010f7e5ecb: addq   $0x1,0x108(%rbx)
  0x000000010f7e5ed3: movabs $0x10ebdca10,%rdi  ;   {metadata(method data for {method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f7e5edd: mov    0xdc(%rdi),%ebx
  0x000000010f7e5ee3: add    $0x8,%ebx
  0x000000010f7e5ee6: mov    %ebx,0xdc(%rdi)
  0x000000010f7e5eec: movabs $0x10ea65480,%rdi  ;   {metadata({method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f7e5ef6: and    $0x7ffff8,%ebx
  0x000000010f7e5efc: cmp    $0x0,%ebx
  0x000000010f7e5eff: je     0x000000010f7e619d
  0x000000010f7e5f05: cmp    $0x0,%ecx
  0x000000010f7e5f08: movabs $0x10ec39ef0,%rdi  ;   {metadata(method data for {method} {0x000000010ea681a0} '<init>' '([CII)V' in 'java/lang/String')}
  0x000000010f7e5f12: movabs $0x118,%rbx
  0x000000010f7e5f1c: jge    0x000000010f7e5f2c
  0x000000010f7e5f22: movabs $0x128,%rbx
  0x000000010f7e5f2c: mov    (%rdi,%rbx,1),%rax
  0x000000010f7e5f30: lea    0x1(%rax),%rax
  0x000000010f7e5f34: mov    %rax,(%rdi,%rbx,1)
  0x000000010f7e5f38: jl     0x000000010f7e6146  ;*ifge
                                                ; - java.lang.String::<init>@5 (line 191)

  0x000000010f7e5f3e: cmp    $0x0,%r8d
  0x000000010f7e5f42: movabs $0x10ec39ef0,%rdi  ;   {metadata(method data for {method} {0x000000010ea681a0} '<init>' '([CII)V' in 'java/lang/String')}
  0x000000010f7e5f4c: movabs $0x148,%rbx
  0x000000010f7e5f56: jg     0x000000010f7e5f66
  0x000000010f7e5f5c: movabs $0x158,%rbx
  0x000000010f7e5f66: mov    (%rdi,%rbx,1),%rax
  0x000000010f7e5f6a: lea    0x1(%rax),%rax
  0x000000010f7e5f6e: mov    %rax,(%rdi,%rbx,1)
  0x000000010f7e5f72: jg     0x000000010f7e5fed  ;*ifgt
                                                ; - java.lang.String::<init>@18 (line 194)

  0x000000010f7e5f78: cmp    $0x0,%r8d
  0x000000010f7e5f7c: movabs $0x10ec39ef0,%rdi  ;   {metadata(method data for {method} {0x000000010ea681a0} '<init>' '([CII)V' in 'java/lang/String')}
  0x000000010f7e5f86: movabs $0x168,%rbx
  0x000000010f7e5f90: jge    0x000000010f7e5fa0
  0x000000010f7e5f96: movabs $0x178,%rbx
  0x000000010f7e5fa0: mov    (%rdi,%rbx,1),%rax
  0x000000010f7e5fa4: lea    0x1(%rax),%rax
  0x000000010f7e5fa8: mov    %rax,(%rdi,%rbx,1)
  0x000000010f7e5fac: jl     0x000000010f7e6106  ;*ifge
                                                ; - java.lang.String::<init>@22 (line 195)

  0x000000010f7e5fb2: mov    0xc(%rdx),%edi     ;*arraylength
                                                ; - java.lang.String::<init>@36 (line 198)
                                                ; implicit exception: dispatches to 0x000000010f7e61b4
  0x000000010f7e5fb5: cmp    %edi,%ecx
  0x000000010f7e5fb7: movabs $0x10ec39ef0,%rdi  ;   {metadata(method data for {method} {0x000000010ea681a0} '<init>' '([CII)V' in 'java/lang/String')}
  0x000000010f7e5fc1: movabs $0x198,%rbx
  0x000000010f7e5fcb: jg     0x000000010f7e5fdb
  0x000000010f7e5fd1: movabs $0x1a8,%rbx
  0x000000010f7e5fdb: mov    (%rdi,%rbx,1),%rax
  0x000000010f7e5fdf: lea    0x1(%rax),%rax
  0x000000010f7e5fe3: mov    %rax,(%rdi,%rbx,1)
  0x000000010f7e5fe7: jle    0x000000010f7e6082  ;*if_icmpgt
                                                ; - java.lang.String::<init>@37 (line 198)

  0x000000010f7e5fed: mov    0xc(%rdx),%edi     ;*arraylength
                                                ; - java.lang.String::<init>@52 (line 204)
                                                ; implicit exception: dispatches to 0x000000010f7e61b9
  0x000000010f7e5ff0: sub    %r8d,%edi
  0x000000010f7e5ff3: cmp    %edi,%ecx
  0x000000010f7e5ff5: movabs $0x10ec39ef0,%rdi  ;   {metadata(method data for {method} {0x000000010ea681a0} '<init>' '([CII)V' in 'java/lang/String')}
  0x000000010f7e5fff: movabs $0x1b8,%rbx
  0x000000010f7e6009: jle    0x000000010f7e6019
  0x000000010f7e600f: movabs $0x1c8,%rbx
  0x000000010f7e6019: mov    (%rdi,%rbx,1),%rax
  0x000000010f7e601d: lea    0x1(%rax),%rax
  0x000000010f7e6021: mov    %rax,(%rdi,%rbx,1)
  0x000000010f7e6025: jg     0x000000010f7e60bc  ;*if_icmple
                                                ; - java.lang.String::<init>@55 (line 204)

  0x000000010f7e602b: mov    %rsi,0x38(%rsp)
  0x000000010f7e6030: movabs $0x10ec39ef0,%rdi  ;   {metadata(method data for {method} {0x000000010ea681a0} '<init>' '([CII)V' in 'java/lang/String')}
  0x000000010f7e603a: addq   $0x1,0x1e8(%rdi)
  0x000000010f7e6042: add    %ecx,%r8d
  0x000000010f7e6045: mov    %rdx,%rsi
  0x000000010f7e6048: mov    %rcx,%rdx
  0x000000010f7e604b: mov    %r8,%rcx           ;*invokestatic copyOfRange
                                                ; - java.lang.String::<init>@75 (line 207)

  0x000000010f7e604e: nop
  0x000000010f7e604f: callq  0x000000010f717520  ; OopMap{[56]=Oop off=500}
                                                ;*invokestatic copyOfRange
                                                ; - java.lang.String::<init>@75 (line 207)
                                                ;   {static_call}
  0x000000010f7e6054: mov    0x38(%rsp),%rsi
  0x000000010f7e6059: mov    %rax,%r10
  0x000000010f7e605c: shr    $0x3,%r10
  0x000000010f7e6060: mov    %r10d,0xc(%rsi)
  0x000000010f7e6064: shr    $0x9,%rsi
  0x000000010f7e6068: movabs $0x1065b9000,%rdx
  0x000000010f7e6072: movb   $0x0,(%rsi,%rdx,1)  ;*putfield value
                                                ; - java.lang.String::<init>@78 (line 207)

  0x000000010f7e6076: add    $0x60,%rsp
  0x000000010f7e607a: pop    %rbp
  0x000000010f7e607b: test   %eax,-0x8d4af81(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7e6081: retq                      ;*return
                                                ; - java.lang.String::<init>@81 (line 208)

  0x000000010f7e6082: movabs $0x79558a680,%rdx  ;   {oop("")}
  0x000000010f7e608c: mov    0xc(%rdx),%edx     ; implicit exception: dispatches to 0x000000010f7e61be
  0x000000010f7e608f: shl    $0x3,%rdx          ;*getfield value
                                                ; - java.lang.String::<init>@43 (line 199)

  0x000000010f7e6093: mov    %rdx,%r10
  0x000000010f7e6096: shr    $0x3,%r10
  0x000000010f7e609a: mov    %r10d,0xc(%rsi)
  0x000000010f7e609e: shr    $0x9,%rsi
  0x000000010f7e60a2: movabs $0x1065b9000,%rdx
  0x000000010f7e60ac: movb   $0x0,(%rsi,%rdx,1)  ;*putfield value
                                                ; - java.lang.String::<init>@46 (line 199)

  0x000000010f7e60b0: add    $0x60,%rsp
  0x000000010f7e60b4: pop    %rbp
  0x000000010f7e60b5: test   %eax,-0x8d4afbb(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7e60bb: retq                      ;*return
                                                ; - java.lang.String::<init>@49 (line 200)

  0x000000010f7e60bc: nopl   0x0(%rax)
  0x000000010f7e60c0: jmpq   0x000000010f7e61d2  ;   {no_reloc}
  0x000000010f7e60c5: add    %al,(%rax)
  0x000000010f7e60c7: add    %al,(%rax)
  0x000000010f7e60c9: add    %ch,%cl
  0x000000010f7e60cb: or     $0x48000001,%eax   ;*new  ; - java.lang.String::<init>@58 (line 205)

  0x000000010f7e60d0: mov    %eax,%edx
  0x000000010f7e60d2: movabs $0x10ec39ef0,%rsi  ;   {metadata(method data for {method} {0x000000010ea681a0} '<init>' '([CII)V' in 'java/lang/String')}
  0x000000010f7e60dc: addq   $0x1,0x1d8(%rsi)
  0x000000010f7e60e4: add    %ecx,%r8d
  0x000000010f7e60e7: mov    %r8,%rdx
  0x000000010f7e60ea: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.String::<init>@65 (line 205)

  0x000000010f7e60ed: mov    %rax,0x40(%rsp)
  0x000000010f7e60f2: nop
  0x000000010f7e60f3: nop
  0x000000010f7e60f4: nop
  0x000000010f7e60f5: nop
  0x000000010f7e60f6: nop
  0x000000010f7e60f7: callq  0x000000010f7170a0  ; OopMap{[64]=Oop off=668}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::<init>@65 (line 205)
                                                ;   {optimized virtual_call}
  0x000000010f7e60fc: mov    0x40(%rsp),%rax
  0x000000010f7e6101: jmpq   0x000000010f7e6260  ;*athrow
                                                ; - java.lang.String::<init>@68 (line 205)

  0x000000010f7e6106: xchg   %ax,%ax
  0x000000010f7e6108: jmpq   0x000000010f7e61f8  ;   {no_reloc}
  0x000000010f7e610d: add    %al,(%rax)
  0x000000010f7e610f: add    %al,(%rax)
  0x000000010f7e6111: add    %ch,%cl
  0x000000010f7e6113: jmp    0x000000010f7e6115
  0x000000010f7e6115: add    %al,(%rax)         ;*new  ; - java.lang.String::<init>@25 (line 196)

  0x000000010f7e6117: mov    %rax,%rdx
  0x000000010f7e611a: movabs $0x10ec39ef0,%rsi  ;   {metadata(method data for {method} {0x000000010ea681a0} '<init>' '([CII)V' in 'java/lang/String')}
  0x000000010f7e6124: addq   $0x1,0x188(%rsi)
  0x000000010f7e612c: mov    %r8,%rdx
  0x000000010f7e612f: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.String::<init>@30 (line 196)

  0x000000010f7e6132: mov    %rax,0x48(%rsp)
  0x000000010f7e6137: callq  0x000000010f7170a0  ; OopMap{[72]=Oop off=732}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::<init>@30 (line 196)
                                                ;   {optimized virtual_call}
  0x000000010f7e613c: mov    0x48(%rsp),%rax
  0x000000010f7e6141: jmpq   0x000000010f7e6260  ;*athrow
                                                ; - java.lang.String::<init>@33 (line 196)

  0x000000010f7e6146: xchg   %ax,%ax
  0x000000010f7e6148: jmpq   0x000000010f7e621e  ;   {no_reloc}
  0x000000010f7e614d: add    %al,(%rax)
  0x000000010f7e614f: add    %al,(%rax)
  0x000000010f7e6151: add    %ch,%cl
  0x000000010f7e6153: roll   (%rax)
  0x000000010f7e6155: add    %al,(%rax)         ;*new  ; - java.lang.String::<init>@8 (line 192)

  0x000000010f7e6157: mov    %rax,%rdx
  0x000000010f7e615a: movabs $0x10ec39ef0,%rsi  ;   {metadata(method data for {method} {0x000000010ea681a0} '<init>' '([CII)V' in 'java/lang/String')}
  0x000000010f7e6164: addq   $0x1,0x138(%rsi)
  0x000000010f7e616c: mov    %rcx,%rdx
  0x000000010f7e616f: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.String::<init>@13 (line 192)

  0x000000010f7e6172: mov    %rax,0x50(%rsp)
  0x000000010f7e6177: callq  0x000000010f7170a0  ; OopMap{[80]=Oop off=796}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::<init>@13 (line 192)
                                                ;   {optimized virtual_call}
  0x000000010f7e617c: mov    0x50(%rsp),%rax
  0x000000010f7e6181: jmpq   0x000000010f7e6260
  0x000000010f7e6186: mov    %rdi,0x8(%rsp)
  0x000000010f7e618b: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7e6193: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop rdx=Oop off=824}
                                                ;*synchronization entry
                                                ; - java.lang.String::<init>@-1 (line 190)
                                                ;   {runtime_call}
  0x000000010f7e6198: jmpq   0x000000010f7e5ebe
  0x000000010f7e619d: mov    %rdi,0x8(%rsp)
  0x000000010f7e61a2: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7e61aa: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop rdx=Oop off=847}
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 37)
                                                ; - java.lang.String::<init>@1 (line 190)
                                                ;   {runtime_call}
  0x000000010f7e61af: jmpq   0x000000010f7e5f05
  0x000000010f7e61b4: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop rdx=Oop off=857}
                                                ;*arraylength
                                                ; - java.lang.String::<init>@36 (line 198)
                                                ;   {runtime_call}
  0x000000010f7e61b9: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop rdx=Oop off=862}
                                                ;*arraylength
                                                ; - java.lang.String::<init>@52 (line 204)
                                                ;   {runtime_call}
  0x000000010f7e61be: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop off=867}
                                                ;*getfield value
                                                ; - java.lang.String::<init>@43 (line 199)
                                                ;   {runtime_call}
  0x000000010f7e61c3: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f7e61cd: mov    $0xa050f00,%eax
  0x000000010f7e61d2: callq  0x000000010f7d08e0  ; OopMap{off=887}
                                                ;*new  ; - java.lang.String::<init>@58 (line 205)
                                                ;   {runtime_call}
  0x000000010f7e61d7: jmpq   0x000000010f7e60c0
  0x000000010f7e61dc: mov    %rdx,%rdx
  0x000000010f7e61df: callq  0x000000010f7cd560  ; OopMap{off=900}
                                                ;*new  ; - java.lang.String::<init>@58 (line 205)
                                                ;   {runtime_call}
  0x000000010f7e61e4: jmpq   0x000000010f7e60cf
  0x000000010f7e61e9: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f7e61f3: mov    $0xa050f00,%eax
  0x000000010f7e61f8: callq  0x000000010f7d08e0  ; OopMap{off=925}
                                                ;*new  ; - java.lang.String::<init>@25 (line 196)
                                                ;   {runtime_call}
  0x000000010f7e61fd: jmpq   0x000000010f7e6108
  0x000000010f7e6202: mov    %rdx,%rdx
  0x000000010f7e6205: callq  0x000000010f7cd560  ; OopMap{off=938}
                                                ;*new  ; - java.lang.String::<init>@25 (line 196)
                                                ;   {runtime_call}
  0x000000010f7e620a: jmpq   0x000000010f7e6117
  0x000000010f7e620f: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f7e6219: mov    $0xa050f00,%eax
  0x000000010f7e621e: callq  0x000000010f7d08e0  ; OopMap{off=963}
                                                ;*new  ; - java.lang.String::<init>@8 (line 192)
                                                ;   {runtime_call}
  0x000000010f7e6223: jmpq   0x000000010f7e6148
  0x000000010f7e6228: mov    %rdx,%rdx
  0x000000010f7e622b: callq  0x000000010f7cd560  ; OopMap{off=976}
                                                ;*new  ; - java.lang.String::<init>@8 (line 192)
                                                ;   {runtime_call}
  0x000000010f7e6230: jmpq   0x000000010f7e6157
  0x000000010f7e6235: nop
  0x000000010f7e6236: nop
  0x000000010f7e6237: mov    0x2a8(%r15),%rax
  0x000000010f7e623e: movabs $0x0,%r10
  0x000000010f7e6248: mov    %r10,0x2a8(%r15)
  0x000000010f7e624f: movabs $0x0,%r10
  0x000000010f7e6259: mov    %r10,0x2b0(%r15)
  0x000000010f7e6260: add    $0x60,%rsp
  0x000000010f7e6264: pop    %rbp
  0x000000010f7e6265: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7e626a: hlt    
  0x000000010f7e626b: hlt    
  0x000000010f7e626c: hlt    
  0x000000010f7e626d: hlt    
  0x000000010f7e626e: hlt    
  0x000000010f7e626f: hlt    
  0x000000010f7e6270: hlt    
  0x000000010f7e6271: hlt    
  0x000000010f7e6272: hlt    
  0x000000010f7e6273: hlt    
  0x000000010f7e6274: hlt    
  0x000000010f7e6275: hlt    
  0x000000010f7e6276: hlt    
  0x000000010f7e6277: hlt    
  0x000000010f7e6278: hlt    
  0x000000010f7e6279: hlt    
  0x000000010f7e627a: hlt    
  0x000000010f7e627b: hlt    
  0x000000010f7e627c: hlt    
  0x000000010f7e627d: hlt    
  0x000000010f7e627e: hlt    
  0x000000010f7e627f: hlt    
[Stub Code]
  0x000000010f7e6280: nop                       ;   {no_reloc}
  0x000000010f7e6281: nop
  0x000000010f7e6282: nop
  0x000000010f7e6283: nop
  0x000000010f7e6284: nop
  0x000000010f7e6285: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7e628f: jmpq   0x000000010f7e628f  ;   {runtime_call}
  0x000000010f7e6294: nop
  0x000000010f7e6295: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7e629f: jmpq   0x000000010f7e629f  ;   {runtime_call}
  0x000000010f7e62a4: nop
  0x000000010f7e62a5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7e62af: jmpq   0x000000010f7e62af  ;   {runtime_call}
  0x000000010f7e62b4: nop
  0x000000010f7e62b5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7e62bf: jmpq   0x000000010f7e62bf  ;   {runtime_call}
[Exception Handler]
  0x000000010f7e62c4: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f7e62c9: mov    %rsp,-0x28(%rsp)
  0x000000010f7e62ce: sub    $0x80,%rsp
  0x000000010f7e62d5: mov    %rax,0x78(%rsp)
  0x000000010f7e62da: mov    %rcx,0x70(%rsp)
  0x000000010f7e62df: mov    %rdx,0x68(%rsp)
  0x000000010f7e62e4: mov    %rbx,0x60(%rsp)
  0x000000010f7e62e9: mov    %rbp,0x50(%rsp)
  0x000000010f7e62ee: mov    %rsi,0x48(%rsp)
  0x000000010f7e62f3: mov    %rdi,0x40(%rsp)
  0x000000010f7e62f8: mov    %r8,0x38(%rsp)
  0x000000010f7e62fd: mov    %r9,0x30(%rsp)
  0x000000010f7e6302: mov    %r10,0x28(%rsp)
  0x000000010f7e6307: mov    %r11,0x20(%rsp)
  0x000000010f7e630c: mov    %r12,0x18(%rsp)
  0x000000010f7e6311: mov    %r13,0x10(%rsp)
  0x000000010f7e6316: mov    %r14,0x8(%rsp)
  0x000000010f7e631b: mov    %r15,(%rsp)
  0x000000010f7e631f: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7e6329: movabs $0x10f7e62c9,%rsi  ;   {internal_word}
  0x000000010f7e6333: mov    %rsp,%rdx
  0x000000010f7e6336: and    $0xfffffffffffffff0,%rsp
  0x000000010f7e633a: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7e633f: hlt    
[Deopt Handler Code]
  0x000000010f7e6340: movabs $0x10f7e6340,%r10  ;   {section_word}
  0x000000010f7e634a: push   %r10
  0x000000010f7e634c: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7e6351: hlt    
  0x000000010f7e6352: hlt    
  0x000000010f7e6353: hlt    
  0x000000010f7e6354: hlt    
  0x000000010f7e6355: hlt    
  0x000000010f7e6356: hlt    
  0x000000010f7e6357: hlt    
Decoding compiled method 0x000000010f7e5290:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ea6acb8} 'substring' '(II)Ljava/lang/String;' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  #           [sp+0x70]  (sp of caller)
  0x000000010f7e5460: mov    0x8(%rsi),%r10d
  0x000000010f7e5464: shl    $0x3,%r10
  0x000000010f7e5468: cmp    %rax,%r10
  0x000000010f7e546b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7e5471: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7e547c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7e5480: mov    %eax,-0x14000(%rsp)
  0x000000010f7e5487: push   %rbp
  0x000000010f7e5488: sub    $0x60,%rsp
  0x000000010f7e548c: mov    %rsi,%rbx
  0x000000010f7e548f: mov    %rdx,%r8
  0x000000010f7e5492: movabs $0x10ed14ec8,%rdx  ;   {metadata(method data for {method} {0x000000010ea6acb8} 'substring' '(II)Ljava/lang/String;' in 'java/lang/String')}
  0x000000010f7e549c: mov    0xdc(%rdx),%esi
  0x000000010f7e54a2: add    $0x8,%esi
  0x000000010f7e54a5: mov    %esi,0xdc(%rdx)
  0x000000010f7e54ab: movabs $0x10ea6acb8,%rdx  ;   {metadata({method} {0x000000010ea6acb8} 'substring' '(II)Ljava/lang/String;' in 'java/lang/String')}
  0x000000010f7e54b5: and    $0x1ff8,%esi
  0x000000010f7e54bb: cmp    $0x0,%esi
  0x000000010f7e54be: je     0x000000010f7e5756  ;*iload_1
                                                ; - java.lang.String::substring@0 (line 1959)

  0x000000010f7e54c4: cmp    $0x0,%r8d
  0x000000010f7e54c8: movabs $0x10ed14ec8,%rdx  ;   {metadata(method data for {method} {0x000000010ea6acb8} 'substring' '(II)Ljava/lang/String;' in 'java/lang/String')}
  0x000000010f7e54d2: movabs $0x108,%rsi
  0x000000010f7e54dc: jge    0x000000010f7e54ec
  0x000000010f7e54e2: movabs $0x118,%rsi
  0x000000010f7e54ec: mov    (%rdx,%rsi,1),%rdi
  0x000000010f7e54f0: lea    0x1(%rdi),%rdi
  0x000000010f7e54f4: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f7e54f8: jl     0x000000010f7e5716  ;*ifge
                                                ; - java.lang.String::substring@1 (line 1959)

  0x000000010f7e54fe: mov    0xc(%rbx),%r9d
  0x000000010f7e5502: shl    $0x3,%r9           ;*getfield value
                                                ; - java.lang.String::substring@15 (line 1962)

  0x000000010f7e5506: mov    0xc(%r9),%edx      ;*arraylength
                                                ; - java.lang.String::substring@18 (line 1962)
                                                ; implicit exception: dispatches to 0x000000010f7e576d
  0x000000010f7e550a: cmp    %edx,%ecx
  0x000000010f7e550c: movabs $0x10ed14ec8,%rsi  ;   {metadata(method data for {method} {0x000000010ea6acb8} 'substring' '(II)Ljava/lang/String;' in 'java/lang/String')}
  0x000000010f7e5516: movabs $0x138,%rdi
  0x000000010f7e5520: jle    0x000000010f7e5530
  0x000000010f7e5526: movabs $0x148,%rdi
  0x000000010f7e5530: mov    (%rsi,%rdi,1),%rax
  0x000000010f7e5534: lea    0x1(%rax),%rax
  0x000000010f7e5538: mov    %rax,(%rsi,%rdi,1)
  0x000000010f7e553c: jg     0x000000010f7e56d6  ;*if_icmple
                                                ; - java.lang.String::substring@19 (line 1962)

  0x000000010f7e5542: mov    %rcx,%r11
  0x000000010f7e5545: sub    %r8d,%r11d
  0x000000010f7e5548: cmp    $0x0,%r11d
  0x000000010f7e554c: movabs $0x10ed14ec8,%rsi  ;   {metadata(method data for {method} {0x000000010ea6acb8} 'substring' '(II)Ljava/lang/String;' in 'java/lang/String')}
  0x000000010f7e5556: movabs $0x168,%rdi
  0x000000010f7e5560: jge    0x000000010f7e5570
  0x000000010f7e5566: movabs $0x178,%rdi
  0x000000010f7e5570: mov    (%rsi,%rdi,1),%rax
  0x000000010f7e5574: lea    0x1(%rax),%rax
  0x000000010f7e5578: mov    %rax,(%rsi,%rdi,1)
  0x000000010f7e557c: jl     0x000000010f7e5694  ;*ifge
                                                ; - java.lang.String::substring@36 (line 1966)

  0x000000010f7e5582: cmp    $0x0,%r8d
  0x000000010f7e5586: movabs $0x10ed14ec8,%rsi  ;   {metadata(method data for {method} {0x000000010ea6acb8} 'substring' '(II)Ljava/lang/String;' in 'java/lang/String')}
  0x000000010f7e5590: movabs $0x198,%rdi
  0x000000010f7e559a: jne    0x000000010f7e55aa
  0x000000010f7e55a0: movabs $0x1a8,%rdi
  0x000000010f7e55aa: mov    (%rsi,%rdi,1),%rax
  0x000000010f7e55ae: lea    0x1(%rax),%rax
  0x000000010f7e55b2: mov    %rax,(%rsi,%rdi,1)
  0x000000010f7e55b6: jne    0x000000010f7e55f4  ;*ifne
                                                ; - java.lang.String::substring@49 (line 1969)

  0x000000010f7e55bc: cmp    %edx,%ecx
  0x000000010f7e55be: movabs $0x10ed14ec8,%rdx  ;   {metadata(method data for {method} {0x000000010ea6acb8} 'substring' '(II)Ljava/lang/String;' in 'java/lang/String')}
  0x000000010f7e55c8: movabs $0x1b8,%rsi
  0x000000010f7e55d2: jne    0x000000010f7e55e2
  0x000000010f7e55d8: movabs $0x1c8,%rsi
  0x000000010f7e55e2: mov    (%rdx,%rsi,1),%rdi
  0x000000010f7e55e6: lea    0x1(%rdi),%rdi
  0x000000010f7e55ea: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f7e55ee: je     0x000000010f7e5675  ;*if_icmpne
                                                ; - java.lang.String::substring@58 (line 1969)

  0x000000010f7e55f4: movabs $0x7c00016d0,%rdx  ;   {metadata('java/lang/String')}
  0x000000010f7e55fe: mov    0x60(%r15),%rax
  0x000000010f7e5602: lea    0x18(%rax),%rdi
  0x000000010f7e5606: cmp    0x70(%r15),%rdi
  0x000000010f7e560a: ja     0x000000010f7e5772
  0x000000010f7e5610: mov    %rdi,0x60(%r15)
  0x000000010f7e5614: mov    0xa8(%rdx),%rcx
  0x000000010f7e561b: mov    %rcx,(%rax)
  0x000000010f7e561e: mov    %rdx,%rcx
  0x000000010f7e5621: shr    $0x3,%rcx
  0x000000010f7e5625: mov    %ecx,0x8(%rax)
  0x000000010f7e5628: xor    %rcx,%rcx
  0x000000010f7e562b: mov    %ecx,0xc(%rax)
  0x000000010f7e562e: xor    %rcx,%rcx
  0x000000010f7e5631: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.String::substring@65 (line 1969)

  0x000000010f7e5635: mov    %rax,%rdx
  0x000000010f7e5638: movabs $0x10ed14ec8,%rcx  ;   {metadata(method data for {method} {0x000000010ea6acb8} 'substring' '(II)Ljava/lang/String;' in 'java/lang/String')}
  0x000000010f7e5642: addq   $0x1,0x1f0(%rcx)
  0x000000010f7e564a: mov    %r9,%rdx
  0x000000010f7e564d: mov    %r8,%rcx
  0x000000010f7e5650: mov    %r11,%r8
  0x000000010f7e5653: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.String::substring@75 (line 1969)

  0x000000010f7e5656: mov    %rax,0x30(%rsp)
  0x000000010f7e565b: nop
  0x000000010f7e565c: nop
  0x000000010f7e565d: nop
  0x000000010f7e565e: nop
  0x000000010f7e565f: callq  0x000000010f7170a0  ; OopMap{[48]=Oop off=516}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::substring@75 (line 1969)
                                                ;   {optimized virtual_call}
  0x000000010f7e5664: mov    0x30(%rsp),%rax    ;*areturn
                                                ; - java.lang.String::substring@78 (line 1969)

  0x000000010f7e5669: add    $0x60,%rsp
  0x000000010f7e566d: pop    %rbp
  0x000000010f7e566e: test   %eax,-0x8d4a574(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7e5674: retq   
  0x000000010f7e5675: movabs $0x10ed14ec8,%rax  ;   {metadata(method data for {method} {0x000000010ea6acb8} 'substring' '(II)Ljava/lang/String;' in 'java/lang/String')}
  0x000000010f7e567f: incl   0x1d8(%rax)
  0x000000010f7e5685: mov    %rbx,%rax          ;*goto
                                                ; - java.lang.String::substring@62 (line 1969)

  0x000000010f7e5688: add    $0x60,%rsp
  0x000000010f7e568c: pop    %rbp
  0x000000010f7e568d: test   %eax,-0x8d4a593(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7e5693: retq                      ;*areturn
                                                ; - java.lang.String::substring@78 (line 1969)

  0x000000010f7e5694: nopl   0x0(%rax)
  0x000000010f7e5698: jmpq   0x000000010f7e578e  ;   {no_reloc}
  0x000000010f7e569d: add    %al,(%rax)
  0x000000010f7e569f: add    %al,(%rax)
  0x000000010f7e56a1: add    %ch,%cl
  0x000000010f7e56a3: icebp  
  0x000000010f7e56a4: add    %al,(%rax)
  0x000000010f7e56a6: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.String::substring@39 (line 1967)

  0x000000010f7e56a9: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x000000010ea6acb8} 'substring' '(II)Ljava/lang/String;' in 'java/lang/String')}
  0x000000010f7e56ac: enterq $0xd14e,$0xe
  0x000000010f7e56b0: add    %eax,(%rax)
  0x000000010f7e56b2: add    %al,(%rax)
  0x000000010f7e56b4: addq   $0x1,0x188(%rsi)
  0x000000010f7e56bc: mov    %r11,%rdx
  0x000000010f7e56bf: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.String::substring@44 (line 1967)

  0x000000010f7e56c2: mov    %rax,0x38(%rsp)
  0x000000010f7e56c7: callq  0x000000010f7170a0  ; OopMap{[56]=Oop off=620}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::substring@44 (line 1967)
                                                ;   {optimized virtual_call}
  0x000000010f7e56cc: mov    0x38(%rsp),%rax
  0x000000010f7e56d1: jmpq   0x000000010f7e581c  ;*athrow
                                                ; - java.lang.String::substring@47 (line 1967)

  0x000000010f7e56d6: xchg   %ax,%ax
  0x000000010f7e56d8: jmpq   0x000000010f7e57b4  ;   {no_reloc}
  0x000000010f7e56dd: add    %al,(%rax)
  0x000000010f7e56df: add    %al,(%rax)
  0x000000010f7e56e1: add    %ch,%cl
  0x000000010f7e56e3: xlat   %ds:(%rbx)
  0x000000010f7e56e4: add    %al,(%rax)
  0x000000010f7e56e6: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.String::substring@22 (line 1963)

  0x000000010f7e56e9: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x000000010ea6acb8} 'substring' '(II)Ljava/lang/String;' in 'java/lang/String')}
  0x000000010f7e56ec: enterq $0xd14e,$0xe
  0x000000010f7e56f0: add    %eax,(%rax)
  0x000000010f7e56f2: add    %al,(%rax)
  0x000000010f7e56f4: addq   $0x1,0x158(%rsi)
  0x000000010f7e56fc: mov    %rcx,%rdx
  0x000000010f7e56ff: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.String::substring@27 (line 1963)

  0x000000010f7e5702: mov    %rax,0x40(%rsp)
  0x000000010f7e5707: callq  0x000000010f7170a0  ; OopMap{[64]=Oop off=684}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::substring@27 (line 1963)
                                                ;   {optimized virtual_call}
  0x000000010f7e570c: mov    0x40(%rsp),%rax
  0x000000010f7e5711: jmpq   0x000000010f7e581c  ;*athrow
                                                ; - java.lang.String::substring@30 (line 1963)

  0x000000010f7e5716: xchg   %ax,%ax
  0x000000010f7e5718: jmpq   0x000000010f7e57da  ;   {no_reloc}
  0x000000010f7e571d: add    %al,(%rax)
  0x000000010f7e571f: add    %al,(%rax)
  0x000000010f7e5721: add    %ch,%cl
  0x000000010f7e5723: mov    $0x48000000,%ebp   ;*new  ; - java.lang.String::substring@4 (line 1960)

  0x000000010f7e5728: mov    %eax,%edx
  0x000000010f7e572a: movabs $0x10ed14ec8,%rsi  ;   {metadata(method data for {method} {0x000000010ea6acb8} 'substring' '(II)Ljava/lang/String;' in 'java/lang/String')}
  0x000000010f7e5734: addq   $0x1,0x128(%rsi)
  0x000000010f7e573c: mov    %r8,%rdx
  0x000000010f7e573f: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.String::substring@9 (line 1960)

  0x000000010f7e5742: mov    %rax,0x48(%rsp)
  0x000000010f7e5747: callq  0x000000010f7170a0  ; OopMap{[72]=Oop off=748}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::substring@9 (line 1960)
                                                ;   {optimized virtual_call}
  0x000000010f7e574c: mov    0x48(%rsp),%rax
  0x000000010f7e5751: jmpq   0x000000010f7e581c
  0x000000010f7e5756: mov    %rdx,0x8(%rsp)
  0x000000010f7e575b: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7e5763: callq  0x000000010f7d1a20  ; OopMap{rbx=Oop off=776}
                                                ;*synchronization entry
                                                ; - java.lang.String::substring@-1 (line 1959)
                                                ;   {runtime_call}
  0x000000010f7e5768: jmpq   0x000000010f7e54c4
  0x000000010f7e576d: callq  0x000000010f7cd0c0  ; OopMap{rbx=Oop r9=Oop off=786}
                                                ;*arraylength
                                                ; - java.lang.String::substring@18 (line 1962)
                                                ;   {runtime_call}
  0x000000010f7e5772: mov    %rdx,%rdx
  0x000000010f7e5775: callq  0x000000010f7cd820  ; OopMap{rbx=Oop r9=Oop off=794}
                                                ;*new  ; - java.lang.String::substring@65 (line 1969)
                                                ;   {runtime_call}
  0x000000010f7e577a: jmpq   0x000000010f7e5635
  0x000000010f7e577f: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f7e5789: mov    $0xa050f00,%eax
  0x000000010f7e578e: callq  0x000000010f7d08e0  ; OopMap{off=819}
                                                ;*new  ; - java.lang.String::substring@39 (line 1967)
                                                ;   {runtime_call}
  0x000000010f7e5793: jmpq   0x000000010f7e5698
  0x000000010f7e5798: mov    %rdx,%rdx
  0x000000010f7e579b: callq  0x000000010f7cd560  ; OopMap{off=832}
                                                ;*new  ; - java.lang.String::substring@39 (line 1967)
                                                ;   {runtime_call}
  0x000000010f7e57a0: jmpq   0x000000010f7e56a7
  0x000000010f7e57a5: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f7e57af: mov    $0xa050f00,%eax
  0x000000010f7e57b4: callq  0x000000010f7d08e0  ; OopMap{off=857}
                                                ;*new  ; - java.lang.String::substring@22 (line 1963)
                                                ;   {runtime_call}
  0x000000010f7e57b9: jmpq   0x000000010f7e56d8
  0x000000010f7e57be: mov    %rdx,%rdx
  0x000000010f7e57c1: callq  0x000000010f7cd560  ; OopMap{off=870}
                                                ;*new  ; - java.lang.String::substring@22 (line 1963)
                                                ;   {runtime_call}
  0x000000010f7e57c6: jmpq   0x000000010f7e56e7
  0x000000010f7e57cb: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f7e57d5: mov    $0xa050f00,%eax
  0x000000010f7e57da: callq  0x000000010f7d08e0  ; OopMap{off=895}
                                                ;*new  ; - java.lang.String::substring@4 (line 1960)
                                                ;   {runtime_call}
  0x000000010f7e57df: jmpq   0x000000010f7e5718
  0x000000010f7e57e4: mov    %rdx,%rdx
  0x000000010f7e57e7: callq  0x000000010f7cd560  ; OopMap{off=908}
                                                ;*new  ; - java.lang.String::substring@4 (line 1960)
                                                ;   {runtime_call}
  0x000000010f7e57ec: jmpq   0x000000010f7e5727
  0x000000010f7e57f1: nop
  0x000000010f7e57f2: nop
  0x000000010f7e57f3: mov    0x2a8(%r15),%rax
  0x000000010f7e57fa: movabs $0x0,%r10
  0x000000010f7e5804: mov    %r10,0x2a8(%r15)
  0x000000010f7e580b: movabs $0x0,%r10
  0x000000010f7e5815: mov    %r10,0x2b0(%r15)
  0x000000010f7e581c: add    $0x60,%rsp
  0x000000010f7e5820: pop    %rbp
  0x000000010f7e5821: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7e5826: hlt    
  0x000000010f7e5827: hlt    
  0x000000010f7e5828: hlt    
  0x000000010f7e5829: hlt    
  0x000000010f7e582a: hlt    
  0x000000010f7e582b: hlt    
  0x000000010f7e582c: hlt    
  0x000000010f7e582d: hlt    
  0x000000010f7e582e: hlt    
  0x000000010f7e582f: hlt    
  0x000000010f7e5830: hlt    
  0x000000010f7e5831: hlt    
  0x000000010f7e5832: hlt    
  0x000000010f7e5833: hlt    
  0x000000010f7e5834: hlt    
  0x000000010f7e5835: hlt    
  0x000000010f7e5836: hlt    
  0x000000010f7e5837: hlt    
  0x000000010f7e5838: hlt    
  0x000000010f7e5839: hlt    
  0x000000010f7e583a: hlt    
  0x000000010f7e583b: hlt    
  0x000000010f7e583c: hlt    
  0x000000010f7e583d: hlt    
  0x000000010f7e583e: hlt    
  0x000000010f7e583f: hlt    
[Stub Code]
  0x000000010f7e5840: nop                       ;   {no_reloc}
  0x000000010f7e5841: nop
  0x000000010f7e5842: nop
  0x000000010f7e5843: nop
  0x000000010f7e5844: nop
  0x000000010f7e5845: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7e584f: jmpq   0x000000010f7e584f  ;   {runtime_call}
  0x000000010f7e5854: nop
  0x000000010f7e5855: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7e585f: jmpq   0x000000010f7e585f  ;   {runtime_call}
  0x000000010f7e5864: nop
  0x000000010f7e5865: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7e586f: jmpq   0x000000010f7e586f  ;   {runtime_call}
  0x000000010f7e5874: nop
  0x000000010f7e5875: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7e587f: jmpq   0x000000010f7e587f  ;   {runtime_call}
[Exception Handler]
  0x000000010f7e5884: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f7e5889: mov    %rsp,-0x28(%rsp)
  0x000000010f7e588e: sub    $0x80,%rsp
  0x000000010f7e5895: mov    %rax,0x78(%rsp)
  0x000000010f7e589a: mov    %rcx,0x70(%rsp)
  0x000000010f7e589f: mov    %rdx,0x68(%rsp)
  0x000000010f7e58a4: mov    %rbx,0x60(%rsp)
  0x000000010f7e58a9: mov    %rbp,0x50(%rsp)
  0x000000010f7e58ae: mov    %rsi,0x48(%rsp)
  0x000000010f7e58b3: mov    %rdi,0x40(%rsp)
  0x000000010f7e58b8: mov    %r8,0x38(%rsp)
  0x000000010f7e58bd: mov    %r9,0x30(%rsp)
  0x000000010f7e58c2: mov    %r10,0x28(%rsp)
  0x000000010f7e58c7: mov    %r11,0x20(%rsp)
  0x000000010f7e58cc: mov    %r12,0x18(%rsp)
  0x000000010f7e58d1: mov    %r13,0x10(%rsp)
  0x000000010f7e58d6: mov    %r14,0x8(%rsp)
  0x000000010f7e58db: mov    %r15,(%rsp)
  0x000000010f7e58df: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7e58e9: movabs $0x10f7e5889,%rsi  ;   {internal_word}
  0x000000010f7e58f3: mov    %rsp,%rdx
  0x000000010f7e58f6: and    $0xfffffffffffffff0,%rsp
  0x000000010f7e58fa: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7e58ff: hlt    
[Deopt Handler Code]
  0x000000010f7e5900: movabs $0x10f7e5900,%r10  ;   {section_word}
  0x000000010f7e590a: push   %r10
  0x000000010f7e590c: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7e5911: hlt    
  0x000000010f7e5912: hlt    
  0x000000010f7e5913: hlt    
  0x000000010f7e5914: hlt    
  0x000000010f7e5915: hlt    
  0x000000010f7e5916: hlt    
  0x000000010f7e5917: hlt    
Decoding compiled method 0x000000010f7e6750:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010eadf5f8} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder'
  #           [sp+0x50]  (sp of caller)
  0x000000010f7e68c0: mov    0x8(%rsi),%r10d
  0x000000010f7e68c4: shl    $0x3,%r10
  0x000000010f7e68c8: cmp    %rax,%r10
  0x000000010f7e68cb: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7e68d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7e68dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7e68e0: mov    %eax,-0x14000(%rsp)
  0x000000010f7e68e7: push   %rbp
  0x000000010f7e68e8: sub    $0x40,%rsp
  0x000000010f7e68ec: mov    %rsi,%r8
  0x000000010f7e68ef: movabs $0x10ed00b80,%rdx  ;   {metadata(method data for {method} {0x000000010eadf5f8} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder')}
  0x000000010f7e68f9: mov    0xdc(%rdx),%esi
  0x000000010f7e68ff: add    $0x8,%esi
  0x000000010f7e6902: mov    %esi,0xdc(%rdx)
  0x000000010f7e6908: movabs $0x10eadf5f8,%rdx  ;   {metadata({method} {0x000000010eadf5f8} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder')}
  0x000000010f7e6912: and    $0x1ff8,%esi
  0x000000010f7e6918: cmp    $0x0,%esi
  0x000000010f7e691b: je     0x000000010f7e69ad
  0x000000010f7e6921: movabs $0x7c00016d0,%rdx  ;   {metadata('java/lang/String')}
  0x000000010f7e692b: mov    0x60(%r15),%rax
  0x000000010f7e692f: lea    0x18(%rax),%rdi
  0x000000010f7e6933: cmp    0x70(%r15),%rdi
  0x000000010f7e6937: ja     0x000000010f7e69c4
  0x000000010f7e693d: mov    %rdi,0x60(%r15)
  0x000000010f7e6941: mov    0xa8(%rdx),%rcx
  0x000000010f7e6948: mov    %rcx,(%rax)
  0x000000010f7e694b: mov    %rdx,%rcx
  0x000000010f7e694e: shr    $0x3,%rcx
  0x000000010f7e6952: mov    %ecx,0x8(%rax)
  0x000000010f7e6955: xor    %rcx,%rcx
  0x000000010f7e6958: mov    %ecx,0xc(%rax)
  0x000000010f7e695b: xor    %rcx,%rcx
  0x000000010f7e695e: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)

  0x000000010f7e6962: mov    0x10(%r8),%edx
  0x000000010f7e6966: shl    $0x3,%rdx          ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 407)

  0x000000010f7e696a: mov    0xc(%r8),%r8d      ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 407)

  0x000000010f7e696e: mov    %rax,%rcx
  0x000000010f7e6971: movabs $0x10ed00b80,%rsi  ;   {metadata(method data for {method} {0x000000010eadf5f8} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder')}
  0x000000010f7e697b: addq   $0x1,0x108(%rsi)
  0x000000010f7e6983: mov    $0x0,%ecx
  0x000000010f7e6988: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.StringBuilder::toString@13 (line 407)

  0x000000010f7e698b: mov    %rax,0x30(%rsp)
  0x000000010f7e6990: nop
  0x000000010f7e6991: nop
  0x000000010f7e6992: nop
  0x000000010f7e6993: nop
  0x000000010f7e6994: nop
  0x000000010f7e6995: nop
  0x000000010f7e6996: nop
  0x000000010f7e6997: callq  0x000000010f7170a0  ; OopMap{[48]=Oop off=220}
                                                ;*invokespecial <init>
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ;   {optimized virtual_call}
  0x000000010f7e699c: mov    0x30(%rsp),%rax
  0x000000010f7e69a1: add    $0x40,%rsp
  0x000000010f7e69a5: pop    %rbp
  0x000000010f7e69a6: test   %eax,-0x8d4b8ac(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7e69ac: retq   
  0x000000010f7e69ad: mov    %rdx,0x8(%rsp)
  0x000000010f7e69b2: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7e69ba: callq  0x000000010f7d1a20  ; OopMap{r8=Oop off=255}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ;   {runtime_call}
  0x000000010f7e69bf: jmpq   0x000000010f7e6921
  0x000000010f7e69c4: mov    %rdx,%rdx
  0x000000010f7e69c7: callq  0x000000010f7cd820  ; OopMap{r8=Oop off=268}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ;   {runtime_call}
  0x000000010f7e69cc: jmp    0x000000010f7e6962
  0x000000010f7e69ce: nop
  0x000000010f7e69cf: nop
  0x000000010f7e69d0: mov    0x2a8(%r15),%rax
  0x000000010f7e69d7: movabs $0x0,%r10
  0x000000010f7e69e1: mov    %r10,0x2a8(%r15)
  0x000000010f7e69e8: movabs $0x0,%r10
  0x000000010f7e69f2: mov    %r10,0x2b0(%r15)
  0x000000010f7e69f9: add    $0x40,%rsp
  0x000000010f7e69fd: pop    %rbp
  0x000000010f7e69fe: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7e6a03: hlt    
  0x000000010f7e6a04: hlt    
  0x000000010f7e6a05: hlt    
  0x000000010f7e6a06: hlt    
  0x000000010f7e6a07: hlt    
  0x000000010f7e6a08: hlt    
  0x000000010f7e6a09: hlt    
  0x000000010f7e6a0a: hlt    
  0x000000010f7e6a0b: hlt    
  0x000000010f7e6a0c: hlt    
  0x000000010f7e6a0d: hlt    
  0x000000010f7e6a0e: hlt    
  0x000000010f7e6a0f: hlt    
  0x000000010f7e6a10: hlt    
  0x000000010f7e6a11: hlt    
  0x000000010f7e6a12: hlt    
  0x000000010f7e6a13: hlt    
  0x000000010f7e6a14: hlt    
  0x000000010f7e6a15: hlt    
  0x000000010f7e6a16: hlt    
  0x000000010f7e6a17: hlt    
  0x000000010f7e6a18: hlt    
  0x000000010f7e6a19: hlt    
  0x000000010f7e6a1a: hlt    
  0x000000010f7e6a1b: hlt    
  0x000000010f7e6a1c: hlt    
  0x000000010f7e6a1d: hlt    
  0x000000010f7e6a1e: hlt    
  0x000000010f7e6a1f: hlt    
[Stub Code]
  0x000000010f7e6a20: nop                       ;   {no_reloc}
  0x000000010f7e6a21: nop
  0x000000010f7e6a22: nop
  0x000000010f7e6a23: nop
  0x000000010f7e6a24: nop
  0x000000010f7e6a25: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7e6a2f: jmpq   0x000000010f7e6a2f  ;   {runtime_call}
[Exception Handler]
  0x000000010f7e6a34: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f7e6a39: mov    %rsp,-0x28(%rsp)
  0x000000010f7e6a3e: sub    $0x80,%rsp
  0x000000010f7e6a45: mov    %rax,0x78(%rsp)
  0x000000010f7e6a4a: mov    %rcx,0x70(%rsp)
  0x000000010f7e6a4f: mov    %rdx,0x68(%rsp)
  0x000000010f7e6a54: mov    %rbx,0x60(%rsp)
  0x000000010f7e6a59: mov    %rbp,0x50(%rsp)
  0x000000010f7e6a5e: mov    %rsi,0x48(%rsp)
  0x000000010f7e6a63: mov    %rdi,0x40(%rsp)
  0x000000010f7e6a68: mov    %r8,0x38(%rsp)
  0x000000010f7e6a6d: mov    %r9,0x30(%rsp)
  0x000000010f7e6a72: mov    %r10,0x28(%rsp)
  0x000000010f7e6a77: mov    %r11,0x20(%rsp)
  0x000000010f7e6a7c: mov    %r12,0x18(%rsp)
  0x000000010f7e6a81: mov    %r13,0x10(%rsp)
  0x000000010f7e6a86: mov    %r14,0x8(%rsp)
  0x000000010f7e6a8b: mov    %r15,(%rsp)
  0x000000010f7e6a8f: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7e6a99: movabs $0x10f7e6a39,%rsi  ;   {internal_word}
  0x000000010f7e6aa3: mov    %rsp,%rdx
  0x000000010f7e6aa6: and    $0xfffffffffffffff0,%rsp
  0x000000010f7e6aaa: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7e6aaf: hlt    
[Deopt Handler Code]
  0x000000010f7e6ab0: movabs $0x10f7e6ab0,%r10  ;   {section_word}
  0x000000010f7e6aba: push   %r10
  0x000000010f7e6abc: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7e6ac1: hlt    
  0x000000010f7e6ac2: hlt    
  0x000000010f7e6ac3: hlt    
  0x000000010f7e6ac4: hlt    
  0x000000010f7e6ac5: hlt    
  0x000000010f7e6ac6: hlt    
  0x000000010f7e6ac7: hlt    
Decoding compiled method 0x000000010f7e99d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ea6a180} 'indexOf' '(II)I' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  #           [sp+0x40]  (sp of caller)
  0x000000010f7e9b20: mov    0x8(%rsi),%r10d
  0x000000010f7e9b24: shl    $0x3,%r10
  0x000000010f7e9b28: cmp    %r10,%rax
  0x000000010f7e9b2b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7e9b31: data16 xchg %ax,%ax
  0x000000010f7e9b34: nopl   0x0(%rax,%rax,1)
  0x000000010f7e9b3c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7e9b40: mov    %eax,-0x14000(%rsp)
  0x000000010f7e9b47: push   %rbp
  0x000000010f7e9b48: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1546)

  0x000000010f7e9b4c: mov    %rsi,%r10
  0x000000010f7e9b4f: mov    0xc(%rsi),%r8d     ;*getfield value
                                                ; - java.lang.String::indexOf@1 (line 1546)

  0x000000010f7e9b53: mov    0xc(%r12,%r8,8),%ebp  ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ; implicit exception: dispatches to 0x000000010f7e9cc9
  0x000000010f7e9b58: test   %ecx,%ecx
  0x000000010f7e9b5a: jl     0x000000010f7e9c91  ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)

  0x000000010f7e9b60: mov    $0xffffffff,%eax
  0x000000010f7e9b65: cmp    %ebp,%ecx
  0x000000010f7e9b67: jge    0x000000010f7e9c45  ;*if_icmplt
                                                ; - java.lang.String::indexOf@17 (line 1549)

  0x000000010f7e9b6d: cmp    $0x10000,%edx
  0x000000010f7e9b73: jge    0x000000010f7e9cad  ;*if_icmpge
                                                ; - java.lang.String::indexOf@25 (line 1554)

  0x000000010f7e9b79: cmp    %ebp,%ecx
  0x000000010f7e9b7b: jae    0x000000010f7e9c75
  0x000000010f7e9b81: mov    %ebp,%r10d
  0x000000010f7e9b84: dec    %r10d
  0x000000010f7e9b87: cmp    %ebp,%r10d
  0x000000010f7e9b8a: jae    0x000000010f7e9c75
  0x000000010f7e9b90: lea    (%r12,%r8,8),%r9
  0x000000010f7e9b94: mov    %ecx,%r11d
  0x000000010f7e9b97: inc    %r11d              ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)

  0x000000010f7e9b9a: movzwl 0x10(%r9,%rcx,2),%r8d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010f7e9ba0: cmp    %edx,%r8d
  0x000000010f7e9ba3: je     0x000000010f7e9c53  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010f7e9ba9: inc    %ecx               ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x000000010f7e9bab: cmp    %r11d,%ecx
  0x000000010f7e9bae: jl     0x000000010f7e9b9a  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x000000010f7e9bb0: mov    %ebp,%r11d
  0x000000010f7e9bb3: add    $0xfffffff9,%r11d
  0x000000010f7e9bb7: mov    $0x80000000,%r8d
  0x000000010f7e9bbd: cmp    %r11d,%r10d
  0x000000010f7e9bc0: cmovl  %r8d,%r11d
  0x000000010f7e9bc4: cmp    %r11d,%ecx
  0x000000010f7e9bc7: jge    0x000000010f7e9c2d
  0x000000010f7e9bc9: nopl   0x0(%rax)          ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)

  0x000000010f7e9bd0: movzwl 0x10(%r9,%rcx,2),%r10d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010f7e9bd6: cmp    %edx,%r10d
  0x000000010f7e9bd9: je     0x000000010f7e9c53  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010f7e9bdb: movslq %ecx,%r10
  0x000000010f7e9bde: movzwl 0x12(%r9,%r10,2),%ebx  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010f7e9be4: cmp    %edx,%ebx
  0x000000010f7e9be6: je     0x000000010f7e9c51  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010f7e9be8: movzwl 0x14(%r9,%r10,2),%ebx  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010f7e9bee: cmp    %edx,%ebx
  0x000000010f7e9bf0: je     0x000000010f7e9c57  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010f7e9bf2: movzwl 0x16(%r9,%r10,2),%ebx  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010f7e9bf8: cmp    %edx,%ebx
  0x000000010f7e9bfa: je     0x000000010f7e9c5c  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010f7e9bfc: movzwl 0x18(%r9,%r10,2),%ebx  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010f7e9c02: cmp    %edx,%ebx
  0x000000010f7e9c04: je     0x000000010f7e9c61  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010f7e9c06: movzwl 0x1a(%r9,%r10,2),%ebx  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010f7e9c0c: cmp    %edx,%ebx
  0x000000010f7e9c0e: je     0x000000010f7e9c66  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010f7e9c10: movzwl 0x1c(%r9,%r10,2),%ebx  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010f7e9c16: cmp    %edx,%ebx
  0x000000010f7e9c18: je     0x000000010f7e9c6b  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010f7e9c1a: movzwl 0x1e(%r9,%r10,2),%r8d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010f7e9c20: cmp    %edx,%r8d
  0x000000010f7e9c23: je     0x000000010f7e9c70  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010f7e9c25: add    $0x8,%ecx          ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x000000010f7e9c28: cmp    %r11d,%ecx
  0x000000010f7e9c2b: jl     0x000000010f7e9bd0  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x000000010f7e9c2d: cmp    %ebp,%ecx
  0x000000010f7e9c2f: jge    0x000000010f7e9c45
  0x000000010f7e9c31: data16 xchg %ax,%ax       ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)

  0x000000010f7e9c34: movzwl 0x10(%r9,%rcx,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010f7e9c3a: cmp    %edx,%r11d
  0x000000010f7e9c3d: je     0x000000010f7e9c53  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010f7e9c3f: inc    %ecx               ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x000000010f7e9c41: cmp    %ebp,%ecx
  0x000000010f7e9c43: jl     0x000000010f7e9c34  ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)

  0x000000010f7e9c45: add    $0x30,%rsp
  0x000000010f7e9c49: pop    %rbp
  0x000000010f7e9c4a: test   %eax,-0x8d4ec50(%rip)        # 0x0000000106a9b000
                                                ;   {poll_return}
  0x000000010f7e9c50: retq   
  0x000000010f7e9c51: inc    %ecx
  0x000000010f7e9c53: mov    %ecx,%eax
  0x000000010f7e9c55: jmp    0x000000010f7e9c45
  0x000000010f7e9c57: add    $0x2,%ecx
  0x000000010f7e9c5a: jmp    0x000000010f7e9c53
  0x000000010f7e9c5c: add    $0x3,%ecx
  0x000000010f7e9c5f: jmp    0x000000010f7e9c53
  0x000000010f7e9c61: add    $0x4,%ecx
  0x000000010f7e9c64: jmp    0x000000010f7e9c53
  0x000000010f7e9c66: add    $0x5,%ecx
  0x000000010f7e9c69: jmp    0x000000010f7e9c53
  0x000000010f7e9c6b: add    $0x6,%ecx
  0x000000010f7e9c6e: jmp    0x000000010f7e9c53
  0x000000010f7e9c70: add    $0x7,%ecx          ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x000000010f7e9c73: jmp    0x000000010f7e9c53
  0x000000010f7e9c75: mov    $0xffffff86,%esi
  0x000000010f7e9c7a: mov    %edx,(%rsp)
  0x000000010f7e9c7d: mov    %ecx,0x4(%rsp)
  0x000000010f7e9c81: mov    %r8d,0x8(%rsp)
  0x000000010f7e9c86: nop
  0x000000010f7e9c87: callq  0x000000010f7166a0  ; OopMap{[8]=NarrowOop off=364}
                                                ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)
                                                ;   {runtime_call}
  0x000000010f7e9c8c: callq  0x000000010948a904  ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)
                                                ;   {runtime_call}
  0x000000010f7e9c91: mov    $0xffffff65,%esi
  0x000000010f7e9c96: mov    %edx,(%rsp)
  0x000000010f7e9c99: mov    %ecx,0x8(%rsp)
  0x000000010f7e9c9d: mov    %r10,0x10(%rsp)
  0x000000010f7e9ca2: nop
  0x000000010f7e9ca3: callq  0x000000010f7166a0  ; OopMap{[16]=Oop off=392}
                                                ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)
                                                ;   {runtime_call}
  0x000000010f7e9ca8: callq  0x000000010948a904  ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)
                                                ;   {runtime_call}
  0x000000010f7e9cad: mov    $0xffffff65,%esi
  0x000000010f7e9cb2: mov    %ecx,0x4(%rsp)
  0x000000010f7e9cb6: mov    %edx,0x8(%rsp)
  0x000000010f7e9cba: mov    %r10,0x10(%rsp)
  0x000000010f7e9cbf: callq  0x000000010f7166a0  ; OopMap{[16]=Oop off=420}
                                                ;*if_icmpge
                                                ; - java.lang.String::indexOf@25 (line 1554)
                                                ;   {runtime_call}
  0x000000010f7e9cc4: callq  0x000000010948a904  ;*if_icmpge
                                                ; - java.lang.String::indexOf@25 (line 1554)
                                                ;   {runtime_call}
  0x000000010f7e9cc9: mov    $0xfffffff6,%esi
  0x000000010f7e9cce: nop
  0x000000010f7e9ccf: callq  0x000000010f7166a0  ; OopMap{off=436}
                                                ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ;   {runtime_call}
  0x000000010f7e9cd4: callq  0x000000010948a904  ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ;   {runtime_call}
  0x000000010f7e9cd9: hlt    
  0x000000010f7e9cda: hlt    
  0x000000010f7e9cdb: hlt    
  0x000000010f7e9cdc: hlt    
  0x000000010f7e9cdd: hlt    
  0x000000010f7e9cde: hlt    
  0x000000010f7e9cdf: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f7e9ce0: jmpq   0x000000010f73fba0  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010f7e9ce5: callq  0x000000010f7e9cea
  0x000000010f7e9cea: subq   $0x5,(%rsp)
  0x000000010f7e9cef: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7e9cf4: hlt    
  0x000000010f7e9cf5: hlt    
  0x000000010f7e9cf6: hlt    
  0x000000010f7e9cf7: hlt    
Decoding compiled method 0x000000010f7e9290:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ea69df8} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx:rdx   = 'java/lang/String'
  # parm1:    rcx       = int
  #           [sp+0x40]  (sp of caller)
  0x000000010f7e9400: mov    0x8(%rsi),%r10d
  0x000000010f7e9404: shl    $0x3,%r10
  0x000000010f7e9408: cmp    %rax,%r10
  0x000000010f7e940b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7e9411: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7e941c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7e9420: mov    %eax,-0x14000(%rsp)
  0x000000010f7e9427: push   %rbp
  0x000000010f7e9428: sub    $0x30,%rsp
  0x000000010f7e942c: movabs $0x10ec7a6c8,%rax  ;   {metadata(method data for {method} {0x000000010ea69df8} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x000000010f7e9436: mov    0xdc(%rax),%edi
  0x000000010f7e943c: add    $0x8,%edi
  0x000000010f7e943f: mov    %edi,0xdc(%rax)
  0x000000010f7e9445: movabs $0x10ea69df8,%rax  ;   {metadata({method} {0x000000010ea69df8} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x000000010f7e944f: and    $0x1ff8,%edi
  0x000000010f7e9455: cmp    $0x0,%edi
  0x000000010f7e9458: je     0x000000010f7e960d  ;*aload_0
                                                ; - java.lang.String::startsWith@0 (line 1403)

  0x000000010f7e945e: mov    0xc(%rsi),%eax
  0x000000010f7e9461: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::startsWith@1 (line 1403)

  0x000000010f7e9465: mov    0xc(%rdx),%esi     ; implicit exception: dispatches to 0x000000010f7e9624
  0x000000010f7e9468: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::startsWith@9 (line 1405)

  0x000000010f7e946c: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - java.lang.String::startsWith@21 (line 1407)
                                                ; implicit exception: dispatches to 0x000000010f7e9629
  0x000000010f7e946f: cmp    $0x0,%ecx
  0x000000010f7e9472: movabs $0x10ec7a6c8,%rbx  ;   {metadata(method data for {method} {0x000000010ea69df8} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x000000010f7e947c: movabs $0x108,%rdx
  0x000000010f7e9486: jl     0x000000010f7e9496
  0x000000010f7e948c: movabs $0x118,%rdx
  0x000000010f7e9496: mov    (%rbx,%rdx,1),%r8
  0x000000010f7e949a: lea    0x1(%r8),%r8
  0x000000010f7e949e: mov    %r8,(%rbx,%rdx,1)
  0x000000010f7e94a2: jl     0x000000010f7e95da  ;*iflt
                                                ; - java.lang.String::startsWith@25 (line 1409)

  0x000000010f7e94a8: mov    0xc(%rax),%ebx     ;*arraylength
                                                ; - java.lang.String::startsWith@33 (line 1409)
                                                ; implicit exception: dispatches to 0x000000010f7e962e
  0x000000010f7e94ab: sub    %edi,%ebx
  0x000000010f7e94ad: cmp    %ebx,%ecx
  0x000000010f7e94af: movabs $0x10ec7a6c8,%rbx  ;   {metadata(method data for {method} {0x000000010ea69df8} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x000000010f7e94b9: movabs $0x128,%rdx
  0x000000010f7e94c3: jle    0x000000010f7e94d3
  0x000000010f7e94c9: movabs $0x138,%rdx
  0x000000010f7e94d3: mov    (%rbx,%rdx,1),%r8
  0x000000010f7e94d7: lea    0x1(%r8),%r8
  0x000000010f7e94db: mov    %r8,(%rbx,%rdx,1)
  0x000000010f7e94df: jg     0x000000010f7e95da  ;*if_icmple
                                                ; - java.lang.String::startsWith@37 (line 1409)

  0x000000010f7e94e5: mov    $0x0,%ebx
  0x000000010f7e94ea: jmpq   0x000000010f7e959a  ;*iinc
                                                ; - java.lang.String::startsWith@42 (line 1412)

  0x000000010f7e94ef: nop
  0x000000010f7e94f0: mov    %rcx,%rdx
  0x000000010f7e94f3: inc    %edx
  0x000000010f7e94f5: movslq %ecx,%r8
  0x000000010f7e94f8: cmp    0xc(%rax),%ecx
  0x000000010f7e94fb: jae    0x000000010f7e9633
  0x000000010f7e9501: movzwl 0x10(%rax,%r8,2),%ecx  ;*caload
                                                ; - java.lang.String::startsWith@56 (line 1413)

  0x000000010f7e9507: mov    %rbx,%r8
  0x000000010f7e950a: inc    %r8d
  0x000000010f7e950d: movslq %ebx,%r9
  0x000000010f7e9510: cmp    0xc(%rsi),%ebx
  0x000000010f7e9513: jae    0x000000010f7e963c
  0x000000010f7e9519: movzwl 0x10(%rsi,%r9,2),%ebx  ;*caload
                                                ; - java.lang.String::startsWith@64 (line 1413)

  0x000000010f7e951f: movabs $0x10ec7a6c8,%r9   ;   {metadata(method data for {method} {0x000000010ea69df8} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x000000010f7e9529: mov    0xe0(%r9),%r11d
  0x000000010f7e9530: add    $0x8,%r11d
  0x000000010f7e9534: mov    %r11d,0xe0(%r9)
  0x000000010f7e953b: movabs $0x10ea69df8,%r9   ;   {metadata({method} {0x000000010ea69df8} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x000000010f7e9545: and    $0xfff8,%r11d
  0x000000010f7e954c: cmp    $0x0,%r11d
  0x000000010f7e9550: je     0x000000010f7e9645  ; OopMap{rsi=Oop rax=Oop off=342}
                                                ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)

  0x000000010f7e9556: test   %eax,-0x8d4e45c(%rip)        # 0x0000000106a9b100
                                                ;   {poll}
  0x000000010f7e955c: cmp    %ebx,%ecx
  0x000000010f7e955e: movabs $0x10ec7a6c8,%rbx  ;   {metadata(method data for {method} {0x000000010ea69df8} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x000000010f7e9568: movabs $0x168,%rcx
  0x000000010f7e9572: je     0x000000010f7e9582
  0x000000010f7e9578: movabs $0x178,%rcx
  0x000000010f7e9582: mov    (%rbx,%rcx,1),%r9
  0x000000010f7e9586: lea    0x1(%r9),%r9
  0x000000010f7e958a: mov    %r9,(%rbx,%rcx,1)
  0x000000010f7e958e: jne    0x000000010f7e95eb  ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)

  0x000000010f7e9594: mov    %r8,%rbx
  0x000000010f7e9597: mov    %rdx,%rcx          ;*iinc
                                                ; - java.lang.String::startsWith@42 (line 1412)

  0x000000010f7e959a: dec    %edi
  0x000000010f7e959c: cmp    $0x0,%edi
  0x000000010f7e959f: movabs $0x10ec7a6c8,%rdx  ;   {metadata(method data for {method} {0x000000010ea69df8} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x000000010f7e95a9: movabs $0x148,%r8
  0x000000010f7e95b3: jl     0x000000010f7e95c3
  0x000000010f7e95b9: movabs $0x158,%r8
  0x000000010f7e95c3: mov    (%rdx,%r8,1),%r9
  0x000000010f7e95c7: lea    0x1(%r9),%r9
  0x000000010f7e95cb: mov    %r9,(%rdx,%r8,1)
  0x000000010f7e95cf: jl     0x000000010f7e95fc
  0x000000010f7e95d5: jmpq   0x000000010f7e94f0  ;*iflt
                                                ; - java.lang.String::startsWith@47 (line 1412)

  0x000000010f7e95da: mov    $0x0,%eax
  0x000000010f7e95df: add    $0x30,%rsp
  0x000000010f7e95e3: pop    %rbp
  0x000000010f7e95e4: test   %eax,-0x8d4e4ea(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7e95ea: retq                      ;*ireturn
                                                ; - java.lang.String::startsWith@41 (line 1410)

  0x000000010f7e95eb: mov    $0x0,%eax
  0x000000010f7e95f0: add    $0x30,%rsp
  0x000000010f7e95f4: pop    %rbp
  0x000000010f7e95f5: test   %eax,-0x8d4e4fb(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7e95fb: retq                      ;*ireturn
                                                ; - java.lang.String::startsWith@69 (line 1414)

  0x000000010f7e95fc: mov    $0x1,%eax
  0x000000010f7e9601: add    $0x30,%rsp
  0x000000010f7e9605: pop    %rbp
  0x000000010f7e9606: test   %eax,-0x8d4e50c(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7e960c: retq   
  0x000000010f7e960d: mov    %rax,0x8(%rsp)
  0x000000010f7e9612: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7e961a: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop rdx=Oop off=543}
                                                ;*synchronization entry
                                                ; - java.lang.String::startsWith@-1 (line 1403)
                                                ;   {runtime_call}
  0x000000010f7e961f: jmpq   0x000000010f7e945e
  0x000000010f7e9624: callq  0x000000010f7cd0c0  ; OopMap{rax=Oop off=553}
                                                ;*getfield value
                                                ; - java.lang.String::startsWith@9 (line 1405)
                                                ;   {runtime_call}
  0x000000010f7e9629: callq  0x000000010f7cd0c0  ; OopMap{rax=Oop rsi=Oop off=558}
                                                ;*arraylength
                                                ; - java.lang.String::startsWith@21 (line 1407)
                                                ;   {runtime_call}
  0x000000010f7e962e: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop rax=Oop off=563}
                                                ;*arraylength
                                                ; - java.lang.String::startsWith@33 (line 1409)
                                                ;   {runtime_call}
  0x000000010f7e9633: mov    %rcx,(%rsp)
  0x000000010f7e9637: callq  0x000000010f7cca00  ; OopMap{rsi=Oop rax=Oop off=572}
                                                ;*caload
                                                ; - java.lang.String::startsWith@56 (line 1413)
                                                ;   {runtime_call}
  0x000000010f7e963c: mov    %rbx,(%rsp)
  0x000000010f7e9640: callq  0x000000010f7cca00  ; OopMap{rsi=Oop rax=Oop off=581}
                                                ;*caload
                                                ; - java.lang.String::startsWith@64 (line 1413)
                                                ;   {runtime_call}
  0x000000010f7e9645: mov    %r9,0x8(%rsp)
  0x000000010f7e964a: movq   $0x41,(%rsp)
  0x000000010f7e9652: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop rax=Oop off=599}
                                                ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)
                                                ;   {runtime_call}
  0x000000010f7e9657: jmpq   0x000000010f7e9556
  0x000000010f7e965c: nop
  0x000000010f7e965d: nop
  0x000000010f7e965e: mov    0x2a8(%r15),%rax
  0x000000010f7e9665: movabs $0x0,%r10
  0x000000010f7e966f: mov    %r10,0x2a8(%r15)
  0x000000010f7e9676: movabs $0x0,%r10
  0x000000010f7e9680: mov    %r10,0x2b0(%r15)
  0x000000010f7e9687: add    $0x30,%rsp
  0x000000010f7e968b: pop    %rbp
  0x000000010f7e968c: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7e9691: hlt    
  0x000000010f7e9692: hlt    
  0x000000010f7e9693: hlt    
  0x000000010f7e9694: hlt    
  0x000000010f7e9695: hlt    
  0x000000010f7e9696: hlt    
  0x000000010f7e9697: hlt    
  0x000000010f7e9698: hlt    
  0x000000010f7e9699: hlt    
  0x000000010f7e969a: hlt    
  0x000000010f7e969b: hlt    
  0x000000010f7e969c: hlt    
  0x000000010f7e969d: hlt    
  0x000000010f7e969e: hlt    
  0x000000010f7e969f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f7e96a0: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f7e96a5: mov    %rsp,-0x28(%rsp)
  0x000000010f7e96aa: sub    $0x80,%rsp
  0x000000010f7e96b1: mov    %rax,0x78(%rsp)
  0x000000010f7e96b6: mov    %rcx,0x70(%rsp)
  0x000000010f7e96bb: mov    %rdx,0x68(%rsp)
  0x000000010f7e96c0: mov    %rbx,0x60(%rsp)
  0x000000010f7e96c5: mov    %rbp,0x50(%rsp)
  0x000000010f7e96ca: mov    %rsi,0x48(%rsp)
  0x000000010f7e96cf: mov    %rdi,0x40(%rsp)
  0x000000010f7e96d4: mov    %r8,0x38(%rsp)
  0x000000010f7e96d9: mov    %r9,0x30(%rsp)
  0x000000010f7e96de: mov    %r10,0x28(%rsp)
  0x000000010f7e96e3: mov    %r11,0x20(%rsp)
  0x000000010f7e96e8: mov    %r12,0x18(%rsp)
  0x000000010f7e96ed: mov    %r13,0x10(%rsp)
  0x000000010f7e96f2: mov    %r14,0x8(%rsp)
  0x000000010f7e96f7: mov    %r15,(%rsp)
  0x000000010f7e96fb: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7e9705: movabs $0x10f7e96a5,%rsi  ;   {internal_word}
  0x000000010f7e970f: mov    %rsp,%rdx
  0x000000010f7e9712: and    $0xfffffffffffffff0,%rsp
  0x000000010f7e9716: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7e971b: hlt    
[Deopt Handler Code]
  0x000000010f7e971c: movabs $0x10f7e971c,%r10  ;   {section_word}
  0x000000010f7e9726: push   %r10
  0x000000010f7e9728: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7e972d: hlt    
  0x000000010f7e972e: hlt    
  0x000000010f7e972f: hlt    
Decoding compiled method 0x000000010f7e8e50:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ea69e90} 'startsWith' '(Ljava/lang/String;)Z' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx:rdx   = 'java/lang/String'
  #           [sp+0x40]  (sp of caller)
  0x000000010f7e8fc0: mov    0x8(%rsi),%r10d
  0x000000010f7e8fc4: shl    $0x3,%r10
  0x000000010f7e8fc8: cmp    %rax,%r10
  0x000000010f7e8fcb: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7e8fd1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7e8fdc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7e8fe0: mov    %eax,-0x14000(%rsp)
  0x000000010f7e8fe7: push   %rbp
  0x000000010f7e8fe8: sub    $0x30,%rsp
  0x000000010f7e8fec: movabs $0x10ecb8090,%rcx  ;   {metadata(method data for {method} {0x000000010ea69e90} 'startsWith' '(Ljava/lang/String;)Z' in 'java/lang/String')}
  0x000000010f7e8ff6: mov    0xdc(%rcx),%edi
  0x000000010f7e8ffc: add    $0x8,%edi
  0x000000010f7e8fff: mov    %edi,0xdc(%rcx)
  0x000000010f7e9005: movabs $0x10ea69e90,%rcx  ;   {metadata({method} {0x000000010ea69e90} 'startsWith' '(Ljava/lang/String;)Z' in 'java/lang/String')}
  0x000000010f7e900f: and    $0x1ff8,%edi
  0x000000010f7e9015: cmp    $0x0,%edi
  0x000000010f7e9018: je     0x000000010f7e90cb  ;*aload_0
                                                ; - java.lang.String::startsWith@0 (line 1434)

  0x000000010f7e901e: mov    %rsi,%rcx
  0x000000010f7e9021: movabs $0x10ecb8090,%rdi  ;   {metadata(method data for {method} {0x000000010ea69e90} 'startsWith' '(Ljava/lang/String;)Z' in 'java/lang/String')}
  0x000000010f7e902b: mov    0x8(%rcx),%ecx
  0x000000010f7e902e: shl    $0x3,%rcx
  0x000000010f7e9032: cmp    0x110(%rdi),%rcx
  0x000000010f7e9039: jne    0x000000010f7e9048
  0x000000010f7e903b: addq   $0x1,0x118(%rdi)
  0x000000010f7e9043: jmpq   0x000000010f7e90ae
  0x000000010f7e9048: cmp    0x120(%rdi),%rcx
  0x000000010f7e904f: jne    0x000000010f7e905e
  0x000000010f7e9051: addq   $0x1,0x128(%rdi)
  0x000000010f7e9059: jmpq   0x000000010f7e90ae
  0x000000010f7e905e: cmpq   $0x0,0x110(%rdi)
  0x000000010f7e9069: jne    0x000000010f7e9082
  0x000000010f7e906b: mov    %rcx,0x110(%rdi)
  0x000000010f7e9072: movq   $0x1,0x118(%rdi)
  0x000000010f7e907d: jmpq   0x000000010f7e90ae
  0x000000010f7e9082: cmpq   $0x0,0x120(%rdi)
  0x000000010f7e908d: jne    0x000000010f7e90a6
  0x000000010f7e908f: mov    %rcx,0x120(%rdi)
  0x000000010f7e9096: movq   $0x1,0x128(%rdi)
  0x000000010f7e90a1: jmpq   0x000000010f7e90ae
  0x000000010f7e90a6: addq   $0x1,0x108(%rdi)
  0x000000010f7e90ae: mov    $0x0,%ecx          ;*invokevirtual startsWith
                                                ; - java.lang.String::startsWith@3 (line 1434)

  0x000000010f7e90b3: nop
  0x000000010f7e90b4: nop
  0x000000010f7e90b5: nop
  0x000000010f7e90b6: nop
  0x000000010f7e90b7: callq  0x000000010f7170a0  ; OopMap{off=252}
                                                ;*invokevirtual startsWith
                                                ; - java.lang.String::startsWith@3 (line 1434)
                                                ;   {optimized virtual_call}
  0x000000010f7e90bc: and    $0x1,%eax
  0x000000010f7e90bf: add    $0x30,%rsp
  0x000000010f7e90c3: pop    %rbp
  0x000000010f7e90c4: test   %eax,-0x8d4dfca(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7e90ca: retq   
  0x000000010f7e90cb: mov    %rcx,0x8(%rsp)
  0x000000010f7e90d0: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7e90d8: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop rdx=Oop off=285}
                                                ;*synchronization entry
                                                ; - java.lang.String::startsWith@-1 (line 1434)
                                                ;   {runtime_call}
  0x000000010f7e90dd: jmpq   0x000000010f7e901e
  0x000000010f7e90e2: nop
  0x000000010f7e90e3: nop
  0x000000010f7e90e4: mov    0x2a8(%r15),%rax
  0x000000010f7e90eb: movabs $0x0,%r10
  0x000000010f7e90f5: mov    %r10,0x2a8(%r15)
  0x000000010f7e90fc: movabs $0x0,%r10
  0x000000010f7e9106: mov    %r10,0x2b0(%r15)
  0x000000010f7e910d: add    $0x30,%rsp
  0x000000010f7e9111: pop    %rbp
  0x000000010f7e9112: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7e9117: hlt    
  0x000000010f7e9118: hlt    
  0x000000010f7e9119: hlt    
  0x000000010f7e911a: hlt    
  0x000000010f7e911b: hlt    
  0x000000010f7e911c: hlt    
  0x000000010f7e911d: hlt    
  0x000000010f7e911e: hlt    
  0x000000010f7e911f: hlt    
[Stub Code]
  0x000000010f7e9120: nop                       ;   {no_reloc}
  0x000000010f7e9121: nop
  0x000000010f7e9122: nop
  0x000000010f7e9123: nop
  0x000000010f7e9124: nop
  0x000000010f7e9125: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7e912f: jmpq   0x000000010f7e912f  ;   {runtime_call}
[Exception Handler]
  0x000000010f7e9134: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f7e9139: mov    %rsp,-0x28(%rsp)
  0x000000010f7e913e: sub    $0x80,%rsp
  0x000000010f7e9145: mov    %rax,0x78(%rsp)
  0x000000010f7e914a: mov    %rcx,0x70(%rsp)
  0x000000010f7e914f: mov    %rdx,0x68(%rsp)
  0x000000010f7e9154: mov    %rbx,0x60(%rsp)
  0x000000010f7e9159: mov    %rbp,0x50(%rsp)
  0x000000010f7e915e: mov    %rsi,0x48(%rsp)
  0x000000010f7e9163: mov    %rdi,0x40(%rsp)
  0x000000010f7e9168: mov    %r8,0x38(%rsp)
  0x000000010f7e916d: mov    %r9,0x30(%rsp)
  0x000000010f7e9172: mov    %r10,0x28(%rsp)
  0x000000010f7e9177: mov    %r11,0x20(%rsp)
  0x000000010f7e917c: mov    %r12,0x18(%rsp)
  0x000000010f7e9181: mov    %r13,0x10(%rsp)
  0x000000010f7e9186: mov    %r14,0x8(%rsp)
  0x000000010f7e918b: mov    %r15,(%rsp)
  0x000000010f7e918f: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7e9199: movabs $0x10f7e9139,%rsi  ;   {internal_word}
  0x000000010f7e91a3: mov    %rsp,%rdx
  0x000000010f7e91a6: and    $0xfffffffffffffff0,%rsp
  0x000000010f7e91aa: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7e91af: hlt    
[Deopt Handler Code]
  0x000000010f7e91b0: movabs $0x10f7e91b0,%r10  ;   {section_word}
  0x000000010f7e91ba: push   %r10
  0x000000010f7e91bc: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7e91c1: hlt    
  0x000000010f7e91c2: hlt    
  0x000000010f7e91c3: hlt    
  0x000000010f7e91c4: hlt    
  0x000000010f7e91c5: hlt    
  0x000000010f7e91c6: hlt    
  0x000000010f7e91c7: hlt    
Decoding compiled method 0x000000010f7e8950:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ea69f30} 'endsWith' '(Ljava/lang/String;)Z' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx:rdx   = 'java/lang/String'
  #           [sp+0x40]  (sp of caller)
  0x000000010f7e8ac0: mov    0x8(%rsi),%r10d
  0x000000010f7e8ac4: shl    $0x3,%r10
  0x000000010f7e8ac8: cmp    %rax,%r10
  0x000000010f7e8acb: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7e8ad1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7e8adc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7e8ae0: mov    %eax,-0x14000(%rsp)
  0x000000010f7e8ae7: push   %rbp
  0x000000010f7e8ae8: sub    $0x30,%rsp
  0x000000010f7e8aec: movabs $0x10ec8c390,%rcx  ;   {metadata(method data for {method} {0x000000010ea69f30} 'endsWith' '(Ljava/lang/String;)Z' in 'java/lang/String')}
  0x000000010f7e8af6: mov    0xdc(%rcx),%edi
  0x000000010f7e8afc: add    $0x8,%edi
  0x000000010f7e8aff: mov    %edi,0xdc(%rcx)
  0x000000010f7e8b05: movabs $0x10ea69f30,%rcx  ;   {metadata({method} {0x000000010ea69f30} 'endsWith' '(Ljava/lang/String;)Z' in 'java/lang/String')}
  0x000000010f7e8b0f: and    $0x1ff8,%edi
  0x000000010f7e8b15: cmp    $0x0,%edi
  0x000000010f7e8b18: je     0x000000010f7e8bdb  ;*aload_0
                                                ; - java.lang.String::endsWith@0 (line 1449)

  0x000000010f7e8b1e: mov    0xc(%rsi),%ecx
  0x000000010f7e8b21: shl    $0x3,%rcx          ;*getfield value
                                                ; - java.lang.String::endsWith@3 (line 1449)

  0x000000010f7e8b25: mov    0xc(%rcx),%ecx     ;*arraylength
                                                ; - java.lang.String::endsWith@6 (line 1449)
                                                ; implicit exception: dispatches to 0x000000010f7e8bf2
  0x000000010f7e8b28: mov    0xc(%rdx),%edi     ; implicit exception: dispatches to 0x000000010f7e8bf7
  0x000000010f7e8b2b: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.String::endsWith@8 (line 1449)

  0x000000010f7e8b2f: mov    0xc(%rdi),%edi     ;*arraylength
                                                ; - java.lang.String::endsWith@11 (line 1449)
                                                ; implicit exception: dispatches to 0x000000010f7e8bfc
  0x000000010f7e8b32: mov    %rsi,%rbx
  0x000000010f7e8b35: movabs $0x10ec8c390,%rax  ;   {metadata(method data for {method} {0x000000010ea69f30} 'endsWith' '(Ljava/lang/String;)Z' in 'java/lang/String')}
  0x000000010f7e8b3f: mov    0x8(%rbx),%ebx
  0x000000010f7e8b42: shl    $0x3,%rbx
  0x000000010f7e8b46: cmp    0x110(%rax),%rbx
  0x000000010f7e8b4d: jne    0x000000010f7e8b5c
  0x000000010f7e8b4f: addq   $0x1,0x118(%rax)
  0x000000010f7e8b57: jmpq   0x000000010f7e8bc2
  0x000000010f7e8b5c: cmp    0x120(%rax),%rbx
  0x000000010f7e8b63: jne    0x000000010f7e8b72
  0x000000010f7e8b65: addq   $0x1,0x128(%rax)
  0x000000010f7e8b6d: jmpq   0x000000010f7e8bc2
  0x000000010f7e8b72: cmpq   $0x0,0x110(%rax)
  0x000000010f7e8b7d: jne    0x000000010f7e8b96
  0x000000010f7e8b7f: mov    %rbx,0x110(%rax)
  0x000000010f7e8b86: movq   $0x1,0x118(%rax)
  0x000000010f7e8b91: jmpq   0x000000010f7e8bc2
  0x000000010f7e8b96: cmpq   $0x0,0x120(%rax)
  0x000000010f7e8ba1: jne    0x000000010f7e8bba
  0x000000010f7e8ba3: mov    %rbx,0x120(%rax)
  0x000000010f7e8baa: movq   $0x1,0x128(%rax)
  0x000000010f7e8bb5: jmpq   0x000000010f7e8bc2
  0x000000010f7e8bba: addq   $0x1,0x108(%rax)
  0x000000010f7e8bc2: sub    %edi,%ecx
  0x000000010f7e8bc4: nop
  0x000000010f7e8bc5: nop
  0x000000010f7e8bc6: nop
  0x000000010f7e8bc7: callq  0x000000010f7170a0  ; OopMap{off=268}
                                                ;*invokevirtual startsWith
                                                ; - java.lang.String::endsWith@13 (line 1449)
                                                ;   {optimized virtual_call}
  0x000000010f7e8bcc: and    $0x1,%eax
  0x000000010f7e8bcf: add    $0x30,%rsp
  0x000000010f7e8bd3: pop    %rbp
  0x000000010f7e8bd4: test   %eax,-0x8d4dada(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7e8bda: retq   
  0x000000010f7e8bdb: mov    %rcx,0x8(%rsp)
  0x000000010f7e8be0: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7e8be8: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop rdx=Oop off=301}
                                                ;*synchronization entry
                                                ; - java.lang.String::endsWith@-1 (line 1449)
                                                ;   {runtime_call}
  0x000000010f7e8bed: jmpq   0x000000010f7e8b1e
  0x000000010f7e8bf2: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop rdx=Oop off=311}
                                                ;*arraylength
                                                ; - java.lang.String::endsWith@6 (line 1449)
                                                ;   {runtime_call}
  0x000000010f7e8bf7: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop rdx=Oop off=316}
                                                ;*getfield value
                                                ; - java.lang.String::endsWith@8 (line 1449)
                                                ;   {runtime_call}
  0x000000010f7e8bfc: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop rdx=Oop off=321}
                                                ;*arraylength
                                                ; - java.lang.String::endsWith@11 (line 1449)
                                                ;   {runtime_call}
  0x000000010f7e8c01: nop
  0x000000010f7e8c02: nop
  0x000000010f7e8c03: mov    0x2a8(%r15),%rax
  0x000000010f7e8c0a: movabs $0x0,%r10
  0x000000010f7e8c14: mov    %r10,0x2a8(%r15)
  0x000000010f7e8c1b: movabs $0x0,%r10
  0x000000010f7e8c25: mov    %r10,0x2b0(%r15)
  0x000000010f7e8c2c: add    $0x30,%rsp
  0x000000010f7e8c30: pop    %rbp
  0x000000010f7e8c31: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7e8c36: hlt    
  0x000000010f7e8c37: hlt    
  0x000000010f7e8c38: hlt    
  0x000000010f7e8c39: hlt    
  0x000000010f7e8c3a: hlt    
  0x000000010f7e8c3b: hlt    
  0x000000010f7e8c3c: hlt    
  0x000000010f7e8c3d: hlt    
  0x000000010f7e8c3e: hlt    
  0x000000010f7e8c3f: hlt    
[Stub Code]
  0x000000010f7e8c40: nop                       ;   {no_reloc}
  0x000000010f7e8c41: nop
  0x000000010f7e8c42: nop
  0x000000010f7e8c43: nop
  0x000000010f7e8c44: nop
  0x000000010f7e8c45: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7e8c4f: jmpq   0x000000010f7e8c4f  ;   {runtime_call}
[Exception Handler]
  0x000000010f7e8c54: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f7e8c59: mov    %rsp,-0x28(%rsp)
  0x000000010f7e8c5e: sub    $0x80,%rsp
  0x000000010f7e8c65: mov    %rax,0x78(%rsp)
  0x000000010f7e8c6a: mov    %rcx,0x70(%rsp)
  0x000000010f7e8c6f: mov    %rdx,0x68(%rsp)
  0x000000010f7e8c74: mov    %rbx,0x60(%rsp)
  0x000000010f7e8c79: mov    %rbp,0x50(%rsp)
  0x000000010f7e8c7e: mov    %rsi,0x48(%rsp)
  0x000000010f7e8c83: mov    %rdi,0x40(%rsp)
  0x000000010f7e8c88: mov    %r8,0x38(%rsp)
  0x000000010f7e8c8d: mov    %r9,0x30(%rsp)
  0x000000010f7e8c92: mov    %r10,0x28(%rsp)
  0x000000010f7e8c97: mov    %r11,0x20(%rsp)
  0x000000010f7e8c9c: mov    %r12,0x18(%rsp)
  0x000000010f7e8ca1: mov    %r13,0x10(%rsp)
  0x000000010f7e8ca6: mov    %r14,0x8(%rsp)
  0x000000010f7e8cab: mov    %r15,(%rsp)
  0x000000010f7e8caf: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7e8cb9: movabs $0x10f7e8c59,%rsi  ;   {internal_word}
  0x000000010f7e8cc3: mov    %rsp,%rdx
  0x000000010f7e8cc6: and    $0xfffffffffffffff0,%rsp
  0x000000010f7e8cca: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7e8ccf: hlt    
[Deopt Handler Code]
  0x000000010f7e8cd0: movabs $0x10f7e8cd0,%r10  ;   {section_word}
  0x000000010f7e8cda: push   %r10
  0x000000010f7e8cdc: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7e8ce1: hlt    
  0x000000010f7e8ce2: hlt    
  0x000000010f7e8ce3: hlt    
  0x000000010f7e8ce4: hlt    
  0x000000010f7e8ce5: hlt    
  0x000000010f7e8ce6: hlt    
  0x000000010f7e8ce7: hlt    
Decoding compiled method 0x000000010f7e8650:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010eb36338} 'size' '()I' in 'java/util/ArrayList'
  #           [sp+0x40]  (sp of caller)
  0x000000010f7e87a0: mov    0x8(%rsi),%r10d
  0x000000010f7e87a4: shl    $0x3,%r10
  0x000000010f7e87a8: cmp    %rax,%r10
  0x000000010f7e87ab: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7e87b1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7e87bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7e87c0: mov    %eax,-0x14000(%rsp)
  0x000000010f7e87c7: push   %rbp
  0x000000010f7e87c8: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.util.ArrayList::size@0 (line 282)

  0x000000010f7e87cc: mov    0x10(%rsi),%eax    ;*getfield size
                                                ; - java.util.ArrayList::size@1 (line 282)

  0x000000010f7e87cf: add    $0x30,%rsp
  0x000000010f7e87d3: pop    %rbp
  0x000000010f7e87d4: test   %eax,-0x8d4d6da(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7e87da: retq   
  0x000000010f7e87db: nop
  0x000000010f7e87dc: nop
  0x000000010f7e87dd: mov    0x2a8(%r15),%rax
  0x000000010f7e87e4: movabs $0x0,%r10
  0x000000010f7e87ee: mov    %r10,0x2a8(%r15)
  0x000000010f7e87f5: movabs $0x0,%r10
  0x000000010f7e87ff: mov    %r10,0x2b0(%r15)
  0x000000010f7e8806: add    $0x30,%rsp
  0x000000010f7e880a: pop    %rbp
  0x000000010f7e880b: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7e8810: hlt    
  0x000000010f7e8811: hlt    
  0x000000010f7e8812: hlt    
  0x000000010f7e8813: hlt    
  0x000000010f7e8814: hlt    
  0x000000010f7e8815: hlt    
  0x000000010f7e8816: hlt    
  0x000000010f7e8817: hlt    
  0x000000010f7e8818: hlt    
  0x000000010f7e8819: hlt    
  0x000000010f7e881a: hlt    
  0x000000010f7e881b: hlt    
  0x000000010f7e881c: hlt    
  0x000000010f7e881d: hlt    
  0x000000010f7e881e: hlt    
  0x000000010f7e881f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f7e8820: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f7e8825: mov    %rsp,-0x28(%rsp)
  0x000000010f7e882a: sub    $0x80,%rsp
  0x000000010f7e8831: mov    %rax,0x78(%rsp)
  0x000000010f7e8836: mov    %rcx,0x70(%rsp)
  0x000000010f7e883b: mov    %rdx,0x68(%rsp)
  0x000000010f7e8840: mov    %rbx,0x60(%rsp)
  0x000000010f7e8845: mov    %rbp,0x50(%rsp)
  0x000000010f7e884a: mov    %rsi,0x48(%rsp)
  0x000000010f7e884f: mov    %rdi,0x40(%rsp)
  0x000000010f7e8854: mov    %r8,0x38(%rsp)
  0x000000010f7e8859: mov    %r9,0x30(%rsp)
  0x000000010f7e885e: mov    %r10,0x28(%rsp)
  0x000000010f7e8863: mov    %r11,0x20(%rsp)
  0x000000010f7e8868: mov    %r12,0x18(%rsp)
  0x000000010f7e886d: mov    %r13,0x10(%rsp)
  0x000000010f7e8872: mov    %r14,0x8(%rsp)
  0x000000010f7e8877: mov    %r15,(%rsp)
  0x000000010f7e887b: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7e8885: movabs $0x10f7e8825,%rsi  ;   {internal_word}
  0x000000010f7e888f: mov    %rsp,%rdx
  0x000000010f7e8892: and    $0xfffffffffffffff0,%rsp
  0x000000010f7e8896: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7e889b: hlt    
[Deopt Handler Code]
  0x000000010f7e889c: movabs $0x10f7e889c,%r10  ;   {section_word}
  0x000000010f7e88a6: push   %r10
  0x000000010f7e88a8: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7e88ad: hlt    
  0x000000010f7e88ae: hlt    
  0x000000010f7e88af: hlt    
Decoding compiled method 0x000000010f7e81d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010eb299d8} 'size' '()I' in 'java/util/Vector'
  #           [sp+0x50]  (sp of caller)
  0x000000010f7e8320: mov    0x8(%rsi),%r10d
  0x000000010f7e8324: shl    $0x3,%r10
  0x000000010f7e8328: cmp    %rax,%r10
  0x000000010f7e832b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7e8331: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7e833c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7e8340: mov    %eax,-0x14000(%rsp)
  0x000000010f7e8347: push   %rbp
  0x000000010f7e8348: sub    $0x40,%rsp
  0x000000010f7e834c: lea    0x20(%rsp),%rdi
  0x000000010f7e8351: mov    %rsi,0x8(%rdi)
  0x000000010f7e8355: mov    (%rsi),%rax
  0x000000010f7e8358: mov    %rax,%rbx
  0x000000010f7e835b: and    $0x7,%rbx
  0x000000010f7e835f: cmp    $0x5,%rbx
  0x000000010f7e8363: jne    0x000000010f7e83ea
  0x000000010f7e8369: mov    0x8(%rsi),%ebx
  0x000000010f7e836c: shl    $0x3,%rbx
  0x000000010f7e8370: mov    0xa8(%rbx),%rbx
  0x000000010f7e8377: or     %r15,%rbx
  0x000000010f7e837a: xor    %rax,%rbx
  0x000000010f7e837d: and    $0xffffffffffffff87,%rbx
  0x000000010f7e8381: je     0x000000010f7e8412
  0x000000010f7e8387: test   $0x7,%rbx
  0x000000010f7e838e: jne    0x000000010f7e83d7
  0x000000010f7e8390: test   $0x300,%rbx
  0x000000010f7e8397: jne    0x000000010f7e83b6
  0x000000010f7e8399: and    $0x37f,%rax
  0x000000010f7e83a0: mov    %rax,%rbx
  0x000000010f7e83a3: or     %r15,%rbx
  0x000000010f7e83a6: lock cmpxchg %rbx,(%rsi)
  0x000000010f7e83ab: jne    0x000000010f7e8455
  0x000000010f7e83b1: jmpq   0x000000010f7e8412
  0x000000010f7e83b6: mov    0x8(%rsi),%ebx
  0x000000010f7e83b9: shl    $0x3,%rbx
  0x000000010f7e83bd: mov    0xa8(%rbx),%rbx
  0x000000010f7e83c4: or     %r15,%rbx
  0x000000010f7e83c7: lock cmpxchg %rbx,(%rsi)
  0x000000010f7e83cc: jne    0x000000010f7e8455
  0x000000010f7e83d2: jmpq   0x000000010f7e8412
  0x000000010f7e83d7: mov    0x8(%rsi),%ebx
  0x000000010f7e83da: shl    $0x3,%rbx
  0x000000010f7e83de: mov    0xa8(%rbx),%rbx
  0x000000010f7e83e5: lock cmpxchg %rbx,(%rsi)
  0x000000010f7e83ea: mov    (%rsi),%rax
  0x000000010f7e83ed: or     $0x1,%rax
  0x000000010f7e83f1: mov    %rax,(%rdi)
  0x000000010f7e83f4: lock cmpxchg %rdi,(%rsi)
  0x000000010f7e83f9: je     0x000000010f7e8412
  0x000000010f7e83ff: sub    %rsp,%rax
  0x000000010f7e8402: and    $0xfffffffffffff007,%rax
  0x000000010f7e8409: mov    %rax,(%rdi)
  0x000000010f7e840c: jne    0x000000010f7e8455  ;*aload_0
                                                ; - java.util.Vector::size@0 (line 318)

  0x000000010f7e8412: mov    0x10(%rsi),%esi    ;*getfield elementCount
                                                ; - java.util.Vector::size@1 (line 318)

  0x000000010f7e8415: lea    0x20(%rsp),%rax
  0x000000010f7e841a: mov    0x8(%rax),%rbx
  0x000000010f7e841e: mov    (%rbx),%rdi
  0x000000010f7e8421: and    $0x7,%rdi
  0x000000010f7e8425: cmp    $0x5,%rdi
  0x000000010f7e8429: je     0x000000010f7e8446
  0x000000010f7e842f: mov    (%rax),%rdi
  0x000000010f7e8432: test   %rdi,%rdi
  0x000000010f7e8435: je     0x000000010f7e8446
  0x000000010f7e843b: lock cmpxchg %rdi,(%rbx)
  0x000000010f7e8440: jne    0x000000010f7e8465  ;*ireturn
                                                ; - java.util.Vector::size@4 (line 318)

  0x000000010f7e8446: mov    %rsi,%rax
  0x000000010f7e8449: add    $0x40,%rsp
  0x000000010f7e844d: pop    %rbp
  0x000000010f7e844e: test   %eax,-0x8d4d354(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7e8454: retq   
  0x000000010f7e8455: mov    %rsi,0x8(%rsp)
  0x000000010f7e845a: mov    %rdi,(%rsp)
  0x000000010f7e845e: callq  0x000000010f7cfc60  ; OopMap{rsi=Oop [40]=Oop off=323}
                                                ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 318)
                                                ;   {runtime_call}
  0x000000010f7e8463: jmp    0x000000010f7e8412
  0x000000010f7e8465: lea    0x20(%rsp),%rax
  0x000000010f7e846a: mov    %rax,(%rsp)
  0x000000010f7e846e: callq  0x000000010f7d00a0  ;   {runtime_call}
  0x000000010f7e8473: jmp    0x000000010f7e8446
  0x000000010f7e8475: nop
  0x000000010f7e8476: nop
  0x000000010f7e8477: mov    0x2a8(%r15),%rax
  0x000000010f7e847e: movabs $0x0,%r10
  0x000000010f7e8488: mov    %r10,0x2a8(%r15)
  0x000000010f7e848f: movabs $0x0,%r10
  0x000000010f7e8499: mov    %r10,0x2b0(%r15)
  0x000000010f7e84a0: mov    %rax,%rbx
  0x000000010f7e84a3: lea    0x20(%rsp),%rax
  0x000000010f7e84a8: mov    0x8(%rax),%rsi
  0x000000010f7e84ac: mov    (%rsi),%rdi
  0x000000010f7e84af: and    $0x7,%rdi
  0x000000010f7e84b3: cmp    $0x5,%rdi
  0x000000010f7e84b7: je     0x000000010f7e84d4
  0x000000010f7e84bd: mov    (%rax),%rdi
  0x000000010f7e84c0: test   %rdi,%rdi
  0x000000010f7e84c3: je     0x000000010f7e84d4
  0x000000010f7e84c9: lock cmpxchg %rdi,(%rsi)
  0x000000010f7e84ce: jne    0x000000010f7e84e1
  0x000000010f7e84d4: mov    %rbx,%rax
  0x000000010f7e84d7: add    $0x40,%rsp
  0x000000010f7e84db: pop    %rbp
  0x000000010f7e84dc: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7e84e1: lea    0x20(%rsp),%rax
  0x000000010f7e84e6: mov    %rax,(%rsp)
  0x000000010f7e84ea: callq  0x000000010f7d00a0  ;   {runtime_call}
  0x000000010f7e84ef: jmp    0x000000010f7e84d4
  0x000000010f7e84f1: hlt    
  0x000000010f7e84f2: hlt    
  0x000000010f7e84f3: hlt    
  0x000000010f7e84f4: hlt    
  0x000000010f7e84f5: hlt    
  0x000000010f7e84f6: hlt    
  0x000000010f7e84f7: hlt    
  0x000000010f7e84f8: hlt    
  0x000000010f7e84f9: hlt    
  0x000000010f7e84fa: hlt    
  0x000000010f7e84fb: hlt    
  0x000000010f7e84fc: hlt    
  0x000000010f7e84fd: hlt    
  0x000000010f7e84fe: hlt    
  0x000000010f7e84ff: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f7e8500: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f7e8505: mov    %rsp,-0x28(%rsp)
  0x000000010f7e850a: sub    $0x80,%rsp
  0x000000010f7e8511: mov    %rax,0x78(%rsp)
  0x000000010f7e8516: mov    %rcx,0x70(%rsp)
  0x000000010f7e851b: mov    %rdx,0x68(%rsp)
  0x000000010f7e8520: mov    %rbx,0x60(%rsp)
  0x000000010f7e8525: mov    %rbp,0x50(%rsp)
  0x000000010f7e852a: mov    %rsi,0x48(%rsp)
  0x000000010f7e852f: mov    %rdi,0x40(%rsp)
  0x000000010f7e8534: mov    %r8,0x38(%rsp)
  0x000000010f7e8539: mov    %r9,0x30(%rsp)
  0x000000010f7e853e: mov    %r10,0x28(%rsp)
  0x000000010f7e8543: mov    %r11,0x20(%rsp)
  0x000000010f7e8548: mov    %r12,0x18(%rsp)
  0x000000010f7e854d: mov    %r13,0x10(%rsp)
  0x000000010f7e8552: mov    %r14,0x8(%rsp)
  0x000000010f7e8557: mov    %r15,(%rsp)
  0x000000010f7e855b: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7e8565: movabs $0x10f7e8505,%rsi  ;   {internal_word}
  0x000000010f7e856f: mov    %rsp,%rdx
  0x000000010f7e8572: and    $0xfffffffffffffff0,%rsp
  0x000000010f7e8576: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7e857b: hlt    
[Deopt Handler Code]
  0x000000010f7e857c: movabs $0x10f7e857c,%r10  ;   {section_word}
  0x000000010f7e8586: push   %r10
  0x000000010f7e8588: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7e858d: hlt    
  0x000000010f7e858e: hlt    
  0x000000010f7e858f: hlt    
Decoding compiled method 0x000000010f7e7a90:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ea6bee8} 'toCharArray' '()[C' in 'java/lang/String'
  #           [sp+0x50]  (sp of caller)
  0x000000010f7e7c00: mov    0x8(%rsi),%r10d
  0x000000010f7e7c04: shl    $0x3,%r10
  0x000000010f7e7c08: cmp    %rax,%r10
  0x000000010f7e7c0b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7e7c11: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7e7c1c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7e7c20: mov    %eax,-0x14000(%rsp)
  0x000000010f7e7c27: push   %rbp
  0x000000010f7e7c28: sub    $0x40,%rsp
  0x000000010f7e7c2c: mov    %rsi,%r8
  0x000000010f7e7c2f: movabs $0x10ec9a520,%rbx  ;   {metadata(method data for {method} {0x000000010ea6bee8} 'toCharArray' '()[C' in 'java/lang/String')}
  0x000000010f7e7c39: mov    0xdc(%rbx),%edx
  0x000000010f7e7c3f: add    $0x8,%edx
  0x000000010f7e7c42: mov    %edx,0xdc(%rbx)
  0x000000010f7e7c48: movabs $0x10ea6bee8,%rbx  ;   {metadata({method} {0x000000010ea6bee8} 'toCharArray' '()[C' in 'java/lang/String')}
  0x000000010f7e7c52: and    $0x1ff8,%edx
  0x000000010f7e7c58: cmp    $0x0,%edx
  0x000000010f7e7c5b: je     0x000000010f7e7d66  ;*aload_0
                                                ; - java.lang.String::toCharArray@0 (line 2899)

  0x000000010f7e7c61: mov    0xc(%r8),%r9d
  0x000000010f7e7c65: shl    $0x3,%r9           ;*getfield value
                                                ; - java.lang.String::toCharArray@1 (line 2899)

  0x000000010f7e7c69: mov    0xc(%r9),%r11d     ;*arraylength
                                                ; - java.lang.String::toCharArray@4 (line 2899)
                                                ; implicit exception: dispatches to 0x000000010f7e7d7d
  0x000000010f7e7c6d: mov    %r11,%rbx
  0x000000010f7e7c70: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000000010f7e7c7a: movslq %ebx,%rbx
  0x000000010f7e7c7d: mov    %rbx,%rdi
  0x000000010f7e7c80: cmp    $0xffffff,%rbx
  0x000000010f7e7c87: ja     0x000000010f7e7d82
  0x000000010f7e7c8d: movabs $0x17,%rsi
  0x000000010f7e7c97: lea    (%rsi,%rbx,2),%rsi
  0x000000010f7e7c9b: and    $0xfffffffffffffff8,%rsi
  0x000000010f7e7c9f: mov    0x60(%r15),%rax
  0x000000010f7e7ca3: lea    (%rax,%rsi,1),%rsi
  0x000000010f7e7ca7: cmp    0x70(%r15),%rsi
  0x000000010f7e7cab: ja     0x000000010f7e7d82
  0x000000010f7e7cb1: mov    %rsi,0x60(%r15)
  0x000000010f7e7cb5: sub    %rax,%rsi
  0x000000010f7e7cb8: movq   $0x1,(%rax)
  0x000000010f7e7cbf: mov    %rdx,%rcx
  0x000000010f7e7cc2: shr    $0x3,%rcx
  0x000000010f7e7cc6: mov    %ecx,0x8(%rax)
  0x000000010f7e7cc9: mov    %ebx,0xc(%rax)
  0x000000010f7e7ccc: sub    $0x10,%rsi
  0x000000010f7e7cd0: je     0x000000010f7e7ce7
  0x000000010f7e7cd6: xor    %rbx,%rbx
  0x000000010f7e7cd9: shr    $0x3,%rsi
  0x000000010f7e7cdd: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000010f7e7ce2: dec    %rsi
  0x000000010f7e7ce5: jne    0x000000010f7e7cdd  ;*newarray
                                                ; - java.lang.String::toCharArray@5 (line 2899)

  0x000000010f7e7ce7: movabs $0x10ec9a520,%rsi  ;   {metadata(method data for {method} {0x000000010ea6bee8} 'toCharArray' '()[C' in 'java/lang/String')}
  0x000000010f7e7cf1: addq   $0x1,0x108(%rsi)
  0x000000010f7e7cf9: mov    %r9,%rsi
  0x000000010f7e7cfc: mov    $0x0,%edx
  0x000000010f7e7d01: mov    %rax,%rcx
  0x000000010f7e7d04: mov    $0x0,%r8d
  0x000000010f7e7d0a: mov    %r11,%r9
  0x000000010f7e7d0d: mov    %rax,0x30(%rsp)
  0x000000010f7e7d12: lea    (%r8,%r9,1),%rdi
  0x000000010f7e7d16: cmp    0xc(%rcx),%edi
  0x000000010f7e7d19: ja     0x000000010f7e7d8c
  0x000000010f7e7d1f: movslq %edx,%rdx
  0x000000010f7e7d22: movslq %r8d,%r8
  0x000000010f7e7d25: lea    0x10(%rsi,%rdx,2),%rdi
  0x000000010f7e7d2a: lea    0x10(%rcx,%r8,2),%rsi
  0x000000010f7e7d2f: mov    %r9,%rdx
  0x000000010f7e7d32: test   $0xf,%esp
  0x000000010f7e7d38: je     0x000000010f7e7d50
  0x000000010f7e7d3e: sub    $0x8,%rsp
  0x000000010f7e7d42: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x000000010f7e7d47: add    $0x8,%rsp
  0x000000010f7e7d4b: jmpq   0x000000010f7e7d55
  0x000000010f7e7d50: callq  Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy
                                                ; - java.lang.String::toCharArray@20 (line 2900)
                                                ;   {runtime_call}
  0x000000010f7e7d55: mov    0x30(%rsp),%rax
  0x000000010f7e7d5a: add    $0x40,%rsp
  0x000000010f7e7d5e: pop    %rbp
  0x000000010f7e7d5f: test   %eax,-0x8d4cc65(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7e7d65: retq   
  0x000000010f7e7d66: mov    %rbx,0x8(%rsp)
  0x000000010f7e7d6b: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7e7d73: callq  0x000000010f7d1a20  ; OopMap{r8=Oop off=376}
                                                ;*synchronization entry
                                                ; - java.lang.String::toCharArray@-1 (line 2899)
                                                ;   {runtime_call}
  0x000000010f7e7d78: jmpq   0x000000010f7e7c61
  0x000000010f7e7d7d: callq  0x000000010f7cd0c0  ; OopMap{r8=Oop r9=Oop off=386}
                                                ;*arraylength
                                                ; - java.lang.String::toCharArray@4 (line 2899)
                                                ;   {runtime_call}
  0x000000010f7e7d82: callq  0x000000010f7ce120  ; OopMap{r8=Oop r9=Oop off=391}
                                                ;*newarray
                                                ; - java.lang.String::toCharArray@5 (line 2899)
                                                ;   {runtime_call}
  0x000000010f7e7d87: jmpq   0x000000010f7e7ce7
  0x000000010f7e7d8c: nop
  0x000000010f7e7d8d: nop
  0x000000010f7e7d8e: nop
  0x000000010f7e7d8f: callq  0x000000010f717520  ; OopMap{[48]=Oop off=404}
                                                ;*invokestatic arraycopy
                                                ; - java.lang.String::toCharArray@20 (line 2900)
                                                ;   {static_call}
  0x000000010f7e7d94: jmp    0x000000010f7e7d55
  0x000000010f7e7d96: nop
  0x000000010f7e7d97: nop
  0x000000010f7e7d98: mov    0x2a8(%r15),%rax
  0x000000010f7e7d9f: movabs $0x0,%r10
  0x000000010f7e7da9: mov    %r10,0x2a8(%r15)
  0x000000010f7e7db0: movabs $0x0,%r10
  0x000000010f7e7dba: mov    %r10,0x2b0(%r15)
  0x000000010f7e7dc1: add    $0x40,%rsp
  0x000000010f7e7dc5: pop    %rbp
  0x000000010f7e7dc6: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7e7dcb: hlt    
  0x000000010f7e7dcc: hlt    
  0x000000010f7e7dcd: hlt    
  0x000000010f7e7dce: hlt    
  0x000000010f7e7dcf: hlt    
  0x000000010f7e7dd0: hlt    
  0x000000010f7e7dd1: hlt    
  0x000000010f7e7dd2: hlt    
  0x000000010f7e7dd3: hlt    
  0x000000010f7e7dd4: hlt    
  0x000000010f7e7dd5: hlt    
  0x000000010f7e7dd6: hlt    
  0x000000010f7e7dd7: hlt    
  0x000000010f7e7dd8: hlt    
  0x000000010f7e7dd9: hlt    
  0x000000010f7e7dda: hlt    
  0x000000010f7e7ddb: hlt    
  0x000000010f7e7ddc: hlt    
  0x000000010f7e7ddd: hlt    
  0x000000010f7e7dde: hlt    
  0x000000010f7e7ddf: hlt    
[Stub Code]
  0x000000010f7e7de0: nop                       ;   {no_reloc}
  0x000000010f7e7de1: nop
  0x000000010f7e7de2: nop
  0x000000010f7e7de3: nop
  0x000000010f7e7de4: nop
  0x000000010f7e7de5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7e7def: jmpq   0x000000010f7e7def  ;   {runtime_call}
[Exception Handler]
  0x000000010f7e7df4: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f7e7df9: mov    %rsp,-0x28(%rsp)
  0x000000010f7e7dfe: sub    $0x80,%rsp
  0x000000010f7e7e05: mov    %rax,0x78(%rsp)
  0x000000010f7e7e0a: mov    %rcx,0x70(%rsp)
  0x000000010f7e7e0f: mov    %rdx,0x68(%rsp)
  0x000000010f7e7e14: mov    %rbx,0x60(%rsp)
  0x000000010f7e7e19: mov    %rbp,0x50(%rsp)
  0x000000010f7e7e1e: mov    %rsi,0x48(%rsp)
  0x000000010f7e7e23: mov    %rdi,0x40(%rsp)
  0x000000010f7e7e28: mov    %r8,0x38(%rsp)
  0x000000010f7e7e2d: mov    %r9,0x30(%rsp)
  0x000000010f7e7e32: mov    %r10,0x28(%rsp)
  0x000000010f7e7e37: mov    %r11,0x20(%rsp)
  0x000000010f7e7e3c: mov    %r12,0x18(%rsp)
  0x000000010f7e7e41: mov    %r13,0x10(%rsp)
  0x000000010f7e7e46: mov    %r14,0x8(%rsp)
  0x000000010f7e7e4b: mov    %r15,(%rsp)
  0x000000010f7e7e4f: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7e7e59: movabs $0x10f7e7df9,%rsi  ;   {internal_word}
  0x000000010f7e7e63: mov    %rsp,%rdx
  0x000000010f7e7e66: and    $0xfffffffffffffff0,%rsp
  0x000000010f7e7e6a: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7e7e6f: hlt    
[Deopt Handler Code]
  0x000000010f7e7e70: movabs $0x10f7e7e70,%r10  ;   {section_word}
  0x000000010f7e7e7a: push   %r10
  0x000000010f7e7e7c: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7e7e81: hlt    
  0x000000010f7e7e82: hlt    
  0x000000010f7e7e83: hlt    
  0x000000010f7e7e84: hlt    
  0x000000010f7e7e85: hlt    
  0x000000010f7e7e86: hlt    
  0x000000010f7e7e87: hlt    
Decoding compiled method 0x000000010f7e7290:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ebb4d90} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder'
  # this:     rsi:rsi   = 'sun/nio/cs/UTF_8$Encoder'
  # parm0:    rdx:rdx   = '[C'
  # parm1:    rcx       = int
  # parm2:    r8        = int
  # parm3:    r9:r9     = '[B'
  #           [sp+0x50]  (sp of caller)
  0x000000010f7e73e0: mov    0x8(%rsi),%r10d
  0x000000010f7e73e4: shl    $0x3,%r10
  0x000000010f7e73e8: cmp    %r10,%rax
  0x000000010f7e73eb: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7e73f1: data16 xchg %ax,%ax
  0x000000010f7e73f4: nopl   0x0(%rax,%rax,1)
  0x000000010f7e73fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7e7400: mov    %eax,-0x14000(%rsp)
  0x000000010f7e7407: push   %rbp
  0x000000010f7e7408: sub    $0x40,%rsp         ;*synchronization entry
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@-1 (line 704)

  0x000000010f7e740c: mov    %rsi,%r13
  0x000000010f7e740f: mov    %r9,%rbx
  0x000000010f7e7412: mov    0xc(%r9),%edi      ;*arraylength
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@13 (line 706)
                                                ; implicit exception: dispatches to 0x000000010f7e7615
  0x000000010f7e7416: cmp    %edi,%r8d
  0x000000010f7e7419: mov    %edi,%r10d
  0x000000010f7e741c: cmovl  %r8d,%r10d         ;*invokestatic min
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@14 (line 706)

  0x000000010f7e7420: mov    %ecx,%r9d
  0x000000010f7e7423: add    %r8d,%r9d          ;*iadd
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@2 (line 704)

  0x000000010f7e7426: xor    %eax,%eax
  0x000000010f7e7428: test   %r10d,%r10d
  0x000000010f7e742b: jle    0x000000010f7e7557  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@24 (line 709)

  0x000000010f7e7431: mov    0xc(%rdx),%r11d    ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)
                                                ; implicit exception: dispatches to 0x000000010f7e75a5
  0x000000010f7e7435: cmp    %r11d,%ecx
  0x000000010f7e7438: jae    0x000000010f7e75a5
  0x000000010f7e743e: movslq %r11d,%r11
  0x000000010f7e7441: movslq %ecx,%r8
  0x000000010f7e7444: movslq %r10d,%rsi
  0x000000010f7e7447: add    %rsi,%r8
  0x000000010f7e744a: dec    %r8
  0x000000010f7e744d: cmp    %r11,%r8
  0x000000010f7e7450: jae    0x000000010f7e75a5
  0x000000010f7e7456: test   %edi,%edi
  0x000000010f7e7458: jbe    0x000000010f7e75a5
  0x000000010f7e745e: dec    %rsi
  0x000000010f7e7461: movslq %edi,%r11
  0x000000010f7e7464: cmp    %r11,%rsi
  0x000000010f7e7467: jae    0x000000010f7e75a5  ;*aload_1
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@27 (line 709)

  0x000000010f7e746d: movzwl 0x10(%rdx,%rcx,2),%ebp  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x000000010f7e7472: cmp    $0x80,%ebp
  0x000000010f7e7478: jge    0x000000010f7e7605  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x000000010f7e747e: mov    %bpl,0x10(%rbx)    ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x000000010f7e7482: mov    %r10d,%edi
  0x000000010f7e7485: add    $0xfffffffd,%edi
  0x000000010f7e7488: mov    $0x80000000,%r11d
  0x000000010f7e748e: cmp    %edi,%r10d
  0x000000010f7e7491: cmovl  %r11d,%edi
  0x000000010f7e7495: mov    $0x1,%eax
  0x000000010f7e749a: cmp    $0x1,%edi
  0x000000010f7e749d: jle    0x000000010f7e75d1
  0x000000010f7e74a3: mov    %eax,%r11d
  0x000000010f7e74a6: add    %ecx,%r11d         ;*aload_1
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@27 (line 709)

  0x000000010f7e74a9: movzwl 0x10(%rdx,%r11,2),%r8d  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x000000010f7e74af: cmp    $0x80,%r8d
  0x000000010f7e74b6: jge    0x000000010f7e7563  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x000000010f7e74bc: movslq %r11d,%r14
  0x000000010f7e74bf: movzwl 0x12(%rdx,%r14,2),%ebp  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x000000010f7e74c5: movslq %eax,%rsi
  0x000000010f7e74c8: mov    %r8b,0x10(%rbx,%rsi,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x000000010f7e74cd: cmp    $0x80,%ebp
  0x000000010f7e74d3: jge    0x000000010f7e7568  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x000000010f7e74d9: movzwl 0x14(%rdx,%r14,2),%r8d  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x000000010f7e74df: movslq %eax,%rsi
  0x000000010f7e74e2: mov    %bpl,0x11(%rbx,%rsi,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x000000010f7e74e7: cmp    $0x80,%r8d
  0x000000010f7e74ee: jge    0x000000010f7e755c  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x000000010f7e74f0: mov    %r8b,0x12(%rbx,%rsi,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x000000010f7e74f5: movzwl 0x16(%rdx,%r14,2),%ebp  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x000000010f7e74fb: add    $0x3,%r11d         ;*aload_1
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@27 (line 709)

  0x000000010f7e74ff: cmp    $0x80,%ebp
  0x000000010f7e7505: jge    0x000000010f7e756f  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x000000010f7e7507: mov    %bpl,0x13(%rbx,%rsi,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x000000010f7e750c: add    $0x4,%eax          ;*iinc
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@40 (line 710)

  0x000000010f7e750f: cmp    %edi,%eax
  0x000000010f7e7511: jl     0x000000010f7e74a3  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@24 (line 709)

  0x000000010f7e7513: cmp    %r10d,%eax
  0x000000010f7e7516: jge    0x000000010f7e753f
  0x000000010f7e7518: mov    %eax,%r11d
  0x000000010f7e751b: add    %ecx,%r11d         ;*aload_1
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@27 (line 709)

  0x000000010f7e751e: movzwl 0x10(%rdx,%r11,2),%ebp  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x000000010f7e7524: cmp    $0x80,%ebp
  0x000000010f7e752a: jge    0x000000010f7e760d  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x000000010f7e7530: movslq %eax,%r8
  0x000000010f7e7533: mov    %bpl,0x10(%rbx,%r8,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x000000010f7e7538: inc    %eax               ;*iinc
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@40 (line 710)

  0x000000010f7e753a: cmp    %r10d,%eax
  0x000000010f7e753d: jl     0x000000010f7e7518
  0x000000010f7e753f: inc    %r11d              ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@24 (line 709)

  0x000000010f7e7542: cmp    %r9d,%r11d
  0x000000010f7e7545: jl     0x000000010f7e75d9
  0x000000010f7e754b: add    $0x40,%rsp
  0x000000010f7e754f: pop    %rbp
  0x000000010f7e7550: test   %eax,-0x8d4c556(%rip)        # 0x0000000106a9b000
                                                ;   {poll_return}
  0x000000010f7e7556: retq   
  0x000000010f7e7557: mov    %ecx,%r11d
  0x000000010f7e755a: jmp    0x000000010f7e7542
  0x000000010f7e755c: add    $0x2,%r11d
  0x000000010f7e7560: add    $0x2,%eax
  0x000000010f7e7563: mov    %r8d,%ebp
  0x000000010f7e7566: jmp    0x000000010f7e7572  ;*aload_1
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@27 (line 709)

  0x000000010f7e7568: inc    %eax               ;*iinc
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@40 (line 710)

  0x000000010f7e756a: inc    %r11d
  0x000000010f7e756d: jmp    0x000000010f7e7572  ;*aload_1
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@27 (line 709)

  0x000000010f7e756f: add    $0x3,%eax          ;*iinc
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@40 (line 710)

  0x000000010f7e7572: mov    %eax,(%rsp)
  0x000000010f7e7575: mov    $0xffffff65,%esi
  0x000000010f7e757a: mov    %rdx,0x8(%rsp)
  0x000000010f7e757f: mov    %r11d,0x4(%rsp)
  0x000000010f7e7584: mov    %r13,0x10(%rsp)
  0x000000010f7e7589: mov    %rbx,0x18(%rsp)
  0x000000010f7e758e: mov    %r9d,0x20(%rsp)
  0x000000010f7e7593: mov    %r10d,0x24(%rsp)
  0x000000010f7e7598: data16 xchg %ax,%ax
  0x000000010f7e759b: callq  0x000000010f7166a0  ; OopMap{[8]=Oop [16]=Oop [24]=Oop off=448}
                                                ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)
                                                ;   {runtime_call}
  0x000000010f7e75a0: callq  0x000000010948a904  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)
                                                ;   {runtime_call}
  0x000000010f7e75a5: mov    $0xffffff86,%esi
  0x000000010f7e75aa: mov    %rdx,%rbp
  0x000000010f7e75ad: mov    %ecx,(%rsp)
  0x000000010f7e75b0: mov    %r13,0x8(%rsp)
  0x000000010f7e75b5: mov    %rbx,0x10(%rsp)
  0x000000010f7e75ba: mov    %r9d,0x4(%rsp)
  0x000000010f7e75bf: mov    %r10d,0x18(%rsp)
  0x000000010f7e75c4: data16 xchg %ax,%ax
  0x000000010f7e75c7: callq  0x000000010f7166a0  ; OopMap{rbp=Oop [8]=Oop [16]=Oop off=492}
                                                ;*aload_1
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@27 (line 709)
                                                ;   {runtime_call}
  0x000000010f7e75cc: callq  0x000000010948a904  ;*aload_1
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@27 (line 709)
                                                ;   {runtime_call}
  0x000000010f7e75d1: mov    %ecx,%r11d
  0x000000010f7e75d4: jmpq   0x000000010f7e7513  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@24 (line 709)

  0x000000010f7e75d9: mov    $0xffffff65,%esi
  0x000000010f7e75de: mov    %rdx,%rbp
  0x000000010f7e75e1: mov    %eax,0x4(%rsp)
  0x000000010f7e75e5: mov    %r11d,0x8(%rsp)
  0x000000010f7e75ea: mov    %r13,0x10(%rsp)
  0x000000010f7e75ef: mov    %rbx,0x18(%rsp)
  0x000000010f7e75f4: mov    %r9d,0x20(%rsp)
  0x000000010f7e75f9: xchg   %ax,%ax
  0x000000010f7e75fb: callq  0x000000010f7166a0  ; OopMap{rbp=Oop [16]=Oop [24]=Oop off=544}
                                                ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@57 (line 712)
                                                ;   {runtime_call}
  0x000000010f7e7600: callq  0x000000010948a904  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@57 (line 712)
                                                ;   {runtime_call}
  0x000000010f7e7605: mov    %ecx,%r11d
  0x000000010f7e7608: jmpq   0x000000010f7e7572  ;*aload_1
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@27 (line 709)

  0x000000010f7e760d: mov    %eax,(%rsp)
  0x000000010f7e7610: jmpq   0x000000010f7e7575
  0x000000010f7e7615: mov    $0xfffffff6,%esi
  0x000000010f7e761a: nop
  0x000000010f7e761b: callq  0x000000010f7166a0  ; OopMap{off=576}
                                                ;*arraylength
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@13 (line 706)
                                                ;   {runtime_call}
  0x000000010f7e7620: callq  0x000000010948a904  ;*aload_1
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@27 (line 709)
                                                ;   {runtime_call}
  0x000000010f7e7625: hlt    
  0x000000010f7e7626: hlt    
  0x000000010f7e7627: hlt    
  0x000000010f7e7628: hlt    
  0x000000010f7e7629: hlt    
  0x000000010f7e762a: hlt    
  0x000000010f7e762b: hlt    
  0x000000010f7e762c: hlt    
  0x000000010f7e762d: hlt    
  0x000000010f7e762e: hlt    
  0x000000010f7e762f: hlt    
  0x000000010f7e7630: hlt    
  0x000000010f7e7631: hlt    
  0x000000010f7e7632: hlt    
  0x000000010f7e7633: hlt    
  0x000000010f7e7634: hlt    
  0x000000010f7e7635: hlt    
  0x000000010f7e7636: hlt    
  0x000000010f7e7637: hlt    
  0x000000010f7e7638: hlt    
  0x000000010f7e7639: hlt    
  0x000000010f7e763a: hlt    
  0x000000010f7e763b: hlt    
  0x000000010f7e763c: hlt    
  0x000000010f7e763d: hlt    
  0x000000010f7e763e: hlt    
  0x000000010f7e763f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f7e7640: jmpq   0x000000010f73fba0  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010f7e7645: callq  0x000000010f7e764a
  0x000000010f7e764a: subq   $0x5,(%rsp)
  0x000000010f7e764f: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7e7654: hlt    
  0x000000010f7e7655: hlt    
  0x000000010f7e7656: hlt    
  0x000000010f7e7657: hlt    
Decoding compiled method 0x000000010f7ec290:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010ea6a7e0} 'indexOf' '([CII[CIII)I' in 'java/lang/String'
  # parm0:    rsi:rsi   = '[C'
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  # parm3:    r8:r8     = '[C'
  # parm4:    r9        = int
  # parm5:    rdi       = int
  # parm6:    [sp+0x50]   = int  (sp of caller)
  0x000000010f7ec440: mov    %eax,-0x14000(%rsp)
  0x000000010f7ec447: push   %rbp
  0x000000010f7ec448: sub    $0x40,%rsp
  0x000000010f7ec44c: mov    %edx,0x20(%rsp)
  0x000000010f7ec450: mov    %edi,0x24(%rsp)
  0x000000010f7ec454: movabs $0x10ec39220,%rax  ;   {metadata(method data for {method} {0x000000010ea6a7e0} 'indexOf' '([CII[CIII)I' in 'java/lang/String')}
  0x000000010f7ec45e: mov    0xdc(%rax),%ebx
  0x000000010f7ec464: add    $0x8,%ebx
  0x000000010f7ec467: mov    %ebx,0xdc(%rax)
  0x000000010f7ec46d: movabs $0x10ea6a7e0,%rax  ;   {metadata({method} {0x000000010ea6a7e0} 'indexOf' '([CII[CIII)I' in 'java/lang/String')}
  0x000000010f7ec477: and    $0x1ff8,%ebx
  0x000000010f7ec47d: cmp    $0x0,%ebx
  0x000000010f7ec480: je     0x000000010f7ec914  ;*iload
                                                ; - java.lang.String::indexOf@0 (line 1756)

  0x000000010f7ec486: mov    0x50(%rsp),%eax
  0x000000010f7ec48a: cmp    %ecx,%eax
  0x000000010f7ec48c: movabs $0x10ec39220,%rbx  ;   {metadata(method data for {method} {0x000000010ea6a7e0} 'indexOf' '([CII[CIII)I' in 'java/lang/String')}
  0x000000010f7ec496: movabs $0x108,%r11
  0x000000010f7ec4a0: jl     0x000000010f7ec4b0
  0x000000010f7ec4a6: movabs $0x118,%r11
  0x000000010f7ec4b0: mov    (%rbx,%r11,1),%r13
  0x000000010f7ec4b4: lea    0x1(%r13),%r13
  0x000000010f7ec4b8: mov    %r13,(%rbx,%r11,1)
  0x000000010f7ec4bc: jl     0x000000010f7ec500  ;*if_icmplt
                                                ; - java.lang.String::indexOf@3 (line 1756)

  0x000000010f7ec4c2: cmp    $0x0,%edi
  0x000000010f7ec4c5: movabs $0x10ec39220,%rax  ;   {metadata(method data for {method} {0x000000010ea6a7e0} 'indexOf' '([CII[CIII)I' in 'java/lang/String')}
  0x000000010f7ec4cf: movabs $0x128,%rsi
  0x000000010f7ec4d9: jne    0x000000010f7ec4e9
  0x000000010f7ec4df: movabs $0x138,%rsi
  0x000000010f7ec4e9: mov    (%rax,%rsi,1),%rdi
  0x000000010f7ec4ed: lea    0x1(%rdi),%rdi
  0x000000010f7ec4f1: mov    %rdi,(%rax,%rsi,1)
  0x000000010f7ec4f5: jne    0x000000010f7ec900
  0x000000010f7ec4fb: jmpq   0x000000010f7ec8eb  ;*ifne
                                                ; - java.lang.String::indexOf@8 (line 1757)

  0x000000010f7ec500: cmp    $0x0,%eax
  0x000000010f7ec503: movabs $0x10ec39220,%rbx  ;   {metadata(method data for {method} {0x000000010ea6a7e0} 'indexOf' '([CII[CIII)I' in 'java/lang/String')}
  0x000000010f7ec50d: movabs $0x160,%r11
  0x000000010f7ec517: jge    0x000000010f7ec527
  0x000000010f7ec51d: movabs $0x170,%r11
  0x000000010f7ec527: mov    (%rbx,%r11,1),%r13
  0x000000010f7ec52b: lea    0x1(%r13),%r13
  0x000000010f7ec52f: mov    %r13,(%rbx,%r11,1)
  0x000000010f7ec533: jge    0x000000010f7ec53e  ;*ifge
                                                ; - java.lang.String::indexOf@19 (line 1759)

  0x000000010f7ec539: mov    $0x0,%eax          ;*iload
                                                ; - java.lang.String::indexOf@25 (line 1762)

  0x000000010f7ec53e: cmp    $0x0,%edi
  0x000000010f7ec541: movabs $0x10ec39220,%rbx  ;   {metadata(method data for {method} {0x000000010ea6a7e0} 'indexOf' '([CII[CIII)I' in 'java/lang/String')}
  0x000000010f7ec54b: movabs $0x180,%r11
  0x000000010f7ec555: jne    0x000000010f7ec565
  0x000000010f7ec55b: movabs $0x190,%r11
  0x000000010f7ec565: mov    (%rbx,%r11,1),%r13
  0x000000010f7ec569: lea    0x1(%r13),%r13
  0x000000010f7ec56d: mov    %r13,(%rbx,%r11,1)
  0x000000010f7ec571: je     0x000000010f7ec8df  ;*ifne
                                                ; - java.lang.String::indexOf@27 (line 1762)

  0x000000010f7ec577: movslq %r9d,%rbx
  0x000000010f7ec57a: cmp    0xc(%r8),%r9d      ; implicit exception: dispatches to 0x000000010f7ec92b
  0x000000010f7ec57e: jae    0x000000010f7ec935
  0x000000010f7ec584: movzwl 0x10(%r8,%rbx,2),%ebx  ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1766)

  0x000000010f7ec58a: mov    %ebx,0x28(%rsp)
  0x000000010f7ec58e: sub    %edi,%ecx
  0x000000010f7ec590: add    %edx,%ecx
  0x000000010f7ec592: add    %edx,%eax
  0x000000010f7ec594: nopl   0x0(%rax)
  0x000000010f7ec598: cmp    %ecx,%eax
  0x000000010f7ec59a: movabs $0x10ec39220,%r11  ;   {metadata(method data for {method} {0x000000010ea6a7e0} 'indexOf' '([CII[CIII)I' in 'java/lang/String')}
  0x000000010f7ec5a4: movabs $0x1a0,%r13
  0x000000010f7ec5ae: jg     0x000000010f7ec5be
  0x000000010f7ec5b4: movabs $0x1b0,%r13
  0x000000010f7ec5be: mov    (%r11,%r13,1),%r14
  0x000000010f7ec5c2: lea    0x1(%r14),%r14
  0x000000010f7ec5c6: mov    %r14,(%r11,%r13,1)
  0x000000010f7ec5ca: jg     0x000000010f7ec8ce  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@57 (line 1769)

  0x000000010f7ec5d0: movslq %eax,%r11
  0x000000010f7ec5d3: cmp    0xc(%rsi),%eax     ; implicit exception: dispatches to 0x000000010f7ec93e
  0x000000010f7ec5d6: jae    0x000000010f7ec948
  0x000000010f7ec5dc: movzwl 0x10(%rsi,%r11,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)

  0x000000010f7ec5e2: cmp    %ebx,%r11d
  0x000000010f7ec5e5: movabs $0x10ec39220,%r11  ;   {metadata(method data for {method} {0x000000010ea6a7e0} 'indexOf' '([CII[CIII)I' in 'java/lang/String')}
  0x000000010f7ec5ef: movabs $0x1c0,%r13
  0x000000010f7ec5f9: je     0x000000010f7ec609
  0x000000010f7ec5ff: movabs $0x1d0,%r13
  0x000000010f7ec609: mov    (%r11,%r13,1),%r14
  0x000000010f7ec60d: lea    0x1(%r14),%r14
  0x000000010f7ec611: mov    %r14,(%r11,%r13,1)
  0x000000010f7ec615: je     0x000000010f7ec6f3
  0x000000010f7ec61b: jmpq   0x000000010f7ec6b9  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@66 (line 1771)

  0x000000010f7ec620: movslq %eax,%r11
  0x000000010f7ec623: cmp    0xc(%rsi),%eax
  0x000000010f7ec626: jae    0x000000010f7ec951
  0x000000010f7ec62c: movzwl 0x10(%rsi,%r11,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1772)

  0x000000010f7ec632: cmp    %ebx,%r11d
  0x000000010f7ec635: movabs $0x10ec39220,%r11  ;   {metadata(method data for {method} {0x000000010ea6a7e0} 'indexOf' '([CII[CIII)I' in 'java/lang/String')}
  0x000000010f7ec63f: movabs $0x200,%r13
  0x000000010f7ec649: je     0x000000010f7ec659
  0x000000010f7ec64f: movabs $0x210,%r13
  0x000000010f7ec659: mov    (%r11,%r13,1),%r14
  0x000000010f7ec65d: lea    0x1(%r14),%r14
  0x000000010f7ec661: mov    %r14,(%r11,%r13,1)
  0x000000010f7ec665: je     0x000000010f7ec6f3  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@85 (line 1772)

  0x000000010f7ec66b: movabs $0x10ec39220,%r11  ;   {metadata(method data for {method} {0x000000010ea6a7e0} 'indexOf' '([CII[CIII)I' in 'java/lang/String')}
  0x000000010f7ec675: mov    0xe0(%r11),%r13d
  0x000000010f7ec67c: add    $0x8,%r13d
  0x000000010f7ec680: mov    %r13d,0xe0(%r11)
  0x000000010f7ec687: movabs $0x10ea6a7e0,%r11  ;   {metadata({method} {0x000000010ea6a7e0} 'indexOf' '([CII[CIII)I' in 'java/lang/String')}
  0x000000010f7ec691: and    $0xfff8,%r13d
  0x000000010f7ec698: cmp    $0x0,%r13d
  0x000000010f7ec69c: je     0x000000010f7ec95a  ; OopMap{r8=Oop rsi=Oop off=610}
                                                ;*goto
                                                ; - java.lang.String::indexOf@88 (line 1772)

  0x000000010f7ec6a2: test   %eax,-0x8d515a8(%rip)        # 0x0000000106a9b100
                                                ;   {poll}
  0x000000010f7ec6a8: movabs $0x10ec39220,%r11  ;   {metadata(method data for {method} {0x000000010ea6a7e0} 'indexOf' '([CII[CIII)I' in 'java/lang/String')}
  0x000000010f7ec6b2: incl   0x220(%r11)        ;*goto
                                                ; - java.lang.String::indexOf@88 (line 1772)

  0x000000010f7ec6b9: inc    %eax
  0x000000010f7ec6bb: cmp    %ecx,%eax
  0x000000010f7ec6bd: movabs $0x10ec39220,%r11  ;   {metadata(method data for {method} {0x000000010ea6a7e0} 'indexOf' '([CII[CIII)I' in 'java/lang/String')}
  0x000000010f7ec6c7: movabs $0x1e0,%r13
  0x000000010f7ec6d1: jg     0x000000010f7ec6e1
  0x000000010f7ec6d7: movabs $0x1f0,%r13
  0x000000010f7ec6e1: mov    (%r11,%r13,1),%r14
  0x000000010f7ec6e5: lea    0x1(%r14),%r14
  0x000000010f7ec6e9: mov    %r14,(%r11,%r13,1)
  0x000000010f7ec6ed: jle    0x000000010f7ec620  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@76 (line 1772)

  0x000000010f7ec6f3: cmp    %ecx,%eax
  0x000000010f7ec6f5: movabs $0x10ec39220,%r11  ;   {metadata(method data for {method} {0x000000010ea6a7e0} 'indexOf' '([CII[CIII)I' in 'java/lang/String')}
  0x000000010f7ec6ff: movabs $0x238,%r13
  0x000000010f7ec709: jg     0x000000010f7ec719
  0x000000010f7ec70f: movabs $0x248,%r13
  0x000000010f7ec719: mov    (%r11,%r13,1),%r14
  0x000000010f7ec71d: lea    0x1(%r14),%r14
  0x000000010f7ec721: mov    %r14,(%r11,%r13,1)
  0x000000010f7ec725: jg     0x000000010f7ec865  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@95 (line 1776)

  0x000000010f7ec72b: mov    %rax,%r11
  0x000000010f7ec72e: inc    %r11d
  0x000000010f7ec731: mov    %r11,%r13
  0x000000010f7ec734: add    %edi,%r13d
  0x000000010f7ec737: dec    %r13d
  0x000000010f7ec73a: mov    %r9,%r14
  0x000000010f7ec73d: inc    %r14d
  0x000000010f7ec740: jmpq   0x000000010f7ec7f3  ;*iload
                                                ; - java.lang.String::indexOf@119 (line 1779)

  0x000000010f7ec745: data16 xchg %ax,%ax
  0x000000010f7ec748: movslq %r11d,%rdi
  0x000000010f7ec74b: cmp    0xc(%rsi),%r11d
  0x000000010f7ec74f: jae    0x000000010f7ec971
  0x000000010f7ec755: movzwl 0x10(%rsi,%rdi,2),%edi  ;*caload
                                                ; - java.lang.String::indexOf@129 (line 1779)

  0x000000010f7ec75a: movslq %r14d,%rbx
  0x000000010f7ec75d: cmp    0xc(%r8),%r14d
  0x000000010f7ec761: jae    0x000000010f7ec97a
  0x000000010f7ec767: movzwl 0x10(%r8,%rbx,2),%ebx  ;*caload
                                                ; - java.lang.String::indexOf@133 (line 1779)

  0x000000010f7ec76d: cmp    %ebx,%edi
  0x000000010f7ec76f: movabs $0x10ec39220,%rdi  ;   {metadata(method data for {method} {0x000000010ea6a7e0} 'indexOf' '([CII[CIII)I' in 'java/lang/String')}
  0x000000010f7ec779: movabs $0x278,%rbx
  0x000000010f7ec783: jne    0x000000010f7ec793
  0x000000010f7ec789: movabs $0x288,%rbx
  0x000000010f7ec793: mov    (%rdi,%rbx,1),%rdx
  0x000000010f7ec797: lea    0x1(%rdx),%rdx
  0x000000010f7ec79b: mov    %rdx,(%rdi,%rbx,1)
  0x000000010f7ec79f: jne    0x000000010f7ec82c  ;*if_icmpne
                                                ; - java.lang.String::indexOf@134 (line 1779)

  0x000000010f7ec7a5: inc    %r11d
  0x000000010f7ec7a8: inc    %r14d
  0x000000010f7ec7ab: movabs $0x10ec39220,%rdi  ;   {metadata(method data for {method} {0x000000010ea6a7e0} 'indexOf' '([CII[CIII)I' in 'java/lang/String')}
  0x000000010f7ec7b5: mov    0xe0(%rdi),%ebx
  0x000000010f7ec7bb: add    $0x8,%ebx
  0x000000010f7ec7be: mov    %ebx,0xe0(%rdi)
  0x000000010f7ec7c4: movabs $0x10ea6a7e0,%rdi  ;   {metadata({method} {0x000000010ea6a7e0} 'indexOf' '([CII[CIII)I' in 'java/lang/String')}
  0x000000010f7ec7ce: and    $0xfff8,%ebx
  0x000000010f7ec7d4: cmp    $0x0,%ebx
  0x000000010f7ec7d7: je     0x000000010f7ec983  ; OopMap{r8=Oop rsi=Oop off=925}
                                                ;*goto
                                                ; - java.lang.String::indexOf@143 (line 1780)

  0x000000010f7ec7dd: test   %eax,-0x8d516e3(%rip)        # 0x0000000106a9b100
                                                ;   {poll}
  0x000000010f7ec7e3: movabs $0x10ec39220,%rdi  ;   {metadata(method data for {method} {0x000000010ea6a7e0} 'indexOf' '([CII[CIII)I' in 'java/lang/String')}
  0x000000010f7ec7ed: incl   0x298(%rdi)        ;*goto
                                                ; - java.lang.String::indexOf@143 (line 1780)

  0x000000010f7ec7f3: cmp    %r13d,%r11d
  0x000000010f7ec7f6: movabs $0x10ec39220,%rdx  ;   {metadata(method data for {method} {0x000000010ea6a7e0} 'indexOf' '([CII[CIII)I' in 'java/lang/String')}
  0x000000010f7ec800: movabs $0x258,%rdi
  0x000000010f7ec80a: jge    0x000000010f7ec81a
  0x000000010f7ec810: movabs $0x268,%rdi
  0x000000010f7ec81a: mov    (%rdx,%rdi,1),%rbx
  0x000000010f7ec81e: lea    0x1(%rbx),%rbx
  0x000000010f7ec822: mov    %rbx,(%rdx,%rdi,1)
  0x000000010f7ec826: jl     0x000000010f7ec748  ;*if_icmpge
                                                ; - java.lang.String::indexOf@123 (line 1779)

  0x000000010f7ec82c: cmp    %r13d,%r11d
  0x000000010f7ec82f: movabs $0x10ec39220,%rdi  ;   {metadata(method data for {method} {0x000000010ea6a7e0} 'indexOf' '([CII[CIII)I' in 'java/lang/String')}
  0x000000010f7ec839: movabs $0x2b0,%rbx
  0x000000010f7ec843: jne    0x000000010f7ec853
  0x000000010f7ec849: movabs $0x2c0,%rbx
  0x000000010f7ec853: mov    (%rdi,%rbx,1),%rdx
  0x000000010f7ec857: lea    0x1(%rdx),%rdx
  0x000000010f7ec85b: mov    %rdx,(%rdi,%rbx,1)
  0x000000010f7ec85f: je     0x000000010f7ec8bc  ;*if_icmpne
                                                ; - java.lang.String::indexOf@150 (line 1782)

  0x000000010f7ec865: inc    %eax
  0x000000010f7ec867: movabs $0x10ec39220,%rdi  ;   {metadata(method data for {method} {0x000000010ea6a7e0} 'indexOf' '([CII[CIII)I' in 'java/lang/String')}
  0x000000010f7ec871: mov    0xe0(%rdi),%ebx
  0x000000010f7ec877: add    $0x8,%ebx
  0x000000010f7ec87a: mov    %ebx,0xe0(%rdi)
  0x000000010f7ec880: movabs $0x10ea6a7e0,%rdi  ;   {metadata({method} {0x000000010ea6a7e0} 'indexOf' '([CII[CIII)I' in 'java/lang/String')}
  0x000000010f7ec88a: and    $0xfff8,%ebx
  0x000000010f7ec890: cmp    $0x0,%ebx
  0x000000010f7ec893: je     0x000000010f7ec99a  ; OopMap{r8=Oop rsi=Oop off=1113}
                                                ;*goto
                                                ; - java.lang.String::indexOf@161 (line 1769)

  0x000000010f7ec899: test   %eax,-0x8d5179f(%rip)        # 0x0000000106a9b100
                                                ;   {poll}
  0x000000010f7ec89f: movabs $0x10ec39220,%rdi  ;   {metadata(method data for {method} {0x000000010ea6a7e0} 'indexOf' '([CII[CIII)I' in 'java/lang/String')}
  0x000000010f7ec8a9: incl   0x2d0(%rdi)
  0x000000010f7ec8af: mov    0x28(%rsp),%ebx
  0x000000010f7ec8b3: mov    0x24(%rsp),%edi
  0x000000010f7ec8b7: jmpq   0x000000010f7ec598  ;*goto
                                                ; - java.lang.String::indexOf@161 (line 1769)

  0x000000010f7ec8bc: mov    0x20(%rsp),%edx
  0x000000010f7ec8c0: sub    %edx,%eax
  0x000000010f7ec8c2: add    $0x40,%rsp
  0x000000010f7ec8c6: pop    %rbp
  0x000000010f7ec8c7: test   %eax,-0x8d517cd(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7ec8cd: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@157 (line 1784)

  0x000000010f7ec8ce: mov    $0xffffffff,%eax
  0x000000010f7ec8d3: add    $0x40,%rsp
  0x000000010f7ec8d7: pop    %rbp
  0x000000010f7ec8d8: test   %eax,-0x8d517de(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7ec8de: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@165 (line 1788)

  0x000000010f7ec8df: add    $0x40,%rsp
  0x000000010f7ec8e3: pop    %rbp
  0x000000010f7ec8e4: test   %eax,-0x8d517ea(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7ec8ea: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@32 (line 1763)

  0x000000010f7ec8eb: movabs $0x10ec39220,%rax  ;   {metadata(method data for {method} {0x000000010ea6a7e0} 'indexOf' '([CII[CIII)I' in 'java/lang/String')}
  0x000000010f7ec8f5: incl   0x148(%rax)
  0x000000010f7ec8fb: jmpq   0x000000010f7ec905  ;*goto
                                                ; - java.lang.String::indexOf@12 (line 1757)

  0x000000010f7ec900: mov    $0xffffffff,%ecx   ;*ireturn
                                                ; - java.lang.String::indexOf@16 (line 1757)

  0x000000010f7ec905: mov    %rcx,%rax
  0x000000010f7ec908: add    $0x40,%rsp
  0x000000010f7ec90c: pop    %rbp
  0x000000010f7ec90d: test   %eax,-0x8d51813(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7ec913: retq   
  0x000000010f7ec914: mov    %rax,0x8(%rsp)
  0x000000010f7ec919: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7ec921: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop r8=Oop off=1254}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1756)
                                                ;   {runtime_call}
  0x000000010f7ec926: jmpq   0x000000010f7ec486
  0x000000010f7ec92b: callq  0x000000010f7cd0c0  ; OopMap{r8=Oop rsi=Oop off=1264}
                                                ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1766)
                                                ;   {runtime_call}
  0x000000010f7ec930: callq  0x000000010f7cd0c0  ; OopMap{r8=Oop rsi=Oop off=1269}
                                                ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1766)
                                                ;   {runtime_call}
  0x000000010f7ec935: mov    %r9,(%rsp)
  0x000000010f7ec939: callq  0x000000010f7cca00  ; OopMap{r8=Oop rsi=Oop off=1278}
                                                ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1766)
                                                ;   {runtime_call}
  0x000000010f7ec93e: callq  0x000000010f7cd0c0  ; OopMap{r8=Oop rsi=Oop off=1283}
                                                ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)
                                                ;   {runtime_call}
  0x000000010f7ec943: callq  0x000000010f7cd0c0  ; OopMap{r8=Oop rsi=Oop off=1288}
                                                ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)
                                                ;   {runtime_call}
  0x000000010f7ec948: mov    %rax,(%rsp)
  0x000000010f7ec94c: callq  0x000000010f7cca00  ; OopMap{r8=Oop rsi=Oop off=1297}
                                                ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)
                                                ;   {runtime_call}
  0x000000010f7ec951: mov    %rax,(%rsp)
  0x000000010f7ec955: callq  0x000000010f7cca00  ; OopMap{r8=Oop rsi=Oop off=1306}
                                                ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1772)
                                                ;   {runtime_call}
  0x000000010f7ec95a: mov    %r11,0x8(%rsp)
  0x000000010f7ec95f: movq   $0x58,(%rsp)
  0x000000010f7ec967: callq  0x000000010f7d1a20  ; OopMap{r8=Oop rsi=Oop off=1324}
                                                ;*goto
                                                ; - java.lang.String::indexOf@88 (line 1772)
                                                ;   {runtime_call}
  0x000000010f7ec96c: jmpq   0x000000010f7ec6a2
  0x000000010f7ec971: mov    %r11,(%rsp)
  0x000000010f7ec975: callq  0x000000010f7cca00  ; OopMap{r8=Oop rsi=Oop off=1338}
                                                ;*caload
                                                ; - java.lang.String::indexOf@129 (line 1779)
                                                ;   {runtime_call}
  0x000000010f7ec97a: mov    %r14,(%rsp)
  0x000000010f7ec97e: callq  0x000000010f7cca00  ; OopMap{r8=Oop rsi=Oop off=1347}
                                                ;*caload
                                                ; - java.lang.String::indexOf@133 (line 1779)
                                                ;   {runtime_call}
  0x000000010f7ec983: mov    %rdi,0x8(%rsp)
  0x000000010f7ec988: movq   $0x8f,(%rsp)
  0x000000010f7ec990: callq  0x000000010f7d1a20  ; OopMap{r8=Oop rsi=Oop off=1365}
                                                ;*goto
                                                ; - java.lang.String::indexOf@143 (line 1780)
                                                ;   {runtime_call}
  0x000000010f7ec995: jmpq   0x000000010f7ec7dd
  0x000000010f7ec99a: mov    %rdi,0x8(%rsp)
  0x000000010f7ec99f: movq   $0xa1,(%rsp)
  0x000000010f7ec9a7: callq  0x000000010f7d1a20  ; OopMap{r8=Oop rsi=Oop off=1388}
                                                ;*goto
                                                ; - java.lang.String::indexOf@161 (line 1769)
                                                ;   {runtime_call}
  0x000000010f7ec9ac: jmpq   0x000000010f7ec899
  0x000000010f7ec9b1: nop
  0x000000010f7ec9b2: nop
  0x000000010f7ec9b3: mov    0x2a8(%r15),%rax
  0x000000010f7ec9ba: movabs $0x0,%r10
  0x000000010f7ec9c4: mov    %r10,0x2a8(%r15)
  0x000000010f7ec9cb: movabs $0x0,%r10
  0x000000010f7ec9d5: mov    %r10,0x2b0(%r15)
  0x000000010f7ec9dc: add    $0x40,%rsp
  0x000000010f7ec9e0: pop    %rbp
  0x000000010f7ec9e1: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7ec9e6: hlt    
  0x000000010f7ec9e7: hlt    
  0x000000010f7ec9e8: hlt    
  0x000000010f7ec9e9: hlt    
  0x000000010f7ec9ea: hlt    
  0x000000010f7ec9eb: hlt    
  0x000000010f7ec9ec: hlt    
  0x000000010f7ec9ed: hlt    
  0x000000010f7ec9ee: hlt    
  0x000000010f7ec9ef: hlt    
  0x000000010f7ec9f0: hlt    
  0x000000010f7ec9f1: hlt    
  0x000000010f7ec9f2: hlt    
  0x000000010f7ec9f3: hlt    
  0x000000010f7ec9f4: hlt    
  0x000000010f7ec9f5: hlt    
  0x000000010f7ec9f6: hlt    
  0x000000010f7ec9f7: hlt    
  0x000000010f7ec9f8: hlt    
  0x000000010f7ec9f9: hlt    
  0x000000010f7ec9fa: hlt    
  0x000000010f7ec9fb: hlt    
  0x000000010f7ec9fc: hlt    
  0x000000010f7ec9fd: hlt    
  0x000000010f7ec9fe: hlt    
  0x000000010f7ec9ff: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f7eca00: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f7eca05: mov    %rsp,-0x28(%rsp)
  0x000000010f7eca0a: sub    $0x80,%rsp
  0x000000010f7eca11: mov    %rax,0x78(%rsp)
  0x000000010f7eca16: mov    %rcx,0x70(%rsp)
  0x000000010f7eca1b: mov    %rdx,0x68(%rsp)
  0x000000010f7eca20: mov    %rbx,0x60(%rsp)
  0x000000010f7eca25: mov    %rbp,0x50(%rsp)
  0x000000010f7eca2a: mov    %rsi,0x48(%rsp)
  0x000000010f7eca2f: mov    %rdi,0x40(%rsp)
  0x000000010f7eca34: mov    %r8,0x38(%rsp)
  0x000000010f7eca39: mov    %r9,0x30(%rsp)
  0x000000010f7eca3e: mov    %r10,0x28(%rsp)
  0x000000010f7eca43: mov    %r11,0x20(%rsp)
  0x000000010f7eca48: mov    %r12,0x18(%rsp)
  0x000000010f7eca4d: mov    %r13,0x10(%rsp)
  0x000000010f7eca52: mov    %r14,0x8(%rsp)
  0x000000010f7eca57: mov    %r15,(%rsp)
  0x000000010f7eca5b: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7eca65: movabs $0x10f7eca05,%rsi  ;   {internal_word}
  0x000000010f7eca6f: mov    %rsp,%rdx
  0x000000010f7eca72: and    $0xfffffffffffffff0,%rsp
  0x000000010f7eca76: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7eca7b: hlt    
[Deopt Handler Code]
  0x000000010f7eca7c: movabs $0x10f7eca7c,%r10  ;   {section_word}
  0x000000010f7eca86: push   %r10
  0x000000010f7eca88: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7eca8d: hlt    
  0x000000010f7eca8e: hlt    
  0x000000010f7eca8f: hlt    
Decoding compiled method 0x000000010f7eba90:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010eada5a0} 'newCapacity' '(I)I' in 'java/lang/AbstractStringBuilder'
  # this:     rsi:rsi   = 'java/lang/AbstractStringBuilder'
  # parm0:    rdx       = int
  #           [sp+0x50]  (sp of caller)
  0x000000010f7ebc20: mov    0x8(%rsi),%r10d
  0x000000010f7ebc24: shl    $0x3,%r10
  0x000000010f7ebc28: cmp    %rax,%r10
  0x000000010f7ebc2b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7ebc31: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7ebc3c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7ebc40: mov    %eax,-0x14000(%rsp)
  0x000000010f7ebc47: push   %rbp
  0x000000010f7ebc48: sub    $0x40,%rsp
  0x000000010f7ebc4c: movabs $0x10ec98678,%rax  ;   {metadata(method data for {method} {0x000000010eada5a0} 'newCapacity' '(I)I' in 'java/lang/AbstractStringBuilder')}
  0x000000010f7ebc56: mov    0xdc(%rax),%edi
  0x000000010f7ebc5c: add    $0x8,%edi
  0x000000010f7ebc5f: mov    %edi,0xdc(%rax)
  0x000000010f7ebc65: movabs $0x10eada5a0,%rax  ;   {metadata({method} {0x000000010eada5a0} 'newCapacity' '(I)I' in 'java/lang/AbstractStringBuilder')}
  0x000000010f7ebc6f: and    $0x1ff8,%edi
  0x000000010f7ebc75: cmp    $0x0,%edi
  0x000000010f7ebc78: je     0x000000010f7ebebe  ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::newCapacity@0 (line 150)

  0x000000010f7ebc7e: mov    0x10(%rsi),%eax
  0x000000010f7ebc81: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::newCapacity@1 (line 150)

  0x000000010f7ebc85: mov    0xc(%rax),%eax     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::newCapacity@4 (line 150)
                                                ; implicit exception: dispatches to 0x000000010f7ebed5
  0x000000010f7ebc88: shl    %eax
  0x000000010f7ebc8a: add    $0x2,%eax
  0x000000010f7ebc8d: mov    %rax,%rdi
  0x000000010f7ebc90: sub    %edx,%edi
  0x000000010f7ebc92: cmp    $0x0,%edi
  0x000000010f7ebc95: movabs $0x10ec98678,%rdi  ;   {metadata(method data for {method} {0x000000010eada5a0} 'newCapacity' '(I)I' in 'java/lang/AbstractStringBuilder')}
  0x000000010f7ebc9f: movabs $0x108,%rcx
  0x000000010f7ebca9: jge    0x000000010f7ebcb9
  0x000000010f7ebcaf: movabs $0x118,%rcx
  0x000000010f7ebcb9: mov    (%rdi,%rcx,1),%rbx
  0x000000010f7ebcbd: lea    0x1(%rbx),%rbx
  0x000000010f7ebcc1: mov    %rbx,(%rdi,%rcx,1)
  0x000000010f7ebcc5: jge    0x000000010f7ebcce  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)

  0x000000010f7ebccb: mov    %rdx,%rax          ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)

  0x000000010f7ebcce: cmp    $0x0,%eax
  0x000000010f7ebcd1: movabs $0x10ec98678,%rdi  ;   {metadata(method data for {method} {0x000000010eada5a0} 'newCapacity' '(I)I' in 'java/lang/AbstractStringBuilder')}
  0x000000010f7ebcdb: movabs $0x128,%rcx
  0x000000010f7ebce5: jle    0x000000010f7ebcf5
  0x000000010f7ebceb: movabs $0x138,%rcx
  0x000000010f7ebcf5: mov    (%rdi,%rcx,1),%rbx
  0x000000010f7ebcf9: lea    0x1(%rbx),%rbx
  0x000000010f7ebcfd: mov    %rbx,(%rdi,%rcx,1)
  0x000000010f7ebd01: jle    0x000000010f7ebd47  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)

  0x000000010f7ebd07: mov    $0x7ffffff7,%edi
  0x000000010f7ebd0c: sub    %eax,%edi
  0x000000010f7ebd0e: cmp    $0x0,%edi
  0x000000010f7ebd11: movabs $0x10ec98678,%rdi  ;   {metadata(method data for {method} {0x000000010eada5a0} 'newCapacity' '(I)I' in 'java/lang/AbstractStringBuilder')}
  0x000000010f7ebd1b: movabs $0x148,%rcx
  0x000000010f7ebd25: jge    0x000000010f7ebd35
  0x000000010f7ebd2b: movabs $0x158,%rcx
  0x000000010f7ebd35: mov    (%rdi,%rcx,1),%rbx
  0x000000010f7ebd39: lea    0x1(%rbx),%rbx
  0x000000010f7ebd3d: mov    %rbx,(%rdi,%rcx,1)
  0x000000010f7ebd41: jge    0x000000010f7ebe36  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)

  0x000000010f7ebd47: movabs $0x10ec98678,%rax  ;   {metadata(method data for {method} {0x000000010eada5a0} 'newCapacity' '(I)I' in 'java/lang/AbstractStringBuilder')}
  0x000000010f7ebd51: addq   $0x1,0x168(%rax)
  0x000000010f7ebd59: movabs $0x10ed21280,%rax  ;   {metadata(method data for {method} {0x000000010eada650} 'hugeCapacity' '(I)I' in 'java/lang/AbstractStringBuilder')}
  0x000000010f7ebd63: mov    0xdc(%rax),%esi
  0x000000010f7ebd69: add    $0x8,%esi
  0x000000010f7ebd6c: mov    %esi,0xdc(%rax)
  0x000000010f7ebd72: movabs $0x10eada650,%rax  ;   {metadata({method} {0x000000010eada650} 'hugeCapacity' '(I)I' in 'java/lang/AbstractStringBuilder')}
  0x000000010f7ebd7c: and    $0x7ffff8,%esi
  0x000000010f7ebd82: cmp    $0x0,%esi
  0x000000010f7ebd85: je     0x000000010f7ebeda
  0x000000010f7ebd8b: mov    $0x7fffffff,%eax
  0x000000010f7ebd90: sub    %edx,%eax
  0x000000010f7ebd92: cmp    $0x0,%eax
  0x000000010f7ebd95: movabs $0x10ed21280,%rax  ;   {metadata(method data for {method} {0x000000010eada650} 'hugeCapacity' '(I)I' in 'java/lang/AbstractStringBuilder')}
  0x000000010f7ebd9f: movabs $0x108,%rsi
  0x000000010f7ebda9: jge    0x000000010f7ebdb9
  0x000000010f7ebdaf: movabs $0x118,%rsi
  0x000000010f7ebdb9: mov    (%rax,%rsi,1),%rdi
  0x000000010f7ebdbd: lea    0x1(%rdi),%rdi
  0x000000010f7ebdc1: mov    %rdi,(%rax,%rsi,1)
  0x000000010f7ebdc5: jl     0x000000010f7ebe48  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::hugeCapacity@4 (line 160)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)

  0x000000010f7ebdcb: cmp    $0x7ffffff7,%edx
  0x000000010f7ebdd1: movabs $0x10ed21280,%rax  ;   {metadata(method data for {method} {0x000000010eada650} 'hugeCapacity' '(I)I' in 'java/lang/AbstractStringBuilder')}
  0x000000010f7ebddb: movabs $0x138,%rsi
  0x000000010f7ebde5: jle    0x000000010f7ebdf5
  0x000000010f7ebdeb: movabs $0x148,%rsi
  0x000000010f7ebdf5: mov    (%rax,%rsi,1),%rdi
  0x000000010f7ebdf9: lea    0x1(%rdi),%rdi
  0x000000010f7ebdfd: mov    %rdi,(%rax,%rsi,1)
  0x000000010f7ebe01: jle    0x000000010f7ebe1c  ;*if_icmple
                                                ; - java.lang.AbstractStringBuilder::hugeCapacity@18 (line 163)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)

  0x000000010f7ebe07: movabs $0x10ed21280,%rax  ;   {metadata(method data for {method} {0x000000010eada650} 'hugeCapacity' '(I)I' in 'java/lang/AbstractStringBuilder')}
  0x000000010f7ebe11: incl   0x158(%rax)
  0x000000010f7ebe17: jmpq   0x000000010f7ebe21  ;*goto
                                                ; - java.lang.AbstractStringBuilder::hugeCapacity@22 (line 163)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)

  0x000000010f7ebe1c: mov    $0x7ffffff7,%edx   ;*ireturn
                                                ; - java.lang.AbstractStringBuilder::hugeCapacity@27 (line 163)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)

  0x000000010f7ebe21: movabs $0x10ec98678,%rax  ;   {metadata(method data for {method} {0x000000010eada5a0} 'newCapacity' '(I)I' in 'java/lang/AbstractStringBuilder')}
  0x000000010f7ebe2b: incl   0x178(%rax)
  0x000000010f7ebe31: jmpq   0x000000010f7ebe39  ;*goto
                                                ; - java.lang.AbstractStringBuilder::newCapacity@34 (line 155)

  0x000000010f7ebe36: mov    %rax,%rdx
  0x000000010f7ebe39: mov    %rdx,%rax
  0x000000010f7ebe3c: add    $0x40,%rsp
  0x000000010f7ebe40: pop    %rbp
  0x000000010f7ebe41: test   %eax,-0x8d50d47(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7ebe47: retq                      ;*ireturn
                                                ; - java.lang.AbstractStringBuilder::newCapacity@38 (line 154)

  0x000000010f7ebe48: jmpq   0x000000010f7ebf00  ;   {no_reloc}
  0x000000010f7ebe4d: add    %al,(%rax)
  0x000000010f7ebe4f: add    %al,(%rax)
  0x000000010f7ebe51: add    %cl,-0x75(%rcx)
  0x000000010f7ebe54: rex.RXB (bad) 
  0x000000010f7ebe56: lea    0x20(%rax),%rdi
  0x000000010f7ebe5a: cmp    0x70(%r15),%rdi
  0x000000010f7ebe5e: ja     0x000000010f7ebf0a
  0x000000010f7ebe64: mov    %rdi,0x60(%r15)
  0x000000010f7ebe68: mov    0xa8(%rdx),%rcx
  0x000000010f7ebe6f: mov    %rcx,(%rax)
  0x000000010f7ebe72: mov    %rdx,%rcx
  0x000000010f7ebe75: shr    $0x3,%rcx
  0x000000010f7ebe79: mov    %ecx,0x8(%rax)
  0x000000010f7ebe7c: xor    %rcx,%rcx
  0x000000010f7ebe7f: mov    %ecx,0xc(%rax)
  0x000000010f7ebe82: xor    %rcx,%rcx
  0x000000010f7ebe85: mov    %rcx,0x10(%rax)
  0x000000010f7ebe89: mov    %rcx,0x18(%rax)    ;*new  ; - java.lang.AbstractStringBuilder::hugeCapacity@7 (line 161)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)

  0x000000010f7ebe8d: mov    %rax,%rsi
  0x000000010f7ebe90: movabs $0x10ed21280,%rdi  ;   {metadata(method data for {method} {0x000000010eada650} 'hugeCapacity' '(I)I' in 'java/lang/AbstractStringBuilder')}
  0x000000010f7ebe9a: addq   $0x1,0x128(%rdi)
  0x000000010f7ebea2: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.AbstractStringBuilder::hugeCapacity@11 (line 161)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)

  0x000000010f7ebea5: mov    %rax,0x30(%rsp)
  0x000000010f7ebeaa: nop
  0x000000010f7ebeab: nop
  0x000000010f7ebeac: nop
  0x000000010f7ebead: nop
  0x000000010f7ebeae: nop
  0x000000010f7ebeaf: callq  0x000000010f7170a0  ; OopMap{[48]=Oop off=660}
                                                ;*invokespecial <init>
                                                ; - java.lang.AbstractStringBuilder::hugeCapacity@11 (line 161)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ;   {optimized virtual_call}
  0x000000010f7ebeb4: mov    0x30(%rsp),%rax
  0x000000010f7ebeb9: jmpq   0x000000010f7ebf42
  0x000000010f7ebebe: mov    %rax,0x8(%rsp)
  0x000000010f7ebec3: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7ebecb: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=688}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::newCapacity@-1 (line 150)
                                                ;   {runtime_call}
  0x000000010f7ebed0: jmpq   0x000000010f7ebc7e
  0x000000010f7ebed5: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop off=698}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::newCapacity@4 (line 150)
                                                ;   {runtime_call}
  0x000000010f7ebeda: mov    %rax,0x8(%rsp)
  0x000000010f7ebedf: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7ebee7: callq  0x000000010f7d1a20  ; OopMap{off=716}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::hugeCapacity@-1 (line 160)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ;   {runtime_call}
  0x000000010f7ebeec: jmpq   0x000000010f7ebd8b
  0x000000010f7ebef1: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f7ebefb: mov    $0xa050f00,%eax
  0x000000010f7ebf00: callq  0x000000010f7d08e0  ; OopMap{off=741}
                                                ;*new  ; - java.lang.AbstractStringBuilder::hugeCapacity@7 (line 161)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ;   {runtime_call}
  0x000000010f7ebf05: jmpq   0x000000010f7ebe48
  0x000000010f7ebf0a: mov    %rdx,%rdx
  0x000000010f7ebf0d: callq  0x000000010f7cd820  ; OopMap{off=754}
                                                ;*new  ; - java.lang.AbstractStringBuilder::hugeCapacity@7 (line 161)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ;   {runtime_call}
  0x000000010f7ebf12: jmpq   0x000000010f7ebe8d
  0x000000010f7ebf17: nop
  0x000000010f7ebf18: nop
  0x000000010f7ebf19: mov    0x2a8(%r15),%rax
  0x000000010f7ebf20: movabs $0x0,%r10
  0x000000010f7ebf2a: mov    %r10,0x2a8(%r15)
  0x000000010f7ebf31: movabs $0x0,%r10
  0x000000010f7ebf3b: mov    %r10,0x2b0(%r15)
  0x000000010f7ebf42: add    $0x40,%rsp
  0x000000010f7ebf46: pop    %rbp
  0x000000010f7ebf47: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7ebf4c: hlt    
  0x000000010f7ebf4d: hlt    
  0x000000010f7ebf4e: hlt    
  0x000000010f7ebf4f: hlt    
  0x000000010f7ebf50: hlt    
  0x000000010f7ebf51: hlt    
  0x000000010f7ebf52: hlt    
  0x000000010f7ebf53: hlt    
  0x000000010f7ebf54: hlt    
  0x000000010f7ebf55: hlt    
  0x000000010f7ebf56: hlt    
  0x000000010f7ebf57: hlt    
  0x000000010f7ebf58: hlt    
  0x000000010f7ebf59: hlt    
  0x000000010f7ebf5a: hlt    
  0x000000010f7ebf5b: hlt    
  0x000000010f7ebf5c: hlt    
  0x000000010f7ebf5d: hlt    
  0x000000010f7ebf5e: hlt    
  0x000000010f7ebf5f: hlt    
[Stub Code]
  0x000000010f7ebf60: nop                       ;   {no_reloc}
  0x000000010f7ebf61: nop
  0x000000010f7ebf62: nop
  0x000000010f7ebf63: nop
  0x000000010f7ebf64: nop
  0x000000010f7ebf65: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7ebf6f: jmpq   0x000000010f7ebf6f  ;   {runtime_call}
[Exception Handler]
  0x000000010f7ebf74: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f7ebf79: mov    %rsp,-0x28(%rsp)
  0x000000010f7ebf7e: sub    $0x80,%rsp
  0x000000010f7ebf85: mov    %rax,0x78(%rsp)
  0x000000010f7ebf8a: mov    %rcx,0x70(%rsp)
  0x000000010f7ebf8f: mov    %rdx,0x68(%rsp)
  0x000000010f7ebf94: mov    %rbx,0x60(%rsp)
  0x000000010f7ebf99: mov    %rbp,0x50(%rsp)
  0x000000010f7ebf9e: mov    %rsi,0x48(%rsp)
  0x000000010f7ebfa3: mov    %rdi,0x40(%rsp)
  0x000000010f7ebfa8: mov    %r8,0x38(%rsp)
  0x000000010f7ebfad: mov    %r9,0x30(%rsp)
  0x000000010f7ebfb2: mov    %r10,0x28(%rsp)
  0x000000010f7ebfb7: mov    %r11,0x20(%rsp)
  0x000000010f7ebfbc: mov    %r12,0x18(%rsp)
  0x000000010f7ebfc1: mov    %r13,0x10(%rsp)
  0x000000010f7ebfc6: mov    %r14,0x8(%rsp)
  0x000000010f7ebfcb: mov    %r15,(%rsp)
  0x000000010f7ebfcf: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7ebfd9: movabs $0x10f7ebf79,%rsi  ;   {internal_word}
  0x000000010f7ebfe3: mov    %rsp,%rdx
  0x000000010f7ebfe6: and    $0xfffffffffffffff0,%rsp
  0x000000010f7ebfea: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7ebfef: hlt    
[Deopt Handler Code]
  0x000000010f7ebff0: movabs $0x10f7ebff0,%r10  ;   {section_word}
  0x000000010f7ebffa: push   %r10
  0x000000010f7ebffc: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7ec001: hlt    
  0x000000010f7ec002: hlt    
  0x000000010f7ec003: hlt    
  0x000000010f7ec004: hlt    
  0x000000010f7ec005: hlt    
  0x000000010f7ec006: hlt    
  0x000000010f7ec007: hlt    
Decoding compiled method 0x000000010f7e6d90:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ea8d7a0} '<init>' '(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V' in 'java/lang/ref/Reference'
  # this:     rsi:rsi   = 'java/lang/ref/Reference'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    rcx:rcx   = 'java/lang/ref/ReferenceQueue'
  #           [sp+0x40]  (sp of caller)
  0x000000010f7e6f00: mov    0x8(%rsi),%r10d
  0x000000010f7e6f04: shl    $0x3,%r10
  0x000000010f7e6f08: cmp    %rax,%r10
  0x000000010f7e6f0b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7e6f11: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7e6f1c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7e6f20: mov    %eax,-0x14000(%rsp)
  0x000000010f7e6f27: push   %rbp
  0x000000010f7e6f28: sub    $0x30,%rsp
  0x000000010f7e6f2c: movabs $0x10ec8c800,%rdi  ;   {metadata(method data for {method} {0x000000010ea8d7a0} '<init>' '(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V' in 'java/lang/ref/Reference')}
  0x000000010f7e6f36: mov    0xdc(%rdi),%ebx
  0x000000010f7e6f3c: add    $0x8,%ebx
  0x000000010f7e6f3f: mov    %ebx,0xdc(%rdi)
  0x000000010f7e6f45: movabs $0x10ea8d7a0,%rdi  ;   {metadata({method} {0x000000010ea8d7a0} '<init>' '(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V' in 'java/lang/ref/Reference')}
  0x000000010f7e6f4f: and    $0x1ff8,%ebx
  0x000000010f7e6f55: cmp    $0x0,%ebx
  0x000000010f7e6f58: je     0x000000010f7e7056  ;*aload_0
                                                ; - java.lang.ref.Reference::<init>@0 (line 306)

  0x000000010f7e6f5e: mov    %rsi,%rdi
  0x000000010f7e6f61: movabs $0x10ec8c800,%rbx  ;   {metadata(method data for {method} {0x000000010ea8d7a0} '<init>' '(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V' in 'java/lang/ref/Reference')}
  0x000000010f7e6f6b: addq   $0x1,0x108(%rbx)
  0x000000010f7e6f73: movabs $0x10ebdca10,%rdi  ;   {metadata(method data for {method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f7e6f7d: mov    0xdc(%rdi),%ebx
  0x000000010f7e6f83: add    $0x8,%ebx
  0x000000010f7e6f86: mov    %ebx,0xdc(%rdi)
  0x000000010f7e6f8c: movabs $0x10ea65480,%rdi  ;   {metadata({method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f7e6f96: and    $0x7ffff8,%ebx
  0x000000010f7e6f9c: cmp    $0x0,%ebx
  0x000000010f7e6f9f: je     0x000000010f7e706d
  0x000000010f7e6fa5: mov    %rdx,%r10
  0x000000010f7e6fa8: shr    $0x3,%r10
  0x000000010f7e6fac: mov    %r10d,0xc(%rsi)
  0x000000010f7e6fb0: mov    %rsi,%rdi
  0x000000010f7e6fb3: shr    $0x9,%rdi
  0x000000010f7e6fb7: movabs $0x1065b9000,%rbx
  0x000000010f7e6fc1: movb   $0x0,(%rdi,%rbx,1)  ;*putfield referent
                                                ; - java.lang.ref.Reference::<init>@6 (line 307)

  0x000000010f7e6fc5: cmp    $0x0,%rcx
  0x000000010f7e6fc9: movabs $0x10ec8c800,%rdi  ;   {metadata(method data for {method} {0x000000010ea8d7a0} '<init>' '(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V' in 'java/lang/ref/Reference')}
  0x000000010f7e6fd3: movabs $0x118,%rbx
  0x000000010f7e6fdd: jne    0x000000010f7e6fed
  0x000000010f7e6fe3: movabs $0x128,%rbx
  0x000000010f7e6fed: mov    (%rdi,%rbx,1),%rax
  0x000000010f7e6ff1: lea    0x1(%rax),%rax
  0x000000010f7e6ff5: mov    %rax,(%rdi,%rbx,1)
  0x000000010f7e6ff9: jne    0x000000010f7e7025  ;*ifnonnull
                                                ; - java.lang.ref.Reference::<init>@11 (line 308)

  0x000000010f7e6fff: movabs $0x795581b90,%rdi  ;   {oop(a 'java/lang/Class' = 'java/lang/ref/ReferenceQueue')}
  0x000000010f7e7009: mov    0x68(%rdi),%edi
  0x000000010f7e700c: shl    $0x3,%rdi          ;*getstatic NULL
                                                ; - java.lang.ref.Reference::<init>@14 (line 308)

  0x000000010f7e7010: movabs $0x10ec8c800,%rbx  ;   {metadata(method data for {method} {0x000000010ea8d7a0} '<init>' '(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V' in 'java/lang/ref/Reference')}
  0x000000010f7e701a: incl   0x138(%rbx)
  0x000000010f7e7020: jmpq   0x000000010f7e7028  ;*goto
                                                ; - java.lang.ref.Reference::<init>@17 (line 308)

  0x000000010f7e7025: mov    %rcx,%rdi
  0x000000010f7e7028: mov    %rdi,%r10
  0x000000010f7e702b: shr    $0x3,%r10
  0x000000010f7e702f: mov    %r10d,0x10(%rsi)
  0x000000010f7e7033: shr    $0x9,%rsi
  0x000000010f7e7037: movabs $0x1065b9000,%rdi
  0x000000010f7e7041: movb   $0x0,(%rsi,%rdi,1)
  0x000000010f7e7045: lock addl $0x0,(%rsp)     ;*putfield queue
                                                ; - java.lang.ref.Reference::<init>@21 (line 308)

  0x000000010f7e704a: add    $0x30,%rsp
  0x000000010f7e704e: pop    %rbp
  0x000000010f7e704f: test   %eax,-0x8d4bf55(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7e7055: retq   
  0x000000010f7e7056: mov    %rdi,0x8(%rsp)
  0x000000010f7e705b: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7e7063: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop rdx=Oop rcx=Oop off=360}
                                                ;*synchronization entry
                                                ; - java.lang.ref.Reference::<init>@-1 (line 306)
                                                ;   {runtime_call}
  0x000000010f7e7068: jmpq   0x000000010f7e6f5e
  0x000000010f7e706d: mov    %rdi,0x8(%rsp)
  0x000000010f7e7072: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7e707a: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop rdx=Oop rcx=Oop off=383}
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 37)
                                                ; - java.lang.ref.Reference::<init>@1 (line 306)
                                                ;   {runtime_call}
  0x000000010f7e707f: jmpq   0x000000010f7e6fa5
  0x000000010f7e7084: nop
  0x000000010f7e7085: nop
  0x000000010f7e7086: mov    0x2a8(%r15),%rax
  0x000000010f7e708d: movabs $0x0,%r10
  0x000000010f7e7097: mov    %r10,0x2a8(%r15)
  0x000000010f7e709e: movabs $0x0,%r10
  0x000000010f7e70a8: mov    %r10,0x2b0(%r15)
  0x000000010f7e70af: add    $0x30,%rsp
  0x000000010f7e70b3: pop    %rbp
  0x000000010f7e70b4: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7e70b9: hlt    
  0x000000010f7e70ba: hlt    
  0x000000010f7e70bb: hlt    
  0x000000010f7e70bc: hlt    
  0x000000010f7e70bd: hlt    
  0x000000010f7e70be: hlt    
  0x000000010f7e70bf: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f7e70c0: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f7e70c5: mov    %rsp,-0x28(%rsp)
  0x000000010f7e70ca: sub    $0x80,%rsp
  0x000000010f7e70d1: mov    %rax,0x78(%rsp)
  0x000000010f7e70d6: mov    %rcx,0x70(%rsp)
  0x000000010f7e70db: mov    %rdx,0x68(%rsp)
  0x000000010f7e70e0: mov    %rbx,0x60(%rsp)
  0x000000010f7e70e5: mov    %rbp,0x50(%rsp)
  0x000000010f7e70ea: mov    %rsi,0x48(%rsp)
  0x000000010f7e70ef: mov    %rdi,0x40(%rsp)
  0x000000010f7e70f4: mov    %r8,0x38(%rsp)
  0x000000010f7e70f9: mov    %r9,0x30(%rsp)
  0x000000010f7e70fe: mov    %r10,0x28(%rsp)
  0x000000010f7e7103: mov    %r11,0x20(%rsp)
  0x000000010f7e7108: mov    %r12,0x18(%rsp)
  0x000000010f7e710d: mov    %r13,0x10(%rsp)
  0x000000010f7e7112: mov    %r14,0x8(%rsp)
  0x000000010f7e7117: mov    %r15,(%rsp)
  0x000000010f7e711b: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7e7125: movabs $0x10f7e70c5,%rsi  ;   {internal_word}
  0x000000010f7e712f: mov    %rsp,%rdx
  0x000000010f7e7132: and    $0xfffffffffffffff0,%rsp
  0x000000010f7e7136: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7e713b: hlt    
[Deopt Handler Code]
  0x000000010f7e713c: movabs $0x10f7e713c,%r10  ;   {section_word}
  0x000000010f7e7146: push   %r10
  0x000000010f7e7148: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7e714d: hlt    
  0x000000010f7e714e: hlt    
  0x000000010f7e714f: hlt    
Decoding compiled method 0x000000010f7eb790:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010eb53c90} 'getKey' '()Ljava/lang/Object;' in 'java/util/HashMap$Node'
  #           [sp+0x40]  (sp of caller)
  0x000000010f7eb8e0: mov    0x8(%rsi),%r10d
  0x000000010f7eb8e4: shl    $0x3,%r10
  0x000000010f7eb8e8: cmp    %rax,%r10
  0x000000010f7eb8eb: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7eb8f1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7eb8fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7eb900: mov    %eax,-0x14000(%rsp)
  0x000000010f7eb907: push   %rbp
  0x000000010f7eb908: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.util.HashMap$Node::getKey@0 (line 292)

  0x000000010f7eb90c: mov    0x10(%rsi),%eax
  0x000000010f7eb90f: shl    $0x3,%rax          ;*getfield key
                                                ; - java.util.HashMap$Node::getKey@1 (line 292)

  0x000000010f7eb913: add    $0x30,%rsp
  0x000000010f7eb917: pop    %rbp
  0x000000010f7eb918: test   %eax,-0x8d5081e(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7eb91e: retq   
  0x000000010f7eb91f: nop
  0x000000010f7eb920: nop
  0x000000010f7eb921: mov    0x2a8(%r15),%rax
  0x000000010f7eb928: movabs $0x0,%r10
  0x000000010f7eb932: mov    %r10,0x2a8(%r15)
  0x000000010f7eb939: movabs $0x0,%r10
  0x000000010f7eb943: mov    %r10,0x2b0(%r15)
  0x000000010f7eb94a: add    $0x30,%rsp
  0x000000010f7eb94e: pop    %rbp
  0x000000010f7eb94f: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7eb954: hlt    
  0x000000010f7eb955: hlt    
  0x000000010f7eb956: hlt    
  0x000000010f7eb957: hlt    
  0x000000010f7eb958: hlt    
  0x000000010f7eb959: hlt    
  0x000000010f7eb95a: hlt    
  0x000000010f7eb95b: hlt    
  0x000000010f7eb95c: hlt    
  0x000000010f7eb95d: hlt    
  0x000000010f7eb95e: hlt    
  0x000000010f7eb95f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f7eb960: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f7eb965: mov    %rsp,-0x28(%rsp)
  0x000000010f7eb96a: sub    $0x80,%rsp
  0x000000010f7eb971: mov    %rax,0x78(%rsp)
  0x000000010f7eb976: mov    %rcx,0x70(%rsp)
  0x000000010f7eb97b: mov    %rdx,0x68(%rsp)
  0x000000010f7eb980: mov    %rbx,0x60(%rsp)
  0x000000010f7eb985: mov    %rbp,0x50(%rsp)
  0x000000010f7eb98a: mov    %rsi,0x48(%rsp)
  0x000000010f7eb98f: mov    %rdi,0x40(%rsp)
  0x000000010f7eb994: mov    %r8,0x38(%rsp)
  0x000000010f7eb999: mov    %r9,0x30(%rsp)
  0x000000010f7eb99e: mov    %r10,0x28(%rsp)
  0x000000010f7eb9a3: mov    %r11,0x20(%rsp)
  0x000000010f7eb9a8: mov    %r12,0x18(%rsp)
  0x000000010f7eb9ad: mov    %r13,0x10(%rsp)
  0x000000010f7eb9b2: mov    %r14,0x8(%rsp)
  0x000000010f7eb9b7: mov    %r15,(%rsp)
  0x000000010f7eb9bb: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7eb9c5: movabs $0x10f7eb965,%rsi  ;   {internal_word}
  0x000000010f7eb9cf: mov    %rsp,%rdx
  0x000000010f7eb9d2: and    $0xfffffffffffffff0,%rsp
  0x000000010f7eb9d6: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7eb9db: hlt    
[Deopt Handler Code]
  0x000000010f7eb9dc: movabs $0x10f7eb9dc,%r10  ;   {section_word}
  0x000000010f7eb9e6: push   %r10
  0x000000010f7eb9e8: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7eb9ed: hlt    
  0x000000010f7eb9ee: hlt    
  0x000000010f7eb9ef: hlt    
Decoding compiled method 0x000000010f7eb2d0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010eb4ecf0} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x000000010f7eb440: mov    %eax,-0x14000(%rsp)
  0x000000010f7eb447: push   %rbp
  0x000000010f7eb448: sub    $0x30,%rsp
  0x000000010f7eb44c: movabs $0x10ec3b368,%rdi  ;   {metadata(method data for {method} {0x000000010eb4ecf0} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x000000010f7eb456: mov    0xdc(%rdi),%ebx
  0x000000010f7eb45c: add    $0x8,%ebx
  0x000000010f7eb45f: mov    %ebx,0xdc(%rdi)
  0x000000010f7eb465: movabs $0x10eb4ecf0,%rdi  ;   {metadata({method} {0x000000010eb4ecf0} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x000000010f7eb46f: and    $0x1ff8,%ebx
  0x000000010f7eb475: cmp    $0x0,%ebx
  0x000000010f7eb478: je     0x000000010f7eb58c  ;*aload_0
                                                ; - java.util.HashMap::hash@0 (line 339)

  0x000000010f7eb47e: cmp    $0x0,%rsi
  0x000000010f7eb482: movabs $0x10ec3b368,%rdi  ;   {metadata(method data for {method} {0x000000010eb4ecf0} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x000000010f7eb48c: movabs $0x108,%rbx
  0x000000010f7eb496: jne    0x000000010f7eb4a6
  0x000000010f7eb49c: movabs $0x118,%rbx
  0x000000010f7eb4a6: mov    (%rdi,%rbx,1),%rax
  0x000000010f7eb4aa: lea    0x1(%rax),%rax
  0x000000010f7eb4ae: mov    %rax,(%rdi,%rbx,1)
  0x000000010f7eb4b2: jne    0x000000010f7eb4d2  ;*ifnonnull
                                                ; - java.util.HashMap::hash@1 (line 339)

  0x000000010f7eb4b8: movabs $0x10ec3b368,%rsi  ;   {metadata(method data for {method} {0x000000010eb4ecf0} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x000000010f7eb4c2: incl   0x128(%rsi)
  0x000000010f7eb4c8: mov    $0x0,%esi
  0x000000010f7eb4cd: jmpq   0x000000010f7eb57d  ;*goto
                                                ; - java.util.HashMap::hash@5 (line 339)

  0x000000010f7eb4d2: cmp    (%rsi),%rax        ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; implicit exception: dispatches to 0x000000010f7eb5a3
  0x000000010f7eb4d5: mov    %rsi,%rdi
  0x000000010f7eb4d8: movabs $0x10ec3b368,%rbx  ;   {metadata(method data for {method} {0x000000010eb4ecf0} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x000000010f7eb4e2: mov    0x8(%rdi),%edi
  0x000000010f7eb4e5: shl    $0x3,%rdi
  0x000000010f7eb4e9: cmp    0x148(%rbx),%rdi
  0x000000010f7eb4f0: jne    0x000000010f7eb4ff
  0x000000010f7eb4f2: addq   $0x1,0x150(%rbx)
  0x000000010f7eb4fa: jmpq   0x000000010f7eb565
  0x000000010f7eb4ff: cmp    0x158(%rbx),%rdi
  0x000000010f7eb506: jne    0x000000010f7eb515
  0x000000010f7eb508: addq   $0x1,0x160(%rbx)
  0x000000010f7eb510: jmpq   0x000000010f7eb565
  0x000000010f7eb515: cmpq   $0x0,0x148(%rbx)
  0x000000010f7eb520: jne    0x000000010f7eb539
  0x000000010f7eb522: mov    %rdi,0x148(%rbx)
  0x000000010f7eb529: movq   $0x1,0x150(%rbx)
  0x000000010f7eb534: jmpq   0x000000010f7eb565
  0x000000010f7eb539: cmpq   $0x0,0x158(%rbx)
  0x000000010f7eb544: jne    0x000000010f7eb55d
  0x000000010f7eb546: mov    %rdi,0x158(%rbx)
  0x000000010f7eb54d: movq   $0x1,0x160(%rbx)
  0x000000010f7eb558: jmpq   0x000000010f7eb565
  0x000000010f7eb55d: addq   $0x1,0x140(%rbx)
  0x000000010f7eb565: movabs $0xffffffffffffffff,%rax
  0x000000010f7eb56f: callq  0x000000010f7172e0  ; OopMap{off=308}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ;   {virtual_call}
  0x000000010f7eb574: mov    %rax,%rsi
  0x000000010f7eb577: shr    $0x10,%esi
  0x000000010f7eb57a: xor    %rax,%rsi
  0x000000010f7eb57d: mov    %rsi,%rax
  0x000000010f7eb580: add    $0x30,%rsp
  0x000000010f7eb584: pop    %rbp
  0x000000010f7eb585: test   %eax,-0x8d5048b(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7eb58b: retq   
  0x000000010f7eb58c: mov    %rdi,0x8(%rsp)
  0x000000010f7eb591: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7eb599: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=350}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::hash@-1 (line 339)
                                                ;   {runtime_call}
  0x000000010f7eb59e: jmpq   0x000000010f7eb47e
  0x000000010f7eb5a3: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop off=360}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ;   {runtime_call}
  0x000000010f7eb5a8: nop
  0x000000010f7eb5a9: nop
  0x000000010f7eb5aa: mov    0x2a8(%r15),%rax
  0x000000010f7eb5b1: movabs $0x0,%r10
  0x000000010f7eb5bb: mov    %r10,0x2a8(%r15)
  0x000000010f7eb5c2: movabs $0x0,%r10
  0x000000010f7eb5cc: mov    %r10,0x2b0(%r15)
  0x000000010f7eb5d3: add    $0x30,%rsp
  0x000000010f7eb5d7: pop    %rbp
  0x000000010f7eb5d8: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7eb5dd: hlt    
  0x000000010f7eb5de: hlt    
  0x000000010f7eb5df: hlt    
[Stub Code]
  0x000000010f7eb5e0: nop                       ;   {no_reloc}
  0x000000010f7eb5e1: nop
  0x000000010f7eb5e2: nop
  0x000000010f7eb5e3: nop
  0x000000010f7eb5e4: nop
  0x000000010f7eb5e5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7eb5ef: jmpq   0x000000010f7eb5ef  ;   {runtime_call}
[Exception Handler]
  0x000000010f7eb5f4: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f7eb5f9: mov    %rsp,-0x28(%rsp)
  0x000000010f7eb5fe: sub    $0x80,%rsp
  0x000000010f7eb605: mov    %rax,0x78(%rsp)
  0x000000010f7eb60a: mov    %rcx,0x70(%rsp)
  0x000000010f7eb60f: mov    %rdx,0x68(%rsp)
  0x000000010f7eb614: mov    %rbx,0x60(%rsp)
  0x000000010f7eb619: mov    %rbp,0x50(%rsp)
  0x000000010f7eb61e: mov    %rsi,0x48(%rsp)
  0x000000010f7eb623: mov    %rdi,0x40(%rsp)
  0x000000010f7eb628: mov    %r8,0x38(%rsp)
  0x000000010f7eb62d: mov    %r9,0x30(%rsp)
  0x000000010f7eb632: mov    %r10,0x28(%rsp)
  0x000000010f7eb637: mov    %r11,0x20(%rsp)
  0x000000010f7eb63c: mov    %r12,0x18(%rsp)
  0x000000010f7eb641: mov    %r13,0x10(%rsp)
  0x000000010f7eb646: mov    %r14,0x8(%rsp)
  0x000000010f7eb64b: mov    %r15,(%rsp)
  0x000000010f7eb64f: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7eb659: movabs $0x10f7eb5f9,%rsi  ;   {internal_word}
  0x000000010f7eb663: mov    %rsp,%rdx
  0x000000010f7eb666: and    $0xfffffffffffffff0,%rsp
  0x000000010f7eb66a: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7eb66f: hlt    
[Deopt Handler Code]
  0x000000010f7eb670: movabs $0x10f7eb670,%r10  ;   {section_word}
  0x000000010f7eb67a: push   %r10
  0x000000010f7eb67c: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7eb681: hlt    
  0x000000010f7eb682: hlt    
  0x000000010f7eb683: hlt    
  0x000000010f7eb684: hlt    
  0x000000010f7eb685: hlt    
  0x000000010f7eb686: hlt    
  0x000000010f7eb687: hlt    
Decoding compiled method 0x000000010f7ea910:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ebd0ab0} 'entryFor' '(Ljava/lang/String;)Ljava/io/ExpiringCache$Entry;' in 'java/io/ExpiringCache'
  # this:     rsi:rsi   = 'java/io/ExpiringCache'
  # parm0:    rdx:rdx   = 'java/lang/String'
  #           [sp+0x70]  (sp of caller)
  0x000000010f7eaac0: mov    0x8(%rsi),%r10d
  0x000000010f7eaac4: shl    $0x3,%r10
  0x000000010f7eaac8: cmp    %rax,%r10
  0x000000010f7eaacb: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7eaad1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7eaadc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7eaae0: mov    %eax,-0x14000(%rsp)
  0x000000010f7eaae7: push   %rbp
  0x000000010f7eaae8: sub    $0x60,%rsp
  0x000000010f7eaaec: movabs $0x10ed23850,%rdi  ;   {metadata(method data for {method} {0x000000010ebd0ab0} 'entryFor' '(Ljava/lang/String;)Ljava/io/ExpiringCache$Entry;' in 'java/io/ExpiringCache')}
  0x000000010f7eaaf6: mov    0xdc(%rdi),%ebx
  0x000000010f7eaafc: add    $0x8,%ebx
  0x000000010f7eaaff: mov    %ebx,0xdc(%rdi)
  0x000000010f7eab05: movabs $0x10ebd0ab0,%rdi  ;   {metadata({method} {0x000000010ebd0ab0} 'entryFor' '(Ljava/lang/String;)Ljava/io/ExpiringCache$Entry;' in 'java/io/ExpiringCache')}
  0x000000010f7eab0f: and    $0x1ff8,%ebx
  0x000000010f7eab15: cmp    $0x0,%ebx
  0x000000010f7eab18: je     0x000000010f7eaed5  ;*aload_0
                                                ; - java.io.ExpiringCache::entryFor@0 (line 103)

  0x000000010f7eab1e: mov    0x20(%rsi),%edi
  0x000000010f7eab21: shl    $0x3,%rdi          ;*getfield map
                                                ; - java.io.ExpiringCache::entryFor@1 (line 103)

  0x000000010f7eab25: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x000000010f7eaeec
  0x000000010f7eab28: mov    %rdi,%rbx
  0x000000010f7eab2b: movabs $0x10ed23850,%rax  ;   {metadata(method data for {method} {0x000000010ebd0ab0} 'entryFor' '(Ljava/lang/String;)Ljava/io/ExpiringCache$Entry;' in 'java/io/ExpiringCache')}
  0x000000010f7eab35: mov    0x8(%rbx),%ebx
  0x000000010f7eab38: shl    $0x3,%rbx
  0x000000010f7eab3c: cmp    0x110(%rax),%rbx
  0x000000010f7eab43: jne    0x000000010f7eab52
  0x000000010f7eab45: addq   $0x1,0x118(%rax)
  0x000000010f7eab4d: jmpq   0x000000010f7eabb8
  0x000000010f7eab52: cmp    0x120(%rax),%rbx
  0x000000010f7eab59: jne    0x000000010f7eab68
  0x000000010f7eab5b: addq   $0x1,0x128(%rax)
  0x000000010f7eab63: jmpq   0x000000010f7eabb8
  0x000000010f7eab68: cmpq   $0x0,0x110(%rax)
  0x000000010f7eab73: jne    0x000000010f7eab8c
  0x000000010f7eab75: mov    %rbx,0x110(%rax)
  0x000000010f7eab7c: movq   $0x1,0x118(%rax)
  0x000000010f7eab87: jmpq   0x000000010f7eabb8
  0x000000010f7eab8c: cmpq   $0x0,0x120(%rax)
  0x000000010f7eab97: jne    0x000000010f7eabb0
  0x000000010f7eab99: mov    %rbx,0x120(%rax)
  0x000000010f7eaba0: movq   $0x1,0x128(%rax)
  0x000000010f7eabab: jmpq   0x000000010f7eabb8
  0x000000010f7eabb0: addq   $0x1,0x108(%rax)
  0x000000010f7eabb8: mov    %rdx,%rbx
  0x000000010f7eabbb: mov    %rbx,%rdx
  0x000000010f7eabbe: mov    %rsi,0x40(%rsp)
  0x000000010f7eabc3: mov    %rdi,%rsi          ;*invokeinterface get
                                                ; - java.io.ExpiringCache::entryFor@5 (line 103)

  0x000000010f7eabc6: mov    %rbx,0x48(%rsp)
  0x000000010f7eabcb: nop
  0x000000010f7eabcc: nop
  0x000000010f7eabcd: movabs $0xffffffffffffffff,%rax
  0x000000010f7eabd7: callq  0x000000010f7172e0  ; OopMap{[64]=Oop [72]=Oop off=284}
                                                ;*invokeinterface get
                                                ; - java.io.ExpiringCache::entryFor@5 (line 103)
                                                ;   {virtual_call}
  0x000000010f7eabdc: cmp    $0x0,%rax
  0x000000010f7eabe0: jne    0x000000010f7eabfb
  0x000000010f7eabe2: movabs $0x10ed23850,%rbx  ;   {metadata(method data for {method} {0x000000010ebd0ab0} 'entryFor' '(Ljava/lang/String;)Ljava/io/ExpiringCache$Entry;' in 'java/io/ExpiringCache')}
  0x000000010f7eabec: orl    $0x100,0x130(%rbx)
  0x000000010f7eabf6: jmpq   0x000000010f7eacbb
  0x000000010f7eabfb: movabs $0x7c002c808,%rsi  ;   {metadata('java/io/ExpiringCache$Entry')}
  0x000000010f7eac05: mov    0x8(%rax),%edi
  0x000000010f7eac08: shl    $0x3,%rdi
  0x000000010f7eac0c: cmp    %rdi,%rsi
  0x000000010f7eac0f: jne    0x000000010f7eac9f
  0x000000010f7eac15: movabs $0x10ed23850,%rbx  ;   {metadata(method data for {method} {0x000000010ebd0ab0} 'entryFor' '(Ljava/lang/String;)Ljava/io/ExpiringCache$Entry;' in 'java/io/ExpiringCache')}
  0x000000010f7eac1f: mov    0x8(%rax),%esi
  0x000000010f7eac22: shl    $0x3,%rsi
  0x000000010f7eac26: cmp    0x140(%rbx),%rsi
  0x000000010f7eac2d: jne    0x000000010f7eac3c
  0x000000010f7eac2f: addq   $0x1,0x148(%rbx)
  0x000000010f7eac37: jmpq   0x000000010f7eacbb
  0x000000010f7eac3c: cmp    0x150(%rbx),%rsi
  0x000000010f7eac43: jne    0x000000010f7eac52
  0x000000010f7eac45: addq   $0x1,0x158(%rbx)
  0x000000010f7eac4d: jmpq   0x000000010f7eacbb
  0x000000010f7eac52: cmpq   $0x0,0x140(%rbx)
  0x000000010f7eac5d: jne    0x000000010f7eac76
  0x000000010f7eac5f: mov    %rsi,0x140(%rbx)
  0x000000010f7eac66: movq   $0x1,0x148(%rbx)
  0x000000010f7eac71: jmpq   0x000000010f7eacbb
  0x000000010f7eac76: cmpq   $0x0,0x150(%rbx)
  0x000000010f7eac81: jne    0x000000010f7eac9a
  0x000000010f7eac83: mov    %rsi,0x150(%rbx)
  0x000000010f7eac8a: movq   $0x1,0x158(%rbx)
  0x000000010f7eac95: jmpq   0x000000010f7eacbb
  0x000000010f7eac9a: jmpq   0x000000010f7eacbb
  0x000000010f7eac9f: movabs $0x10ed23850,%rbx  ;   {metadata(method data for {method} {0x000000010ebd0ab0} 'entryFor' '(Ljava/lang/String;)Ljava/io/ExpiringCache$Entry;' in 'java/io/ExpiringCache')}
  0x000000010f7eaca9: subq   $0x1,0x138(%rbx)
  0x000000010f7eacb1: jmpq   0x000000010f7eaef1
  0x000000010f7eacb6: jmpq   0x000000010f7eacbb
  0x000000010f7eacbb: mov    %rax,%rsi          ;*checkcast
                                                ; - java.io.ExpiringCache::entryFor@10 (line 103)

  0x000000010f7eacbe: cmp    $0x0,%rsi
  0x000000010f7eacc2: movabs $0x10ed23850,%rdi  ;   {metadata(method data for {method} {0x000000010ebd0ab0} 'entryFor' '(Ljava/lang/String;)Ljava/io/ExpiringCache$Entry;' in 'java/io/ExpiringCache')}
  0x000000010f7eaccc: movabs $0x168,%rbx
  0x000000010f7eacd6: je     0x000000010f7eace6
  0x000000010f7eacdc: movabs $0x178,%rbx
  0x000000010f7eace6: mov    (%rdi,%rbx,1),%rax
  0x000000010f7eacea: lea    0x1(%rax),%rax
  0x000000010f7eacee: mov    %rax,(%rdi,%rbx,1)
  0x000000010f7eacf2: je     0x000000010f7eaec6  ;*ifnull
                                                ; - java.io.ExpiringCache::entryFor@15 (line 104)

  0x000000010f7eacf8: mov    %rsi,0x50(%rsp)
  0x000000010f7eacfd: movabs $0x10ed23850,%rdi  ;   {metadata(method data for {method} {0x000000010ebd0ab0} 'entryFor' '(Ljava/lang/String;)Ljava/io/ExpiringCache$Entry;' in 'java/io/ExpiringCache')}
  0x000000010f7ead07: addq   $0x1,0x188(%rdi)
  0x000000010f7ead0f: callq  0x000000010948af30  ;*invokestatic currentTimeMillis
                                                ; - java.io.ExpiringCache::entryFor@18 (line 105)
                                                ;   {runtime_call}
  0x000000010f7ead14: mov    0x50(%rsp),%rsi
  0x000000010f7ead19: cmp    (%rsi),%rax        ;*invokevirtual timestamp
                                                ; - java.io.ExpiringCache::entryFor@22 (line 105)
                                                ; implicit exception: dispatches to 0x000000010f7eaefa
  0x000000010f7ead1c: mov    %rsi,%rdx
  0x000000010f7ead1f: movabs $0x10ed23850,%rdi  ;   {metadata(method data for {method} {0x000000010ebd0ab0} 'entryFor' '(Ljava/lang/String;)Ljava/io/ExpiringCache$Entry;' in 'java/io/ExpiringCache')}
  0x000000010f7ead29: addq   $0x1,0x1a8(%rdi)
  0x000000010f7ead31: movabs $0x10ed23cd0,%rdx  ;   {metadata(method data for {method} {0x000000010ebd8270} 'timestamp' '()J' in 'java/io/ExpiringCache$Entry')}
  0x000000010f7ead3b: mov    0xdc(%rdx),%edi
  0x000000010f7ead41: add    $0x8,%edi
  0x000000010f7ead44: mov    %edi,0xdc(%rdx)
  0x000000010f7ead4a: movabs $0x10ebd8270,%rdx  ;   {metadata({method} {0x000000010ebd8270} 'timestamp' '()J' in 'java/io/ExpiringCache$Entry')}
  0x000000010f7ead54: and    $0x7ffff8,%edi
  0x000000010f7ead5a: cmp    $0x0,%edi
  0x000000010f7ead5d: je     0x000000010f7eaeff
  0x000000010f7ead63: mov    0x10(%rsi),%rdx    ;*getfield timestamp
                                                ; - java.io.ExpiringCache$Entry::timestamp@1 (line 53)
                                                ; - java.io.ExpiringCache::entryFor@22 (line 105)

  0x000000010f7ead67: sub    %rdx,%rax
  0x000000010f7ead6a: movabs $0x0,%rdx
  0x000000010f7ead74: mov    %rax,%rdi
  0x000000010f7ead77: cmp    %rdx,%rdi
  0x000000010f7ead7a: movabs $0x10ed23850,%rdx  ;   {metadata(method data for {method} {0x000000010ebd0ab0} 'entryFor' '(Ljava/lang/String;)Ljava/io/ExpiringCache$Entry;' in 'java/io/ExpiringCache')}
  0x000000010f7ead84: movabs $0x1d8,%rdi
  0x000000010f7ead8e: jge    0x000000010f7ead9e
  0x000000010f7ead94: movabs $0x1c8,%rdi
  0x000000010f7ead9e: mov    (%rdx,%rdi,1),%rbx
  0x000000010f7eada2: lea    0x1(%rbx),%rbx
  0x000000010f7eada6: mov    %rbx,(%rdx,%rdi,1)
  0x000000010f7eadaa: jge    0x000000010f7eadbf  ;*lcmp
                                                ; - java.io.ExpiringCache::entryFor@29 (line 106)

  0x000000010f7eadb0: mov    0x48(%rsp),%rsi
  0x000000010f7eadb5: mov    0x40(%rsp),%rdx
  0x000000010f7eadba: jmpq   0x000000010f7eae06  ;*aload_0
                                                ; - java.io.ExpiringCache::entryFor@42 (line 107)

  0x000000010f7eadbf: mov    0x40(%rsp),%rdx
  0x000000010f7eadc4: mov    0x10(%rdx),%rdi    ;*getfield millisUntilExpiration
                                                ; - java.io.ExpiringCache::entryFor@35 (line 106)

  0x000000010f7eadc8: cmp    %rdi,%rax
  0x000000010f7eadcb: movabs $0x10ed23850,%rdi  ;   {metadata(method data for {method} {0x000000010ebd0ab0} 'entryFor' '(Ljava/lang/String;)Ljava/io/ExpiringCache$Entry;' in 'java/io/ExpiringCache')}
  0x000000010f7eadd5: movabs $0x1f8,%rbx
  0x000000010f7eaddf: jge    0x000000010f7eadef
  0x000000010f7eade5: movabs $0x1e8,%rbx
  0x000000010f7eadef: mov    (%rdi,%rbx,1),%rax
  0x000000010f7eadf3: lea    0x1(%rax),%rax
  0x000000010f7eadf7: mov    %rax,(%rdi,%rbx,1)
  0x000000010f7eadfb: jl     0x000000010f7eaec6  ;*lcmp
                                                ; - java.io.ExpiringCache::entryFor@38 (line 106)

  0x000000010f7eae01: mov    0x48(%rsp),%rsi
  0x000000010f7eae06: mov    0x20(%rdx),%edi
  0x000000010f7eae09: shl    $0x3,%rdi          ;*getfield map
                                                ; - java.io.ExpiringCache::entryFor@43 (line 107)

  0x000000010f7eae0d: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x000000010f7eaf16
  0x000000010f7eae10: mov    %rdi,%rdx
  0x000000010f7eae13: movabs $0x10ed23850,%rbx  ;   {metadata(method data for {method} {0x000000010ebd0ab0} 'entryFor' '(Ljava/lang/String;)Ljava/io/ExpiringCache$Entry;' in 'java/io/ExpiringCache')}
  0x000000010f7eae1d: mov    0x8(%rdx),%edx
  0x000000010f7eae20: shl    $0x3,%rdx
  0x000000010f7eae24: cmp    0x210(%rbx),%rdx
  0x000000010f7eae2b: jne    0x000000010f7eae3a
  0x000000010f7eae2d: addq   $0x1,0x218(%rbx)
  0x000000010f7eae35: jmpq   0x000000010f7eaea0
  0x000000010f7eae3a: cmp    0x220(%rbx),%rdx
  0x000000010f7eae41: jne    0x000000010f7eae50
  0x000000010f7eae43: addq   $0x1,0x228(%rbx)
  0x000000010f7eae4b: jmpq   0x000000010f7eaea0
  0x000000010f7eae50: cmpq   $0x0,0x210(%rbx)
  0x000000010f7eae5b: jne    0x000000010f7eae74
  0x000000010f7eae5d: mov    %rdx,0x210(%rbx)
  0x000000010f7eae64: movq   $0x1,0x218(%rbx)
  0x000000010f7eae6f: jmpq   0x000000010f7eaea0
  0x000000010f7eae74: cmpq   $0x0,0x220(%rbx)
  0x000000010f7eae7f: jne    0x000000010f7eae98
  0x000000010f7eae81: mov    %rdx,0x220(%rbx)
  0x000000010f7eae88: movq   $0x1,0x228(%rbx)
  0x000000010f7eae93: jmpq   0x000000010f7eaea0
  0x000000010f7eae98: addq   $0x1,0x208(%rbx)
  0x000000010f7eaea0: mov    %rsi,%rdx
  0x000000010f7eaea3: mov    %rdi,%rsi          ;*invokeinterface remove
                                                ; - java.io.ExpiringCache::entryFor@47 (line 107)

  0x000000010f7eaea6: nop
  0x000000010f7eaea7: nop
  0x000000010f7eaea8: nop
  0x000000010f7eaea9: nop
  0x000000010f7eaeaa: nop
  0x000000010f7eaeab: nop
  0x000000010f7eaeac: nop
  0x000000010f7eaead: movabs $0xffffffffffffffff,%rax
  0x000000010f7eaeb7: callq  0x000000010f7172e0  ; OopMap{off=1020}
                                                ;*invokeinterface remove
                                                ; - java.io.ExpiringCache::entryFor@47 (line 107)
                                                ;   {virtual_call}
  0x000000010f7eaebc: movabs $0x0,%rsi          ;*aload_2
                                                ; - java.io.ExpiringCache::entryFor@55 (line 111)
                                                ;   {oop(NULL)}
  0x000000010f7eaec6: mov    %rsi,%rax
  0x000000010f7eaec9: add    $0x60,%rsp
  0x000000010f7eaecd: pop    %rbp
  0x000000010f7eaece: test   %eax,-0x8d4fdd4(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7eaed4: retq   
  0x000000010f7eaed5: mov    %rdi,0x8(%rsp)
  0x000000010f7eaeda: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7eaee2: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop rdx=Oop off=1063}
                                                ;*synchronization entry
                                                ; - java.io.ExpiringCache::entryFor@-1 (line 103)
                                                ;   {runtime_call}
  0x000000010f7eaee7: jmpq   0x000000010f7eab1e
  0x000000010f7eaeec: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop rdx=Oop rdi=Oop off=1073}
                                                ;*invokeinterface get
                                                ; - java.io.ExpiringCache::entryFor@5 (line 103)
                                                ;   {runtime_call}
  0x000000010f7eaef1: mov    %rax,(%rsp)
  0x000000010f7eaef5: callq  0x000000010f7cf480  ; OopMap{[64]=Oop [72]=Oop off=1082}
                                                ;*checkcast
                                                ; - java.io.ExpiringCache::entryFor@10 (line 103)
                                                ;   {runtime_call}
  0x000000010f7eaefa: callq  0x000000010f7cd0c0  ; OopMap{[64]=Oop [72]=Oop rsi=Oop off=1087}
                                                ;*invokevirtual timestamp
                                                ; - java.io.ExpiringCache::entryFor@22 (line 105)
                                                ;   {runtime_call}
  0x000000010f7eaeff: mov    %rdx,0x8(%rsp)
  0x000000010f7eaf04: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7eaf0c: callq  0x000000010f7d1a20  ; OopMap{[64]=Oop [72]=Oop rsi=Oop off=1105}
                                                ;*synchronization entry
                                                ; - java.io.ExpiringCache$Entry::timestamp@-1 (line 53)
                                                ; - java.io.ExpiringCache::entryFor@22 (line 105)
                                                ;   {runtime_call}
  0x000000010f7eaf11: jmpq   0x000000010f7ead63
  0x000000010f7eaf16: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop rdi=Oop off=1115}
                                                ;*invokeinterface remove
                                                ; - java.io.ExpiringCache::entryFor@47 (line 107)
                                                ;   {runtime_call}
  0x000000010f7eaf1b: nop
  0x000000010f7eaf1c: nop
  0x000000010f7eaf1d: mov    0x2a8(%r15),%rax
  0x000000010f7eaf24: movabs $0x0,%r10
  0x000000010f7eaf2e: mov    %r10,0x2a8(%r15)
  0x000000010f7eaf35: movabs $0x0,%r10
  0x000000010f7eaf3f: mov    %r10,0x2b0(%r15)
  0x000000010f7eaf46: add    $0x60,%rsp
  0x000000010f7eaf4a: pop    %rbp
  0x000000010f7eaf4b: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7eaf50: hlt    
  0x000000010f7eaf51: hlt    
  0x000000010f7eaf52: hlt    
  0x000000010f7eaf53: hlt    
  0x000000010f7eaf54: hlt    
  0x000000010f7eaf55: hlt    
  0x000000010f7eaf56: hlt    
  0x000000010f7eaf57: hlt    
  0x000000010f7eaf58: hlt    
  0x000000010f7eaf59: hlt    
  0x000000010f7eaf5a: hlt    
  0x000000010f7eaf5b: hlt    
  0x000000010f7eaf5c: hlt    
  0x000000010f7eaf5d: hlt    
  0x000000010f7eaf5e: hlt    
  0x000000010f7eaf5f: hlt    
[Stub Code]
  0x000000010f7eaf60: nop                       ;   {no_reloc}
  0x000000010f7eaf61: nop
  0x000000010f7eaf62: nop
  0x000000010f7eaf63: nop
  0x000000010f7eaf64: nop
  0x000000010f7eaf65: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7eaf6f: jmpq   0x000000010f7eaf6f  ;   {runtime_call}
  0x000000010f7eaf74: nop
  0x000000010f7eaf75: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7eaf7f: jmpq   0x000000010f7eaf7f  ;   {runtime_call}
[Exception Handler]
  0x000000010f7eaf84: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f7eaf89: mov    %rsp,-0x28(%rsp)
  0x000000010f7eaf8e: sub    $0x80,%rsp
  0x000000010f7eaf95: mov    %rax,0x78(%rsp)
  0x000000010f7eaf9a: mov    %rcx,0x70(%rsp)
  0x000000010f7eaf9f: mov    %rdx,0x68(%rsp)
  0x000000010f7eafa4: mov    %rbx,0x60(%rsp)
  0x000000010f7eafa9: mov    %rbp,0x50(%rsp)
  0x000000010f7eafae: mov    %rsi,0x48(%rsp)
  0x000000010f7eafb3: mov    %rdi,0x40(%rsp)
  0x000000010f7eafb8: mov    %r8,0x38(%rsp)
  0x000000010f7eafbd: mov    %r9,0x30(%rsp)
  0x000000010f7eafc2: mov    %r10,0x28(%rsp)
  0x000000010f7eafc7: mov    %r11,0x20(%rsp)
  0x000000010f7eafcc: mov    %r12,0x18(%rsp)
  0x000000010f7eafd1: mov    %r13,0x10(%rsp)
  0x000000010f7eafd6: mov    %r14,0x8(%rsp)
  0x000000010f7eafdb: mov    %r15,(%rsp)
  0x000000010f7eafdf: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7eafe9: movabs $0x10f7eaf89,%rsi  ;   {internal_word}
  0x000000010f7eaff3: mov    %rsp,%rdx
  0x000000010f7eaff6: and    $0xfffffffffffffff0,%rsp
  0x000000010f7eaffa: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7eafff: hlt    
[Deopt Handler Code]
  0x000000010f7eb000: movabs $0x10f7eb000,%r10  ;   {section_word}
  0x000000010f7eb00a: push   %r10
  0x000000010f7eb00c: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7eb011: hlt    
  0x000000010f7eb012: hlt    
  0x000000010f7eb013: hlt    
  0x000000010f7eb014: hlt    
  0x000000010f7eb015: hlt    
  0x000000010f7eb016: hlt    
  0x000000010f7eb017: hlt    
Decoding compiled method 0x000000010f7ea390:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ea6a000} 'hashCode' '()I' in 'java/lang/String'
  #           [sp+0x30]  (sp of caller)
  0x000000010f7ea4e0: mov    0x8(%rsi),%r10d
  0x000000010f7ea4e4: shl    $0x3,%r10
  0x000000010f7ea4e8: cmp    %r10,%rax
  0x000000010f7ea4eb: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7ea4f1: data16 xchg %ax,%ax
  0x000000010f7ea4f4: nopl   0x0(%rax,%rax,1)
  0x000000010f7ea4fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7ea500: mov    %eax,-0x14000(%rsp)
  0x000000010f7ea507: push   %rbp
  0x000000010f7ea508: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1466)

  0x000000010f7ea50c: vmovq  %rsi,%xmm0
  0x000000010f7ea511: mov    0x10(%rsi),%eax    ;*getfield hash
                                                ; - java.lang.String::hashCode@1 (line 1466)

  0x000000010f7ea514: test   %eax,%eax
  0x000000010f7ea516: jne    0x000000010f7ea656  ;*ifne
                                                ; - java.lang.String::hashCode@6 (line 1467)

  0x000000010f7ea51c: mov    0xc(%rsi),%ebp     ;*getfield value
                                                ; - java.lang.String::hashCode@10 (line 1467)

  0x000000010f7ea51f: mov    0xc(%r12,%rbp,8),%ebx  ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ; implicit exception: dispatches to 0x000000010f7ea67d
  0x000000010f7ea524: test   %ebx,%ebx
  0x000000010f7ea526: jle    0x000000010f7ea662  ;*ifle
                                                ; - java.lang.String::hashCode@14 (line 1467)

  0x000000010f7ea52c: test   %ebx,%ebx
  0x000000010f7ea52e: jbe    0x000000010f7ea666
  0x000000010f7ea534: mov    %ebx,%r11d
  0x000000010f7ea537: dec    %r11d
  0x000000010f7ea53a: cmp    %ebx,%r11d
  0x000000010f7ea53d: jae    0x000000010f7ea666  ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1471)

  0x000000010f7ea543: movzwl 0x10(%r12,%rbp,8),%ecx  ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x000000010f7ea549: mov    %ebx,%edx
  0x000000010f7ea54b: add    $0xfffffff9,%edx
  0x000000010f7ea54e: mov    %ecx,%eax
  0x000000010f7ea550: shl    $0x5,%eax
  0x000000010f7ea553: lea    (%r12,%rbp,8),%r10
  0x000000010f7ea557: mov    $0x1,%r13d
  0x000000010f7ea55d: mov    $0x80000000,%r8d
  0x000000010f7ea563: cmp    %edx,%r11d
  0x000000010f7ea566: cmovl  %r8d,%edx
  0x000000010f7ea56a: cmp    $0x1,%edx
  0x000000010f7ea56d: jle    0x000000010f7ea642
  0x000000010f7ea573: sub    %ecx,%eax          ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1471)

  0x000000010f7ea575: vmovd  %ebx,%xmm1
  0x000000010f7ea579: jmp    0x000000010f7ea5a2  ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1471)

  0x000000010f7ea57b: movzwl 0x10(%r10,%r13,2),%r11d
  0x000000010f7ea581: sub    %ecx,%eax
  0x000000010f7ea583: add    %r11d,%eax         ;*iadd
                                                ; - java.lang.String::hashCode@40 (line 1471)

  0x000000010f7ea586: inc    %r13d              ;*iinc
                                                ; - java.lang.String::hashCode@42 (line 1470)

  0x000000010f7ea589: cmp    %ebx,%r13d
  0x000000010f7ea58c: jge    0x000000010f7ea64d  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x000000010f7ea592: mov    %eax,%r11d
  0x000000010f7ea595: shl    $0x5,%r11d
  0x000000010f7ea599: mov    %eax,%ecx
  0x000000010f7ea59b: mov    %r11d,%eax
  0x000000010f7ea59e: jmp    0x000000010f7ea57b
  0x000000010f7ea5a0: sub    %ecx,%eax          ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1471)

  0x000000010f7ea5a2: movzwl 0x10(%r10,%r13,2),%r11d
  0x000000010f7ea5a8: add    %r11d,%eax
  0x000000010f7ea5ab: movslq %r13d,%r11
  0x000000010f7ea5ae: movzwl 0x12(%r10,%r11,2),%r14d
  0x000000010f7ea5b4: movzwl 0x1e(%r10,%r11,2),%r8d
  0x000000010f7ea5ba: movzwl 0x1c(%r10,%r11,2),%ecx
  0x000000010f7ea5c0: movzwl 0x1a(%r10,%r11,2),%r9d
  0x000000010f7ea5c6: movzwl 0x18(%r10,%r11,2),%edi
  0x000000010f7ea5cc: movzwl 0x16(%r10,%r11,2),%ebx
  0x000000010f7ea5d2: movzwl 0x14(%r10,%r11,2),%esi
  0x000000010f7ea5d8: mov    %eax,%ebp
  0x000000010f7ea5da: shl    $0x5,%ebp
  0x000000010f7ea5dd: sub    %eax,%ebp
  0x000000010f7ea5df: add    %r14d,%ebp
  0x000000010f7ea5e2: mov    %ebp,%r11d
  0x000000010f7ea5e5: shl    $0x5,%r11d
  0x000000010f7ea5e9: sub    %ebp,%r11d
  0x000000010f7ea5ec: add    %esi,%r11d
  0x000000010f7ea5ef: mov    %r11d,%eax
  0x000000010f7ea5f2: shl    $0x5,%eax
  0x000000010f7ea5f5: sub    %r11d,%eax
  0x000000010f7ea5f8: add    %ebx,%eax
  0x000000010f7ea5fa: mov    %eax,%r11d
  0x000000010f7ea5fd: shl    $0x5,%r11d
  0x000000010f7ea601: sub    %eax,%r11d
  0x000000010f7ea604: add    %edi,%r11d
  0x000000010f7ea607: mov    %r11d,%edi
  0x000000010f7ea60a: shl    $0x5,%edi
  0x000000010f7ea60d: sub    %r11d,%edi
  0x000000010f7ea610: add    %r9d,%edi
  0x000000010f7ea613: mov    %edi,%r11d
  0x000000010f7ea616: shl    $0x5,%r11d
  0x000000010f7ea61a: sub    %edi,%r11d
  0x000000010f7ea61d: add    %ecx,%r11d
  0x000000010f7ea620: mov    %r11d,%ecx
  0x000000010f7ea623: shl    $0x5,%ecx
  0x000000010f7ea626: sub    %r11d,%ecx
  0x000000010f7ea629: add    %r8d,%ecx          ;*iadd
                                                ; - java.lang.String::hashCode@40 (line 1471)

  0x000000010f7ea62c: mov    %ecx,%eax
  0x000000010f7ea62e: shl    $0x5,%eax          ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1471)

  0x000000010f7ea631: add    $0x8,%r13d         ;*iinc
                                                ; - java.lang.String::hashCode@42 (line 1470)

  0x000000010f7ea635: cmp    %edx,%r13d
  0x000000010f7ea638: jl     0x000000010f7ea5a0  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x000000010f7ea63e: vmovd  %xmm1,%ebx
  0x000000010f7ea642: cmp    %ebx,%r13d
  0x000000010f7ea645: jl     0x000000010f7ea57b
  0x000000010f7ea64b: mov    %ecx,%eax
  0x000000010f7ea64d: vmovq  %xmm0,%r10
  0x000000010f7ea652: mov    %eax,0x10(%r10)    ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1466)

  0x000000010f7ea656: add    $0x20,%rsp
  0x000000010f7ea65a: pop    %rbp
  0x000000010f7ea65b: test   %eax,-0x8d4f661(%rip)        # 0x0000000106a9b000
                                                ;   {poll_return}
  0x000000010f7ea661: retq   
  0x000000010f7ea662: xor    %eax,%eax
  0x000000010f7ea664: jmp    0x000000010f7ea656
  0x000000010f7ea666: mov    $0xffffff86,%esi
  0x000000010f7ea66b: vmovsd %xmm0,(%rsp)
  0x000000010f7ea670: data16 xchg %ax,%ax
  0x000000010f7ea673: callq  0x000000010f7166a0  ; OopMap{rbp=NarrowOop [0]=Oop off=408}
                                                ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1471)
                                                ;   {runtime_call}
  0x000000010f7ea678: callq  0x000000010948a904  ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1471)
                                                ;   {runtime_call}
  0x000000010f7ea67d: mov    $0xfffffff6,%esi
  0x000000010f7ea682: nop
  0x000000010f7ea683: callq  0x000000010f7166a0  ; OopMap{off=424}
                                                ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ;   {runtime_call}
  0x000000010f7ea688: callq  0x000000010948a904  ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ;   {runtime_call}
  0x000000010f7ea68d: hlt    
  0x000000010f7ea68e: hlt    
  0x000000010f7ea68f: hlt    
  0x000000010f7ea690: hlt    
  0x000000010f7ea691: hlt    
  0x000000010f7ea692: hlt    
  0x000000010f7ea693: hlt    
  0x000000010f7ea694: hlt    
  0x000000010f7ea695: hlt    
  0x000000010f7ea696: hlt    
  0x000000010f7ea697: hlt    
  0x000000010f7ea698: hlt    
  0x000000010f7ea699: hlt    
  0x000000010f7ea69a: hlt    
  0x000000010f7ea69b: hlt    
  0x000000010f7ea69c: hlt    
  0x000000010f7ea69d: hlt    
  0x000000010f7ea69e: hlt    
  0x000000010f7ea69f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f7ea6a0: jmpq   0x000000010f73fba0  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010f7ea6a5: callq  0x000000010f7ea6aa
  0x000000010f7ea6aa: subq   $0x5,(%rsp)
  0x000000010f7ea6af: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7ea6b4: hlt    
  0x000000010f7ea6b5: hlt    
  0x000000010f7ea6b6: hlt    
  0x000000010f7ea6b7: hlt    
Decoding compiled method 0x000000010f7ef410:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ebd2a20} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/LinkedHashMap'
  # this:     rsi:rsi   = 'java/util/LinkedHashMap'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  #           [sp+0x70]  (sp of caller)
  0x000000010f7ef5c0: mov    0x8(%rsi),%r10d
  0x000000010f7ef5c4: shl    $0x3,%r10
  0x000000010f7ef5c8: cmp    %rax,%r10
  0x000000010f7ef5cb: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7ef5d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7ef5dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7ef5e0: mov    %eax,-0x14000(%rsp)
  0x000000010f7ef5e7: push   %rbp
  0x000000010f7ef5e8: sub    $0x60,%rsp
  0x000000010f7ef5ec: movabs $0x10ed23ad0,%rdi  ;   {metadata(method data for {method} {0x000000010ebd2a20} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/LinkedHashMap')}
  0x000000010f7ef5f6: mov    0xdc(%rdi),%ebx
  0x000000010f7ef5fc: add    $0x8,%ebx
  0x000000010f7ef5ff: mov    %ebx,0xdc(%rdi)
  0x000000010f7ef605: movabs $0x10ebd2a20,%rdi  ;   {metadata({method} {0x000000010ebd2a20} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/LinkedHashMap')}
  0x000000010f7ef60f: and    $0x1ff8,%ebx
  0x000000010f7ef615: cmp    $0x0,%ebx
  0x000000010f7ef618: je     0x000000010f7ef972  ;*aload_0
                                                ; - java.util.LinkedHashMap::get@0 (line 440)

  0x000000010f7ef61e: movabs $0x10ed23ad0,%rdi  ;   {metadata(method data for {method} {0x000000010ebd2a20} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/LinkedHashMap')}
  0x000000010f7ef628: addq   $0x1,0x108(%rdi)
  0x000000010f7ef630: movabs $0x10ec3b368,%rdi  ;   {metadata(method data for {method} {0x000000010eb4ecf0} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x000000010f7ef63a: mov    0xdc(%rdi),%ebx
  0x000000010f7ef640: add    $0x8,%ebx
  0x000000010f7ef643: mov    %ebx,0xdc(%rdi)
  0x000000010f7ef649: movabs $0x10eb4ecf0,%rdi  ;   {metadata({method} {0x000000010eb4ecf0} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x000000010f7ef653: and    $0x7ffff8,%ebx
  0x000000010f7ef659: cmp    $0x0,%ebx
  0x000000010f7ef65c: je     0x000000010f7ef989
  0x000000010f7ef662: cmp    $0x0,%rdx
  0x000000010f7ef666: movabs $0x10ec3b368,%rdi  ;   {metadata(method data for {method} {0x000000010eb4ecf0} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x000000010f7ef670: movabs $0x108,%rbx
  0x000000010f7ef67a: jne    0x000000010f7ef68a
  0x000000010f7ef680: movabs $0x118,%rbx
  0x000000010f7ef68a: mov    (%rdi,%rbx,1),%rax
  0x000000010f7ef68e: lea    0x1(%rax),%rax
  0x000000010f7ef692: mov    %rax,(%rdi,%rbx,1)
  0x000000010f7ef696: jne    0x000000010f7ef6c0  ;*ifnonnull
                                                ; - java.util.HashMap::hash@1 (line 339)
                                                ; - java.util.LinkedHashMap::get@2 (line 440)

  0x000000010f7ef69c: movabs $0x10ec3b368,%rdi  ;   {metadata(method data for {method} {0x000000010eb4ecf0} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x000000010f7ef6a6: incl   0x128(%rdi)
  0x000000010f7ef6ac: mov    $0x0,%edi
  0x000000010f7ef6b1: mov    %rdx,0x48(%rsp)
  0x000000010f7ef6b6: mov    %rsi,0x40(%rsp)
  0x000000010f7ef6bb: jmpq   0x000000010f7ef780  ;*goto
                                                ; - java.util.HashMap::hash@5 (line 339)
                                                ; - java.util.LinkedHashMap::get@2 (line 440)

  0x000000010f7ef6c0: mov    %rsi,0x40(%rsp)
  0x000000010f7ef6c5: cmp    (%rdx),%rax        ; implicit exception: dispatches to 0x000000010f7ef9a0
  0x000000010f7ef6c8: mov    %rdx,%rdi
  0x000000010f7ef6cb: movabs $0x10ec3b368,%rbx  ;   {metadata(method data for {method} {0x000000010eb4ecf0} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x000000010f7ef6d5: mov    0x8(%rdi),%edi
  0x000000010f7ef6d8: shl    $0x3,%rdi
  0x000000010f7ef6dc: cmp    0x148(%rbx),%rdi
  0x000000010f7ef6e3: jne    0x000000010f7ef6f2
  0x000000010f7ef6e5: addq   $0x1,0x150(%rbx)
  0x000000010f7ef6ed: jmpq   0x000000010f7ef758
  0x000000010f7ef6f2: cmp    0x158(%rbx),%rdi
  0x000000010f7ef6f9: jne    0x000000010f7ef708
  0x000000010f7ef6fb: addq   $0x1,0x160(%rbx)
  0x000000010f7ef703: jmpq   0x000000010f7ef758
  0x000000010f7ef708: cmpq   $0x0,0x148(%rbx)
  0x000000010f7ef713: jne    0x000000010f7ef72c
  0x000000010f7ef715: mov    %rdi,0x148(%rbx)
  0x000000010f7ef71c: movq   $0x1,0x150(%rbx)
  0x000000010f7ef727: jmpq   0x000000010f7ef758
  0x000000010f7ef72c: cmpq   $0x0,0x158(%rbx)
  0x000000010f7ef737: jne    0x000000010f7ef750
  0x000000010f7ef739: mov    %rdi,0x158(%rbx)
  0x000000010f7ef740: movq   $0x1,0x160(%rbx)
  0x000000010f7ef74b: jmpq   0x000000010f7ef758
  0x000000010f7ef750: addq   $0x1,0x140(%rbx)
  0x000000010f7ef758: mov    %rdx,%rsi          ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; - java.util.LinkedHashMap::get@2 (line 440)

  0x000000010f7ef75b: mov    %rdx,0x48(%rsp)
  0x000000010f7ef760: nop
  0x000000010f7ef761: nop
  0x000000010f7ef762: nop
  0x000000010f7ef763: nop
  0x000000010f7ef764: nop
  0x000000010f7ef765: movabs $0xffffffffffffffff,%rax
  0x000000010f7ef76f: callq  0x000000010f7172e0  ; OopMap{[64]=Oop [72]=Oop off=436}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; - java.util.LinkedHashMap::get@2 (line 440)
                                                ;   {virtual_call}
  0x000000010f7ef774: mov    %rax,%rdx
  0x000000010f7ef777: shr    $0x10,%edx
  0x000000010f7ef77a: xor    %rax,%rdx
  0x000000010f7ef77d: mov    %rdx,%rdi          ;*ireturn
                                                ; - java.util.HashMap::hash@19 (line 339)
                                                ; - java.util.LinkedHashMap::get@2 (line 440)

  0x000000010f7ef780: mov    0x48(%rsp),%rcx
  0x000000010f7ef785: mov    0x40(%rsp),%rsi
  0x000000010f7ef78a: movabs $0x10ed23ad0,%rdx  ;   {metadata(method data for {method} {0x000000010ebd2a20} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/LinkedHashMap')}
  0x000000010f7ef794: mov    0x8(%rsi),%esi
  0x000000010f7ef797: shl    $0x3,%rsi
  0x000000010f7ef79b: cmp    0x120(%rdx),%rsi
  0x000000010f7ef7a2: jne    0x000000010f7ef7b1
  0x000000010f7ef7a4: addq   $0x1,0x128(%rdx)
  0x000000010f7ef7ac: jmpq   0x000000010f7ef817
  0x000000010f7ef7b1: cmp    0x130(%rdx),%rsi
  0x000000010f7ef7b8: jne    0x000000010f7ef7c7
  0x000000010f7ef7ba: addq   $0x1,0x138(%rdx)
  0x000000010f7ef7c2: jmpq   0x000000010f7ef817
  0x000000010f7ef7c7: cmpq   $0x0,0x120(%rdx)
  0x000000010f7ef7d2: jne    0x000000010f7ef7eb
  0x000000010f7ef7d4: mov    %rsi,0x120(%rdx)
  0x000000010f7ef7db: movq   $0x1,0x128(%rdx)
  0x000000010f7ef7e6: jmpq   0x000000010f7ef817
  0x000000010f7ef7eb: cmpq   $0x0,0x130(%rdx)
  0x000000010f7ef7f6: jne    0x000000010f7ef80f
  0x000000010f7ef7f8: mov    %rsi,0x130(%rdx)
  0x000000010f7ef7ff: movq   $0x1,0x138(%rdx)
  0x000000010f7ef80a: jmpq   0x000000010f7ef817
  0x000000010f7ef80f: addq   $0x1,0x118(%rdx)
  0x000000010f7ef817: mov    %rdi,%rdx
  0x000000010f7ef81a: mov    0x40(%rsp),%rsi    ;*invokevirtual getNode
                                                ; - java.util.LinkedHashMap::get@6 (line 440)

  0x000000010f7ef81f: callq  0x000000010f7170a0  ; OopMap{[64]=Oop off=612}
                                                ;*invokevirtual getNode
                                                ; - java.util.LinkedHashMap::get@6 (line 440)
                                                ;   {optimized virtual_call}
  0x000000010f7ef824: cmp    $0x0,%rax
  0x000000010f7ef828: movabs $0x10ed23ad0,%rdx  ;   {metadata(method data for {method} {0x000000010ebd2a20} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/LinkedHashMap')}
  0x000000010f7ef832: movabs $0x148,%rsi
  0x000000010f7ef83c: jne    0x000000010f7ef84c
  0x000000010f7ef842: movabs $0x158,%rsi
  0x000000010f7ef84c: mov    (%rdx,%rsi,1),%rdi
  0x000000010f7ef850: lea    0x1(%rdi),%rdi
  0x000000010f7ef854: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f7ef858: je     0x000000010f7ef95c  ;*ifnonnull
                                                ; - java.util.LinkedHashMap::get@11 (line 440)

  0x000000010f7ef85e: mov    0x40(%rsp),%rsi
  0x000000010f7ef863: movsbl 0x2c(%rsi),%edx    ;*getfield accessOrder
                                                ; - java.util.LinkedHashMap::get@17 (line 442)

  0x000000010f7ef867: cmp    $0x0,%edx
  0x000000010f7ef86a: movabs $0x10ed23ad0,%rdx  ;   {metadata(method data for {method} {0x000000010ebd2a20} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/LinkedHashMap')}
  0x000000010f7ef874: movabs $0x168,%rdi
  0x000000010f7ef87e: je     0x000000010f7ef88e
  0x000000010f7ef884: movabs $0x178,%rdi
  0x000000010f7ef88e: mov    (%rdx,%rdi,1),%rbx
  0x000000010f7ef892: lea    0x1(%rbx),%rbx
  0x000000010f7ef896: mov    %rbx,(%rdx,%rdi,1)
  0x000000010f7ef89a: je     0x000000010f7ef949  ;*ifeq
                                                ; - java.util.LinkedHashMap::get@20 (line 442)

  0x000000010f7ef8a0: mov    %rsi,%rdx
  0x000000010f7ef8a3: movabs $0x10ed23ad0,%rdi  ;   {metadata(method data for {method} {0x000000010ebd2a20} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/LinkedHashMap')}
  0x000000010f7ef8ad: mov    0x8(%rdx),%edx
  0x000000010f7ef8b0: shl    $0x3,%rdx
  0x000000010f7ef8b4: cmp    0x190(%rdi),%rdx
  0x000000010f7ef8bb: jne    0x000000010f7ef8ca
  0x000000010f7ef8bd: addq   $0x1,0x198(%rdi)
  0x000000010f7ef8c5: jmpq   0x000000010f7ef930
  0x000000010f7ef8ca: cmp    0x1a0(%rdi),%rdx
  0x000000010f7ef8d1: jne    0x000000010f7ef8e0
  0x000000010f7ef8d3: addq   $0x1,0x1a8(%rdi)
  0x000000010f7ef8db: jmpq   0x000000010f7ef930
  0x000000010f7ef8e0: cmpq   $0x0,0x190(%rdi)
  0x000000010f7ef8eb: jne    0x000000010f7ef904
  0x000000010f7ef8ed: mov    %rdx,0x190(%rdi)
  0x000000010f7ef8f4: movq   $0x1,0x198(%rdi)
  0x000000010f7ef8ff: jmpq   0x000000010f7ef930
  0x000000010f7ef904: cmpq   $0x0,0x1a0(%rdi)
  0x000000010f7ef90f: jne    0x000000010f7ef928
  0x000000010f7ef911: mov    %rdx,0x1a0(%rdi)
  0x000000010f7ef918: movq   $0x1,0x1a8(%rdi)
  0x000000010f7ef923: jmpq   0x000000010f7ef930
  0x000000010f7ef928: addq   $0x1,0x188(%rdi)
  0x000000010f7ef930: mov    %rax,%rdx          ;*invokevirtual afterNodeAccess
                                                ; - java.util.LinkedHashMap::get@25 (line 443)

  0x000000010f7ef933: mov    %rax,0x50(%rsp)
  0x000000010f7ef938: nop
  0x000000010f7ef939: nop
  0x000000010f7ef93a: nop
  0x000000010f7ef93b: nop
  0x000000010f7ef93c: nop
  0x000000010f7ef93d: nop
  0x000000010f7ef93e: nop
  0x000000010f7ef93f: callq  0x000000010f7170a0  ; OopMap{[80]=Oop off=900}
                                                ;*invokevirtual afterNodeAccess
                                                ; - java.util.LinkedHashMap::get@25 (line 443)
                                                ;   {optimized virtual_call}
  0x000000010f7ef944: mov    0x50(%rsp),%rax
  0x000000010f7ef949: mov    0x14(%rax),%eax    ; implicit exception: dispatches to 0x000000010f7ef9a5
  0x000000010f7ef94c: shl    $0x3,%rax          ;*getfield value
                                                ; - java.util.LinkedHashMap::get@29 (line 444)

  0x000000010f7ef950: add    $0x60,%rsp
  0x000000010f7ef954: pop    %rbp
  0x000000010f7ef955: test   %eax,-0x8d5485b(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7ef95b: retq                      ;*areturn
                                                ; - java.util.LinkedHashMap::get@32 (line 444)

  0x000000010f7ef95c: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000010f7ef966: add    $0x60,%rsp
  0x000000010f7ef96a: pop    %rbp
  0x000000010f7ef96b: test   %eax,-0x8d54871(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7ef971: retq   
  0x000000010f7ef972: mov    %rdi,0x8(%rsp)
  0x000000010f7ef977: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7ef97f: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop rdx=Oop off=964}
                                                ;*synchronization entry
                                                ; - java.util.LinkedHashMap::get@-1 (line 440)
                                                ;   {runtime_call}
  0x000000010f7ef984: jmpq   0x000000010f7ef61e
  0x000000010f7ef989: mov    %rdi,0x8(%rsp)
  0x000000010f7ef98e: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7ef996: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop rdx=Oop off=987}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::hash@-1 (line 339)
                                                ; - java.util.LinkedHashMap::get@2 (line 440)
                                                ;   {runtime_call}
  0x000000010f7ef99b: jmpq   0x000000010f7ef662
  0x000000010f7ef9a0: callq  0x000000010f7cd0c0  ; OopMap{rdx=Oop [64]=Oop off=997}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; - java.util.LinkedHashMap::get@2 (line 440)
                                                ;   {runtime_call}
  0x000000010f7ef9a5: callq  0x000000010f7cd0c0  ; OopMap{off=1002}
                                                ;*getfield value
                                                ; - java.util.LinkedHashMap::get@29 (line 444)
                                                ;   {runtime_call}
  0x000000010f7ef9aa: nop
  0x000000010f7ef9ab: nop
  0x000000010f7ef9ac: mov    0x2a8(%r15),%rax
  0x000000010f7ef9b3: movabs $0x0,%r10
  0x000000010f7ef9bd: mov    %r10,0x2a8(%r15)
  0x000000010f7ef9c4: movabs $0x0,%r10
  0x000000010f7ef9ce: mov    %r10,0x2b0(%r15)
  0x000000010f7ef9d5: add    $0x60,%rsp
  0x000000010f7ef9d9: pop    %rbp
  0x000000010f7ef9da: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7ef9df: hlt    
[Stub Code]
  0x000000010f7ef9e0: nop                       ;   {no_reloc}
  0x000000010f7ef9e1: nop
  0x000000010f7ef9e2: nop
  0x000000010f7ef9e3: nop
  0x000000010f7ef9e4: nop
  0x000000010f7ef9e5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7ef9ef: jmpq   0x000000010f7ef9ef  ;   {runtime_call}
  0x000000010f7ef9f4: nop
  0x000000010f7ef9f5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7ef9ff: jmpq   0x000000010f7ef9ff  ;   {runtime_call}
  0x000000010f7efa04: nop
  0x000000010f7efa05: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7efa0f: jmpq   0x000000010f7efa0f  ;   {runtime_call}
[Exception Handler]
  0x000000010f7efa14: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f7efa19: mov    %rsp,-0x28(%rsp)
  0x000000010f7efa1e: sub    $0x80,%rsp
  0x000000010f7efa25: mov    %rax,0x78(%rsp)
  0x000000010f7efa2a: mov    %rcx,0x70(%rsp)
  0x000000010f7efa2f: mov    %rdx,0x68(%rsp)
  0x000000010f7efa34: mov    %rbx,0x60(%rsp)
  0x000000010f7efa39: mov    %rbp,0x50(%rsp)
  0x000000010f7efa3e: mov    %rsi,0x48(%rsp)
  0x000000010f7efa43: mov    %rdi,0x40(%rsp)
  0x000000010f7efa48: mov    %r8,0x38(%rsp)
  0x000000010f7efa4d: mov    %r9,0x30(%rsp)
  0x000000010f7efa52: mov    %r10,0x28(%rsp)
  0x000000010f7efa57: mov    %r11,0x20(%rsp)
  0x000000010f7efa5c: mov    %r12,0x18(%rsp)
  0x000000010f7efa61: mov    %r13,0x10(%rsp)
  0x000000010f7efa66: mov    %r14,0x8(%rsp)
  0x000000010f7efa6b: mov    %r15,(%rsp)
  0x000000010f7efa6f: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7efa79: movabs $0x10f7efa19,%rsi  ;   {internal_word}
  0x000000010f7efa83: mov    %rsp,%rdx
  0x000000010f7efa86: and    $0xfffffffffffffff0,%rsp
  0x000000010f7efa8a: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7efa8f: hlt    
[Deopt Handler Code]
  0x000000010f7efa90: movabs $0x10f7efa90,%r10  ;   {section_word}
  0x000000010f7efa9a: push   %r10
  0x000000010f7efa9c: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7efaa1: hlt    
  0x000000010f7efaa2: hlt    
  0x000000010f7efaa3: hlt    
  0x000000010f7efaa4: hlt    
  0x000000010f7efaa5: hlt    
  0x000000010f7efaa6: hlt    
  0x000000010f7efaa7: hlt    
Decoding compiled method 0x000000010f7eef90:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010eb53bf8} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' in 'java/util/HashMap$Node'
  # this:     rsi:rsi   = 'java/util/HashMap$Node'
  # parm0:    rdx       = int
  # parm1:    rcx:rcx   = 'java/lang/Object'
  # parm2:    r8:r8     = 'java/lang/Object'
  # parm3:    r9:r9     = 'java/util/HashMap$Node'
  #           [sp+0x40]  (sp of caller)
  0x000000010f7ef100: mov    0x8(%rsi),%r10d
  0x000000010f7ef104: shl    $0x3,%r10
  0x000000010f7ef108: cmp    %rax,%r10
  0x000000010f7ef10b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7ef111: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7ef11c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7ef120: mov    %eax,-0x14000(%rsp)
  0x000000010f7ef127: push   %rbp
  0x000000010f7ef128: sub    $0x30,%rsp
  0x000000010f7ef12c: movabs $0x10ed24058,%rdi  ;   {metadata(method data for {method} {0x000000010eb53bf8} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' in 'java/util/HashMap$Node')}
  0x000000010f7ef136: mov    0xdc(%rdi),%ebx
  0x000000010f7ef13c: add    $0x8,%ebx
  0x000000010f7ef13f: mov    %ebx,0xdc(%rdi)
  0x000000010f7ef145: movabs $0x10eb53bf8,%rdi  ;   {metadata({method} {0x000000010eb53bf8} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' in 'java/util/HashMap$Node')}
  0x000000010f7ef14f: and    $0x1ff8,%ebx
  0x000000010f7ef155: cmp    $0x0,%ebx
  0x000000010f7ef158: je     0x000000010f7ef1fd  ;*aload_0
                                                ; - java.util.HashMap$Node::<init>@0 (line 285)

  0x000000010f7ef15e: mov    %rsi,%rdi
  0x000000010f7ef161: movabs $0x10ed24058,%rbx  ;   {metadata(method data for {method} {0x000000010eb53bf8} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' in 'java/util/HashMap$Node')}
  0x000000010f7ef16b: addq   $0x1,0x108(%rbx)
  0x000000010f7ef173: movabs $0x10ebdca10,%rdi  ;   {metadata(method data for {method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f7ef17d: mov    0xdc(%rdi),%ebx
  0x000000010f7ef183: add    $0x8,%ebx
  0x000000010f7ef186: mov    %ebx,0xdc(%rdi)
  0x000000010f7ef18c: movabs $0x10ea65480,%rdi  ;   {metadata({method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f7ef196: and    $0x7ffff8,%ebx
  0x000000010f7ef19c: cmp    $0x0,%ebx
  0x000000010f7ef19f: je     0x000000010f7ef214
  0x000000010f7ef1a5: mov    %edx,0xc(%rsi)     ;*putfield hash
                                                ; - java.util.HashMap$Node::<init>@6 (line 286)

  0x000000010f7ef1a8: mov    %rcx,%r10
  0x000000010f7ef1ab: shr    $0x3,%r10
  0x000000010f7ef1af: mov    %r10d,0x10(%rsi)
  0x000000010f7ef1b3: mov    %rsi,%rdi
  0x000000010f7ef1b6: shr    $0x9,%rdi
  0x000000010f7ef1ba: movabs $0x1065b9000,%rbx
  0x000000010f7ef1c4: movb   $0x0,(%rdi,%rbx,1)  ;*putfield key
                                                ; - java.util.HashMap$Node::<init>@11 (line 287)

  0x000000010f7ef1c8: mov    %r8,%r10
  0x000000010f7ef1cb: shr    $0x3,%r10
  0x000000010f7ef1cf: mov    %r10d,0x14(%rsi)
  0x000000010f7ef1d3: mov    %rsi,%rdi
  0x000000010f7ef1d6: shr    $0x9,%rdi
  0x000000010f7ef1da: movb   $0x0,(%rdi,%rbx,1)  ;*putfield value
                                                ; - java.util.HashMap$Node::<init>@16 (line 288)

  0x000000010f7ef1de: mov    %r9,%r10
  0x000000010f7ef1e1: shr    $0x3,%r10
  0x000000010f7ef1e5: mov    %r10d,0x18(%rsi)
  0x000000010f7ef1e9: shr    $0x9,%rsi
  0x000000010f7ef1ed: movb   $0x0,(%rsi,%rbx,1)  ;*putfield next
                                                ; - java.util.HashMap$Node::<init>@22 (line 289)

  0x000000010f7ef1f1: add    $0x30,%rsp
  0x000000010f7ef1f5: pop    %rbp
  0x000000010f7ef1f6: test   %eax,-0x8d540fc(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7ef1fc: retq   
  0x000000010f7ef1fd: mov    %rdi,0x8(%rsp)
  0x000000010f7ef202: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7ef20a: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop rcx=Oop r8=Oop r9=Oop off=271}
                                                ;*synchronization entry
                                                ; - java.util.HashMap$Node::<init>@-1 (line 285)
                                                ;   {runtime_call}
  0x000000010f7ef20f: jmpq   0x000000010f7ef15e
  0x000000010f7ef214: mov    %rdi,0x8(%rsp)
  0x000000010f7ef219: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7ef221: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop rcx=Oop r8=Oop r9=Oop off=294}
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 37)
                                                ; - java.util.HashMap$Node::<init>@1 (line 285)
                                                ;   {runtime_call}
  0x000000010f7ef226: jmpq   0x000000010f7ef1a5
  0x000000010f7ef22b: nop
  0x000000010f7ef22c: nop
  0x000000010f7ef22d: mov    0x2a8(%r15),%rax
  0x000000010f7ef234: movabs $0x0,%r10
  0x000000010f7ef23e: mov    %r10,0x2a8(%r15)
  0x000000010f7ef245: movabs $0x0,%r10
  0x000000010f7ef24f: mov    %r10,0x2b0(%r15)
  0x000000010f7ef256: add    $0x30,%rsp
  0x000000010f7ef25a: pop    %rbp
  0x000000010f7ef25b: jmpq   0x000000010f73f560  ;   {runtime_call}
[Exception Handler]
[Stub Code]
  0x000000010f7ef260: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f7ef265: mov    %rsp,-0x28(%rsp)
  0x000000010f7ef26a: sub    $0x80,%rsp
  0x000000010f7ef271: mov    %rax,0x78(%rsp)
  0x000000010f7ef276: mov    %rcx,0x70(%rsp)
  0x000000010f7ef27b: mov    %rdx,0x68(%rsp)
  0x000000010f7ef280: mov    %rbx,0x60(%rsp)
  0x000000010f7ef285: mov    %rbp,0x50(%rsp)
  0x000000010f7ef28a: mov    %rsi,0x48(%rsp)
  0x000000010f7ef28f: mov    %rdi,0x40(%rsp)
  0x000000010f7ef294: mov    %r8,0x38(%rsp)
  0x000000010f7ef299: mov    %r9,0x30(%rsp)
  0x000000010f7ef29e: mov    %r10,0x28(%rsp)
  0x000000010f7ef2a3: mov    %r11,0x20(%rsp)
  0x000000010f7ef2a8: mov    %r12,0x18(%rsp)
  0x000000010f7ef2ad: mov    %r13,0x10(%rsp)
  0x000000010f7ef2b2: mov    %r14,0x8(%rsp)
  0x000000010f7ef2b7: mov    %r15,(%rsp)
  0x000000010f7ef2bb: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7ef2c5: movabs $0x10f7ef265,%rsi  ;   {internal_word}
  0x000000010f7ef2cf: mov    %rsp,%rdx
  0x000000010f7ef2d2: and    $0xfffffffffffffff0,%rsp
  0x000000010f7ef2d6: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7ef2db: hlt    
[Deopt Handler Code]
  0x000000010f7ef2dc: movabs $0x10f7ef2dc,%r10  ;   {section_word}
  0x000000010f7ef2e6: push   %r10
  0x000000010f7ef2e8: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7ef2ed: hlt    
  0x000000010f7ef2ee: hlt    
  0x000000010f7ef2ef: hlt    
Decoding compiled method 0x000000010f7ee510:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010eaf1f78} 'getPath' '()Ljava/lang/String;' in 'java/net/URL'
  #           [sp+0x40]  (sp of caller)
  0x000000010f7ee660: mov    0x8(%rsi),%r10d
  0x000000010f7ee664: shl    $0x3,%r10
  0x000000010f7ee668: cmp    %rax,%r10
  0x000000010f7ee66b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7ee671: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7ee67c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7ee680: mov    %eax,-0x14000(%rsp)
  0x000000010f7ee687: push   %rbp
  0x000000010f7ee688: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.net.URL::getPath@0 (line 747)

  0x000000010f7ee68c: mov    0x28(%rsi),%eax
  0x000000010f7ee68f: shl    $0x3,%rax          ;*getfield path
                                                ; - java.net.URL::getPath@1 (line 747)

  0x000000010f7ee693: add    $0x30,%rsp
  0x000000010f7ee697: pop    %rbp
  0x000000010f7ee698: test   %eax,-0x8d5359e(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7ee69e: retq   
  0x000000010f7ee69f: nop
  0x000000010f7ee6a0: nop
  0x000000010f7ee6a1: mov    0x2a8(%r15),%rax
  0x000000010f7ee6a8: movabs $0x0,%r10
  0x000000010f7ee6b2: mov    %r10,0x2a8(%r15)
  0x000000010f7ee6b9: movabs $0x0,%r10
  0x000000010f7ee6c3: mov    %r10,0x2b0(%r15)
  0x000000010f7ee6ca: add    $0x30,%rsp
  0x000000010f7ee6ce: pop    %rbp
  0x000000010f7ee6cf: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7ee6d4: hlt    
  0x000000010f7ee6d5: hlt    
  0x000000010f7ee6d6: hlt    
  0x000000010f7ee6d7: hlt    
  0x000000010f7ee6d8: hlt    
  0x000000010f7ee6d9: hlt    
  0x000000010f7ee6da: hlt    
  0x000000010f7ee6db: hlt    
  0x000000010f7ee6dc: hlt    
  0x000000010f7ee6dd: hlt    
  0x000000010f7ee6de: hlt    
  0x000000010f7ee6df: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f7ee6e0: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f7ee6e5: mov    %rsp,-0x28(%rsp)
  0x000000010f7ee6ea: sub    $0x80,%rsp
  0x000000010f7ee6f1: mov    %rax,0x78(%rsp)
  0x000000010f7ee6f6: mov    %rcx,0x70(%rsp)
  0x000000010f7ee6fb: mov    %rdx,0x68(%rsp)
  0x000000010f7ee700: mov    %rbx,0x60(%rsp)
  0x000000010f7ee705: mov    %rbp,0x50(%rsp)
  0x000000010f7ee70a: mov    %rsi,0x48(%rsp)
  0x000000010f7ee70f: mov    %rdi,0x40(%rsp)
  0x000000010f7ee714: mov    %r8,0x38(%rsp)
  0x000000010f7ee719: mov    %r9,0x30(%rsp)
  0x000000010f7ee71e: mov    %r10,0x28(%rsp)
  0x000000010f7ee723: mov    %r11,0x20(%rsp)
  0x000000010f7ee728: mov    %r12,0x18(%rsp)
  0x000000010f7ee72d: mov    %r13,0x10(%rsp)
  0x000000010f7ee732: mov    %r14,0x8(%rsp)
  0x000000010f7ee737: mov    %r15,(%rsp)
  0x000000010f7ee73b: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7ee745: movabs $0x10f7ee6e5,%rsi  ;   {internal_word}
  0x000000010f7ee74f: mov    %rsp,%rdx
  0x000000010f7ee752: and    $0xfffffffffffffff0,%rsp
  0x000000010f7ee756: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7ee75b: hlt    
[Deopt Handler Code]
  0x000000010f7ee75c: movabs $0x10f7ee75c,%r10  ;   {section_word}
  0x000000010f7ee766: push   %r10
  0x000000010f7ee768: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7ee76d: hlt    
  0x000000010f7ee76e: hlt    
  0x000000010f7ee76f: hlt    
Decoding compiled method 0x000000010f7ed750:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010eadae38} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder'
  # this:     rsi:rsi   = 'java/lang/AbstractStringBuilder'
  # parm0:    rdx:rdx   = 'java/lang/String'
  #           [sp+0xf0]  (sp of caller)
  0x000000010f7ed920: mov    0x8(%rsi),%r10d
  0x000000010f7ed924: shl    $0x3,%r10
  0x000000010f7ed928: cmp    %rax,%r10
  0x000000010f7ed92b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7ed931: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7ed93c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7ed940: mov    %eax,-0x14000(%rsp)
  0x000000010f7ed947: push   %rbp
  0x000000010f7ed948: sub    $0xe0,%rsp
  0x000000010f7ed94f: mov    %rsi,0xb8(%rsp)
  0x000000010f7ed957: movabs $0x10ec7ff00,%rdi  ;   {metadata(method data for {method} {0x000000010eadae38} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x000000010f7ed961: mov    0xdc(%rdi),%ebx
  0x000000010f7ed967: add    $0x8,%ebx
  0x000000010f7ed96a: mov    %ebx,0xdc(%rdi)
  0x000000010f7ed970: movabs $0x10eadae38,%rdi  ;   {metadata({method} {0x000000010eadae38} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x000000010f7ed97a: and    $0x1ff8,%ebx
  0x000000010f7ed980: cmp    $0x0,%ebx
  0x000000010f7ed983: je     0x000000010f7edeb3  ;*aload_1
                                                ; - java.lang.AbstractStringBuilder::append@0 (line 445)

  0x000000010f7ed989: cmp    $0x0,%rdx
  0x000000010f7ed98d: movabs $0x10ec7ff00,%rdi  ;   {metadata(method data for {method} {0x000000010eadae38} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x000000010f7ed997: movabs $0x108,%rbx
  0x000000010f7ed9a1: jne    0x000000010f7ed9b1
  0x000000010f7ed9a7: movabs $0x118,%rbx
  0x000000010f7ed9b1: mov    (%rdi,%rbx,1),%rax
  0x000000010f7ed9b5: lea    0x1(%rax),%rax
  0x000000010f7ed9b9: mov    %rax,(%rdi,%rbx,1)
  0x000000010f7ed9bd: je     0x000000010f7ede83  ;*ifnonnull
                                                ; - java.lang.AbstractStringBuilder::append@1 (line 445)

  0x000000010f7ed9c3: cmp    (%rdx),%rax        ;*invokevirtual length
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; implicit exception: dispatches to 0x000000010f7edeca
  0x000000010f7ed9c6: mov    %rdx,%rdi
  0x000000010f7ed9c9: movabs $0x10ec7ff00,%rbx  ;   {metadata(method data for {method} {0x000000010eadae38} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x000000010f7ed9d3: mov    0x8(%rdi),%edi
  0x000000010f7ed9d6: shl    $0x3,%rdi
  0x000000010f7ed9da: cmp    0x140(%rbx),%rdi
  0x000000010f7ed9e1: jne    0x000000010f7ed9f0
  0x000000010f7ed9e3: addq   $0x1,0x148(%rbx)
  0x000000010f7ed9eb: jmpq   0x000000010f7eda56
  0x000000010f7ed9f0: cmp    0x150(%rbx),%rdi
  0x000000010f7ed9f7: jne    0x000000010f7eda06
  0x000000010f7ed9f9: addq   $0x1,0x158(%rbx)
  0x000000010f7eda01: jmpq   0x000000010f7eda56
  0x000000010f7eda06: cmpq   $0x0,0x140(%rbx)
  0x000000010f7eda11: jne    0x000000010f7eda2a
  0x000000010f7eda13: mov    %rdi,0x140(%rbx)
  0x000000010f7eda1a: movq   $0x1,0x148(%rbx)
  0x000000010f7eda25: jmpq   0x000000010f7eda56
  0x000000010f7eda2a: cmpq   $0x0,0x150(%rbx)
  0x000000010f7eda35: jne    0x000000010f7eda4e
  0x000000010f7eda37: mov    %rdi,0x150(%rbx)
  0x000000010f7eda3e: movq   $0x1,0x158(%rbx)
  0x000000010f7eda49: jmpq   0x000000010f7eda56
  0x000000010f7eda4e: addq   $0x1,0x138(%rbx)
  0x000000010f7eda56: movabs $0x10ec39558,%rdi  ;   {metadata(method data for {method} {0x000000010ea68c60} 'length' '()I' in 'java/lang/String')}
  0x000000010f7eda60: mov    0xdc(%rdi),%ebx
  0x000000010f7eda66: add    $0x8,%ebx
  0x000000010f7eda69: mov    %ebx,0xdc(%rdi)
  0x000000010f7eda6f: movabs $0x10ea68c60,%rdi  ;   {metadata({method} {0x000000010ea68c60} 'length' '()I' in 'java/lang/String')}
  0x000000010f7eda79: and    $0x7ffff8,%ebx
  0x000000010f7eda7f: cmp    $0x0,%ebx
  0x000000010f7eda82: je     0x000000010f7edecf
  0x000000010f7eda88: mov    0xc(%rdx),%edi
  0x000000010f7eda8b: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)

  0x000000010f7eda8f: mov    0xc(%rdi),%edi     ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; implicit exception: dispatches to 0x000000010f7edee6
  0x000000010f7eda92: mov    %edi,0xac(%rsp)
  0x000000010f7eda99: mov    0xc(%rsi),%ebx     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 448)

  0x000000010f7eda9c: add    %edi,%ebx
  0x000000010f7eda9e: mov    %rsi,%rax
  0x000000010f7edaa1: movabs $0x10ec7ff00,%rcx  ;   {metadata(method data for {method} {0x000000010eadae38} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x000000010f7edaab: addq   $0x1,0x168(%rcx)
  0x000000010f7edab3: movabs $0x10ec7a878,%rax  ;   {metadata(method data for {method} {0x000000010eada4e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f7edabd: mov    0xdc(%rax),%ecx
  0x000000010f7edac3: add    $0x8,%ecx
  0x000000010f7edac6: mov    %ecx,0xdc(%rax)
  0x000000010f7edacc: movabs $0x10eada4e0,%rax  ;   {metadata({method} {0x000000010eada4e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f7edad6: and    $0x7ffff8,%ecx
  0x000000010f7edadc: cmp    $0x0,%ecx
  0x000000010f7edadf: je     0x000000010f7edeeb
  0x000000010f7edae5: mov    0x10(%rsi),%eax
  0x000000010f7edae8: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010f7edaec: mov    0xc(%rax),%ecx     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; implicit exception: dispatches to 0x000000010f7edf02
  0x000000010f7edaef: mov    %rbx,%r8
  0x000000010f7edaf2: sub    %ecx,%r8d
  0x000000010f7edaf5: cmp    $0x0,%r8d
  0x000000010f7edaf9: movabs $0x10ec7a878,%r8   ;   {metadata(method data for {method} {0x000000010eada4e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f7edb03: movabs $0x108,%r9
  0x000000010f7edb0d: jle    0x000000010f7edb1d
  0x000000010f7edb13: movabs $0x118,%r9
  0x000000010f7edb1d: mov    (%r8,%r9,1),%r11
  0x000000010f7edb21: lea    0x1(%r11),%r11
  0x000000010f7edb25: mov    %r11,(%r8,%r9,1)
  0x000000010f7edb29: jg     0x000000010f7edb3c  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010f7edb2f: mov    %rdx,0xc0(%rsp)
  0x000000010f7edb37: jmpq   0x000000010f7edd9b  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010f7edb3c: mov    %ecx,0xa8(%rsp)
  0x000000010f7edb43: mov    %rax,0xb0(%rsp)
  0x000000010f7edb4b: mov    %rdx,0xc0(%rsp)
  0x000000010f7edb53: mov    %rsi,%r8
  0x000000010f7edb56: movabs $0x10ec7a878,%r9   ;   {metadata(method data for {method} {0x000000010eada4e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f7edb60: addq   $0x1,0x128(%r9)
  0x000000010f7edb68: mov    %rbx,%rdx
  0x000000010f7edb6b: mov    %rsi,%rbx
  0x000000010f7edb6e: mov    %rbx,%rsi          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010f7edb71: nop
  0x000000010f7edb72: nop
  0x000000010f7edb73: nop
  0x000000010f7edb74: nop
  0x000000010f7edb75: nop
  0x000000010f7edb76: nop
  0x000000010f7edb77: callq  0x000000010f7170a0  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=604}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {optimized virtual_call}
  0x000000010f7edb7c: mov    %rax,%r8           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010f7edb7f: movabs $0x10ec7a878,%rbx  ;   {metadata(method data for {method} {0x000000010eada4e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f7edb89: addq   $0x1,0x138(%rbx)
  0x000000010f7edb91: movabs $0x10ec8c690,%rbx  ;   {metadata(method data for {method} {0x000000010eb7ff20} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x000000010f7edb9b: mov    0xdc(%rbx),%edx
  0x000000010f7edba1: add    $0x8,%edx
  0x000000010f7edba4: mov    %edx,0xdc(%rbx)
  0x000000010f7edbaa: movabs $0x10eb7ff20,%rbx  ;   {metadata({method} {0x000000010eb7ff20} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x000000010f7edbb4: and    $0x7ffff8,%edx
  0x000000010f7edbba: cmp    $0x0,%edx
  0x000000010f7edbbd: je     0x000000010f7edf07
  0x000000010f7edbc3: mov    %r8,%rbx
  0x000000010f7edbc6: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000000010f7edbd0: movslq %ebx,%rbx
  0x000000010f7edbd3: mov    %rbx,%rdi
  0x000000010f7edbd6: cmp    $0xffffff,%rbx
  0x000000010f7edbdd: ja     0x000000010f7edf1e
  0x000000010f7edbe3: movabs $0x17,%rsi
  0x000000010f7edbed: lea    (%rsi,%rbx,2),%rsi
  0x000000010f7edbf1: and    $0xfffffffffffffff8,%rsi
  0x000000010f7edbf5: mov    0x60(%r15),%rax
  0x000000010f7edbf9: lea    (%rax,%rsi,1),%rsi
  0x000000010f7edbfd: cmp    0x70(%r15),%rsi
  0x000000010f7edc01: ja     0x000000010f7edf1e
  0x000000010f7edc07: mov    %rsi,0x60(%r15)
  0x000000010f7edc0b: sub    %rax,%rsi
  0x000000010f7edc0e: movq   $0x1,(%rax)
  0x000000010f7edc15: mov    %rdx,%rcx
  0x000000010f7edc18: shr    $0x3,%rcx
  0x000000010f7edc1c: mov    %ecx,0x8(%rax)
  0x000000010f7edc1f: mov    %ebx,0xc(%rax)
  0x000000010f7edc22: sub    $0x10,%rsi
  0x000000010f7edc26: je     0x000000010f7edc3d
  0x000000010f7edc2c: xor    %rbx,%rbx
  0x000000010f7edc2f: shr    $0x3,%rsi
  0x000000010f7edc33: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000010f7edc38: dec    %rsi
  0x000000010f7edc3b: jne    0x000000010f7edc33  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010f7edc3d: movabs $0x10ec8c690,%rsi  ;   {metadata(method data for {method} {0x000000010eb7ff20} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x000000010f7edc47: addq   $0x1,0x108(%rsi)
  0x000000010f7edc4f: movabs $0x10ec2f708,%rsi  ;   {metadata(method data for {method} {0x000000010eb5b7d8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010f7edc59: mov    0xdc(%rsi),%edx
  0x000000010f7edc5f: add    $0x8,%edx
  0x000000010f7edc62: mov    %edx,0xdc(%rsi)
  0x000000010f7edc68: movabs $0x10eb5b7d8,%rsi  ;   {metadata({method} {0x000000010eb5b7d8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010f7edc72: and    $0x7ffff8,%edx
  0x000000010f7edc78: cmp    $0x0,%edx
  0x000000010f7edc7b: je     0x000000010f7edf28
  0x000000010f7edc81: mov    0xa8(%rsp),%ecx
  0x000000010f7edc88: cmp    %r8d,%ecx
  0x000000010f7edc8b: movabs $0x10ec2f708,%rsi  ;   {metadata(method data for {method} {0x000000010eb5b7d8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010f7edc95: movabs $0x108,%rdx
  0x000000010f7edc9f: jg     0x000000010f7edcaf
  0x000000010f7edca5: movabs $0x118,%rdx
  0x000000010f7edcaf: mov    (%rsi,%rdx,1),%r9
  0x000000010f7edcb3: lea    0x1(%r9),%r9
  0x000000010f7edcb7: mov    %r9,(%rsi,%rdx,1)
  0x000000010f7edcbb: jg     0x000000010f7edcd9  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010f7edcc1: movabs $0x10ec2f708,%rsi  ;   {metadata(method data for {method} {0x000000010eb5b7d8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010f7edccb: incl   0x128(%rsi)
  0x000000010f7edcd1: mov    %rcx,%r9
  0x000000010f7edcd4: jmpq   0x000000010f7edcdc  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010f7edcd9: mov    %r8,%r9            ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010f7edcdc: mov    0xb0(%rsp),%rsi
  0x000000010f7edce4: movabs $0x10ec8c690,%rdx  ;   {metadata(method data for {method} {0x000000010eb7ff20} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x000000010f7edcee: addq   $0x1,0x118(%rdx)
  0x000000010f7edcf6: mov    $0x0,%edx
  0x000000010f7edcfb: mov    %rax,%rcx
  0x000000010f7edcfe: mov    $0x0,%r8d
  0x000000010f7edd04: mov    %rax,0xc8(%rsp)
  0x000000010f7edd0c: lea    (%rdx,%r9,1),%rdi
  0x000000010f7edd10: cmp    0xc(%rsi),%edi
  0x000000010f7edd13: ja     0x000000010f7edf3f
  0x000000010f7edd19: lea    (%r8,%r9,1),%rdi
  0x000000010f7edd1d: cmp    0xc(%rcx),%edi
  0x000000010f7edd20: ja     0x000000010f7edf3f
  0x000000010f7edd26: test   %r9d,%r9d
  0x000000010f7edd29: jl     0x000000010f7edf3f
  0x000000010f7edd2f: je     0x000000010f7edd6b
  0x000000010f7edd35: movslq %edx,%rdx
  0x000000010f7edd38: movslq %r8d,%r8
  0x000000010f7edd3b: lea    0x10(%rsi,%rdx,2),%rdi
  0x000000010f7edd40: lea    0x10(%rcx,%r8,2),%rsi
  0x000000010f7edd45: mov    %r9,%rdx
  0x000000010f7edd48: test   $0xf,%esp
  0x000000010f7edd4e: je     0x000000010f7edd66
  0x000000010f7edd54: sub    $0x8,%rsp
  0x000000010f7edd58: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x000000010f7edd5d: add    $0x8,%rsp
  0x000000010f7edd61: jmpq   0x000000010f7edd6b
  0x000000010f7edd66: callq  Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x000000010f7edd6b: mov    0xc8(%rsp),%rax
  0x000000010f7edd73: mov    0xb8(%rsp),%rsi
  0x000000010f7edd7b: mov    %rax,%r10
  0x000000010f7edd7e: shr    $0x3,%r10
  0x000000010f7edd82: mov    %r10d,0x10(%rsi)
  0x000000010f7edd86: mov    %rsi,%rdx
  0x000000010f7edd89: shr    $0x9,%rdx
  0x000000010f7edd8d: movabs $0x1065b9000,%rcx
  0x000000010f7edd97: movb   $0x0,(%rdx,%rcx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010f7edd9b: mov    0xac(%rsp),%ebx
  0x000000010f7edda2: mov    0xc0(%rsp),%rdi
  0x000000010f7eddaa: mov    0x10(%rsi),%r8d
  0x000000010f7eddae: shl    $0x3,%r8           ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@28 (line 449)

  0x000000010f7eddb2: mov    0xc(%rsi),%r9d     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@32 (line 449)

  0x000000010f7eddb6: mov    %rdi,%rdx
  0x000000010f7eddb9: movabs $0x10ec7ff00,%rcx  ;   {metadata(method data for {method} {0x000000010eadae38} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x000000010f7eddc3: mov    0x8(%rdx),%edx
  0x000000010f7eddc6: shl    $0x3,%rdx
  0x000000010f7eddca: cmp    0x180(%rcx),%rdx
  0x000000010f7eddd1: jne    0x000000010f7edde0
  0x000000010f7eddd3: addq   $0x1,0x188(%rcx)
  0x000000010f7edddb: jmpq   0x000000010f7ede46
  0x000000010f7edde0: cmp    0x190(%rcx),%rdx
  0x000000010f7edde7: jne    0x000000010f7eddf6
  0x000000010f7edde9: addq   $0x1,0x198(%rcx)
  0x000000010f7eddf1: jmpq   0x000000010f7ede46
  0x000000010f7eddf6: cmpq   $0x0,0x180(%rcx)
  0x000000010f7ede01: jne    0x000000010f7ede1a
  0x000000010f7ede03: mov    %rdx,0x180(%rcx)
  0x000000010f7ede0a: movq   $0x1,0x188(%rcx)
  0x000000010f7ede15: jmpq   0x000000010f7ede46
  0x000000010f7ede1a: cmpq   $0x0,0x190(%rcx)
  0x000000010f7ede25: jne    0x000000010f7ede3e
  0x000000010f7ede27: mov    %rdx,0x190(%rcx)
  0x000000010f7ede2e: movq   $0x1,0x198(%rcx)
  0x000000010f7ede39: jmpq   0x000000010f7ede46
  0x000000010f7ede3e: addq   $0x1,0x178(%rcx)
  0x000000010f7ede46: mov    $0x0,%edx
  0x000000010f7ede4b: mov    %rbx,%rcx
  0x000000010f7ede4e: mov    %rdi,%rsi          ;*invokevirtual getChars
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)

  0x000000010f7ede51: nop
  0x000000010f7ede52: nop
  0x000000010f7ede53: nop
  0x000000010f7ede54: nop
  0x000000010f7ede55: nop
  0x000000010f7ede56: nop
  0x000000010f7ede57: callq  0x000000010f7170a0  ; OopMap{[184]=Oop off=1340}
                                                ;*invokevirtual getChars
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ;   {optimized virtual_call}
  0x000000010f7ede5c: mov    0xb8(%rsp),%rsi
  0x000000010f7ede64: mov    0xc(%rsi),%eax     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@40 (line 450)

  0x000000010f7ede67: add    0xac(%rsp),%eax
  0x000000010f7ede6e: mov    %eax,0xc(%rsi)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@45 (line 450)

  0x000000010f7ede71: mov    %rsi,%rax
  0x000000010f7ede74: add    $0xe0,%rsp
  0x000000010f7ede7b: pop    %rbp
  0x000000010f7ede7c: test   %eax,-0x8d52d82(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7ede82: retq                      ;*areturn
                                                ; - java.lang.AbstractStringBuilder::append@49 (line 451)

  0x000000010f7ede83: mov    %rsi,%rdi
  0x000000010f7ede86: movabs $0x10ec7ff00,%rbx  ;   {metadata(method data for {method} {0x000000010eadae38} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x000000010f7ede90: addq   $0x1,0x128(%rbx)
  0x000000010f7ede98: nop
  0x000000010f7ede99: nop
  0x000000010f7ede9a: nop
  0x000000010f7ede9b: nop
  0x000000010f7ede9c: nop
  0x000000010f7ede9d: nop
  0x000000010f7ede9e: nop
  0x000000010f7ede9f: callq  0x000000010f7170a0  ; OopMap{off=1412}
                                                ;*invokespecial appendNull
                                                ; - java.lang.AbstractStringBuilder::append@5 (line 446)
                                                ;   {optimized virtual_call}
  0x000000010f7edea4: add    $0xe0,%rsp
  0x000000010f7edeab: pop    %rbp
  0x000000010f7edeac: test   %eax,-0x8d52db2(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7edeb2: retq   
  0x000000010f7edeb3: mov    %rdi,0x8(%rsp)
  0x000000010f7edeb8: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7edec0: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [184]=Oop rdx=Oop off=1445}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 445)
                                                ;   {runtime_call}
  0x000000010f7edec5: jmpq   0x000000010f7ed989
  0x000000010f7edeca: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop [184]=Oop rdx=Oop off=1455}
                                                ;*invokevirtual length
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x000000010f7edecf: mov    %rdi,0x8(%rsp)
  0x000000010f7eded4: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7ededc: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [184]=Oop rdx=Oop off=1473}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x000000010f7edee1: jmpq   0x000000010f7eda88
  0x000000010f7edee6: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop [184]=Oop rdx=Oop off=1483}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x000000010f7edeeb: mov    %rax,0x8(%rsp)
  0x000000010f7edef0: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7edef8: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [184]=Oop rdx=Oop off=1501}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x000000010f7edefd: jmpq   0x000000010f7edae5
  0x000000010f7edf02: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop [184]=Oop rdx=Oop rax=Oop off=1511}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x000000010f7edf07: mov    %rbx,0x8(%rsp)
  0x000000010f7edf0c: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7edf14: callq  0x000000010f7d1a20  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=1529}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x000000010f7edf19: jmpq   0x000000010f7edbc3
  0x000000010f7edf1e: callq  0x000000010f7ce120  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=1539}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x000000010f7edf23: jmpq   0x000000010f7edc3d
  0x000000010f7edf28: mov    %rsi,0x8(%rsp)
  0x000000010f7edf2d: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7edf35: callq  0x000000010f7d1a20  ; OopMap{[184]=Oop [192]=Oop [176]=Oop rax=Oop off=1562}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x000000010f7edf3a: jmpq   0x000000010f7edc81
  0x000000010f7edf3f: callq  0x000000010f717520  ; OopMap{[184]=Oop [192]=Oop [200]=Oop off=1572}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {static_call}
  0x000000010f7edf44: jmpq   0x000000010f7edd6b
  0x000000010f7edf49: nop
  0x000000010f7edf4a: nop
  0x000000010f7edf4b: mov    0x2a8(%r15),%rax
  0x000000010f7edf52: movabs $0x0,%r10
  0x000000010f7edf5c: mov    %r10,0x2a8(%r15)
  0x000000010f7edf63: movabs $0x0,%r10
  0x000000010f7edf6d: mov    %r10,0x2b0(%r15)
  0x000000010f7edf74: add    $0xe0,%rsp
  0x000000010f7edf7b: pop    %rbp
  0x000000010f7edf7c: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7edf81: hlt    
  0x000000010f7edf82: hlt    
  0x000000010f7edf83: hlt    
  0x000000010f7edf84: hlt    
  0x000000010f7edf85: hlt    
  0x000000010f7edf86: hlt    
  0x000000010f7edf87: hlt    
  0x000000010f7edf88: hlt    
  0x000000010f7edf89: hlt    
  0x000000010f7edf8a: hlt    
  0x000000010f7edf8b: hlt    
  0x000000010f7edf8c: hlt    
  0x000000010f7edf8d: hlt    
  0x000000010f7edf8e: hlt    
  0x000000010f7edf8f: hlt    
  0x000000010f7edf90: hlt    
  0x000000010f7edf91: hlt    
  0x000000010f7edf92: hlt    
  0x000000010f7edf93: hlt    
  0x000000010f7edf94: hlt    
  0x000000010f7edf95: hlt    
  0x000000010f7edf96: hlt    
  0x000000010f7edf97: hlt    
  0x000000010f7edf98: hlt    
  0x000000010f7edf99: hlt    
  0x000000010f7edf9a: hlt    
  0x000000010f7edf9b: hlt    
  0x000000010f7edf9c: hlt    
  0x000000010f7edf9d: hlt    
  0x000000010f7edf9e: hlt    
  0x000000010f7edf9f: hlt    
[Stub Code]
  0x000000010f7edfa0: nop                       ;   {no_reloc}
  0x000000010f7edfa1: nop
  0x000000010f7edfa2: nop
  0x000000010f7edfa3: nop
  0x000000010f7edfa4: nop
  0x000000010f7edfa5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7edfaf: jmpq   0x000000010f7edfaf  ;   {runtime_call}
  0x000000010f7edfb4: nop
  0x000000010f7edfb5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7edfbf: jmpq   0x000000010f7edfbf  ;   {runtime_call}
  0x000000010f7edfc4: nop
  0x000000010f7edfc5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7edfcf: jmpq   0x000000010f7edfcf  ;   {runtime_call}
  0x000000010f7edfd4: nop
  0x000000010f7edfd5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7edfdf: jmpq   0x000000010f7edfdf  ;   {runtime_call}
[Exception Handler]
  0x000000010f7edfe4: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f7edfe9: mov    %rsp,-0x28(%rsp)
  0x000000010f7edfee: sub    $0x80,%rsp
  0x000000010f7edff5: mov    %rax,0x78(%rsp)
  0x000000010f7edffa: mov    %rcx,0x70(%rsp)
  0x000000010f7edfff: mov    %rdx,0x68(%rsp)
  0x000000010f7ee004: mov    %rbx,0x60(%rsp)
  0x000000010f7ee009: mov    %rbp,0x50(%rsp)
  0x000000010f7ee00e: mov    %rsi,0x48(%rsp)
  0x000000010f7ee013: mov    %rdi,0x40(%rsp)
  0x000000010f7ee018: mov    %r8,0x38(%rsp)
  0x000000010f7ee01d: mov    %r9,0x30(%rsp)
  0x000000010f7ee022: mov    %r10,0x28(%rsp)
  0x000000010f7ee027: mov    %r11,0x20(%rsp)
  0x000000010f7ee02c: mov    %r12,0x18(%rsp)
  0x000000010f7ee031: mov    %r13,0x10(%rsp)
  0x000000010f7ee036: mov    %r14,0x8(%rsp)
  0x000000010f7ee03b: mov    %r15,(%rsp)
  0x000000010f7ee03f: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7ee049: movabs $0x10f7edfe9,%rsi  ;   {internal_word}
  0x000000010f7ee053: mov    %rsp,%rdx
  0x000000010f7ee056: and    $0xfffffffffffffff0,%rsp
  0x000000010f7ee05a: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7ee05f: hlt    
[Deopt Handler Code]
  0x000000010f7ee060: movabs $0x10f7ee060,%r10  ;   {section_word}
  0x000000010f7ee06a: push   %r10
  0x000000010f7ee06c: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7ee071: hlt    
  0x000000010f7ee072: hlt    
  0x000000010f7ee073: hlt    
  0x000000010f7ee074: hlt    
  0x000000010f7ee075: hlt    
  0x000000010f7ee076: hlt    
  0x000000010f7ee077: hlt    
Decoding compiled method 0x000000010f7efd10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ea69208} 'getChars' '(II[CI)V' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  # parm2:    r8:r8     = '[C'
  # parm3:    r9        = int
  #           [sp+0x70]  (sp of caller)
  0x000000010f7efec0: mov    0x8(%rsi),%r10d
  0x000000010f7efec4: shl    $0x3,%r10
  0x000000010f7efec8: cmp    %rax,%r10
  0x000000010f7efecb: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7efed1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7efedc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7efee0: mov    %eax,-0x14000(%rsp)
  0x000000010f7efee7: push   %rbp
  0x000000010f7efee8: sub    $0x60,%rsp
  0x000000010f7efeec: mov    %rdx,%rdi
  0x000000010f7efeef: movabs $0x10ec800f0,%rdx  ;   {metadata(method data for {method} {0x000000010ea69208} 'getChars' '(II[CI)V' in 'java/lang/String')}
  0x000000010f7efef9: mov    0xdc(%rdx),%ebx
  0x000000010f7efeff: add    $0x8,%ebx
  0x000000010f7eff02: mov    %ebx,0xdc(%rdx)
  0x000000010f7eff08: movabs $0x10ea69208,%rdx  ;   {metadata({method} {0x000000010ea69208} 'getChars' '(II[CI)V' in 'java/lang/String')}
  0x000000010f7eff12: and    $0x1ff8,%ebx
  0x000000010f7eff18: cmp    $0x0,%ebx
  0x000000010f7eff1b: je     0x000000010f7f0146  ;*iload_1
                                                ; - java.lang.String::getChars@0 (line 817)

  0x000000010f7eff21: cmp    $0x0,%edi
  0x000000010f7eff24: movabs $0x10ec800f0,%rdx  ;   {metadata(method data for {method} {0x000000010ea69208} 'getChars' '(II[CI)V' in 'java/lang/String')}
  0x000000010f7eff2e: movabs $0x108,%rbx
  0x000000010f7eff38: jge    0x000000010f7eff48
  0x000000010f7eff3e: movabs $0x118,%rbx
  0x000000010f7eff48: mov    (%rdx,%rbx,1),%rax
  0x000000010f7eff4c: lea    0x1(%rax),%rax
  0x000000010f7eff50: mov    %rax,(%rdx,%rbx,1)
  0x000000010f7eff54: jl     0x000000010f7f0106  ;*ifge
                                                ; - java.lang.String::getChars@1 (line 817)

  0x000000010f7eff5a: mov    0xc(%rsi),%esi
  0x000000010f7eff5d: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::getChars@15 (line 820)

  0x000000010f7eff61: mov    0xc(%rsi),%edx     ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ; implicit exception: dispatches to 0x000000010f7f015d
  0x000000010f7eff64: cmp    %edx,%ecx
  0x000000010f7eff66: movabs $0x10ec800f0,%rdx  ;   {metadata(method data for {method} {0x000000010ea69208} 'getChars' '(II[CI)V' in 'java/lang/String')}
  0x000000010f7eff70: movabs $0x138,%rbx
  0x000000010f7eff7a: jle    0x000000010f7eff8a
  0x000000010f7eff80: movabs $0x148,%rbx
  0x000000010f7eff8a: mov    (%rdx,%rbx,1),%rax
  0x000000010f7eff8e: lea    0x1(%rax),%rax
  0x000000010f7eff92: mov    %rax,(%rdx,%rbx,1)
  0x000000010f7eff96: jg     0x000000010f7f00c6  ;*if_icmple
                                                ; - java.lang.String::getChars@19 (line 820)

  0x000000010f7eff9c: cmp    %ecx,%edi
  0x000000010f7eff9e: movabs $0x10ec800f0,%rdx  ;   {metadata(method data for {method} {0x000000010ea69208} 'getChars' '(II[CI)V' in 'java/lang/String')}
  0x000000010f7effa8: movabs $0x168,%rbx
  0x000000010f7effb2: jle    0x000000010f7effc2
  0x000000010f7effb8: movabs $0x178,%rbx
  0x000000010f7effc2: mov    (%rdx,%rbx,1),%rax
  0x000000010f7effc6: lea    0x1(%rax),%rax
  0x000000010f7effca: mov    %rax,(%rdx,%rbx,1)
  0x000000010f7effce: jg     0x000000010f7f007c  ;*if_icmple
                                                ; - java.lang.String::getChars@33 (line 823)

  0x000000010f7effd4: movabs $0x10ec800f0,%rdx  ;   {metadata(method data for {method} {0x000000010ea69208} 'getChars' '(II[CI)V' in 'java/lang/String')}
  0x000000010f7effde: addq   $0x1,0x198(%rdx)
  0x000000010f7effe6: mov    %rcx,%rbx
  0x000000010f7effe9: sub    %edi,%ebx
  0x000000010f7effeb: mov    %rdi,%rdx
  0x000000010f7effee: mov    %r8,%rcx
  0x000000010f7efff1: mov    %r9,%r8
  0x000000010f7efff4: mov    %rbx,%r9
  0x000000010f7efff7: test   %rcx,%rcx
  0x000000010f7efffa: je     0x000000010f7f0162
  0x000000010f7f0000: test   %edx,%edx
  0x000000010f7f0002: jl     0x000000010f7f0162
  0x000000010f7f0008: test   %r8d,%r8d
  0x000000010f7f000b: jl     0x000000010f7f0162
  0x000000010f7f0011: lea    (%rdx,%r9,1),%rdi
  0x000000010f7f0015: cmp    0xc(%rsi),%edi
  0x000000010f7f0018: ja     0x000000010f7f0162
  0x000000010f7f001e: lea    (%r8,%r9,1),%rdi
  0x000000010f7f0022: cmp    0xc(%rcx),%edi
  0x000000010f7f0025: ja     0x000000010f7f0162
  0x000000010f7f002b: test   %r9d,%r9d
  0x000000010f7f002e: jl     0x000000010f7f0162
  0x000000010f7f0034: je     0x000000010f7f0070
  0x000000010f7f003a: movslq %edx,%rdx
  0x000000010f7f003d: movslq %r8d,%r8
  0x000000010f7f0040: lea    0x10(%rsi,%rdx,2),%rdi
  0x000000010f7f0045: lea    0x10(%rcx,%r8,2),%rsi
  0x000000010f7f004a: mov    %r9,%rdx
  0x000000010f7f004d: test   $0xf,%esp
  0x000000010f7f0053: je     0x000000010f7f006b
  0x000000010f7f0059: sub    $0x8,%rsp
  0x000000010f7f005d: callq  Stub::jshort_arraycopy  ;   {runtime_call}
  0x000000010f7f0062: add    $0x8,%rsp
  0x000000010f7f0066: jmpq   0x000000010f7f0070
  0x000000010f7f006b: callq  Stub::jshort_arraycopy  ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ;   {runtime_call}
  0x000000010f7f0070: add    $0x60,%rsp
  0x000000010f7f0074: pop    %rbp
  0x000000010f7f0075: test   %eax,-0x8d54f7b(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7f007b: retq                      ;*return
                                                ; - java.lang.String::getChars@61 (line 827)

  0x000000010f7f007c: nopl   0x0(%rax)
  0x000000010f7f0080: jmpq   0x000000010f7f0180  ;   {no_reloc}
  0x000000010f7f0085: add    %al,(%rax)
  0x000000010f7f0087: add    %al,(%rax)
  0x000000010f7f0089: add    %ch,%cl
  0x000000010f7f008b: sti    
  0x000000010f7f008c: add    %al,(%rax)
  0x000000010f7f008e: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.String::getChars@36 (line 824)

  0x000000010f7f0091: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x000000010ea69208} 'getChars' '(II[CI)V' in 'java/lang/String')}
  0x000000010f7f0094: lock add %cl,%al
  0x000000010f7f0097: (bad)  
  0x000000010f7f0098: add    %eax,(%rax)
  0x000000010f7f009a: add    %al,(%rax)
  0x000000010f7f009c: addq   $0x1,0x188(%rsi)
  0x000000010f7f00a4: sub    %edi,%ecx
  0x000000010f7f00a6: mov    %rcx,%rdx
  0x000000010f7f00a9: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.String::getChars@43 (line 824)

  0x000000010f7f00ac: mov    %rax,0x38(%rsp)
  0x000000010f7f00b1: nop
  0x000000010f7f00b2: nop
  0x000000010f7f00b3: nop
  0x000000010f7f00b4: nop
  0x000000010f7f00b5: nop
  0x000000010f7f00b6: nop
  0x000000010f7f00b7: callq  0x000000010f7170a0  ; OopMap{[56]=Oop off=508}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::getChars@43 (line 824)
                                                ;   {optimized virtual_call}
  0x000000010f7f00bc: mov    0x38(%rsp),%rax
  0x000000010f7f00c1: jmpq   0x000000010f7f020e  ;*athrow
                                                ; - java.lang.String::getChars@46 (line 824)

  0x000000010f7f00c6: xchg   %ax,%ax
  0x000000010f7f00c8: jmpq   0x000000010f7f01a6  ;   {no_reloc}
  0x000000010f7f00cd: add    %al,(%rax)
  0x000000010f7f00cf: add    %al,(%rax)
  0x000000010f7f00d1: add    %ch,%cl
  0x000000010f7f00d3: flds   (%rax)
  0x000000010f7f00d5: add    %al,(%rax)         ;*new  ; - java.lang.String::getChars@22 (line 821)

  0x000000010f7f00d7: mov    %rax,%rdx
  0x000000010f7f00da: movabs $0x10ec800f0,%rsi  ;   {metadata(method data for {method} {0x000000010ea69208} 'getChars' '(II[CI)V' in 'java/lang/String')}
  0x000000010f7f00e4: addq   $0x1,0x158(%rsi)
  0x000000010f7f00ec: mov    %rcx,%rdx
  0x000000010f7f00ef: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.String::getChars@27 (line 821)

  0x000000010f7f00f2: mov    %rax,0x40(%rsp)
  0x000000010f7f00f7: callq  0x000000010f7170a0  ; OopMap{[64]=Oop off=572}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::getChars@27 (line 821)
                                                ;   {optimized virtual_call}
  0x000000010f7f00fc: mov    0x40(%rsp),%rax
  0x000000010f7f0101: jmpq   0x000000010f7f020e  ;*athrow
                                                ; - java.lang.String::getChars@30 (line 821)

  0x000000010f7f0106: xchg   %ax,%ax
  0x000000010f7f0108: jmpq   0x000000010f7f01cc  ;   {no_reloc}
  0x000000010f7f010d: add    %al,(%rax)
  0x000000010f7f010f: add    %al,(%rax)
  0x000000010f7f0111: add    %ch,%cl
  0x000000010f7f0113: mov    $0x48000000,%edi   ;*new  ; - java.lang.String::getChars@4 (line 818)

  0x000000010f7f0118: mov    %eax,%edx
  0x000000010f7f011a: movabs $0x10ec800f0,%rsi  ;   {metadata(method data for {method} {0x000000010ea69208} 'getChars' '(II[CI)V' in 'java/lang/String')}
  0x000000010f7f0124: addq   $0x1,0x128(%rsi)
  0x000000010f7f012c: mov    %rdi,%rdx
  0x000000010f7f012f: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.String::getChars@9 (line 818)

  0x000000010f7f0132: mov    %rax,0x48(%rsp)
  0x000000010f7f0137: callq  0x000000010f7170a0  ; OopMap{[72]=Oop off=636}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::getChars@9 (line 818)
                                                ;   {optimized virtual_call}
  0x000000010f7f013c: mov    0x48(%rsp),%rax
  0x000000010f7f0141: jmpq   0x000000010f7f020e
  0x000000010f7f0146: mov    %rdx,0x8(%rsp)
  0x000000010f7f014b: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7f0153: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop r8=Oop off=664}
                                                ;*synchronization entry
                                                ; - java.lang.String::getChars@-1 (line 817)
                                                ;   {runtime_call}
  0x000000010f7f0158: jmpq   0x000000010f7eff21
  0x000000010f7f015d: callq  0x000000010f7cd0c0  ; OopMap{r8=Oop rsi=Oop off=674}
                                                ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ;   {runtime_call}
  0x000000010f7f0162: nop
  0x000000010f7f0163: nop
  0x000000010f7f0164: nop
  0x000000010f7f0165: nop
  0x000000010f7f0166: nop
  0x000000010f7f0167: callq  0x000000010f717520  ; OopMap{off=684}
                                                ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ;   {static_call}
  0x000000010f7f016c: jmpq   0x000000010f7f0070
  0x000000010f7f0171: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f7f017b: mov    $0xa050f00,%eax
  0x000000010f7f0180: callq  0x000000010f7d08e0  ; OopMap{off=709}
                                                ;*new  ; - java.lang.String::getChars@36 (line 824)
                                                ;   {runtime_call}
  0x000000010f7f0185: jmpq   0x000000010f7f0080
  0x000000010f7f018a: mov    %rdx,%rdx
  0x000000010f7f018d: callq  0x000000010f7cd560  ; OopMap{off=722}
                                                ;*new  ; - java.lang.String::getChars@36 (line 824)
                                                ;   {runtime_call}
  0x000000010f7f0192: jmpq   0x000000010f7f008f
  0x000000010f7f0197: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f7f01a1: mov    $0xa050f00,%eax
  0x000000010f7f01a6: callq  0x000000010f7d08e0  ; OopMap{off=747}
                                                ;*new  ; - java.lang.String::getChars@22 (line 821)
                                                ;   {runtime_call}
  0x000000010f7f01ab: jmpq   0x000000010f7f00c8
  0x000000010f7f01b0: mov    %rdx,%rdx
  0x000000010f7f01b3: callq  0x000000010f7cd560  ; OopMap{off=760}
                                                ;*new  ; - java.lang.String::getChars@22 (line 821)
                                                ;   {runtime_call}
  0x000000010f7f01b8: jmpq   0x000000010f7f00d7
  0x000000010f7f01bd: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f7f01c7: mov    $0xa050f00,%eax
  0x000000010f7f01cc: callq  0x000000010f7d08e0  ; OopMap{off=785}
                                                ;*new  ; - java.lang.String::getChars@4 (line 818)
                                                ;   {runtime_call}
  0x000000010f7f01d1: jmpq   0x000000010f7f0108
  0x000000010f7f01d6: mov    %rdx,%rdx
  0x000000010f7f01d9: callq  0x000000010f7cd560  ; OopMap{off=798}
                                                ;*new  ; - java.lang.String::getChars@4 (line 818)
                                                ;   {runtime_call}
  0x000000010f7f01de: jmpq   0x000000010f7f0117
  0x000000010f7f01e3: nop
  0x000000010f7f01e4: nop
  0x000000010f7f01e5: mov    0x2a8(%r15),%rax
  0x000000010f7f01ec: movabs $0x0,%r10
  0x000000010f7f01f6: mov    %r10,0x2a8(%r15)
  0x000000010f7f01fd: movabs $0x0,%r10
  0x000000010f7f0207: mov    %r10,0x2b0(%r15)
  0x000000010f7f020e: add    $0x60,%rsp
  0x000000010f7f0212: pop    %rbp
  0x000000010f7f0213: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7f0218: hlt    
  0x000000010f7f0219: hlt    
  0x000000010f7f021a: hlt    
  0x000000010f7f021b: hlt    
  0x000000010f7f021c: hlt    
  0x000000010f7f021d: hlt    
  0x000000010f7f021e: hlt    
  0x000000010f7f021f: hlt    
[Stub Code]
  0x000000010f7f0220: nop                       ;   {no_reloc}
  0x000000010f7f0221: nop
  0x000000010f7f0222: nop
  0x000000010f7f0223: nop
  0x000000010f7f0224: nop
  0x000000010f7f0225: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7f022f: jmpq   0x000000010f7f022f  ;   {runtime_call}
  0x000000010f7f0234: nop
  0x000000010f7f0235: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7f023f: jmpq   0x000000010f7f023f  ;   {runtime_call}
  0x000000010f7f0244: nop
  0x000000010f7f0245: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7f024f: jmpq   0x000000010f7f024f  ;   {runtime_call}
  0x000000010f7f0254: nop
  0x000000010f7f0255: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7f025f: jmpq   0x000000010f7f025f  ;   {runtime_call}
[Exception Handler]
  0x000000010f7f0264: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f7f0269: mov    %rsp,-0x28(%rsp)
  0x000000010f7f026e: sub    $0x80,%rsp
  0x000000010f7f0275: mov    %rax,0x78(%rsp)
  0x000000010f7f027a: mov    %rcx,0x70(%rsp)
  0x000000010f7f027f: mov    %rdx,0x68(%rsp)
  0x000000010f7f0284: mov    %rbx,0x60(%rsp)
  0x000000010f7f0289: mov    %rbp,0x50(%rsp)
  0x000000010f7f028e: mov    %rsi,0x48(%rsp)
  0x000000010f7f0293: mov    %rdi,0x40(%rsp)
  0x000000010f7f0298: mov    %r8,0x38(%rsp)
  0x000000010f7f029d: mov    %r9,0x30(%rsp)
  0x000000010f7f02a2: mov    %r10,0x28(%rsp)
  0x000000010f7f02a7: mov    %r11,0x20(%rsp)
  0x000000010f7f02ac: mov    %r12,0x18(%rsp)
  0x000000010f7f02b1: mov    %r13,0x10(%rsp)
  0x000000010f7f02b6: mov    %r14,0x8(%rsp)
  0x000000010f7f02bb: mov    %r15,(%rsp)
  0x000000010f7f02bf: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7f02c9: movabs $0x10f7f0269,%rsi  ;   {internal_word}
  0x000000010f7f02d3: mov    %rsp,%rdx
  0x000000010f7f02d6: and    $0xfffffffffffffff0,%rsp
  0x000000010f7f02da: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7f02df: hlt    
[Deopt Handler Code]
  0x000000010f7f02e0: movabs $0x10f7f02e0,%r10  ;   {section_word}
  0x000000010f7f02ea: push   %r10
  0x000000010f7f02ec: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7f02f1: hlt    
  0x000000010f7f02f2: hlt    
  0x000000010f7f02f3: hlt    
  0x000000010f7f02f4: hlt    
  0x000000010f7f02f5: hlt    
  0x000000010f7f02f6: hlt    
  0x000000010f7f02f7: hlt    
Decoding compiled method 0x000000010f7ecf50:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010eb048a0} '<init>' '()V' in 'java/lang/Number'
  #           [sp+0x40]  (sp of caller)
  0x000000010f7ed0c0: mov    0x8(%rsi),%r10d
  0x000000010f7ed0c4: shl    $0x3,%r10
  0x000000010f7ed0c8: cmp    %rax,%r10
  0x000000010f7ed0cb: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7ed0d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7ed0dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7ed0e0: mov    %eax,-0x14000(%rsp)
  0x000000010f7ed0e7: push   %rbp
  0x000000010f7ed0e8: sub    $0x30,%rsp
  0x000000010f7ed0ec: movabs $0x10ed406c8,%rdi  ;   {metadata(method data for {method} {0x000000010eb048a0} '<init>' '()V' in 'java/lang/Number')}
  0x000000010f7ed0f6: mov    0xdc(%rdi),%ebx
  0x000000010f7ed0fc: add    $0x8,%ebx
  0x000000010f7ed0ff: mov    %ebx,0xdc(%rdi)
  0x000000010f7ed105: movabs $0x10eb048a0,%rdi  ;   {metadata({method} {0x000000010eb048a0} '<init>' '()V' in 'java/lang/Number')}
  0x000000010f7ed10f: and    $0x1ff8,%ebx
  0x000000010f7ed115: cmp    $0x0,%ebx
  0x000000010f7ed118: je     0x000000010f7ed171  ;*aload_0
                                                ; - java.lang.Number::<init>@0 (line 55)

  0x000000010f7ed11e: mov    %rsi,%rdi
  0x000000010f7ed121: movabs $0x10ed406c8,%rbx  ;   {metadata(method data for {method} {0x000000010eb048a0} '<init>' '()V' in 'java/lang/Number')}
  0x000000010f7ed12b: addq   $0x1,0x108(%rbx)
  0x000000010f7ed133: movabs $0x10ebdca10,%rdi  ;   {metadata(method data for {method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f7ed13d: mov    0xdc(%rdi),%ebx
  0x000000010f7ed143: add    $0x8,%ebx
  0x000000010f7ed146: mov    %ebx,0xdc(%rdi)
  0x000000010f7ed14c: movabs $0x10ea65480,%rdi  ;   {metadata({method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f7ed156: and    $0x7ffff8,%ebx
  0x000000010f7ed15c: cmp    $0x0,%ebx
  0x000000010f7ed15f: je     0x000000010f7ed185
  0x000000010f7ed165: add    $0x30,%rsp
  0x000000010f7ed169: pop    %rbp
  0x000000010f7ed16a: test   %eax,-0x8d52070(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7ed170: retq   
  0x000000010f7ed171: mov    %rdi,0x8(%rsp)
  0x000000010f7ed176: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7ed17e: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=195}
                                                ;*synchronization entry
                                                ; - java.lang.Number::<init>@-1 (line 55)
                                                ;   {runtime_call}
  0x000000010f7ed183: jmp    0x000000010f7ed11e
  0x000000010f7ed185: mov    %rdi,0x8(%rsp)
  0x000000010f7ed18a: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7ed192: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=215}
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 37)
                                                ; - java.lang.Number::<init>@1 (line 55)
                                                ;   {runtime_call}
  0x000000010f7ed197: jmp    0x000000010f7ed165
  0x000000010f7ed199: nop
  0x000000010f7ed19a: nop
  0x000000010f7ed19b: mov    0x2a8(%r15),%rax
  0x000000010f7ed1a2: movabs $0x0,%r10
  0x000000010f7ed1ac: mov    %r10,0x2a8(%r15)
  0x000000010f7ed1b3: movabs $0x0,%r10
  0x000000010f7ed1bd: mov    %r10,0x2b0(%r15)
  0x000000010f7ed1c4: add    $0x30,%rsp
  0x000000010f7ed1c8: pop    %rbp
  0x000000010f7ed1c9: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7ed1ce: hlt    
  0x000000010f7ed1cf: hlt    
  0x000000010f7ed1d0: hlt    
  0x000000010f7ed1d1: hlt    
  0x000000010f7ed1d2: hlt    
  0x000000010f7ed1d3: hlt    
  0x000000010f7ed1d4: hlt    
  0x000000010f7ed1d5: hlt    
  0x000000010f7ed1d6: hlt    
  0x000000010f7ed1d7: hlt    
  0x000000010f7ed1d8: hlt    
  0x000000010f7ed1d9: hlt    
  0x000000010f7ed1da: hlt    
  0x000000010f7ed1db: hlt    
  0x000000010f7ed1dc: hlt    
  0x000000010f7ed1dd: hlt    
  0x000000010f7ed1de: hlt    
  0x000000010f7ed1df: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f7ed1e0: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f7ed1e5: mov    %rsp,-0x28(%rsp)
  0x000000010f7ed1ea: sub    $0x80,%rsp
  0x000000010f7ed1f1: mov    %rax,0x78(%rsp)
  0x000000010f7ed1f6: mov    %rcx,0x70(%rsp)
  0x000000010f7ed1fb: mov    %rdx,0x68(%rsp)
  0x000000010f7ed200: mov    %rbx,0x60(%rsp)
  0x000000010f7ed205: mov    %rbp,0x50(%rsp)
  0x000000010f7ed20a: mov    %rsi,0x48(%rsp)
  0x000000010f7ed20f: mov    %rdi,0x40(%rsp)
  0x000000010f7ed214: mov    %r8,0x38(%rsp)
  0x000000010f7ed219: mov    %r9,0x30(%rsp)
  0x000000010f7ed21e: mov    %r10,0x28(%rsp)
  0x000000010f7ed223: mov    %r11,0x20(%rsp)
  0x000000010f7ed228: mov    %r12,0x18(%rsp)
  0x000000010f7ed22d: mov    %r13,0x10(%rsp)
  0x000000010f7ed232: mov    %r14,0x8(%rsp)
  0x000000010f7ed237: mov    %r15,(%rsp)
  0x000000010f7ed23b: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7ed245: movabs $0x10f7ed1e5,%rsi  ;   {internal_word}
  0x000000010f7ed24f: mov    %rsp,%rdx
  0x000000010f7ed252: and    $0xfffffffffffffff0,%rsp
  0x000000010f7ed256: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7ed25b: hlt    
[Deopt Handler Code]
  0x000000010f7ed25c: movabs $0x10f7ed25c,%r10  ;   {section_word}
  0x000000010f7ed266: push   %r10
  0x000000010f7ed268: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7ed26d: hlt    
  0x000000010f7ed26e: hlt    
  0x000000010f7ed26f: hlt    
Decoding compiled method 0x000000010f7f0610:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010eb07720} '<init>' '(B)V' in 'java/lang/Byte'
  # this:     rsi:rsi   = 'java/lang/Byte'
  # parm0:    rdx       = byte
  #           [sp+0x50]  (sp of caller)
  0x000000010f7f0780: mov    0x8(%rsi),%r10d
  0x000000010f7f0784: shl    $0x3,%r10
  0x000000010f7f0788: cmp    %rax,%r10
  0x000000010f7f078b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7f0791: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7f079c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7f07a0: mov    %eax,-0x14000(%rsp)
  0x000000010f7f07a7: push   %rbp
  0x000000010f7f07a8: sub    $0x40,%rsp
  0x000000010f7f07ac: movabs $0x10ed40818,%rdi  ;   {metadata(method data for {method} {0x000000010eb07720} '<init>' '(B)V' in 'java/lang/Byte')}
  0x000000010f7f07b6: mov    0xdc(%rdi),%ebx
  0x000000010f7f07bc: add    $0x8,%ebx
  0x000000010f7f07bf: mov    %ebx,0xdc(%rdi)
  0x000000010f7f07c5: movabs $0x10eb07720,%rdi  ;   {metadata({method} {0x000000010eb07720} '<init>' '(B)V' in 'java/lang/Byte')}
  0x000000010f7f07cf: and    $0x1ff8,%ebx
  0x000000010f7f07d5: cmp    $0x0,%ebx
  0x000000010f7f07d8: je     0x000000010f7f087b  ;*aload_0
                                                ; - java.lang.Byte::<init>@0 (line 298)

  0x000000010f7f07de: mov    %rsi,%rdi
  0x000000010f7f07e1: movabs $0x10ed40818,%rbx  ;   {metadata(method data for {method} {0x000000010eb07720} '<init>' '(B)V' in 'java/lang/Byte')}
  0x000000010f7f07eb: addq   $0x1,0x108(%rbx)
  0x000000010f7f07f3: movabs $0x10ed406c8,%rdi  ;   {metadata(method data for {method} {0x000000010eb048a0} '<init>' '()V' in 'java/lang/Number')}
  0x000000010f7f07fd: mov    0xdc(%rdi),%ebx
  0x000000010f7f0803: add    $0x8,%ebx
  0x000000010f7f0806: mov    %ebx,0xdc(%rdi)
  0x000000010f7f080c: movabs $0x10eb048a0,%rdi  ;   {metadata({method} {0x000000010eb048a0} '<init>' '()V' in 'java/lang/Number')}
  0x000000010f7f0816: and    $0x7ffff8,%ebx
  0x000000010f7f081c: cmp    $0x0,%ebx
  0x000000010f7f081f: je     0x000000010f7f0892
  0x000000010f7f0825: mov    %rsi,%rdi
  0x000000010f7f0828: movabs $0x10ed406c8,%rbx  ;   {metadata(method data for {method} {0x000000010eb048a0} '<init>' '()V' in 'java/lang/Number')}
  0x000000010f7f0832: addq   $0x1,0x108(%rbx)
  0x000000010f7f083a: movabs $0x10ebdca10,%rdi  ;   {metadata(method data for {method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f7f0844: mov    0xdc(%rdi),%ebx
  0x000000010f7f084a: add    $0x8,%ebx
  0x000000010f7f084d: mov    %ebx,0xdc(%rdi)
  0x000000010f7f0853: movabs $0x10ea65480,%rdi  ;   {metadata({method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f7f085d: and    $0x7ffff8,%ebx
  0x000000010f7f0863: cmp    $0x0,%ebx
  0x000000010f7f0866: je     0x000000010f7f08a9
  0x000000010f7f086c: mov    %dl,0xc(%rsi)      ;*putfield value
                                                ; - java.lang.Byte::<init>@6 (line 299)

  0x000000010f7f086f: add    $0x40,%rsp
  0x000000010f7f0873: pop    %rbp
  0x000000010f7f0874: test   %eax,-0x8d5577a(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7f087a: retq   
  0x000000010f7f087b: mov    %rdi,0x8(%rsp)
  0x000000010f7f0880: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7f0888: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=269}
                                                ;*synchronization entry
                                                ; - java.lang.Byte::<init>@-1 (line 298)
                                                ;   {runtime_call}
  0x000000010f7f088d: jmpq   0x000000010f7f07de
  0x000000010f7f0892: mov    %rdi,0x8(%rsp)
  0x000000010f7f0897: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7f089f: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=292}
                                                ;*synchronization entry
                                                ; - java.lang.Number::<init>@-1 (line 55)
                                                ; - java.lang.Byte::<init>@1 (line 298)
                                                ;   {runtime_call}
  0x000000010f7f08a4: jmpq   0x000000010f7f0825
  0x000000010f7f08a9: mov    %rdi,0x8(%rsp)
  0x000000010f7f08ae: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7f08b6: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=315}
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 37)
                                                ; - java.lang.Number::<init>@1 (line 55)
                                                ; - java.lang.Byte::<init>@1 (line 298)
                                                ;   {runtime_call}
  0x000000010f7f08bb: jmp    0x000000010f7f086c
  0x000000010f7f08bd: nop
  0x000000010f7f08be: nop
  0x000000010f7f08bf: mov    0x2a8(%r15),%rax
  0x000000010f7f08c6: movabs $0x0,%r10
  0x000000010f7f08d0: mov    %r10,0x2a8(%r15)
  0x000000010f7f08d7: movabs $0x0,%r10
  0x000000010f7f08e1: mov    %r10,0x2b0(%r15)
  0x000000010f7f08e8: add    $0x40,%rsp
  0x000000010f7f08ec: pop    %rbp
  0x000000010f7f08ed: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7f08f2: hlt    
  0x000000010f7f08f3: hlt    
  0x000000010f7f08f4: hlt    
  0x000000010f7f08f5: hlt    
  0x000000010f7f08f6: hlt    
  0x000000010f7f08f7: hlt    
  0x000000010f7f08f8: hlt    
  0x000000010f7f08f9: hlt    
  0x000000010f7f08fa: hlt    
  0x000000010f7f08fb: hlt    
  0x000000010f7f08fc: hlt    
  0x000000010f7f08fd: hlt    
  0x000000010f7f08fe: hlt    
  0x000000010f7f08ff: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f7f0900: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f7f0905: mov    %rsp,-0x28(%rsp)
  0x000000010f7f090a: sub    $0x80,%rsp
  0x000000010f7f0911: mov    %rax,0x78(%rsp)
  0x000000010f7f0916: mov    %rcx,0x70(%rsp)
  0x000000010f7f091b: mov    %rdx,0x68(%rsp)
  0x000000010f7f0920: mov    %rbx,0x60(%rsp)
  0x000000010f7f0925: mov    %rbp,0x50(%rsp)
  0x000000010f7f092a: mov    %rsi,0x48(%rsp)
  0x000000010f7f092f: mov    %rdi,0x40(%rsp)
  0x000000010f7f0934: mov    %r8,0x38(%rsp)
  0x000000010f7f0939: mov    %r9,0x30(%rsp)
  0x000000010f7f093e: mov    %r10,0x28(%rsp)
  0x000000010f7f0943: mov    %r11,0x20(%rsp)
  0x000000010f7f0948: mov    %r12,0x18(%rsp)
  0x000000010f7f094d: mov    %r13,0x10(%rsp)
  0x000000010f7f0952: mov    %r14,0x8(%rsp)
  0x000000010f7f0957: mov    %r15,(%rsp)
  0x000000010f7f095b: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7f0965: movabs $0x10f7f0905,%rsi  ;   {internal_word}
  0x000000010f7f096f: mov    %rsp,%rdx
  0x000000010f7f0972: and    $0xfffffffffffffff0,%rsp
  0x000000010f7f0976: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7f097b: hlt    
[Deopt Handler Code]
  0x000000010f7f097c: movabs $0x10f7f097c,%r10  ;   {section_word}
  0x000000010f7f0986: push   %r10
  0x000000010f7f0988: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7f098d: hlt    
  0x000000010f7f098e: hlt    
  0x000000010f7f098f: hlt    
Decoding compiled method 0x000000010f7f0a90:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010eb08e50} '<init>' '(S)V' in 'java/lang/Short'
  # this:     rsi:rsi   = 'java/lang/Short'
  # parm0:    rdx       = short
  #           [sp+0x50]  (sp of caller)
  0x000000010f7f0c00: mov    0x8(%rsi),%r10d
  0x000000010f7f0c04: shl    $0x3,%r10
  0x000000010f7f0c08: cmp    %rax,%r10
  0x000000010f7f0c0b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7f0c11: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7f0c1c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7f0c20: mov    %eax,-0x14000(%rsp)
  0x000000010f7f0c27: push   %rbp
  0x000000010f7f0c28: sub    $0x40,%rsp
  0x000000010f7f0c2c: movabs $0x10ed40d30,%rdi  ;   {metadata(method data for {method} {0x000000010eb08e50} '<init>' '(S)V' in 'java/lang/Short')}
  0x000000010f7f0c36: mov    0xdc(%rdi),%ebx
  0x000000010f7f0c3c: add    $0x8,%ebx
  0x000000010f7f0c3f: mov    %ebx,0xdc(%rdi)
  0x000000010f7f0c45: movabs $0x10eb08e50,%rdi  ;   {metadata({method} {0x000000010eb08e50} '<init>' '(S)V' in 'java/lang/Short')}
  0x000000010f7f0c4f: and    $0x1ff8,%ebx
  0x000000010f7f0c55: cmp    $0x0,%ebx
  0x000000010f7f0c58: je     0x000000010f7f0cfc  ;*aload_0
                                                ; - java.lang.Short::<init>@0 (line 303)

  0x000000010f7f0c5e: mov    %rsi,%rdi
  0x000000010f7f0c61: movabs $0x10ed40d30,%rbx  ;   {metadata(method data for {method} {0x000000010eb08e50} '<init>' '(S)V' in 'java/lang/Short')}
  0x000000010f7f0c6b: addq   $0x1,0x108(%rbx)
  0x000000010f7f0c73: movabs $0x10ed406c8,%rdi  ;   {metadata(method data for {method} {0x000000010eb048a0} '<init>' '()V' in 'java/lang/Number')}
  0x000000010f7f0c7d: mov    0xdc(%rdi),%ebx
  0x000000010f7f0c83: add    $0x8,%ebx
  0x000000010f7f0c86: mov    %ebx,0xdc(%rdi)
  0x000000010f7f0c8c: movabs $0x10eb048a0,%rdi  ;   {metadata({method} {0x000000010eb048a0} '<init>' '()V' in 'java/lang/Number')}
  0x000000010f7f0c96: and    $0x7ffff8,%ebx
  0x000000010f7f0c9c: cmp    $0x0,%ebx
  0x000000010f7f0c9f: je     0x000000010f7f0d13
  0x000000010f7f0ca5: mov    %rsi,%rdi
  0x000000010f7f0ca8: movabs $0x10ed406c8,%rbx  ;   {metadata(method data for {method} {0x000000010eb048a0} '<init>' '()V' in 'java/lang/Number')}
  0x000000010f7f0cb2: addq   $0x1,0x108(%rbx)
  0x000000010f7f0cba: movabs $0x10ebdca10,%rdi  ;   {metadata(method data for {method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f7f0cc4: mov    0xdc(%rdi),%ebx
  0x000000010f7f0cca: add    $0x8,%ebx
  0x000000010f7f0ccd: mov    %ebx,0xdc(%rdi)
  0x000000010f7f0cd3: movabs $0x10ea65480,%rdi  ;   {metadata({method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f7f0cdd: and    $0x7ffff8,%ebx
  0x000000010f7f0ce3: cmp    $0x0,%ebx
  0x000000010f7f0ce6: je     0x000000010f7f0d2a
  0x000000010f7f0cec: mov    %dx,0xc(%rsi)      ;*putfield value
                                                ; - java.lang.Short::<init>@6 (line 304)

  0x000000010f7f0cf0: add    $0x40,%rsp
  0x000000010f7f0cf4: pop    %rbp
  0x000000010f7f0cf5: test   %eax,-0x8d55bfb(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7f0cfb: retq   
  0x000000010f7f0cfc: mov    %rdi,0x8(%rsp)
  0x000000010f7f0d01: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7f0d09: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=270}
                                                ;*synchronization entry
                                                ; - java.lang.Short::<init>@-1 (line 303)
                                                ;   {runtime_call}
  0x000000010f7f0d0e: jmpq   0x000000010f7f0c5e
  0x000000010f7f0d13: mov    %rdi,0x8(%rsp)
  0x000000010f7f0d18: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7f0d20: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=293}
                                                ;*synchronization entry
                                                ; - java.lang.Number::<init>@-1 (line 55)
                                                ; - java.lang.Short::<init>@1 (line 303)
                                                ;   {runtime_call}
  0x000000010f7f0d25: jmpq   0x000000010f7f0ca5
  0x000000010f7f0d2a: mov    %rdi,0x8(%rsp)
  0x000000010f7f0d2f: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7f0d37: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=316}
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 37)
                                                ; - java.lang.Number::<init>@1 (line 55)
                                                ; - java.lang.Short::<init>@1 (line 303)
                                                ;   {runtime_call}
  0x000000010f7f0d3c: jmp    0x000000010f7f0cec
  0x000000010f7f0d3e: nop
  0x000000010f7f0d3f: nop
  0x000000010f7f0d40: mov    0x2a8(%r15),%rax
  0x000000010f7f0d47: movabs $0x0,%r10
  0x000000010f7f0d51: mov    %r10,0x2a8(%r15)
  0x000000010f7f0d58: movabs $0x0,%r10
  0x000000010f7f0d62: mov    %r10,0x2b0(%r15)
  0x000000010f7f0d69: add    $0x40,%rsp
  0x000000010f7f0d6d: pop    %rbp
  0x000000010f7f0d6e: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7f0d73: hlt    
  0x000000010f7f0d74: hlt    
  0x000000010f7f0d75: hlt    
  0x000000010f7f0d76: hlt    
  0x000000010f7f0d77: hlt    
  0x000000010f7f0d78: hlt    
  0x000000010f7f0d79: hlt    
  0x000000010f7f0d7a: hlt    
  0x000000010f7f0d7b: hlt    
  0x000000010f7f0d7c: hlt    
  0x000000010f7f0d7d: hlt    
  0x000000010f7f0d7e: hlt    
  0x000000010f7f0d7f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f7f0d80: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f7f0d85: mov    %rsp,-0x28(%rsp)
  0x000000010f7f0d8a: sub    $0x80,%rsp
  0x000000010f7f0d91: mov    %rax,0x78(%rsp)
  0x000000010f7f0d96: mov    %rcx,0x70(%rsp)
  0x000000010f7f0d9b: mov    %rdx,0x68(%rsp)
  0x000000010f7f0da0: mov    %rbx,0x60(%rsp)
  0x000000010f7f0da5: mov    %rbp,0x50(%rsp)
  0x000000010f7f0daa: mov    %rsi,0x48(%rsp)
  0x000000010f7f0daf: mov    %rdi,0x40(%rsp)
  0x000000010f7f0db4: mov    %r8,0x38(%rsp)
  0x000000010f7f0db9: mov    %r9,0x30(%rsp)
  0x000000010f7f0dbe: mov    %r10,0x28(%rsp)
  0x000000010f7f0dc3: mov    %r11,0x20(%rsp)
  0x000000010f7f0dc8: mov    %r12,0x18(%rsp)
  0x000000010f7f0dcd: mov    %r13,0x10(%rsp)
  0x000000010f7f0dd2: mov    %r14,0x8(%rsp)
  0x000000010f7f0dd7: mov    %r15,(%rsp)
  0x000000010f7f0ddb: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7f0de5: movabs $0x10f7f0d85,%rsi  ;   {internal_word}
  0x000000010f7f0def: mov    %rsp,%rdx
  0x000000010f7f0df2: and    $0xfffffffffffffff0,%rsp
  0x000000010f7f0df6: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7f0dfb: hlt    
[Deopt Handler Code]
  0x000000010f7f0dfc: movabs $0x10f7f0dfc,%r10  ;   {section_word}
  0x000000010f7f0e06: push   %r10
  0x000000010f7f0e08: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7f0e0d: hlt    
  0x000000010f7f0e0e: hlt    
  0x000000010f7f0e0f: hlt    
Decoding compiled method 0x000000010f7f0f10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010eb0f648} '<init>' '(J)V' in 'java/lang/Long'
  # this:     rsi:rsi   = 'java/lang/Long'
  # parm0:    rdx:rdx   = long
  #           [sp+0x50]  (sp of caller)
  0x000000010f7f1080: mov    0x8(%rsi),%r10d
  0x000000010f7f1084: shl    $0x3,%r10
  0x000000010f7f1088: cmp    %rax,%r10
  0x000000010f7f108b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7f1091: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7f109c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7f10a0: mov    %eax,-0x14000(%rsp)
  0x000000010f7f10a7: push   %rbp
  0x000000010f7f10a8: sub    $0x40,%rsp
  0x000000010f7f10ac: movabs $0x10ed41628,%rdi  ;   {metadata(method data for {method} {0x000000010eb0f648} '<init>' '(J)V' in 'java/lang/Long')}
  0x000000010f7f10b6: mov    0xdc(%rdi),%ebx
  0x000000010f7f10bc: add    $0x8,%ebx
  0x000000010f7f10bf: mov    %ebx,0xdc(%rdi)
  0x000000010f7f10c5: movabs $0x10eb0f648,%rdi  ;   {metadata({method} {0x000000010eb0f648} '<init>' '(J)V' in 'java/lang/Long')}
  0x000000010f7f10cf: and    $0x1ff8,%ebx
  0x000000010f7f10d5: cmp    $0x0,%ebx
  0x000000010f7f10d8: je     0x000000010f7f117c  ;*aload_0
                                                ; - java.lang.Long::<init>@0 (line 947)

  0x000000010f7f10de: mov    %rsi,%rdi
  0x000000010f7f10e1: movabs $0x10ed41628,%rbx  ;   {metadata(method data for {method} {0x000000010eb0f648} '<init>' '(J)V' in 'java/lang/Long')}
  0x000000010f7f10eb: addq   $0x1,0x108(%rbx)
  0x000000010f7f10f3: movabs $0x10ed406c8,%rdi  ;   {metadata(method data for {method} {0x000000010eb048a0} '<init>' '()V' in 'java/lang/Number')}
  0x000000010f7f10fd: mov    0xdc(%rdi),%ebx
  0x000000010f7f1103: add    $0x8,%ebx
  0x000000010f7f1106: mov    %ebx,0xdc(%rdi)
  0x000000010f7f110c: movabs $0x10eb048a0,%rdi  ;   {metadata({method} {0x000000010eb048a0} '<init>' '()V' in 'java/lang/Number')}
  0x000000010f7f1116: and    $0x7ffff8,%ebx
  0x000000010f7f111c: cmp    $0x0,%ebx
  0x000000010f7f111f: je     0x000000010f7f1193
  0x000000010f7f1125: mov    %rsi,%rdi
  0x000000010f7f1128: movabs $0x10ed406c8,%rbx  ;   {metadata(method data for {method} {0x000000010eb048a0} '<init>' '()V' in 'java/lang/Number')}
  0x000000010f7f1132: addq   $0x1,0x108(%rbx)
  0x000000010f7f113a: movabs $0x10ebdca10,%rdi  ;   {metadata(method data for {method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f7f1144: mov    0xdc(%rdi),%ebx
  0x000000010f7f114a: add    $0x8,%ebx
  0x000000010f7f114d: mov    %ebx,0xdc(%rdi)
  0x000000010f7f1153: movabs $0x10ea65480,%rdi  ;   {metadata({method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f7f115d: and    $0x7ffff8,%ebx
  0x000000010f7f1163: cmp    $0x0,%ebx
  0x000000010f7f1166: je     0x000000010f7f11aa
  0x000000010f7f116c: mov    %rdx,0x10(%rsi)    ;*putfield value
                                                ; - java.lang.Long::<init>@6 (line 948)

  0x000000010f7f1170: add    $0x40,%rsp
  0x000000010f7f1174: pop    %rbp
  0x000000010f7f1175: test   %eax,-0x8d5607b(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7f117b: retq   
  0x000000010f7f117c: mov    %rdi,0x8(%rsp)
  0x000000010f7f1181: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7f1189: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=270}
                                                ;*synchronization entry
                                                ; - java.lang.Long::<init>@-1 (line 947)
                                                ;   {runtime_call}
  0x000000010f7f118e: jmpq   0x000000010f7f10de
  0x000000010f7f1193: mov    %rdi,0x8(%rsp)
  0x000000010f7f1198: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7f11a0: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=293}
                                                ;*synchronization entry
                                                ; - java.lang.Number::<init>@-1 (line 55)
                                                ; - java.lang.Long::<init>@1 (line 947)
                                                ;   {runtime_call}
  0x000000010f7f11a5: jmpq   0x000000010f7f1125
  0x000000010f7f11aa: mov    %rdi,0x8(%rsp)
  0x000000010f7f11af: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7f11b7: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=316}
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 37)
                                                ; - java.lang.Number::<init>@1 (line 55)
                                                ; - java.lang.Long::<init>@1 (line 947)
                                                ;   {runtime_call}
  0x000000010f7f11bc: jmp    0x000000010f7f116c
  0x000000010f7f11be: nop
  0x000000010f7f11bf: nop
  0x000000010f7f11c0: mov    0x2a8(%r15),%rax
  0x000000010f7f11c7: movabs $0x0,%r10
  0x000000010f7f11d1: mov    %r10,0x2a8(%r15)
  0x000000010f7f11d8: movabs $0x0,%r10
  0x000000010f7f11e2: mov    %r10,0x2b0(%r15)
  0x000000010f7f11e9: add    $0x40,%rsp
  0x000000010f7f11ed: pop    %rbp
  0x000000010f7f11ee: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7f11f3: hlt    
  0x000000010f7f11f4: hlt    
  0x000000010f7f11f5: hlt    
  0x000000010f7f11f6: hlt    
  0x000000010f7f11f7: hlt    
  0x000000010f7f11f8: hlt    
  0x000000010f7f11f9: hlt    
  0x000000010f7f11fa: hlt    
  0x000000010f7f11fb: hlt    
  0x000000010f7f11fc: hlt    
  0x000000010f7f11fd: hlt    
  0x000000010f7f11fe: hlt    
  0x000000010f7f11ff: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f7f1200: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f7f1205: mov    %rsp,-0x28(%rsp)
  0x000000010f7f120a: sub    $0x80,%rsp
  0x000000010f7f1211: mov    %rax,0x78(%rsp)
  0x000000010f7f1216: mov    %rcx,0x70(%rsp)
  0x000000010f7f121b: mov    %rdx,0x68(%rsp)
  0x000000010f7f1220: mov    %rbx,0x60(%rsp)
  0x000000010f7f1225: mov    %rbp,0x50(%rsp)
  0x000000010f7f122a: mov    %rsi,0x48(%rsp)
  0x000000010f7f122f: mov    %rdi,0x40(%rsp)
  0x000000010f7f1234: mov    %r8,0x38(%rsp)
  0x000000010f7f1239: mov    %r9,0x30(%rsp)
  0x000000010f7f123e: mov    %r10,0x28(%rsp)
  0x000000010f7f1243: mov    %r11,0x20(%rsp)
  0x000000010f7f1248: mov    %r12,0x18(%rsp)
  0x000000010f7f124d: mov    %r13,0x10(%rsp)
  0x000000010f7f1252: mov    %r14,0x8(%rsp)
  0x000000010f7f1257: mov    %r15,(%rsp)
  0x000000010f7f125b: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7f1265: movabs $0x10f7f1205,%rsi  ;   {internal_word}
  0x000000010f7f126f: mov    %rsp,%rdx
  0x000000010f7f1272: and    $0xfffffffffffffff0,%rsp
  0x000000010f7f1276: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7f127b: hlt    
[Deopt Handler Code]
  0x000000010f7f127c: movabs $0x10f7f127c,%r10  ;   {section_word}
  0x000000010f7f1286: push   %r10
  0x000000010f7f1288: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7f128d: hlt    
  0x000000010f7f128e: hlt    
  0x000000010f7f128f: hlt    
Decoding compiled method 0x000000010f7f1390:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ea6abd0} 'substring' '(I)Ljava/lang/String;' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx       = int
  #           [sp+0x60]  (sp of caller)
  0x000000010f7f1540: mov    0x8(%rsi),%r10d
  0x000000010f7f1544: shl    $0x3,%r10
  0x000000010f7f1548: cmp    %rax,%r10
  0x000000010f7f154b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7f1551: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7f155c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7f1560: mov    %eax,-0x14000(%rsp)
  0x000000010f7f1567: push   %rbp
  0x000000010f7f1568: sub    $0x50,%rsp
  0x000000010f7f156c: mov    %rsi,%r8
  0x000000010f7f156f: mov    %rdx,%rbx
  0x000000010f7f1572: movabs $0x10ed430e8,%rdx  ;   {metadata(method data for {method} {0x000000010ea6abd0} 'substring' '(I)Ljava/lang/String;' in 'java/lang/String')}
  0x000000010f7f157c: mov    0xdc(%rdx),%esi
  0x000000010f7f1582: add    $0x8,%esi
  0x000000010f7f1585: mov    %esi,0xdc(%rdx)
  0x000000010f7f158b: movabs $0x10ea6abd0,%rdx  ;   {metadata({method} {0x000000010ea6abd0} 'substring' '(I)Ljava/lang/String;' in 'java/lang/String')}
  0x000000010f7f1595: and    $0x1ff8,%esi
  0x000000010f7f159b: cmp    $0x0,%esi
  0x000000010f7f159e: je     0x000000010f7f1776  ;*iload_1
                                                ; - java.lang.String::substring@0 (line 1926)

  0x000000010f7f15a4: cmp    $0x0,%ebx
  0x000000010f7f15a7: movabs $0x10ed430e8,%rdx  ;   {metadata(method data for {method} {0x000000010ea6abd0} 'substring' '(I)Ljava/lang/String;' in 'java/lang/String')}
  0x000000010f7f15b1: movabs $0x108,%rsi
  0x000000010f7f15bb: jge    0x000000010f7f15cb
  0x000000010f7f15c1: movabs $0x118,%rsi
  0x000000010f7f15cb: mov    (%rdx,%rsi,1),%rdi
  0x000000010f7f15cf: lea    0x1(%rdi),%rdi
  0x000000010f7f15d3: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f7f15d7: jl     0x000000010f7f1736  ;*ifge
                                                ; - java.lang.String::substring@1 (line 1926)

  0x000000010f7f15dd: mov    0xc(%r8),%r9d
  0x000000010f7f15e1: shl    $0x3,%r9           ;*getfield value
                                                ; - java.lang.String::substring@14 (line 1929)

  0x000000010f7f15e5: mov    0xc(%r9),%edx      ;*arraylength
                                                ; - java.lang.String::substring@17 (line 1929)
                                                ; implicit exception: dispatches to 0x000000010f7f178d
  0x000000010f7f15e9: mov    %rdx,%r11
  0x000000010f7f15ec: sub    %ebx,%r11d
  0x000000010f7f15ef: cmp    $0x0,%r11d
  0x000000010f7f15f3: movabs $0x10ed430e8,%rdx  ;   {metadata(method data for {method} {0x000000010ea6abd0} 'substring' '(I)Ljava/lang/String;' in 'java/lang/String')}
  0x000000010f7f15fd: movabs $0x138,%rsi
  0x000000010f7f1607: jge    0x000000010f7f1617
  0x000000010f7f160d: movabs $0x148,%rsi
  0x000000010f7f1617: mov    (%rdx,%rsi,1),%rdi
  0x000000010f7f161b: lea    0x1(%rdi),%rdi
  0x000000010f7f161f: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f7f1623: jl     0x000000010f7f16f8  ;*ifge
                                                ; - java.lang.String::substring@22 (line 1930)

  0x000000010f7f1629: cmp    $0x0,%ebx
  0x000000010f7f162c: movabs $0x10ed430e8,%rdx  ;   {metadata(method data for {method} {0x000000010ea6abd0} 'substring' '(I)Ljava/lang/String;' in 'java/lang/String')}
  0x000000010f7f1636: movabs $0x168,%rsi
  0x000000010f7f1640: jne    0x000000010f7f1650
  0x000000010f7f1646: movabs $0x178,%rsi
  0x000000010f7f1650: mov    (%rdx,%rsi,1),%rdi
  0x000000010f7f1654: lea    0x1(%rdi),%rdi
  0x000000010f7f1658: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f7f165c: jne    0x000000010f7f1677  ;*ifne
                                                ; - java.lang.String::substring@35 (line 1933)

  0x000000010f7f1662: movabs $0x10ed430e8,%rdx  ;   {metadata(method data for {method} {0x000000010ea6abd0} 'substring' '(I)Ljava/lang/String;' in 'java/lang/String')}
  0x000000010f7f166c: incl   0x188(%rdx)
  0x000000010f7f1672: jmpq   0x000000010f7f16e9  ;*goto
                                                ; - java.lang.String::substring@39 (line 1933)

  0x000000010f7f1677: movabs $0x7c00016d0,%rdx  ;   {metadata('java/lang/String')}
  0x000000010f7f1681: mov    0x60(%r15),%rax
  0x000000010f7f1685: lea    0x18(%rax),%rdi
  0x000000010f7f1689: cmp    0x70(%r15),%rdi
  0x000000010f7f168d: ja     0x000000010f7f1792
  0x000000010f7f1693: mov    %rdi,0x60(%r15)
  0x000000010f7f1697: mov    0xa8(%rdx),%rcx
  0x000000010f7f169e: mov    %rcx,(%rax)
  0x000000010f7f16a1: mov    %rdx,%rcx
  0x000000010f7f16a4: shr    $0x3,%rcx
  0x000000010f7f16a8: mov    %ecx,0x8(%rax)
  0x000000010f7f16ab: xor    %rcx,%rcx
  0x000000010f7f16ae: mov    %ecx,0xc(%rax)
  0x000000010f7f16b1: xor    %rcx,%rcx
  0x000000010f7f16b4: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.String::substring@42 (line 1933)

  0x000000010f7f16b8: mov    %rax,%rdx
  0x000000010f7f16bb: movabs $0x10ed430e8,%rcx  ;   {metadata(method data for {method} {0x000000010ea6abd0} 'substring' '(I)Ljava/lang/String;' in 'java/lang/String')}
  0x000000010f7f16c5: addq   $0x1,0x1a0(%rcx)
  0x000000010f7f16cd: mov    %r9,%rdx
  0x000000010f7f16d0: mov    %rbx,%rcx
  0x000000010f7f16d3: mov    %r11,%r8
  0x000000010f7f16d6: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.String::substring@52 (line 1933)

  0x000000010f7f16d9: mov    %rax,0x30(%rsp)
  0x000000010f7f16de: nop
  0x000000010f7f16df: callq  0x000000010f7170a0  ; OopMap{[48]=Oop off=420}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::substring@52 (line 1933)
                                                ;   {optimized virtual_call}
  0x000000010f7f16e4: mov    0x30(%rsp),%r8
  0x000000010f7f16e9: mov    %r8,%rax
  0x000000010f7f16ec: add    $0x50,%rsp
  0x000000010f7f16f0: pop    %rbp
  0x000000010f7f16f1: test   %eax,-0x8d565f7(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7f16f7: retq                      ;*areturn
                                                ; - java.lang.String::substring@55 (line 1933)

  0x000000010f7f16f8: jmpq   0x000000010f7f17ae  ;   {no_reloc}
  0x000000010f7f16fd: add    %al,(%rax)
  0x000000010f7f16ff: add    %al,(%rax)
  0x000000010f7f1701: add    %ch,%cl
  0x000000010f7f1703: mov    $0x0,%cl
  0x000000010f7f1705: add    %al,(%rax)         ;*new  ; - java.lang.String::substring@25 (line 1931)

  0x000000010f7f1707: mov    %rax,%rdx
  0x000000010f7f170a: movabs $0x10ed430e8,%rsi  ;   {metadata(method data for {method} {0x000000010ea6abd0} 'substring' '(I)Ljava/lang/String;' in 'java/lang/String')}
  0x000000010f7f1714: addq   $0x1,0x158(%rsi)
  0x000000010f7f171c: mov    %r11,%rdx
  0x000000010f7f171f: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.String::substring@30 (line 1931)

  0x000000010f7f1722: mov    %rax,0x38(%rsp)
  0x000000010f7f1727: callq  0x000000010f7170a0  ; OopMap{[56]=Oop off=492}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::substring@30 (line 1931)
                                                ;   {optimized virtual_call}
  0x000000010f7f172c: mov    0x38(%rsp),%rax
  0x000000010f7f1731: jmpq   0x000000010f7f1816  ;*athrow
                                                ; - java.lang.String::substring@33 (line 1931)

  0x000000010f7f1736: xchg   %ax,%ax
  0x000000010f7f1738: jmpq   0x000000010f7f17d4  ;   {no_reloc}
  0x000000010f7f173d: add    %al,(%rax)
  0x000000010f7f173f: add    %al,(%rax)
  0x000000010f7f1741: add    %ch,%cl
  0x000000010f7f1743: xchg   %eax,%edi
  0x000000010f7f1744: add    %al,(%rax)
  0x000000010f7f1746: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.String::substring@4 (line 1927)

  0x000000010f7f1749: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x000000010ea6abd0} 'substring' '(I)Ljava/lang/String;' in 'java/lang/String')}
  0x000000010f7f174c: callq  0x00000001108deb81
  0x000000010f7f1751: add    %al,(%rax)
  0x000000010f7f1753: add    %cl,-0x7d(%rax)
  0x000000010f7f1756: xchg   %ch,(%rax)
  0x000000010f7f1758: add    %eax,(%rax)
  0x000000010f7f175a: add    %al,(%rcx)
  0x000000010f7f175c: mov    %rbx,%rdx
  0x000000010f7f175f: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.String::substring@9 (line 1927)

  0x000000010f7f1762: mov    %rax,0x40(%rsp)
  0x000000010f7f1767: callq  0x000000010f7170a0  ; OopMap{[64]=Oop off=556}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::substring@9 (line 1927)
                                                ;   {optimized virtual_call}
  0x000000010f7f176c: mov    0x40(%rsp),%rax
  0x000000010f7f1771: jmpq   0x000000010f7f1816
  0x000000010f7f1776: mov    %rdx,0x8(%rsp)
  0x000000010f7f177b: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7f1783: callq  0x000000010f7d1a20  ; OopMap{r8=Oop off=584}
                                                ;*synchronization entry
                                                ; - java.lang.String::substring@-1 (line 1926)
                                                ;   {runtime_call}
  0x000000010f7f1788: jmpq   0x000000010f7f15a4
  0x000000010f7f178d: callq  0x000000010f7cd0c0  ; OopMap{r8=Oop r9=Oop off=594}
                                                ;*arraylength
                                                ; - java.lang.String::substring@17 (line 1929)
                                                ;   {runtime_call}
  0x000000010f7f1792: mov    %rdx,%rdx
  0x000000010f7f1795: callq  0x000000010f7cd820  ; OopMap{r8=Oop r9=Oop off=602}
                                                ;*new  ; - java.lang.String::substring@42 (line 1933)
                                                ;   {runtime_call}
  0x000000010f7f179a: jmpq   0x000000010f7f16b8
  0x000000010f7f179f: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f7f17a9: mov    $0xa050f00,%eax
  0x000000010f7f17ae: callq  0x000000010f7d08e0  ; OopMap{off=627}
                                                ;*new  ; - java.lang.String::substring@25 (line 1931)
                                                ;   {runtime_call}
  0x000000010f7f17b3: jmpq   0x000000010f7f16f8
  0x000000010f7f17b8: mov    %rdx,%rdx
  0x000000010f7f17bb: callq  0x000000010f7cd560  ; OopMap{off=640}
                                                ;*new  ; - java.lang.String::substring@25 (line 1931)
                                                ;   {runtime_call}
  0x000000010f7f17c0: jmpq   0x000000010f7f1707
  0x000000010f7f17c5: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f7f17cf: mov    $0xa050f00,%eax
  0x000000010f7f17d4: callq  0x000000010f7d08e0  ; OopMap{off=665}
                                                ;*new  ; - java.lang.String::substring@4 (line 1927)
                                                ;   {runtime_call}
  0x000000010f7f17d9: jmpq   0x000000010f7f1738
  0x000000010f7f17de: mov    %rdx,%rdx
  0x000000010f7f17e1: callq  0x000000010f7cd560  ; OopMap{off=678}
                                                ;*new  ; - java.lang.String::substring@4 (line 1927)
                                                ;   {runtime_call}
  0x000000010f7f17e6: jmpq   0x000000010f7f1747
  0x000000010f7f17eb: nop
  0x000000010f7f17ec: nop
  0x000000010f7f17ed: mov    0x2a8(%r15),%rax
  0x000000010f7f17f4: movabs $0x0,%r10
  0x000000010f7f17fe: mov    %r10,0x2a8(%r15)
  0x000000010f7f1805: movabs $0x0,%r10
  0x000000010f7f180f: mov    %r10,0x2b0(%r15)
  0x000000010f7f1816: add    $0x50,%rsp
  0x000000010f7f181a: pop    %rbp
  0x000000010f7f181b: jmpq   0x000000010f73f560  ;   {runtime_call}
[Stub Code]
  0x000000010f7f1820: nop                       ;   {no_reloc}
  0x000000010f7f1821: nop
  0x000000010f7f1822: nop
  0x000000010f7f1823: nop
  0x000000010f7f1824: nop
  0x000000010f7f1825: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7f182f: jmpq   0x000000010f7f182f  ;   {runtime_call}
  0x000000010f7f1834: nop
  0x000000010f7f1835: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7f183f: jmpq   0x000000010f7f183f  ;   {runtime_call}
  0x000000010f7f1844: nop
  0x000000010f7f1845: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7f184f: jmpq   0x000000010f7f184f  ;   {runtime_call}
[Exception Handler]
  0x000000010f7f1854: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f7f1859: mov    %rsp,-0x28(%rsp)
  0x000000010f7f185e: sub    $0x80,%rsp
  0x000000010f7f1865: mov    %rax,0x78(%rsp)
  0x000000010f7f186a: mov    %rcx,0x70(%rsp)
  0x000000010f7f186f: mov    %rdx,0x68(%rsp)
  0x000000010f7f1874: mov    %rbx,0x60(%rsp)
  0x000000010f7f1879: mov    %rbp,0x50(%rsp)
  0x000000010f7f187e: mov    %rsi,0x48(%rsp)
  0x000000010f7f1883: mov    %rdi,0x40(%rsp)
  0x000000010f7f1888: mov    %r8,0x38(%rsp)
  0x000000010f7f188d: mov    %r9,0x30(%rsp)
  0x000000010f7f1892: mov    %r10,0x28(%rsp)
  0x000000010f7f1897: mov    %r11,0x20(%rsp)
  0x000000010f7f189c: mov    %r12,0x18(%rsp)
  0x000000010f7f18a1: mov    %r13,0x10(%rsp)
  0x000000010f7f18a6: mov    %r14,0x8(%rsp)
  0x000000010f7f18ab: mov    %r15,(%rsp)
  0x000000010f7f18af: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7f18b9: movabs $0x10f7f1859,%rsi  ;   {internal_word}
  0x000000010f7f18c3: mov    %rsp,%rdx
  0x000000010f7f18c6: and    $0xfffffffffffffff0,%rsp
  0x000000010f7f18ca: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7f18cf: hlt    
[Deopt Handler Code]
  0x000000010f7f18d0: movabs $0x10f7f18d0,%r10  ;   {section_word}
  0x000000010f7f18da: push   %r10
  0x000000010f7f18dc: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7f18e1: hlt    
  0x000000010f7f18e2: hlt    
  0x000000010f7f18e3: hlt    
  0x000000010f7f18e4: hlt    
  0x000000010f7f18e5: hlt    
  0x000000010f7f18e6: hlt    
  0x000000010f7f18e7: hlt    
Decoding compiled method 0x000000010f7ded90:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000010ed4b4a0} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8:r8     = 'java/lang/Object'
  # parm4:    r9:r9     = 'java/lang/Object'
  # parm5:    rdi:rdi   = 'java/lang/Object'
  # parm6:    [sp+0x0]   = 'java/lang/invoke/MemberName'  (sp of caller)
  0x000000010f7deec0: mov    0x8(%rsp),%rbx
  0x000000010f7deec5: mov    0x18(%rbx),%rbx
  0x000000010f7deec9: test   %rbx,%rbx
  0x000000010f7deecc: je     0x000000010f7deed5
  0x000000010f7deed2: jmpq   *0x40(%rbx)
  0x000000010f7deed5: jmpq   0x000000010f6d61a0  ;   {runtime_call}
  0x000000010f7deeda: hlt    
  0x000000010f7deedb: hlt    
  0x000000010f7deedc: hlt    
  0x000000010f7deedd: hlt    
  0x000000010f7deede: hlt    
  0x000000010f7deedf: hlt    
Decoding compiled method 0x000000010f7f1f90:
Code:
[Entry Point]
  # {method} {0x000000010ea65640} 'hashCode' '()I' in 'java/lang/Object'
  #           [sp+0x50]  (sp of caller)
  0x000000010f7f2100: mov    0x8(%rsi),%r10d
  0x000000010f7f2104: shl    $0x3,%r10
  0x000000010f7f2108: cmp    %r10,%rax
  0x000000010f7f210b: je     0x000000010f7f2118
  0x000000010f7f2111: jmpq   0x000000010f716e60  ;   {runtime_call}
  0x000000010f7f2116: xchg   %ax,%ax
[Verified Entry Point]
  0x000000010f7f2118: mov    %eax,-0x14000(%rsp)
  0x000000010f7f211f: push   %rbp
  0x000000010f7f2120: mov    %rsp,%rbp
  0x000000010f7f2123: sub    $0x40,%rsp
  0x000000010f7f2127: mov    %rsi,(%rsp)
  0x000000010f7f212b: cmp    $0x0,%rsi
  0x000000010f7f212f: lea    (%rsp),%rsi
  0x000000010f7f2133: cmove  (%rsp),%rsi        ; OopMap{[0]=Oop off=56}
  0x000000010f7f2138: movabs $0x10f7f2138,%r10  ;   {section_word}
  0x000000010f7f2142: mov    %r10,0x1e0(%r15)
  0x000000010f7f2149: mov    %rsp,0x1d8(%r15)
  0x000000010f7f2150: cmpb   $0x0,-0x5effd9d(%rip)        # 0x00000001098f23ba
                                                ;   {external_word}
  0x000000010f7f2157: je     0x000000010f7f218f
  0x000000010f7f215d: push   %rsi
  0x000000010f7f215e: movabs $0x10ea65640,%rsi  ;   {metadata({method} {0x000000010ea65640} 'hashCode' '()I' in 'java/lang/Object')}
  0x000000010f7f2168: mov    %r15,%rdi
  0x000000010f7f216b: test   $0xf,%esp
  0x000000010f7f2171: je     0x000000010f7f2189
  0x000000010f7f2177: sub    $0x8,%rsp
  0x000000010f7f217b: callq  0x00000001094ed064  ;   {runtime_call}
  0x000000010f7f2180: add    $0x8,%rsp
  0x000000010f7f2184: jmpq   0x000000010f7f218e
  0x000000010f7f2189: callq  0x00000001094ed064  ;   {runtime_call}
  0x000000010f7f218e: pop    %rsi
  0x000000010f7f218f: lea    0x1f8(%r15),%rdi
  0x000000010f7f2196: movl   $0x4,0x270(%r15)
  0x000000010f7f21a1: callq  0x0000000109352b4b  ;   {runtime_call}
  0x000000010f7f21a6: vzeroupper 
  0x000000010f7f21a9: movl   $0x5,0x270(%r15)
  0x000000010f7f21b4: lock addl $0x0,(%rsp)
  0x000000010f7f21b9: cmpl   $0x0,-0x5ef5453(%rip)        # 0x00000001098fcd70
                                                ;   {external_word}
  0x000000010f7f21c3: jne    0x000000010f7f21d7
  0x000000010f7f21c9: cmpl   $0x0,0x30(%r15)
  0x000000010f7f21d1: je     0x000000010f7f21f8
  0x000000010f7f21d7: mov    %rax,-0x8(%rbp)
  0x000000010f7f21db: mov    %r15,%rdi
  0x000000010f7f21de: mov    %rsp,%r12
  0x000000010f7f21e1: sub    $0x0,%rsp
  0x000000010f7f21e5: and    $0xfffffffffffffff0,%rsp
  0x000000010f7f21e9: callq  0x000000010956fe1e  ;   {runtime_call}
  0x000000010f7f21ee: mov    %r12,%rsp
  0x000000010f7f21f1: xor    %r12,%r12
  0x000000010f7f21f4: mov    -0x8(%rbp),%rax
  0x000000010f7f21f8: movl   $0x8,0x270(%r15)
  0x000000010f7f2203: cmpl   $0x1,0x29c(%r15)
  0x000000010f7f220e: je     0x000000010f7f229e
  0x000000010f7f2214: cmpb   $0x0,-0x5effe61(%rip)        # 0x00000001098f23ba
                                                ;   {external_word}
  0x000000010f7f221b: je     0x000000010f7f2259
  0x000000010f7f2221: mov    %rax,-0x8(%rbp)
  0x000000010f7f2225: movabs $0x10ea65640,%rsi  ;   {metadata({method} {0x000000010ea65640} 'hashCode' '()I' in 'java/lang/Object')}
  0x000000010f7f222f: mov    %r15,%rdi
  0x000000010f7f2232: test   $0xf,%esp
  0x000000010f7f2238: je     0x000000010f7f2250
  0x000000010f7f223e: sub    $0x8,%rsp
  0x000000010f7f2242: callq  0x00000001094ecfd6  ;   {runtime_call}
  0x000000010f7f2247: add    $0x8,%rsp
  0x000000010f7f224b: jmpq   0x000000010f7f2255
  0x000000010f7f2250: callq  0x00000001094ecfd6  ;   {runtime_call}
  0x000000010f7f2255: mov    -0x8(%rbp),%rax
  0x000000010f7f2259: movabs $0x0,%r10
  0x000000010f7f2263: mov    %r10,0x1d8(%r15)
  0x000000010f7f226a: movabs $0x0,%r10
  0x000000010f7f2274: mov    %r10,0x1e0(%r15)
  0x000000010f7f227b: mov    0x38(%r15),%rcx
  0x000000010f7f227f: movl   $0x0,0x100(%rcx)
  0x000000010f7f2289: leaveq 
  0x000000010f7f228a: cmpq   $0x0,0x8(%r15)
  0x000000010f7f2292: jne    0x000000010f7f2299
  0x000000010f7f2298: retq   
  0x000000010f7f2299: jmpq   Stub::forward exception  ;   {runtime_call}
  0x000000010f7f229e: mov    %rax,-0x8(%rbp)
  0x000000010f7f22a2: mov    %rsp,%r12
  0x000000010f7f22a5: sub    $0x0,%rsp
  0x000000010f7f22a9: and    $0xfffffffffffffff0,%rsp
  0x000000010f7f22ad: callq  0x00000001094ead1c  ;   {runtime_call}
  0x000000010f7f22b2: mov    %r12,%rsp
  0x000000010f7f22b5: xor    %r12,%r12
  0x000000010f7f22b8: mov    -0x8(%rbp),%rax
  0x000000010f7f22bc: jmpq   0x000000010f7f2214
  0x000000010f7f22c1: hlt    
  0x000000010f7f22c2: hlt    
  0x000000010f7f22c3: hlt    
  0x000000010f7f22c4: hlt    
  0x000000010f7f22c5: hlt    
  0x000000010f7f22c6: hlt    
  0x000000010f7f22c7: hlt    
Decoding compiled method 0x000000010f7f2510:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010eada4e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder'
  # this:     rsi:rsi   = 'java/lang/AbstractStringBuilder'
  # parm0:    rdx       = int
  #           [sp+0xb0]  (sp of caller)
  0x000000010f7f26a0: mov    0x8(%rsi),%r10d
  0x000000010f7f26a4: shl    $0x3,%r10
  0x000000010f7f26a8: cmp    %rax,%r10
  0x000000010f7f26ab: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7f26b1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7f26bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7f26c0: mov    %eax,-0x14000(%rsp)
  0x000000010f7f26c7: push   %rbp
  0x000000010f7f26c8: sub    $0xa0,%rsp
  0x000000010f7f26cf: movabs $0x10ec7a878,%rdi  ;   {metadata(method data for {method} {0x000000010eada4e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f7f26d9: mov    0xdc(%rdi),%ebx
  0x000000010f7f26df: add    $0x8,%ebx
  0x000000010f7f26e2: mov    %ebx,0xdc(%rdi)
  0x000000010f7f26e8: movabs $0x10eada4e0,%rdi  ;   {metadata({method} {0x000000010eada4e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f7f26f2: and    $0x1ff8,%ebx
  0x000000010f7f26f8: cmp    $0x0,%ebx
  0x000000010f7f26fb: je     0x000000010f7f29af  ;*iload_1
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@0 (line 123)

  0x000000010f7f2701: mov    0x10(%rsi),%edi
  0x000000010f7f2704: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)

  0x000000010f7f2708: mov    0xc(%rdi),%ebx     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; implicit exception: dispatches to 0x000000010f7f29c6
  0x000000010f7f270b: mov    %rdx,%rax
  0x000000010f7f270e: sub    %ebx,%eax
  0x000000010f7f2710: cmp    $0x0,%eax
  0x000000010f7f2713: movabs $0x10ec7a878,%rax  ;   {metadata(method data for {method} {0x000000010eada4e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f7f271d: movabs $0x108,%rcx
  0x000000010f7f2727: jle    0x000000010f7f2737
  0x000000010f7f272d: movabs $0x118,%rcx
  0x000000010f7f2737: mov    (%rax,%rcx,1),%r8
  0x000000010f7f273b: lea    0x1(%r8),%r8
  0x000000010f7f273f: mov    %r8,(%rax,%rcx,1)
  0x000000010f7f2743: jle    0x000000010f7f29a0  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)

  0x000000010f7f2749: mov    %ebx,0x78(%rsp)
  0x000000010f7f274d: mov    %rdi,0x80(%rsp)
  0x000000010f7f2755: mov    %rsi,%rax
  0x000000010f7f2758: movabs $0x10ec7a878,%rcx  ;   {metadata(method data for {method} {0x000000010eada4e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f7f2762: addq   $0x1,0x128(%rcx)
  0x000000010f7f276a: mov    %rsi,%rax
  0x000000010f7f276d: mov    %rax,%rsi          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x000000010f7f2770: mov    %rax,0x88(%rsp)
  0x000000010f7f2778: nop
  0x000000010f7f2779: nop
  0x000000010f7f277a: nop
  0x000000010f7f277b: nop
  0x000000010f7f277c: nop
  0x000000010f7f277d: nop
  0x000000010f7f277e: nop
  0x000000010f7f277f: callq  0x000000010f7170a0  ; OopMap{[128]=Oop [136]=Oop off=228}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ;   {optimized virtual_call}
  0x000000010f7f2784: mov    %rax,%r8           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x000000010f7f2787: movabs $0x10ec7a878,%rbx  ;   {metadata(method data for {method} {0x000000010eada4e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f7f2791: addq   $0x1,0x138(%rbx)
  0x000000010f7f2799: movabs $0x10ec8c690,%rbx  ;   {metadata(method data for {method} {0x000000010eb7ff20} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x000000010f7f27a3: mov    0xdc(%rbx),%edx
  0x000000010f7f27a9: add    $0x8,%edx
  0x000000010f7f27ac: mov    %edx,0xdc(%rbx)
  0x000000010f7f27b2: movabs $0x10eb7ff20,%rbx  ;   {metadata({method} {0x000000010eb7ff20} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x000000010f7f27bc: and    $0x7ffff8,%edx
  0x000000010f7f27c2: cmp    $0x0,%edx
  0x000000010f7f27c5: je     0x000000010f7f29cb
  0x000000010f7f27cb: mov    %r8,%rbx
  0x000000010f7f27ce: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000000010f7f27d8: movslq %ebx,%rbx
  0x000000010f7f27db: mov    %rbx,%rdi
  0x000000010f7f27de: cmp    $0xffffff,%rbx
  0x000000010f7f27e5: ja     0x000000010f7f29e2
  0x000000010f7f27eb: movabs $0x17,%rsi
  0x000000010f7f27f5: lea    (%rsi,%rbx,2),%rsi
  0x000000010f7f27f9: and    $0xfffffffffffffff8,%rsi
  0x000000010f7f27fd: mov    0x60(%r15),%rax
  0x000000010f7f2801: lea    (%rax,%rsi,1),%rsi
  0x000000010f7f2805: cmp    0x70(%r15),%rsi
  0x000000010f7f2809: ja     0x000000010f7f29e2
  0x000000010f7f280f: mov    %rsi,0x60(%r15)
  0x000000010f7f2813: sub    %rax,%rsi
  0x000000010f7f2816: movq   $0x1,(%rax)
  0x000000010f7f281d: mov    %rdx,%rcx
  0x000000010f7f2820: shr    $0x3,%rcx
  0x000000010f7f2824: mov    %ecx,0x8(%rax)
  0x000000010f7f2827: mov    %ebx,0xc(%rax)
  0x000000010f7f282a: sub    $0x10,%rsi
  0x000000010f7f282e: je     0x000000010f7f2845
  0x000000010f7f2834: xor    %rbx,%rbx
  0x000000010f7f2837: shr    $0x3,%rsi
  0x000000010f7f283b: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000010f7f2840: dec    %rsi
  0x000000010f7f2843: jne    0x000000010f7f283b  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x000000010f7f2845: movabs $0x10ec8c690,%rsi  ;   {metadata(method data for {method} {0x000000010eb7ff20} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x000000010f7f284f: addq   $0x1,0x108(%rsi)
  0x000000010f7f2857: movabs $0x10ec2f708,%rsi  ;   {metadata(method data for {method} {0x000000010eb5b7d8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010f7f2861: mov    0xdc(%rsi),%edx
  0x000000010f7f2867: add    $0x8,%edx
  0x000000010f7f286a: mov    %edx,0xdc(%rsi)
  0x000000010f7f2870: movabs $0x10eb5b7d8,%rsi  ;   {metadata({method} {0x000000010eb5b7d8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010f7f287a: and    $0x7ffff8,%edx
  0x000000010f7f2880: cmp    $0x0,%edx
  0x000000010f7f2883: je     0x000000010f7f29ec
  0x000000010f7f2889: mov    0x78(%rsp),%ebx
  0x000000010f7f288d: cmp    %r8d,%ebx
  0x000000010f7f2890: movabs $0x10ec2f708,%rsi  ;   {metadata(method data for {method} {0x000000010eb5b7d8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010f7f289a: movabs $0x108,%rdx
  0x000000010f7f28a4: jg     0x000000010f7f28b4
  0x000000010f7f28aa: movabs $0x118,%rdx
  0x000000010f7f28b4: mov    (%rsi,%rdx,1),%rcx
  0x000000010f7f28b8: lea    0x1(%rcx),%rcx
  0x000000010f7f28bc: mov    %rcx,(%rsi,%rdx,1)
  0x000000010f7f28c0: jg     0x000000010f7f28db  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x000000010f7f28c6: movabs $0x10ec2f708,%rsi  ;   {metadata(method data for {method} {0x000000010eb5b7d8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010f7f28d0: incl   0x128(%rsi)
  0x000000010f7f28d6: jmpq   0x000000010f7f28de  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x000000010f7f28db: mov    %r8,%rbx           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x000000010f7f28de: mov    0x80(%rsp),%rdi
  0x000000010f7f28e6: movabs $0x10ec8c690,%rsi  ;   {metadata(method data for {method} {0x000000010eb7ff20} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x000000010f7f28f0: addq   $0x1,0x118(%rsi)
  0x000000010f7f28f8: mov    %rdi,%rsi
  0x000000010f7f28fb: mov    $0x0,%edx
  0x000000010f7f2900: mov    %rax,%rcx
  0x000000010f7f2903: mov    $0x0,%r8d
  0x000000010f7f2909: mov    %rbx,%r9
  0x000000010f7f290c: mov    %rax,0x90(%rsp)
  0x000000010f7f2914: lea    (%rdx,%r9,1),%rdi
  0x000000010f7f2918: cmp    0xc(%rsi),%edi
  0x000000010f7f291b: ja     0x000000010f7f2a03
  0x000000010f7f2921: lea    (%r8,%r9,1),%rdi
  0x000000010f7f2925: cmp    0xc(%rcx),%edi
  0x000000010f7f2928: ja     0x000000010f7f2a03
  0x000000010f7f292e: test   %r9d,%r9d
  0x000000010f7f2931: jl     0x000000010f7f2a03
  0x000000010f7f2937: je     0x000000010f7f2973
  0x000000010f7f293d: movslq %edx,%rdx
  0x000000010f7f2940: movslq %r8d,%r8
  0x000000010f7f2943: lea    0x10(%rsi,%rdx,2),%rdi
  0x000000010f7f2948: lea    0x10(%rcx,%r8,2),%rsi
  0x000000010f7f294d: mov    %r9,%rdx
  0x000000010f7f2950: test   $0xf,%esp
  0x000000010f7f2956: je     0x000000010f7f296e
  0x000000010f7f295c: sub    $0x8,%rsp
  0x000000010f7f2960: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x000000010f7f2965: add    $0x8,%rsp
  0x000000010f7f2969: jmpq   0x000000010f7f2973
  0x000000010f7f296e: callq  Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x000000010f7f2973: mov    0x90(%rsp),%rax
  0x000000010f7f297b: mov    0x88(%rsp),%rsi
  0x000000010f7f2983: mov    %rax,%r10
  0x000000010f7f2986: shr    $0x3,%r10
  0x000000010f7f298a: mov    %r10d,0x10(%rsi)
  0x000000010f7f298e: shr    $0x9,%rsi
  0x000000010f7f2992: movabs $0x1065b9000,%rdi
  0x000000010f7f299c: movb   $0x0,(%rsi,%rdi,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)

  0x000000010f7f29a0: add    $0xa0,%rsp
  0x000000010f7f29a7: pop    %rbp
  0x000000010f7f29a8: test   %eax,-0x8d578ae(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7f29ae: retq   
  0x000000010f7f29af: mov    %rdi,0x8(%rsp)
  0x000000010f7f29b4: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7f29bc: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=801}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ;   {runtime_call}
  0x000000010f7f29c1: jmpq   0x000000010f7f2701
  0x000000010f7f29c6: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop rdi=Oop off=811}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ;   {runtime_call}
  0x000000010f7f29cb: mov    %rbx,0x8(%rsp)
  0x000000010f7f29d0: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7f29d8: callq  0x000000010f7d1a20  ; OopMap{[128]=Oop [136]=Oop off=829}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x000000010f7f29dd: jmpq   0x000000010f7f27cb
  0x000000010f7f29e2: callq  0x000000010f7ce120  ; OopMap{[128]=Oop [136]=Oop off=839}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x000000010f7f29e7: jmpq   0x000000010f7f2845
  0x000000010f7f29ec: mov    %rsi,0x8(%rsp)
  0x000000010f7f29f1: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7f29f9: callq  0x000000010f7d1a20  ; OopMap{[128]=Oop [136]=Oop rax=Oop off=862}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x000000010f7f29fe: jmpq   0x000000010f7f2889
  0x000000010f7f2a03: nop
  0x000000010f7f2a04: nop
  0x000000010f7f2a05: nop
  0x000000010f7f2a06: nop
  0x000000010f7f2a07: callq  0x000000010f717520  ; OopMap{[136]=Oop [144]=Oop off=876}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {static_call}
  0x000000010f7f2a0c: jmpq   0x000000010f7f2973
  0x000000010f7f2a11: nop
  0x000000010f7f2a12: nop
  0x000000010f7f2a13: mov    0x2a8(%r15),%rax
  0x000000010f7f2a1a: movabs $0x0,%r10
  0x000000010f7f2a24: mov    %r10,0x2a8(%r15)
  0x000000010f7f2a2b: movabs $0x0,%r10
  0x000000010f7f2a35: mov    %r10,0x2b0(%r15)
  0x000000010f7f2a3c: add    $0xa0,%rsp
  0x000000010f7f2a43: pop    %rbp
  0x000000010f7f2a44: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7f2a49: hlt    
  0x000000010f7f2a4a: hlt    
  0x000000010f7f2a4b: hlt    
  0x000000010f7f2a4c: hlt    
  0x000000010f7f2a4d: hlt    
  0x000000010f7f2a4e: hlt    
  0x000000010f7f2a4f: hlt    
  0x000000010f7f2a50: hlt    
  0x000000010f7f2a51: hlt    
  0x000000010f7f2a52: hlt    
  0x000000010f7f2a53: hlt    
  0x000000010f7f2a54: hlt    
  0x000000010f7f2a55: hlt    
  0x000000010f7f2a56: hlt    
  0x000000010f7f2a57: hlt    
  0x000000010f7f2a58: hlt    
  0x000000010f7f2a59: hlt    
  0x000000010f7f2a5a: hlt    
  0x000000010f7f2a5b: hlt    
  0x000000010f7f2a5c: hlt    
  0x000000010f7f2a5d: hlt    
  0x000000010f7f2a5e: hlt    
  0x000000010f7f2a5f: hlt    
[Stub Code]
  0x000000010f7f2a60: nop                       ;   {no_reloc}
  0x000000010f7f2a61: nop
  0x000000010f7f2a62: nop
  0x000000010f7f2a63: nop
  0x000000010f7f2a64: nop
  0x000000010f7f2a65: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7f2a6f: jmpq   0x000000010f7f2a6f  ;   {runtime_call}
  0x000000010f7f2a74: nop
  0x000000010f7f2a75: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7f2a7f: jmpq   0x000000010f7f2a7f  ;   {runtime_call}
[Exception Handler]
  0x000000010f7f2a84: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f7f2a89: mov    %rsp,-0x28(%rsp)
  0x000000010f7f2a8e: sub    $0x80,%rsp
  0x000000010f7f2a95: mov    %rax,0x78(%rsp)
  0x000000010f7f2a9a: mov    %rcx,0x70(%rsp)
  0x000000010f7f2a9f: mov    %rdx,0x68(%rsp)
  0x000000010f7f2aa4: mov    %rbx,0x60(%rsp)
  0x000000010f7f2aa9: mov    %rbp,0x50(%rsp)
  0x000000010f7f2aae: mov    %rsi,0x48(%rsp)
  0x000000010f7f2ab3: mov    %rdi,0x40(%rsp)
  0x000000010f7f2ab8: mov    %r8,0x38(%rsp)
  0x000000010f7f2abd: mov    %r9,0x30(%rsp)
  0x000000010f7f2ac2: mov    %r10,0x28(%rsp)
  0x000000010f7f2ac7: mov    %r11,0x20(%rsp)
  0x000000010f7f2acc: mov    %r12,0x18(%rsp)
  0x000000010f7f2ad1: mov    %r13,0x10(%rsp)
  0x000000010f7f2ad6: mov    %r14,0x8(%rsp)
  0x000000010f7f2adb: mov    %r15,(%rsp)
  0x000000010f7f2adf: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7f2ae9: movabs $0x10f7f2a89,%rsi  ;   {internal_word}
  0x000000010f7f2af3: mov    %rsp,%rdx
  0x000000010f7f2af6: and    $0xfffffffffffffff0,%rsp
  0x000000010f7f2afa: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7f2aff: hlt    
[Deopt Handler Code]
  0x000000010f7f2b00: movabs $0x10f7f2b00,%r10  ;   {section_word}
  0x000000010f7f2b0a: push   %r10
  0x000000010f7f2b0c: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7f2b11: hlt    
  0x000000010f7f2b12: hlt    
  0x000000010f7f2b13: hlt    
  0x000000010f7f2b14: hlt    
  0x000000010f7f2b15: hlt    
  0x000000010f7f2b16: hlt    
  0x000000010f7f2b17: hlt    
Decoding compiled method 0x000000010f7f2d90:
Code:
[Entry Point]
  # {method} {0x000000010eae5c40} 'getObjectVolatile' '(Ljava/lang/Object;J)Ljava/lang/Object;' in 'sun/misc/Unsafe'
  # this:     rsi:rsi   = 'sun/misc/Unsafe'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    rcx:rcx   = long
  #           [sp+0x50]  (sp of caller)
  0x000000010f7f2f00: mov    0x8(%rsi),%r10d
  0x000000010f7f2f04: shl    $0x3,%r10
  0x000000010f7f2f08: cmp    %r10,%rax
  0x000000010f7f2f0b: je     0x000000010f7f2f18
  0x000000010f7f2f11: jmpq   0x000000010f716e60  ;   {runtime_call}
  0x000000010f7f2f16: xchg   %ax,%ax
[Verified Entry Point]
  0x000000010f7f2f18: mov    %eax,-0x14000(%rsp)
  0x000000010f7f2f1f: push   %rbp
  0x000000010f7f2f20: mov    %rsp,%rbp
  0x000000010f7f2f23: sub    $0x40,%rsp
  0x000000010f7f2f27: mov    %rdx,0x8(%rsp)
  0x000000010f7f2f2c: cmp    $0x0,%rdx
  0x000000010f7f2f30: lea    0x8(%rsp),%rdx
  0x000000010f7f2f35: cmove  0x8(%rsp),%rdx
  0x000000010f7f2f3b: mov    %rsi,(%rsp)
  0x000000010f7f2f3f: cmp    $0x0,%rsi
  0x000000010f7f2f43: lea    (%rsp),%rsi
  0x000000010f7f2f47: cmove  (%rsp),%rsi        ; OopMap{[8]=Oop [0]=Oop off=76}
  0x000000010f7f2f4c: movabs $0x10f7f2f4c,%r10  ;   {section_word}
  0x000000010f7f2f56: mov    %r10,0x1e0(%r15)
  0x000000010f7f2f5d: mov    %rsp,0x1d8(%r15)
  0x000000010f7f2f64: cmpb   $0x0,-0x5f00bb1(%rip)        # 0x00000001098f23ba
                                                ;   {external_word}
  0x000000010f7f2f6b: je     0x000000010f7f2fa7
  0x000000010f7f2f71: push   %rsi
  0x000000010f7f2f72: push   %rdx
  0x000000010f7f2f73: push   %rcx
  0x000000010f7f2f74: movabs $0x10eae5c40,%rsi  ;   {metadata({method} {0x000000010eae5c40} 'getObjectVolatile' '(Ljava/lang/Object;J)Ljava/lang/Object;' in 'sun/misc/Unsafe')}
  0x000000010f7f2f7e: mov    %r15,%rdi
  0x000000010f7f2f81: test   $0xf,%esp
  0x000000010f7f2f87: je     0x000000010f7f2f9f
  0x000000010f7f2f8d: sub    $0x8,%rsp
  0x000000010f7f2f91: callq  0x00000001094ed064  ;   {runtime_call}
  0x000000010f7f2f96: add    $0x8,%rsp
  0x000000010f7f2f9a: jmpq   0x000000010f7f2fa4
  0x000000010f7f2f9f: callq  0x00000001094ed064  ;   {runtime_call}
  0x000000010f7f2fa4: pop    %rcx
  0x000000010f7f2fa5: pop    %rdx
  0x000000010f7f2fa6: pop    %rsi
  0x000000010f7f2fa7: lea    0x1f8(%r15),%rdi
  0x000000010f7f2fae: movl   $0x4,0x270(%r15)
  0x000000010f7f2fb9: callq  0x0000000109584adf  ;   {runtime_call}
  0x000000010f7f2fbe: vzeroupper 
  0x000000010f7f2fc1: movl   $0x5,0x270(%r15)
  0x000000010f7f2fcc: lock addl $0x0,(%rsp)
  0x000000010f7f2fd1: cmpl   $0x0,-0x5ef626b(%rip)        # 0x00000001098fcd70
                                                ;   {external_word}
  0x000000010f7f2fdb: jne    0x000000010f7f2fef
  0x000000010f7f2fe1: cmpl   $0x0,0x30(%r15)
  0x000000010f7f2fe9: je     0x000000010f7f3010
  0x000000010f7f2fef: mov    %rax,-0x8(%rbp)
  0x000000010f7f2ff3: mov    %r15,%rdi
  0x000000010f7f2ff6: mov    %rsp,%r12
  0x000000010f7f2ff9: sub    $0x0,%rsp
  0x000000010f7f2ffd: and    $0xfffffffffffffff0,%rsp
  0x000000010f7f3001: callq  0x000000010956fe1e  ;   {runtime_call}
  0x000000010f7f3006: mov    %r12,%rsp
  0x000000010f7f3009: xor    %r12,%r12
  0x000000010f7f300c: mov    -0x8(%rbp),%rax
  0x000000010f7f3010: movl   $0x8,0x270(%r15)
  0x000000010f7f301b: cmpl   $0x1,0x29c(%r15)
  0x000000010f7f3026: je     0x000000010f7f30c2
  0x000000010f7f302c: cmpb   $0x0,-0x5f00c79(%rip)        # 0x00000001098f23ba
                                                ;   {external_word}
  0x000000010f7f3033: je     0x000000010f7f3071
  0x000000010f7f3039: mov    %rax,-0x8(%rbp)
  0x000000010f7f303d: movabs $0x10eae5c40,%rsi  ;   {metadata({method} {0x000000010eae5c40} 'getObjectVolatile' '(Ljava/lang/Object;J)Ljava/lang/Object;' in 'sun/misc/Unsafe')}
  0x000000010f7f3047: mov    %r15,%rdi
  0x000000010f7f304a: test   $0xf,%esp
  0x000000010f7f3050: je     0x000000010f7f3068
  0x000000010f7f3056: sub    $0x8,%rsp
  0x000000010f7f305a: callq  0x00000001094ecfd6  ;   {runtime_call}
  0x000000010f7f305f: add    $0x8,%rsp
  0x000000010f7f3063: jmpq   0x000000010f7f306d
  0x000000010f7f3068: callq  0x00000001094ecfd6  ;   {runtime_call}
  0x000000010f7f306d: mov    -0x8(%rbp),%rax
  0x000000010f7f3071: movabs $0x0,%r10
  0x000000010f7f307b: mov    %r10,0x1d8(%r15)
  0x000000010f7f3082: movabs $0x0,%r10
  0x000000010f7f308c: mov    %r10,0x1e0(%r15)
  0x000000010f7f3093: test   %rax,%rax
  0x000000010f7f3096: je     0x000000010f7f309f
  0x000000010f7f309c: mov    (%rax),%rax
  0x000000010f7f309f: mov    0x38(%r15),%rcx
  0x000000010f7f30a3: movl   $0x0,0x100(%rcx)
  0x000000010f7f30ad: leaveq 
  0x000000010f7f30ae: cmpq   $0x0,0x8(%r15)
  0x000000010f7f30b6: jne    0x000000010f7f30bd
  0x000000010f7f30bc: retq   
  0x000000010f7f30bd: jmpq   Stub::forward exception  ;   {runtime_call}
  0x000000010f7f30c2: mov    %rax,-0x8(%rbp)
  0x000000010f7f30c6: mov    %rsp,%r12
  0x000000010f7f30c9: sub    $0x0,%rsp
  0x000000010f7f30cd: and    $0xfffffffffffffff0,%rsp
  0x000000010f7f30d1: callq  0x00000001094ead1c  ;   {runtime_call}
  0x000000010f7f30d6: mov    %r12,%rsp
  0x000000010f7f30d9: xor    %r12,%r12
  0x000000010f7f30dc: mov    -0x8(%rbp),%rax
  0x000000010f7f30e0: jmpq   0x000000010f7f302c
  0x000000010f7f30e5: hlt    
  0x000000010f7f30e6: hlt    
  0x000000010f7f30e7: hlt    
Decoding compiled method 0x000000010f7f3110:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010ec15568} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap'
  # parm0:    rsi:rsi   = '[Ljava/util/concurrent/ConcurrentHashMap$Node;'
  # parm1:    rdx       = int
  #           [sp+0x50]  (sp of caller)
  0x000000010f7f3280: mov    %eax,-0x14000(%rsp)
  0x000000010f7f3287: push   %rbp
  0x000000010f7f3288: sub    $0x40,%rsp
  0x000000010f7f328c: movabs $0x10ed56590,%rcx  ;   {metadata(method data for {method} {0x000000010ec15568} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f7f3296: mov    0xdc(%rcx),%eax
  0x000000010f7f329c: add    $0x8,%eax
  0x000000010f7f329f: mov    %eax,0xdc(%rcx)
  0x000000010f7f32a5: movabs $0x10ec15568,%rcx  ;   {metadata({method} {0x000000010ec15568} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f7f32af: and    $0x1ff8,%eax
  0x000000010f7f32b5: cmp    $0x0,%eax
  0x000000010f7f32b8: je     0x000000010f7f33c9  ;*getstatic U
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@0 (line 755)

  0x000000010f7f32be: movslq %edx,%rdx
  0x000000010f7f32c1: mov    $0x2,%ecx
  0x000000010f7f32c6: shl    %cl,%rdx
  0x000000010f7f32c9: movabs $0x10,%r10
  0x000000010f7f32d3: add    %r10,%rdx
  0x000000010f7f32d6: mov    (%rsi,%rdx,1),%eax
  0x000000010f7f32d9: shl    $0x3,%rax
  0x000000010f7f32dd: cmp    $0x0,%rax
  0x000000010f7f32e1: jne    0x000000010f7f32fc
  0x000000010f7f32e3: movabs $0x10ed56590,%rdi  ;   {metadata(method data for {method} {0x000000010ec15568} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f7f32ed: orl    $0x100,0x130(%rdi)
  0x000000010f7f32f7: jmpq   0x000000010f7f33bd
  0x000000010f7f32fc: movabs $0x7c0035040,%rbx  ;   {metadata('java/util/concurrent/ConcurrentHashMap$Node')}
  0x000000010f7f3306: mov    0x8(%rax),%edi
  0x000000010f7f3309: shl    $0x3,%rdi
  0x000000010f7f330d: cmp    0x30(%rdi),%rbx
  0x000000010f7f3311: jne    0x000000010f7f33a1
  0x000000010f7f3317: movabs $0x10ed56590,%rdi  ;   {metadata(method data for {method} {0x000000010ec15568} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f7f3321: mov    0x8(%rax),%ebx
  0x000000010f7f3324: shl    $0x3,%rbx
  0x000000010f7f3328: cmp    0x140(%rdi),%rbx
  0x000000010f7f332f: jne    0x000000010f7f333e
  0x000000010f7f3331: addq   $0x1,0x148(%rdi)
  0x000000010f7f3339: jmpq   0x000000010f7f33bd
  0x000000010f7f333e: cmp    0x150(%rdi),%rbx
  0x000000010f7f3345: jne    0x000000010f7f3354
  0x000000010f7f3347: addq   $0x1,0x158(%rdi)
  0x000000010f7f334f: jmpq   0x000000010f7f33bd
  0x000000010f7f3354: cmpq   $0x0,0x140(%rdi)
  0x000000010f7f335f: jne    0x000000010f7f3378
  0x000000010f7f3361: mov    %rbx,0x140(%rdi)
  0x000000010f7f3368: movq   $0x1,0x148(%rdi)
  0x000000010f7f3373: jmpq   0x000000010f7f33bd
  0x000000010f7f3378: cmpq   $0x0,0x150(%rdi)
  0x000000010f7f3383: jne    0x000000010f7f339c
  0x000000010f7f3385: mov    %rbx,0x150(%rdi)
  0x000000010f7f338c: movq   $0x1,0x158(%rdi)
  0x000000010f7f3397: jmpq   0x000000010f7f33bd
  0x000000010f7f339c: jmpq   0x000000010f7f33bd
  0x000000010f7f33a1: movabs $0x10ed56590,%rdi  ;   {metadata(method data for {method} {0x000000010ec15568} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f7f33ab: subq   $0x1,0x138(%rdi)
  0x000000010f7f33b3: jmpq   0x000000010f7f33e0
  0x000000010f7f33b8: jmpq   0x000000010f7f33bd  ;*checkcast
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@17 (line 755)

  0x000000010f7f33bd: add    $0x40,%rsp
  0x000000010f7f33c1: pop    %rbp
  0x000000010f7f33c2: test   %eax,-0x8d582c8(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7f33c8: retq   
  0x000000010f7f33c9: mov    %rcx,0x8(%rsp)
  0x000000010f7f33ce: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7f33d6: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=347}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@-1 (line 755)
                                                ;   {runtime_call}
  0x000000010f7f33db: jmpq   0x000000010f7f32be
  0x000000010f7f33e0: mov    %rax,(%rsp)
  0x000000010f7f33e4: callq  0x000000010f7cf480  ; OopMap{off=361}
                                                ;*checkcast
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@17 (line 755)
                                                ;   {runtime_call}
  0x000000010f7f33e9: nop
  0x000000010f7f33ea: nop
  0x000000010f7f33eb: mov    0x2a8(%r15),%rax
  0x000000010f7f33f2: movabs $0x0,%r10
  0x000000010f7f33fc: mov    %r10,0x2a8(%r15)
  0x000000010f7f3403: movabs $0x0,%r10
  0x000000010f7f340d: mov    %r10,0x2b0(%r15)
  0x000000010f7f3414: add    $0x40,%rsp
  0x000000010f7f3418: pop    %rbp
  0x000000010f7f3419: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7f341e: hlt    
  0x000000010f7f341f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f7f3420: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f7f3425: mov    %rsp,-0x28(%rsp)
  0x000000010f7f342a: sub    $0x80,%rsp
  0x000000010f7f3431: mov    %rax,0x78(%rsp)
  0x000000010f7f3436: mov    %rcx,0x70(%rsp)
  0x000000010f7f343b: mov    %rdx,0x68(%rsp)
  0x000000010f7f3440: mov    %rbx,0x60(%rsp)
  0x000000010f7f3445: mov    %rbp,0x50(%rsp)
  0x000000010f7f344a: mov    %rsi,0x48(%rsp)
  0x000000010f7f344f: mov    %rdi,0x40(%rsp)
  0x000000010f7f3454: mov    %r8,0x38(%rsp)
  0x000000010f7f3459: mov    %r9,0x30(%rsp)
  0x000000010f7f345e: mov    %r10,0x28(%rsp)
  0x000000010f7f3463: mov    %r11,0x20(%rsp)
  0x000000010f7f3468: mov    %r12,0x18(%rsp)
  0x000000010f7f346d: mov    %r13,0x10(%rsp)
  0x000000010f7f3472: mov    %r14,0x8(%rsp)
  0x000000010f7f3477: mov    %r15,(%rsp)
  0x000000010f7f347b: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7f3485: movabs $0x10f7f3425,%rsi  ;   {internal_word}
  0x000000010f7f348f: mov    %rsp,%rdx
  0x000000010f7f3492: and    $0xfffffffffffffff0,%rsp
  0x000000010f7f3496: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7f349b: hlt    
[Deopt Handler Code]
  0x000000010f7f349c: movabs $0x10f7f349c,%r10  ;   {section_word}
  0x000000010f7f34a6: push   %r10
  0x000000010f7f34a8: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7f34ad: hlt    
  0x000000010f7f34ae: hlt    
  0x000000010f7f34af: hlt    
Decoding compiled method 0x000000010f7f3590:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010eade670} 'append' '(C)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder'
  # this:     rsi:rsi   = 'java/lang/StringBuilder'
  # parm0:    rdx       = char
  #           [sp+0x100]  (sp of caller)
  0x000000010f7f3740: mov    0x8(%rsi),%r10d
  0x000000010f7f3744: shl    $0x3,%r10
  0x000000010f7f3748: cmp    %rax,%r10
  0x000000010f7f374b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7f3751: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7f375c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7f3760: mov    %eax,-0x14000(%rsp)
  0x000000010f7f3767: push   %rbp
  0x000000010f7f3768: sub    $0xf0,%rsp
  0x000000010f7f376f: movabs $0x10ed56760,%rdi  ;   {metadata(method data for {method} {0x000000010eade670} 'append' '(C)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f7f3779: mov    0xdc(%rdi),%ebx
  0x000000010f7f377f: add    $0x8,%ebx
  0x000000010f7f3782: mov    %ebx,0xdc(%rdi)
  0x000000010f7f3788: movabs $0x10eade670,%rdi  ;   {metadata({method} {0x000000010eade670} 'append' '(C)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f7f3792: and    $0x1ff8,%ebx
  0x000000010f7f3798: cmp    $0x0,%ebx
  0x000000010f7f379b: je     0x000000010f7f3b2a  ;*aload_0
                                                ; - java.lang.StringBuilder::append@0 (line 202)

  0x000000010f7f37a1: mov    %rsi,%rdi
  0x000000010f7f37a4: movabs $0x10ed56760,%rbx  ;   {metadata(method data for {method} {0x000000010eade670} 'append' '(C)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f7f37ae: addq   $0x1,0x108(%rbx)
  0x000000010f7f37b6: movabs $0x10ed56898,%rdi  ;   {metadata(method data for {method} {0x000000010eadb618} 'append' '(C)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x000000010f7f37c0: mov    0xdc(%rdi),%ebx
  0x000000010f7f37c6: add    $0x8,%ebx
  0x000000010f7f37c9: mov    %ebx,0xdc(%rdi)
  0x000000010f7f37cf: movabs $0x10eadb618,%rdi  ;   {metadata({method} {0x000000010eadb618} 'append' '(C)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x000000010f7f37d9: and    $0x7ffff8,%ebx
  0x000000010f7f37df: cmp    $0x0,%ebx
  0x000000010f7f37e2: je     0x000000010f7f3b41
  0x000000010f7f37e8: mov    0xc(%rsi),%edi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x000000010f7f37eb: inc    %edi
  0x000000010f7f37ed: mov    %rsi,%rbx
  0x000000010f7f37f0: movabs $0x10ed56898,%rax  ;   {metadata(method data for {method} {0x000000010eadb618} 'append' '(C)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x000000010f7f37fa: addq   $0x1,0x108(%rax)
  0x000000010f7f3802: movabs $0x10ec7a878,%rbx  ;   {metadata(method data for {method} {0x000000010eada4e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f7f380c: mov    0xdc(%rbx),%eax
  0x000000010f7f3812: add    $0x8,%eax
  0x000000010f7f3815: mov    %eax,0xdc(%rbx)
  0x000000010f7f381b: movabs $0x10eada4e0,%rbx  ;   {metadata({method} {0x000000010eada4e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f7f3825: and    $0x7ffff8,%eax
  0x000000010f7f382b: cmp    $0x0,%eax
  0x000000010f7f382e: je     0x000000010f7f3b58
  0x000000010f7f3834: mov    0x10(%rsi),%ebx
  0x000000010f7f3837: shl    $0x3,%rbx          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x000000010f7f383b: mov    0xc(%rbx),%eax     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; implicit exception: dispatches to 0x000000010f7f3b6f
  0x000000010f7f383e: mov    %rdi,%rcx
  0x000000010f7f3841: sub    %eax,%ecx
  0x000000010f7f3843: cmp    $0x0,%ecx
  0x000000010f7f3846: movabs $0x10ec7a878,%rcx  ;   {metadata(method data for {method} {0x000000010eada4e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f7f3850: movabs $0x108,%r8
  0x000000010f7f385a: jle    0x000000010f7f386a
  0x000000010f7f3860: movabs $0x118,%r8
  0x000000010f7f386a: mov    (%rcx,%r8,1),%r9
  0x000000010f7f386e: lea    0x1(%r9),%r9
  0x000000010f7f3872: mov    %r9,(%rcx,%r8,1)
  0x000000010f7f3876: jg     0x000000010f7f3888  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x000000010f7f387c: mov    %edx,0xc4(%rsp)
  0x000000010f7f3883: jmpq   0x000000010f7f3aee  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x000000010f7f3888: mov    %eax,0xc0(%rsp)
  0x000000010f7f388f: mov    %rbx,0xc8(%rsp)
  0x000000010f7f3897: mov    %edx,0xc4(%rsp)
  0x000000010f7f389e: mov    %rsi,%rcx
  0x000000010f7f38a1: movabs $0x10ec7a878,%r8   ;   {metadata(method data for {method} {0x000000010eada4e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f7f38ab: addq   $0x1,0x128(%r8)
  0x000000010f7f38b3: mov    %rdi,%rdx
  0x000000010f7f38b6: mov    %rsi,%rdi
  0x000000010f7f38b9: mov    %rdi,%rsi          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x000000010f7f38bc: mov    %rdi,0xd0(%rsp)
  0x000000010f7f38c4: nop
  0x000000010f7f38c5: nop
  0x000000010f7f38c6: nop
  0x000000010f7f38c7: callq  0x000000010f7170a0  ; OopMap{[208]=Oop [200]=Oop off=396}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {optimized virtual_call}
  0x000000010f7f38cc: mov    %rax,%r8           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x000000010f7f38cf: movabs $0x10ec7a878,%rbx  ;   {metadata(method data for {method} {0x000000010eada4e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f7f38d9: addq   $0x1,0x138(%rbx)
  0x000000010f7f38e1: movabs $0x10ec8c690,%rbx  ;   {metadata(method data for {method} {0x000000010eb7ff20} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x000000010f7f38eb: mov    0xdc(%rbx),%edx
  0x000000010f7f38f1: add    $0x8,%edx
  0x000000010f7f38f4: mov    %edx,0xdc(%rbx)
  0x000000010f7f38fa: movabs $0x10eb7ff20,%rbx  ;   {metadata({method} {0x000000010eb7ff20} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x000000010f7f3904: and    $0x7ffff8,%edx
  0x000000010f7f390a: cmp    $0x0,%edx
  0x000000010f7f390d: je     0x000000010f7f3b74
  0x000000010f7f3913: mov    %r8,%rbx
  0x000000010f7f3916: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000000010f7f3920: movslq %ebx,%rbx
  0x000000010f7f3923: mov    %rbx,%rdi
  0x000000010f7f3926: cmp    $0xffffff,%rbx
  0x000000010f7f392d: ja     0x000000010f7f3b8b
  0x000000010f7f3933: movabs $0x17,%rsi
  0x000000010f7f393d: lea    (%rsi,%rbx,2),%rsi
  0x000000010f7f3941: and    $0xfffffffffffffff8,%rsi
  0x000000010f7f3945: mov    0x60(%r15),%rax
  0x000000010f7f3949: lea    (%rax,%rsi,1),%rsi
  0x000000010f7f394d: cmp    0x70(%r15),%rsi
  0x000000010f7f3951: ja     0x000000010f7f3b8b
  0x000000010f7f3957: mov    %rsi,0x60(%r15)
  0x000000010f7f395b: sub    %rax,%rsi
  0x000000010f7f395e: movq   $0x1,(%rax)
  0x000000010f7f3965: mov    %rdx,%rcx
  0x000000010f7f3968: shr    $0x3,%rcx
  0x000000010f7f396c: mov    %ecx,0x8(%rax)
  0x000000010f7f396f: mov    %ebx,0xc(%rax)
  0x000000010f7f3972: sub    $0x10,%rsi
  0x000000010f7f3976: je     0x000000010f7f398d
  0x000000010f7f397c: xor    %rbx,%rbx
  0x000000010f7f397f: shr    $0x3,%rsi
  0x000000010f7f3983: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000010f7f3988: dec    %rsi
  0x000000010f7f398b: jne    0x000000010f7f3983  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x000000010f7f398d: movabs $0x10ec8c690,%rsi  ;   {metadata(method data for {method} {0x000000010eb7ff20} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x000000010f7f3997: addq   $0x1,0x108(%rsi)
  0x000000010f7f399f: movabs $0x10ec2f708,%rsi  ;   {metadata(method data for {method} {0x000000010eb5b7d8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010f7f39a9: mov    0xdc(%rsi),%edx
  0x000000010f7f39af: add    $0x8,%edx
  0x000000010f7f39b2: mov    %edx,0xdc(%rsi)
  0x000000010f7f39b8: movabs $0x10eb5b7d8,%rsi  ;   {metadata({method} {0x000000010eb5b7d8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010f7f39c2: and    $0x7ffff8,%edx
  0x000000010f7f39c8: cmp    $0x0,%edx
  0x000000010f7f39cb: je     0x000000010f7f3b95
  0x000000010f7f39d1: mov    0xc0(%rsp),%esi
  0x000000010f7f39d8: cmp    %r8d,%esi
  0x000000010f7f39db: movabs $0x10ec2f708,%rdx  ;   {metadata(method data for {method} {0x000000010eb5b7d8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010f7f39e5: movabs $0x108,%rcx
  0x000000010f7f39ef: jg     0x000000010f7f39ff
  0x000000010f7f39f5: movabs $0x118,%rcx
  0x000000010f7f39ff: mov    (%rdx,%rcx,1),%r9
  0x000000010f7f3a03: lea    0x1(%r9),%r9
  0x000000010f7f3a07: mov    %r9,(%rdx,%rcx,1)
  0x000000010f7f3a0b: jg     0x000000010f7f3a29  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x000000010f7f3a11: movabs $0x10ec2f708,%rdx  ;   {metadata(method data for {method} {0x000000010eb5b7d8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010f7f3a1b: incl   0x128(%rdx)
  0x000000010f7f3a21: mov    %rsi,%r9
  0x000000010f7f3a24: jmpq   0x000000010f7f3a2c  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x000000010f7f3a29: mov    %r8,%r9            ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x000000010f7f3a2c: mov    0xc8(%rsp),%rbx
  0x000000010f7f3a34: movabs $0x10ec8c690,%rsi  ;   {metadata(method data for {method} {0x000000010eb7ff20} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x000000010f7f3a3e: addq   $0x1,0x118(%rsi)
  0x000000010f7f3a46: mov    %rbx,%rsi
  0x000000010f7f3a49: mov    $0x0,%edx
  0x000000010f7f3a4e: mov    %rax,%rcx
  0x000000010f7f3a51: mov    $0x0,%r8d
  0x000000010f7f3a57: mov    %rax,0xd8(%rsp)
  0x000000010f7f3a5f: lea    (%rdx,%r9,1),%rdi
  0x000000010f7f3a63: cmp    0xc(%rsi),%edi
  0x000000010f7f3a66: ja     0x000000010f7f3bac
  0x000000010f7f3a6c: lea    (%r8,%r9,1),%rdi
  0x000000010f7f3a70: cmp    0xc(%rcx),%edi
  0x000000010f7f3a73: ja     0x000000010f7f3bac
  0x000000010f7f3a79: test   %r9d,%r9d
  0x000000010f7f3a7c: jl     0x000000010f7f3bac
  0x000000010f7f3a82: je     0x000000010f7f3abe
  0x000000010f7f3a88: movslq %edx,%rdx
  0x000000010f7f3a8b: movslq %r8d,%r8
  0x000000010f7f3a8e: lea    0x10(%rsi,%rdx,2),%rdi
  0x000000010f7f3a93: lea    0x10(%rcx,%r8,2),%rsi
  0x000000010f7f3a98: mov    %r9,%rdx
  0x000000010f7f3a9b: test   $0xf,%esp
  0x000000010f7f3aa1: je     0x000000010f7f3ab9
  0x000000010f7f3aa7: sub    $0x8,%rsp
  0x000000010f7f3aab: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x000000010f7f3ab0: add    $0x8,%rsp
  0x000000010f7f3ab4: jmpq   0x000000010f7f3abe
  0x000000010f7f3ab9: callq  Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x000000010f7f3abe: mov    0xd8(%rsp),%rax
  0x000000010f7f3ac6: mov    0xd0(%rsp),%rsi
  0x000000010f7f3ace: mov    %rax,%r10
  0x000000010f7f3ad1: shr    $0x3,%r10
  0x000000010f7f3ad5: mov    %r10d,0x10(%rsi)
  0x000000010f7f3ad9: mov    %rsi,%rax
  0x000000010f7f3adc: shr    $0x9,%rax
  0x000000010f7f3ae0: movabs $0x1065b9000,%rdi
  0x000000010f7f3aea: movb   $0x0,(%rax,%rdi,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x000000010f7f3aee: mov    0xc4(%rsp),%edx
  0x000000010f7f3af5: mov    0x10(%rsi),%eax
  0x000000010f7f3af8: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x000000010f7f3afc: mov    0xc(%rsi),%edi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x000000010f7f3aff: mov    %rdi,%rbx
  0x000000010f7f3b02: inc    %ebx
  0x000000010f7f3b04: mov    %ebx,0xc(%rsi)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x000000010f7f3b07: movslq %edi,%rbx
  0x000000010f7f3b0a: cmp    0xc(%rax),%edi     ; implicit exception: dispatches to 0x000000010f7f3bb9
  0x000000010f7f3b0d: jae    0x000000010f7f3bc3
  0x000000010f7f3b13: mov    %dx,0x10(%rax,%rbx,2)  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x000000010f7f3b18: mov    %rsi,%rax
  0x000000010f7f3b1b: add    $0xf0,%rsp
  0x000000010f7f3b22: pop    %rbp
  0x000000010f7f3b23: test   %eax,-0x8d58a29(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7f3b29: retq   
  0x000000010f7f3b2a: mov    %rdi,0x8(%rsp)
  0x000000010f7f3b2f: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7f3b37: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=1020}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 202)
                                                ;   {runtime_call}
  0x000000010f7f3b3c: jmpq   0x000000010f7f37a1
  0x000000010f7f3b41: mov    %rdi,0x8(%rsp)
  0x000000010f7f3b46: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7f3b4e: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=1043}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x000000010f7f3b53: jmpq   0x000000010f7f37e8
  0x000000010f7f3b58: mov    %rbx,0x8(%rsp)
  0x000000010f7f3b5d: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7f3b65: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=1066}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x000000010f7f3b6a: jmpq   0x000000010f7f3834
  0x000000010f7f3b6f: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop rbx=Oop off=1076}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x000000010f7f3b74: mov    %rbx,0x8(%rsp)
  0x000000010f7f3b79: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7f3b81: callq  0x000000010f7d1a20  ; OopMap{[208]=Oop [200]=Oop off=1094}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x000000010f7f3b86: jmpq   0x000000010f7f3913
  0x000000010f7f3b8b: callq  0x000000010f7ce120  ; OopMap{[208]=Oop [200]=Oop off=1104}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x000000010f7f3b90: jmpq   0x000000010f7f398d
  0x000000010f7f3b95: mov    %rsi,0x8(%rsp)
  0x000000010f7f3b9a: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7f3ba2: callq  0x000000010f7d1a20  ; OopMap{[208]=Oop [200]=Oop rax=Oop off=1127}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x000000010f7f3ba7: jmpq   0x000000010f7f39d1
  0x000000010f7f3bac: nop
  0x000000010f7f3bad: nop
  0x000000010f7f3bae: nop
  0x000000010f7f3baf: callq  0x000000010f717520  ; OopMap{[208]=Oop [216]=Oop off=1140}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {static_call}
  0x000000010f7f3bb4: jmpq   0x000000010f7f3abe
  0x000000010f7f3bb9: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop rax=Oop off=1150}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x000000010f7f3bbe: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop rax=Oop off=1155}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x000000010f7f3bc3: mov    %rdi,(%rsp)
  0x000000010f7f3bc7: callq  0x000000010f7cca00  ; OopMap{rsi=Oop rax=Oop off=1164}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x000000010f7f3bcc: nop
  0x000000010f7f3bcd: nop
  0x000000010f7f3bce: mov    0x2a8(%r15),%rax
  0x000000010f7f3bd5: movabs $0x0,%r10
  0x000000010f7f3bdf: mov    %r10,0x2a8(%r15)
  0x000000010f7f3be6: movabs $0x0,%r10
  0x000000010f7f3bf0: mov    %r10,0x2b0(%r15)
  0x000000010f7f3bf7: add    $0xf0,%rsp
  0x000000010f7f3bfe: pop    %rbp
  0x000000010f7f3bff: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7f3c04: hlt    
  0x000000010f7f3c05: hlt    
  0x000000010f7f3c06: hlt    
  0x000000010f7f3c07: hlt    
  0x000000010f7f3c08: hlt    
  0x000000010f7f3c09: hlt    
  0x000000010f7f3c0a: hlt    
  0x000000010f7f3c0b: hlt    
  0x000000010f7f3c0c: hlt    
  0x000000010f7f3c0d: hlt    
  0x000000010f7f3c0e: hlt    
  0x000000010f7f3c0f: hlt    
  0x000000010f7f3c10: hlt    
  0x000000010f7f3c11: hlt    
  0x000000010f7f3c12: hlt    
  0x000000010f7f3c13: hlt    
  0x000000010f7f3c14: hlt    
  0x000000010f7f3c15: hlt    
  0x000000010f7f3c16: hlt    
  0x000000010f7f3c17: hlt    
  0x000000010f7f3c18: hlt    
  0x000000010f7f3c19: hlt    
  0x000000010f7f3c1a: hlt    
  0x000000010f7f3c1b: hlt    
  0x000000010f7f3c1c: hlt    
  0x000000010f7f3c1d: hlt    
  0x000000010f7f3c1e: hlt    
  0x000000010f7f3c1f: hlt    
[Stub Code]
  0x000000010f7f3c20: nop                       ;   {no_reloc}
  0x000000010f7f3c21: nop
  0x000000010f7f3c22: nop
  0x000000010f7f3c23: nop
  0x000000010f7f3c24: nop
  0x000000010f7f3c25: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7f3c2f: jmpq   0x000000010f7f3c2f  ;   {runtime_call}
  0x000000010f7f3c34: nop
  0x000000010f7f3c35: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7f3c3f: jmpq   0x000000010f7f3c3f  ;   {runtime_call}
[Exception Handler]
  0x000000010f7f3c44: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f7f3c49: mov    %rsp,-0x28(%rsp)
  0x000000010f7f3c4e: sub    $0x80,%rsp
  0x000000010f7f3c55: mov    %rax,0x78(%rsp)
  0x000000010f7f3c5a: mov    %rcx,0x70(%rsp)
  0x000000010f7f3c5f: mov    %rdx,0x68(%rsp)
  0x000000010f7f3c64: mov    %rbx,0x60(%rsp)
  0x000000010f7f3c69: mov    %rbp,0x50(%rsp)
  0x000000010f7f3c6e: mov    %rsi,0x48(%rsp)
  0x000000010f7f3c73: mov    %rdi,0x40(%rsp)
  0x000000010f7f3c78: mov    %r8,0x38(%rsp)
  0x000000010f7f3c7d: mov    %r9,0x30(%rsp)
  0x000000010f7f3c82: mov    %r10,0x28(%rsp)
  0x000000010f7f3c87: mov    %r11,0x20(%rsp)
  0x000000010f7f3c8c: mov    %r12,0x18(%rsp)
  0x000000010f7f3c91: mov    %r13,0x10(%rsp)
  0x000000010f7f3c96: mov    %r14,0x8(%rsp)
  0x000000010f7f3c9b: mov    %r15,(%rsp)
  0x000000010f7f3c9f: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7f3ca9: movabs $0x10f7f3c49,%rsi  ;   {internal_word}
  0x000000010f7f3cb3: mov    %rsp,%rdx
  0x000000010f7f3cb6: and    $0xfffffffffffffff0,%rsp
  0x000000010f7f3cba: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7f3cbf: hlt    
[Deopt Handler Code]
  0x000000010f7f3cc0: movabs $0x10f7f3cc0,%r10  ;   {section_word}
  0x000000010f7f3cca: push   %r10
  0x000000010f7f3ccc: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7f3cd1: hlt    
  0x000000010f7f3cd2: hlt    
  0x000000010f7f3cd3: hlt    
  0x000000010f7f3cd4: hlt    
  0x000000010f7f3cd5: hlt    
  0x000000010f7f3cd6: hlt    
  0x000000010f7f3cd7: hlt    
Decoding compiled method 0x000000010f7f4090:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010eadb618} 'append' '(C)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder'
  # this:     rsi:rsi   = 'java/lang/AbstractStringBuilder'
  # parm0:    rdx       = char
  #           [sp+0xe0]  (sp of caller)
  0x000000010f7f4240: mov    0x8(%rsi),%r10d
  0x000000010f7f4244: shl    $0x3,%r10
  0x000000010f7f4248: cmp    %rax,%r10
  0x000000010f7f424b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7f4251: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7f425c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7f4260: mov    %eax,-0x14000(%rsp)
  0x000000010f7f4267: push   %rbp
  0x000000010f7f4268: sub    $0xd0,%rsp
  0x000000010f7f426f: movabs $0x10ed56898,%rdi  ;   {metadata(method data for {method} {0x000000010eadb618} 'append' '(C)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x000000010f7f4279: mov    0xdc(%rdi),%ebx
  0x000000010f7f427f: add    $0x8,%ebx
  0x000000010f7f4282: mov    %ebx,0xdc(%rdi)
  0x000000010f7f4288: movabs $0x10eadb618,%rdi  ;   {metadata({method} {0x000000010eadb618} 'append' '(C)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x000000010f7f4292: and    $0x1ff8,%ebx
  0x000000010f7f4298: cmp    $0x0,%ebx
  0x000000010f7f429b: je     0x000000010f7f45e2  ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::append@0 (line 649)

  0x000000010f7f42a1: mov    0xc(%rsi),%edi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)

  0x000000010f7f42a4: inc    %edi
  0x000000010f7f42a6: mov    %rsi,%rbx
  0x000000010f7f42a9: movabs $0x10ed56898,%rax  ;   {metadata(method data for {method} {0x000000010eadb618} 'append' '(C)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x000000010f7f42b3: addq   $0x1,0x108(%rax)
  0x000000010f7f42bb: movabs $0x10ec7a878,%rbx  ;   {metadata(method data for {method} {0x000000010eada4e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f7f42c5: mov    0xdc(%rbx),%eax
  0x000000010f7f42cb: add    $0x8,%eax
  0x000000010f7f42ce: mov    %eax,0xdc(%rbx)
  0x000000010f7f42d4: movabs $0x10eada4e0,%rbx  ;   {metadata({method} {0x000000010eada4e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f7f42de: and    $0x7ffff8,%eax
  0x000000010f7f42e4: cmp    $0x0,%eax
  0x000000010f7f42e7: je     0x000000010f7f45f9
  0x000000010f7f42ed: mov    0x10(%rsi),%ebx
  0x000000010f7f42f0: shl    $0x3,%rbx          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000000010f7f42f4: mov    0xc(%rbx),%eax     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; implicit exception: dispatches to 0x000000010f7f4610
  0x000000010f7f42f7: mov    %rdi,%rcx
  0x000000010f7f42fa: sub    %eax,%ecx
  0x000000010f7f42fc: cmp    $0x0,%ecx
  0x000000010f7f42ff: movabs $0x10ec7a878,%rcx  ;   {metadata(method data for {method} {0x000000010eada4e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f7f4309: movabs $0x108,%r8
  0x000000010f7f4313: jle    0x000000010f7f4323
  0x000000010f7f4319: movabs $0x118,%r8
  0x000000010f7f4323: mov    (%rcx,%r8,1),%r9
  0x000000010f7f4327: lea    0x1(%r9),%r9
  0x000000010f7f432b: mov    %r9,(%rcx,%r8,1)
  0x000000010f7f432f: jg     0x000000010f7f4341  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000000010f7f4335: mov    %edx,0xac(%rsp)
  0x000000010f7f433c: jmpq   0x000000010f7f45a6  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000000010f7f4341: mov    %eax,0xa8(%rsp)
  0x000000010f7f4348: mov    %rbx,0xb0(%rsp)
  0x000000010f7f4350: mov    %edx,0xac(%rsp)
  0x000000010f7f4357: mov    %rsi,%rcx
  0x000000010f7f435a: movabs $0x10ec7a878,%r8   ;   {metadata(method data for {method} {0x000000010eada4e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f7f4364: addq   $0x1,0x128(%r8)
  0x000000010f7f436c: mov    %rdi,%rdx
  0x000000010f7f436f: mov    %rsi,%rdi
  0x000000010f7f4372: mov    %rdi,%rsi          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000000010f7f4375: mov    %rdi,0xb8(%rsp)
  0x000000010f7f437d: nop
  0x000000010f7f437e: nop
  0x000000010f7f437f: callq  0x000000010f7170a0  ; OopMap{[184]=Oop [176]=Oop off=324}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {optimized virtual_call}
  0x000000010f7f4384: mov    %rax,%r8           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000000010f7f4387: movabs $0x10ec7a878,%rbx  ;   {metadata(method data for {method} {0x000000010eada4e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f7f4391: addq   $0x1,0x138(%rbx)
  0x000000010f7f4399: movabs $0x10ec8c690,%rbx  ;   {metadata(method data for {method} {0x000000010eb7ff20} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x000000010f7f43a3: mov    0xdc(%rbx),%edx
  0x000000010f7f43a9: add    $0x8,%edx
  0x000000010f7f43ac: mov    %edx,0xdc(%rbx)
  0x000000010f7f43b2: movabs $0x10eb7ff20,%rbx  ;   {metadata({method} {0x000000010eb7ff20} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x000000010f7f43bc: and    $0x7ffff8,%edx
  0x000000010f7f43c2: cmp    $0x0,%edx
  0x000000010f7f43c5: je     0x000000010f7f4615
  0x000000010f7f43cb: mov    %r8,%rbx
  0x000000010f7f43ce: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000000010f7f43d8: movslq %ebx,%rbx
  0x000000010f7f43db: mov    %rbx,%rdi
  0x000000010f7f43de: cmp    $0xffffff,%rbx
  0x000000010f7f43e5: ja     0x000000010f7f462c
  0x000000010f7f43eb: movabs $0x17,%rsi
  0x000000010f7f43f5: lea    (%rsi,%rbx,2),%rsi
  0x000000010f7f43f9: and    $0xfffffffffffffff8,%rsi
  0x000000010f7f43fd: mov    0x60(%r15),%rax
  0x000000010f7f4401: lea    (%rax,%rsi,1),%rsi
  0x000000010f7f4405: cmp    0x70(%r15),%rsi
  0x000000010f7f4409: ja     0x000000010f7f462c
  0x000000010f7f440f: mov    %rsi,0x60(%r15)
  0x000000010f7f4413: sub    %rax,%rsi
  0x000000010f7f4416: movq   $0x1,(%rax)
  0x000000010f7f441d: mov    %rdx,%rcx
  0x000000010f7f4420: shr    $0x3,%rcx
  0x000000010f7f4424: mov    %ecx,0x8(%rax)
  0x000000010f7f4427: mov    %ebx,0xc(%rax)
  0x000000010f7f442a: sub    $0x10,%rsi
  0x000000010f7f442e: je     0x000000010f7f4445
  0x000000010f7f4434: xor    %rbx,%rbx
  0x000000010f7f4437: shr    $0x3,%rsi
  0x000000010f7f443b: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000010f7f4440: dec    %rsi
  0x000000010f7f4443: jne    0x000000010f7f443b  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000000010f7f4445: movabs $0x10ec8c690,%rsi  ;   {metadata(method data for {method} {0x000000010eb7ff20} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x000000010f7f444f: addq   $0x1,0x108(%rsi)
  0x000000010f7f4457: movabs $0x10ec2f708,%rsi  ;   {metadata(method data for {method} {0x000000010eb5b7d8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010f7f4461: mov    0xdc(%rsi),%edx
  0x000000010f7f4467: add    $0x8,%edx
  0x000000010f7f446a: mov    %edx,0xdc(%rsi)
  0x000000010f7f4470: movabs $0x10eb5b7d8,%rsi  ;   {metadata({method} {0x000000010eb5b7d8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010f7f447a: and    $0x7ffff8,%edx
  0x000000010f7f4480: cmp    $0x0,%edx
  0x000000010f7f4483: je     0x000000010f7f4636
  0x000000010f7f4489: mov    0xa8(%rsp),%esi
  0x000000010f7f4490: cmp    %r8d,%esi
  0x000000010f7f4493: movabs $0x10ec2f708,%rdx  ;   {metadata(method data for {method} {0x000000010eb5b7d8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010f7f449d: movabs $0x108,%rcx
  0x000000010f7f44a7: jg     0x000000010f7f44b7
  0x000000010f7f44ad: movabs $0x118,%rcx
  0x000000010f7f44b7: mov    (%rdx,%rcx,1),%r9
  0x000000010f7f44bb: lea    0x1(%r9),%r9
  0x000000010f7f44bf: mov    %r9,(%rdx,%rcx,1)
  0x000000010f7f44c3: jg     0x000000010f7f44e1  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000000010f7f44c9: movabs $0x10ec2f708,%rdx  ;   {metadata(method data for {method} {0x000000010eb5b7d8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010f7f44d3: incl   0x128(%rdx)
  0x000000010f7f44d9: mov    %rsi,%r9
  0x000000010f7f44dc: jmpq   0x000000010f7f44e4  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000000010f7f44e1: mov    %r8,%r9            ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000000010f7f44e4: mov    0xb0(%rsp),%rbx
  0x000000010f7f44ec: movabs $0x10ec8c690,%rsi  ;   {metadata(method data for {method} {0x000000010eb7ff20} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x000000010f7f44f6: addq   $0x1,0x118(%rsi)
  0x000000010f7f44fe: mov    %rbx,%rsi
  0x000000010f7f4501: mov    $0x0,%edx
  0x000000010f7f4506: mov    %rax,%rcx
  0x000000010f7f4509: mov    $0x0,%r8d
  0x000000010f7f450f: mov    %rax,0xc0(%rsp)
  0x000000010f7f4517: lea    (%rdx,%r9,1),%rdi
  0x000000010f7f451b: cmp    0xc(%rsi),%edi
  0x000000010f7f451e: ja     0x000000010f7f464d
  0x000000010f7f4524: lea    (%r8,%r9,1),%rdi
  0x000000010f7f4528: cmp    0xc(%rcx),%edi
  0x000000010f7f452b: ja     0x000000010f7f464d
  0x000000010f7f4531: test   %r9d,%r9d
  0x000000010f7f4534: jl     0x000000010f7f464d
  0x000000010f7f453a: je     0x000000010f7f4576
  0x000000010f7f4540: movslq %edx,%rdx
  0x000000010f7f4543: movslq %r8d,%r8
  0x000000010f7f4546: lea    0x10(%rsi,%rdx,2),%rdi
  0x000000010f7f454b: lea    0x10(%rcx,%r8,2),%rsi
  0x000000010f7f4550: mov    %r9,%rdx
  0x000000010f7f4553: test   $0xf,%esp
  0x000000010f7f4559: je     0x000000010f7f4571
  0x000000010f7f455f: sub    $0x8,%rsp
  0x000000010f7f4563: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x000000010f7f4568: add    $0x8,%rsp
  0x000000010f7f456c: jmpq   0x000000010f7f4576
  0x000000010f7f4571: callq  Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {runtime_call}
  0x000000010f7f4576: mov    0xc0(%rsp),%rax
  0x000000010f7f457e: mov    0xb8(%rsp),%rsi
  0x000000010f7f4586: mov    %rax,%r10
  0x000000010f7f4589: shr    $0x3,%r10
  0x000000010f7f458d: mov    %r10d,0x10(%rsi)
  0x000000010f7f4591: mov    %rsi,%rax
  0x000000010f7f4594: shr    $0x9,%rax
  0x000000010f7f4598: movabs $0x1065b9000,%rdi
  0x000000010f7f45a2: movb   $0x0,(%rax,%rdi,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000000010f7f45a6: mov    0xac(%rsp),%edx
  0x000000010f7f45ad: mov    0x10(%rsi),%eax
  0x000000010f7f45b0: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 650)

  0x000000010f7f45b4: mov    0xc(%rsi),%edi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)

  0x000000010f7f45b7: mov    %rdi,%rbx
  0x000000010f7f45ba: inc    %ebx
  0x000000010f7f45bc: mov    %ebx,0xc(%rsi)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)

  0x000000010f7f45bf: movslq %edi,%rbx
  0x000000010f7f45c2: cmp    0xc(%rax),%edi     ; implicit exception: dispatches to 0x000000010f7f4659
  0x000000010f7f45c5: jae    0x000000010f7f4663
  0x000000010f7f45cb: mov    %dx,0x10(%rax,%rbx,2)  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)

  0x000000010f7f45d0: mov    %rsi,%rax
  0x000000010f7f45d3: add    $0xd0,%rsp
  0x000000010f7f45da: pop    %rbp
  0x000000010f7f45db: test   %eax,-0x8d594e1(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7f45e1: retq   
  0x000000010f7f45e2: mov    %rdi,0x8(%rsp)
  0x000000010f7f45e7: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7f45ef: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=948}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)
                                                ;   {runtime_call}
  0x000000010f7f45f4: jmpq   0x000000010f7f42a1
  0x000000010f7f45f9: mov    %rbx,0x8(%rsp)
  0x000000010f7f45fe: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7f4606: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=971}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {runtime_call}
  0x000000010f7f460b: jmpq   0x000000010f7f42ed
  0x000000010f7f4610: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop rbx=Oop off=981}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {runtime_call}
  0x000000010f7f4615: mov    %rbx,0x8(%rsp)
  0x000000010f7f461a: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7f4622: callq  0x000000010f7d1a20  ; OopMap{[184]=Oop [176]=Oop off=999}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {runtime_call}
  0x000000010f7f4627: jmpq   0x000000010f7f43cb
  0x000000010f7f462c: callq  0x000000010f7ce120  ; OopMap{[184]=Oop [176]=Oop off=1009}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {runtime_call}
  0x000000010f7f4631: jmpq   0x000000010f7f4445
  0x000000010f7f4636: mov    %rsi,0x8(%rsp)
  0x000000010f7f463b: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7f4643: callq  0x000000010f7d1a20  ; OopMap{[184]=Oop [176]=Oop rax=Oop off=1032}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {runtime_call}
  0x000000010f7f4648: jmpq   0x000000010f7f4489
  0x000000010f7f464d: nop
  0x000000010f7f464e: nop
  0x000000010f7f464f: callq  0x000000010f717520  ; OopMap{[184]=Oop [192]=Oop off=1044}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {static_call}
  0x000000010f7f4654: jmpq   0x000000010f7f4576
  0x000000010f7f4659: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop rax=Oop off=1054}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ;   {runtime_call}
  0x000000010f7f465e: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop rax=Oop off=1059}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ;   {runtime_call}
  0x000000010f7f4663: mov    %rdi,(%rsp)
  0x000000010f7f4667: callq  0x000000010f7cca00  ; OopMap{rsi=Oop rax=Oop off=1068}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ;   {runtime_call}
  0x000000010f7f466c: nop
  0x000000010f7f466d: nop
  0x000000010f7f466e: mov    0x2a8(%r15),%rax
  0x000000010f7f4675: movabs $0x0,%r10
  0x000000010f7f467f: mov    %r10,0x2a8(%r15)
  0x000000010f7f4686: movabs $0x0,%r10
  0x000000010f7f4690: mov    %r10,0x2b0(%r15)
  0x000000010f7f4697: add    $0xd0,%rsp
  0x000000010f7f469e: pop    %rbp
  0x000000010f7f469f: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7f46a4: hlt    
  0x000000010f7f46a5: hlt    
  0x000000010f7f46a6: hlt    
  0x000000010f7f46a7: hlt    
  0x000000010f7f46a8: hlt    
  0x000000010f7f46a9: hlt    
  0x000000010f7f46aa: hlt    
  0x000000010f7f46ab: hlt    
  0x000000010f7f46ac: hlt    
  0x000000010f7f46ad: hlt    
  0x000000010f7f46ae: hlt    
  0x000000010f7f46af: hlt    
  0x000000010f7f46b0: hlt    
  0x000000010f7f46b1: hlt    
  0x000000010f7f46b2: hlt    
  0x000000010f7f46b3: hlt    
  0x000000010f7f46b4: hlt    
  0x000000010f7f46b5: hlt    
  0x000000010f7f46b6: hlt    
  0x000000010f7f46b7: hlt    
  0x000000010f7f46b8: hlt    
  0x000000010f7f46b9: hlt    
  0x000000010f7f46ba: hlt    
  0x000000010f7f46bb: hlt    
  0x000000010f7f46bc: hlt    
  0x000000010f7f46bd: hlt    
  0x000000010f7f46be: hlt    
  0x000000010f7f46bf: hlt    
[Stub Code]
  0x000000010f7f46c0: nop                       ;   {no_reloc}
  0x000000010f7f46c1: nop
  0x000000010f7f46c2: nop
  0x000000010f7f46c3: nop
  0x000000010f7f46c4: nop
  0x000000010f7f46c5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7f46cf: jmpq   0x000000010f7f46cf  ;   {runtime_call}
  0x000000010f7f46d4: nop
  0x000000010f7f46d5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7f46df: jmpq   0x000000010f7f46df  ;   {runtime_call}
[Exception Handler]
  0x000000010f7f46e4: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f7f46e9: mov    %rsp,-0x28(%rsp)
  0x000000010f7f46ee: sub    $0x80,%rsp
  0x000000010f7f46f5: mov    %rax,0x78(%rsp)
  0x000000010f7f46fa: mov    %rcx,0x70(%rsp)
  0x000000010f7f46ff: mov    %rdx,0x68(%rsp)
  0x000000010f7f4704: mov    %rbx,0x60(%rsp)
  0x000000010f7f4709: mov    %rbp,0x50(%rsp)
  0x000000010f7f470e: mov    %rsi,0x48(%rsp)
  0x000000010f7f4713: mov    %rdi,0x40(%rsp)
  0x000000010f7f4718: mov    %r8,0x38(%rsp)
  0x000000010f7f471d: mov    %r9,0x30(%rsp)
  0x000000010f7f4722: mov    %r10,0x28(%rsp)
  0x000000010f7f4727: mov    %r11,0x20(%rsp)
  0x000000010f7f472c: mov    %r12,0x18(%rsp)
  0x000000010f7f4731: mov    %r13,0x10(%rsp)
  0x000000010f7f4736: mov    %r14,0x8(%rsp)
  0x000000010f7f473b: mov    %r15,(%rsp)
  0x000000010f7f473f: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7f4749: movabs $0x10f7f46e9,%rsi  ;   {internal_word}
  0x000000010f7f4753: mov    %rsp,%rdx
  0x000000010f7f4756: and    $0xfffffffffffffff0,%rsp
  0x000000010f7f475a: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7f475f: hlt    
[Deopt Handler Code]
  0x000000010f7f4760: movabs $0x10f7f4760,%r10  ;   {section_word}
  0x000000010f7f476a: push   %r10
  0x000000010f7f476c: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7f4771: hlt    
  0x000000010f7f4772: hlt    
  0x000000010f7f4773: hlt    
  0x000000010f7f4774: hlt    
  0x000000010f7f4775: hlt    
  0x000000010f7f4776: hlt    
  0x000000010f7f4777: hlt    
Decoding compiled method 0x000000010f7e22d0:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000010ed62078} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8:r8     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x000000010f7e2400: mov    0x18(%r8),%rbx
  0x000000010f7e2404: test   %rbx,%rbx
  0x000000010f7e2407: je     0x000000010f7e2410
  0x000000010f7e240d: jmpq   *0x40(%rbx)
  0x000000010f7e2410: jmpq   0x000000010f6d61a0  ;   {runtime_call}
  0x000000010f7e2415: hlt    
  0x000000010f7e2416: hlt    
  0x000000010f7e2417: hlt    
Decoding compiled method 0x000000010f7f4f10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ea71a70} 'getClassLoader0' '()Ljava/lang/ClassLoader;' in 'java/lang/Class'
  #           [sp+0x40]  (sp of caller)
  0x000000010f7f5060: mov    0x8(%rsi),%r10d
  0x000000010f7f5064: shl    $0x3,%r10
  0x000000010f7f5068: cmp    %rax,%r10
  0x000000010f7f506b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7f5071: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7f507c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7f5080: mov    %eax,-0x14000(%rsp)
  0x000000010f7f5087: push   %rbp
  0x000000010f7f5088: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.lang.Class::getClassLoader0@0 (line 689)

  0x000000010f7f508c: mov    0x18(%rsi),%eax
  0x000000010f7f508f: shl    $0x3,%rax          ;*getfield classLoader
                                                ; - java.lang.Class::getClassLoader0@1 (line 689)

  0x000000010f7f5093: add    $0x30,%rsp
  0x000000010f7f5097: pop    %rbp
  0x000000010f7f5098: test   %eax,-0x8d59f9e(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7f509e: retq   
  0x000000010f7f509f: nop
  0x000000010f7f50a0: nop
  0x000000010f7f50a1: mov    0x2a8(%r15),%rax
  0x000000010f7f50a8: movabs $0x0,%r10
  0x000000010f7f50b2: mov    %r10,0x2a8(%r15)
  0x000000010f7f50b9: movabs $0x0,%r10
  0x000000010f7f50c3: mov    %r10,0x2b0(%r15)
  0x000000010f7f50ca: add    $0x30,%rsp
  0x000000010f7f50ce: pop    %rbp
  0x000000010f7f50cf: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7f50d4: hlt    
  0x000000010f7f50d5: hlt    
  0x000000010f7f50d6: hlt    
  0x000000010f7f50d7: hlt    
  0x000000010f7f50d8: hlt    
  0x000000010f7f50d9: hlt    
  0x000000010f7f50da: hlt    
  0x000000010f7f50db: hlt    
  0x000000010f7f50dc: hlt    
  0x000000010f7f50dd: hlt    
  0x000000010f7f50de: hlt    
  0x000000010f7f50df: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f7f50e0: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f7f50e5: mov    %rsp,-0x28(%rsp)
  0x000000010f7f50ea: sub    $0x80,%rsp
  0x000000010f7f50f1: mov    %rax,0x78(%rsp)
  0x000000010f7f50f6: mov    %rcx,0x70(%rsp)
  0x000000010f7f50fb: mov    %rdx,0x68(%rsp)
  0x000000010f7f5100: mov    %rbx,0x60(%rsp)
  0x000000010f7f5105: mov    %rbp,0x50(%rsp)
  0x000000010f7f510a: mov    %rsi,0x48(%rsp)
  0x000000010f7f510f: mov    %rdi,0x40(%rsp)
  0x000000010f7f5114: mov    %r8,0x38(%rsp)
  0x000000010f7f5119: mov    %r9,0x30(%rsp)
  0x000000010f7f511e: mov    %r10,0x28(%rsp)
  0x000000010f7f5123: mov    %r11,0x20(%rsp)
  0x000000010f7f5128: mov    %r12,0x18(%rsp)
  0x000000010f7f512d: mov    %r13,0x10(%rsp)
  0x000000010f7f5132: mov    %r14,0x8(%rsp)
  0x000000010f7f5137: mov    %r15,(%rsp)
  0x000000010f7f513b: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7f5145: movabs $0x10f7f50e5,%rsi  ;   {internal_word}
  0x000000010f7f514f: mov    %rsp,%rdx
  0x000000010f7f5152: and    $0xfffffffffffffff0,%rsp
  0x000000010f7f5156: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7f515b: hlt    
[Deopt Handler Code]
  0x000000010f7f515c: movabs $0x10f7f515c,%r10  ;   {section_word}
  0x000000010f7f5166: push   %r10
  0x000000010f7f5168: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7f516d: hlt    
  0x000000010f7f516e: hlt    
  0x000000010f7f516f: hlt    
Decoding compiled method 0x000000010f7e6bd0:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000010ed63b60} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x000000010f7e6d00: mov    0x18(%rdx),%rbx
  0x000000010f7e6d04: test   %rbx,%rbx
  0x000000010f7e6d07: je     0x000000010f7e6d10
  0x000000010f7e6d0d: jmpq   *0x40(%rbx)
  0x000000010f7e6d10: jmpq   0x000000010f6d61a0  ;   {runtime_call}
  0x000000010f7e6d15: hlt    
  0x000000010f7e6d16: hlt    
  0x000000010f7e6d17: hlt    
Decoding compiled method 0x000000010f7f5210:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010eaa7c80} 'getName' '()Ljava/lang/String;' in 'java/lang/reflect/Method'
  #           [sp+0x40]  (sp of caller)
  0x000000010f7f5360: mov    0x8(%rsi),%r10d
  0x000000010f7f5364: shl    $0x3,%r10
  0x000000010f7f5368: cmp    %rax,%r10
  0x000000010f7f536b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7f5371: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7f537c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7f5380: mov    %eax,-0x14000(%rsp)
  0x000000010f7f5387: push   %rbp
  0x000000010f7f5388: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.lang.reflect.Method::getName@0 (line 194)

  0x000000010f7f538c: mov    0x2c(%rsi),%eax
  0x000000010f7f538f: shl    $0x3,%rax          ;*getfield name
                                                ; - java.lang.reflect.Method::getName@1 (line 194)

  0x000000010f7f5393: add    $0x30,%rsp
  0x000000010f7f5397: pop    %rbp
  0x000000010f7f5398: test   %eax,-0x8d5a29e(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7f539e: retq   
  0x000000010f7f539f: nop
  0x000000010f7f53a0: nop
  0x000000010f7f53a1: mov    0x2a8(%r15),%rax
  0x000000010f7f53a8: movabs $0x0,%r10
  0x000000010f7f53b2: mov    %r10,0x2a8(%r15)
  0x000000010f7f53b9: movabs $0x0,%r10
  0x000000010f7f53c3: mov    %r10,0x2b0(%r15)
  0x000000010f7f53ca: add    $0x30,%rsp
  0x000000010f7f53ce: pop    %rbp
  0x000000010f7f53cf: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7f53d4: hlt    
  0x000000010f7f53d5: hlt    
  0x000000010f7f53d6: hlt    
  0x000000010f7f53d7: hlt    
  0x000000010f7f53d8: hlt    
  0x000000010f7f53d9: hlt    
  0x000000010f7f53da: hlt    
  0x000000010f7f53db: hlt    
  0x000000010f7f53dc: hlt    
  0x000000010f7f53dd: hlt    
  0x000000010f7f53de: hlt    
  0x000000010f7f53df: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f7f53e0: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f7f53e5: mov    %rsp,-0x28(%rsp)
  0x000000010f7f53ea: sub    $0x80,%rsp
  0x000000010f7f53f1: mov    %rax,0x78(%rsp)
  0x000000010f7f53f6: mov    %rcx,0x70(%rsp)
  0x000000010f7f53fb: mov    %rdx,0x68(%rsp)
  0x000000010f7f5400: mov    %rbx,0x60(%rsp)
  0x000000010f7f5405: mov    %rbp,0x50(%rsp)
  0x000000010f7f540a: mov    %rsi,0x48(%rsp)
  0x000000010f7f540f: mov    %rdi,0x40(%rsp)
  0x000000010f7f5414: mov    %r8,0x38(%rsp)
  0x000000010f7f5419: mov    %r9,0x30(%rsp)
  0x000000010f7f541e: mov    %r10,0x28(%rsp)
  0x000000010f7f5423: mov    %r11,0x20(%rsp)
  0x000000010f7f5428: mov    %r12,0x18(%rsp)
  0x000000010f7f542d: mov    %r13,0x10(%rsp)
  0x000000010f7f5432: mov    %r14,0x8(%rsp)
  0x000000010f7f5437: mov    %r15,(%rsp)
  0x000000010f7f543b: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7f5445: movabs $0x10f7f53e5,%rsi  ;   {internal_word}
  0x000000010f7f544f: mov    %rsp,%rdx
  0x000000010f7f5452: and    $0xfffffffffffffff0,%rsp
  0x000000010f7f5456: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7f545b: hlt    
[Deopt Handler Code]
  0x000000010f7f545c: movabs $0x10f7f545c,%r10  ;   {section_word}
  0x000000010f7f5466: push   %r10
  0x000000010f7f5468: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7f546d: hlt    
  0x000000010f7f546e: hlt    
  0x000000010f7f546f: hlt    
Decoding compiled method 0x000000010f7f6190:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000010ed91540} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)V' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x000000010f7f62c0: mov    0x18(%rdx),%rbx
  0x000000010f7f62c4: test   %rbx,%rbx
  0x000000010f7f62c7: je     0x000000010f7f62d0
  0x000000010f7f62cd: jmpq   *0x40(%rbx)
  0x000000010f7f62d0: jmpq   0x000000010f6d61a0  ;   {runtime_call}
  0x000000010f7f62d5: hlt    
  0x000000010f7f62d6: hlt    
  0x000000010f7f62d7: hlt    
Decoding compiled method 0x000000010f7f6310:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000010ed91698} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)J' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x000000010f7f6440: mov    0x18(%rdx),%rbx
  0x000000010f7f6444: test   %rbx,%rbx
  0x000000010f7f6447: je     0x000000010f7f6450
  0x000000010f7f644d: jmpq   *0x40(%rbx)
  0x000000010f7f6450: jmpq   0x000000010f6d61a0  ;   {runtime_call}
  0x000000010f7f6455: hlt    
  0x000000010f7f6456: hlt    
  0x000000010f7f6457: hlt    
Decoding compiled method 0x000000010f7f6490:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ea6a3d0} 'lastIndexOf' '(II)I' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  #           [sp+0x50]  (sp of caller)
  0x000000010f7f6620: mov    0x8(%rsi),%r10d
  0x000000010f7f6624: shl    $0x3,%r10
  0x000000010f7f6628: cmp    %rax,%r10
  0x000000010f7f662b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7f6631: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7f663c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7f6640: mov    %eax,-0x14000(%rsp)
  0x000000010f7f6647: push   %rbp
  0x000000010f7f6648: sub    $0x40,%rsp
  0x000000010f7f664c: movabs $0x10ec3add0,%rax  ;   {metadata(method data for {method} {0x000000010ea6a3d0} 'lastIndexOf' '(II)I' in 'java/lang/String')}
  0x000000010f7f6656: mov    0xdc(%rax),%edi
  0x000000010f7f665c: add    $0x8,%edi
  0x000000010f7f665f: mov    %edi,0xdc(%rax)
  0x000000010f7f6665: movabs $0x10ea6a3d0,%rax  ;   {metadata({method} {0x000000010ea6a3d0} 'lastIndexOf' '(II)I' in 'java/lang/String')}
  0x000000010f7f666f: and    $0x1ff8,%edi
  0x000000010f7f6675: cmp    $0x0,%edi
  0x000000010f7f6678: je     0x000000010f7f6878  ;*iload_1
                                                ; - java.lang.String::lastIndexOf@0 (line 1649)

  0x000000010f7f667e: cmp    $0x10000,%edx
  0x000000010f7f6684: movabs $0x10ec3add0,%rax  ;   {metadata(method data for {method} {0x000000010ea6a3d0} 'lastIndexOf' '(II)I' in 'java/lang/String')}
  0x000000010f7f668e: movabs $0x108,%rdi
  0x000000010f7f6698: jge    0x000000010f7f66a8
  0x000000010f7f669e: movabs $0x118,%rdi
  0x000000010f7f66a8: mov    (%rax,%rdi,1),%rbx
  0x000000010f7f66ac: lea    0x1(%rbx),%rbx
  0x000000010f7f66b0: mov    %rbx,(%rax,%rdi,1)
  0x000000010f7f66b4: jge    0x000000010f7f6851  ;*if_icmpge
                                                ; - java.lang.String::lastIndexOf@3 (line 1649)

  0x000000010f7f66ba: mov    0xc(%rsi),%eax
  0x000000010f7f66bd: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::lastIndexOf@7 (line 1652)

  0x000000010f7f66c1: mov    0xc(%rax),%esi     ;*arraylength
                                                ; - java.lang.String::lastIndexOf@13 (line 1653)
                                                ; implicit exception: dispatches to 0x000000010f7f688f
  0x000000010f7f66c4: dec    %esi
  0x000000010f7f66c6: movabs $0x10ec3add0,%rdi  ;   {metadata(method data for {method} {0x000000010ea6a3d0} 'lastIndexOf' '(II)I' in 'java/lang/String')}
  0x000000010f7f66d0: addq   $0x1,0x128(%rdi)
  0x000000010f7f66d8: movabs $0x10ec2f708,%rdi  ;   {metadata(method data for {method} {0x000000010eb5b7d8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010f7f66e2: mov    0xdc(%rdi),%ebx
  0x000000010f7f66e8: add    $0x8,%ebx
  0x000000010f7f66eb: mov    %ebx,0xdc(%rdi)
  0x000000010f7f66f1: movabs $0x10eb5b7d8,%rdi  ;   {metadata({method} {0x000000010eb5b7d8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010f7f66fb: and    $0x7ffff8,%ebx
  0x000000010f7f6701: cmp    $0x0,%ebx
  0x000000010f7f6704: je     0x000000010f7f6894
  0x000000010f7f670a: cmp    %esi,%ecx
  0x000000010f7f670c: movabs $0x10ec2f708,%rdi  ;   {metadata(method data for {method} {0x000000010eb5b7d8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010f7f6716: movabs $0x108,%rbx
  0x000000010f7f6720: jg     0x000000010f7f6730
  0x000000010f7f6726: movabs $0x118,%rbx
  0x000000010f7f6730: mov    (%rdi,%rbx,1),%r8
  0x000000010f7f6734: lea    0x1(%r8),%r8
  0x000000010f7f6738: mov    %r8,(%rdi,%rbx,1)
  0x000000010f7f673c: jg     0x000000010f7f6757  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.lang.String::lastIndexOf@16 (line 1653)

  0x000000010f7f6742: movabs $0x10ec2f708,%rsi  ;   {metadata(method data for {method} {0x000000010eb5b7d8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010f7f674c: incl   0x128(%rsi)
  0x000000010f7f6752: jmpq   0x000000010f7f67f3  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.lang.String::lastIndexOf@16 (line 1653)

  0x000000010f7f6757: mov    %rsi,%rcx
  0x000000010f7f675a: jmpq   0x000000010f7f67f3  ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.lang.String::lastIndexOf@16 (line 1653)

  0x000000010f7f675f: nop
  0x000000010f7f6760: movslq %ecx,%rsi
  0x000000010f7f6763: cmp    0xc(%rax),%ecx
  0x000000010f7f6766: jae    0x000000010f7f68ab
  0x000000010f7f676c: movzwl 0x10(%rax,%rsi,2),%esi  ;*caload
                                                ; - java.lang.String::lastIndexOf@29 (line 1655)

  0x000000010f7f6771: cmp    %edx,%esi
  0x000000010f7f6773: movabs $0x10ec3add0,%rsi  ;   {metadata(method data for {method} {0x000000010ea6a3d0} 'lastIndexOf' '(II)I' in 'java/lang/String')}
  0x000000010f7f677d: movabs $0x158,%rdi
  0x000000010f7f6787: jne    0x000000010f7f6797
  0x000000010f7f678d: movabs $0x168,%rdi
  0x000000010f7f6797: mov    (%rsi,%rdi,1),%rbx
  0x000000010f7f679b: lea    0x1(%rbx),%rbx
  0x000000010f7f679f: mov    %rbx,(%rsi,%rdi,1)
  0x000000010f7f67a3: je     0x000000010f7f6831  ;*if_icmpne
                                                ; - java.lang.String::lastIndexOf@31 (line 1655)

  0x000000010f7f67a9: dec    %ecx
  0x000000010f7f67ab: movabs $0x10ec3add0,%rsi  ;   {metadata(method data for {method} {0x000000010ea6a3d0} 'lastIndexOf' '(II)I' in 'java/lang/String')}
  0x000000010f7f67b5: mov    0xe0(%rsi),%edi
  0x000000010f7f67bb: add    $0x8,%edi
  0x000000010f7f67be: mov    %edi,0xe0(%rsi)
  0x000000010f7f67c4: movabs $0x10ea6a3d0,%rsi  ;   {metadata({method} {0x000000010ea6a3d0} 'lastIndexOf' '(II)I' in 'java/lang/String')}
  0x000000010f7f67ce: and    $0xfff8,%edi
  0x000000010f7f67d4: cmp    $0x0,%edi
  0x000000010f7f67d7: je     0x000000010f7f68b4  ; OopMap{rax=Oop off=445}
                                                ;*goto
                                                ; - java.lang.String::lastIndexOf@40 (line 1654)

  0x000000010f7f67dd: test   %eax,-0x8d5b6e3(%rip)        # 0x0000000106a9b100
                                                ;   {poll}
  0x000000010f7f67e3: movabs $0x10ec3add0,%rsi  ;   {metadata(method data for {method} {0x000000010ea6a3d0} 'lastIndexOf' '(II)I' in 'java/lang/String')}
  0x000000010f7f67ed: incl   0x178(%rsi)        ;*goto
                                                ; - java.lang.String::lastIndexOf@40 (line 1654)

  0x000000010f7f67f3: cmp    $0x0,%ecx
  0x000000010f7f67f6: movabs $0x10ec3add0,%rsi  ;   {metadata(method data for {method} {0x000000010ea6a3d0} 'lastIndexOf' '(II)I' in 'java/lang/String')}
  0x000000010f7f6800: movabs $0x138,%rdi
  0x000000010f7f680a: jl     0x000000010f7f681a
  0x000000010f7f6810: movabs $0x148,%rdi
  0x000000010f7f681a: mov    (%rsi,%rdi,1),%rbx
  0x000000010f7f681e: lea    0x1(%rbx),%rbx
  0x000000010f7f6822: mov    %rbx,(%rsi,%rdi,1)
  0x000000010f7f6826: jl     0x000000010f7f6840
  0x000000010f7f682c: jmpq   0x000000010f7f6760  ;*iflt
                                                ; - java.lang.String::lastIndexOf@23 (line 1654)

  0x000000010f7f6831: mov    %rcx,%rax
  0x000000010f7f6834: add    $0x40,%rsp
  0x000000010f7f6838: pop    %rbp
  0x000000010f7f6839: test   %eax,-0x8d5b73f(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7f683f: retq                      ;*ireturn
                                                ; - java.lang.String::lastIndexOf@36 (line 1656)

  0x000000010f7f6840: mov    $0xffffffff,%eax
  0x000000010f7f6845: add    $0x40,%rsp
  0x000000010f7f6849: pop    %rbp
  0x000000010f7f684a: test   %eax,-0x8d5b750(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7f6850: retq                      ;*ireturn
                                                ; - java.lang.String::lastIndexOf@44 (line 1659)

  0x000000010f7f6851: mov    %rsi,%rdi
  0x000000010f7f6854: movabs $0x10ec3add0,%rbx  ;   {metadata(method data for {method} {0x000000010ea6a3d0} 'lastIndexOf' '(II)I' in 'java/lang/String')}
  0x000000010f7f685e: addq   $0x1,0x190(%rbx)
  0x000000010f7f6866: nop
  0x000000010f7f6867: callq  0x000000010f7170a0  ; OopMap{off=588}
                                                ;*invokespecial lastIndexOfSupplementary
                                                ; - java.lang.String::lastIndexOf@48 (line 1661)
                                                ;   {optimized virtual_call}
  0x000000010f7f686c: add    $0x40,%rsp
  0x000000010f7f6870: pop    %rbp
  0x000000010f7f6871: test   %eax,-0x8d5b777(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7f6877: retq   
  0x000000010f7f6878: mov    %rax,0x8(%rsp)
  0x000000010f7f687d: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7f6885: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=618}
                                                ;*synchronization entry
                                                ; - java.lang.String::lastIndexOf@-1 (line 1649)
                                                ;   {runtime_call}
  0x000000010f7f688a: jmpq   0x000000010f7f667e
  0x000000010f7f688f: callq  0x000000010f7cd0c0  ; OopMap{rax=Oop off=628}
                                                ;*arraylength
                                                ; - java.lang.String::lastIndexOf@13 (line 1653)
                                                ;   {runtime_call}
  0x000000010f7f6894: mov    %rdi,0x8(%rsp)
  0x000000010f7f6899: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7f68a1: callq  0x000000010f7d1a20  ; OopMap{rax=Oop off=646}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.lang.String::lastIndexOf@16 (line 1653)
                                                ;   {runtime_call}
  0x000000010f7f68a6: jmpq   0x000000010f7f670a
  0x000000010f7f68ab: mov    %rcx,(%rsp)
  0x000000010f7f68af: callq  0x000000010f7cca00  ; OopMap{rax=Oop off=660}
                                                ;*caload
                                                ; - java.lang.String::lastIndexOf@29 (line 1655)
                                                ;   {runtime_call}
  0x000000010f7f68b4: mov    %rsi,0x8(%rsp)
  0x000000010f7f68b9: movq   $0x28,(%rsp)
  0x000000010f7f68c1: callq  0x000000010f7d1a20  ; OopMap{rax=Oop off=678}
                                                ;*goto
                                                ; - java.lang.String::lastIndexOf@40 (line 1654)
                                                ;   {runtime_call}
  0x000000010f7f68c6: jmpq   0x000000010f7f67dd
  0x000000010f7f68cb: nop
  0x000000010f7f68cc: nop
  0x000000010f7f68cd: mov    0x2a8(%r15),%rax
  0x000000010f7f68d4: movabs $0x0,%r10
  0x000000010f7f68de: mov    %r10,0x2a8(%r15)
  0x000000010f7f68e5: movabs $0x0,%r10
  0x000000010f7f68ef: mov    %r10,0x2b0(%r15)
  0x000000010f7f68f6: add    $0x40,%rsp
  0x000000010f7f68fa: pop    %rbp
  0x000000010f7f68fb: jmpq   0x000000010f73f560  ;   {runtime_call}
[Stub Code]
  0x000000010f7f6900: nop                       ;   {no_reloc}
  0x000000010f7f6901: nop
  0x000000010f7f6902: nop
  0x000000010f7f6903: nop
  0x000000010f7f6904: nop
  0x000000010f7f6905: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7f690f: jmpq   0x000000010f7f690f  ;   {runtime_call}
[Exception Handler]
  0x000000010f7f6914: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f7f6919: mov    %rsp,-0x28(%rsp)
  0x000000010f7f691e: sub    $0x80,%rsp
  0x000000010f7f6925: mov    %rax,0x78(%rsp)
  0x000000010f7f692a: mov    %rcx,0x70(%rsp)
  0x000000010f7f692f: mov    %rdx,0x68(%rsp)
  0x000000010f7f6934: mov    %rbx,0x60(%rsp)
  0x000000010f7f6939: mov    %rbp,0x50(%rsp)
  0x000000010f7f693e: mov    %rsi,0x48(%rsp)
  0x000000010f7f6943: mov    %rdi,0x40(%rsp)
  0x000000010f7f6948: mov    %r8,0x38(%rsp)
  0x000000010f7f694d: mov    %r9,0x30(%rsp)
  0x000000010f7f6952: mov    %r10,0x28(%rsp)
  0x000000010f7f6957: mov    %r11,0x20(%rsp)
  0x000000010f7f695c: mov    %r12,0x18(%rsp)
  0x000000010f7f6961: mov    %r13,0x10(%rsp)
  0x000000010f7f6966: mov    %r14,0x8(%rsp)
  0x000000010f7f696b: mov    %r15,(%rsp)
  0x000000010f7f696f: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7f6979: movabs $0x10f7f6919,%rsi  ;   {internal_word}
  0x000000010f7f6983: mov    %rsp,%rdx
  0x000000010f7f6986: and    $0xfffffffffffffff0,%rsp
  0x000000010f7f698a: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7f698f: hlt    
[Deopt Handler Code]
  0x000000010f7f6990: movabs $0x10f7f6990,%r10  ;   {section_word}
  0x000000010f7f699a: push   %r10
  0x000000010f7f699c: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7f69a1: hlt    
  0x000000010f7f69a2: hlt    
  0x000000010f7f69a3: hlt    
  0x000000010f7f69a4: hlt    
  0x000000010f7f69a5: hlt    
  0x000000010f7f69a6: hlt    
  0x000000010f7f69a7: hlt    
Decoding compiled method 0x000000010f7f6c10:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000010ed919e0} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x000000010f7f6d40: mov    0x18(%rcx),%rbx
  0x000000010f7f6d44: test   %rbx,%rbx
  0x000000010f7f6d47: je     0x000000010f7f6d50
  0x000000010f7f6d4d: jmpq   *0x40(%rbx)
  0x000000010f7f6d50: jmpq   0x000000010f6d61a0  ;   {runtime_call}
  0x000000010f7f6d55: hlt    
  0x000000010f7f6d56: hlt    
  0x000000010f7f6d57: hlt    
Decoding compiled method 0x000000010f7f6d90:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000010ed91af8} 'linkToVirtual' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x000000010f7f6ec0: mov    0x8(%rsi),%r10d
  0x000000010f7f6ec4: shl    $0x3,%r10
  0x000000010f7f6ec8: mov    0x10(%rcx),%r11
  0x000000010f7f6ecc: mov    0x1b8(%r10,%r11,8),%rbx
  0x000000010f7f6ed4: test   %rbx,%rbx
  0x000000010f7f6ed7: je     0x000000010f7f6ee0
  0x000000010f7f6edd: jmpq   *0x40(%rbx)
  0x000000010f7f6ee0: jmpq   0x000000010f6d61a0  ;   {runtime_call}
  0x000000010f7f6ee5: hlt    
  0x000000010f7f6ee6: hlt    
  0x000000010f7f6ee7: hlt    
Decoding compiled method 0x000000010f7f6f10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ea8d488} 'get' '()Ljava/lang/Object;' in 'java/lang/ref/Reference'
  #           [sp+0x40]  (sp of caller)
  0x000000010f7f7060: mov    0x8(%rsi),%r10d
  0x000000010f7f7064: shl    $0x3,%r10
  0x000000010f7f7068: cmp    %rax,%r10
  0x000000010f7f706b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7f7071: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7f707c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7f7080: mov    %eax,-0x14000(%rsp)
  0x000000010f7f7087: push   %rbp
  0x000000010f7f7088: sub    $0x30,%rsp
  0x000000010f7f708c: mov    0xc(%rsi),%eax
  0x000000010f7f708f: shl    $0x3,%rax          ;*aload_0
                                                ; - java.lang.ref.Reference::get@0 (line 254)

  0x000000010f7f7093: add    $0x30,%rsp
  0x000000010f7f7097: pop    %rbp
  0x000000010f7f7098: test   %eax,-0x8d5bf9e(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7f709e: retq   
  0x000000010f7f709f: nop
  0x000000010f7f70a0: nop
  0x000000010f7f70a1: mov    0x2a8(%r15),%rax
  0x000000010f7f70a8: movabs $0x0,%r10
  0x000000010f7f70b2: mov    %r10,0x2a8(%r15)
  0x000000010f7f70b9: movabs $0x0,%r10
  0x000000010f7f70c3: mov    %r10,0x2b0(%r15)
  0x000000010f7f70ca: add    $0x30,%rsp
  0x000000010f7f70ce: pop    %rbp
  0x000000010f7f70cf: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7f70d4: hlt    
  0x000000010f7f70d5: hlt    
  0x000000010f7f70d6: hlt    
  0x000000010f7f70d7: hlt    
  0x000000010f7f70d8: hlt    
  0x000000010f7f70d9: hlt    
  0x000000010f7f70da: hlt    
  0x000000010f7f70db: hlt    
  0x000000010f7f70dc: hlt    
  0x000000010f7f70dd: hlt    
  0x000000010f7f70de: hlt    
  0x000000010f7f70df: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f7f70e0: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f7f70e5: mov    %rsp,-0x28(%rsp)
  0x000000010f7f70ea: sub    $0x80,%rsp
  0x000000010f7f70f1: mov    %rax,0x78(%rsp)
  0x000000010f7f70f6: mov    %rcx,0x70(%rsp)
  0x000000010f7f70fb: mov    %rdx,0x68(%rsp)
  0x000000010f7f7100: mov    %rbx,0x60(%rsp)
  0x000000010f7f7105: mov    %rbp,0x50(%rsp)
  0x000000010f7f710a: mov    %rsi,0x48(%rsp)
  0x000000010f7f710f: mov    %rdi,0x40(%rsp)
  0x000000010f7f7114: mov    %r8,0x38(%rsp)
  0x000000010f7f7119: mov    %r9,0x30(%rsp)
  0x000000010f7f711e: mov    %r10,0x28(%rsp)
  0x000000010f7f7123: mov    %r11,0x20(%rsp)
  0x000000010f7f7128: mov    %r12,0x18(%rsp)
  0x000000010f7f712d: mov    %r13,0x10(%rsp)
  0x000000010f7f7132: mov    %r14,0x8(%rsp)
  0x000000010f7f7137: mov    %r15,(%rsp)
  0x000000010f7f713b: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7f7145: movabs $0x10f7f70e5,%rsi  ;   {internal_word}
  0x000000010f7f714f: mov    %rsp,%rdx
  0x000000010f7f7152: and    $0xfffffffffffffff0,%rsp
  0x000000010f7f7156: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7f715b: hlt    
[Deopt Handler Code]
  0x000000010f7f715c: movabs $0x10f7f715c,%r10  ;   {section_word}
  0x000000010f7f7166: push   %r10
  0x000000010f7f7168: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7f716d: hlt    
  0x000000010f7f716e: hlt    
  0x000000010f7f716f: hlt    
Decoding compiled method 0x000000010f7f71d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ebd4200} 'ordinal' '()I' in 'java/lang/Enum'
  #           [sp+0x40]  (sp of caller)
  0x000000010f7f7320: mov    0x8(%rsi),%r10d
  0x000000010f7f7324: shl    $0x3,%r10
  0x000000010f7f7328: cmp    %rax,%r10
  0x000000010f7f732b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7f7331: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7f733c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7f7340: mov    %eax,-0x14000(%rsp)
  0x000000010f7f7347: push   %rbp
  0x000000010f7f7348: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.lang.Enum::ordinal@0 (line 103)

  0x000000010f7f734c: mov    0xc(%rsi),%eax     ;*getfield ordinal
                                                ; - java.lang.Enum::ordinal@1 (line 103)

  0x000000010f7f734f: add    $0x30,%rsp
  0x000000010f7f7353: pop    %rbp
  0x000000010f7f7354: test   %eax,-0x8d5c25a(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7f735a: retq   
  0x000000010f7f735b: nop
  0x000000010f7f735c: nop
  0x000000010f7f735d: mov    0x2a8(%r15),%rax
  0x000000010f7f7364: movabs $0x0,%r10
  0x000000010f7f736e: mov    %r10,0x2a8(%r15)
  0x000000010f7f7375: movabs $0x0,%r10
  0x000000010f7f737f: mov    %r10,0x2b0(%r15)
  0x000000010f7f7386: add    $0x30,%rsp
  0x000000010f7f738a: pop    %rbp
  0x000000010f7f738b: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7f7390: hlt    
  0x000000010f7f7391: hlt    
  0x000000010f7f7392: hlt    
  0x000000010f7f7393: hlt    
  0x000000010f7f7394: hlt    
  0x000000010f7f7395: hlt    
  0x000000010f7f7396: hlt    
  0x000000010f7f7397: hlt    
  0x000000010f7f7398: hlt    
  0x000000010f7f7399: hlt    
  0x000000010f7f739a: hlt    
  0x000000010f7f739b: hlt    
  0x000000010f7f739c: hlt    
  0x000000010f7f739d: hlt    
  0x000000010f7f739e: hlt    
  0x000000010f7f739f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f7f73a0: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f7f73a5: mov    %rsp,-0x28(%rsp)
  0x000000010f7f73aa: sub    $0x80,%rsp
  0x000000010f7f73b1: mov    %rax,0x78(%rsp)
  0x000000010f7f73b6: mov    %rcx,0x70(%rsp)
  0x000000010f7f73bb: mov    %rdx,0x68(%rsp)
  0x000000010f7f73c0: mov    %rbx,0x60(%rsp)
  0x000000010f7f73c5: mov    %rbp,0x50(%rsp)
  0x000000010f7f73ca: mov    %rsi,0x48(%rsp)
  0x000000010f7f73cf: mov    %rdi,0x40(%rsp)
  0x000000010f7f73d4: mov    %r8,0x38(%rsp)
  0x000000010f7f73d9: mov    %r9,0x30(%rsp)
  0x000000010f7f73de: mov    %r10,0x28(%rsp)
  0x000000010f7f73e3: mov    %r11,0x20(%rsp)
  0x000000010f7f73e8: mov    %r12,0x18(%rsp)
  0x000000010f7f73ed: mov    %r13,0x10(%rsp)
  0x000000010f7f73f2: mov    %r14,0x8(%rsp)
  0x000000010f7f73f7: mov    %r15,(%rsp)
  0x000000010f7f73fb: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7f7405: movabs $0x10f7f73a5,%rsi  ;   {internal_word}
  0x000000010f7f740f: mov    %rsp,%rdx
  0x000000010f7f7412: and    $0xfffffffffffffff0,%rsp
  0x000000010f7f7416: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7f741b: hlt    
[Deopt Handler Code]
  0x000000010f7f741c: movabs $0x10f7f741c,%r10  ;   {section_word}
  0x000000010f7f7426: push   %r10
  0x000000010f7f7428: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7f742d: hlt    
  0x000000010f7f742e: hlt    
  0x000000010f7f742f: hlt    
Decoding compiled method 0x000000010f7f74d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ea6a300} 'lastIndexOf' '(I)I' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x000000010f7f7640: mov    0x8(%rsi),%r10d
  0x000000010f7f7644: shl    $0x3,%r10
  0x000000010f7f7648: cmp    %rax,%r10
  0x000000010f7f764b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7f7651: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7f765c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7f7660: mov    %eax,-0x14000(%rsp)
  0x000000010f7f7667: push   %rbp
  0x000000010f7f7668: sub    $0x30,%rsp
  0x000000010f7f766c: movabs $0x10ec8be08,%rcx  ;   {metadata(method data for {method} {0x000000010ea6a300} 'lastIndexOf' '(I)I' in 'java/lang/String')}
  0x000000010f7f7676: mov    0xdc(%rcx),%edi
  0x000000010f7f767c: add    $0x8,%edi
  0x000000010f7f767f: mov    %edi,0xdc(%rcx)
  0x000000010f7f7685: movabs $0x10ea6a300,%rcx  ;   {metadata({method} {0x000000010ea6a300} 'lastIndexOf' '(I)I' in 'java/lang/String')}
  0x000000010f7f768f: and    $0x1ff8,%edi
  0x000000010f7f7695: cmp    $0x0,%edi
  0x000000010f7f7698: je     0x000000010f7f7750  ;*aload_0
                                                ; - java.lang.String::lastIndexOf@0 (line 1611)

  0x000000010f7f769e: mov    0xc(%rsi),%ecx
  0x000000010f7f76a1: shl    $0x3,%rcx          ;*getfield value
                                                ; - java.lang.String::lastIndexOf@3 (line 1611)

  0x000000010f7f76a5: mov    0xc(%rcx),%ecx     ;*arraylength
                                                ; - java.lang.String::lastIndexOf@6 (line 1611)
                                                ; implicit exception: dispatches to 0x000000010f7f7767
  0x000000010f7f76a8: mov    %rsi,%rdi
  0x000000010f7f76ab: movabs $0x10ec8be08,%rbx  ;   {metadata(method data for {method} {0x000000010ea6a300} 'lastIndexOf' '(I)I' in 'java/lang/String')}
  0x000000010f7f76b5: mov    0x8(%rdi),%edi
  0x000000010f7f76b8: shl    $0x3,%rdi
  0x000000010f7f76bc: cmp    0x110(%rbx),%rdi
  0x000000010f7f76c3: jne    0x000000010f7f76d2
  0x000000010f7f76c5: addq   $0x1,0x118(%rbx)
  0x000000010f7f76cd: jmpq   0x000000010f7f7738
  0x000000010f7f76d2: cmp    0x120(%rbx),%rdi
  0x000000010f7f76d9: jne    0x000000010f7f76e8
  0x000000010f7f76db: addq   $0x1,0x128(%rbx)
  0x000000010f7f76e3: jmpq   0x000000010f7f7738
  0x000000010f7f76e8: cmpq   $0x0,0x110(%rbx)
  0x000000010f7f76f3: jne    0x000000010f7f770c
  0x000000010f7f76f5: mov    %rdi,0x110(%rbx)
  0x000000010f7f76fc: movq   $0x1,0x118(%rbx)
  0x000000010f7f7707: jmpq   0x000000010f7f7738
  0x000000010f7f770c: cmpq   $0x0,0x120(%rbx)
  0x000000010f7f7717: jne    0x000000010f7f7730
  0x000000010f7f7719: mov    %rdi,0x120(%rbx)
  0x000000010f7f7720: movq   $0x1,0x128(%rbx)
  0x000000010f7f772b: jmpq   0x000000010f7f7738
  0x000000010f7f7730: addq   $0x1,0x108(%rbx)
  0x000000010f7f7738: dec    %ecx
  0x000000010f7f773a: nop
  0x000000010f7f773b: nop
  0x000000010f7f773c: nop
  0x000000010f7f773d: nop
  0x000000010f7f773e: nop
  0x000000010f7f773f: callq  0x000000010f7170a0  ; OopMap{off=260}
                                                ;*invokevirtual lastIndexOf
                                                ; - java.lang.String::lastIndexOf@9 (line 1611)
                                                ;   {optimized virtual_call}
  0x000000010f7f7744: add    $0x30,%rsp
  0x000000010f7f7748: pop    %rbp
  0x000000010f7f7749: test   %eax,-0x8d5c64f(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7f774f: retq   
  0x000000010f7f7750: mov    %rcx,0x8(%rsp)
  0x000000010f7f7755: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7f775d: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=290}
                                                ;*synchronization entry
                                                ; - java.lang.String::lastIndexOf@-1 (line 1611)
                                                ;   {runtime_call}
  0x000000010f7f7762: jmpq   0x000000010f7f769e
  0x000000010f7f7767: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop off=300}
                                                ;*arraylength
                                                ; - java.lang.String::lastIndexOf@6 (line 1611)
                                                ;   {runtime_call}
  0x000000010f7f776c: nop
  0x000000010f7f776d: nop
  0x000000010f7f776e: mov    0x2a8(%r15),%rax
  0x000000010f7f7775: movabs $0x0,%r10
  0x000000010f7f777f: mov    %r10,0x2a8(%r15)
  0x000000010f7f7786: movabs $0x0,%r10
  0x000000010f7f7790: mov    %r10,0x2b0(%r15)
  0x000000010f7f7797: add    $0x30,%rsp
  0x000000010f7f779b: pop    %rbp
  0x000000010f7f779c: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7f77a1: hlt    
  0x000000010f7f77a2: hlt    
  0x000000010f7f77a3: hlt    
  0x000000010f7f77a4: hlt    
  0x000000010f7f77a5: hlt    
  0x000000010f7f77a6: hlt    
  0x000000010f7f77a7: hlt    
  0x000000010f7f77a8: hlt    
  0x000000010f7f77a9: hlt    
  0x000000010f7f77aa: hlt    
  0x000000010f7f77ab: hlt    
  0x000000010f7f77ac: hlt    
  0x000000010f7f77ad: hlt    
  0x000000010f7f77ae: hlt    
  0x000000010f7f77af: hlt    
  0x000000010f7f77b0: hlt    
  0x000000010f7f77b1: hlt    
  0x000000010f7f77b2: hlt    
  0x000000010f7f77b3: hlt    
  0x000000010f7f77b4: hlt    
  0x000000010f7f77b5: hlt    
  0x000000010f7f77b6: hlt    
  0x000000010f7f77b7: hlt    
  0x000000010f7f77b8: hlt    
  0x000000010f7f77b9: hlt    
  0x000000010f7f77ba: hlt    
  0x000000010f7f77bb: hlt    
  0x000000010f7f77bc: hlt    
  0x000000010f7f77bd: hlt    
  0x000000010f7f77be: hlt    
  0x000000010f7f77bf: hlt    
[Stub Code]
  0x000000010f7f77c0: nop                       ;   {no_reloc}
  0x000000010f7f77c1: nop
  0x000000010f7f77c2: nop
  0x000000010f7f77c3: nop
  0x000000010f7f77c4: nop
  0x000000010f7f77c5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7f77cf: jmpq   0x000000010f7f77cf  ;   {runtime_call}
[Exception Handler]
  0x000000010f7f77d4: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f7f77d9: mov    %rsp,-0x28(%rsp)
  0x000000010f7f77de: sub    $0x80,%rsp
  0x000000010f7f77e5: mov    %rax,0x78(%rsp)
  0x000000010f7f77ea: mov    %rcx,0x70(%rsp)
  0x000000010f7f77ef: mov    %rdx,0x68(%rsp)
  0x000000010f7f77f4: mov    %rbx,0x60(%rsp)
  0x000000010f7f77f9: mov    %rbp,0x50(%rsp)
  0x000000010f7f77fe: mov    %rsi,0x48(%rsp)
  0x000000010f7f7803: mov    %rdi,0x40(%rsp)
  0x000000010f7f7808: mov    %r8,0x38(%rsp)
  0x000000010f7f780d: mov    %r9,0x30(%rsp)
  0x000000010f7f7812: mov    %r10,0x28(%rsp)
  0x000000010f7f7817: mov    %r11,0x20(%rsp)
  0x000000010f7f781c: mov    %r12,0x18(%rsp)
  0x000000010f7f7821: mov    %r13,0x10(%rsp)
  0x000000010f7f7826: mov    %r14,0x8(%rsp)
  0x000000010f7f782b: mov    %r15,(%rsp)
  0x000000010f7f782f: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7f7839: movabs $0x10f7f77d9,%rsi  ;   {internal_word}
  0x000000010f7f7843: mov    %rsp,%rdx
  0x000000010f7f7846: and    $0xfffffffffffffff0,%rsp
  0x000000010f7f784a: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7f784f: hlt    
[Deopt Handler Code]
  0x000000010f7f7850: movabs $0x10f7f7850,%r10  ;   {section_word}
  0x000000010f7f785a: push   %r10
  0x000000010f7f785c: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7f7861: hlt    
  0x000000010f7f7862: hlt    
  0x000000010f7f7863: hlt    
  0x000000010f7f7864: hlt    
  0x000000010f7f7865: hlt    
  0x000000010f7f7866: hlt    
  0x000000010f7f7867: hlt    
Decoding compiled method 0x000000010f7f7950:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010eabed18} 'testFlags' '(II)Z' in 'java/lang/invoke/MemberName'
  # this:     rsi:rsi   = 'java/lang/invoke/MemberName'
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  #           [sp+0x40]  (sp of caller)
  0x000000010f7f7ac0: mov    0x8(%rsi),%r10d
  0x000000010f7f7ac4: shl    $0x3,%r10
  0x000000010f7f7ac8: cmp    %rax,%r10
  0x000000010f7f7acb: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7f7ad1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7f7adc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7f7ae0: mov    %eax,-0x14000(%rsp)
  0x000000010f7f7ae7: push   %rbp
  0x000000010f7f7ae8: sub    $0x30,%rsp
  0x000000010f7f7aec: movabs $0x10ed91b60,%rax  ;   {metadata(method data for {method} {0x000000010eabed18} 'testFlags' '(II)Z' in 'java/lang/invoke/MemberName')}
  0x000000010f7f7af6: mov    0xdc(%rax),%edi
  0x000000010f7f7afc: add    $0x8,%edi
  0x000000010f7f7aff: mov    %edi,0xdc(%rax)
  0x000000010f7f7b05: movabs $0x10eabed18,%rax  ;   {metadata({method} {0x000000010eabed18} 'testFlags' '(II)Z' in 'java/lang/invoke/MemberName')}
  0x000000010f7f7b0f: and    $0x1ff8,%edi
  0x000000010f7f7b15: cmp    $0x0,%edi
  0x000000010f7f7b18: je     0x000000010f7f7b8a  ;*aload_0
                                                ; - java.lang.invoke.MemberName::testFlags@0 (line 334)

  0x000000010f7f7b1e: mov    0xc(%rsi),%eax     ;*getfield flags
                                                ; - java.lang.invoke.MemberName::testFlags@1 (line 334)

  0x000000010f7f7b21: and    %rdx,%rax
  0x000000010f7f7b24: cmp    %ecx,%eax
  0x000000010f7f7b26: movabs $0x10ed91b60,%rax  ;   {metadata(method data for {method} {0x000000010eabed18} 'testFlags' '(II)Z' in 'java/lang/invoke/MemberName')}
  0x000000010f7f7b30: movabs $0x108,%rsi
  0x000000010f7f7b3a: jne    0x000000010f7f7b4a
  0x000000010f7f7b40: movabs $0x118,%rsi
  0x000000010f7f7b4a: mov    (%rax,%rsi,1),%rdi
  0x000000010f7f7b4e: lea    0x1(%rdi),%rdi
  0x000000010f7f7b52: mov    %rdi,(%rax,%rsi,1)
  0x000000010f7f7b56: jne    0x000000010f7f7b76  ;*if_icmpne
                                                ; - java.lang.invoke.MemberName::testFlags@7 (line 334)

  0x000000010f7f7b5c: movabs $0x10ed91b60,%rax  ;   {metadata(method data for {method} {0x000000010eabed18} 'testFlags' '(II)Z' in 'java/lang/invoke/MemberName')}
  0x000000010f7f7b66: incl   0x128(%rax)
  0x000000010f7f7b6c: mov    $0x1,%eax
  0x000000010f7f7b71: jmpq   0x000000010f7f7b7b  ;*goto
                                                ; - java.lang.invoke.MemberName::testFlags@11 (line 334)

  0x000000010f7f7b76: mov    $0x0,%eax          ;*ireturn
                                                ; - java.lang.invoke.MemberName::testFlags@15 (line 334)

  0x000000010f7f7b7b: and    $0x1,%eax
  0x000000010f7f7b7e: add    $0x30,%rsp
  0x000000010f7f7b82: pop    %rbp
  0x000000010f7f7b83: test   %eax,-0x8d5ca89(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7f7b89: retq   
  0x000000010f7f7b8a: mov    %rax,0x8(%rsp)
  0x000000010f7f7b8f: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7f7b97: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=220}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MemberName::testFlags@-1 (line 334)
                                                ;   {runtime_call}
  0x000000010f7f7b9c: jmp    0x000000010f7f7b1e
  0x000000010f7f7b9e: nop
  0x000000010f7f7b9f: nop
  0x000000010f7f7ba0: mov    0x2a8(%r15),%rax
  0x000000010f7f7ba7: movabs $0x0,%r10
  0x000000010f7f7bb1: mov    %r10,0x2a8(%r15)
  0x000000010f7f7bb8: movabs $0x0,%r10
  0x000000010f7f7bc2: mov    %r10,0x2b0(%r15)
  0x000000010f7f7bc9: add    $0x30,%rsp
  0x000000010f7f7bcd: pop    %rbp
  0x000000010f7f7bce: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7f7bd3: hlt    
  0x000000010f7f7bd4: hlt    
  0x000000010f7f7bd5: hlt    
  0x000000010f7f7bd6: hlt    
  0x000000010f7f7bd7: hlt    
  0x000000010f7f7bd8: hlt    
  0x000000010f7f7bd9: hlt    
  0x000000010f7f7bda: hlt    
  0x000000010f7f7bdb: hlt    
  0x000000010f7f7bdc: hlt    
  0x000000010f7f7bdd: hlt    
  0x000000010f7f7bde: hlt    
  0x000000010f7f7bdf: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f7f7be0: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f7f7be5: mov    %rsp,-0x28(%rsp)
  0x000000010f7f7bea: sub    $0x80,%rsp
  0x000000010f7f7bf1: mov    %rax,0x78(%rsp)
  0x000000010f7f7bf6: mov    %rcx,0x70(%rsp)
  0x000000010f7f7bfb: mov    %rdx,0x68(%rsp)
  0x000000010f7f7c00: mov    %rbx,0x60(%rsp)
  0x000000010f7f7c05: mov    %rbp,0x50(%rsp)
  0x000000010f7f7c0a: mov    %rsi,0x48(%rsp)
  0x000000010f7f7c0f: mov    %rdi,0x40(%rsp)
  0x000000010f7f7c14: mov    %r8,0x38(%rsp)
  0x000000010f7f7c19: mov    %r9,0x30(%rsp)
  0x000000010f7f7c1e: mov    %r10,0x28(%rsp)
  0x000000010f7f7c23: mov    %r11,0x20(%rsp)
  0x000000010f7f7c28: mov    %r12,0x18(%rsp)
  0x000000010f7f7c2d: mov    %r13,0x10(%rsp)
  0x000000010f7f7c32: mov    %r14,0x8(%rsp)
  0x000000010f7f7c37: mov    %r15,(%rsp)
  0x000000010f7f7c3b: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7f7c45: movabs $0x10f7f7be5,%rsi  ;   {internal_word}
  0x000000010f7f7c4f: mov    %rsp,%rdx
  0x000000010f7f7c52: and    $0xfffffffffffffff0,%rsp
  0x000000010f7f7c56: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7f7c5b: hlt    
[Deopt Handler Code]
  0x000000010f7f7c5c: movabs $0x10f7f7c5c,%r10  ;   {section_word}
  0x000000010f7f7c66: push   %r10
  0x000000010f7f7c68: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7f7c6d: hlt    
  0x000000010f7f7c6e: hlt    
  0x000000010f7f7c6f: hlt    
Decoding compiled method 0x000000010f7f7d50:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ea68bc8} '<init>' '([CZ)V' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx:rdx   = '[C'
  # parm1:    rcx       = boolean
  #           [sp+0x40]  (sp of caller)
  0x000000010f7f7ec0: mov    0x8(%rsi),%r10d
  0x000000010f7f7ec4: shl    $0x3,%r10
  0x000000010f7f7ec8: cmp    %rax,%r10
  0x000000010f7f7ecb: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7f7ed1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7f7edc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7f7ee0: mov    %eax,-0x14000(%rsp)
  0x000000010f7f7ee7: push   %rbp
  0x000000010f7f7ee8: sub    $0x30,%rsp
  0x000000010f7f7eec: movabs $0x10ed91d08,%rdi  ;   {metadata(method data for {method} {0x000000010ea68bc8} '<init>' '([CZ)V' in 'java/lang/String')}
  0x000000010f7f7ef6: mov    0xdc(%rdi),%ebx
  0x000000010f7f7efc: add    $0x8,%ebx
  0x000000010f7f7eff: mov    %ebx,0xdc(%rdi)
  0x000000010f7f7f05: movabs $0x10ea68bc8,%rdi  ;   {metadata({method} {0x000000010ea68bc8} '<init>' '([CZ)V' in 'java/lang/String')}
  0x000000010f7f7f0f: and    $0x1ff8,%ebx
  0x000000010f7f7f15: cmp    $0x0,%ebx
  0x000000010f7f7f18: je     0x000000010f7f7f8e  ;*aload_0
                                                ; - java.lang.String::<init>@0 (line 609)

  0x000000010f7f7f1e: mov    %rsi,%rdi
  0x000000010f7f7f21: movabs $0x10ed91d08,%rbx  ;   {metadata(method data for {method} {0x000000010ea68bc8} '<init>' '([CZ)V' in 'java/lang/String')}
  0x000000010f7f7f2b: addq   $0x1,0x108(%rbx)
  0x000000010f7f7f33: movabs $0x10ebdca10,%rdi  ;   {metadata(method data for {method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f7f7f3d: mov    0xdc(%rdi),%ebx
  0x000000010f7f7f43: add    $0x8,%ebx
  0x000000010f7f7f46: mov    %ebx,0xdc(%rdi)
  0x000000010f7f7f4c: movabs $0x10ea65480,%rdi  ;   {metadata({method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f7f7f56: and    $0x7ffff8,%ebx
  0x000000010f7f7f5c: cmp    $0x0,%ebx
  0x000000010f7f7f5f: je     0x000000010f7f7fa5
  0x000000010f7f7f65: mov    %rdx,%r10
  0x000000010f7f7f68: shr    $0x3,%r10
  0x000000010f7f7f6c: mov    %r10d,0xc(%rsi)
  0x000000010f7f7f70: shr    $0x9,%rsi
  0x000000010f7f7f74: movabs $0x1065b9000,%rdi
  0x000000010f7f7f7e: movb   $0x0,(%rsi,%rdi,1)  ;*putfield value
                                                ; - java.lang.String::<init>@6 (line 611)

  0x000000010f7f7f82: add    $0x30,%rsp
  0x000000010f7f7f86: pop    %rbp
  0x000000010f7f7f87: test   %eax,-0x8d5ce8d(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7f7f8d: retq   
  0x000000010f7f7f8e: mov    %rdi,0x8(%rsp)
  0x000000010f7f7f93: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7f7f9b: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop rdx=Oop off=224}
                                                ;*synchronization entry
                                                ; - java.lang.String::<init>@-1 (line 609)
                                                ;   {runtime_call}
  0x000000010f7f7fa0: jmpq   0x000000010f7f7f1e
  0x000000010f7f7fa5: mov    %rdi,0x8(%rsp)
  0x000000010f7f7faa: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7f7fb2: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop rdx=Oop off=247}
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 37)
                                                ; - java.lang.String::<init>@1 (line 609)
                                                ;   {runtime_call}
  0x000000010f7f7fb7: jmp    0x000000010f7f7f65
  0x000000010f7f7fb9: nop
  0x000000010f7f7fba: nop
  0x000000010f7f7fbb: mov    0x2a8(%r15),%rax
  0x000000010f7f7fc2: movabs $0x0,%r10
  0x000000010f7f7fcc: mov    %r10,0x2a8(%r15)
  0x000000010f7f7fd3: movabs $0x0,%r10
  0x000000010f7f7fdd: mov    %r10,0x2b0(%r15)
  0x000000010f7f7fe4: add    $0x30,%rsp
  0x000000010f7f7fe8: pop    %rbp
  0x000000010f7f7fe9: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7f7fee: hlt    
  0x000000010f7f7fef: hlt    
  0x000000010f7f7ff0: hlt    
  0x000000010f7f7ff1: hlt    
  0x000000010f7f7ff2: hlt    
  0x000000010f7f7ff3: hlt    
  0x000000010f7f7ff4: hlt    
  0x000000010f7f7ff5: hlt    
  0x000000010f7f7ff6: hlt    
  0x000000010f7f7ff7: hlt    
  0x000000010f7f7ff8: hlt    
  0x000000010f7f7ff9: hlt    
  0x000000010f7f7ffa: hlt    
  0x000000010f7f7ffb: hlt    
  0x000000010f7f7ffc: hlt    
  0x000000010f7f7ffd: hlt    
  0x000000010f7f7ffe: hlt    
  0x000000010f7f7fff: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f7f8000: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f7f8005: mov    %rsp,-0x28(%rsp)
  0x000000010f7f800a: sub    $0x80,%rsp
  0x000000010f7f8011: mov    %rax,0x78(%rsp)
  0x000000010f7f8016: mov    %rcx,0x70(%rsp)
  0x000000010f7f801b: mov    %rdx,0x68(%rsp)
  0x000000010f7f8020: mov    %rbx,0x60(%rsp)
  0x000000010f7f8025: mov    %rbp,0x50(%rsp)
  0x000000010f7f802a: mov    %rsi,0x48(%rsp)
  0x000000010f7f802f: mov    %rdi,0x40(%rsp)
  0x000000010f7f8034: mov    %r8,0x38(%rsp)
  0x000000010f7f8039: mov    %r9,0x30(%rsp)
  0x000000010f7f803e: mov    %r10,0x28(%rsp)
  0x000000010f7f8043: mov    %r11,0x20(%rsp)
  0x000000010f7f8048: mov    %r12,0x18(%rsp)
  0x000000010f7f804d: mov    %r13,0x10(%rsp)
  0x000000010f7f8052: mov    %r14,0x8(%rsp)
  0x000000010f7f8057: mov    %r15,(%rsp)
  0x000000010f7f805b: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7f8065: movabs $0x10f7f8005,%rsi  ;   {internal_word}
  0x000000010f7f806f: mov    %rsp,%rdx
  0x000000010f7f8072: and    $0xfffffffffffffff0,%rsp
  0x000000010f7f8076: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7f807b: hlt    
[Deopt Handler Code]
  0x000000010f7f807c: movabs $0x10f7f807c,%r10  ;   {section_word}
  0x000000010f7f8086: push   %r10
  0x000000010f7f8088: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7f808d: hlt    
  0x000000010f7f808e: hlt    
  0x000000010f7f808f: hlt    
Decoding compiled method 0x000000010f7f8150:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ea71870} 'getName' '()Ljava/lang/String;' in 'java/lang/Class'
  #           [sp+0x40]  (sp of caller)
  0x000000010f7f82c0: mov    0x8(%rsi),%r10d
  0x000000010f7f82c4: shl    $0x3,%r10
  0x000000010f7f82c8: cmp    %rax,%r10
  0x000000010f7f82cb: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7f82d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7f82dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7f82e0: mov    %eax,-0x14000(%rsp)
  0x000000010f7f82e7: push   %rbp
  0x000000010f7f82e8: sub    $0x30,%rsp
  0x000000010f7f82ec: movabs $0x10ed91e68,%rdi  ;   {metadata(method data for {method} {0x000000010ea71870} 'getName' '()Ljava/lang/String;' in 'java/lang/Class')}
  0x000000010f7f82f6: mov    0xdc(%rdi),%ebx
  0x000000010f7f82fc: add    $0x8,%ebx
  0x000000010f7f82ff: mov    %ebx,0xdc(%rdi)
  0x000000010f7f8305: movabs $0x10ea71870,%rdi  ;   {metadata({method} {0x000000010ea71870} 'getName' '()Ljava/lang/String;' in 'java/lang/Class')}
  0x000000010f7f830f: and    $0x1ff8,%ebx
  0x000000010f7f8315: cmp    $0x0,%ebx
  0x000000010f7f8318: je     0x000000010f7f83b8  ;*aload_0
                                                ; - java.lang.Class::getName@0 (line 640)

  0x000000010f7f831e: mov    0x14(%rsi),%edi
  0x000000010f7f8321: shl    $0x3,%rdi          ;*getfield name
                                                ; - java.lang.Class::getName@1 (line 640)

  0x000000010f7f8325: cmp    $0x0,%rdi
  0x000000010f7f8329: movabs $0x10ed91e68,%rbx  ;   {metadata(method data for {method} {0x000000010ea71870} 'getName' '()Ljava/lang/String;' in 'java/lang/Class')}
  0x000000010f7f8333: movabs $0x108,%rax
  0x000000010f7f833d: jne    0x000000010f7f834d
  0x000000010f7f8343: movabs $0x118,%rax
  0x000000010f7f834d: mov    (%rbx,%rax,1),%rdx
  0x000000010f7f8351: lea    0x1(%rdx),%rdx
  0x000000010f7f8355: mov    %rdx,(%rbx,%rax,1)
  0x000000010f7f8359: jne    0x000000010f7f83a9  ;*ifnonnull
                                                ; - java.lang.Class::getName@6 (line 641)

  0x000000010f7f835f: mov    %rsi,%rdi
  0x000000010f7f8362: movabs $0x10ed91e68,%rbx  ;   {metadata(method data for {method} {0x000000010ea71870} 'getName' '()Ljava/lang/String;' in 'java/lang/Class')}
  0x000000010f7f836c: addq   $0x1,0x128(%rbx)
  0x000000010f7f8374: mov    %rsi,%rdi
  0x000000010f7f8377: mov    %rdi,%rsi          ;*invokespecial getName0
                                                ; - java.lang.Class::getName@11 (line 642)

  0x000000010f7f837a: mov    %rdi,0x20(%rsp)
  0x000000010f7f837f: callq  0x000000010f7170a0  ; OopMap{[32]=Oop off=196}
                                                ;*invokespecial getName0
                                                ; - java.lang.Class::getName@11 (line 642)
                                                ;   {optimized virtual_call}
  0x000000010f7f8384: mov    0x20(%rsp),%rsi
  0x000000010f7f8389: mov    %rax,%r10
  0x000000010f7f838c: shr    $0x3,%r10
  0x000000010f7f8390: mov    %r10d,0x14(%rsi)
  0x000000010f7f8394: shr    $0x9,%rsi
  0x000000010f7f8398: movabs $0x1065b9000,%rdi
  0x000000010f7f83a2: movb   $0x0,(%rsi,%rdi,1)  ;*putfield name
                                                ; - java.lang.Class::getName@16 (line 642)

  0x000000010f7f83a6: mov    %rax,%rdi          ;*aload_1
                                                ; - java.lang.Class::getName@19 (line 643)

  0x000000010f7f83a9: mov    %rdi,%rax
  0x000000010f7f83ac: add    $0x30,%rsp
  0x000000010f7f83b0: pop    %rbp
  0x000000010f7f83b1: test   %eax,-0x8d5d2b7(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7f83b7: retq   
  0x000000010f7f83b8: mov    %rdi,0x8(%rsp)
  0x000000010f7f83bd: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7f83c5: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=266}
                                                ;*synchronization entry
                                                ; - java.lang.Class::getName@-1 (line 640)
                                                ;   {runtime_call}
  0x000000010f7f83ca: jmpq   0x000000010f7f831e
  0x000000010f7f83cf: nop
  0x000000010f7f83d0: nop
  0x000000010f7f83d1: mov    0x2a8(%r15),%rax
  0x000000010f7f83d8: movabs $0x0,%r10
  0x000000010f7f83e2: mov    %r10,0x2a8(%r15)
  0x000000010f7f83e9: movabs $0x0,%r10
  0x000000010f7f83f3: mov    %r10,0x2b0(%r15)
  0x000000010f7f83fa: add    $0x30,%rsp
  0x000000010f7f83fe: pop    %rbp
  0x000000010f7f83ff: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7f8404: hlt    
  0x000000010f7f8405: hlt    
  0x000000010f7f8406: hlt    
  0x000000010f7f8407: hlt    
  0x000000010f7f8408: hlt    
  0x000000010f7f8409: hlt    
  0x000000010f7f840a: hlt    
  0x000000010f7f840b: hlt    
  0x000000010f7f840c: hlt    
  0x000000010f7f840d: hlt    
  0x000000010f7f840e: hlt    
  0x000000010f7f840f: hlt    
  0x000000010f7f8410: hlt    
  0x000000010f7f8411: hlt    
  0x000000010f7f8412: hlt    
  0x000000010f7f8413: hlt    
  0x000000010f7f8414: hlt    
  0x000000010f7f8415: hlt    
  0x000000010f7f8416: hlt    
  0x000000010f7f8417: hlt    
  0x000000010f7f8418: hlt    
  0x000000010f7f8419: hlt    
  0x000000010f7f841a: hlt    
  0x000000010f7f841b: hlt    
  0x000000010f7f841c: hlt    
  0x000000010f7f841d: hlt    
  0x000000010f7f841e: hlt    
  0x000000010f7f841f: hlt    
[Stub Code]
  0x000000010f7f8420: nop                       ;   {no_reloc}
  0x000000010f7f8421: nop
  0x000000010f7f8422: nop
  0x000000010f7f8423: nop
  0x000000010f7f8424: nop
  0x000000010f7f8425: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7f842f: jmpq   0x000000010f7f842f  ;   {runtime_call}
[Exception Handler]
  0x000000010f7f8434: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f7f8439: mov    %rsp,-0x28(%rsp)
  0x000000010f7f843e: sub    $0x80,%rsp
  0x000000010f7f8445: mov    %rax,0x78(%rsp)
  0x000000010f7f844a: mov    %rcx,0x70(%rsp)
  0x000000010f7f844f: mov    %rdx,0x68(%rsp)
  0x000000010f7f8454: mov    %rbx,0x60(%rsp)
  0x000000010f7f8459: mov    %rbp,0x50(%rsp)
  0x000000010f7f845e: mov    %rsi,0x48(%rsp)
  0x000000010f7f8463: mov    %rdi,0x40(%rsp)
  0x000000010f7f8468: mov    %r8,0x38(%rsp)
  0x000000010f7f846d: mov    %r9,0x30(%rsp)
  0x000000010f7f8472: mov    %r10,0x28(%rsp)
  0x000000010f7f8477: mov    %r11,0x20(%rsp)
  0x000000010f7f847c: mov    %r12,0x18(%rsp)
  0x000000010f7f8481: mov    %r13,0x10(%rsp)
  0x000000010f7f8486: mov    %r14,0x8(%rsp)
  0x000000010f7f848b: mov    %r15,(%rsp)
  0x000000010f7f848f: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7f8499: movabs $0x10f7f8439,%rsi  ;   {internal_word}
  0x000000010f7f84a3: mov    %rsp,%rdx
  0x000000010f7f84a6: and    $0xfffffffffffffff0,%rsp
  0x000000010f7f84aa: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7f84af: hlt    
[Deopt Handler Code]
  0x000000010f7f84b0: movabs $0x10f7f84b0,%r10  ;   {section_word}
  0x000000010f7f84ba: push   %r10
  0x000000010f7f84bc: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7f84c1: hlt    
  0x000000010f7f84c2: hlt    
  0x000000010f7f84c3: hlt    
  0x000000010f7f84c4: hlt    
  0x000000010f7f84c5: hlt    
  0x000000010f7f84c6: hlt    
  0x000000010f7f84c7: hlt    
Decoding compiled method 0x000000010f7f85d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ea6a5f0} 'indexOf' '(Ljava/lang/String;I)I' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx:rdx   = 'java/lang/String'
  # parm1:    rcx       = int
  #           [sp+0x60]  (sp of caller)
  0x000000010f7f8740: mov    0x8(%rsi),%r10d
  0x000000010f7f8744: shl    $0x3,%r10
  0x000000010f7f8748: cmp    %rax,%r10
  0x000000010f7f874b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7f8751: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7f875c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7f8760: mov    %eax,-0x14000(%rsp)
  0x000000010f7f8767: push   %rbp
  0x000000010f7f8768: sub    $0x50,%rsp
  0x000000010f7f876c: mov    %rcx,%rbx
  0x000000010f7f876f: movabs $0x10ed92370,%rcx  ;   {metadata(method data for {method} {0x000000010ea6a5f0} 'indexOf' '(Ljava/lang/String;I)I' in 'java/lang/String')}
  0x000000010f7f8779: mov    0xdc(%rcx),%r8d
  0x000000010f7f8780: add    $0x8,%r8d
  0x000000010f7f8784: mov    %r8d,0xdc(%rcx)
  0x000000010f7f878b: movabs $0x10ea6a5f0,%rcx  ;   {metadata({method} {0x000000010ea6a5f0} 'indexOf' '(Ljava/lang/String;I)I' in 'java/lang/String')}
  0x000000010f7f8795: and    $0x1ff8,%r8d
  0x000000010f7f879c: cmp    $0x0,%r8d
  0x000000010f7f87a0: je     0x000000010f7f87f0  ;*aload_0
                                                ; - java.lang.String::indexOf@0 (line 1718)

  0x000000010f7f87a6: mov    0xc(%rsi),%esi
  0x000000010f7f87a9: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::indexOf@1 (line 1718)

  0x000000010f7f87ad: mov    0xc(%rsi),%ecx     ;*arraylength
                                                ; - java.lang.String::indexOf@9 (line 1718)
                                                ; implicit exception: dispatches to 0x000000010f7f8804
  0x000000010f7f87b0: mov    0xc(%rdx),%r8d     ; implicit exception: dispatches to 0x000000010f7f8809
  0x000000010f7f87b4: shl    $0x3,%r8           ;*getfield value
                                                ; - java.lang.String::indexOf@11 (line 1718)

  0x000000010f7f87b8: mov    0xc(%r8),%edi      ;*arraylength
                                                ; - java.lang.String::indexOf@19 (line 1718)
                                                ; implicit exception: dispatches to 0x000000010f7f880e
  0x000000010f7f87bc: movabs $0x10ed92370,%rdx  ;   {metadata(method data for {method} {0x000000010ea6a5f0} 'indexOf' '(Ljava/lang/String;I)I' in 'java/lang/String')}
  0x000000010f7f87c6: addq   $0x1,0x108(%rdx)
  0x000000010f7f87ce: mov    $0x0,%edx
  0x000000010f7f87d3: mov    $0x0,%r9d
  0x000000010f7f87d9: mov    %ebx,(%rsp)        ;*invokestatic indexOf
                                                ; - java.lang.String::indexOf@21 (line 1718)

  0x000000010f7f87dc: nop
  0x000000010f7f87dd: nop
  0x000000010f7f87de: nop
  0x000000010f7f87df: callq  0x000000010f717520  ; OopMap{off=164}
                                                ;*invokestatic indexOf
                                                ; - java.lang.String::indexOf@21 (line 1718)
                                                ;   {static_call}
  0x000000010f7f87e4: add    $0x50,%rsp
  0x000000010f7f87e8: pop    %rbp
  0x000000010f7f87e9: test   %eax,-0x8d5d6ef(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7f87ef: retq   
  0x000000010f7f87f0: mov    %rcx,0x8(%rsp)
  0x000000010f7f87f5: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7f87fd: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop rdx=Oop off=194}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1718)
                                                ;   {runtime_call}
  0x000000010f7f8802: jmp    0x000000010f7f87a6
  0x000000010f7f8804: callq  0x000000010f7cd0c0  ; OopMap{rdx=Oop rsi=Oop off=201}
                                                ;*arraylength
                                                ; - java.lang.String::indexOf@9 (line 1718)
                                                ;   {runtime_call}
  0x000000010f7f8809: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop off=206}
                                                ;*getfield value
                                                ; - java.lang.String::indexOf@11 (line 1718)
                                                ;   {runtime_call}
  0x000000010f7f880e: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop r8=Oop off=211}
                                                ;*arraylength
                                                ; - java.lang.String::indexOf@19 (line 1718)
                                                ;   {runtime_call}
  0x000000010f7f8813: nop
  0x000000010f7f8814: nop
  0x000000010f7f8815: mov    0x2a8(%r15),%rax
  0x000000010f7f881c: movabs $0x0,%r10
  0x000000010f7f8826: mov    %r10,0x2a8(%r15)
  0x000000010f7f882d: movabs $0x0,%r10
  0x000000010f7f8837: mov    %r10,0x2b0(%r15)
  0x000000010f7f883e: add    $0x50,%rsp
  0x000000010f7f8842: pop    %rbp
  0x000000010f7f8843: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7f8848: hlt    
  0x000000010f7f8849: hlt    
  0x000000010f7f884a: hlt    
  0x000000010f7f884b: hlt    
  0x000000010f7f884c: hlt    
  0x000000010f7f884d: hlt    
  0x000000010f7f884e: hlt    
  0x000000010f7f884f: hlt    
  0x000000010f7f8850: hlt    
  0x000000010f7f8851: hlt    
  0x000000010f7f8852: hlt    
  0x000000010f7f8853: hlt    
  0x000000010f7f8854: hlt    
  0x000000010f7f8855: hlt    
  0x000000010f7f8856: hlt    
  0x000000010f7f8857: hlt    
  0x000000010f7f8858: hlt    
  0x000000010f7f8859: hlt    
  0x000000010f7f885a: hlt    
  0x000000010f7f885b: hlt    
  0x000000010f7f885c: hlt    
  0x000000010f7f885d: hlt    
  0x000000010f7f885e: hlt    
  0x000000010f7f885f: hlt    
[Stub Code]
  0x000000010f7f8860: nop                       ;   {no_reloc}
  0x000000010f7f8861: nop
  0x000000010f7f8862: nop
  0x000000010f7f8863: nop
  0x000000010f7f8864: nop
  0x000000010f7f8865: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7f886f: jmpq   0x000000010f7f886f  ;   {runtime_call}
[Exception Handler]
  0x000000010f7f8874: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f7f8879: mov    %rsp,-0x28(%rsp)
  0x000000010f7f887e: sub    $0x80,%rsp
  0x000000010f7f8885: mov    %rax,0x78(%rsp)
  0x000000010f7f888a: mov    %rcx,0x70(%rsp)
  0x000000010f7f888f: mov    %rdx,0x68(%rsp)
  0x000000010f7f8894: mov    %rbx,0x60(%rsp)
  0x000000010f7f8899: mov    %rbp,0x50(%rsp)
  0x000000010f7f889e: mov    %rsi,0x48(%rsp)
  0x000000010f7f88a3: mov    %rdi,0x40(%rsp)
  0x000000010f7f88a8: mov    %r8,0x38(%rsp)
  0x000000010f7f88ad: mov    %r9,0x30(%rsp)
  0x000000010f7f88b2: mov    %r10,0x28(%rsp)
  0x000000010f7f88b7: mov    %r11,0x20(%rsp)
  0x000000010f7f88bc: mov    %r12,0x18(%rsp)
  0x000000010f7f88c1: mov    %r13,0x10(%rsp)
  0x000000010f7f88c6: mov    %r14,0x8(%rsp)
  0x000000010f7f88cb: mov    %r15,(%rsp)
  0x000000010f7f88cf: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7f88d9: movabs $0x10f7f8879,%rsi  ;   {internal_word}
  0x000000010f7f88e3: mov    %rsp,%rdx
  0x000000010f7f88e6: and    $0xfffffffffffffff0,%rsp
  0x000000010f7f88ea: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7f88ef: hlt    
[Deopt Handler Code]
  0x000000010f7f88f0: movabs $0x10f7f88f0,%r10  ;   {section_word}
  0x000000010f7f88fa: push   %r10
  0x000000010f7f88fc: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7f8901: hlt    
  0x000000010f7f8902: hlt    
  0x000000010f7f8903: hlt    
  0x000000010f7f8904: hlt    
  0x000000010f7f8905: hlt    
  0x000000010f7f8906: hlt    
  0x000000010f7f8907: hlt    
Decoding compiled method 0x000000010f7f8a90:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ead0268} 'returnType' '()Ljava/lang/Class;' in 'java/lang/invoke/MethodType'
  #           [sp+0x40]  (sp of caller)
  0x000000010f7f8be0: mov    0x8(%rsi),%r10d
  0x000000010f7f8be4: shl    $0x3,%r10
  0x000000010f7f8be8: cmp    %rax,%r10
  0x000000010f7f8beb: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7f8bf1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7f8bfc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7f8c00: mov    %eax,-0x14000(%rsp)
  0x000000010f7f8c07: push   %rbp
  0x000000010f7f8c08: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.lang.invoke.MethodType::returnType@0 (line 720)

  0x000000010f7f8c0c: mov    0xc(%rsi),%eax
  0x000000010f7f8c0f: shl    $0x3,%rax          ;*getfield rtype
                                                ; - java.lang.invoke.MethodType::returnType@1 (line 720)

  0x000000010f7f8c13: add    $0x30,%rsp
  0x000000010f7f8c17: pop    %rbp
  0x000000010f7f8c18: test   %eax,-0x8d5db1e(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7f8c1e: retq   
  0x000000010f7f8c1f: nop
  0x000000010f7f8c20: nop
  0x000000010f7f8c21: mov    0x2a8(%r15),%rax
  0x000000010f7f8c28: movabs $0x0,%r10
  0x000000010f7f8c32: mov    %r10,0x2a8(%r15)
  0x000000010f7f8c39: movabs $0x0,%r10
  0x000000010f7f8c43: mov    %r10,0x2b0(%r15)
  0x000000010f7f8c4a: add    $0x30,%rsp
  0x000000010f7f8c4e: pop    %rbp
  0x000000010f7f8c4f: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7f8c54: hlt    
  0x000000010f7f8c55: hlt    
  0x000000010f7f8c56: hlt    
  0x000000010f7f8c57: hlt    
  0x000000010f7f8c58: hlt    
  0x000000010f7f8c59: hlt    
  0x000000010f7f8c5a: hlt    
  0x000000010f7f8c5b: hlt    
  0x000000010f7f8c5c: hlt    
  0x000000010f7f8c5d: hlt    
  0x000000010f7f8c5e: hlt    
  0x000000010f7f8c5f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f7f8c60: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f7f8c65: mov    %rsp,-0x28(%rsp)
  0x000000010f7f8c6a: sub    $0x80,%rsp
  0x000000010f7f8c71: mov    %rax,0x78(%rsp)
  0x000000010f7f8c76: mov    %rcx,0x70(%rsp)
  0x000000010f7f8c7b: mov    %rdx,0x68(%rsp)
  0x000000010f7f8c80: mov    %rbx,0x60(%rsp)
  0x000000010f7f8c85: mov    %rbp,0x50(%rsp)
  0x000000010f7f8c8a: mov    %rsi,0x48(%rsp)
  0x000000010f7f8c8f: mov    %rdi,0x40(%rsp)
  0x000000010f7f8c94: mov    %r8,0x38(%rsp)
  0x000000010f7f8c99: mov    %r9,0x30(%rsp)
  0x000000010f7f8c9e: mov    %r10,0x28(%rsp)
  0x000000010f7f8ca3: mov    %r11,0x20(%rsp)
  0x000000010f7f8ca8: mov    %r12,0x18(%rsp)
  0x000000010f7f8cad: mov    %r13,0x10(%rsp)
  0x000000010f7f8cb2: mov    %r14,0x8(%rsp)
  0x000000010f7f8cb7: mov    %r15,(%rsp)
  0x000000010f7f8cbb: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7f8cc5: movabs $0x10f7f8c65,%rsi  ;   {internal_word}
  0x000000010f7f8ccf: mov    %rsp,%rdx
  0x000000010f7f8cd2: and    $0xfffffffffffffff0,%rsp
  0x000000010f7f8cd6: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7f8cdb: hlt    
[Deopt Handler Code]
  0x000000010f7f8cdc: movabs $0x10f7f8cdc,%r10  ;   {section_word}
  0x000000010f7f8ce6: push   %r10
  0x000000010f7f8ce8: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7f8ced: hlt    
  0x000000010f7f8cee: hlt    
  0x000000010f7f8cef: hlt    
Decoding compiled method 0x000000010f7f8f90:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x000000010f7f90e0: mov    0x8(%rsi),%r10d
  0x000000010f7f90e4: shl    $0x3,%r10
  0x000000010f7f90e8: cmp    %rax,%r10
  0x000000010f7f90eb: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7f90f1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7f90fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7f9100: mov    %eax,-0x14000(%rsp)
  0x000000010f7f9107: push   %rbp
  0x000000010f7f9108: sub    $0x30,%rsp
  0x000000010f7f910c: mov    %rsi,%rdi          ;*return
                                                ; - java.lang.Object::<init>@0 (line 37)

  0x000000010f7f910f: mov    %rsi,0x20(%rsp)
  0x000000010f7f9114: callq  0x000000010f7cd2e0  ; OopMap{[32]=Oop off=57}
                                                ;*return
                                                ; - java.lang.Object::<init>@0 (line 37)
                                                ;   {runtime_call}
  0x000000010f7f9119: add    $0x30,%rsp
  0x000000010f7f911d: pop    %rbp
  0x000000010f7f911e: test   %eax,-0x8d5e024(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7f9124: retq   
  0x000000010f7f9125: nop
  0x000000010f7f9126: nop
  0x000000010f7f9127: mov    0x2a8(%r15),%rax
  0x000000010f7f912e: movabs $0x0,%r10
  0x000000010f7f9138: mov    %r10,0x2a8(%r15)
  0x000000010f7f913f: movabs $0x0,%r10
  0x000000010f7f9149: mov    %r10,0x2b0(%r15)
  0x000000010f7f9150: add    $0x30,%rsp
  0x000000010f7f9154: pop    %rbp
  0x000000010f7f9155: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7f915a: hlt    
  0x000000010f7f915b: hlt    
  0x000000010f7f915c: hlt    
  0x000000010f7f915d: hlt    
  0x000000010f7f915e: hlt    
  0x000000010f7f915f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f7f9160: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f7f9165: mov    %rsp,-0x28(%rsp)
  0x000000010f7f916a: sub    $0x80,%rsp
  0x000000010f7f9171: mov    %rax,0x78(%rsp)
  0x000000010f7f9176: mov    %rcx,0x70(%rsp)
  0x000000010f7f917b: mov    %rdx,0x68(%rsp)
  0x000000010f7f9180: mov    %rbx,0x60(%rsp)
  0x000000010f7f9185: mov    %rbp,0x50(%rsp)
  0x000000010f7f918a: mov    %rsi,0x48(%rsp)
  0x000000010f7f918f: mov    %rdi,0x40(%rsp)
  0x000000010f7f9194: mov    %r8,0x38(%rsp)
  0x000000010f7f9199: mov    %r9,0x30(%rsp)
  0x000000010f7f919e: mov    %r10,0x28(%rsp)
  0x000000010f7f91a3: mov    %r11,0x20(%rsp)
  0x000000010f7f91a8: mov    %r12,0x18(%rsp)
  0x000000010f7f91ad: mov    %r13,0x10(%rsp)
  0x000000010f7f91b2: mov    %r14,0x8(%rsp)
  0x000000010f7f91b7: mov    %r15,(%rsp)
  0x000000010f7f91bb: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7f91c5: movabs $0x10f7f9165,%rsi  ;   {internal_word}
  0x000000010f7f91cf: mov    %rsp,%rdx
  0x000000010f7f91d2: and    $0xfffffffffffffff0,%rsp
  0x000000010f7f91d6: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7f91db: hlt    
[Deopt Handler Code]
  0x000000010f7f91dc: movabs $0x10f7f91dc,%r10  ;   {section_word}
  0x000000010f7f91e6: push   %r10
  0x000000010f7f91e8: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7f91ed: hlt    
  0x000000010f7f91ee: hlt    
  0x000000010f7f91ef: hlt    
Decoding compiled method 0x000000010f7f9290:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010eabdbe8} 'getDeclaringClass' '()Ljava/lang/Class;' in 'java/lang/invoke/MemberName'
  #           [sp+0x40]  (sp of caller)
  0x000000010f7f93e0: mov    0x8(%rsi),%r10d
  0x000000010f7f93e4: shl    $0x3,%r10
  0x000000010f7f93e8: cmp    %rax,%r10
  0x000000010f7f93eb: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7f93f1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7f93fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7f9400: mov    %eax,-0x14000(%rsp)
  0x000000010f7f9407: push   %rbp
  0x000000010f7f9408: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.lang.invoke.MemberName::getDeclaringClass@0 (line 85)

  0x000000010f7f940c: mov    0x20(%rsi),%eax
  0x000000010f7f940f: shl    $0x3,%rax          ;*getfield clazz
                                                ; - java.lang.invoke.MemberName::getDeclaringClass@1 (line 85)

  0x000000010f7f9413: add    $0x30,%rsp
  0x000000010f7f9417: pop    %rbp
  0x000000010f7f9418: test   %eax,-0x8d5e31e(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7f941e: retq   
  0x000000010f7f941f: nop
  0x000000010f7f9420: nop
  0x000000010f7f9421: mov    0x2a8(%r15),%rax
  0x000000010f7f9428: movabs $0x0,%r10
  0x000000010f7f9432: mov    %r10,0x2a8(%r15)
  0x000000010f7f9439: movabs $0x0,%r10
  0x000000010f7f9443: mov    %r10,0x2b0(%r15)
  0x000000010f7f944a: add    $0x30,%rsp
  0x000000010f7f944e: pop    %rbp
  0x000000010f7f944f: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7f9454: hlt    
  0x000000010f7f9455: hlt    
  0x000000010f7f9456: hlt    
  0x000000010f7f9457: hlt    
  0x000000010f7f9458: hlt    
  0x000000010f7f9459: hlt    
  0x000000010f7f945a: hlt    
  0x000000010f7f945b: hlt    
  0x000000010f7f945c: hlt    
  0x000000010f7f945d: hlt    
  0x000000010f7f945e: hlt    
  0x000000010f7f945f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f7f9460: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f7f9465: mov    %rsp,-0x28(%rsp)
  0x000000010f7f946a: sub    $0x80,%rsp
  0x000000010f7f9471: mov    %rax,0x78(%rsp)
  0x000000010f7f9476: mov    %rcx,0x70(%rsp)
  0x000000010f7f947b: mov    %rdx,0x68(%rsp)
  0x000000010f7f9480: mov    %rbx,0x60(%rsp)
  0x000000010f7f9485: mov    %rbp,0x50(%rsp)
  0x000000010f7f948a: mov    %rsi,0x48(%rsp)
  0x000000010f7f948f: mov    %rdi,0x40(%rsp)
  0x000000010f7f9494: mov    %r8,0x38(%rsp)
  0x000000010f7f9499: mov    %r9,0x30(%rsp)
  0x000000010f7f949e: mov    %r10,0x28(%rsp)
  0x000000010f7f94a3: mov    %r11,0x20(%rsp)
  0x000000010f7f94a8: mov    %r12,0x18(%rsp)
  0x000000010f7f94ad: mov    %r13,0x10(%rsp)
  0x000000010f7f94b2: mov    %r14,0x8(%rsp)
  0x000000010f7f94b7: mov    %r15,(%rsp)
  0x000000010f7f94bb: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7f94c5: movabs $0x10f7f9465,%rsi  ;   {internal_word}
  0x000000010f7f94cf: mov    %rsp,%rdx
  0x000000010f7f94d2: and    $0xfffffffffffffff0,%rsp
  0x000000010f7f94d6: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7f94db: hlt    
[Deopt Handler Code]
  0x000000010f7f94dc: movabs $0x10f7f94dc,%r10  ;   {section_word}
  0x000000010f7f94e6: push   %r10
  0x000000010f7f94e8: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7f94ed: hlt    
  0x000000010f7f94ee: hlt    
  0x000000010f7f94ef: hlt    
Decoding compiled method 0x000000010f7f9590:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ed77218} 'putUTF8' '(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;' in 'jdk/internal/org/objectweb/asm/ByteVector'
  # this:     rsi:rsi   = 'jdk/internal/org/objectweb/asm/ByteVector'
  # parm0:    rdx:rdx   = 'java/lang/String'
  #           [sp+0xa0]  (sp of caller)
  0x000000010f7f9780: mov    0x8(%rsi),%r10d
  0x000000010f7f9784: shl    $0x3,%r10
  0x000000010f7f9788: cmp    %rax,%r10
  0x000000010f7f978b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7f9791: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7f979c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7f97a0: mov    %eax,-0x14000(%rsp)
  0x000000010f7f97a7: push   %rbp
  0x000000010f7f97a8: sub    $0x90,%rsp
  0x000000010f7f97af: mov    %rsi,0x48(%rsp)
  0x000000010f7f97b4: mov    %rdx,0x58(%rsp)
  0x000000010f7f97b9: movabs $0x10ed934c8,%rdi  ;   {metadata(method data for {method} {0x000000010ed77218} 'putUTF8' '(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;' in 'jdk/internal/org/objectweb/asm/ByteVector')}
  0x000000010f7f97c3: mov    0xdc(%rdi),%ebx
  0x000000010f7f97c9: add    $0x8,%ebx
  0x000000010f7f97cc: mov    %ebx,0xdc(%rdi)
  0x000000010f7f97d2: movabs $0x10ed77218,%rdi  ;   {metadata({method} {0x000000010ed77218} 'putUTF8' '(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;' in 'jdk/internal/org/objectweb/asm/ByteVector')}
  0x000000010f7f97dc: and    $0x1ff8,%ebx
  0x000000010f7f97e2: cmp    $0x0,%ebx
  0x000000010f7f97e5: je     0x000000010f7f9d76  ;*aload_1
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@0 (line 240)

  0x000000010f7f97eb: cmp    (%rdx),%rax        ;*invokevirtual length
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 240)
                                                ; implicit exception: dispatches to 0x000000010f7f9d8d
  0x000000010f7f97ee: mov    %rdx,%rdi
  0x000000010f7f97f1: movabs $0x10ed934c8,%rbx  ;   {metadata(method data for {method} {0x000000010ed77218} 'putUTF8' '(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;' in 'jdk/internal/org/objectweb/asm/ByteVector')}
  0x000000010f7f97fb: mov    0x8(%rdi),%edi
  0x000000010f7f97fe: shl    $0x3,%rdi
  0x000000010f7f9802: cmp    0x110(%rbx),%rdi
  0x000000010f7f9809: jne    0x000000010f7f9818
  0x000000010f7f980b: addq   $0x1,0x118(%rbx)
  0x000000010f7f9813: jmpq   0x000000010f7f987e
  0x000000010f7f9818: cmp    0x120(%rbx),%rdi
  0x000000010f7f981f: jne    0x000000010f7f982e
  0x000000010f7f9821: addq   $0x1,0x128(%rbx)
  0x000000010f7f9829: jmpq   0x000000010f7f987e
  0x000000010f7f982e: cmpq   $0x0,0x110(%rbx)
  0x000000010f7f9839: jne    0x000000010f7f9852
  0x000000010f7f983b: mov    %rdi,0x110(%rbx)
  0x000000010f7f9842: movq   $0x1,0x118(%rbx)
  0x000000010f7f984d: jmpq   0x000000010f7f987e
  0x000000010f7f9852: cmpq   $0x0,0x120(%rbx)
  0x000000010f7f985d: jne    0x000000010f7f9876
  0x000000010f7f985f: mov    %rdi,0x120(%rbx)
  0x000000010f7f9866: movq   $0x1,0x128(%rbx)
  0x000000010f7f9871: jmpq   0x000000010f7f987e
  0x000000010f7f9876: addq   $0x1,0x108(%rbx)
  0x000000010f7f987e: movabs $0x10ec39558,%rdi  ;   {metadata(method data for {method} {0x000000010ea68c60} 'length' '()I' in 'java/lang/String')}
  0x000000010f7f9888: mov    0xdc(%rdi),%ebx
  0x000000010f7f988e: add    $0x8,%ebx
  0x000000010f7f9891: mov    %ebx,0xdc(%rdi)
  0x000000010f7f9897: movabs $0x10ea68c60,%rdi  ;   {metadata({method} {0x000000010ea68c60} 'length' '()I' in 'java/lang/String')}
  0x000000010f7f98a1: and    $0x7ffff8,%ebx
  0x000000010f7f98a7: cmp    $0x0,%ebx
  0x000000010f7f98aa: je     0x000000010f7f9d92
  0x000000010f7f98b0: mov    0xc(%rdx),%edi
  0x000000010f7f98b3: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 240)

  0x000000010f7f98b7: mov    0xc(%rdi),%edi     ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 240)
                                                ; implicit exception: dispatches to 0x000000010f7f9da9
  0x000000010f7f98ba: mov    %edi,0x50(%rsp)
  0x000000010f7f98be: cmp    $0xffff,%edi
  0x000000010f7f98c4: movabs $0x10ed934c8,%rbx  ;   {metadata(method data for {method} {0x000000010ed77218} 'putUTF8' '(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;' in 'jdk/internal/org/objectweb/asm/ByteVector')}
  0x000000010f7f98ce: movabs $0x138,%rax
  0x000000010f7f98d8: jle    0x000000010f7f98e8
  0x000000010f7f98de: movabs $0x148,%rax
  0x000000010f7f98e8: mov    (%rbx,%rax,1),%rcx
  0x000000010f7f98ec: lea    0x1(%rcx),%rcx
  0x000000010f7f98f0: mov    %rcx,(%rbx,%rax,1)
  0x000000010f7f98f4: jg     0x000000010f7f9cfe  ;*if_icmple
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@8 (line 241)

  0x000000010f7f98fa: mov    0xc(%rsi),%ebx     ;*getfield length
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@20 (line 244)

  0x000000010f7f98fd: mov    0x10(%rsi),%eax
  0x000000010f7f9900: shl    $0x3,%rax          ;*getfield data
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@30 (line 245)

  0x000000010f7f9904: mov    0xc(%rax),%eax     ;*arraylength
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@33 (line 245)
                                                ; implicit exception: dispatches to 0x000000010f7f9dae
  0x000000010f7f9907: mov    %rbx,%rcx
  0x000000010f7f990a: add    $0x2,%ecx
  0x000000010f7f990d: add    %edi,%ecx
  0x000000010f7f990f: cmp    %eax,%ecx
  0x000000010f7f9911: movabs $0x10ed934c8,%rax  ;   {metadata(method data for {method} {0x000000010ed77218} 'putUTF8' '(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;' in 'jdk/internal/org/objectweb/asm/ByteVector')}
  0x000000010f7f991b: movabs $0x168,%rcx
  0x000000010f7f9925: jle    0x000000010f7f9935
  0x000000010f7f992b: movabs $0x178,%rcx
  0x000000010f7f9935: mov    (%rax,%rcx,1),%r8
  0x000000010f7f9939: lea    0x1(%r8),%r8
  0x000000010f7f993d: mov    %r8,(%rax,%rcx,1)
  0x000000010f7f9941: jle    0x000000010f7f997d  ;*if_icmple
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@34 (line 245)

  0x000000010f7f9947: mov    %ebx,0x54(%rsp)
  0x000000010f7f994b: mov    %rsi,%rax
  0x000000010f7f994e: movabs $0x10ed934c8,%rcx  ;   {metadata(method data for {method} {0x000000010ed77218} 'putUTF8' '(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;' in 'jdk/internal/org/objectweb/asm/ByteVector')}
  0x000000010f7f9958: addq   $0x1,0x188(%rcx)
  0x000000010f7f9960: mov    %rdi,%rax
  0x000000010f7f9963: add    $0x2,%eax
  0x000000010f7f9966: mov    %rax,%rdx
  0x000000010f7f9969: mov    %rsi,%rax
  0x000000010f7f996c: mov    %rax,%rsi          ;*invokespecial enlarge
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@41 (line 246)

  0x000000010f7f996f: callq  0x000000010f7170a0  ; OopMap{[72]=Oop [88]=Oop off=500}
                                                ;*invokespecial enlarge
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@41 (line 246)
                                                ;   {optimized virtual_call}
  0x000000010f7f9974: mov    0x54(%rsp),%ebx
  0x000000010f7f9978: mov    0x48(%rsp),%rsi
  0x000000010f7f997d: mov    0x10(%rsi),%edi
  0x000000010f7f9980: shl    $0x3,%rdi          ;*getfield data
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@45 (line 248)

  0x000000010f7f9984: mov    0x50(%rsp),%edx
  0x000000010f7f9988: shr    $0x8,%edx
  0x000000010f7f998b: movslq %ebx,%rcx
  0x000000010f7f998e: cmp    0xc(%rdi),%ebx     ; implicit exception: dispatches to 0x000000010f7f9db3
  0x000000010f7f9991: jae    0x000000010f7f9dbd
  0x000000010f7f9997: mov    %dl,0x10(%rdi,%rcx,1)  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@61 (line 255)

  0x000000010f7f999b: inc    %ebx
  0x000000010f7f999d: mov    %rbx,%rdx
  0x000000010f7f99a0: inc    %edx
  0x000000010f7f99a2: mov    0x50(%rsp),%ecx
  0x000000010f7f99a6: movslq %ebx,%r8
  0x000000010f7f99a9: cmp    0xc(%rdi),%ebx
  0x000000010f7f99ac: jae    0x000000010f7f9dc6
  0x000000010f7f99b2: mov    %cl,0x10(%rdi,%r8,1)  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@70 (line 256)

  0x000000010f7f99b7: mov    $0x0,%ebx          ;*iload
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@74 (line 257)

  0x000000010f7f99bc: mov    0x50(%rsp),%ecx
  0x000000010f7f99c0: mov    0x58(%rsp),%r8
  0x000000010f7f99c5: data16 xchg %ax,%ax
  0x000000010f7f99c8: cmp    %ecx,%ebx
  0x000000010f7f99ca: movabs $0x10ed934c8,%rax  ;   {metadata(method data for {method} {0x000000010ed77218} 'putUTF8' '(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;' in 'jdk/internal/org/objectweb/asm/ByteVector')}
  0x000000010f7f99d4: movabs $0x198,%r9
  0x000000010f7f99de: jge    0x000000010f7f99ee
  0x000000010f7f99e4: movabs $0x1a8,%r9
  0x000000010f7f99ee: mov    (%rax,%r9,1),%r11
  0x000000010f7f99f2: lea    0x1(%r11),%r11
  0x000000010f7f99f6: mov    %r11,(%rax,%r9,1)
  0x000000010f7f99fa: jge    0x000000010f7f9c93  ;*if_icmpge
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@77 (line 257)

  0x000000010f7f9a00: mov    %r8,%rax
  0x000000010f7f9a03: movabs $0x10ed934c8,%r9   ;   {metadata(method data for {method} {0x000000010ed77218} 'putUTF8' '(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;' in 'jdk/internal/org/objectweb/asm/ByteVector')}
  0x000000010f7f9a0d: mov    0x8(%rax),%eax
  0x000000010f7f9a10: shl    $0x3,%rax
  0x000000010f7f9a14: cmp    0x1c0(%r9),%rax
  0x000000010f7f9a1b: jne    0x000000010f7f9a2a
  0x000000010f7f9a1d: addq   $0x1,0x1c8(%r9)
  0x000000010f7f9a25: jmpq   0x000000010f7f9a90
  0x000000010f7f9a2a: cmp    0x1d0(%r9),%rax
  0x000000010f7f9a31: jne    0x000000010f7f9a40
  0x000000010f7f9a33: addq   $0x1,0x1d8(%r9)
  0x000000010f7f9a3b: jmpq   0x000000010f7f9a90
  0x000000010f7f9a40: cmpq   $0x0,0x1c0(%r9)
  0x000000010f7f9a4b: jne    0x000000010f7f9a64
  0x000000010f7f9a4d: mov    %rax,0x1c0(%r9)
  0x000000010f7f9a54: movq   $0x1,0x1c8(%r9)
  0x000000010f7f9a5f: jmpq   0x000000010f7f9a90
  0x000000010f7f9a64: cmpq   $0x0,0x1d0(%r9)
  0x000000010f7f9a6f: jne    0x000000010f7f9a88
  0x000000010f7f9a71: mov    %rax,0x1d0(%r9)
  0x000000010f7f9a78: movq   $0x1,0x1d8(%r9)
  0x000000010f7f9a83: jmpq   0x000000010f7f9a90
  0x000000010f7f9a88: addq   $0x1,0x1b8(%r9)
  0x000000010f7f9a90: movabs $0x10ebeb488,%rax  ;   {metadata(method data for {method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f7f9a9a: mov    0xdc(%rax),%r9d
  0x000000010f7f9aa1: add    $0x8,%r9d
  0x000000010f7f9aa5: mov    %r9d,0xdc(%rax)
  0x000000010f7f9aac: movabs $0x10ea68db0,%rax  ;   {metadata({method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f7f9ab6: and    $0x7ffff8,%r9d
  0x000000010f7f9abd: cmp    $0x0,%r9d
  0x000000010f7f9ac1: je     0x000000010f7f9dcf
  0x000000010f7f9ac7: cmp    $0x0,%ebx
  0x000000010f7f9aca: movabs $0x10ebeb488,%rax  ;   {metadata(method data for {method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f7f9ad4: movabs $0x108,%r9
  0x000000010f7f9ade: jl     0x000000010f7f9aee
  0x000000010f7f9ae4: movabs $0x118,%r9
  0x000000010f7f9aee: mov    (%rax,%r9,1),%r11
  0x000000010f7f9af2: lea    0x1(%r11),%r11
  0x000000010f7f9af6: mov    %r11,(%rax,%r9,1)
  0x000000010f7f9afa: jl     0x000000010f7f9ca8  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x000000010f7f9b00: mov    0xc(%r8),%eax
  0x000000010f7f9b04: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x000000010f7f9b08: mov    0xc(%rax),%r9d     ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)
                                                ; implicit exception: dispatches to 0x000000010f7f9de6
  0x000000010f7f9b0c: cmp    %r9d,%ebx
  0x000000010f7f9b0f: movabs $0x10ebeb488,%r9   ;   {metadata(method data for {method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f7f9b19: movabs $0x128,%r11
  0x000000010f7f9b23: jl     0x000000010f7f9b33
  0x000000010f7f9b29: movabs $0x138,%r11
  0x000000010f7f9b33: mov    (%r9,%r11,1),%r13
  0x000000010f7f9b37: lea    0x1(%r13),%r13
  0x000000010f7f9b3b: mov    %r13,(%r9,%r11,1)
  0x000000010f7f9b3f: jge    0x000000010f7f9ca8  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x000000010f7f9b45: movslq %ebx,%r9
  0x000000010f7f9b48: cmp    0xc(%rax),%ebx
  0x000000010f7f9b4b: jae    0x000000010f7f9deb
  0x000000010f7f9b51: movzwl 0x10(%rax,%r9,2),%eax  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x000000010f7f9b57: and    $0xffff,%eax
  0x000000010f7f9b5d: cmp    $0x1,%eax
  0x000000010f7f9b60: movabs $0x10ed934c8,%r9   ;   {metadata(method data for {method} {0x000000010ed77218} 'putUTF8' '(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;' in 'jdk/internal/org/objectweb/asm/ByteVector')}
  0x000000010f7f9b6a: movabs $0x1e8,%r11
  0x000000010f7f9b74: jl     0x000000010f7f9b84
  0x000000010f7f9b7a: movabs $0x1f8,%r11
  0x000000010f7f9b84: mov    (%r9,%r11,1),%r13
  0x000000010f7f9b88: lea    0x1(%r13),%r13
  0x000000010f7f9b8c: mov    %r13,(%r9,%r11,1)
  0x000000010f7f9b90: jl     0x000000010f7f9c48  ;*if_icmplt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@91 (line 259)

  0x000000010f7f9b96: cmp    $0x7f,%eax
  0x000000010f7f9b99: movabs $0x10ed934c8,%r9   ;   {metadata(method data for {method} {0x000000010ed77218} 'putUTF8' '(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;' in 'jdk/internal/org/objectweb/asm/ByteVector')}
  0x000000010f7f9ba3: movabs $0x208,%r11
  0x000000010f7f9bad: jg     0x000000010f7f9bbd
  0x000000010f7f9bb3: movabs $0x218,%r11
  0x000000010f7f9bbd: mov    (%r9,%r11,1),%r13
  0x000000010f7f9bc1: lea    0x1(%r13),%r13
  0x000000010f7f9bc5: mov    %r13,(%r9,%r11,1)
  0x000000010f7f9bc9: jg     0x000000010f7f9c48  ;*if_icmpgt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@98 (line 259)

  0x000000010f7f9bcf: mov    %rdx,%r9
  0x000000010f7f9bd2: inc    %r9d
  0x000000010f7f9bd5: movslq %edx,%r11
  0x000000010f7f9bd8: cmp    0xc(%rdi),%edx
  0x000000010f7f9bdb: jae    0x000000010f7f9df4
  0x000000010f7f9be1: mov    %al,0x10(%rdi,%r11,1)  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@110 (line 260)

  0x000000010f7f9be6: movabs $0x10ed934c8,%rdx  ;   {metadata(method data for {method} {0x000000010ed77218} 'putUTF8' '(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;' in 'jdk/internal/org/objectweb/asm/ByteVector')}
  0x000000010f7f9bf0: incl   0x228(%rdx)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@111 (line 260)

  0x000000010f7f9bf6: inc    %ebx
  0x000000010f7f9bf8: movabs $0x10ed934c8,%rdx  ;   {metadata(method data for {method} {0x000000010ed77218} 'putUTF8' '(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;' in 'jdk/internal/org/objectweb/asm/ByteVector')}
  0x000000010f7f9c02: mov    0xe0(%rdx),%eax
  0x000000010f7f9c08: add    $0x8,%eax
  0x000000010f7f9c0b: mov    %eax,0xe0(%rdx)
  0x000000010f7f9c11: movabs $0x10ed77218,%rdx  ;   {metadata({method} {0x000000010ed77218} 'putUTF8' '(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;' in 'jdk/internal/org/objectweb/asm/ByteVector')}
  0x000000010f7f9c1b: and    $0xfff8,%eax
  0x000000010f7f9c21: cmp    $0x0,%eax
  0x000000010f7f9c24: je     0x000000010f7f9dfd  ; OopMap{rsi=Oop [72]=Oop rdi=Oop r8=Oop [88]=Oop off=1194}
                                                ;*goto
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@132 (line 257)

  0x000000010f7f9c2a: test   %eax,-0x8d5eb30(%rip)        # 0x0000000106a9b100
                                                ;   {poll}
  0x000000010f7f9c30: movabs $0x10ed934c8,%rdx  ;   {metadata(method data for {method} {0x000000010ed77218} 'putUTF8' '(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;' in 'jdk/internal/org/objectweb/asm/ByteVector')}
  0x000000010f7f9c3a: incl   0x270(%rdx)
  0x000000010f7f9c40: mov    %r9,%rdx
  0x000000010f7f9c43: jmpq   0x000000010f7f99c8  ;*goto
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@132 (line 257)

  0x000000010f7f9c48: mov    %edx,0xc(%rsi)     ;*putfield length
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@116 (line 262)

  0x000000010f7f9c4b: mov    %rsi,%rdx
  0x000000010f7f9c4e: movabs $0x10ed934c8,%rcx  ;   {metadata(method data for {method} {0x000000010ed77218} 'putUTF8' '(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;' in 'jdk/internal/org/objectweb/asm/ByteVector')}
  0x000000010f7f9c58: movabs $0x7c005d9a8,%r10  ;   {metadata('jdk/internal/org/objectweb/asm/ByteVector')}
  0x000000010f7f9c62: mov    %r10,0x248(%rcx)
  0x000000010f7f9c69: addq   $0x1,0x250(%rcx)
  0x000000010f7f9c71: mov    %r8,%rdx
  0x000000010f7f9c74: mov    %rbx,%rcx
  0x000000010f7f9c77: mov    $0xffff,%r8d       ;*invokevirtual encodeUTF8
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@125 (line 263)

  0x000000010f7f9c7d: nop
  0x000000010f7f9c7e: nop
  0x000000010f7f9c7f: callq  0x000000010f7170a0  ; OopMap{off=1284}
                                                ;*invokevirtual encodeUTF8
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@125 (line 263)
                                                ;   {optimized virtual_call}
  0x000000010f7f9c84: add    $0x90,%rsp
  0x000000010f7f9c8b: pop    %rbp
  0x000000010f7f9c8c: test   %eax,-0x8d5eb92(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7f9c92: retq                      ;*areturn
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@128 (line 263)

  0x000000010f7f9c93: mov    %edx,0xc(%rsi)     ;*putfield length
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@137 (line 266)

  0x000000010f7f9c96: mov    %rsi,%rax
  0x000000010f7f9c99: add    $0x90,%rsp
  0x000000010f7f9ca0: pop    %rbp
  0x000000010f7f9ca1: test   %eax,-0x8d5eba7(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7f9ca7: retq                      ;*areturn
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@141 (line 267)

  0x000000010f7f9ca8: mov    %edx,0x70(%rsp)
  0x000000010f7f9cac: mov    %rdi,0x68(%rsp)
  0x000000010f7f9cb1: nopl   0x0(%rax)
  0x000000010f7f9cb8: jmpq   0x000000010f7f9e23  ;   {no_reloc}
  0x000000010f7f9cbd: add    %al,(%rax)
  0x000000010f7f9cbf: add    %al,(%rax)
  0x000000010f7f9cc1: add    %ch,%cl
  0x000000010f7f9cc3: add    %ax,(%rax)
  0x000000010f7f9cc6: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x000000010f7f9cc9: rorb   -0x45(%rcx)        ;   {metadata(method data for {method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f7f9ccc: mov    %dh,0x10e(%rsi,%rdi,4)
  0x000000010f7f9cd3: add    %cl,-0x7d(%rcx)
  0x000000010f7f9cd6: orl    $0x0,0x1(%rax)
  0x000000010f7f9cda: add    %al,(%rcx)
  0x000000010f7f9cdc: mov    %rbx,%rdx
  0x000000010f7f9cdf: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x000000010f7f9ce2: mov    %ebx,0x74(%rsp)
  0x000000010f7f9ce6: mov    %rax,0x60(%rsp)
  0x000000010f7f9ceb: nop
  0x000000010f7f9cec: nop
  0x000000010f7f9ced: nop
  0x000000010f7f9cee: nop
  0x000000010f7f9cef: callq  0x000000010f7170a0  ; OopMap{[72]=Oop [96]=Oop [88]=Oop [104]=Oop off=1396}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)
                                                ;   {optimized virtual_call}
  0x000000010f7f9cf4: mov    0x60(%rsp),%rax
  0x000000010f7f9cf9: jmpq   0x000000010f7f9e8b  ;*athrow
                                                ; - java.lang.String::charAt@21 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x000000010f7f9cfe: xchg   %ax,%ax
  0x000000010f7f9d00: jmpq   0x000000010f7f9e49  ;   {no_reloc}
  0x000000010f7f9d05: add    %al,(%rax)
  0x000000010f7f9d07: add    %al,(%rax)
  0x000000010f7f9d09: add    %cl,-0x75(%rcx)
  0x000000010f7f9d0c: rex.RXB (bad) 
  0x000000010f7f9d0e: lea    0x20(%rax),%rdi
  0x000000010f7f9d12: cmp    0x70(%r15),%rdi
  0x000000010f7f9d16: ja     0x000000010f7f9e53
  0x000000010f7f9d1c: mov    %rdi,0x60(%r15)
  0x000000010f7f9d20: mov    0xa8(%rdx),%rcx
  0x000000010f7f9d27: mov    %rcx,(%rax)
  0x000000010f7f9d2a: mov    %rdx,%rcx
  0x000000010f7f9d2d: shr    $0x3,%rcx
  0x000000010f7f9d31: mov    %ecx,0x8(%rax)
  0x000000010f7f9d34: xor    %rcx,%rcx
  0x000000010f7f9d37: mov    %ecx,0xc(%rax)
  0x000000010f7f9d3a: xor    %rcx,%rcx
  0x000000010f7f9d3d: mov    %rcx,0x10(%rax)
  0x000000010f7f9d41: mov    %rcx,0x18(%rax)    ;*new  ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@11 (line 242)

  0x000000010f7f9d45: mov    %rax,%rsi
  0x000000010f7f9d48: movabs $0x10ed934c8,%rdi  ;   {metadata(method data for {method} {0x000000010ed77218} 'putUTF8' '(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;' in 'jdk/internal/org/objectweb/asm/ByteVector')}
  0x000000010f7f9d52: addq   $0x1,0x158(%rdi)
  0x000000010f7f9d5a: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@15 (line 242)

  0x000000010f7f9d5d: mov    %rax,0x78(%rsp)
  0x000000010f7f9d62: nop
  0x000000010f7f9d63: nop
  0x000000010f7f9d64: nop
  0x000000010f7f9d65: nop
  0x000000010f7f9d66: nop
  0x000000010f7f9d67: callq  0x000000010f7170a0  ; OopMap{[120]=Oop off=1516}
                                                ;*invokespecial <init>
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@15 (line 242)
                                                ;   {optimized virtual_call}
  0x000000010f7f9d6c: mov    0x78(%rsp),%rax
  0x000000010f7f9d71: jmpq   0x000000010f7f9e8b
  0x000000010f7f9d76: mov    %rdi,0x8(%rsp)
  0x000000010f7f9d7b: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7f9d83: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [88]=Oop off=1544}
                                                ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@-1 (line 240)
                                                ;   {runtime_call}
  0x000000010f7f9d88: jmpq   0x000000010f7f97eb
  0x000000010f7f9d8d: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [88]=Oop off=1554}
                                                ;*invokevirtual length
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 240)
                                                ;   {runtime_call}
  0x000000010f7f9d92: mov    %rdi,0x8(%rsp)
  0x000000010f7f9d97: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7f9d9f: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [88]=Oop off=1572}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 240)
                                                ;   {runtime_call}
  0x000000010f7f9da4: jmpq   0x000000010f7f98b0
  0x000000010f7f9da9: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [88]=Oop off=1582}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 240)
                                                ;   {runtime_call}
  0x000000010f7f9dae: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [88]=Oop off=1587}
                                                ;*arraylength
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@33 (line 245)
                                                ;   {runtime_call}
  0x000000010f7f9db3: callq  0x000000010f7cd0c0  ; OopMap{[88]=Oop rsi=Oop [72]=Oop rdi=Oop off=1592}
                                                ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@61 (line 255)
                                                ;   {runtime_call}
  0x000000010f7f9db8: callq  0x000000010f7cd0c0  ; OopMap{[88]=Oop rsi=Oop [72]=Oop rdi=Oop off=1597}
                                                ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@61 (line 255)
                                                ;   {runtime_call}
  0x000000010f7f9dbd: mov    %rbx,(%rsp)
  0x000000010f7f9dc1: callq  0x000000010f7cca00  ; OopMap{[88]=Oop rsi=Oop [72]=Oop rdi=Oop off=1606}
                                                ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@61 (line 255)
                                                ;   {runtime_call}
  0x000000010f7f9dc6: mov    %rbx,(%rsp)
  0x000000010f7f9dca: callq  0x000000010f7cca00  ; OopMap{[88]=Oop rsi=Oop [72]=Oop rdi=Oop off=1615}
                                                ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@70 (line 256)
                                                ;   {runtime_call}
  0x000000010f7f9dcf: mov    %rax,0x8(%rsp)
  0x000000010f7f9dd4: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7f9ddc: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [72]=Oop rdi=Oop r8=Oop [88]=Oop off=1633}
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)
                                                ;   {runtime_call}
  0x000000010f7f9de1: jmpq   0x000000010f7f9ac7
  0x000000010f7f9de6: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop [72]=Oop rdi=Oop r8=Oop [88]=Oop rax=Oop off=1643}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)
                                                ;   {runtime_call}
  0x000000010f7f9deb: mov    %rbx,(%rsp)
  0x000000010f7f9def: callq  0x000000010f7cca00  ; OopMap{rsi=Oop [72]=Oop rdi=Oop r8=Oop [88]=Oop rax=Oop off=1652}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)
                                                ;   {runtime_call}
  0x000000010f7f9df4: mov    %rdx,(%rsp)
  0x000000010f7f9df8: callq  0x000000010f7cca00  ; OopMap{rsi=Oop [72]=Oop rdi=Oop r8=Oop [88]=Oop off=1661}
                                                ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@110 (line 260)
                                                ;   {runtime_call}
  0x000000010f7f9dfd: mov    %rdx,0x8(%rsp)
  0x000000010f7f9e02: movq   $0x84,(%rsp)
  0x000000010f7f9e0a: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [72]=Oop rdi=Oop r8=Oop [88]=Oop off=1679}
                                                ;*goto
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@132 (line 257)
                                                ;   {runtime_call}
  0x000000010f7f9e0f: jmpq   0x000000010f7f9c2a
  0x000000010f7f9e14: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f7f9e1e: mov    $0xa050f00,%eax
  0x000000010f7f9e23: callq  0x000000010f7d08e0  ; OopMap{[72]=Oop [104]=Oop [88]=Oop off=1704}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)
                                                ;   {runtime_call}
  0x000000010f7f9e28: jmpq   0x000000010f7f9cb8
  0x000000010f7f9e2d: mov    %rdx,%rdx
  0x000000010f7f9e30: callq  0x000000010f7cd560  ; OopMap{[72]=Oop [104]=Oop [88]=Oop off=1717}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)
                                                ;   {runtime_call}
  0x000000010f7f9e35: jmpq   0x000000010f7f9cc7
  0x000000010f7f9e3a: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f7f9e44: mov    $0xa050f00,%eax
  0x000000010f7f9e49: callq  0x000000010f7d08e0  ; OopMap{off=1742}
                                                ;*new  ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@11 (line 242)
                                                ;   {runtime_call}
  0x000000010f7f9e4e: jmpq   0x000000010f7f9d00
  0x000000010f7f9e53: mov    %rdx,%rdx
  0x000000010f7f9e56: callq  0x000000010f7cd820  ; OopMap{off=1755}
                                                ;*new  ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@11 (line 242)
                                                ;   {runtime_call}
  0x000000010f7f9e5b: jmpq   0x000000010f7f9d45
  0x000000010f7f9e60: nop
  0x000000010f7f9e61: nop
  0x000000010f7f9e62: mov    0x2a8(%r15),%rax
  0x000000010f7f9e69: movabs $0x0,%r10
  0x000000010f7f9e73: mov    %r10,0x2a8(%r15)
  0x000000010f7f9e7a: movabs $0x0,%r10
  0x000000010f7f9e84: mov    %r10,0x2b0(%r15)
  0x000000010f7f9e8b: add    $0x90,%rsp
  0x000000010f7f9e92: pop    %rbp
  0x000000010f7f9e93: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7f9e98: hlt    
  0x000000010f7f9e99: hlt    
  0x000000010f7f9e9a: hlt    
  0x000000010f7f9e9b: hlt    
  0x000000010f7f9e9c: hlt    
  0x000000010f7f9e9d: hlt    
  0x000000010f7f9e9e: hlt    
  0x000000010f7f9e9f: hlt    
[Stub Code]
  0x000000010f7f9ea0: nop                       ;   {no_reloc}
  0x000000010f7f9ea1: nop
  0x000000010f7f9ea2: nop
  0x000000010f7f9ea3: nop
  0x000000010f7f9ea4: nop
  0x000000010f7f9ea5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7f9eaf: jmpq   0x000000010f7f9eaf  ;   {runtime_call}
  0x000000010f7f9eb4: nop
  0x000000010f7f9eb5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7f9ebf: jmpq   0x000000010f7f9ebf  ;   {runtime_call}
  0x000000010f7f9ec4: nop
  0x000000010f7f9ec5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7f9ecf: jmpq   0x000000010f7f9ecf  ;   {runtime_call}
  0x000000010f7f9ed4: nop
  0x000000010f7f9ed5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7f9edf: jmpq   0x000000010f7f9edf  ;   {runtime_call}
[Exception Handler]
  0x000000010f7f9ee4: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f7f9ee9: mov    %rsp,-0x28(%rsp)
  0x000000010f7f9eee: sub    $0x80,%rsp
  0x000000010f7f9ef5: mov    %rax,0x78(%rsp)
  0x000000010f7f9efa: mov    %rcx,0x70(%rsp)
  0x000000010f7f9eff: mov    %rdx,0x68(%rsp)
  0x000000010f7f9f04: mov    %rbx,0x60(%rsp)
  0x000000010f7f9f09: mov    %rbp,0x50(%rsp)
  0x000000010f7f9f0e: mov    %rsi,0x48(%rsp)
  0x000000010f7f9f13: mov    %rdi,0x40(%rsp)
  0x000000010f7f9f18: mov    %r8,0x38(%rsp)
  0x000000010f7f9f1d: mov    %r9,0x30(%rsp)
  0x000000010f7f9f22: mov    %r10,0x28(%rsp)
  0x000000010f7f9f27: mov    %r11,0x20(%rsp)
  0x000000010f7f9f2c: mov    %r12,0x18(%rsp)
  0x000000010f7f9f31: mov    %r13,0x10(%rsp)
  0x000000010f7f9f36: mov    %r14,0x8(%rsp)
  0x000000010f7f9f3b: mov    %r15,(%rsp)
  0x000000010f7f9f3f: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7f9f49: movabs $0x10f7f9ee9,%rsi  ;   {internal_word}
  0x000000010f7f9f53: mov    %rsp,%rdx
  0x000000010f7f9f56: and    $0xfffffffffffffff0,%rsp
  0x000000010f7f9f5a: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7f9f5f: hlt    
[Deopt Handler Code]
  0x000000010f7f9f60: movabs $0x10f7f9f60,%r10  ;   {section_word}
  0x000000010f7f9f6a: push   %r10
  0x000000010f7f9f6c: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7f9f71: hlt    
  0x000000010f7f9f72: hlt    
  0x000000010f7f9f73: hlt    
  0x000000010f7f9f74: hlt    
  0x000000010f7f9f75: hlt    
  0x000000010f7f9f76: hlt    
  0x000000010f7f9f77: hlt    
Decoding compiled method 0x000000010f7fa5d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ea6af38} 'replace' '(CC)Ljava/lang/String;' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx       = char
  # parm1:    rcx       = char
  #           [sp+0x60]  (sp of caller)
  0x000000010f7fa780: mov    0x8(%rsi),%r10d
  0x000000010f7fa784: shl    $0x3,%r10
  0x000000010f7fa788: cmp    %rax,%r10
  0x000000010f7fa78b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7fa791: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7fa79c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7fa7a0: mov    %eax,-0x14000(%rsp)
  0x000000010f7fa7a7: push   %rbp
  0x000000010f7fa7a8: sub    $0x50,%rsp
  0x000000010f7fa7ac: mov    %rdx,%r8
  0x000000010f7fa7af: mov    %rcx,%r9
  0x000000010f7fa7b2: movabs $0x10ed94110,%rbx  ;   {metadata(method data for {method} {0x000000010ea6af38} 'replace' '(CC)Ljava/lang/String;' in 'java/lang/String')}
  0x000000010f7fa7bc: mov    0xdc(%rbx),%edx
  0x000000010f7fa7c2: add    $0x8,%edx
  0x000000010f7fa7c5: mov    %edx,0xdc(%rbx)
  0x000000010f7fa7cb: movabs $0x10ea6af38,%rbx  ;   {metadata({method} {0x000000010ea6af38} 'replace' '(CC)Ljava/lang/String;' in 'java/lang/String')}
  0x000000010f7fa7d5: and    $0x1ff8,%edx
  0x000000010f7fa7db: cmp    $0x0,%edx
  0x000000010f7fa7de: je     0x000000010f7fac87  ;*iload_1
                                                ; - java.lang.String::replace@0 (line 2067)

  0x000000010f7fa7e4: cmp    %r9d,%r8d
  0x000000010f7fa7e7: movabs $0x10ed94110,%rbx  ;   {metadata(method data for {method} {0x000000010ea6af38} 'replace' '(CC)Ljava/lang/String;' in 'java/lang/String')}
  0x000000010f7fa7f1: movabs $0x108,%rdx
  0x000000010f7fa7fb: je     0x000000010f7fa80b
  0x000000010f7fa801: movabs $0x118,%rdx
  0x000000010f7fa80b: mov    (%rbx,%rdx,1),%rdi
  0x000000010f7fa80f: lea    0x1(%rdi),%rdi
  0x000000010f7fa813: mov    %rdi,(%rbx,%rdx,1)
  0x000000010f7fa817: je     0x000000010f7fac78  ;*if_icmpeq
                                                ; - java.lang.String::replace@2 (line 2067)

  0x000000010f7fa81d: mov    0xc(%rsi),%r11d
  0x000000010f7fa821: shl    $0x3,%r11          ;*getfield value
                                                ; - java.lang.String::replace@6 (line 2068)

  0x000000010f7fa825: mov    0xc(%r11),%r13d    ;*arraylength
                                                ; - java.lang.String::replace@9 (line 2068)
                                                ; implicit exception: dispatches to 0x000000010f7fac9e
  0x000000010f7fa829: mov    $0xffffffff,%ebx
  0x000000010f7fa82e: jmpq   0x000000010f7fa8bf  ;*iinc
                                                ; - java.lang.String::replace@20 (line 2072)

  0x000000010f7fa833: nopl   0x0(%rax,%rax,1)
  0x000000010f7fa838: movslq %r14d,%rbx
  0x000000010f7fa83b: cmp    0xc(%r11),%r14d
  0x000000010f7fa83f: jae    0x000000010f7faca3
  0x000000010f7fa845: movzwl 0x10(%r11,%rbx,2),%ebx  ;*caload
                                                ; - java.lang.String::replace@33 (line 2073)

  0x000000010f7fa84b: movabs $0x10ed94110,%rdx  ;   {metadata(method data for {method} {0x000000010ea6af38} 'replace' '(CC)Ljava/lang/String;' in 'java/lang/String')}
  0x000000010f7fa855: mov    0xe0(%rdx),%edi
  0x000000010f7fa85b: add    $0x8,%edi
  0x000000010f7fa85e: mov    %edi,0xe0(%rdx)
  0x000000010f7fa864: movabs $0x10ea6af38,%rdx  ;   {metadata({method} {0x000000010ea6af38} 'replace' '(CC)Ljava/lang/String;' in 'java/lang/String')}
  0x000000010f7fa86e: and    $0xfff8,%edi
  0x000000010f7fa874: cmp    $0x0,%edi
  0x000000010f7fa877: je     0x000000010f7facac  ; OopMap{rsi=Oop r11=Oop off=253}
                                                ;*if_icmpne
                                                ; - java.lang.String::replace@35 (line 2073)

  0x000000010f7fa87d: test   %eax,-0x8d5f783(%rip)        # 0x0000000106a9b100
                                                ;   {poll}
  0x000000010f7fa883: cmp    %r8d,%ebx
  0x000000010f7fa886: movabs $0x10ed94110,%rbx  ;   {metadata(method data for {method} {0x000000010ea6af38} 'replace' '(CC)Ljava/lang/String;' in 'java/lang/String')}
  0x000000010f7fa890: movabs $0x148,%rdx
  0x000000010f7fa89a: jne    0x000000010f7fa8aa
  0x000000010f7fa8a0: movabs $0x158,%rdx
  0x000000010f7fa8aa: mov    (%rbx,%rdx,1),%rdi
  0x000000010f7fa8ae: lea    0x1(%rdi),%rdi
  0x000000010f7fa8b2: mov    %rdi,(%rbx,%rdx,1)
  0x000000010f7fa8b6: je     0x000000010f7fa903  ;*if_icmpne
                                                ; - java.lang.String::replace@35 (line 2073)

  0x000000010f7fa8bc: mov    %r14,%rbx          ;*iinc
                                                ; - java.lang.String::replace@20 (line 2072)

  0x000000010f7fa8bf: mov    %rbx,%r14
  0x000000010f7fa8c2: inc    %r14d
  0x000000010f7fa8c5: cmp    %r13d,%r14d
  0x000000010f7fa8c8: movabs $0x10ed94110,%rbx  ;   {metadata(method data for {method} {0x000000010ea6af38} 'replace' '(CC)Ljava/lang/String;' in 'java/lang/String')}
  0x000000010f7fa8d2: movabs $0x128,%rdx
  0x000000010f7fa8dc: jge    0x000000010f7fa8ec
  0x000000010f7fa8e2: movabs $0x138,%rdx
  0x000000010f7fa8ec: mov    (%rbx,%rdx,1),%rdi
  0x000000010f7fa8f0: lea    0x1(%rdi),%rdi
  0x000000010f7fa8f4: mov    %rdi,(%rbx,%rdx,1)
  0x000000010f7fa8f8: jge    0x000000010f7fa913
  0x000000010f7fa8fe: jmpq   0x000000010f7fa838  ;*if_icmpge
                                                ; - java.lang.String::replace@26 (line 2072)

  0x000000010f7fa903: movabs $0x10ed94110,%rbx  ;   {metadata(method data for {method} {0x000000010ea6af38} 'replace' '(CC)Ljava/lang/String;' in 'java/lang/String')}
  0x000000010f7fa90d: incl   0x168(%rbx)        ;*goto
                                                ; - java.lang.String::replace@38 (line 2074)

  0x000000010f7fa913: cmp    %r13d,%r14d
  0x000000010f7fa916: movabs $0x10ed94110,%rbx  ;   {metadata(method data for {method} {0x000000010ea6af38} 'replace' '(CC)Ljava/lang/String;' in 'java/lang/String')}
  0x000000010f7fa920: movabs $0x180,%rdx
  0x000000010f7fa92a: jge    0x000000010f7fa93a
  0x000000010f7fa930: movabs $0x190,%rdx
  0x000000010f7fa93a: mov    (%rbx,%rdx,1),%rdi
  0x000000010f7fa93e: lea    0x1(%rdi),%rdi
  0x000000010f7fa942: mov    %rdi,(%rbx,%rdx,1)
  0x000000010f7fa946: jge    0x000000010f7fac78  ;*if_icmpge
                                                ; - java.lang.String::replace@44 (line 2077)

  0x000000010f7fa94c: mov    %r13,%rbx
  0x000000010f7fa94f: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000000010f7fa959: movslq %ebx,%rbx
  0x000000010f7fa95c: mov    %rbx,%rdi
  0x000000010f7fa95f: cmp    $0xffffff,%rbx
  0x000000010f7fa966: ja     0x000000010f7facc3
  0x000000010f7fa96c: movabs $0x17,%rsi
  0x000000010f7fa976: lea    (%rsi,%rbx,2),%rsi
  0x000000010f7fa97a: and    $0xfffffffffffffff8,%rsi
  0x000000010f7fa97e: mov    0x60(%r15),%rax
  0x000000010f7fa982: lea    (%rax,%rsi,1),%rsi
  0x000000010f7fa986: cmp    0x70(%r15),%rsi
  0x000000010f7fa98a: ja     0x000000010f7facc3
  0x000000010f7fa990: mov    %rsi,0x60(%r15)
  0x000000010f7fa994: sub    %rax,%rsi
  0x000000010f7fa997: movq   $0x1,(%rax)
  0x000000010f7fa99e: mov    %rdx,%rcx
  0x000000010f7fa9a1: shr    $0x3,%rcx
  0x000000010f7fa9a5: mov    %ecx,0x8(%rax)
  0x000000010f7fa9a8: mov    %ebx,0xc(%rax)
  0x000000010f7fa9ab: sub    $0x10,%rsi
  0x000000010f7fa9af: je     0x000000010f7fa9c6
  0x000000010f7fa9b5: xor    %rbx,%rbx
  0x000000010f7fa9b8: shr    $0x3,%rsi
  0x000000010f7fa9bc: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000010f7fa9c1: dec    %rsi
  0x000000010f7fa9c4: jne    0x000000010f7fa9bc
  0x000000010f7fa9c6: mov    %rax,%rbx          ;*newarray
                                                ; - java.lang.String::replace@48 (line 2078)

  0x000000010f7fa9c9: mov    $0x0,%edx
  0x000000010f7fa9ce: jmpq   0x000000010f7faa46  ;*iload
                                                ; - java.lang.String::replace@55 (line 2079)

  0x000000010f7fa9d3: nopl   0x0(%rax,%rax,1)
  0x000000010f7fa9d8: movslq %edx,%rsi
  0x000000010f7fa9db: cmp    0xc(%r11),%edx
  0x000000010f7fa9df: jae    0x000000010f7faccd
  0x000000010f7fa9e5: movzwl 0x10(%r11,%rsi,2),%esi  ;*caload
                                                ; - java.lang.String::replace@70 (line 2080)

  0x000000010f7fa9eb: movslq %edx,%rdi
  0x000000010f7fa9ee: cmp    0xc(%rbx),%edx
  0x000000010f7fa9f1: jae    0x000000010f7facd6
  0x000000010f7fa9f7: mov    %si,0x10(%rbx,%rdi,2)  ;*castore
                                                ; - java.lang.String::replace@71 (line 2080)

  0x000000010f7fa9fc: inc    %edx
  0x000000010f7fa9fe: movabs $0x10ed94110,%rsi  ;   {metadata(method data for {method} {0x000000010ea6af38} 'replace' '(CC)Ljava/lang/String;' in 'java/lang/String')}
  0x000000010f7faa08: mov    0xe0(%rsi),%edi
  0x000000010f7faa0e: add    $0x8,%edi
  0x000000010f7faa11: mov    %edi,0xe0(%rsi)
  0x000000010f7faa17: movabs $0x10ea6af38,%rsi  ;   {metadata({method} {0x000000010ea6af38} 'replace' '(CC)Ljava/lang/String;' in 'java/lang/String')}
  0x000000010f7faa21: and    $0xfff8,%edi
  0x000000010f7faa27: cmp    $0x0,%edi
  0x000000010f7faa2a: je     0x000000010f7facdf  ; OopMap{r11=Oop rbx=Oop off=688}
                                                ;*goto
                                                ; - java.lang.String::replace@75 (line 2079)

  0x000000010f7faa30: test   %eax,-0x8d5f936(%rip)        # 0x0000000106a9b100
                                                ;   {poll}
  0x000000010f7faa36: movabs $0x10ed94110,%rsi  ;   {metadata(method data for {method} {0x000000010ea6af38} 'replace' '(CC)Ljava/lang/String;' in 'java/lang/String')}
  0x000000010f7faa40: incl   0x1c0(%rsi)        ;*goto
                                                ; - java.lang.String::replace@75 (line 2079)

  0x000000010f7faa46: cmp    %r14d,%edx
  0x000000010f7faa49: movabs $0x10ed94110,%rsi  ;   {metadata(method data for {method} {0x000000010ea6af38} 'replace' '(CC)Ljava/lang/String;' in 'java/lang/String')}
  0x000000010f7faa53: movabs $0x1a0,%rdi
  0x000000010f7faa5d: jge    0x000000010f7faa6d
  0x000000010f7faa63: movabs $0x1b0,%rdi
  0x000000010f7faa6d: mov    (%rsi,%rdi,1),%rax
  0x000000010f7faa71: lea    0x1(%rax),%rax
  0x000000010f7faa75: mov    %rax,(%rsi,%rdi,1)
  0x000000010f7faa79: jge    0x000000010f7fab44
  0x000000010f7faa7f: jmpq   0x000000010f7fa9d8  ;*if_icmpge
                                                ; - java.lang.String::replace@59 (line 2079)

  0x000000010f7faa84: nopl   0x0(%rax)
  0x000000010f7faa88: movslq %r14d,%rdx
  0x000000010f7faa8b: cmp    0xc(%r11),%r14d
  0x000000010f7faa8f: jae    0x000000010f7facf6
  0x000000010f7faa95: movzwl 0x10(%r11,%rdx,2),%edx  ;*caload
                                                ; - java.lang.String::replace@88 (line 2083)

  0x000000010f7faa9b: cmp    %r8d,%edx
  0x000000010f7faa9e: movabs $0x10ed94110,%rsi  ;   {metadata(method data for {method} {0x000000010ea6af38} 'replace' '(CC)Ljava/lang/String;' in 'java/lang/String')}
  0x000000010f7faaa8: movabs $0x1f8,%rdi
  0x000000010f7faab2: jne    0x000000010f7faac2
  0x000000010f7faab8: movabs $0x208,%rdi
  0x000000010f7faac2: mov    (%rsi,%rdi,1),%rax
  0x000000010f7faac6: lea    0x1(%rax),%rax
  0x000000010f7faaca: mov    %rax,(%rsi,%rdi,1)
  0x000000010f7faace: jne    0x000000010f7faae7  ;*if_icmpne
                                                ; - java.lang.String::replace@98 (line 2084)

  0x000000010f7faad4: movabs $0x10ed94110,%rdx  ;   {metadata(method data for {method} {0x000000010ea6af38} 'replace' '(CC)Ljava/lang/String;' in 'java/lang/String')}
  0x000000010f7faade: incl   0x218(%rdx)
  0x000000010f7faae4: mov    %r9,%rdx           ;*goto
                                                ; - java.lang.String::replace@102 (line 2084)

  0x000000010f7faae7: movslq %r14d,%rsi
  0x000000010f7faaea: cmp    0xc(%rbx),%r14d
  0x000000010f7faaee: jae    0x000000010f7facff
  0x000000010f7faaf4: mov    %dx,0x10(%rbx,%rsi,2)  ;*castore
                                                ; - java.lang.String::replace@107 (line 2084)

  0x000000010f7faaf9: inc    %r14d
  0x000000010f7faafc: movabs $0x10ed94110,%rdx  ;   {metadata(method data for {method} {0x000000010ea6af38} 'replace' '(CC)Ljava/lang/String;' in 'java/lang/String')}
  0x000000010f7fab06: mov    0xe0(%rdx),%esi
  0x000000010f7fab0c: add    $0x8,%esi
  0x000000010f7fab0f: mov    %esi,0xe0(%rdx)
  0x000000010f7fab15: movabs $0x10ea6af38,%rdx  ;   {metadata({method} {0x000000010ea6af38} 'replace' '(CC)Ljava/lang/String;' in 'java/lang/String')}
  0x000000010f7fab1f: and    $0xfff8,%esi
  0x000000010f7fab25: cmp    $0x0,%esi
  0x000000010f7fab28: je     0x000000010f7fad08  ; OopMap{r11=Oop rbx=Oop off=942}
                                                ;*goto
                                                ; - java.lang.String::replace@111 (line 2086)

  0x000000010f7fab2e: test   %eax,-0x8d5fa34(%rip)        # 0x0000000106a9b100
                                                ;   {poll}
  0x000000010f7fab34: movabs $0x10ed94110,%rdx  ;   {metadata(method data for {method} {0x000000010ea6af38} 'replace' '(CC)Ljava/lang/String;' in 'java/lang/String')}
  0x000000010f7fab3e: incl   0x230(%rdx)        ;*goto
                                                ; - java.lang.String::replace@111 (line 2086)

  0x000000010f7fab44: cmp    %r13d,%r14d
  0x000000010f7fab47: movabs $0x10ed94110,%rdx  ;   {metadata(method data for {method} {0x000000010ea6af38} 'replace' '(CC)Ljava/lang/String;' in 'java/lang/String')}
  0x000000010f7fab51: movabs $0x1d8,%rsi
  0x000000010f7fab5b: jge    0x000000010f7fab6b
  0x000000010f7fab61: movabs $0x1e8,%rsi
  0x000000010f7fab6b: mov    (%rdx,%rsi,1),%rdi
  0x000000010f7fab6f: lea    0x1(%rdi),%rdi
  0x000000010f7fab73: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f7fab77: jl     0x000000010f7faa88  ;*if_icmpge
                                                ; - java.lang.String::replace@81 (line 2082)

  0x000000010f7fab7d: movabs $0x7c00016d0,%rdx  ;   {metadata('java/lang/String')}
  0x000000010f7fab87: mov    0x60(%r15),%rax
  0x000000010f7fab8b: lea    0x18(%rax),%rdi
  0x000000010f7fab8f: cmp    0x70(%r15),%rdi
  0x000000010f7fab93: ja     0x000000010f7fad1f
  0x000000010f7fab99: mov    %rdi,0x60(%r15)
  0x000000010f7fab9d: mov    0xa8(%rdx),%rcx
  0x000000010f7faba4: mov    %rcx,(%rax)
  0x000000010f7faba7: mov    %rdx,%rcx
  0x000000010f7fabaa: shr    $0x3,%rcx
  0x000000010f7fabae: mov    %ecx,0x8(%rax)
  0x000000010f7fabb1: xor    %rcx,%rcx
  0x000000010f7fabb4: mov    %ecx,0xc(%rax)
  0x000000010f7fabb7: xor    %rcx,%rcx
  0x000000010f7fabba: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.String::replace@114 (line 2087)

  0x000000010f7fabbe: mov    %rax,%rsi
  0x000000010f7fabc1: movabs $0x10ed94110,%rdi  ;   {metadata(method data for {method} {0x000000010ea6af38} 'replace' '(CC)Ljava/lang/String;' in 'java/lang/String')}
  0x000000010f7fabcb: addq   $0x1,0x248(%rdi)
  0x000000010f7fabd3: movabs $0x10ed91d08,%rsi  ;   {metadata(method data for {method} {0x000000010ea68bc8} '<init>' '([CZ)V' in 'java/lang/String')}
  0x000000010f7fabdd: mov    0xdc(%rsi),%edi
  0x000000010f7fabe3: add    $0x8,%edi
  0x000000010f7fabe6: mov    %edi,0xdc(%rsi)
  0x000000010f7fabec: movabs $0x10ea68bc8,%rsi  ;   {metadata({method} {0x000000010ea68bc8} '<init>' '([CZ)V' in 'java/lang/String')}
  0x000000010f7fabf6: and    $0x7ffff8,%edi
  0x000000010f7fabfc: cmp    $0x0,%edi
  0x000000010f7fabff: je     0x000000010f7fad2c
  0x000000010f7fac05: mov    %rax,%rsi
  0x000000010f7fac08: movabs $0x10ed91d08,%rdi  ;   {metadata(method data for {method} {0x000000010ea68bc8} '<init>' '([CZ)V' in 'java/lang/String')}
  0x000000010f7fac12: addq   $0x1,0x108(%rdi)
  0x000000010f7fac1a: movabs $0x10ebdca10,%rsi  ;   {metadata(method data for {method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f7fac24: mov    0xdc(%rsi),%edi
  0x000000010f7fac2a: add    $0x8,%edi
  0x000000010f7fac2d: mov    %edi,0xdc(%rsi)
  0x000000010f7fac33: movabs $0x10ea65480,%rsi  ;   {metadata({method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f7fac3d: and    $0x7ffff8,%edi
  0x000000010f7fac43: cmp    $0x0,%edi
  0x000000010f7fac46: je     0x000000010f7fad43
  0x000000010f7fac4c: mov    %rbx,%r10
  0x000000010f7fac4f: shr    $0x3,%r10
  0x000000010f7fac53: mov    %r10d,0xc(%rax)
  0x000000010f7fac57: mov    %rax,%rsi
  0x000000010f7fac5a: shr    $0x9,%rsi
  0x000000010f7fac5e: movabs $0x1065b9000,%rdi
  0x000000010f7fac68: movb   $0x0,(%rsi,%rdi,1)  ;*putfield value
                                                ; - java.lang.String::<init>@6 (line 611)
                                                ; - java.lang.String::replace@121 (line 2087)

  0x000000010f7fac6c: add    $0x50,%rsp
  0x000000010f7fac70: pop    %rbp
  0x000000010f7fac71: test   %eax,-0x8d5fb77(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7fac77: retq                      ;*areturn
                                                ; - java.lang.String::replace@124 (line 2087)

  0x000000010f7fac78: mov    %rsi,%rax
  0x000000010f7fac7b: add    $0x50,%rsp
  0x000000010f7fac7f: pop    %rbp
  0x000000010f7fac80: test   %eax,-0x8d5fb86(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7fac86: retq   
  0x000000010f7fac87: mov    %rbx,0x8(%rsp)
  0x000000010f7fac8c: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7fac94: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=1305}
                                                ;*synchronization entry
                                                ; - java.lang.String::replace@-1 (line 2067)
                                                ;   {runtime_call}
  0x000000010f7fac99: jmpq   0x000000010f7fa7e4
  0x000000010f7fac9e: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop r11=Oop off=1315}
                                                ;*arraylength
                                                ; - java.lang.String::replace@9 (line 2068)
                                                ;   {runtime_call}
  0x000000010f7faca3: mov    %r14,(%rsp)
  0x000000010f7faca7: callq  0x000000010f7cca00  ; OopMap{rsi=Oop r11=Oop off=1324}
                                                ;*caload
                                                ; - java.lang.String::replace@33 (line 2073)
                                                ;   {runtime_call}
  0x000000010f7facac: mov    %rdx,0x8(%rsp)
  0x000000010f7facb1: movq   $0x23,(%rsp)
  0x000000010f7facb9: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop r11=Oop off=1342}
                                                ;*if_icmpne
                                                ; - java.lang.String::replace@35 (line 2073)
                                                ;   {runtime_call}
  0x000000010f7facbe: jmpq   0x000000010f7fa87d
  0x000000010f7facc3: callq  0x000000010f7ce120  ; OopMap{r11=Oop off=1352}
                                                ;*newarray
                                                ; - java.lang.String::replace@48 (line 2078)
                                                ;   {runtime_call}
  0x000000010f7facc8: jmpq   0x000000010f7fa9c6
  0x000000010f7faccd: mov    %rdx,(%rsp)
  0x000000010f7facd1: callq  0x000000010f7cca00  ; OopMap{r11=Oop rbx=Oop off=1366}
                                                ;*caload
                                                ; - java.lang.String::replace@70 (line 2080)
                                                ;   {runtime_call}
  0x000000010f7facd6: mov    %rdx,(%rsp)
  0x000000010f7facda: callq  0x000000010f7cca00  ; OopMap{r11=Oop rbx=Oop off=1375}
                                                ;*castore
                                                ; - java.lang.String::replace@71 (line 2080)
                                                ;   {runtime_call}
  0x000000010f7facdf: mov    %rsi,0x8(%rsp)
  0x000000010f7face4: movq   $0x4b,(%rsp)
  0x000000010f7facec: callq  0x000000010f7d1a20  ; OopMap{r11=Oop rbx=Oop off=1393}
                                                ;*goto
                                                ; - java.lang.String::replace@75 (line 2079)
                                                ;   {runtime_call}
  0x000000010f7facf1: jmpq   0x000000010f7faa30
  0x000000010f7facf6: mov    %r14,(%rsp)
  0x000000010f7facfa: callq  0x000000010f7cca00  ; OopMap{r11=Oop rbx=Oop off=1407}
                                                ;*caload
                                                ; - java.lang.String::replace@88 (line 2083)
                                                ;   {runtime_call}
  0x000000010f7facff: mov    %r14,(%rsp)
  0x000000010f7fad03: callq  0x000000010f7cca00  ; OopMap{r11=Oop rbx=Oop off=1416}
                                                ;*castore
                                                ; - java.lang.String::replace@107 (line 2084)
                                                ;   {runtime_call}
  0x000000010f7fad08: mov    %rdx,0x8(%rsp)
  0x000000010f7fad0d: movq   $0x6f,(%rsp)
  0x000000010f7fad15: callq  0x000000010f7d1a20  ; OopMap{r11=Oop rbx=Oop off=1434}
                                                ;*goto
                                                ; - java.lang.String::replace@111 (line 2086)
                                                ;   {runtime_call}
  0x000000010f7fad1a: jmpq   0x000000010f7fab2e
  0x000000010f7fad1f: mov    %rdx,%rdx
  0x000000010f7fad22: callq  0x000000010f7cd820  ; OopMap{rbx=Oop off=1447}
                                                ;*new  ; - java.lang.String::replace@114 (line 2087)
                                                ;   {runtime_call}
  0x000000010f7fad27: jmpq   0x000000010f7fabbe
  0x000000010f7fad2c: mov    %rsi,0x8(%rsp)
  0x000000010f7fad31: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7fad39: callq  0x000000010f7d1a20  ; OopMap{rbx=Oop rax=Oop off=1470}
                                                ;*synchronization entry
                                                ; - java.lang.String::<init>@-1 (line 609)
                                                ; - java.lang.String::replace@121 (line 2087)
                                                ;   {runtime_call}
  0x000000010f7fad3e: jmpq   0x000000010f7fac05
  0x000000010f7fad43: mov    %rsi,0x8(%rsp)
  0x000000010f7fad48: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7fad50: callq  0x000000010f7d1a20  ; OopMap{rbx=Oop rax=Oop off=1493}
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 37)
                                                ; - java.lang.String::<init>@1 (line 609)
                                                ; - java.lang.String::replace@121 (line 2087)
                                                ;   {runtime_call}
  0x000000010f7fad55: jmpq   0x000000010f7fac4c
  0x000000010f7fad5a: nop
  0x000000010f7fad5b: nop
  0x000000010f7fad5c: mov    0x2a8(%r15),%rax
  0x000000010f7fad63: movabs $0x0,%r10
  0x000000010f7fad6d: mov    %r10,0x2a8(%r15)
  0x000000010f7fad74: movabs $0x0,%r10
  0x000000010f7fad7e: mov    %r10,0x2b0(%r15)
  0x000000010f7fad85: add    $0x50,%rsp
  0x000000010f7fad89: pop    %rbp
  0x000000010f7fad8a: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7fad8f: hlt    
  0x000000010f7fad90: hlt    
  0x000000010f7fad91: hlt    
  0x000000010f7fad92: hlt    
  0x000000010f7fad93: hlt    
  0x000000010f7fad94: hlt    
  0x000000010f7fad95: hlt    
  0x000000010f7fad96: hlt    
  0x000000010f7fad97: hlt    
  0x000000010f7fad98: hlt    
  0x000000010f7fad99: hlt    
  0x000000010f7fad9a: hlt    
  0x000000010f7fad9b: hlt    
  0x000000010f7fad9c: hlt    
  0x000000010f7fad9d: hlt    
  0x000000010f7fad9e: hlt    
  0x000000010f7fad9f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f7fada0: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f7fada5: mov    %rsp,-0x28(%rsp)
  0x000000010f7fadaa: sub    $0x80,%rsp
  0x000000010f7fadb1: mov    %rax,0x78(%rsp)
  0x000000010f7fadb6: mov    %rcx,0x70(%rsp)
  0x000000010f7fadbb: mov    %rdx,0x68(%rsp)
  0x000000010f7fadc0: mov    %rbx,0x60(%rsp)
  0x000000010f7fadc5: mov    %rbp,0x50(%rsp)
  0x000000010f7fadca: mov    %rsi,0x48(%rsp)
  0x000000010f7fadcf: mov    %rdi,0x40(%rsp)
  0x000000010f7fadd4: mov    %r8,0x38(%rsp)
  0x000000010f7fadd9: mov    %r9,0x30(%rsp)
  0x000000010f7fadde: mov    %r10,0x28(%rsp)
  0x000000010f7fade3: mov    %r11,0x20(%rsp)
  0x000000010f7fade8: mov    %r12,0x18(%rsp)
  0x000000010f7faded: mov    %r13,0x10(%rsp)
  0x000000010f7fadf2: mov    %r14,0x8(%rsp)
  0x000000010f7fadf7: mov    %r15,(%rsp)
  0x000000010f7fadfb: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7fae05: movabs $0x10f7fada5,%rsi  ;   {internal_word}
  0x000000010f7fae0f: mov    %rsp,%rdx
  0x000000010f7fae12: and    $0xfffffffffffffff0,%rsp
  0x000000010f7fae16: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7fae1b: hlt    
[Deopt Handler Code]
  0x000000010f7fae1c: movabs $0x10f7fae1c,%r10  ;   {section_word}
  0x000000010f7fae26: push   %r10
  0x000000010f7fae28: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7fae2d: hlt    
  0x000000010f7fae2e: hlt    
  0x000000010f7fae2f: hlt    
Decoding compiled method 0x000000010f7fb310:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ed780e8} 'set' '(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Item'
  # this:     rsi:rsi   = 'jdk/internal/org/objectweb/asm/Item'
  # parm0:    rdx       = int
  # parm1:    rcx:rcx   = 'java/lang/String'
  # parm2:    r8:r8     = 'java/lang/String'
  # parm3:    r9:r9     = 'java/lang/String'
  #           [sp+0x70]  (sp of caller)
  0x000000010f7fb4e0: mov    0x8(%rsi),%r10d
  0x000000010f7fb4e4: shl    $0x3,%r10
  0x000000010f7fb4e8: cmp    %rax,%r10
  0x000000010f7fb4eb: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7fb4f1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7fb4fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7fb500: mov    %eax,-0x14000(%rsp)
  0x000000010f7fb507: push   %rbp
  0x000000010f7fb508: sub    $0x60,%rsp
  0x000000010f7fb50c: mov    %rsi,0x48(%rsp)
  0x000000010f7fb511: mov    %edx,0x40(%rsp)
  0x000000010f7fb515: mov    %r8,0x30(%rsp)
  0x000000010f7fb51a: movabs $0x10ed94398,%rdi  ;   {metadata(method data for {method} {0x000000010ed780e8} 'set' '(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Item')}
  0x000000010f7fb524: mov    0xdc(%rdi),%ebx
  0x000000010f7fb52a: add    $0x8,%ebx
  0x000000010f7fb52d: mov    %ebx,0xdc(%rdi)
  0x000000010f7fb533: movabs $0x10ed780e8,%rdi  ;   {metadata({method} {0x000000010ed780e8} 'set' '(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Item')}
  0x000000010f7fb53d: and    $0x1ff8,%ebx
  0x000000010f7fb543: cmp    $0x0,%ebx
  0x000000010f7fb546: je     0x000000010f7fba22  ;*aload_0
                                                ; - jdk.internal.org.objectweb.asm.Item::set@0 (line 235)

  0x000000010f7fb54c: mov    %edx,0x18(%rsi)    ;*putfield type
                                                ; - jdk.internal.org.objectweb.asm.Item::set@2 (line 235)

  0x000000010f7fb54f: mov    %rcx,%r10
  0x000000010f7fb552: shr    $0x3,%r10
  0x000000010f7fb556: mov    %r10d,0x24(%rsi)
  0x000000010f7fb55a: mov    %rsi,%rdi
  0x000000010f7fb55d: shr    $0x9,%rdi
  0x000000010f7fb561: movabs $0x1065b9000,%rbx
  0x000000010f7fb56b: movb   $0x0,(%rdi,%rbx,1)  ;*putfield strVal1
                                                ; - jdk.internal.org.objectweb.asm.Item::set@7 (line 236)

  0x000000010f7fb56f: mov    %r8,%r10
  0x000000010f7fb572: shr    $0x3,%r10
  0x000000010f7fb576: mov    %r10d,0x28(%rsi)
  0x000000010f7fb57a: mov    %rsi,%rdi
  0x000000010f7fb57d: shr    $0x9,%rdi
  0x000000010f7fb581: movb   $0x0,(%rdi,%rbx,1)  ;*putfield strVal2
                                                ; - jdk.internal.org.objectweb.asm.Item::set@12 (line 237)

  0x000000010f7fb585: mov    %r9,%r10
  0x000000010f7fb588: shr    $0x3,%r10
  0x000000010f7fb58c: mov    %r10d,0x2c(%rsi)
  0x000000010f7fb590: mov    %rsi,%rdi
  0x000000010f7fb593: shr    $0x9,%rdi
  0x000000010f7fb597: movb   $0x0,(%rdi,%rbx,1)  ;*putfield strVal3
                                                ; - jdk.internal.org.objectweb.asm.Item::set@18 (line 238)

  0x000000010f7fb59b: cmp    $0x1,%edx
  0x000000010f7fb59e: je     0x000000010f7fb963
  0x000000010f7fb5a4: cmp    $0x7,%edx
  0x000000010f7fb5a7: je     0x000000010f7fb959
  0x000000010f7fb5ad: cmp    $0x8,%edx
  0x000000010f7fb5b0: je     0x000000010f7fb963
  0x000000010f7fb5b6: cmp    $0xc,%edx
  0x000000010f7fb5b9: je     0x000000010f7fb7f1
  0x000000010f7fb5bf: cmp    $0x10,%edx
  0x000000010f7fb5c2: je     0x000000010f7fb963
  0x000000010f7fb5c8: cmp    $0x1e,%edx
  0x000000010f7fb5cb: je     0x000000010f7fb963  ;*lookupswitch
                                                ; - jdk.internal.org.objectweb.asm.Item::set@22 (line 239)

  0x000000010f7fb5d1: mov    %r9,0x38(%rsp)
  0x000000010f7fb5d6: cmp    (%rcx),%rax        ; implicit exception: dispatches to 0x000000010f7fba39
  0x000000010f7fb5d9: mov    %rcx,%rdi
  0x000000010f7fb5dc: movabs $0x10ed94398,%rbx  ;   {metadata(method data for {method} {0x000000010ed780e8} 'set' '(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Item')}
  0x000000010f7fb5e6: mov    0x8(%rdi),%edi
  0x000000010f7fb5e9: shl    $0x3,%rdi
  0x000000010f7fb5ed: cmp    0x220(%rbx),%rdi
  0x000000010f7fb5f4: jne    0x000000010f7fb603
  0x000000010f7fb5f6: addq   $0x1,0x228(%rbx)
  0x000000010f7fb5fe: jmpq   0x000000010f7fb669
  0x000000010f7fb603: cmp    0x230(%rbx),%rdi
  0x000000010f7fb60a: jne    0x000000010f7fb619
  0x000000010f7fb60c: addq   $0x1,0x238(%rbx)
  0x000000010f7fb614: jmpq   0x000000010f7fb669
  0x000000010f7fb619: cmpq   $0x0,0x220(%rbx)
  0x000000010f7fb624: jne    0x000000010f7fb63d
  0x000000010f7fb626: mov    %rdi,0x220(%rbx)
  0x000000010f7fb62d: movq   $0x1,0x228(%rbx)
  0x000000010f7fb638: jmpq   0x000000010f7fb669
  0x000000010f7fb63d: cmpq   $0x0,0x230(%rbx)
  0x000000010f7fb648: jne    0x000000010f7fb661
  0x000000010f7fb64a: mov    %rdi,0x230(%rbx)
  0x000000010f7fb651: movq   $0x1,0x238(%rbx)
  0x000000010f7fb65c: jmpq   0x000000010f7fb669
  0x000000010f7fb661: addq   $0x1,0x218(%rbx)
  0x000000010f7fb669: mov    %rcx,%rsi          ;*invokevirtual hashCode
                                                ; - jdk.internal.org.objectweb.asm.Item::set@123 (line 258)

  0x000000010f7fb66c: nop
  0x000000010f7fb66d: nop
  0x000000010f7fb66e: nop
  0x000000010f7fb66f: callq  0x000000010f7170a0  ; OopMap{[72]=Oop [48]=Oop [56]=Oop off=404}
                                                ;*invokevirtual hashCode
                                                ; - jdk.internal.org.objectweb.asm.Item::set@123 (line 258)
                                                ;   {optimized virtual_call}
  0x000000010f7fb674: mov    0x30(%rsp),%r8
  0x000000010f7fb679: cmp    (%r8),%rax         ; implicit exception: dispatches to 0x000000010f7fba3e
  0x000000010f7fb67c: mov    %r8,%rsi
  0x000000010f7fb67f: movabs $0x10ed94398,%rdi  ;   {metadata(method data for {method} {0x000000010ed780e8} 'set' '(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Item')}
  0x000000010f7fb689: mov    0x8(%rsi),%esi
  0x000000010f7fb68c: shl    $0x3,%rsi
  0x000000010f7fb690: cmp    0x250(%rdi),%rsi
  0x000000010f7fb697: jne    0x000000010f7fb6a6
  0x000000010f7fb699: addq   $0x1,0x258(%rdi)
  0x000000010f7fb6a1: jmpq   0x000000010f7fb70c
  0x000000010f7fb6a6: cmp    0x260(%rdi),%rsi
  0x000000010f7fb6ad: jne    0x000000010f7fb6bc
  0x000000010f7fb6af: addq   $0x1,0x268(%rdi)
  0x000000010f7fb6b7: jmpq   0x000000010f7fb70c
  0x000000010f7fb6bc: cmpq   $0x0,0x250(%rdi)
  0x000000010f7fb6c7: jne    0x000000010f7fb6e0
  0x000000010f7fb6c9: mov    %rsi,0x250(%rdi)
  0x000000010f7fb6d0: movq   $0x1,0x258(%rdi)
  0x000000010f7fb6db: jmpq   0x000000010f7fb70c
  0x000000010f7fb6e0: cmpq   $0x0,0x260(%rdi)
  0x000000010f7fb6eb: jne    0x000000010f7fb704
  0x000000010f7fb6ed: mov    %rsi,0x260(%rdi)
  0x000000010f7fb6f4: movq   $0x1,0x268(%rdi)
  0x000000010f7fb6ff: jmpq   0x000000010f7fb70c
  0x000000010f7fb704: addq   $0x1,0x248(%rdi)
  0x000000010f7fb70c: mov    %r8,%rsi           ;*invokevirtual hashCode
                                                ; - jdk.internal.org.objectweb.asm.Item::set@127 (line 259)

  0x000000010f7fb70f: mov    %eax,0x44(%rsp)
  0x000000010f7fb713: nop
  0x000000010f7fb714: nop
  0x000000010f7fb715: nop
  0x000000010f7fb716: nop
  0x000000010f7fb717: callq  0x000000010f7170a0  ; OopMap{[72]=Oop [56]=Oop off=572}
                                                ;*invokevirtual hashCode
                                                ; - jdk.internal.org.objectweb.asm.Item::set@127 (line 259)
                                                ;   {optimized virtual_call}
  0x000000010f7fb71c: mov    0x38(%rsp),%r9
  0x000000010f7fb721: cmp    (%r9),%rax         ; implicit exception: dispatches to 0x000000010f7fba43
  0x000000010f7fb724: mov    %r9,%rsi
  0x000000010f7fb727: movabs $0x10ed94398,%rdi  ;   {metadata(method data for {method} {0x000000010ed780e8} 'set' '(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Item')}
  0x000000010f7fb731: mov    0x8(%rsi),%esi
  0x000000010f7fb734: shl    $0x3,%rsi
  0x000000010f7fb738: cmp    0x280(%rdi),%rsi
  0x000000010f7fb73f: jne    0x000000010f7fb74e
  0x000000010f7fb741: addq   $0x1,0x288(%rdi)
  0x000000010f7fb749: jmpq   0x000000010f7fb7b4
  0x000000010f7fb74e: cmp    0x290(%rdi),%rsi
  0x000000010f7fb755: jne    0x000000010f7fb764
  0x000000010f7fb757: addq   $0x1,0x298(%rdi)
  0x000000010f7fb75f: jmpq   0x000000010f7fb7b4
  0x000000010f7fb764: cmpq   $0x0,0x280(%rdi)
  0x000000010f7fb76f: jne    0x000000010f7fb788
  0x000000010f7fb771: mov    %rsi,0x280(%rdi)
  0x000000010f7fb778: movq   $0x1,0x288(%rdi)
  0x000000010f7fb783: jmpq   0x000000010f7fb7b4
  0x000000010f7fb788: cmpq   $0x0,0x290(%rdi)
  0x000000010f7fb793: jne    0x000000010f7fb7ac
  0x000000010f7fb795: mov    %rsi,0x290(%rdi)
  0x000000010f7fb79c: movq   $0x1,0x298(%rdi)
  0x000000010f7fb7a7: jmpq   0x000000010f7fb7b4
  0x000000010f7fb7ac: addq   $0x1,0x278(%rdi)
  0x000000010f7fb7b4: mov    0x44(%rsp),%edi
  0x000000010f7fb7b8: imul   %eax,%edi
  0x000000010f7fb7bb: mov    %r9,%rsi           ;*invokevirtual hashCode
                                                ; - jdk.internal.org.objectweb.asm.Item::set@133 (line 259)

  0x000000010f7fb7be: mov    %edi,0x50(%rsp)
  0x000000010f7fb7c2: nop
  0x000000010f7fb7c3: nop
  0x000000010f7fb7c4: nop
  0x000000010f7fb7c5: nop
  0x000000010f7fb7c6: nop
  0x000000010f7fb7c7: callq  0x000000010f7170a0  ; OopMap{[72]=Oop off=748}
                                                ;*invokevirtual hashCode
                                                ; - jdk.internal.org.objectweb.asm.Item::set@133 (line 259)
                                                ;   {optimized virtual_call}
  0x000000010f7fb7cc: mov    0x50(%rsp),%edi
  0x000000010f7fb7d0: imul   %eax,%edi
  0x000000010f7fb7d3: add    0x40(%rsp),%edi
  0x000000010f7fb7d7: and    $0x7fffffff,%edi
  0x000000010f7fb7dd: mov    0x48(%rsp),%rsi
  0x000000010f7fb7e2: mov    %edi,0x20(%rsi)    ;*putfield hashCode
                                                ; - jdk.internal.org.objectweb.asm.Item::set@139 (line 259)

  0x000000010f7fb7e5: add    $0x60,%rsp
  0x000000010f7fb7e9: pop    %rbp
  0x000000010f7fb7ea: test   %eax,-0x8d606f0(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7fb7f0: retq                      ;*return
                                                ; - jdk.internal.org.objectweb.asm.Item::set@142 (line 261)

  0x000000010f7fb7f1: cmp    (%rcx),%rax        ; implicit exception: dispatches to 0x000000010f7fba48
  0x000000010f7fb7f4: mov    %rcx,%rdi
  0x000000010f7fb7f7: movabs $0x10ed94398,%rbx  ;   {metadata(method data for {method} {0x000000010ed780e8} 'set' '(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Item')}
  0x000000010f7fb801: mov    0x8(%rdi),%edi
  0x000000010f7fb804: shl    $0x3,%rdi
  0x000000010f7fb808: cmp    0x1c0(%rbx),%rdi
  0x000000010f7fb80f: jne    0x000000010f7fb81e
  0x000000010f7fb811: addq   $0x1,0x1c8(%rbx)
  0x000000010f7fb819: jmpq   0x000000010f7fb884
  0x000000010f7fb81e: cmp    0x1d0(%rbx),%rdi
  0x000000010f7fb825: jne    0x000000010f7fb834
  0x000000010f7fb827: addq   $0x1,0x1d8(%rbx)
  0x000000010f7fb82f: jmpq   0x000000010f7fb884
  0x000000010f7fb834: cmpq   $0x0,0x1c0(%rbx)
  0x000000010f7fb83f: jne    0x000000010f7fb858
  0x000000010f7fb841: mov    %rdi,0x1c0(%rbx)
  0x000000010f7fb848: movq   $0x1,0x1c8(%rbx)
  0x000000010f7fb853: jmpq   0x000000010f7fb884
  0x000000010f7fb858: cmpq   $0x0,0x1d0(%rbx)
  0x000000010f7fb863: jne    0x000000010f7fb87c
  0x000000010f7fb865: mov    %rdi,0x1d0(%rbx)
  0x000000010f7fb86c: movq   $0x1,0x1d8(%rbx)
  0x000000010f7fb877: jmpq   0x000000010f7fb884
  0x000000010f7fb87c: addq   $0x1,0x1b8(%rbx)
  0x000000010f7fb884: mov    %rcx,%rsi          ;*invokevirtual hashCode
                                                ; - jdk.internal.org.objectweb.asm.Item::set@104 (line 249)

  0x000000010f7fb887: callq  0x000000010f7170a0  ; OopMap{[72]=Oop [48]=Oop off=940}
                                                ;*invokevirtual hashCode
                                                ; - jdk.internal.org.objectweb.asm.Item::set@104 (line 249)
                                                ;   {optimized virtual_call}
  0x000000010f7fb88c: mov    0x30(%rsp),%r8
  0x000000010f7fb891: cmp    (%r8),%rax         ; implicit exception: dispatches to 0x000000010f7fba4d
  0x000000010f7fb894: mov    %r8,%rsi
  0x000000010f7fb897: movabs $0x10ed94398,%rdi  ;   {metadata(method data for {method} {0x000000010ed780e8} 'set' '(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Item')}
  0x000000010f7fb8a1: mov    0x8(%rsi),%esi
  0x000000010f7fb8a4: shl    $0x3,%rsi
  0x000000010f7fb8a8: cmp    0x1f0(%rdi),%rsi
  0x000000010f7fb8af: jne    0x000000010f7fb8be
  0x000000010f7fb8b1: addq   $0x1,0x1f8(%rdi)
  0x000000010f7fb8b9: jmpq   0x000000010f7fb924
  0x000000010f7fb8be: cmp    0x200(%rdi),%rsi
  0x000000010f7fb8c5: jne    0x000000010f7fb8d4
  0x000000010f7fb8c7: addq   $0x1,0x208(%rdi)
  0x000000010f7fb8cf: jmpq   0x000000010f7fb924
  0x000000010f7fb8d4: cmpq   $0x0,0x1f0(%rdi)
  0x000000010f7fb8df: jne    0x000000010f7fb8f8
  0x000000010f7fb8e1: mov    %rsi,0x1f0(%rdi)
  0x000000010f7fb8e8: movq   $0x1,0x1f8(%rdi)
  0x000000010f7fb8f3: jmpq   0x000000010f7fb924
  0x000000010f7fb8f8: cmpq   $0x0,0x200(%rdi)
  0x000000010f7fb903: jne    0x000000010f7fb91c
  0x000000010f7fb905: mov    %rsi,0x200(%rdi)
  0x000000010f7fb90c: movq   $0x1,0x208(%rdi)
  0x000000010f7fb917: jmpq   0x000000010f7fb924
  0x000000010f7fb91c: addq   $0x1,0x1e8(%rdi)
  0x000000010f7fb924: mov    %r8,%rsi           ;*invokevirtual hashCode
                                                ; - jdk.internal.org.objectweb.asm.Item::set@108 (line 250)

  0x000000010f7fb927: mov    %eax,0x54(%rsp)
  0x000000010f7fb92b: nop
  0x000000010f7fb92c: nop
  0x000000010f7fb92d: nop
  0x000000010f7fb92e: nop
  0x000000010f7fb92f: callq  0x000000010f7170a0  ; OopMap{[72]=Oop off=1108}
                                                ;*invokevirtual hashCode
                                                ; - jdk.internal.org.objectweb.asm.Item::set@108 (line 250)
                                                ;   {optimized virtual_call}
  0x000000010f7fb934: mov    0x54(%rsp),%esi
  0x000000010f7fb938: imul   %eax,%esi
  0x000000010f7fb93b: add    0x40(%rsp),%esi
  0x000000010f7fb93f: and    $0x7fffffff,%esi
  0x000000010f7fb945: mov    0x48(%rsp),%rdi
  0x000000010f7fb94a: mov    %esi,0x20(%rdi)    ;*putfield hashCode
                                                ; - jdk.internal.org.objectweb.asm.Item::set@114 (line 250)

  0x000000010f7fb94d: add    $0x60,%rsp
  0x000000010f7fb951: pop    %rbp
  0x000000010f7fb952: test   %eax,-0x8d60858(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7fb958: retq                      ;*return
                                                ; - jdk.internal.org.objectweb.asm.Item::set@117 (line 251)

  0x000000010f7fb959: mov    %rsi,%rdi
  0x000000010f7fb95c: movl   $0x0,0x1c(%rdi)    ;*putfield intVal
                                                ; - jdk.internal.org.objectweb.asm.Item::set@82 (line 241)

  0x000000010f7fb963: cmp    (%rcx),%rax        ; implicit exception: dispatches to 0x000000010f7fba52
  0x000000010f7fb966: mov    %rcx,%rdi
  0x000000010f7fb969: movabs $0x10ed94398,%rbx  ;   {metadata(method data for {method} {0x000000010ed780e8} 'set' '(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Item')}
  0x000000010f7fb973: mov    0x8(%rdi),%edi
  0x000000010f7fb976: shl    $0x3,%rdi
  0x000000010f7fb97a: cmp    0x190(%rbx),%rdi
  0x000000010f7fb981: jne    0x000000010f7fb990
  0x000000010f7fb983: addq   $0x1,0x198(%rbx)
  0x000000010f7fb98b: jmpq   0x000000010f7fb9f6
  0x000000010f7fb990: cmp    0x1a0(%rbx),%rdi
  0x000000010f7fb997: jne    0x000000010f7fb9a6
  0x000000010f7fb999: addq   $0x1,0x1a8(%rbx)
  0x000000010f7fb9a1: jmpq   0x000000010f7fb9f6
  0x000000010f7fb9a6: cmpq   $0x0,0x190(%rbx)
  0x000000010f7fb9b1: jne    0x000000010f7fb9ca
  0x000000010f7fb9b3: mov    %rdi,0x190(%rbx)
  0x000000010f7fb9ba: movq   $0x1,0x198(%rbx)
  0x000000010f7fb9c5: jmpq   0x000000010f7fb9f6
  0x000000010f7fb9ca: cmpq   $0x0,0x1a0(%rbx)
  0x000000010f7fb9d5: jne    0x000000010f7fb9ee
  0x000000010f7fb9d7: mov    %rdi,0x1a0(%rbx)
  0x000000010f7fb9de: movq   $0x1,0x1a8(%rbx)
  0x000000010f7fb9e9: jmpq   0x000000010f7fb9f6
  0x000000010f7fb9ee: addq   $0x1,0x188(%rbx)
  0x000000010f7fb9f6: mov    %rcx,%rsi          ;*invokevirtual hashCode
                                                ; - jdk.internal.org.objectweb.asm.Item::set@90 (line 246)

  0x000000010f7fb9f9: nop
  0x000000010f7fb9fa: nop
  0x000000010f7fb9fb: nop
  0x000000010f7fb9fc: nop
  0x000000010f7fb9fd: nop
  0x000000010f7fb9fe: nop
  0x000000010f7fb9ff: callq  0x000000010f7170a0  ; OopMap{[72]=Oop off=1316}
                                                ;*invokevirtual hashCode
                                                ; - jdk.internal.org.objectweb.asm.Item::set@90 (line 246)
                                                ;   {optimized virtual_call}
  0x000000010f7fba04: add    0x40(%rsp),%eax
  0x000000010f7fba08: and    $0x7fffffff,%eax
  0x000000010f7fba0e: mov    0x48(%rsp),%rsi
  0x000000010f7fba13: mov    %eax,0x20(%rsi)    ;*putfield hashCode
                                                ; - jdk.internal.org.objectweb.asm.Item::set@95 (line 246)

  0x000000010f7fba16: add    $0x60,%rsp
  0x000000010f7fba1a: pop    %rbp
  0x000000010f7fba1b: test   %eax,-0x8d60921(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7fba21: retq   
  0x000000010f7fba22: mov    %rdi,0x8(%rsp)
  0x000000010f7fba27: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7fba2f: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [72]=Oop rcx=Oop r8=Oop [48]=Oop r9=Oop off=1364}
                                                ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.Item::set@-1 (line 235)
                                                ;   {runtime_call}
  0x000000010f7fba34: jmpq   0x000000010f7fb54c
  0x000000010f7fba39: callq  0x000000010f7cd0c0  ; OopMap{rcx=Oop [56]=Oop [48]=Oop [72]=Oop off=1374}
                                                ;*invokevirtual hashCode
                                                ; - jdk.internal.org.objectweb.asm.Item::set@123 (line 258)
                                                ;   {runtime_call}
  0x000000010f7fba3e: callq  0x000000010f7cd0c0  ; OopMap{[72]=Oop [56]=Oop r8=Oop [48]=Oop off=1379}
                                                ;*invokevirtual hashCode
                                                ; - jdk.internal.org.objectweb.asm.Item::set@127 (line 259)
                                                ;   {runtime_call}
  0x000000010f7fba43: callq  0x000000010f7cd0c0  ; OopMap{[72]=Oop r9=Oop off=1384}
                                                ;*invokevirtual hashCode
                                                ; - jdk.internal.org.objectweb.asm.Item::set@133 (line 259)
                                                ;   {runtime_call}
  0x000000010f7fba48: callq  0x000000010f7cd0c0  ; OopMap{[72]=Oop [48]=Oop rcx=Oop off=1389}
                                                ;*invokevirtual hashCode
                                                ; - jdk.internal.org.objectweb.asm.Item::set@104 (line 249)
                                                ;   {runtime_call}
  0x000000010f7fba4d: callq  0x000000010f7cd0c0  ; OopMap{[72]=Oop r8=Oop [48]=Oop off=1394}
                                                ;*invokevirtual hashCode
                                                ; - jdk.internal.org.objectweb.asm.Item::set@108 (line 250)
                                                ;   {runtime_call}
  0x000000010f7fba52: callq  0x000000010f7cd0c0  ; OopMap{rcx=Oop [72]=Oop off=1399}
                                                ;*invokevirtual hashCode
                                                ; - jdk.internal.org.objectweb.asm.Item::set@90 (line 246)
                                                ;   {runtime_call}
  0x000000010f7fba57: nop
  0x000000010f7fba58: nop
  0x000000010f7fba59: mov    0x2a8(%r15),%rax
  0x000000010f7fba60: movabs $0x0,%r10
  0x000000010f7fba6a: mov    %r10,0x2a8(%r15)
  0x000000010f7fba71: movabs $0x0,%r10
  0x000000010f7fba7b: mov    %r10,0x2b0(%r15)
  0x000000010f7fba82: add    $0x60,%rsp
  0x000000010f7fba86: pop    %rbp
  0x000000010f7fba87: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7fba8c: hlt    
  0x000000010f7fba8d: hlt    
  0x000000010f7fba8e: hlt    
  0x000000010f7fba8f: hlt    
  0x000000010f7fba90: hlt    
  0x000000010f7fba91: hlt    
  0x000000010f7fba92: hlt    
  0x000000010f7fba93: hlt    
  0x000000010f7fba94: hlt    
  0x000000010f7fba95: hlt    
  0x000000010f7fba96: hlt    
  0x000000010f7fba97: hlt    
  0x000000010f7fba98: hlt    
  0x000000010f7fba99: hlt    
  0x000000010f7fba9a: hlt    
  0x000000010f7fba9b: hlt    
  0x000000010f7fba9c: hlt    
  0x000000010f7fba9d: hlt    
  0x000000010f7fba9e: hlt    
  0x000000010f7fba9f: hlt    
[Stub Code]
  0x000000010f7fbaa0: nop                       ;   {no_reloc}
  0x000000010f7fbaa1: nop
  0x000000010f7fbaa2: nop
  0x000000010f7fbaa3: nop
  0x000000010f7fbaa4: nop
  0x000000010f7fbaa5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7fbaaf: jmpq   0x000000010f7fbaaf  ;   {runtime_call}
  0x000000010f7fbab4: nop
  0x000000010f7fbab5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7fbabf: jmpq   0x000000010f7fbabf  ;   {runtime_call}
  0x000000010f7fbac4: nop
  0x000000010f7fbac5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7fbacf: jmpq   0x000000010f7fbacf  ;   {runtime_call}
  0x000000010f7fbad4: nop
  0x000000010f7fbad5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7fbadf: jmpq   0x000000010f7fbadf  ;   {runtime_call}
  0x000000010f7fbae4: nop
  0x000000010f7fbae5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7fbaef: jmpq   0x000000010f7fbaef  ;   {runtime_call}
  0x000000010f7fbaf4: nop
  0x000000010f7fbaf5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7fbaff: jmpq   0x000000010f7fbaff  ;   {runtime_call}
[Exception Handler]
  0x000000010f7fbb04: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f7fbb09: mov    %rsp,-0x28(%rsp)
  0x000000010f7fbb0e: sub    $0x80,%rsp
  0x000000010f7fbb15: mov    %rax,0x78(%rsp)
  0x000000010f7fbb1a: mov    %rcx,0x70(%rsp)
  0x000000010f7fbb1f: mov    %rdx,0x68(%rsp)
  0x000000010f7fbb24: mov    %rbx,0x60(%rsp)
  0x000000010f7fbb29: mov    %rbp,0x50(%rsp)
  0x000000010f7fbb2e: mov    %rsi,0x48(%rsp)
  0x000000010f7fbb33: mov    %rdi,0x40(%rsp)
  0x000000010f7fbb38: mov    %r8,0x38(%rsp)
  0x000000010f7fbb3d: mov    %r9,0x30(%rsp)
  0x000000010f7fbb42: mov    %r10,0x28(%rsp)
  0x000000010f7fbb47: mov    %r11,0x20(%rsp)
  0x000000010f7fbb4c: mov    %r12,0x18(%rsp)
  0x000000010f7fbb51: mov    %r13,0x10(%rsp)
  0x000000010f7fbb56: mov    %r14,0x8(%rsp)
  0x000000010f7fbb5b: mov    %r15,(%rsp)
  0x000000010f7fbb5f: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7fbb69: movabs $0x10f7fbb09,%rsi  ;   {internal_word}
  0x000000010f7fbb73: mov    %rsp,%rdx
  0x000000010f7fbb76: and    $0xfffffffffffffff0,%rsp
  0x000000010f7fbb7a: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7fbb7f: hlt    
[Deopt Handler Code]
  0x000000010f7fbb80: movabs $0x10f7fbb80,%r10  ;   {section_word}
  0x000000010f7fbb8a: push   %r10
  0x000000010f7fbb8c: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7fbb91: hlt    
  0x000000010f7fbb92: hlt    
  0x000000010f7fbb93: hlt    
  0x000000010f7fbb94: hlt    
  0x000000010f7fbb95: hlt    
  0x000000010f7fbb96: hlt    
  0x000000010f7fbb97: hlt    
Decoding compiled method 0x000000010f7fbf50:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ea90688} 'poll' '()Ljava/lang/ref/Reference;' in 'java/lang/ref/ReferenceQueue'
  #           [sp+0x50]  (sp of caller)
  0x000000010f7fc0c0: mov    0x8(%rsi),%r10d
  0x000000010f7fc0c4: shl    $0x3,%r10
  0x000000010f7fc0c8: cmp    %rax,%r10
  0x000000010f7fc0cb: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7fc0d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7fc0dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7fc0e0: mov    %eax,-0x14000(%rsp)
  0x000000010f7fc0e7: push   %rbp
  0x000000010f7fc0e8: sub    $0x40,%rsp
  0x000000010f7fc0ec: movabs $0x10ed93f80,%rax  ;   {metadata(method data for {method} {0x000000010ea90688} 'poll' '()Ljava/lang/ref/Reference;' in 'java/lang/ref/ReferenceQueue')}
  0x000000010f7fc0f6: mov    0xdc(%rax),%edi
  0x000000010f7fc0fc: add    $0x8,%edi
  0x000000010f7fc0ff: mov    %edi,0xdc(%rax)
  0x000000010f7fc105: movabs $0x10ea90688,%rax  ;   {metadata({method} {0x000000010ea90688} 'poll' '()Ljava/lang/ref/Reference;' in 'java/lang/ref/ReferenceQueue')}
  0x000000010f7fc10f: and    $0x1ff8,%edi
  0x000000010f7fc115: cmp    $0x0,%edi
  0x000000010f7fc118: je     0x000000010f7fc2fc  ;*aload_0
                                                ; - java.lang.ref.ReferenceQueue::poll@0 (line 106)

  0x000000010f7fc11e: mov    0x18(%rsi),%eax
  0x000000010f7fc121: shl    $0x3,%rax          ;*getfield head
                                                ; - java.lang.ref.ReferenceQueue::poll@1 (line 106)

  0x000000010f7fc125: cmp    $0x0,%rax
  0x000000010f7fc129: movabs $0x10ed93f80,%rax  ;   {metadata(method data for {method} {0x000000010ea90688} 'poll' '()Ljava/lang/ref/Reference;' in 'java/lang/ref/ReferenceQueue')}
  0x000000010f7fc133: movabs $0x108,%rdi
  0x000000010f7fc13d: jne    0x000000010f7fc14d
  0x000000010f7fc143: movabs $0x118,%rdi
  0x000000010f7fc14d: mov    (%rax,%rdi,1),%rbx
  0x000000010f7fc151: lea    0x1(%rbx),%rbx
  0x000000010f7fc155: mov    %rbx,(%rax,%rdi,1)
  0x000000010f7fc159: je     0x000000010f7fc28f  ;*ifnonnull
                                                ; - java.lang.ref.ReferenceQueue::poll@4 (line 106)

  0x000000010f7fc15f: mov    0xc(%rsi),%edi
  0x000000010f7fc162: shl    $0x3,%rdi          ;*getfield lock
                                                ; - java.lang.ref.ReferenceQueue::poll@10 (line 108)

  0x000000010f7fc166: lea    0x28(%rsp),%rbx
  0x000000010f7fc16b: mov    %rdi,0x8(%rbx)
  0x000000010f7fc16f: mov    (%rdi),%rax        ; implicit exception: dispatches to 0x000000010f7fc313
  0x000000010f7fc172: mov    %rax,%rdx
  0x000000010f7fc175: and    $0x7,%rdx
  0x000000010f7fc179: cmp    $0x5,%rdx
  0x000000010f7fc17d: jne    0x000000010f7fc204
  0x000000010f7fc183: mov    0x8(%rdi),%edx
  0x000000010f7fc186: shl    $0x3,%rdx
  0x000000010f7fc18a: mov    0xa8(%rdx),%rdx
  0x000000010f7fc191: or     %r15,%rdx
  0x000000010f7fc194: xor    %rax,%rdx
  0x000000010f7fc197: and    $0xffffffffffffff87,%rdx
  0x000000010f7fc19b: je     0x000000010f7fc22c
  0x000000010f7fc1a1: test   $0x7,%rdx
  0x000000010f7fc1a8: jne    0x000000010f7fc1f1
  0x000000010f7fc1aa: test   $0x300,%rdx
  0x000000010f7fc1b1: jne    0x000000010f7fc1d0
  0x000000010f7fc1b3: and    $0x37f,%rax
  0x000000010f7fc1ba: mov    %rax,%rdx
  0x000000010f7fc1bd: or     %r15,%rdx
  0x000000010f7fc1c0: lock cmpxchg %rdx,(%rdi)
  0x000000010f7fc1c5: jne    0x000000010f7fc318
  0x000000010f7fc1cb: jmpq   0x000000010f7fc22c
  0x000000010f7fc1d0: mov    0x8(%rdi),%edx
  0x000000010f7fc1d3: shl    $0x3,%rdx
  0x000000010f7fc1d7: mov    0xa8(%rdx),%rdx
  0x000000010f7fc1de: or     %r15,%rdx
  0x000000010f7fc1e1: lock cmpxchg %rdx,(%rdi)
  0x000000010f7fc1e6: jne    0x000000010f7fc318
  0x000000010f7fc1ec: jmpq   0x000000010f7fc22c
  0x000000010f7fc1f1: mov    0x8(%rdi),%edx
  0x000000010f7fc1f4: shl    $0x3,%rdx
  0x000000010f7fc1f8: mov    0xa8(%rdx),%rdx
  0x000000010f7fc1ff: lock cmpxchg %rdx,(%rdi)
  0x000000010f7fc204: mov    (%rdi),%rax
  0x000000010f7fc207: or     $0x1,%rax
  0x000000010f7fc20b: mov    %rax,(%rbx)
  0x000000010f7fc20e: lock cmpxchg %rbx,(%rdi)
  0x000000010f7fc213: je     0x000000010f7fc22c
  0x000000010f7fc219: sub    %rsp,%rax
  0x000000010f7fc21c: and    $0xfffffffffffff007,%rax
  0x000000010f7fc223: mov    %rax,(%rbx)
  0x000000010f7fc226: jne    0x000000010f7fc318  ;*monitorenter
                                                ; - java.lang.ref.ReferenceQueue::poll@15 (line 108)

  0x000000010f7fc22c: mov    %rdi,0x20(%rsp)
  0x000000010f7fc231: mov    %rsi,%rbx
  0x000000010f7fc234: movabs $0x10ed93f80,%rax  ;   {metadata(method data for {method} {0x000000010ea90688} 'poll' '()Ljava/lang/ref/Reference;' in 'java/lang/ref/ReferenceQueue')}
  0x000000010f7fc23e: addq   $0x1,0x128(%rax)
  0x000000010f7fc246: nop
  0x000000010f7fc247: callq  0x000000010f7170a0  ; OopMap{[32]=Oop [48]=Oop off=396}
                                                ;*invokespecial reallyPoll
                                                ; - java.lang.ref.ReferenceQueue::poll@17 (line 109)
                                                ;   {optimized virtual_call}
  0x000000010f7fc24c: mov    %rax,%rsi          ;*invokespecial reallyPoll
                                                ; - java.lang.ref.ReferenceQueue::poll@17 (line 109)

  0x000000010f7fc24f: lea    0x28(%rsp),%rax
  0x000000010f7fc254: mov    0x8(%rax),%rbx
  0x000000010f7fc258: mov    (%rbx),%rdi
  0x000000010f7fc25b: and    $0x7,%rdi
  0x000000010f7fc25f: cmp    $0x5,%rdi
  0x000000010f7fc263: je     0x000000010f7fc280
  0x000000010f7fc269: mov    (%rax),%rdi
  0x000000010f7fc26c: test   %rdi,%rdi
  0x000000010f7fc26f: je     0x000000010f7fc280
  0x000000010f7fc275: lock cmpxchg %rdi,(%rbx)
  0x000000010f7fc27a: jne    0x000000010f7fc32b  ;*monitorexit
                                                ; - java.lang.ref.ReferenceQueue::poll@21 (line 109)

  0x000000010f7fc280: mov    %rsi,%rax
  0x000000010f7fc283: add    $0x40,%rsp
  0x000000010f7fc287: pop    %rbp
  0x000000010f7fc288: test   %eax,-0x8d6118e(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7fc28e: retq                      ;*areturn
                                                ; - java.lang.ref.ReferenceQueue::poll@22 (line 109)

  0x000000010f7fc28f: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000010f7fc299: add    $0x40,%rsp
  0x000000010f7fc29d: pop    %rbp
  0x000000010f7fc29e: test   %eax,-0x8d611a4(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7fc2a4: retq                      ;*areturn
                                                ; - java.lang.ref.ReferenceQueue::poll@8 (line 107)

  0x000000010f7fc2a5: mov    0x2a8(%r15),%rax
  0x000000010f7fc2ac: xor    %r10,%r10
  0x000000010f7fc2af: mov    %r10,0x2a8(%r15)
  0x000000010f7fc2b6: xor    %r10,%r10
  0x000000010f7fc2b9: mov    %r10,0x2b0(%r15)
  0x000000010f7fc2c0: mov    %rax,%rsi
  0x000000010f7fc2c3: lea    0x28(%rsp),%rax
  0x000000010f7fc2c8: mov    0x8(%rax),%rbx
  0x000000010f7fc2cc: mov    (%rbx),%rdi
  0x000000010f7fc2cf: and    $0x7,%rdi
  0x000000010f7fc2d3: cmp    $0x5,%rdi
  0x000000010f7fc2d7: je     0x000000010f7fc2f4
  0x000000010f7fc2dd: mov    (%rax),%rdi
  0x000000010f7fc2e0: test   %rdi,%rdi
  0x000000010f7fc2e3: je     0x000000010f7fc2f4
  0x000000010f7fc2e9: lock cmpxchg %rdi,(%rbx)
  0x000000010f7fc2ee: jne    0x000000010f7fc33e  ;*monitorexit
                                                ; - java.lang.ref.ReferenceQueue::poll@25 (line 110)

  0x000000010f7fc2f4: mov    %rsi,%rax
  0x000000010f7fc2f7: jmpq   0x000000010f7fc379
  0x000000010f7fc2fc: mov    %rax,0x8(%rsp)
  0x000000010f7fc301: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7fc309: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=590}
                                                ;*synchronization entry
                                                ; - java.lang.ref.ReferenceQueue::poll@-1 (line 106)
                                                ;   {runtime_call}
  0x000000010f7fc30e: jmpq   0x000000010f7fc11e
  0x000000010f7fc313: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop rdi=Oop off=600}
                                                ;*monitorenter
                                                ; - java.lang.ref.ReferenceQueue::poll@15 (line 108)
                                                ;   {runtime_call}
  0x000000010f7fc318: mov    %rdi,0x8(%rsp)
  0x000000010f7fc31d: mov    %rbx,(%rsp)
  0x000000010f7fc321: callq  0x000000010f7cfc60  ; OopMap{rsi=Oop rdi=Oop [48]=Oop off=614}
                                                ;*monitorenter
                                                ; - java.lang.ref.ReferenceQueue::poll@15 (line 108)
                                                ;   {runtime_call}
  0x000000010f7fc326: jmpq   0x000000010f7fc22c
  0x000000010f7fc32b: lea    0x28(%rsp),%rax
  0x000000010f7fc330: mov    %rax,(%rsp)
  0x000000010f7fc334: callq  0x000000010f7d00a0  ;   {runtime_call}
  0x000000010f7fc339: jmpq   0x000000010f7fc280
  0x000000010f7fc33e: lea    0x28(%rsp),%rax
  0x000000010f7fc343: mov    %rax,(%rsp)
  0x000000010f7fc347: callq  0x000000010f7d00a0  ;   {runtime_call}
  0x000000010f7fc34c: jmp    0x000000010f7fc2f4
  0x000000010f7fc34e: nop
  0x000000010f7fc34f: nop
  0x000000010f7fc350: mov    0x2a8(%r15),%rax
  0x000000010f7fc357: movabs $0x0,%r10
  0x000000010f7fc361: mov    %r10,0x2a8(%r15)
  0x000000010f7fc368: movabs $0x0,%r10
  0x000000010f7fc372: mov    %r10,0x2b0(%r15)
  0x000000010f7fc379: add    $0x40,%rsp
  0x000000010f7fc37d: pop    %rbp
  0x000000010f7fc37e: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7fc383: hlt    
  0x000000010f7fc384: hlt    
  0x000000010f7fc385: hlt    
  0x000000010f7fc386: hlt    
  0x000000010f7fc387: hlt    
  0x000000010f7fc388: hlt    
  0x000000010f7fc389: hlt    
  0x000000010f7fc38a: hlt    
  0x000000010f7fc38b: hlt    
  0x000000010f7fc38c: hlt    
  0x000000010f7fc38d: hlt    
  0x000000010f7fc38e: hlt    
  0x000000010f7fc38f: hlt    
  0x000000010f7fc390: hlt    
  0x000000010f7fc391: hlt    
  0x000000010f7fc392: hlt    
  0x000000010f7fc393: hlt    
  0x000000010f7fc394: hlt    
  0x000000010f7fc395: hlt    
  0x000000010f7fc396: hlt    
  0x000000010f7fc397: hlt    
  0x000000010f7fc398: hlt    
  0x000000010f7fc399: hlt    
  0x000000010f7fc39a: hlt    
  0x000000010f7fc39b: hlt    
  0x000000010f7fc39c: hlt    
  0x000000010f7fc39d: hlt    
  0x000000010f7fc39e: hlt    
  0x000000010f7fc39f: hlt    
[Stub Code]
  0x000000010f7fc3a0: nop                       ;   {no_reloc}
  0x000000010f7fc3a1: nop
  0x000000010f7fc3a2: nop
  0x000000010f7fc3a3: nop
  0x000000010f7fc3a4: nop
  0x000000010f7fc3a5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7fc3af: jmpq   0x000000010f7fc3af  ;   {runtime_call}
[Exception Handler]
  0x000000010f7fc3b4: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f7fc3b9: mov    %rsp,-0x28(%rsp)
  0x000000010f7fc3be: sub    $0x80,%rsp
  0x000000010f7fc3c5: mov    %rax,0x78(%rsp)
  0x000000010f7fc3ca: mov    %rcx,0x70(%rsp)
  0x000000010f7fc3cf: mov    %rdx,0x68(%rsp)
  0x000000010f7fc3d4: mov    %rbx,0x60(%rsp)
  0x000000010f7fc3d9: mov    %rbp,0x50(%rsp)
  0x000000010f7fc3de: mov    %rsi,0x48(%rsp)
  0x000000010f7fc3e3: mov    %rdi,0x40(%rsp)
  0x000000010f7fc3e8: mov    %r8,0x38(%rsp)
  0x000000010f7fc3ed: mov    %r9,0x30(%rsp)
  0x000000010f7fc3f2: mov    %r10,0x28(%rsp)
  0x000000010f7fc3f7: mov    %r11,0x20(%rsp)
  0x000000010f7fc3fc: mov    %r12,0x18(%rsp)
  0x000000010f7fc401: mov    %r13,0x10(%rsp)
  0x000000010f7fc406: mov    %r14,0x8(%rsp)
  0x000000010f7fc40b: mov    %r15,(%rsp)
  0x000000010f7fc40f: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7fc419: movabs $0x10f7fc3b9,%rsi  ;   {internal_word}
  0x000000010f7fc423: mov    %rsp,%rdx
  0x000000010f7fc426: and    $0xfffffffffffffff0,%rsp
  0x000000010f7fc42a: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7fc42f: hlt    
[Deopt Handler Code]
  0x000000010f7fc430: movabs $0x10f7fc430,%r10  ;   {section_word}
  0x000000010f7fc43a: push   %r10
  0x000000010f7fc43c: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7fc441: hlt    
  0x000000010f7fc442: hlt    
  0x000000010f7fc443: hlt    
  0x000000010f7fc444: hlt    
  0x000000010f7fc445: hlt    
  0x000000010f7fc446: hlt    
  0x000000010f7fc447: hlt    
Decoding compiled method 0x000000010f7fc610:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010eb2d900} '<init>' '()V' in 'java/util/AbstractCollection'
  #           [sp+0x40]  (sp of caller)
  0x000000010f7fc780: mov    0x8(%rsi),%r10d
  0x000000010f7fc784: shl    $0x3,%r10
  0x000000010f7fc788: cmp    %rax,%r10
  0x000000010f7fc78b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7fc791: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7fc79c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7fc7a0: mov    %eax,-0x14000(%rsp)
  0x000000010f7fc7a7: push   %rbp
  0x000000010f7fc7a8: sub    $0x30,%rsp
  0x000000010f7fc7ac: movabs $0x10ed948e0,%rdi  ;   {metadata(method data for {method} {0x000000010eb2d900} '<init>' '()V' in 'java/util/AbstractCollection')}
  0x000000010f7fc7b6: mov    0xdc(%rdi),%ebx
  0x000000010f7fc7bc: add    $0x8,%ebx
  0x000000010f7fc7bf: mov    %ebx,0xdc(%rdi)
  0x000000010f7fc7c5: movabs $0x10eb2d900,%rdi  ;   {metadata({method} {0x000000010eb2d900} '<init>' '()V' in 'java/util/AbstractCollection')}
  0x000000010f7fc7cf: and    $0x1ff8,%ebx
  0x000000010f7fc7d5: cmp    $0x0,%ebx
  0x000000010f7fc7d8: je     0x000000010f7fc831  ;*aload_0
                                                ; - java.util.AbstractCollection::<init>@0 (line 66)

  0x000000010f7fc7de: mov    %rsi,%rdi
  0x000000010f7fc7e1: movabs $0x10ed948e0,%rbx  ;   {metadata(method data for {method} {0x000000010eb2d900} '<init>' '()V' in 'java/util/AbstractCollection')}
  0x000000010f7fc7eb: addq   $0x1,0x108(%rbx)
  0x000000010f7fc7f3: movabs $0x10ebdca10,%rdi  ;   {metadata(method data for {method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f7fc7fd: mov    0xdc(%rdi),%ebx
  0x000000010f7fc803: add    $0x8,%ebx
  0x000000010f7fc806: mov    %ebx,0xdc(%rdi)
  0x000000010f7fc80c: movabs $0x10ea65480,%rdi  ;   {metadata({method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f7fc816: and    $0x7ffff8,%ebx
  0x000000010f7fc81c: cmp    $0x0,%ebx
  0x000000010f7fc81f: je     0x000000010f7fc845
  0x000000010f7fc825: add    $0x30,%rsp
  0x000000010f7fc829: pop    %rbp
  0x000000010f7fc82a: test   %eax,-0x8d61730(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7fc830: retq   
  0x000000010f7fc831: mov    %rdi,0x8(%rsp)
  0x000000010f7fc836: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7fc83e: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=195}
                                                ;*synchronization entry
                                                ; - java.util.AbstractCollection::<init>@-1 (line 66)
                                                ;   {runtime_call}
  0x000000010f7fc843: jmp    0x000000010f7fc7de
  0x000000010f7fc845: mov    %rdi,0x8(%rsp)
  0x000000010f7fc84a: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7fc852: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=215}
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 37)
                                                ; - java.util.AbstractCollection::<init>@1 (line 66)
                                                ;   {runtime_call}
  0x000000010f7fc857: jmp    0x000000010f7fc825
  0x000000010f7fc859: nop
  0x000000010f7fc85a: nop
  0x000000010f7fc85b: mov    0x2a8(%r15),%rax
  0x000000010f7fc862: movabs $0x0,%r10
  0x000000010f7fc86c: mov    %r10,0x2a8(%r15)
  0x000000010f7fc873: movabs $0x0,%r10
  0x000000010f7fc87d: mov    %r10,0x2b0(%r15)
  0x000000010f7fc884: add    $0x30,%rsp
  0x000000010f7fc888: pop    %rbp
  0x000000010f7fc889: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7fc88e: hlt    
  0x000000010f7fc88f: hlt    
  0x000000010f7fc890: hlt    
  0x000000010f7fc891: hlt    
  0x000000010f7fc892: hlt    
  0x000000010f7fc893: hlt    
  0x000000010f7fc894: hlt    
  0x000000010f7fc895: hlt    
  0x000000010f7fc896: hlt    
  0x000000010f7fc897: hlt    
  0x000000010f7fc898: hlt    
  0x000000010f7fc899: hlt    
  0x000000010f7fc89a: hlt    
  0x000000010f7fc89b: hlt    
  0x000000010f7fc89c: hlt    
  0x000000010f7fc89d: hlt    
  0x000000010f7fc89e: hlt    
  0x000000010f7fc89f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f7fc8a0: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f7fc8a5: mov    %rsp,-0x28(%rsp)
  0x000000010f7fc8aa: sub    $0x80,%rsp
  0x000000010f7fc8b1: mov    %rax,0x78(%rsp)
  0x000000010f7fc8b6: mov    %rcx,0x70(%rsp)
  0x000000010f7fc8bb: mov    %rdx,0x68(%rsp)
  0x000000010f7fc8c0: mov    %rbx,0x60(%rsp)
  0x000000010f7fc8c5: mov    %rbp,0x50(%rsp)
  0x000000010f7fc8ca: mov    %rsi,0x48(%rsp)
  0x000000010f7fc8cf: mov    %rdi,0x40(%rsp)
  0x000000010f7fc8d4: mov    %r8,0x38(%rsp)
  0x000000010f7fc8d9: mov    %r9,0x30(%rsp)
  0x000000010f7fc8de: mov    %r10,0x28(%rsp)
  0x000000010f7fc8e3: mov    %r11,0x20(%rsp)
  0x000000010f7fc8e8: mov    %r12,0x18(%rsp)
  0x000000010f7fc8ed: mov    %r13,0x10(%rsp)
  0x000000010f7fc8f2: mov    %r14,0x8(%rsp)
  0x000000010f7fc8f7: mov    %r15,(%rsp)
  0x000000010f7fc8fb: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7fc905: movabs $0x10f7fc8a5,%rsi  ;   {internal_word}
  0x000000010f7fc90f: mov    %rsp,%rdx
  0x000000010f7fc912: and    $0xfffffffffffffff0,%rsp
  0x000000010f7fc916: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7fc91b: hlt    
[Deopt Handler Code]
  0x000000010f7fc91c: movabs $0x10f7fc91c,%r10  ;   {section_word}
  0x000000010f7fc926: push   %r10
  0x000000010f7fc928: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7fc92d: hlt    
  0x000000010f7fc92e: hlt    
  0x000000010f7fc92f: hlt    
Decoding compiled method 0x000000010f7fc9d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ed74258} 'get' '(Ljdk/internal/org/objectweb/asm/Item;)Ljdk/internal/org/objectweb/asm/Item;' in 'jdk/internal/org/objectweb/asm/ClassWriter'
  # this:     rsi:rsi   = 'jdk/internal/org/objectweb/asm/ClassWriter'
  # parm0:    rdx:rdx   = 'jdk/internal/org/objectweb/asm/Item'
  #           [sp+0x50]  (sp of caller)
  0x000000010f7fcb60: mov    0x8(%rsi),%r10d
  0x000000010f7fcb64: shl    $0x3,%r10
  0x000000010f7fcb68: cmp    %rax,%r10
  0x000000010f7fcb6b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7fcb71: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7fcb7c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7fcb80: mov    %eax,-0x14000(%rsp)
  0x000000010f7fcb87: push   %rbp
  0x000000010f7fcb88: sub    $0x40,%rsp
  0x000000010f7fcb8c: mov    %rdx,0x28(%rsp)
  0x000000010f7fcb91: movabs $0x10ed94a10,%rax  ;   {metadata(method data for {method} {0x000000010ed74258} 'get' '(Ljdk/internal/org/objectweb/asm/Item;)Ljdk/internal/org/objectweb/asm/Item;' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000000010f7fcb9b: mov    0xdc(%rax),%edi
  0x000000010f7fcba1: add    $0x8,%edi
  0x000000010f7fcba4: mov    %edi,0xdc(%rax)
  0x000000010f7fcbaa: movabs $0x10ed74258,%rax  ;   {metadata({method} {0x000000010ed74258} 'get' '(Ljdk/internal/org/objectweb/asm/Item;)Ljdk/internal/org/objectweb/asm/Item;' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000000010f7fcbb4: and    $0x1ff8,%edi
  0x000000010f7fcbba: cmp    $0x0,%edi
  0x000000010f7fcbbd: je     0x000000010f7fcdcd  ;*aload_0
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@0 (line 1741)

  0x000000010f7fcbc3: mov    0x58(%rsi),%esi
  0x000000010f7fcbc6: shl    $0x3,%rsi          ;*getfield items
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@1 (line 1741)

  0x000000010f7fcbca: mov    0x20(%rdx),%eax    ;*getfield hashCode
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@5 (line 1741)
                                                ; implicit exception: dispatches to 0x000000010f7fcde4
  0x000000010f7fcbcd: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@12 (line 1741)
                                                ; implicit exception: dispatches to 0x000000010f7fcde9
  0x000000010f7fcbd0: mov    %rdx,%rbx
  0x000000010f7fcbd3: cmp    $0x80000000,%eax
  0x000000010f7fcbd9: jne    0x000000010f7fcbea
  0x000000010f7fcbdf: xor    %edx,%edx
  0x000000010f7fcbe1: cmp    $0xffffffff,%edi
  0x000000010f7fcbe4: je     0x000000010f7fcbed
  0x000000010f7fcbea: cltd   
  0x000000010f7fcbeb: idiv   %edi               ;*irem
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@13 (line 1741)
                                                ; implicit exception: dispatches to 0x000000010f7fcdee
  0x000000010f7fcbed: movslq %edx,%rdi
  0x000000010f7fcbf0: cmp    0xc(%rsi),%edx
  0x000000010f7fcbf3: jae    0x000000010f7fcdf3
  0x000000010f7fcbf9: mov    0x10(%rsi,%rdi,4),%edx
  0x000000010f7fcbfd: shl    $0x3,%rdx          ;*aaload
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@14 (line 1741)

  0x000000010f7fcc01: nopl   0x0(%rax)
  0x000000010f7fcc08: cmp    $0x0,%rdx
  0x000000010f7fcc0c: movabs $0x10ed94a10,%rsi  ;   {metadata(method data for {method} {0x000000010ed74258} 'get' '(Ljdk/internal/org/objectweb/asm/Item;)Ljdk/internal/org/objectweb/asm/Item;' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000000010f7fcc16: movabs $0x108,%rdi
  0x000000010f7fcc20: je     0x000000010f7fcc30
  0x000000010f7fcc26: movabs $0x118,%rdi
  0x000000010f7fcc30: mov    (%rsi,%rdi,1),%rax
  0x000000010f7fcc34: lea    0x1(%rax),%rax
  0x000000010f7fcc38: mov    %rax,(%rsi,%rdi,1)
  0x000000010f7fcc3c: je     0x000000010f7fcdbe  ;*ifnull
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@17 (line 1742)

  0x000000010f7fcc42: mov    0x18(%rdx),%esi    ;*getfield type
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@21 (line 1742)
                                                ; implicit exception: dispatches to 0x000000010f7fcdfc
  0x000000010f7fcc45: mov    0x18(%rbx),%edi    ;*getfield type
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@25 (line 1742)

  0x000000010f7fcc48: cmp    %edi,%esi
  0x000000010f7fcc4a: movabs $0x10ed94a10,%rsi  ;   {metadata(method data for {method} {0x000000010ed74258} 'get' '(Ljdk/internal/org/objectweb/asm/Item;)Ljdk/internal/org/objectweb/asm/Item;' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000000010f7fcc54: movabs $0x128,%rdi
  0x000000010f7fcc5e: jne    0x000000010f7fcc6e
  0x000000010f7fcc64: movabs $0x138,%rdi
  0x000000010f7fcc6e: mov    (%rsi,%rdi,1),%rax
  0x000000010f7fcc72: lea    0x1(%rax),%rax
  0x000000010f7fcc76: mov    %rax,(%rsi,%rdi,1)
  0x000000010f7fcc7a: jne    0x000000010f7fcd62  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@28 (line 1742)

  0x000000010f7fcc80: mov    %rbx,%rsi
  0x000000010f7fcc83: movabs $0x10ed94a10,%rdi  ;   {metadata(method data for {method} {0x000000010ed74258} 'get' '(Ljdk/internal/org/objectweb/asm/Item;)Ljdk/internal/org/objectweb/asm/Item;' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000000010f7fcc8d: mov    0x8(%rsi),%esi
  0x000000010f7fcc90: shl    $0x3,%rsi
  0x000000010f7fcc94: cmp    0x150(%rdi),%rsi
  0x000000010f7fcc9b: jne    0x000000010f7fccaa
  0x000000010f7fcc9d: addq   $0x1,0x158(%rdi)
  0x000000010f7fcca5: jmpq   0x000000010f7fcd10
  0x000000010f7fccaa: cmp    0x160(%rdi),%rsi
  0x000000010f7fccb1: jne    0x000000010f7fccc0
  0x000000010f7fccb3: addq   $0x1,0x168(%rdi)
  0x000000010f7fccbb: jmpq   0x000000010f7fcd10
  0x000000010f7fccc0: cmpq   $0x0,0x150(%rdi)
  0x000000010f7fcccb: jne    0x000000010f7fcce4
  0x000000010f7fcccd: mov    %rsi,0x150(%rdi)
  0x000000010f7fccd4: movq   $0x1,0x158(%rdi)
  0x000000010f7fccdf: jmpq   0x000000010f7fcd10
  0x000000010f7fcce4: cmpq   $0x0,0x160(%rdi)
  0x000000010f7fccef: jne    0x000000010f7fcd08
  0x000000010f7fccf1: mov    %rsi,0x160(%rdi)
  0x000000010f7fccf8: movq   $0x1,0x168(%rdi)
  0x000000010f7fcd03: jmpq   0x000000010f7fcd10
  0x000000010f7fcd08: addq   $0x1,0x148(%rdi)
  0x000000010f7fcd10: mov    %rdx,%rdi
  0x000000010f7fcd13: mov    %rdi,%rdx
  0x000000010f7fcd16: mov    %rbx,%rsi          ;*invokevirtual isEqualTo
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@33 (line 1742)

  0x000000010f7fcd19: mov    %rdi,0x20(%rsp)
  0x000000010f7fcd1e: nop
  0x000000010f7fcd1f: callq  0x000000010f7170a0  ; OopMap{[32]=Oop [40]=Oop off=452}
                                                ;*invokevirtual isEqualTo
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@33 (line 1742)
                                                ;   {optimized virtual_call}
  0x000000010f7fcd24: cmp    $0x0,%eax
  0x000000010f7fcd27: movabs $0x10ed94a10,%rax  ;   {metadata(method data for {method} {0x000000010ed74258} 'get' '(Ljdk/internal/org/objectweb/asm/Item;)Ljdk/internal/org/objectweb/asm/Item;' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000000010f7fcd31: movabs $0x178,%rsi
  0x000000010f7fcd3b: jne    0x000000010f7fcd4b
  0x000000010f7fcd41: movabs $0x188,%rsi
  0x000000010f7fcd4b: mov    (%rax,%rsi,1),%rdi
  0x000000010f7fcd4f: lea    0x1(%rdi),%rdi
  0x000000010f7fcd53: mov    %rdi,(%rax,%rsi,1)
  0x000000010f7fcd57: mov    0x20(%rsp),%rdx
  0x000000010f7fcd5c: jne    0x000000010f7fcdbe  ;*ifne
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@36 (line 1742)

  0x000000010f7fcd62: mov    0x30(%rdx),%eax
  0x000000010f7fcd65: shl    $0x3,%rax          ;*getfield next
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@40 (line 1743)

  0x000000010f7fcd69: movabs $0x10ed94a10,%rsi  ;   {metadata(method data for {method} {0x000000010ed74258} 'get' '(Ljdk/internal/org/objectweb/asm/Item;)Ljdk/internal/org/objectweb/asm/Item;' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000000010f7fcd73: mov    0xe0(%rsi),%edi
  0x000000010f7fcd79: add    $0x8,%edi
  0x000000010f7fcd7c: mov    %edi,0xe0(%rsi)
  0x000000010f7fcd82: movabs $0x10ed74258,%rsi  ;   {metadata({method} {0x000000010ed74258} 'get' '(Ljdk/internal/org/objectweb/asm/Item;)Ljdk/internal/org/objectweb/asm/Item;' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000000010f7fcd8c: and    $0xfff8,%edi
  0x000000010f7fcd92: cmp    $0x0,%edi
  0x000000010f7fcd95: je     0x000000010f7fce01  ; OopMap{[40]=Oop rax=Oop off=571}
                                                ;*goto
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@44 (line 1743)

  0x000000010f7fcd9b: test   %eax,-0x8d61ca1(%rip)        # 0x0000000106a9b100
                                                ;   {poll}
  0x000000010f7fcda1: movabs $0x10ed94a10,%rsi  ;   {metadata(method data for {method} {0x000000010ed74258} 'get' '(Ljdk/internal/org/objectweb/asm/Item;)Ljdk/internal/org/objectweb/asm/Item;' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000000010f7fcdab: incl   0x198(%rsi)
  0x000000010f7fcdb1: mov    %rax,%rdx
  0x000000010f7fcdb4: mov    0x28(%rsp),%rbx
  0x000000010f7fcdb9: jmpq   0x000000010f7fcc08  ;*goto
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@44 (line 1743)

  0x000000010f7fcdbe: mov    %rdx,%rax
  0x000000010f7fcdc1: add    $0x40,%rsp
  0x000000010f7fcdc5: pop    %rbp
  0x000000010f7fcdc6: test   %eax,-0x8d61ccc(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7fcdcc: retq   
  0x000000010f7fcdcd: mov    %rax,0x8(%rsp)
  0x000000010f7fcdd2: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7fcdda: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop rdx=Oop [40]=Oop off=639}
                                                ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@-1 (line 1741)
                                                ;   {runtime_call}
  0x000000010f7fcddf: jmpq   0x000000010f7fcbc3
  0x000000010f7fcde4: callq  0x000000010f7cd0c0  ; OopMap{rdx=Oop [40]=Oop rsi=Oop off=649}
                                                ;*getfield hashCode
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@5 (line 1741)
                                                ;   {runtime_call}
  0x000000010f7fcde9: callq  0x000000010f7cd0c0  ; OopMap{rdx=Oop [40]=Oop rsi=Oop off=654}
                                                ;*arraylength
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@12 (line 1741)
                                                ;   {runtime_call}
  0x000000010f7fcdee: callq  0x000000010f7cce80  ; OopMap{rsi=Oop rbx=Oop [40]=Oop off=659}
                                                ;*irem
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@13 (line 1741)
                                                ;   {runtime_call}
  0x000000010f7fcdf3: mov    %rdx,(%rsp)
  0x000000010f7fcdf7: callq  0x000000010f7cca00  ; OopMap{rsi=Oop rbx=Oop [40]=Oop off=668}
                                                ;*aaload
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@14 (line 1741)
                                                ;   {runtime_call}
  0x000000010f7fcdfc: callq  0x000000010f7cd0c0  ; OopMap{rbx=Oop [40]=Oop rdx=Oop off=673}
                                                ;*getfield type
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@21 (line 1742)
                                                ;   {runtime_call}
  0x000000010f7fce01: mov    %rsi,0x8(%rsp)
  0x000000010f7fce06: movq   $0x2c,(%rsp)
  0x000000010f7fce0e: callq  0x000000010f7d1a20  ; OopMap{[40]=Oop rax=Oop off=691}
                                                ;*goto
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@44 (line 1743)
                                                ;   {runtime_call}
  0x000000010f7fce13: jmp    0x000000010f7fcd9b
  0x000000010f7fce15: nop
  0x000000010f7fce16: nop
  0x000000010f7fce17: mov    0x2a8(%r15),%rax
  0x000000010f7fce1e: movabs $0x0,%r10
  0x000000010f7fce28: mov    %r10,0x2a8(%r15)
  0x000000010f7fce2f: movabs $0x0,%r10
  0x000000010f7fce39: mov    %r10,0x2b0(%r15)
  0x000000010f7fce40: add    $0x40,%rsp
  0x000000010f7fce44: pop    %rbp
  0x000000010f7fce45: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7fce4a: hlt    
  0x000000010f7fce4b: hlt    
  0x000000010f7fce4c: hlt    
  0x000000010f7fce4d: hlt    
  0x000000010f7fce4e: hlt    
  0x000000010f7fce4f: hlt    
  0x000000010f7fce50: hlt    
  0x000000010f7fce51: hlt    
  0x000000010f7fce52: hlt    
  0x000000010f7fce53: hlt    
  0x000000010f7fce54: hlt    
  0x000000010f7fce55: hlt    
  0x000000010f7fce56: hlt    
  0x000000010f7fce57: hlt    
  0x000000010f7fce58: hlt    
  0x000000010f7fce59: hlt    
  0x000000010f7fce5a: hlt    
  0x000000010f7fce5b: hlt    
  0x000000010f7fce5c: hlt    
  0x000000010f7fce5d: hlt    
  0x000000010f7fce5e: hlt    
  0x000000010f7fce5f: hlt    
[Stub Code]
  0x000000010f7fce60: nop                       ;   {no_reloc}
  0x000000010f7fce61: nop
  0x000000010f7fce62: nop
  0x000000010f7fce63: nop
  0x000000010f7fce64: nop
  0x000000010f7fce65: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7fce6f: jmpq   0x000000010f7fce6f  ;   {runtime_call}
[Exception Handler]
  0x000000010f7fce74: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f7fce79: mov    %rsp,-0x28(%rsp)
  0x000000010f7fce7e: sub    $0x80,%rsp
  0x000000010f7fce85: mov    %rax,0x78(%rsp)
  0x000000010f7fce8a: mov    %rcx,0x70(%rsp)
  0x000000010f7fce8f: mov    %rdx,0x68(%rsp)
  0x000000010f7fce94: mov    %rbx,0x60(%rsp)
  0x000000010f7fce99: mov    %rbp,0x50(%rsp)
  0x000000010f7fce9e: mov    %rsi,0x48(%rsp)
  0x000000010f7fcea3: mov    %rdi,0x40(%rsp)
  0x000000010f7fcea8: mov    %r8,0x38(%rsp)
  0x000000010f7fcead: mov    %r9,0x30(%rsp)
  0x000000010f7fceb2: mov    %r10,0x28(%rsp)
  0x000000010f7fceb7: mov    %r11,0x20(%rsp)
  0x000000010f7fcebc: mov    %r12,0x18(%rsp)
  0x000000010f7fcec1: mov    %r13,0x10(%rsp)
  0x000000010f7fcec6: mov    %r14,0x8(%rsp)
  0x000000010f7fcecb: mov    %r15,(%rsp)
  0x000000010f7fcecf: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7fced9: movabs $0x10f7fce79,%rsi  ;   {internal_word}
  0x000000010f7fcee3: mov    %rsp,%rdx
  0x000000010f7fcee6: and    $0xfffffffffffffff0,%rsp
  0x000000010f7fceea: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7fceef: hlt    
[Deopt Handler Code]
  0x000000010f7fcef0: movabs $0x10f7fcef0,%r10  ;   {section_word}
  0x000000010f7fcefa: push   %r10
  0x000000010f7fcefc: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7fcf01: hlt    
  0x000000010f7fcf02: hlt    
  0x000000010f7fcf03: hlt    
  0x000000010f7fcf04: hlt    
  0x000000010f7fcf05: hlt    
  0x000000010f7fcf06: hlt    
  0x000000010f7fcf07: hlt    
Decoding compiled method 0x000000010f7fd190:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ed76e00} 'putShort' '(I)Ljdk/internal/org/objectweb/asm/ByteVector;' in 'jdk/internal/org/objectweb/asm/ByteVector'
  # this:     rsi:rsi   = 'jdk/internal/org/objectweb/asm/ByteVector'
  # parm0:    rdx       = int
  #           [sp+0x50]  (sp of caller)
  0x000000010f7fd300: mov    0x8(%rsi),%r10d
  0x000000010f7fd304: shl    $0x3,%r10
  0x000000010f7fd308: cmp    %rax,%r10
  0x000000010f7fd30b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7fd311: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7fd31c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7fd320: mov    %eax,-0x14000(%rsp)
  0x000000010f7fd327: push   %rbp
  0x000000010f7fd328: sub    $0x40,%rsp
  0x000000010f7fd32c: movabs $0x10ed95358,%rdi  ;   {metadata(method data for {method} {0x000000010ed76e00} 'putShort' '(I)Ljdk/internal/org/objectweb/asm/ByteVector;' in 'jdk/internal/org/objectweb/asm/ByteVector')}
  0x000000010f7fd336: mov    0xdc(%rdi),%ebx
  0x000000010f7fd33c: add    $0x8,%ebx
  0x000000010f7fd33f: mov    %ebx,0xdc(%rdi)
  0x000000010f7fd345: movabs $0x10ed76e00,%rdi  ;   {metadata({method} {0x000000010ed76e00} 'putShort' '(I)Ljdk/internal/org/objectweb/asm/ByteVector;' in 'jdk/internal/org/objectweb/asm/ByteVector')}
  0x000000010f7fd34f: and    $0x1ff8,%ebx
  0x000000010f7fd355: cmp    $0x0,%ebx
  0x000000010f7fd358: je     0x000000010f7fd42f  ;*aload_0
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@0 (line 147)

  0x000000010f7fd35e: mov    0xc(%rsi),%edi     ;*getfield length
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@1 (line 147)

  0x000000010f7fd361: mov    0x10(%rsi),%ebx
  0x000000010f7fd364: shl    $0x3,%rbx          ;*getfield data
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@9 (line 148)

  0x000000010f7fd368: mov    0xc(%rbx),%ebx     ;*arraylength
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@12 (line 148)
                                                ; implicit exception: dispatches to 0x000000010f7fd446
  0x000000010f7fd36b: mov    %rdi,%rax
  0x000000010f7fd36e: add    $0x2,%eax
  0x000000010f7fd371: cmp    %ebx,%eax
  0x000000010f7fd373: movabs $0x10ed95358,%rbx  ;   {metadata(method data for {method} {0x000000010ed76e00} 'putShort' '(I)Ljdk/internal/org/objectweb/asm/ByteVector;' in 'jdk/internal/org/objectweb/asm/ByteVector')}
  0x000000010f7fd37d: movabs $0x108,%rax
  0x000000010f7fd387: jle    0x000000010f7fd397
  0x000000010f7fd38d: movabs $0x118,%rax
  0x000000010f7fd397: mov    (%rbx,%rax,1),%rcx
  0x000000010f7fd39b: lea    0x1(%rcx),%rcx
  0x000000010f7fd39f: mov    %rcx,(%rbx,%rax,1)
  0x000000010f7fd3a3: jle    0x000000010f7fd3e9  ;*if_icmple
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@13 (line 148)

  0x000000010f7fd3a9: mov    %edi,0x34(%rsp)
  0x000000010f7fd3ad: mov    %edx,0x30(%rsp)
  0x000000010f7fd3b1: mov    %rsi,%rbx
  0x000000010f7fd3b4: movabs $0x10ed95358,%rax  ;   {metadata(method data for {method} {0x000000010ed76e00} 'putShort' '(I)Ljdk/internal/org/objectweb/asm/ByteVector;' in 'jdk/internal/org/objectweb/asm/ByteVector')}
  0x000000010f7fd3be: addq   $0x1,0x128(%rax)
  0x000000010f7fd3c6: mov    $0x2,%edx
  0x000000010f7fd3cb: mov    %rsi,%rax
  0x000000010f7fd3ce: mov    %rax,%rsi          ;*invokespecial enlarge
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@18 (line 149)

  0x000000010f7fd3d1: mov    %rax,0x28(%rsp)
  0x000000010f7fd3d6: nop
  0x000000010f7fd3d7: callq  0x000000010f7170a0  ; OopMap{[40]=Oop off=220}
                                                ;*invokespecial enlarge
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@18 (line 149)
                                                ;   {optimized virtual_call}
  0x000000010f7fd3dc: mov    0x34(%rsp),%edi
  0x000000010f7fd3e0: mov    0x30(%rsp),%edx
  0x000000010f7fd3e4: mov    0x28(%rsp),%rsi
  0x000000010f7fd3e9: mov    0x10(%rsi),%eax
  0x000000010f7fd3ec: shl    $0x3,%rax          ;*getfield data
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@22 (line 151)

  0x000000010f7fd3f0: mov    %rdx,%rbx
  0x000000010f7fd3f3: shr    $0x8,%ebx
  0x000000010f7fd3f6: movslq %edi,%rcx
  0x000000010f7fd3f9: cmp    0xc(%rax),%edi     ; implicit exception: dispatches to 0x000000010f7fd44b
  0x000000010f7fd3fc: jae    0x000000010f7fd455
  0x000000010f7fd402: mov    %bl,0x10(%rax,%rcx,1)  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@36 (line 152)

  0x000000010f7fd406: inc    %edi
  0x000000010f7fd408: mov    %rdi,%rbx
  0x000000010f7fd40b: inc    %ebx
  0x000000010f7fd40d: movslq %edi,%rcx
  0x000000010f7fd410: cmp    0xc(%rax),%edi
  0x000000010f7fd413: jae    0x000000010f7fd45e
  0x000000010f7fd419: mov    %dl,0x10(%rax,%rcx,1)  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@44 (line 153)

  0x000000010f7fd41d: mov    %ebx,0xc(%rsi)     ;*putfield length
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@47 (line 154)

  0x000000010f7fd420: mov    %rsi,%rax
  0x000000010f7fd423: add    $0x40,%rsp
  0x000000010f7fd427: pop    %rbp
  0x000000010f7fd428: test   %eax,-0x8d6232e(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7fd42e: retq   
  0x000000010f7fd42f: mov    %rdi,0x8(%rsp)
  0x000000010f7fd434: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7fd43c: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=321}
                                                ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@-1 (line 147)
                                                ;   {runtime_call}
  0x000000010f7fd441: jmpq   0x000000010f7fd35e
  0x000000010f7fd446: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop off=331}
                                                ;*arraylength
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@12 (line 148)
                                                ;   {runtime_call}
  0x000000010f7fd44b: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop rax=Oop off=336}
                                                ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@36 (line 152)
                                                ;   {runtime_call}
  0x000000010f7fd450: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop rax=Oop off=341}
                                                ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@36 (line 152)
                                                ;   {runtime_call}
  0x000000010f7fd455: mov    %rdi,(%rsp)
  0x000000010f7fd459: callq  0x000000010f7cca00  ; OopMap{rsi=Oop rax=Oop off=350}
                                                ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@36 (line 152)
                                                ;   {runtime_call}
  0x000000010f7fd45e: mov    %rdi,(%rsp)
  0x000000010f7fd462: callq  0x000000010f7cca00  ; OopMap{rsi=Oop rax=Oop off=359}
                                                ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@44 (line 153)
                                                ;   {runtime_call}
  0x000000010f7fd467: nop
  0x000000010f7fd468: nop
  0x000000010f7fd469: mov    0x2a8(%r15),%rax
  0x000000010f7fd470: movabs $0x0,%r10
  0x000000010f7fd47a: mov    %r10,0x2a8(%r15)
  0x000000010f7fd481: movabs $0x0,%r10
  0x000000010f7fd48b: mov    %r10,0x2b0(%r15)
  0x000000010f7fd492: add    $0x40,%rsp
  0x000000010f7fd496: pop    %rbp
  0x000000010f7fd497: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7fd49c: hlt    
  0x000000010f7fd49d: hlt    
  0x000000010f7fd49e: hlt    
  0x000000010f7fd49f: hlt    
[Stub Code]
  0x000000010f7fd4a0: nop                       ;   {no_reloc}
  0x000000010f7fd4a1: nop
  0x000000010f7fd4a2: nop
  0x000000010f7fd4a3: nop
  0x000000010f7fd4a4: nop
  0x000000010f7fd4a5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f7fd4af: jmpq   0x000000010f7fd4af  ;   {runtime_call}
[Exception Handler]
  0x000000010f7fd4b4: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f7fd4b9: mov    %rsp,-0x28(%rsp)
  0x000000010f7fd4be: sub    $0x80,%rsp
  0x000000010f7fd4c5: mov    %rax,0x78(%rsp)
  0x000000010f7fd4ca: mov    %rcx,0x70(%rsp)
  0x000000010f7fd4cf: mov    %rdx,0x68(%rsp)
  0x000000010f7fd4d4: mov    %rbx,0x60(%rsp)
  0x000000010f7fd4d9: mov    %rbp,0x50(%rsp)
  0x000000010f7fd4de: mov    %rsi,0x48(%rsp)
  0x000000010f7fd4e3: mov    %rdi,0x40(%rsp)
  0x000000010f7fd4e8: mov    %r8,0x38(%rsp)
  0x000000010f7fd4ed: mov    %r9,0x30(%rsp)
  0x000000010f7fd4f2: mov    %r10,0x28(%rsp)
  0x000000010f7fd4f7: mov    %r11,0x20(%rsp)
  0x000000010f7fd4fc: mov    %r12,0x18(%rsp)
  0x000000010f7fd501: mov    %r13,0x10(%rsp)
  0x000000010f7fd506: mov    %r14,0x8(%rsp)
  0x000000010f7fd50b: mov    %r15,(%rsp)
  0x000000010f7fd50f: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7fd519: movabs $0x10f7fd4b9,%rsi  ;   {internal_word}
  0x000000010f7fd523: mov    %rsp,%rdx
  0x000000010f7fd526: and    $0xfffffffffffffff0,%rsp
  0x000000010f7fd52a: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7fd52f: hlt    
[Deopt Handler Code]
  0x000000010f7fd530: movabs $0x10f7fd530,%r10  ;   {section_word}
  0x000000010f7fd53a: push   %r10
  0x000000010f7fd53c: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7fd541: hlt    
  0x000000010f7fd542: hlt    
  0x000000010f7fd543: hlt    
  0x000000010f7fd544: hlt    
  0x000000010f7fd545: hlt    
  0x000000010f7fd546: hlt    
  0x000000010f7fd547: hlt    
Decoding compiled method 0x000000010f7fd750:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ed33540} 'hashCode' '()I' in 'java/lang/invoke/MethodType$ConcurrentWeakInternSet$WeakEntry'
  #           [sp+0x40]  (sp of caller)
  0x000000010f7fd8a0: mov    0x8(%rsi),%r10d
  0x000000010f7fd8a4: shl    $0x3,%r10
  0x000000010f7fd8a8: cmp    %rax,%r10
  0x000000010f7fd8ab: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7fd8b1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7fd8bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7fd8c0: mov    %eax,-0x14000(%rsp)
  0x000000010f7fd8c7: push   %rbp
  0x000000010f7fd8c8: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry::hashCode@0 (line 1295)

  0x000000010f7fd8cc: mov    0x1c(%rsi),%eax    ;*getfield hashcode
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry::hashCode@1 (line 1295)

  0x000000010f7fd8cf: add    $0x30,%rsp
  0x000000010f7fd8d3: pop    %rbp
  0x000000010f7fd8d4: test   %eax,-0x8d627da(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7fd8da: retq   
  0x000000010f7fd8db: nop
  0x000000010f7fd8dc: nop
  0x000000010f7fd8dd: mov    0x2a8(%r15),%rax
  0x000000010f7fd8e4: movabs $0x0,%r10
  0x000000010f7fd8ee: mov    %r10,0x2a8(%r15)
  0x000000010f7fd8f5: movabs $0x0,%r10
  0x000000010f7fd8ff: mov    %r10,0x2b0(%r15)
  0x000000010f7fd906: add    $0x30,%rsp
  0x000000010f7fd90a: pop    %rbp
  0x000000010f7fd90b: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7fd910: hlt    
  0x000000010f7fd911: hlt    
  0x000000010f7fd912: hlt    
  0x000000010f7fd913: hlt    
  0x000000010f7fd914: hlt    
  0x000000010f7fd915: hlt    
  0x000000010f7fd916: hlt    
  0x000000010f7fd917: hlt    
  0x000000010f7fd918: hlt    
  0x000000010f7fd919: hlt    
  0x000000010f7fd91a: hlt    
  0x000000010f7fd91b: hlt    
  0x000000010f7fd91c: hlt    
  0x000000010f7fd91d: hlt    
  0x000000010f7fd91e: hlt    
  0x000000010f7fd91f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f7fd920: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f7fd925: mov    %rsp,-0x28(%rsp)
  0x000000010f7fd92a: sub    $0x80,%rsp
  0x000000010f7fd931: mov    %rax,0x78(%rsp)
  0x000000010f7fd936: mov    %rcx,0x70(%rsp)
  0x000000010f7fd93b: mov    %rdx,0x68(%rsp)
  0x000000010f7fd940: mov    %rbx,0x60(%rsp)
  0x000000010f7fd945: mov    %rbp,0x50(%rsp)
  0x000000010f7fd94a: mov    %rsi,0x48(%rsp)
  0x000000010f7fd94f: mov    %rdi,0x40(%rsp)
  0x000000010f7fd954: mov    %r8,0x38(%rsp)
  0x000000010f7fd959: mov    %r9,0x30(%rsp)
  0x000000010f7fd95e: mov    %r10,0x28(%rsp)
  0x000000010f7fd963: mov    %r11,0x20(%rsp)
  0x000000010f7fd968: mov    %r12,0x18(%rsp)
  0x000000010f7fd96d: mov    %r13,0x10(%rsp)
  0x000000010f7fd972: mov    %r14,0x8(%rsp)
  0x000000010f7fd977: mov    %r15,(%rsp)
  0x000000010f7fd97b: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7fd985: movabs $0x10f7fd925,%rsi  ;   {internal_word}
  0x000000010f7fd98f: mov    %rsp,%rdx
  0x000000010f7fd992: and    $0xfffffffffffffff0,%rsp
  0x000000010f7fd996: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7fd99b: hlt    
[Deopt Handler Code]
  0x000000010f7fd99c: movabs $0x10f7fd99c,%r10  ;   {section_word}
  0x000000010f7fd9a6: push   %r10
  0x000000010f7fd9a8: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7fd9ad: hlt    
  0x000000010f7fd9ae: hlt    
  0x000000010f7fd9af: hlt    
Decoding compiled method 0x000000010f7fda50:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ed77d00} '<init>' '(ILjdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Item'
  # this:     rsi:rsi   = 'jdk/internal/org/objectweb/asm/Item'
  # parm0:    rdx       = int
  # parm1:    rcx:rcx   = 'jdk/internal/org/objectweb/asm/Item'
  #           [sp+0x40]  (sp of caller)
  0x000000010f7fdbc0: mov    0x8(%rsi),%r10d
  0x000000010f7fdbc4: shl    $0x3,%r10
  0x000000010f7fdbc8: cmp    %rax,%r10
  0x000000010f7fdbcb: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7fdbd1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7fdbdc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7fdbe0: mov    %eax,-0x14000(%rsp)
  0x000000010f7fdbe7: push   %rbp
  0x000000010f7fdbe8: sub    $0x30,%rsp
  0x000000010f7fdbec: movabs $0x10ed96dc8,%rdi  ;   {metadata(method data for {method} {0x000000010ed77d00} '<init>' '(ILjdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Item')}
  0x000000010f7fdbf6: mov    0xdc(%rdi),%ebx
  0x000000010f7fdbfc: add    $0x8,%ebx
  0x000000010f7fdbff: mov    %ebx,0xdc(%rdi)
  0x000000010f7fdc05: movabs $0x10ed77d00,%rdi  ;   {metadata({method} {0x000000010ed77d00} '<init>' '(ILjdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Item')}
  0x000000010f7fdc0f: and    $0x1ff8,%ebx
  0x000000010f7fdc15: cmp    $0x0,%ebx
  0x000000010f7fdc18: je     0x000000010f7fdcef  ;*aload_0
                                                ; - jdk.internal.org.objectweb.asm.Item::<init>@0 (line 162)

  0x000000010f7fdc1e: mov    %rsi,%rdi
  0x000000010f7fdc21: movabs $0x10ed96dc8,%rbx  ;   {metadata(method data for {method} {0x000000010ed77d00} '<init>' '(ILjdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Item')}
  0x000000010f7fdc2b: addq   $0x1,0x108(%rbx)
  0x000000010f7fdc33: movabs $0x10ebdca10,%rdi  ;   {metadata(method data for {method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f7fdc3d: mov    0xdc(%rdi),%ebx
  0x000000010f7fdc43: add    $0x8,%ebx
  0x000000010f7fdc46: mov    %ebx,0xdc(%rdi)
  0x000000010f7fdc4c: movabs $0x10ea65480,%rdi  ;   {metadata({method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f7fdc56: and    $0x7ffff8,%ebx
  0x000000010f7fdc5c: cmp    $0x0,%ebx
  0x000000010f7fdc5f: je     0x000000010f7fdd06
  0x000000010f7fdc65: mov    %edx,0xc(%rsi)     ;*putfield index
                                                ; - jdk.internal.org.objectweb.asm.Item::<init>@6 (line 163)

  0x000000010f7fdc68: mov    0x18(%rcx),%edi    ;*getfield type
                                                ; - jdk.internal.org.objectweb.asm.Item::<init>@11 (line 164)
                                                ; implicit exception: dispatches to 0x000000010f7fdd1d
  0x000000010f7fdc6b: mov    %edi,0x18(%rsi)    ;*putfield type
                                                ; - jdk.internal.org.objectweb.asm.Item::<init>@14 (line 164)

  0x000000010f7fdc6e: mov    0x1c(%rcx),%edi    ;*getfield intVal
                                                ; - jdk.internal.org.objectweb.asm.Item::<init>@19 (line 165)

  0x000000010f7fdc71: mov    %edi,0x1c(%rsi)    ;*putfield intVal
                                                ; - jdk.internal.org.objectweb.asm.Item::<init>@22 (line 165)

  0x000000010f7fdc74: mov    0x10(%rcx),%rdi    ;*getfield longVal
                                                ; - jdk.internal.org.objectweb.asm.Item::<init>@27 (line 166)

  0x000000010f7fdc78: mov    %rdi,0x10(%rsi)    ;*putfield longVal
                                                ; - jdk.internal.org.objectweb.asm.Item::<init>@30 (line 166)

  0x000000010f7fdc7c: mov    0x24(%rcx),%edi
  0x000000010f7fdc7f: shl    $0x3,%rdi          ;*getfield strVal1
                                                ; - jdk.internal.org.objectweb.asm.Item::<init>@35 (line 167)

  0x000000010f7fdc83: mov    %rdi,%r10
  0x000000010f7fdc86: shr    $0x3,%r10
  0x000000010f7fdc8a: mov    %r10d,0x24(%rsi)
  0x000000010f7fdc8e: mov    %rsi,%rdi
  0x000000010f7fdc91: shr    $0x9,%rdi
  0x000000010f7fdc95: movabs $0x1065b9000,%rbx
  0x000000010f7fdc9f: movb   $0x0,(%rdi,%rbx,1)  ;*putfield strVal1
                                                ; - jdk.internal.org.objectweb.asm.Item::<init>@38 (line 167)

  0x000000010f7fdca3: mov    0x28(%rcx),%edi
  0x000000010f7fdca6: shl    $0x3,%rdi          ;*getfield strVal2
                                                ; - jdk.internal.org.objectweb.asm.Item::<init>@43 (line 168)

  0x000000010f7fdcaa: mov    %rdi,%r10
  0x000000010f7fdcad: shr    $0x3,%r10
  0x000000010f7fdcb1: mov    %r10d,0x28(%rsi)
  0x000000010f7fdcb5: mov    %rsi,%rdi
  0x000000010f7fdcb8: shr    $0x9,%rdi
  0x000000010f7fdcbc: movb   $0x0,(%rdi,%rbx,1)  ;*putfield strVal2
                                                ; - jdk.internal.org.objectweb.asm.Item::<init>@46 (line 168)

  0x000000010f7fdcc0: mov    0x2c(%rcx),%edi
  0x000000010f7fdcc3: shl    $0x3,%rdi          ;*getfield strVal3
                                                ; - jdk.internal.org.objectweb.asm.Item::<init>@51 (line 169)

  0x000000010f7fdcc7: mov    %rdi,%r10
  0x000000010f7fdcca: shr    $0x3,%r10
  0x000000010f7fdcce: mov    %r10d,0x2c(%rsi)
  0x000000010f7fdcd2: mov    %rsi,%rdi
  0x000000010f7fdcd5: shr    $0x9,%rdi
  0x000000010f7fdcd9: movb   $0x0,(%rdi,%rbx,1)  ;*putfield strVal3
                                                ; - jdk.internal.org.objectweb.asm.Item::<init>@54 (line 169)

  0x000000010f7fdcdd: mov    0x20(%rcx),%edi    ;*getfield hashCode
                                                ; - jdk.internal.org.objectweb.asm.Item::<init>@59 (line 170)

  0x000000010f7fdce0: mov    %edi,0x20(%rsi)    ;*putfield hashCode
                                                ; - jdk.internal.org.objectweb.asm.Item::<init>@62 (line 170)

  0x000000010f7fdce3: add    $0x30,%rsp
  0x000000010f7fdce7: pop    %rbp
  0x000000010f7fdce8: test   %eax,-0x8d62bee(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7fdcee: retq   
  0x000000010f7fdcef: mov    %rdi,0x8(%rsp)
  0x000000010f7fdcf4: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7fdcfc: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop rcx=Oop off=321}
                                                ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.Item::<init>@-1 (line 162)
                                                ;   {runtime_call}
  0x000000010f7fdd01: jmpq   0x000000010f7fdc1e
  0x000000010f7fdd06: mov    %rdi,0x8(%rsp)
  0x000000010f7fdd0b: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7fdd13: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop rcx=Oop off=344}
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 37)
                                                ; - jdk.internal.org.objectweb.asm.Item::<init>@1 (line 162)
                                                ;   {runtime_call}
  0x000000010f7fdd18: jmpq   0x000000010f7fdc65
  0x000000010f7fdd1d: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop rcx=Oop off=354}
                                                ;*getfield type
                                                ; - jdk.internal.org.objectweb.asm.Item::<init>@11 (line 164)
                                                ;   {runtime_call}
  0x000000010f7fdd22: nop
  0x000000010f7fdd23: nop
  0x000000010f7fdd24: mov    0x2a8(%r15),%rax
  0x000000010f7fdd2b: movabs $0x0,%r10
  0x000000010f7fdd35: mov    %r10,0x2a8(%r15)
  0x000000010f7fdd3c: movabs $0x0,%r10
  0x000000010f7fdd46: mov    %r10,0x2b0(%r15)
  0x000000010f7fdd4d: add    $0x30,%rsp
  0x000000010f7fdd51: pop    %rbp
  0x000000010f7fdd52: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7fdd57: hlt    
  0x000000010f7fdd58: hlt    
  0x000000010f7fdd59: hlt    
  0x000000010f7fdd5a: hlt    
  0x000000010f7fdd5b: hlt    
  0x000000010f7fdd5c: hlt    
  0x000000010f7fdd5d: hlt    
  0x000000010f7fdd5e: hlt    
  0x000000010f7fdd5f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f7fdd60: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f7fdd65: mov    %rsp,-0x28(%rsp)
  0x000000010f7fdd6a: sub    $0x80,%rsp
  0x000000010f7fdd71: mov    %rax,0x78(%rsp)
  0x000000010f7fdd76: mov    %rcx,0x70(%rsp)
  0x000000010f7fdd7b: mov    %rdx,0x68(%rsp)
  0x000000010f7fdd80: mov    %rbx,0x60(%rsp)
  0x000000010f7fdd85: mov    %rbp,0x50(%rsp)
  0x000000010f7fdd8a: mov    %rsi,0x48(%rsp)
  0x000000010f7fdd8f: mov    %rdi,0x40(%rsp)
  0x000000010f7fdd94: mov    %r8,0x38(%rsp)
  0x000000010f7fdd99: mov    %r9,0x30(%rsp)
  0x000000010f7fdd9e: mov    %r10,0x28(%rsp)
  0x000000010f7fdda3: mov    %r11,0x20(%rsp)
  0x000000010f7fdda8: mov    %r12,0x18(%rsp)
  0x000000010f7fddad: mov    %r13,0x10(%rsp)
  0x000000010f7fddb2: mov    %r14,0x8(%rsp)
  0x000000010f7fddb7: mov    %r15,(%rsp)
  0x000000010f7fddbb: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7fddc5: movabs $0x10f7fdd65,%rsi  ;   {internal_word}
  0x000000010f7fddcf: mov    %rsp,%rdx
  0x000000010f7fddd2: and    $0xfffffffffffffff0,%rsp
  0x000000010f7fddd6: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7fdddb: hlt    
[Deopt Handler Code]
  0x000000010f7fdddc: movabs $0x10f7fdddc,%r10  ;   {section_word}
  0x000000010f7fdde6: push   %r10
  0x000000010f7fdde8: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7fdded: hlt    
  0x000000010f7fddee: hlt    
  0x000000010f7fddef: hlt    
Decoding compiled method 0x000000010f7fe010:
Code:
[Constants]
  0x000000010f7fe1c0 (offset:    0): 0x00000000   0x3fe8000000000000
  0x000000010f7fe1c4 (offset:    4): 0x3fe80000
  0x000000010f7fe1c8 (offset:    8): 0xf4f4f4f4   0xf4f4f4f4f4f4f4f4
  0x000000010f7fe1cc (offset:   12): 0xf4f4f4f4
  0x000000010f7fe1d0 (offset:   16): 0xf4f4f4f4   0xf4f4f4f4f4f4f4f4
  0x000000010f7fe1d4 (offset:   20): 0xf4f4f4f4
  0x000000010f7fe1d8 (offset:   24): 0xf4f4f4f4   0xf4f4f4f4f4f4f4f4
  0x000000010f7fe1dc (offset:   28): 0xf4f4f4f4
[Entry Point]
  # {method} {0x000000010ed74398} 'put' '(Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/ClassWriter'
  # this:     rsi:rsi   = 'jdk/internal/org/objectweb/asm/ClassWriter'
  # parm0:    rdx:rdx   = 'jdk/internal/org/objectweb/asm/Item'
  #           [sp+0x60]  (sp of caller)
  0x000000010f7fe1e0: mov    0x8(%rsi),%r10d    ;   {no_reloc}
  0x000000010f7fe1e4: shl    $0x3,%r10
  0x000000010f7fe1e8: cmp    %rax,%r10
  0x000000010f7fe1eb: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7fe1f1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7fe1fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7fe200: mov    %eax,-0x14000(%rsp)
  0x000000010f7fe207: push   %rbp
  0x000000010f7fe208: sub    $0x50,%rsp
  0x000000010f7fe20c: mov    %rsi,%r8
  0x000000010f7fe20f: mov    %rdx,%r9
  0x000000010f7fe212: mov    %r9,0x30(%rsp)
  0x000000010f7fe217: movabs $0x10ed98018,%rbx  ;   {metadata(method data for {method} {0x000000010ed74398} 'put' '(Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000000010f7fe221: mov    0xdc(%rbx),%edx
  0x000000010f7fe227: add    $0x8,%edx
  0x000000010f7fe22a: mov    %edx,0xdc(%rbx)
  0x000000010f7fe230: movabs $0x10ed74398,%rbx  ;   {metadata({method} {0x000000010ed74398} 'put' '(Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000000010f7fe23a: and    $0x1ff8,%edx
  0x000000010f7fe240: cmp    $0x0,%edx
  0x000000010f7fe243: je     0x000000010f7fe7b3  ;*aload_0
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@0 (line 1756)

  0x000000010f7fe249: mov    0x18(%r8),%ebx     ;*getfield index
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@1 (line 1756)

  0x000000010f7fe24d: movswl 0x48(%r8),%edx     ;*getfield typeCount
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@5 (line 1756)

  0x000000010f7fe252: mov    0x1c(%r8),%esi     ;*getfield threshold
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@10 (line 1756)

  0x000000010f7fe256: add    %edx,%ebx
  0x000000010f7fe258: cmp    %esi,%ebx
  0x000000010f7fe25a: movabs $0x10ed98018,%rbx  ;   {metadata(method data for {method} {0x000000010ed74398} 'put' '(Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000000010f7fe264: movabs $0x108,%rdx
  0x000000010f7fe26e: jle    0x000000010f7fe27e
  0x000000010f7fe274: movabs $0x118,%rdx
  0x000000010f7fe27e: mov    (%rbx,%rdx,1),%rsi
  0x000000010f7fe282: lea    0x1(%rsi),%rsi
  0x000000010f7fe286: mov    %rsi,(%rbx,%rdx,1)
  0x000000010f7fe28a: jle    0x000000010f7fe62b  ;*if_icmple
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@13 (line 1756)

  0x000000010f7fe290: mov    0x58(%r8),%r11d
  0x000000010f7fe294: shl    $0x3,%r11          ;*getfield items
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@17 (line 1757)

  0x000000010f7fe298: mov    0xc(%r11),%r13d    ;*arraylength
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@20 (line 1757)
                                                ; implicit exception: dispatches to 0x000000010f7fe7ca
  0x000000010f7fe29c: mov    %r13,%rbx
  0x000000010f7fe29f: shl    %ebx
  0x000000010f7fe2a1: mov    %rbx,%r14
  0x000000010f7fe2a4: inc    %r14d
  0x000000010f7fe2a7: mov    %r14d,0x38(%rsp)
  0x000000010f7fe2ac: mov    %r14,%rbx
  0x000000010f7fe2af: movabs $0x7c005dde8,%rdx  ;   {metadata('jdk/internal/org/objectweb/asm/Item'[])}
  0x000000010f7fe2b9: movslq %ebx,%rbx
  0x000000010f7fe2bc: mov    %rbx,%rdi
  0x000000010f7fe2bf: cmp    $0xffffff,%rbx
  0x000000010f7fe2c6: ja     0x000000010f7fe7cf
  0x000000010f7fe2cc: movabs $0x17,%rsi
  0x000000010f7fe2d6: lea    (%rsi,%rbx,4),%rsi
  0x000000010f7fe2da: and    $0xfffffffffffffff8,%rsi
  0x000000010f7fe2de: mov    0x60(%r15),%rax
  0x000000010f7fe2e2: lea    (%rax,%rsi,1),%rsi
  0x000000010f7fe2e6: cmp    0x70(%r15),%rsi
  0x000000010f7fe2ea: ja     0x000000010f7fe7cf
  0x000000010f7fe2f0: mov    %rsi,0x60(%r15)
  0x000000010f7fe2f4: sub    %rax,%rsi
  0x000000010f7fe2f7: movq   $0x1,(%rax)
  0x000000010f7fe2fe: mov    %rdx,%rcx
  0x000000010f7fe301: shr    $0x3,%rcx
  0x000000010f7fe305: mov    %ecx,0x8(%rax)
  0x000000010f7fe308: mov    %ebx,0xc(%rax)
  0x000000010f7fe30b: sub    $0x10,%rsi
  0x000000010f7fe30f: je     0x000000010f7fe326
  0x000000010f7fe315: xor    %rbx,%rbx
  0x000000010f7fe318: shr    $0x3,%rsi
  0x000000010f7fe31c: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000010f7fe321: dec    %rsi
  0x000000010f7fe324: jne    0x000000010f7fe31c
  0x000000010f7fe326: mov    %rax,%rsi          ;*anewarray
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@29 (line 1759)

  0x000000010f7fe329: dec    %r13d
  0x000000010f7fe32c: jmpq   0x000000010f7fe5a6  ;*iload
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@39 (line 1760)

  0x000000010f7fe331: nopl   0x0(%rax)
  0x000000010f7fe338: movslq %r13d,%rax
  0x000000010f7fe33b: cmp    0xc(%r11),%r13d
  0x000000010f7fe33f: jae    0x000000010f7fe7d9
  0x000000010f7fe345: mov    0x10(%r11,%rax,4),%eax
  0x000000010f7fe34a: shl    $0x3,%rax          ;*aaload
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@50 (line 1761)

  0x000000010f7fe34e: jmpq   0x000000010f7fe51e  ;*aload
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@53 (line 1762)

  0x000000010f7fe353: nopl   0x0(%rax,%rax,1)
  0x000000010f7fe358: mov    0x20(%rdi),%eax    ;*getfield hashCode
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@60 (line 1763)
                                                ; implicit exception: dispatches to 0x000000010f7fe7e2
  0x000000010f7fe35b: mov    0xc(%rsi),%ebx     ;*arraylength
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@65 (line 1763)

  0x000000010f7fe35e: cmp    $0x80000000,%eax
  0x000000010f7fe364: jne    0x000000010f7fe375
  0x000000010f7fe36a: xor    %edx,%edx
  0x000000010f7fe36c: cmp    $0xffffffff,%ebx
  0x000000010f7fe36f: je     0x000000010f7fe378
  0x000000010f7fe375: cltd   
  0x000000010f7fe376: idiv   %ebx               ;*irem
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@66 (line 1763)
                                                ; implicit exception: dispatches to 0x000000010f7fe7e7
  0x000000010f7fe378: mov    0x30(%rdi),%eax
  0x000000010f7fe37b: shl    $0x3,%rax          ;*getfield next
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@71 (line 1764)

  0x000000010f7fe37f: movslq %edx,%rbx
  0x000000010f7fe382: cmp    0xc(%rsi),%edx
  0x000000010f7fe385: jae    0x000000010f7fe7ec
  0x000000010f7fe38b: mov    0x10(%rsi,%rbx,4),%ebx
  0x000000010f7fe38f: shl    $0x3,%rbx          ;*aaload
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@82 (line 1765)

  0x000000010f7fe393: mov    %rbx,%r10
  0x000000010f7fe396: shr    $0x3,%r10
  0x000000010f7fe39a: mov    %r10d,0x30(%rdi)
  0x000000010f7fe39e: mov    %rdi,%rbx
  0x000000010f7fe3a1: shr    $0x9,%rbx
  0x000000010f7fe3a5: movabs $0x1065b9000,%rcx
  0x000000010f7fe3af: movb   $0x0,(%rbx,%rcx,1)  ;*putfield next
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@83 (line 1765)

  0x000000010f7fe3b3: movslq %edx,%rdx
  0x000000010f7fe3b6: lea    0x10(%rsi,%rdx,4),%rdx
  0x000000010f7fe3bb: cmp    $0x0,%rdi
  0x000000010f7fe3bf: jne    0x000000010f7fe3db
  0x000000010f7fe3c1: movabs $0x10ed98018,%r9   ;   {metadata(method data for {method} {0x000000010ed74398} 'put' '(Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000000010f7fe3cb: orl    $0x100,0x160(%r9)
  0x000000010f7fe3d6: jmpq   0x000000010f7fe4c4
  0x000000010f7fe3db: mov    0x8(%rsi),%ebx     ; implicit exception: dispatches to 0x000000010f7fe7f5
  0x000000010f7fe3de: shl    $0x3,%rbx
  0x000000010f7fe3e2: mov    0x8(%rdi),%r9d
  0x000000010f7fe3e6: shl    $0x3,%r9
  0x000000010f7fe3ea: mov    0xe8(%rbx),%rbx
  0x000000010f7fe3f1: cmp    %rbx,%r9
  0x000000010f7fe3f4: je     0x000000010f7fe426
  0x000000010f7fe3fa: mov    0xc(%rbx),%r14d
  0x000000010f7fe3fe: cmp    (%r9,%r14,1),%rbx
  0x000000010f7fe402: je     0x000000010f7fe426
  0x000000010f7fe408: cmp    $0x18,%r14d
  0x000000010f7fe40c: jne    0x000000010f7fe4ad
  0x000000010f7fe412: push   %r9
  0x000000010f7fe414: push   %rbx
  0x000000010f7fe415: callq  0x000000010f7cf8e0  ;   {runtime_call}
  0x000000010f7fe41a: pop    %r9
  0x000000010f7fe41c: pop    %rbx
  0x000000010f7fe41d: cmp    $0x0,%ebx
  0x000000010f7fe420: je     0x000000010f7fe4ad
  0x000000010f7fe426: movabs $0x10ed98018,%r9   ;   {metadata(method data for {method} {0x000000010ed74398} 'put' '(Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000000010f7fe430: mov    0x8(%rdi),%ebx
  0x000000010f7fe433: shl    $0x3,%rbx
  0x000000010f7fe437: cmp    0x170(%r9),%rbx
  0x000000010f7fe43e: jne    0x000000010f7fe44d
  0x000000010f7fe440: addq   $0x1,0x178(%r9)
  0x000000010f7fe448: jmpq   0x000000010f7fe4c4
  0x000000010f7fe44d: cmp    0x180(%r9),%rbx
  0x000000010f7fe454: jne    0x000000010f7fe463
  0x000000010f7fe456: addq   $0x1,0x188(%r9)
  0x000000010f7fe45e: jmpq   0x000000010f7fe4c4
  0x000000010f7fe463: cmpq   $0x0,0x170(%r9)
  0x000000010f7fe46e: jne    0x000000010f7fe487
  0x000000010f7fe470: mov    %rbx,0x170(%r9)
  0x000000010f7fe477: movq   $0x1,0x178(%r9)
  0x000000010f7fe482: jmpq   0x000000010f7fe4c4
  0x000000010f7fe487: cmpq   $0x0,0x180(%r9)
  0x000000010f7fe492: jne    0x000000010f7fe4ab
  0x000000010f7fe494: mov    %rbx,0x180(%r9)
  0x000000010f7fe49b: movq   $0x1,0x188(%r9)
  0x000000010f7fe4a6: jmpq   0x000000010f7fe4c4
  0x000000010f7fe4ab: jmp    0x000000010f7fe4c4
  0x000000010f7fe4ad: movabs $0x10ed98018,%r9   ;   {metadata(method data for {method} {0x000000010ed74398} 'put' '(Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000000010f7fe4b7: subq   $0x1,0x168(%r9)
  0x000000010f7fe4bf: jmpq   0x000000010f7fe7fa
  0x000000010f7fe4c4: mov    %rdi,%r10
  0x000000010f7fe4c7: shr    $0x3,%r10
  0x000000010f7fe4cb: mov    %r10d,(%rdx)
  0x000000010f7fe4ce: shr    $0x9,%rdx
  0x000000010f7fe4d2: movb   $0x0,(%rdx,%rcx,1)  ;*aastore
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@92 (line 1766)

  0x000000010f7fe4d6: movabs $0x10ed98018,%rdx  ;   {metadata(method data for {method} {0x000000010ed74398} 'put' '(Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000000010f7fe4e0: mov    0xe0(%rdx),%edi
  0x000000010f7fe4e6: add    $0x8,%edi
  0x000000010f7fe4e9: mov    %edi,0xe0(%rdx)
  0x000000010f7fe4ef: movabs $0x10ed74398,%rdx  ;   {metadata({method} {0x000000010ed74398} 'put' '(Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000000010f7fe4f9: and    $0xfff8,%edi
  0x000000010f7fe4ff: cmp    $0x0,%edi
  0x000000010f7fe502: je     0x000000010f7fe803  ; OopMap{r8=Oop r11=Oop rsi=Oop [48]=Oop rax=Oop off=808}
                                                ;*goto
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@97 (line 1768)

  0x000000010f7fe508: test   %eax,-0x8d6340e(%rip)        # 0x0000000106a9b100
                                                ;   {poll}
  0x000000010f7fe50e: movabs $0x10ed98018,%rdx  ;   {metadata(method data for {method} {0x000000010ed74398} 'put' '(Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000000010f7fe518: incl   0x198(%rdx)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@97 (line 1768)

  0x000000010f7fe51e: mov    %rax,%rdi          ;*aload
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@53 (line 1762)

  0x000000010f7fe521: cmp    $0x0,%rdi
  0x000000010f7fe525: movabs $0x10ed98018,%rax  ;   {metadata(method data for {method} {0x000000010ed74398} 'put' '(Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000000010f7fe52f: movabs $0x148,%rdx
  0x000000010f7fe539: je     0x000000010f7fe549
  0x000000010f7fe53f: movabs $0x158,%rdx
  0x000000010f7fe549: mov    (%rax,%rdx,1),%rbx
  0x000000010f7fe54d: lea    0x1(%rbx),%rbx
  0x000000010f7fe551: mov    %rbx,(%rax,%rdx,1)
  0x000000010f7fe555: jne    0x000000010f7fe358  ;*ifnull
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@55 (line 1762)

  0x000000010f7fe55b: dec    %r13d
  0x000000010f7fe55e: movabs $0x10ed98018,%rax  ;   {metadata(method data for {method} {0x000000010ed74398} 'put' '(Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000000010f7fe568: mov    0xe0(%rax),%edx
  0x000000010f7fe56e: add    $0x8,%edx
  0x000000010f7fe571: mov    %edx,0xe0(%rax)
  0x000000010f7fe577: movabs $0x10ed74398,%rax  ;   {metadata({method} {0x000000010ed74398} 'put' '(Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000000010f7fe581: and    $0xfff8,%edx
  0x000000010f7fe587: cmp    $0x0,%edx
  0x000000010f7fe58a: je     0x000000010f7fe81a  ; OopMap{r8=Oop r11=Oop rsi=Oop [48]=Oop off=944}
                                                ;*goto
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@103 (line 1760)

  0x000000010f7fe590: test   %eax,-0x8d63496(%rip)        # 0x0000000106a9b100
                                                ;   {poll}
  0x000000010f7fe596: movabs $0x10ed98018,%rax  ;   {metadata(method data for {method} {0x000000010ed74398} 'put' '(Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000000010f7fe5a0: incl   0x1b0(%rax)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@103 (line 1760)

  0x000000010f7fe5a6: cmp    $0x0,%r13d
  0x000000010f7fe5aa: movabs $0x10ed98018,%rax  ;   {metadata(method data for {method} {0x000000010ed74398} 'put' '(Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000000010f7fe5b4: movabs $0x128,%rdx
  0x000000010f7fe5be: jl     0x000000010f7fe5ce
  0x000000010f7fe5c4: movabs $0x138,%rdx
  0x000000010f7fe5ce: mov    (%rax,%rdx,1),%rdi
  0x000000010f7fe5d2: lea    0x1(%rdi),%rdi
  0x000000010f7fe5d6: mov    %rdi,(%rax,%rdx,1)
  0x000000010f7fe5da: jge    0x000000010f7fe338  ;*iflt
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@41 (line 1760)

  0x000000010f7fe5e0: mov    0x38(%rsp),%r14d
  0x000000010f7fe5e5: mov    %rsi,%r10
  0x000000010f7fe5e8: shr    $0x3,%r10
  0x000000010f7fe5ec: mov    %r10d,0x58(%r8)
  0x000000010f7fe5f0: mov    %r8,%rax
  0x000000010f7fe5f3: shr    $0x9,%rax
  0x000000010f7fe5f7: movabs $0x1065b9000,%rdx
  0x000000010f7fe601: movb   $0x0,(%rax,%rdx,1)  ;*putfield items
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@109 (line 1770)

  0x000000010f7fe605: vcvtsi2sd %r14d,%xmm0,%xmm0
  0x000000010f7fe60a: vmulsd -0x452(%rip),%xmm0,%xmm0        # 0x000000010f7fe1c0
                                                ;   {section_word}
  0x000000010f7fe612: vcvttsd2si %xmm0,%eax
  0x000000010f7fe616: cmp    $0x80000000,%eax
  0x000000010f7fe61c: je     0x000000010f7fe831
  0x000000010f7fe622: mov    %eax,0x1c(%r8)     ;*putfield threshold
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@120 (line 1771)

  0x000000010f7fe626: mov    0x30(%rsp),%r9
  0x000000010f7fe62b: mov    0x20(%r9),%eax     ;*getfield hashCode
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@124 (line 1773)
                                                ; implicit exception: dispatches to 0x000000010f7fe84a
  0x000000010f7fe62f: mov    0x58(%r8),%esi
  0x000000010f7fe633: shl    $0x3,%rsi          ;*getfield items
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@128 (line 1773)

  0x000000010f7fe637: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@131 (line 1773)
                                                ; implicit exception: dispatches to 0x000000010f7fe84f
  0x000000010f7fe63a: cmp    $0x80000000,%eax
  0x000000010f7fe640: jne    0x000000010f7fe651
  0x000000010f7fe646: xor    %edx,%edx
  0x000000010f7fe648: cmp    $0xffffffff,%edi
  0x000000010f7fe64b: je     0x000000010f7fe654
  0x000000010f7fe651: cltd   
  0x000000010f7fe652: idiv   %edi               ;*irem
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@132 (line 1773)
                                                ; implicit exception: dispatches to 0x000000010f7fe854
  0x000000010f7fe654: movslq %edx,%rdi
  0x000000010f7fe657: cmp    0xc(%rsi),%edx
  0x000000010f7fe65a: jae    0x000000010f7fe859
  0x000000010f7fe660: mov    0x10(%rsi,%rdi,4),%edi
  0x000000010f7fe664: shl    $0x3,%rdi          ;*aaload
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@140 (line 1774)

  0x000000010f7fe668: mov    %rdi,%r10
  0x000000010f7fe66b: shr    $0x3,%r10
  0x000000010f7fe66f: mov    %r10d,0x30(%r9)
  0x000000010f7fe673: mov    %r9,%rdi
  0x000000010f7fe676: shr    $0x9,%rdi
  0x000000010f7fe67a: movabs $0x1065b9000,%rbx
  0x000000010f7fe684: movb   $0x0,(%rdi,%rbx,1)  ;*putfield next
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@141 (line 1774)

  0x000000010f7fe688: movslq %edx,%rdx
  0x000000010f7fe68b: lea    0x10(%rsi,%rdx,4),%rdi
  0x000000010f7fe690: cmp    $0x0,%r9
  0x000000010f7fe694: jne    0x000000010f7fe6af
  0x000000010f7fe696: movabs $0x10ed98018,%rax  ;   {metadata(method data for {method} {0x000000010ed74398} 'put' '(Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000000010f7fe6a0: orl    $0x100,0x1c0(%rax)
  0x000000010f7fe6aa: jmpq   0x000000010f7fe795
  0x000000010f7fe6af: mov    0x8(%rsi),%esi     ; implicit exception: dispatches to 0x000000010f7fe862
  0x000000010f7fe6b2: shl    $0x3,%rsi
  0x000000010f7fe6b6: mov    0x8(%r9),%eax
  0x000000010f7fe6ba: shl    $0x3,%rax
  0x000000010f7fe6be: mov    0xe8(%rsi),%rsi
  0x000000010f7fe6c5: cmp    %rsi,%rax
  0x000000010f7fe6c8: je     0x000000010f7fe6f6
  0x000000010f7fe6ce: mov    0xc(%rsi),%edx
  0x000000010f7fe6d1: cmp    (%rax,%rdx,1),%rsi
  0x000000010f7fe6d5: je     0x000000010f7fe6f6
  0x000000010f7fe6db: cmp    $0x18,%edx
  0x000000010f7fe6de: jne    0x000000010f7fe77e
  0x000000010f7fe6e4: push   %rax
  0x000000010f7fe6e5: push   %rsi
  0x000000010f7fe6e6: callq  0x000000010f7cf8e0  ;   {runtime_call}
  0x000000010f7fe6eb: pop    %rax
  0x000000010f7fe6ec: pop    %rsi
  0x000000010f7fe6ed: cmp    $0x0,%esi
  0x000000010f7fe6f0: je     0x000000010f7fe77e
  0x000000010f7fe6f6: movabs $0x10ed98018,%rax  ;   {metadata(method data for {method} {0x000000010ed74398} 'put' '(Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000000010f7fe700: mov    0x8(%r9),%esi
  0x000000010f7fe704: shl    $0x3,%rsi
  0x000000010f7fe708: cmp    0x1d0(%rax),%rsi
  0x000000010f7fe70f: jne    0x000000010f7fe71e
  0x000000010f7fe711: addq   $0x1,0x1d8(%rax)
  0x000000010f7fe719: jmpq   0x000000010f7fe795
  0x000000010f7fe71e: cmp    0x1e0(%rax),%rsi
  0x000000010f7fe725: jne    0x000000010f7fe734
  0x000000010f7fe727: addq   $0x1,0x1e8(%rax)
  0x000000010f7fe72f: jmpq   0x000000010f7fe795
  0x000000010f7fe734: cmpq   $0x0,0x1d0(%rax)
  0x000000010f7fe73f: jne    0x000000010f7fe758
  0x000000010f7fe741: mov    %rsi,0x1d0(%rax)
  0x000000010f7fe748: movq   $0x1,0x1d8(%rax)
  0x000000010f7fe753: jmpq   0x000000010f7fe795
  0x000000010f7fe758: cmpq   $0x0,0x1e0(%rax)
  0x000000010f7fe763: jne    0x000000010f7fe77c
  0x000000010f7fe765: mov    %rsi,0x1e0(%rax)
  0x000000010f7fe76c: movq   $0x1,0x1e8(%rax)
  0x000000010f7fe777: jmpq   0x000000010f7fe795
  0x000000010f7fe77c: jmp    0x000000010f7fe795
  0x000000010f7fe77e: movabs $0x10ed98018,%rax  ;   {metadata(method data for {method} {0x000000010ed74398} 'put' '(Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000000010f7fe788: subq   $0x1,0x1c8(%rax)
  0x000000010f7fe790: jmpq   0x000000010f7fe867
  0x000000010f7fe795: mov    %r9,%r10
  0x000000010f7fe798: shr    $0x3,%r10
  0x000000010f7fe79c: mov    %r10d,(%rdi)
  0x000000010f7fe79f: shr    $0x9,%rdi
  0x000000010f7fe7a3: movb   $0x0,(%rdi,%rbx,1)  ;*aastore
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@150 (line 1775)

  0x000000010f7fe7a7: add    $0x50,%rsp
  0x000000010f7fe7ab: pop    %rbp
  0x000000010f7fe7ac: test   %eax,-0x8d636b2(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7fe7b2: retq   
  0x000000010f7fe7b3: mov    %rbx,0x8(%rsp)
  0x000000010f7fe7b8: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7fe7c0: callq  0x000000010f7d1a20  ; OopMap{r8=Oop r9=Oop [48]=Oop off=1509}
                                                ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@-1 (line 1756)
                                                ;   {runtime_call}
  0x000000010f7fe7c5: jmpq   0x000000010f7fe249
  0x000000010f7fe7ca: callq  0x000000010f7cd0c0  ; OopMap{r8=Oop r9=Oop [48]=Oop r11=Oop off=1519}
                                                ;*arraylength
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@20 (line 1757)
                                                ;   {runtime_call}
  0x000000010f7fe7cf: callq  0x000000010f7ce5e0  ; OopMap{r8=Oop r9=Oop [48]=Oop r11=Oop off=1524}
                                                ;*anewarray
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@29 (line 1759)
                                                ;   {runtime_call}
  0x000000010f7fe7d4: jmpq   0x000000010f7fe326
  0x000000010f7fe7d9: mov    %r13,(%rsp)
  0x000000010f7fe7dd: callq  0x000000010f7cca00  ; OopMap{r8=Oop r11=Oop rsi=Oop [48]=Oop off=1538}
                                                ;*aaload
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@50 (line 1761)
                                                ;   {runtime_call}
  0x000000010f7fe7e2: callq  0x000000010f7cd0c0  ; OopMap{r8=Oop r11=Oop rsi=Oop [48]=Oop rdi=Oop off=1543}
                                                ;*getfield hashCode
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@60 (line 1763)
                                                ;   {runtime_call}
  0x000000010f7fe7e7: callq  0x000000010f7cce80  ; OopMap{r8=Oop r11=Oop rsi=Oop [48]=Oop rdi=Oop off=1548}
                                                ;*irem
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@66 (line 1763)
                                                ;   {runtime_call}
  0x000000010f7fe7ec: mov    %rdx,(%rsp)
  0x000000010f7fe7f0: callq  0x000000010f7cca00  ; OopMap{r8=Oop r11=Oop rsi=Oop [48]=Oop rdi=Oop rax=Oop off=1557}
                                                ;*aaload
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@82 (line 1765)
                                                ;   {runtime_call}
  0x000000010f7fe7f5: callq  0x000000010f7cd0c0  ; OopMap{r8=Oop r11=Oop rsi=Oop [48]=Oop rdi=Oop rax=Oop off=1562}
                                                ;*aastore
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@92 (line 1766)
                                                ;   {runtime_call}
  0x000000010f7fe7fa: mov    %rdi,(%rsp)
  0x000000010f7fe7fe: callq  0x000000010f7cf240  ; OopMap{r8=Oop r11=Oop rsi=Oop [48]=Oop rdi=Oop rax=Oop off=1571}
                                                ;*aastore
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@92 (line 1766)
                                                ;   {runtime_call}
  0x000000010f7fe803: mov    %rdx,0x8(%rsp)
  0x000000010f7fe808: movq   $0x61,(%rsp)
  0x000000010f7fe810: callq  0x000000010f7d1a20  ; OopMap{r8=Oop r11=Oop rsi=Oop [48]=Oop rax=Oop off=1589}
                                                ;*goto
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@97 (line 1768)
                                                ;   {runtime_call}
  0x000000010f7fe815: jmpq   0x000000010f7fe508
  0x000000010f7fe81a: mov    %rax,0x8(%rsp)
  0x000000010f7fe81f: movq   $0x67,(%rsp)
  0x000000010f7fe827: callq  0x000000010f7d1a20  ; OopMap{r8=Oop r11=Oop rsi=Oop [48]=Oop off=1612}
                                                ;*goto
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@103 (line 1760)
                                                ;   {runtime_call}
  0x000000010f7fe82c: jmpq   0x000000010f7fe590
  0x000000010f7fe831: vcomisd -0x5f16611(%rip),%xmm0        # 0x00000001098e8228
                                                ;   {external_word}
  0x000000010f7fe839: jp     0x000000010f7fe842
  0x000000010f7fe83b: jb     0x000000010f7fe845
  0x000000010f7fe83d: dec    %rax
  0x000000010f7fe840: jmp    0x000000010f7fe845
  0x000000010f7fe842: xor    %rax,%rax
  0x000000010f7fe845: jmpq   0x000000010f7fe622
  0x000000010f7fe84a: callq  0x000000010f7cd0c0  ; OopMap{r8=Oop r9=Oop [48]=Oop off=1647}
                                                ;*getfield hashCode
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@124 (line 1773)
                                                ;   {runtime_call}
  0x000000010f7fe84f: callq  0x000000010f7cd0c0  ; OopMap{r9=Oop [48]=Oop rsi=Oop off=1652}
                                                ;*arraylength
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@131 (line 1773)
                                                ;   {runtime_call}
  0x000000010f7fe854: callq  0x000000010f7cce80  ; OopMap{r9=Oop [48]=Oop rsi=Oop off=1657}
                                                ;*irem
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@132 (line 1773)
                                                ;   {runtime_call}
  0x000000010f7fe859: mov    %rdx,(%rsp)
  0x000000010f7fe85d: callq  0x000000010f7cca00  ; OopMap{r9=Oop [48]=Oop rsi=Oop off=1666}
                                                ;*aaload
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@140 (line 1774)
                                                ;   {runtime_call}
  0x000000010f7fe862: callq  0x000000010f7cd0c0  ; OopMap{r9=Oop [48]=Oop off=1671}
                                                ;*aastore
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@150 (line 1775)
                                                ;   {runtime_call}
  0x000000010f7fe867: mov    %r9,(%rsp)
  0x000000010f7fe86b: callq  0x000000010f7cf240  ; OopMap{r9=Oop [48]=Oop off=1680}
                                                ;*aastore
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::put@150 (line 1775)
                                                ;   {runtime_call}
  0x000000010f7fe870: nop
  0x000000010f7fe871: nop
  0x000000010f7fe872: mov    0x2a8(%r15),%rax
  0x000000010f7fe879: movabs $0x0,%r10
  0x000000010f7fe883: mov    %r10,0x2a8(%r15)
  0x000000010f7fe88a: movabs $0x0,%r10
  0x000000010f7fe894: mov    %r10,0x2b0(%r15)
  0x000000010f7fe89b: add    $0x50,%rsp
  0x000000010f7fe89f: pop    %rbp
  0x000000010f7fe8a0: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7fe8a5: hlt    
  0x000000010f7fe8a6: hlt    
  0x000000010f7fe8a7: hlt    
  0x000000010f7fe8a8: hlt    
  0x000000010f7fe8a9: hlt    
  0x000000010f7fe8aa: hlt    
  0x000000010f7fe8ab: hlt    
  0x000000010f7fe8ac: hlt    
  0x000000010f7fe8ad: hlt    
  0x000000010f7fe8ae: hlt    
  0x000000010f7fe8af: hlt    
  0x000000010f7fe8b0: hlt    
  0x000000010f7fe8b1: hlt    
  0x000000010f7fe8b2: hlt    
  0x000000010f7fe8b3: hlt    
  0x000000010f7fe8b4: hlt    
  0x000000010f7fe8b5: hlt    
  0x000000010f7fe8b6: hlt    
  0x000000010f7fe8b7: hlt    
  0x000000010f7fe8b8: hlt    
  0x000000010f7fe8b9: hlt    
  0x000000010f7fe8ba: hlt    
  0x000000010f7fe8bb: hlt    
  0x000000010f7fe8bc: hlt    
  0x000000010f7fe8bd: hlt    
  0x000000010f7fe8be: hlt    
  0x000000010f7fe8bf: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f7fe8c0: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f7fe8c5: mov    %rsp,-0x28(%rsp)
  0x000000010f7fe8ca: sub    $0x80,%rsp
  0x000000010f7fe8d1: mov    %rax,0x78(%rsp)
  0x000000010f7fe8d6: mov    %rcx,0x70(%rsp)
  0x000000010f7fe8db: mov    %rdx,0x68(%rsp)
  0x000000010f7fe8e0: mov    %rbx,0x60(%rsp)
  0x000000010f7fe8e5: mov    %rbp,0x50(%rsp)
  0x000000010f7fe8ea: mov    %rsi,0x48(%rsp)
  0x000000010f7fe8ef: mov    %rdi,0x40(%rsp)
  0x000000010f7fe8f4: mov    %r8,0x38(%rsp)
  0x000000010f7fe8f9: mov    %r9,0x30(%rsp)
  0x000000010f7fe8fe: mov    %r10,0x28(%rsp)
  0x000000010f7fe903: mov    %r11,0x20(%rsp)
  0x000000010f7fe908: mov    %r12,0x18(%rsp)
  0x000000010f7fe90d: mov    %r13,0x10(%rsp)
  0x000000010f7fe912: mov    %r14,0x8(%rsp)
  0x000000010f7fe917: mov    %r15,(%rsp)
  0x000000010f7fe91b: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7fe925: movabs $0x10f7fe8c5,%rsi  ;   {internal_word}
  0x000000010f7fe92f: mov    %rsp,%rdx
  0x000000010f7fe932: and    $0xfffffffffffffff0,%rsp
  0x000000010f7fe936: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7fe93b: hlt    
[Deopt Handler Code]
  0x000000010f7fe93c: movabs $0x10f7fe93c,%r10  ;   {section_word}
  0x000000010f7fe946: push   %r10
  0x000000010f7fe948: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7fe94d: hlt    
  0x000000010f7fe94e: hlt    
  0x000000010f7fe94f: hlt    
Decoding compiled method 0x000000010f7feed0:
Code:
[Entry Point]
  # {method} {0x000000010ea71678} 'isPrimitive' '()Z' in 'java/lang/Class'
  #           [sp+0x50]  (sp of caller)
  0x000000010f7ff040: mov    0x8(%rsi),%r10d
  0x000000010f7ff044: shl    $0x3,%r10
  0x000000010f7ff048: cmp    %r10,%rax
  0x000000010f7ff04b: je     0x000000010f7ff058
  0x000000010f7ff051: jmpq   0x000000010f716e60  ;   {runtime_call}
  0x000000010f7ff056: xchg   %ax,%ax
[Verified Entry Point]
  0x000000010f7ff058: mov    %eax,-0x14000(%rsp)
  0x000000010f7ff05f: push   %rbp
  0x000000010f7ff060: mov    %rsp,%rbp
  0x000000010f7ff063: sub    $0x40,%rsp
  0x000000010f7ff067: mov    %rsi,(%rsp)
  0x000000010f7ff06b: cmp    $0x0,%rsi
  0x000000010f7ff06f: lea    (%rsp),%rsi
  0x000000010f7ff073: cmove  (%rsp),%rsi        ; OopMap{[0]=Oop off=56}
  0x000000010f7ff078: movabs $0x10f7ff078,%r10  ;   {section_word}
  0x000000010f7ff082: mov    %r10,0x1e0(%r15)
  0x000000010f7ff089: mov    %rsp,0x1d8(%r15)
  0x000000010f7ff090: cmpb   $0x0,-0x5f0ccdd(%rip)        # 0x00000001098f23ba
                                                ;   {external_word}
  0x000000010f7ff097: je     0x000000010f7ff0cf
  0x000000010f7ff09d: push   %rsi
  0x000000010f7ff09e: movabs $0x10ea71678,%rsi  ;   {metadata({method} {0x000000010ea71678} 'isPrimitive' '()Z' in 'java/lang/Class')}
  0x000000010f7ff0a8: mov    %r15,%rdi
  0x000000010f7ff0ab: test   $0xf,%esp
  0x000000010f7ff0b1: je     0x000000010f7ff0c9
  0x000000010f7ff0b7: sub    $0x8,%rsp
  0x000000010f7ff0bb: callq  0x00000001094ed064  ;   {runtime_call}
  0x000000010f7ff0c0: add    $0x8,%rsp
  0x000000010f7ff0c4: jmpq   0x000000010f7ff0ce
  0x000000010f7ff0c9: callq  0x00000001094ed064  ;   {runtime_call}
  0x000000010f7ff0ce: pop    %rsi
  0x000000010f7ff0cf: lea    0x1f8(%r15),%rdi
  0x000000010f7ff0d6: movl   $0x4,0x270(%r15)
  0x000000010f7ff0e1: callq  0x00000001093478d0  ;   {runtime_call}
  0x000000010f7ff0e6: vzeroupper 
  0x000000010f7ff0e9: and    $0xff,%eax
  0x000000010f7ff0ef: setne  %al
  0x000000010f7ff0f2: movl   $0x5,0x270(%r15)
  0x000000010f7ff0fd: lock addl $0x0,(%rsp)
  0x000000010f7ff102: cmpl   $0x0,-0x5f0239c(%rip)        # 0x00000001098fcd70
                                                ;   {external_word}
  0x000000010f7ff10c: jne    0x000000010f7ff120
  0x000000010f7ff112: cmpl   $0x0,0x30(%r15)
  0x000000010f7ff11a: je     0x000000010f7ff141
  0x000000010f7ff120: mov    %rax,-0x8(%rbp)
  0x000000010f7ff124: mov    %r15,%rdi
  0x000000010f7ff127: mov    %rsp,%r12
  0x000000010f7ff12a: sub    $0x0,%rsp
  0x000000010f7ff12e: and    $0xfffffffffffffff0,%rsp
  0x000000010f7ff132: callq  0x000000010956fe1e  ;   {runtime_call}
  0x000000010f7ff137: mov    %r12,%rsp
  0x000000010f7ff13a: xor    %r12,%r12
  0x000000010f7ff13d: mov    -0x8(%rbp),%rax
  0x000000010f7ff141: movl   $0x8,0x270(%r15)
  0x000000010f7ff14c: cmpl   $0x1,0x29c(%r15)
  0x000000010f7ff157: je     0x000000010f7ff1e7
  0x000000010f7ff15d: cmpb   $0x0,-0x5f0cdaa(%rip)        # 0x00000001098f23ba
                                                ;   {external_word}
  0x000000010f7ff164: je     0x000000010f7ff1a2
  0x000000010f7ff16a: mov    %rax,-0x8(%rbp)
  0x000000010f7ff16e: movabs $0x10ea71678,%rsi  ;   {metadata({method} {0x000000010ea71678} 'isPrimitive' '()Z' in 'java/lang/Class')}
  0x000000010f7ff178: mov    %r15,%rdi
  0x000000010f7ff17b: test   $0xf,%esp
  0x000000010f7ff181: je     0x000000010f7ff199
  0x000000010f7ff187: sub    $0x8,%rsp
  0x000000010f7ff18b: callq  0x00000001094ecfd6  ;   {runtime_call}
  0x000000010f7ff190: add    $0x8,%rsp
  0x000000010f7ff194: jmpq   0x000000010f7ff19e
  0x000000010f7ff199: callq  0x00000001094ecfd6  ;   {runtime_call}
  0x000000010f7ff19e: mov    -0x8(%rbp),%rax
  0x000000010f7ff1a2: movabs $0x0,%r10
  0x000000010f7ff1ac: mov    %r10,0x1d8(%r15)
  0x000000010f7ff1b3: movabs $0x0,%r10
  0x000000010f7ff1bd: mov    %r10,0x1e0(%r15)
  0x000000010f7ff1c4: mov    0x38(%r15),%rcx
  0x000000010f7ff1c8: movl   $0x0,0x100(%rcx)
  0x000000010f7ff1d2: leaveq 
  0x000000010f7ff1d3: cmpq   $0x0,0x8(%r15)
  0x000000010f7ff1db: jne    0x000000010f7ff1e2
  0x000000010f7ff1e1: retq   
  0x000000010f7ff1e2: jmpq   Stub::forward exception  ;   {runtime_call}
  0x000000010f7ff1e7: mov    %rax,-0x8(%rbp)
  0x000000010f7ff1eb: mov    %rsp,%r12
  0x000000010f7ff1ee: sub    $0x0,%rsp
  0x000000010f7ff1f2: and    $0xfffffffffffffff0,%rsp
  0x000000010f7ff1f6: callq  0x00000001094ead1c  ;   {runtime_call}
  0x000000010f7ff1fb: mov    %r12,%rsp
  0x000000010f7ff1fe: xor    %r12,%r12
  0x000000010f7ff201: mov    -0x8(%rbp),%rax
  0x000000010f7ff205: jmpq   0x000000010f7ff15d
  0x000000010f7ff20a: hlt    
  0x000000010f7ff20b: hlt    
  0x000000010f7ff20c: hlt    
  0x000000010f7ff20d: hlt    
  0x000000010f7ff20e: hlt    
  0x000000010f7ff20f: hlt    
Decoding compiled method 0x000000010f7ff250:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010ed96ae8} 'access$000' '(Ljava/util/SubList;)I' in 'java/util/SubList'
  # parm0:    rsi:rsi   = 'java/util/SubList'
  #           [sp+0x40]  (sp of caller)
  0x000000010f7ff3a0: mov    %eax,-0x14000(%rsp)
  0x000000010f7ff3a7: push   %rbp
  0x000000010f7ff3a8: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.util.SubList::access$000@0 (line 613)

  0x000000010f7ff3ac: mov    0x10(%rsi),%eax    ;*getfield offset
                                                ; - java.util.SubList::access$000@1 (line 613)
                                                ; implicit exception: dispatches to 0x000000010f7ff3bb
  0x000000010f7ff3af: add    $0x30,%rsp
  0x000000010f7ff3b3: pop    %rbp
  0x000000010f7ff3b4: test   %eax,-0x8d642ba(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7ff3ba: retq   
  0x000000010f7ff3bb: callq  0x000000010f7cd0c0  ; OopMap{off=32}
                                                ;*getfield offset
                                                ; - java.util.SubList::access$000@1 (line 613)
                                                ;   {runtime_call}
  0x000000010f7ff3c0: nop
  0x000000010f7ff3c1: nop
  0x000000010f7ff3c2: mov    0x2a8(%r15),%rax
  0x000000010f7ff3c9: movabs $0x0,%r10
  0x000000010f7ff3d3: mov    %r10,0x2a8(%r15)
  0x000000010f7ff3da: movabs $0x0,%r10
  0x000000010f7ff3e4: mov    %r10,0x2b0(%r15)
  0x000000010f7ff3eb: add    $0x30,%rsp
  0x000000010f7ff3ef: pop    %rbp
  0x000000010f7ff3f0: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7ff3f5: hlt    
  0x000000010f7ff3f6: hlt    
  0x000000010f7ff3f7: hlt    
  0x000000010f7ff3f8: hlt    
  0x000000010f7ff3f9: hlt    
  0x000000010f7ff3fa: hlt    
  0x000000010f7ff3fb: hlt    
  0x000000010f7ff3fc: hlt    
  0x000000010f7ff3fd: hlt    
  0x000000010f7ff3fe: hlt    
  0x000000010f7ff3ff: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f7ff400: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f7ff405: mov    %rsp,-0x28(%rsp)
  0x000000010f7ff40a: sub    $0x80,%rsp
  0x000000010f7ff411: mov    %rax,0x78(%rsp)
  0x000000010f7ff416: mov    %rcx,0x70(%rsp)
  0x000000010f7ff41b: mov    %rdx,0x68(%rsp)
  0x000000010f7ff420: mov    %rbx,0x60(%rsp)
  0x000000010f7ff425: mov    %rbp,0x50(%rsp)
  0x000000010f7ff42a: mov    %rsi,0x48(%rsp)
  0x000000010f7ff42f: mov    %rdi,0x40(%rsp)
  0x000000010f7ff434: mov    %r8,0x38(%rsp)
  0x000000010f7ff439: mov    %r9,0x30(%rsp)
  0x000000010f7ff43e: mov    %r10,0x28(%rsp)
  0x000000010f7ff443: mov    %r11,0x20(%rsp)
  0x000000010f7ff448: mov    %r12,0x18(%rsp)
  0x000000010f7ff44d: mov    %r13,0x10(%rsp)
  0x000000010f7ff452: mov    %r14,0x8(%rsp)
  0x000000010f7ff457: mov    %r15,(%rsp)
  0x000000010f7ff45b: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7ff465: movabs $0x10f7ff405,%rsi  ;   {internal_word}
  0x000000010f7ff46f: mov    %rsp,%rdx
  0x000000010f7ff472: and    $0xfffffffffffffff0,%rsp
  0x000000010f7ff476: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7ff47b: hlt    
[Deopt Handler Code]
  0x000000010f7ff47c: movabs $0x10f7ff47c,%r10  ;   {section_word}
  0x000000010f7ff486: push   %r10
  0x000000010f7ff488: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7ff48d: hlt    
  0x000000010f7ff48e: hlt    
  0x000000010f7ff48f: hlt    
Decoding compiled method 0x000000010f7ff550:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ed993d0} 'nextIndex' '()I' in 'java/util/AbstractList$ListItr'
  #           [sp+0x40]  (sp of caller)
  0x000000010f7ff6a0: mov    0x8(%rsi),%r10d
  0x000000010f7ff6a4: shl    $0x3,%r10
  0x000000010f7ff6a8: cmp    %rax,%r10
  0x000000010f7ff6ab: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f7ff6b1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f7ff6bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f7ff6c0: mov    %eax,-0x14000(%rsp)
  0x000000010f7ff6c7: push   %rbp
  0x000000010f7ff6c8: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.util.AbstractList$ListItr::nextIndex@0 (line 413)

  0x000000010f7ff6cc: mov    0xc(%rsi),%eax     ;*getfield cursor
                                                ; - java.util.AbstractList$ListItr::nextIndex@1 (line 413)

  0x000000010f7ff6cf: add    $0x30,%rsp
  0x000000010f7ff6d3: pop    %rbp
  0x000000010f7ff6d4: test   %eax,-0x8d645da(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7ff6da: retq   
  0x000000010f7ff6db: nop
  0x000000010f7ff6dc: nop
  0x000000010f7ff6dd: mov    0x2a8(%r15),%rax
  0x000000010f7ff6e4: movabs $0x0,%r10
  0x000000010f7ff6ee: mov    %r10,0x2a8(%r15)
  0x000000010f7ff6f5: movabs $0x0,%r10
  0x000000010f7ff6ff: mov    %r10,0x2b0(%r15)
  0x000000010f7ff706: add    $0x30,%rsp
  0x000000010f7ff70a: pop    %rbp
  0x000000010f7ff70b: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7ff710: hlt    
  0x000000010f7ff711: hlt    
  0x000000010f7ff712: hlt    
  0x000000010f7ff713: hlt    
  0x000000010f7ff714: hlt    
  0x000000010f7ff715: hlt    
  0x000000010f7ff716: hlt    
  0x000000010f7ff717: hlt    
  0x000000010f7ff718: hlt    
  0x000000010f7ff719: hlt    
  0x000000010f7ff71a: hlt    
  0x000000010f7ff71b: hlt    
  0x000000010f7ff71c: hlt    
  0x000000010f7ff71d: hlt    
  0x000000010f7ff71e: hlt    
  0x000000010f7ff71f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f7ff720: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f7ff725: mov    %rsp,-0x28(%rsp)
  0x000000010f7ff72a: sub    $0x80,%rsp
  0x000000010f7ff731: mov    %rax,0x78(%rsp)
  0x000000010f7ff736: mov    %rcx,0x70(%rsp)
  0x000000010f7ff73b: mov    %rdx,0x68(%rsp)
  0x000000010f7ff740: mov    %rbx,0x60(%rsp)
  0x000000010f7ff745: mov    %rbp,0x50(%rsp)
  0x000000010f7ff74a: mov    %rsi,0x48(%rsp)
  0x000000010f7ff74f: mov    %rdi,0x40(%rsp)
  0x000000010f7ff754: mov    %r8,0x38(%rsp)
  0x000000010f7ff759: mov    %r9,0x30(%rsp)
  0x000000010f7ff75e: mov    %r10,0x28(%rsp)
  0x000000010f7ff763: mov    %r11,0x20(%rsp)
  0x000000010f7ff768: mov    %r12,0x18(%rsp)
  0x000000010f7ff76d: mov    %r13,0x10(%rsp)
  0x000000010f7ff772: mov    %r14,0x8(%rsp)
  0x000000010f7ff777: mov    %r15,(%rsp)
  0x000000010f7ff77b: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7ff785: movabs $0x10f7ff725,%rsi  ;   {internal_word}
  0x000000010f7ff78f: mov    %rsp,%rdx
  0x000000010f7ff792: and    $0xfffffffffffffff0,%rsp
  0x000000010f7ff796: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7ff79b: hlt    
[Deopt Handler Code]
  0x000000010f7ff79c: movabs $0x10f7ff79c,%r10  ;   {section_word}
  0x000000010f7ff7a6: push   %r10
  0x000000010f7ff7a8: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7ff7ad: hlt    
  0x000000010f7ff7ae: hlt    
  0x000000010f7ff7af: hlt    
Decoding compiled method 0x000000010f7ff850:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010ed96c18} 'access$200' '(Ljava/util/SubList;)I' in 'java/util/SubList'
  # parm0:    rsi:rsi   = 'java/util/SubList'
  #           [sp+0x40]  (sp of caller)
  0x000000010f7ff9a0: mov    %eax,-0x14000(%rsp)
  0x000000010f7ff9a7: push   %rbp
  0x000000010f7ff9a8: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.util.SubList::access$200@0 (line 613)

  0x000000010f7ff9ac: mov    0x14(%rsi),%eax    ;*getfield size
                                                ; - java.util.SubList::access$200@1 (line 613)
                                                ; implicit exception: dispatches to 0x000000010f7ff9bb
  0x000000010f7ff9af: add    $0x30,%rsp
  0x000000010f7ff9b3: pop    %rbp
  0x000000010f7ff9b4: test   %eax,-0x8d648ba(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7ff9ba: retq   
  0x000000010f7ff9bb: callq  0x000000010f7cd0c0  ; OopMap{off=32}
                                                ;*getfield size
                                                ; - java.util.SubList::access$200@1 (line 613)
                                                ;   {runtime_call}
  0x000000010f7ff9c0: nop
  0x000000010f7ff9c1: nop
  0x000000010f7ff9c2: mov    0x2a8(%r15),%rax
  0x000000010f7ff9c9: movabs $0x0,%r10
  0x000000010f7ff9d3: mov    %r10,0x2a8(%r15)
  0x000000010f7ff9da: movabs $0x0,%r10
  0x000000010f7ff9e4: mov    %r10,0x2b0(%r15)
  0x000000010f7ff9eb: add    $0x30,%rsp
  0x000000010f7ff9ef: pop    %rbp
  0x000000010f7ff9f0: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7ff9f5: hlt    
  0x000000010f7ff9f6: hlt    
  0x000000010f7ff9f7: hlt    
  0x000000010f7ff9f8: hlt    
  0x000000010f7ff9f9: hlt    
  0x000000010f7ff9fa: hlt    
  0x000000010f7ff9fb: hlt    
  0x000000010f7ff9fc: hlt    
  0x000000010f7ff9fd: hlt    
  0x000000010f7ff9fe: hlt    
  0x000000010f7ff9ff: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f7ffa00: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f7ffa05: mov    %rsp,-0x28(%rsp)
  0x000000010f7ffa0a: sub    $0x80,%rsp
  0x000000010f7ffa11: mov    %rax,0x78(%rsp)
  0x000000010f7ffa16: mov    %rcx,0x70(%rsp)
  0x000000010f7ffa1b: mov    %rdx,0x68(%rsp)
  0x000000010f7ffa20: mov    %rbx,0x60(%rsp)
  0x000000010f7ffa25: mov    %rbp,0x50(%rsp)
  0x000000010f7ffa2a: mov    %rsi,0x48(%rsp)
  0x000000010f7ffa2f: mov    %rdi,0x40(%rsp)
  0x000000010f7ffa34: mov    %r8,0x38(%rsp)
  0x000000010f7ffa39: mov    %r9,0x30(%rsp)
  0x000000010f7ffa3e: mov    %r10,0x28(%rsp)
  0x000000010f7ffa43: mov    %r11,0x20(%rsp)
  0x000000010f7ffa48: mov    %r12,0x18(%rsp)
  0x000000010f7ffa4d: mov    %r13,0x10(%rsp)
  0x000000010f7ffa52: mov    %r14,0x8(%rsp)
  0x000000010f7ffa57: mov    %r15,(%rsp)
  0x000000010f7ffa5b: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7ffa65: movabs $0x10f7ffa05,%rsi  ;   {internal_word}
  0x000000010f7ffa6f: mov    %rsp,%rdx
  0x000000010f7ffa72: and    $0xfffffffffffffff0,%rsp
  0x000000010f7ffa76: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7ffa7b: hlt    
[Deopt Handler Code]
  0x000000010f7ffa7c: movabs $0x10f7ffa7c,%r10  ;   {section_word}
  0x000000010f7ffa86: push   %r10
  0x000000010f7ffa88: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7ffa8d: hlt    
  0x000000010f7ffa8e: hlt    
  0x000000010f7ffa8f: hlt    
Decoding compiled method 0x000000010f7ffb50:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010eb35fd8} 'calculateCapacity' '([Ljava/lang/Object;I)I' in 'java/util/ArrayList'
  # parm0:    rsi:rsi   = '[Ljava/lang/Object;'
  # parm1:    rdx       = int
  #           [sp+0x50]  (sp of caller)
  0x000000010f7ffcc0: mov    %eax,-0x14000(%rsp)
  0x000000010f7ffcc7: push   %rbp
  0x000000010f7ffcc8: sub    $0x40,%rsp
  0x000000010f7ffccc: movabs $0x10ed99aa0,%rax  ;   {metadata(method data for {method} {0x000000010eb35fd8} 'calculateCapacity' '([Ljava/lang/Object;I)I' in 'java/util/ArrayList')}
  0x000000010f7ffcd6: mov    0xdc(%rax),%edi
  0x000000010f7ffcdc: add    $0x8,%edi
  0x000000010f7ffcdf: mov    %edi,0xdc(%rax)
  0x000000010f7ffce5: movabs $0x10eb35fd8,%rax  ;   {metadata({method} {0x000000010eb35fd8} 'calculateCapacity' '([Ljava/lang/Object;I)I' in 'java/util/ArrayList')}
  0x000000010f7ffcef: and    $0x1ff8,%edi
  0x000000010f7ffcf5: cmp    $0x0,%edi
  0x000000010f7ffcf8: je     0x000000010f7ffdf1  ;*aload_0
                                                ; - java.util.ArrayList::calculateCapacity@0 (line 224)

  0x000000010f7ffcfe: movabs $0x795586e48,%r10  ;   {oop(a 'java/lang/Object'[0] )}
  0x000000010f7ffd08: cmp    %r10,%rsi
  0x000000010f7ffd0b: movabs $0x10ed99aa0,%rax  ;   {metadata(method data for {method} {0x000000010eb35fd8} 'calculateCapacity' '([Ljava/lang/Object;I)I' in 'java/util/ArrayList')}
  0x000000010f7ffd15: movabs $0x108,%rsi
  0x000000010f7ffd1f: jne    0x000000010f7ffd2f
  0x000000010f7ffd25: movabs $0x118,%rsi
  0x000000010f7ffd2f: mov    (%rax,%rsi,1),%rdi
  0x000000010f7ffd33: lea    0x1(%rdi),%rdi
  0x000000010f7ffd37: mov    %rdi,(%rax,%rsi,1)
  0x000000010f7ffd3b: jne    0x000000010f7ffde2  ;*if_acmpne
                                                ; - java.util.ArrayList::calculateCapacity@4 (line 224)

  0x000000010f7ffd41: movabs $0x10ed99aa0,%rax  ;   {metadata(method data for {method} {0x000000010eb35fd8} 'calculateCapacity' '([Ljava/lang/Object;I)I' in 'java/util/ArrayList')}
  0x000000010f7ffd4b: addq   $0x1,0x128(%rax)
  0x000000010f7ffd53: movabs $0x10ec812e0,%rax  ;   {metadata(method data for {method} {0x000000010eb5b520} 'max' '(II)I' in 'java/lang/Math')}
  0x000000010f7ffd5d: mov    0xdc(%rax),%esi
  0x000000010f7ffd63: add    $0x8,%esi
  0x000000010f7ffd66: mov    %esi,0xdc(%rax)
  0x000000010f7ffd6c: movabs $0x10eb5b520,%rax  ;   {metadata({method} {0x000000010eb5b520} 'max' '(II)I' in 'java/lang/Math')}
  0x000000010f7ffd76: and    $0x7ffff8,%esi
  0x000000010f7ffd7c: cmp    $0x0,%esi
  0x000000010f7ffd7f: je     0x000000010f7ffe08
  0x000000010f7ffd85: cmp    $0xa,%edx
  0x000000010f7ffd88: movabs $0x10ec812e0,%rax  ;   {metadata(method data for {method} {0x000000010eb5b520} 'max' '(II)I' in 'java/lang/Math')}
  0x000000010f7ffd92: movabs $0x108,%rsi
  0x000000010f7ffd9c: jg     0x000000010f7ffdac
  0x000000010f7ffda2: movabs $0x118,%rsi
  0x000000010f7ffdac: mov    (%rax,%rsi,1),%rdi
  0x000000010f7ffdb0: lea    0x1(%rdi),%rdi
  0x000000010f7ffdb4: mov    %rdi,(%rax,%rsi,1)
  0x000000010f7ffdb8: jg     0x000000010f7ffdd3  ;*if_icmplt
                                                ; - java.lang.Math::max@2 (line 1252)
                                                ; - java.util.ArrayList::calculateCapacity@10 (line 225)

  0x000000010f7ffdbe: movabs $0x10ec812e0,%rax  ;   {metadata(method data for {method} {0x000000010eb5b520} 'max' '(II)I' in 'java/lang/Math')}
  0x000000010f7ffdc8: incl   0x128(%rax)
  0x000000010f7ffdce: mov    $0xa,%edx          ;*goto
                                                ; - java.lang.Math::max@6 (line 1252)
                                                ; - java.util.ArrayList::calculateCapacity@10 (line 225)

  0x000000010f7ffdd3: mov    %rdx,%rax
  0x000000010f7ffdd6: add    $0x40,%rsp
  0x000000010f7ffdda: pop    %rbp
  0x000000010f7ffddb: test   %eax,-0x8d64ce1(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7ffde1: retq                      ;*ireturn
                                                ; - java.util.ArrayList::calculateCapacity@13 (line 225)

  0x000000010f7ffde2: mov    %rdx,%rax
  0x000000010f7ffde5: add    $0x40,%rsp
  0x000000010f7ffde9: pop    %rbp
  0x000000010f7ffdea: test   %eax,-0x8d64cf0(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f7ffdf0: retq   
  0x000000010f7ffdf1: mov    %rax,0x8(%rsp)
  0x000000010f7ffdf6: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7ffdfe: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=323}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::calculateCapacity@-1 (line 224)
                                                ;   {runtime_call}
  0x000000010f7ffe03: jmpq   0x000000010f7ffcfe
  0x000000010f7ffe08: mov    %rax,0x8(%rsp)
  0x000000010f7ffe0d: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f7ffe15: callq  0x000000010f7d1a20  ; OopMap{off=346}
                                                ;*synchronization entry
                                                ; - java.lang.Math::max@-1 (line 1252)
                                                ; - java.util.ArrayList::calculateCapacity@10 (line 225)
                                                ;   {runtime_call}
  0x000000010f7ffe1a: jmpq   0x000000010f7ffd85
  0x000000010f7ffe1f: nop
  0x000000010f7ffe20: nop
  0x000000010f7ffe21: mov    0x2a8(%r15),%rax
  0x000000010f7ffe28: movabs $0x0,%r10
  0x000000010f7ffe32: mov    %r10,0x2a8(%r15)
  0x000000010f7ffe39: movabs $0x0,%r10
  0x000000010f7ffe43: mov    %r10,0x2b0(%r15)
  0x000000010f7ffe4a: add    $0x40,%rsp
  0x000000010f7ffe4e: pop    %rbp
  0x000000010f7ffe4f: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f7ffe54: hlt    
  0x000000010f7ffe55: hlt    
  0x000000010f7ffe56: hlt    
  0x000000010f7ffe57: hlt    
  0x000000010f7ffe58: hlt    
  0x000000010f7ffe59: hlt    
  0x000000010f7ffe5a: hlt    
  0x000000010f7ffe5b: hlt    
  0x000000010f7ffe5c: hlt    
  0x000000010f7ffe5d: hlt    
  0x000000010f7ffe5e: hlt    
  0x000000010f7ffe5f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f7ffe60: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f7ffe65: mov    %rsp,-0x28(%rsp)
  0x000000010f7ffe6a: sub    $0x80,%rsp
  0x000000010f7ffe71: mov    %rax,0x78(%rsp)
  0x000000010f7ffe76: mov    %rcx,0x70(%rsp)
  0x000000010f7ffe7b: mov    %rdx,0x68(%rsp)
  0x000000010f7ffe80: mov    %rbx,0x60(%rsp)
  0x000000010f7ffe85: mov    %rbp,0x50(%rsp)
  0x000000010f7ffe8a: mov    %rsi,0x48(%rsp)
  0x000000010f7ffe8f: mov    %rdi,0x40(%rsp)
  0x000000010f7ffe94: mov    %r8,0x38(%rsp)
  0x000000010f7ffe99: mov    %r9,0x30(%rsp)
  0x000000010f7ffe9e: mov    %r10,0x28(%rsp)
  0x000000010f7ffea3: mov    %r11,0x20(%rsp)
  0x000000010f7ffea8: mov    %r12,0x18(%rsp)
  0x000000010f7ffead: mov    %r13,0x10(%rsp)
  0x000000010f7ffeb2: mov    %r14,0x8(%rsp)
  0x000000010f7ffeb7: mov    %r15,(%rsp)
  0x000000010f7ffebb: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f7ffec5: movabs $0x10f7ffe65,%rsi  ;   {internal_word}
  0x000000010f7ffecf: mov    %rsp,%rdx
  0x000000010f7ffed2: and    $0xfffffffffffffff0,%rsp
  0x000000010f7ffed6: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f7ffedb: hlt    
[Deopt Handler Code]
  0x000000010f7ffedc: movabs $0x10f7ffedc,%r10  ;   {section_word}
  0x000000010f7ffee6: push   %r10
  0x000000010f7ffee8: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f7ffeed: hlt    
  0x000000010f7ffeee: hlt    
  0x000000010f7ffeef: hlt    
Decoding compiled method 0x000000010f800010:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010eb36128} 'ensureExplicitCapacity' '(I)V' in 'java/util/ArrayList'
  # this:     rsi:rsi   = 'java/util/ArrayList'
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x000000010f800180: mov    0x8(%rsi),%r10d
  0x000000010f800184: shl    $0x3,%r10
  0x000000010f800188: cmp    %rax,%r10
  0x000000010f80018b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f800191: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f80019c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f8001a0: mov    %eax,-0x14000(%rsp)
  0x000000010f8001a7: push   %rbp
  0x000000010f8001a8: sub    $0x30,%rsp
  0x000000010f8001ac: movabs $0x10ed99c20,%rdi  ;   {metadata(method data for {method} {0x000000010eb36128} 'ensureExplicitCapacity' '(I)V' in 'java/util/ArrayList')}
  0x000000010f8001b6: mov    0xdc(%rdi),%ebx
  0x000000010f8001bc: add    $0x8,%ebx
  0x000000010f8001bf: mov    %ebx,0xdc(%rdi)
  0x000000010f8001c5: movabs $0x10eb36128,%rdi  ;   {metadata({method} {0x000000010eb36128} 'ensureExplicitCapacity' '(I)V' in 'java/util/ArrayList')}
  0x000000010f8001cf: and    $0x1ff8,%ebx
  0x000000010f8001d5: cmp    $0x0,%ebx
  0x000000010f8001d8: je     0x000000010f800258  ;*aload_0
                                                ; - java.util.ArrayList::ensureExplicitCapacity@0 (line 235)

  0x000000010f8001de: mov    0xc(%rsi),%edi     ;*getfield modCount
                                                ; - java.util.ArrayList::ensureExplicitCapacity@2 (line 235)

  0x000000010f8001e1: inc    %edi
  0x000000010f8001e3: mov    %edi,0xc(%rsi)     ;*putfield modCount
                                                ; - java.util.ArrayList::ensureExplicitCapacity@7 (line 235)

  0x000000010f8001e6: mov    0x14(%rsi),%edi
  0x000000010f8001e9: shl    $0x3,%rdi          ;*getfield elementData
                                                ; - java.util.ArrayList::ensureExplicitCapacity@12 (line 238)

  0x000000010f8001ed: mov    0xc(%rdi),%edi     ;*arraylength
                                                ; - java.util.ArrayList::ensureExplicitCapacity@15 (line 238)
                                                ; implicit exception: dispatches to 0x000000010f80026f
  0x000000010f8001f0: mov    %rdx,%rbx
  0x000000010f8001f3: sub    %edi,%ebx
  0x000000010f8001f5: cmp    $0x0,%ebx
  0x000000010f8001f8: movabs $0x10ed99c20,%rdi  ;   {metadata(method data for {method} {0x000000010eb36128} 'ensureExplicitCapacity' '(I)V' in 'java/util/ArrayList')}
  0x000000010f800202: movabs $0x108,%rbx
  0x000000010f80020c: jle    0x000000010f80021c
  0x000000010f800212: movabs $0x118,%rbx
  0x000000010f80021c: mov    (%rdi,%rbx,1),%rax
  0x000000010f800220: lea    0x1(%rax),%rax
  0x000000010f800224: mov    %rax,(%rdi,%rbx,1)
  0x000000010f800228: jle    0x000000010f80024c  ;*ifle
                                                ; - java.util.ArrayList::ensureExplicitCapacity@17 (line 238)

  0x000000010f80022e: mov    %rsi,%rdi
  0x000000010f800231: movabs $0x10ed99c20,%rbx  ;   {metadata(method data for {method} {0x000000010eb36128} 'ensureExplicitCapacity' '(I)V' in 'java/util/ArrayList')}
  0x000000010f80023b: addq   $0x1,0x128(%rbx)
  0x000000010f800243: nop
  0x000000010f800244: nop
  0x000000010f800245: nop
  0x000000010f800246: nop
  0x000000010f800247: callq  0x000000010f7170a0  ; OopMap{off=204}
                                                ;*invokespecial grow
                                                ; - java.util.ArrayList::ensureExplicitCapacity@22 (line 239)
                                                ;   {optimized virtual_call}
  0x000000010f80024c: add    $0x30,%rsp
  0x000000010f800250: pop    %rbp
  0x000000010f800251: test   %eax,-0x8d65157(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f800257: retq   
  0x000000010f800258: mov    %rdi,0x8(%rsp)
  0x000000010f80025d: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f800265: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=234}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::ensureExplicitCapacity@-1 (line 235)
                                                ;   {runtime_call}
  0x000000010f80026a: jmpq   0x000000010f8001de
  0x000000010f80026f: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop off=244}
                                                ;*arraylength
                                                ; - java.util.ArrayList::ensureExplicitCapacity@15 (line 238)
                                                ;   {runtime_call}
  0x000000010f800274: nop
  0x000000010f800275: nop
  0x000000010f800276: mov    0x2a8(%r15),%rax
  0x000000010f80027d: movabs $0x0,%r10
  0x000000010f800287: mov    %r10,0x2a8(%r15)
  0x000000010f80028e: movabs $0x0,%r10
  0x000000010f800298: mov    %r10,0x2b0(%r15)
  0x000000010f80029f: add    $0x30,%rsp
  0x000000010f8002a3: pop    %rbp
  0x000000010f8002a4: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f8002a9: hlt    
  0x000000010f8002aa: hlt    
  0x000000010f8002ab: hlt    
  0x000000010f8002ac: hlt    
  0x000000010f8002ad: hlt    
  0x000000010f8002ae: hlt    
  0x000000010f8002af: hlt    
  0x000000010f8002b0: hlt    
  0x000000010f8002b1: hlt    
  0x000000010f8002b2: hlt    
  0x000000010f8002b3: hlt    
  0x000000010f8002b4: hlt    
  0x000000010f8002b5: hlt    
  0x000000010f8002b6: hlt    
  0x000000010f8002b7: hlt    
  0x000000010f8002b8: hlt    
  0x000000010f8002b9: hlt    
  0x000000010f8002ba: hlt    
  0x000000010f8002bb: hlt    
  0x000000010f8002bc: hlt    
  0x000000010f8002bd: hlt    
  0x000000010f8002be: hlt    
  0x000000010f8002bf: hlt    
[Stub Code]
  0x000000010f8002c0: nop                       ;   {no_reloc}
  0x000000010f8002c1: nop
  0x000000010f8002c2: nop
  0x000000010f8002c3: nop
  0x000000010f8002c4: nop
  0x000000010f8002c5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f8002cf: jmpq   0x000000010f8002cf  ;   {runtime_call}
[Exception Handler]
  0x000000010f8002d4: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f8002d9: mov    %rsp,-0x28(%rsp)
  0x000000010f8002de: sub    $0x80,%rsp
  0x000000010f8002e5: mov    %rax,0x78(%rsp)
  0x000000010f8002ea: mov    %rcx,0x70(%rsp)
  0x000000010f8002ef: mov    %rdx,0x68(%rsp)
  0x000000010f8002f4: mov    %rbx,0x60(%rsp)
  0x000000010f8002f9: mov    %rbp,0x50(%rsp)
  0x000000010f8002fe: mov    %rsi,0x48(%rsp)
  0x000000010f800303: mov    %rdi,0x40(%rsp)
  0x000000010f800308: mov    %r8,0x38(%rsp)
  0x000000010f80030d: mov    %r9,0x30(%rsp)
  0x000000010f800312: mov    %r10,0x28(%rsp)
  0x000000010f800317: mov    %r11,0x20(%rsp)
  0x000000010f80031c: mov    %r12,0x18(%rsp)
  0x000000010f800321: mov    %r13,0x10(%rsp)
  0x000000010f800326: mov    %r14,0x8(%rsp)
  0x000000010f80032b: mov    %r15,(%rsp)
  0x000000010f80032f: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f800339: movabs $0x10f8002d9,%rsi  ;   {internal_word}
  0x000000010f800343: mov    %rsp,%rdx
  0x000000010f800346: and    $0xfffffffffffffff0,%rsp
  0x000000010f80034a: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f80034f: hlt    
[Deopt Handler Code]
  0x000000010f800350: movabs $0x10f800350,%r10  ;   {section_word}
  0x000000010f80035a: push   %r10
  0x000000010f80035c: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f800361: hlt    
  0x000000010f800362: hlt    
  0x000000010f800363: hlt    
  0x000000010f800364: hlt    
  0x000000010f800365: hlt    
  0x000000010f800366: hlt    
  0x000000010f800367: hlt    
Decoding compiled method 0x000000010f8004d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010eb36b00} 'add' '(Ljava/lang/Object;)Z' in 'java/util/ArrayList'
  # this:     rsi:rsi   = 'java/util/ArrayList'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  #           [sp+0xb0]  (sp of caller)
  0x000000010f800680: mov    0x8(%rsi),%r10d
  0x000000010f800684: shl    $0x3,%r10
  0x000000010f800688: cmp    %rax,%r10
  0x000000010f80068b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f800691: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f80069c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f8006a0: mov    %eax,-0x14000(%rsp)
  0x000000010f8006a7: push   %rbp
  0x000000010f8006a8: sub    $0xa0,%rsp
  0x000000010f8006af: movabs $0x10ed99f28,%rdi  ;   {metadata(method data for {method} {0x000000010eb36b00} 'add' '(Ljava/lang/Object;)Z' in 'java/util/ArrayList')}
  0x000000010f8006b9: mov    0xdc(%rdi),%ebx
  0x000000010f8006bf: add    $0x8,%ebx
  0x000000010f8006c2: mov    %ebx,0xdc(%rdi)
  0x000000010f8006c8: movabs $0x10eb36b00,%rdi  ;   {metadata({method} {0x000000010eb36b00} 'add' '(Ljava/lang/Object;)Z' in 'java/util/ArrayList')}
  0x000000010f8006d2: and    $0x1ff8,%ebx
  0x000000010f8006d8: cmp    $0x0,%ebx
  0x000000010f8006db: je     0x000000010f800a8a  ;*aload_0
                                                ; - java.util.ArrayList::add@0 (line 462)

  0x000000010f8006e1: mov    0x10(%rsi),%edi    ;*getfield size
                                                ; - java.util.ArrayList::add@2 (line 462)

  0x000000010f8006e4: inc    %edi
  0x000000010f8006e6: mov    %rsi,%rbx
  0x000000010f8006e9: movabs $0x10ed99f28,%rax  ;   {metadata(method data for {method} {0x000000010eb36b00} 'add' '(Ljava/lang/Object;)Z' in 'java/util/ArrayList')}
  0x000000010f8006f3: addq   $0x1,0x108(%rax)
  0x000000010f8006fb: movabs $0x10ed9a0b8,%rbx  ;   {metadata(method data for {method} {0x000000010eb36078} 'ensureCapacityInternal' '(I)V' in 'java/util/ArrayList')}
  0x000000010f800705: mov    0xdc(%rbx),%eax
  0x000000010f80070b: add    $0x8,%eax
  0x000000010f80070e: mov    %eax,0xdc(%rbx)
  0x000000010f800714: movabs $0x10eb36078,%rbx  ;   {metadata({method} {0x000000010eb36078} 'ensureCapacityInternal' '(I)V' in 'java/util/ArrayList')}
  0x000000010f80071e: and    $0x7ffff8,%eax
  0x000000010f800724: cmp    $0x0,%eax
  0x000000010f800727: je     0x000000010f800aa1
  0x000000010f80072d: mov    0x14(%rsi),%ebx
  0x000000010f800730: shl    $0x3,%rbx          ;*getfield elementData
                                                ; - java.util.ArrayList::ensureCapacityInternal@2 (line 231)
                                                ; - java.util.ArrayList::add@7 (line 462)

  0x000000010f800734: movabs $0x10ed9a0b8,%rax  ;   {metadata(method data for {method} {0x000000010eb36078} 'ensureCapacityInternal' '(I)V' in 'java/util/ArrayList')}
  0x000000010f80073e: addq   $0x1,0x108(%rax)
  0x000000010f800746: movabs $0x10ed99aa0,%rax  ;   {metadata(method data for {method} {0x000000010eb35fd8} 'calculateCapacity' '([Ljava/lang/Object;I)I' in 'java/util/ArrayList')}
  0x000000010f800750: mov    0xdc(%rax),%ecx
  0x000000010f800756: add    $0x8,%ecx
  0x000000010f800759: mov    %ecx,0xdc(%rax)
  0x000000010f80075f: movabs $0x10eb35fd8,%rax  ;   {metadata({method} {0x000000010eb35fd8} 'calculateCapacity' '([Ljava/lang/Object;I)I' in 'java/util/ArrayList')}
  0x000000010f800769: and    $0x7ffff8,%ecx
  0x000000010f80076f: cmp    $0x0,%ecx
  0x000000010f800772: je     0x000000010f800ab8
  0x000000010f800778: movabs $0x795586e48,%r10  ;   {oop(a 'java/lang/Object'[0] )}
  0x000000010f800782: cmp    %r10,%rbx
  0x000000010f800785: movabs $0x10ed99aa0,%rax  ;   {metadata(method data for {method} {0x000000010eb35fd8} 'calculateCapacity' '([Ljava/lang/Object;I)I' in 'java/util/ArrayList')}
  0x000000010f80078f: movabs $0x108,%rcx
  0x000000010f800799: jne    0x000000010f8007a9
  0x000000010f80079f: movabs $0x118,%rcx
  0x000000010f8007a9: mov    (%rax,%rcx,1),%r8
  0x000000010f8007ad: lea    0x1(%r8),%r8
  0x000000010f8007b1: mov    %r8,(%rax,%rcx,1)
  0x000000010f8007b5: jne    0x000000010f80084d  ;*if_acmpne
                                                ; - java.util.ArrayList::calculateCapacity@4 (line 224)
                                                ; - java.util.ArrayList::ensureCapacityInternal@6 (line 231)
                                                ; - java.util.ArrayList::add@7 (line 462)

  0x000000010f8007bb: movabs $0x10ed99aa0,%rax  ;   {metadata(method data for {method} {0x000000010eb35fd8} 'calculateCapacity' '([Ljava/lang/Object;I)I' in 'java/util/ArrayList')}
  0x000000010f8007c5: addq   $0x1,0x128(%rax)
  0x000000010f8007cd: movabs $0x10ec812e0,%rax  ;   {metadata(method data for {method} {0x000000010eb5b520} 'max' '(II)I' in 'java/lang/Math')}
  0x000000010f8007d7: mov    0xdc(%rax),%ecx
  0x000000010f8007dd: add    $0x8,%ecx
  0x000000010f8007e0: mov    %ecx,0xdc(%rax)
  0x000000010f8007e6: movabs $0x10eb5b520,%rax  ;   {metadata({method} {0x000000010eb5b520} 'max' '(II)I' in 'java/lang/Math')}
  0x000000010f8007f0: and    $0x7ffff8,%ecx
  0x000000010f8007f6: cmp    $0x0,%ecx
  0x000000010f8007f9: je     0x000000010f800acf
  0x000000010f8007ff: cmp    $0xa,%edi
  0x000000010f800802: movabs $0x10ec812e0,%rax  ;   {metadata(method data for {method} {0x000000010eb5b520} 'max' '(II)I' in 'java/lang/Math')}
  0x000000010f80080c: movabs $0x108,%rcx
  0x000000010f800816: jg     0x000000010f800826
  0x000000010f80081c: movabs $0x118,%rcx
  0x000000010f800826: mov    (%rax,%rcx,1),%r8
  0x000000010f80082a: lea    0x1(%r8),%r8
  0x000000010f80082e: mov    %r8,(%rax,%rcx,1)
  0x000000010f800832: jg     0x000000010f80084d  ;*if_icmplt
                                                ; - java.lang.Math::max@2 (line 1252)
                                                ; - java.util.ArrayList::calculateCapacity@10 (line 225)
                                                ; - java.util.ArrayList::ensureCapacityInternal@6 (line 231)
                                                ; - java.util.ArrayList::add@7 (line 462)

  0x000000010f800838: movabs $0x10ec812e0,%rdi  ;   {metadata(method data for {method} {0x000000010eb5b520} 'max' '(II)I' in 'java/lang/Math')}
  0x000000010f800842: incl   0x128(%rdi)
  0x000000010f800848: mov    $0xa,%edi          ;*goto
                                                ; - java.lang.Math::max@6 (line 1252)
                                                ; - java.util.ArrayList::calculateCapacity@10 (line 225)
                                                ; - java.util.ArrayList::ensureCapacityInternal@6 (line 231)
                                                ; - java.util.ArrayList::add@7 (line 462)

  0x000000010f80084d: mov    %rsi,%rax
  0x000000010f800850: movabs $0x10ed9a0b8,%rcx  ;   {metadata(method data for {method} {0x000000010eb36078} 'ensureCapacityInternal' '(I)V' in 'java/util/ArrayList')}
  0x000000010f80085a: addq   $0x1,0x118(%rcx)
  0x000000010f800862: movabs $0x10ed99c20,%rax  ;   {metadata(method data for {method} {0x000000010eb36128} 'ensureExplicitCapacity' '(I)V' in 'java/util/ArrayList')}
  0x000000010f80086c: mov    0xdc(%rax),%ecx
  0x000000010f800872: add    $0x8,%ecx
  0x000000010f800875: mov    %ecx,0xdc(%rax)
  0x000000010f80087b: movabs $0x10eb36128,%rax  ;   {metadata({method} {0x000000010eb36128} 'ensureExplicitCapacity' '(I)V' in 'java/util/ArrayList')}
  0x000000010f800885: and    $0x7ffff8,%ecx
  0x000000010f80088b: cmp    $0x0,%ecx
  0x000000010f80088e: je     0x000000010f800ae6
  0x000000010f800894: mov    0xc(%rsi),%eax     ;*getfield modCount
                                                ; - java.util.ArrayList::ensureExplicitCapacity@2 (line 235)
                                                ; - java.util.ArrayList::ensureCapacityInternal@9 (line 231)
                                                ; - java.util.ArrayList::add@7 (line 462)

  0x000000010f800897: inc    %eax
  0x000000010f800899: mov    %eax,0xc(%rsi)     ;*putfield modCount
                                                ; - java.util.ArrayList::ensureExplicitCapacity@7 (line 235)
                                                ; - java.util.ArrayList::ensureCapacityInternal@9 (line 231)
                                                ; - java.util.ArrayList::add@7 (line 462)

  0x000000010f80089c: mov    0xc(%rbx),%ebx     ;*arraylength
                                                ; - java.util.ArrayList::ensureExplicitCapacity@15 (line 238)
                                                ; - java.util.ArrayList::ensureCapacityInternal@9 (line 231)
                                                ; - java.util.ArrayList::add@7 (line 462)
                                                ; implicit exception: dispatches to 0x000000010f800afd
  0x000000010f80089f: mov    %rdi,%rax
  0x000000010f8008a2: sub    %ebx,%eax
  0x000000010f8008a4: cmp    $0x0,%eax
  0x000000010f8008a7: movabs $0x10ed99c20,%rbx  ;   {metadata(method data for {method} {0x000000010eb36128} 'ensureExplicitCapacity' '(I)V' in 'java/util/ArrayList')}
  0x000000010f8008b1: movabs $0x108,%rax
  0x000000010f8008bb: jle    0x000000010f8008cb
  0x000000010f8008c1: movabs $0x118,%rax
  0x000000010f8008cb: mov    (%rbx,%rax,1),%rcx
  0x000000010f8008cf: lea    0x1(%rcx),%rcx
  0x000000010f8008d3: mov    %rcx,(%rbx,%rax,1)
  0x000000010f8008d7: mov    %rdx,0x88(%rsp)
  0x000000010f8008df: jg     0x000000010f8008f2  ;*ifle
                                                ; - java.util.ArrayList::ensureExplicitCapacity@17 (line 238)
                                                ; - java.util.ArrayList::ensureCapacityInternal@9 (line 231)
                                                ; - java.util.ArrayList::add@7 (line 462)

  0x000000010f8008e5: mov    %rsi,0x80(%rsp)
  0x000000010f8008ed: jmpq   0x000000010f800924  ;*return
                                                ; - java.util.ArrayList::ensureExplicitCapacity@25 (line 240)
                                                ; - java.util.ArrayList::ensureCapacityInternal@9 (line 231)
                                                ; - java.util.ArrayList::add@7 (line 462)

  0x000000010f8008f2: mov    %rsi,%rbx
  0x000000010f8008f5: movabs $0x10ed99c20,%rax  ;   {metadata(method data for {method} {0x000000010eb36128} 'ensureExplicitCapacity' '(I)V' in 'java/util/ArrayList')}
  0x000000010f8008ff: addq   $0x1,0x128(%rax)
  0x000000010f800907: mov    %rdi,%rdx
  0x000000010f80090a: mov    %rsi,%rdi
  0x000000010f80090d: mov    %rdi,%rsi          ;*invokespecial grow
                                                ; - java.util.ArrayList::ensureExplicitCapacity@22 (line 239)
                                                ; - java.util.ArrayList::ensureCapacityInternal@9 (line 231)
                                                ; - java.util.ArrayList::add@7 (line 462)

  0x000000010f800910: mov    %rdi,0x80(%rsp)
  0x000000010f800918: nop
  0x000000010f800919: nop
  0x000000010f80091a: nop
  0x000000010f80091b: nop
  0x000000010f80091c: nop
  0x000000010f80091d: nop
  0x000000010f80091e: nop
  0x000000010f80091f: callq  0x000000010f7170a0  ; OopMap{[128]=Oop [136]=Oop off=676}
                                                ;*invokespecial grow
                                                ; - java.util.ArrayList::ensureExplicitCapacity@22 (line 239)
                                                ; - java.util.ArrayList::ensureCapacityInternal@9 (line 231)
                                                ; - java.util.ArrayList::add@7 (line 462)
                                                ;   {optimized virtual_call}
  0x000000010f800924: mov    0x88(%rsp),%rdx
  0x000000010f80092c: mov    0x80(%rsp),%rsi
  0x000000010f800934: mov    0x14(%rsi),%eax
  0x000000010f800937: shl    $0x3,%rax          ;*getfield elementData
                                                ; - java.util.ArrayList::add@11 (line 463)

  0x000000010f80093b: mov    0x10(%rsi),%edi    ;*getfield size
                                                ; - java.util.ArrayList::add@16 (line 463)

  0x000000010f80093e: mov    %rdi,%rbx
  0x000000010f800941: inc    %ebx
  0x000000010f800943: mov    %ebx,0x10(%rsi)    ;*putfield size
                                                ; - java.util.ArrayList::add@22 (line 463)

  0x000000010f800946: movslq %edi,%rsi
  0x000000010f800949: lea    0x10(%rax,%rsi,4),%rsi
  0x000000010f80094e: cmp    0xc(%rax),%edi     ; implicit exception: dispatches to 0x000000010f800b02
  0x000000010f800951: jae    0x000000010f800b0c
  0x000000010f800957: cmp    $0x0,%rdx
  0x000000010f80095b: jne    0x000000010f800976
  0x000000010f80095d: movabs $0x10ed99f28,%rdi  ;   {metadata(method data for {method} {0x000000010eb36b00} 'add' '(Ljava/lang/Object;)Z' in 'java/util/ArrayList')}
  0x000000010f800967: orl    $0x100,0x110(%rdi)
  0x000000010f800971: jmpq   0x000000010f800a5a
  0x000000010f800976: mov    0x8(%rax),%eax     ; implicit exception: dispatches to 0x000000010f800b15
  0x000000010f800979: shl    $0x3,%rax
  0x000000010f80097d: mov    0x8(%rdx),%edi
  0x000000010f800980: shl    $0x3,%rdi
  0x000000010f800984: mov    0xe8(%rax),%rax
  0x000000010f80098b: cmp    %rax,%rdi
  0x000000010f80098e: je     0x000000010f8009bc
  0x000000010f800994: mov    0xc(%rax),%ebx
  0x000000010f800997: cmp    (%rdi,%rbx,1),%rax
  0x000000010f80099b: je     0x000000010f8009bc
  0x000000010f8009a1: cmp    $0x18,%ebx
  0x000000010f8009a4: jne    0x000000010f800a43
  0x000000010f8009aa: push   %rdi
  0x000000010f8009ab: push   %rax
  0x000000010f8009ac: callq  0x000000010f7cf8e0  ;   {runtime_call}
  0x000000010f8009b1: pop    %rdi
  0x000000010f8009b2: pop    %rax
  0x000000010f8009b3: cmp    $0x0,%eax
  0x000000010f8009b6: je     0x000000010f800a43
  0x000000010f8009bc: movabs $0x10ed99f28,%rdi  ;   {metadata(method data for {method} {0x000000010eb36b00} 'add' '(Ljava/lang/Object;)Z' in 'java/util/ArrayList')}
  0x000000010f8009c6: mov    0x8(%rdx),%eax
  0x000000010f8009c9: shl    $0x3,%rax
  0x000000010f8009cd: cmp    0x120(%rdi),%rax
  0x000000010f8009d4: jne    0x000000010f8009e3
  0x000000010f8009d6: addq   $0x1,0x128(%rdi)
  0x000000010f8009de: jmpq   0x000000010f800a5a
  0x000000010f8009e3: cmp    0x130(%rdi),%rax
  0x000000010f8009ea: jne    0x000000010f8009f9
  0x000000010f8009ec: addq   $0x1,0x138(%rdi)
  0x000000010f8009f4: jmpq   0x000000010f800a5a
  0x000000010f8009f9: cmpq   $0x0,0x120(%rdi)
  0x000000010f800a04: jne    0x000000010f800a1d
  0x000000010f800a06: mov    %rax,0x120(%rdi)
  0x000000010f800a0d: movq   $0x1,0x128(%rdi)
  0x000000010f800a18: jmpq   0x000000010f800a5a
  0x000000010f800a1d: cmpq   $0x0,0x130(%rdi)
  0x000000010f800a28: jne    0x000000010f800a41
  0x000000010f800a2a: mov    %rax,0x130(%rdi)
  0x000000010f800a31: movq   $0x1,0x138(%rdi)
  0x000000010f800a3c: jmpq   0x000000010f800a5a
  0x000000010f800a41: jmp    0x000000010f800a5a
  0x000000010f800a43: movabs $0x10ed99f28,%rdi  ;   {metadata(method data for {method} {0x000000010eb36b00} 'add' '(Ljava/lang/Object;)Z' in 'java/util/ArrayList')}
  0x000000010f800a4d: subq   $0x1,0x118(%rdi)
  0x000000010f800a55: jmpq   0x000000010f800b1a
  0x000000010f800a5a: mov    %rdx,%r10
  0x000000010f800a5d: shr    $0x3,%r10
  0x000000010f800a61: mov    %r10d,(%rsi)
  0x000000010f800a64: shr    $0x9,%rsi
  0x000000010f800a68: movabs $0x1065b9000,%rax
  0x000000010f800a72: movb   $0x0,(%rsi,%rax,1)  ;*aastore
                                                ; - java.util.ArrayList::add@26 (line 463)

  0x000000010f800a76: mov    $0x1,%eax
  0x000000010f800a7b: add    $0xa0,%rsp
  0x000000010f800a82: pop    %rbp
  0x000000010f800a83: test   %eax,-0x8d65989(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f800a89: retq   
  0x000000010f800a8a: mov    %rdi,0x8(%rsp)
  0x000000010f800a8f: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f800a97: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop rdx=Oop off=1052}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::add@-1 (line 462)
                                                ;   {runtime_call}
  0x000000010f800a9c: jmpq   0x000000010f8006e1
  0x000000010f800aa1: mov    %rbx,0x8(%rsp)
  0x000000010f800aa6: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f800aae: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop rdx=Oop off=1075}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::ensureCapacityInternal@-1 (line 231)
                                                ; - java.util.ArrayList::add@7 (line 462)
                                                ;   {runtime_call}
  0x000000010f800ab3: jmpq   0x000000010f80072d
  0x000000010f800ab8: mov    %rax,0x8(%rsp)
  0x000000010f800abd: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f800ac5: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop rdx=Oop rbx=Oop off=1098}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::calculateCapacity@-1 (line 224)
                                                ; - java.util.ArrayList::ensureCapacityInternal@6 (line 231)
                                                ; - java.util.ArrayList::add@7 (line 462)
                                                ;   {runtime_call}
  0x000000010f800aca: jmpq   0x000000010f800778
  0x000000010f800acf: mov    %rax,0x8(%rsp)
  0x000000010f800ad4: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f800adc: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop rdx=Oop rbx=Oop off=1121}
                                                ;*synchronization entry
                                                ; - java.lang.Math::max@-1 (line 1252)
                                                ; - java.util.ArrayList::calculateCapacity@10 (line 225)
                                                ; - java.util.ArrayList::ensureCapacityInternal@6 (line 231)
                                                ; - java.util.ArrayList::add@7 (line 462)
                                                ;   {runtime_call}
  0x000000010f800ae1: jmpq   0x000000010f8007ff
  0x000000010f800ae6: mov    %rax,0x8(%rsp)
  0x000000010f800aeb: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f800af3: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop rdx=Oop rbx=Oop off=1144}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::ensureExplicitCapacity@-1 (line 235)
                                                ; - java.util.ArrayList::ensureCapacityInternal@9 (line 231)
                                                ; - java.util.ArrayList::add@7 (line 462)
                                                ;   {runtime_call}
  0x000000010f800af8: jmpq   0x000000010f800894
  0x000000010f800afd: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop rdx=Oop off=1154}
                                                ;*arraylength
                                                ; - java.util.ArrayList::ensureExplicitCapacity@15 (line 238)
                                                ; - java.util.ArrayList::ensureCapacityInternal@9 (line 231)
                                                ; - java.util.ArrayList::add@7 (line 462)
                                                ;   {runtime_call}
  0x000000010f800b02: callq  0x000000010f7cd0c0  ; OopMap{rdx=Oop rax=Oop off=1159}
                                                ;*aastore
                                                ; - java.util.ArrayList::add@26 (line 463)
                                                ;   {runtime_call}
  0x000000010f800b07: callq  0x000000010f7cd0c0  ; OopMap{rdx=Oop rax=Oop off=1164}
                                                ;*aastore
                                                ; - java.util.ArrayList::add@26 (line 463)
                                                ;   {runtime_call}
  0x000000010f800b0c: mov    %rdi,(%rsp)
  0x000000010f800b10: callq  0x000000010f7cca00  ; OopMap{rdx=Oop rax=Oop off=1173}
                                                ;*aastore
                                                ; - java.util.ArrayList::add@26 (line 463)
                                                ;   {runtime_call}
  0x000000010f800b15: callq  0x000000010f7cd0c0  ; OopMap{rdx=Oop off=1178}
                                                ;*aastore
                                                ; - java.util.ArrayList::add@26 (line 463)
                                                ;   {runtime_call}
  0x000000010f800b1a: mov    %rdx,(%rsp)
  0x000000010f800b1e: callq  0x000000010f7cf240  ; OopMap{rdx=Oop off=1187}
                                                ;*aastore
                                                ; - java.util.ArrayList::add@26 (line 463)
                                                ;   {runtime_call}
  0x000000010f800b23: nop
  0x000000010f800b24: nop
  0x000000010f800b25: mov    0x2a8(%r15),%rax
  0x000000010f800b2c: movabs $0x0,%r10
  0x000000010f800b36: mov    %r10,0x2a8(%r15)
  0x000000010f800b3d: movabs $0x0,%r10
  0x000000010f800b47: mov    %r10,0x2b0(%r15)
  0x000000010f800b4e: add    $0xa0,%rsp
  0x000000010f800b55: pop    %rbp
  0x000000010f800b56: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f800b5b: hlt    
  0x000000010f800b5c: hlt    
  0x000000010f800b5d: hlt    
  0x000000010f800b5e: hlt    
  0x000000010f800b5f: hlt    
[Stub Code]
  0x000000010f800b60: nop                       ;   {no_reloc}
  0x000000010f800b61: nop
  0x000000010f800b62: nop
  0x000000010f800b63: nop
  0x000000010f800b64: nop
  0x000000010f800b65: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f800b6f: jmpq   0x000000010f800b6f  ;   {runtime_call}
[Exception Handler]
  0x000000010f800b74: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f800b79: mov    %rsp,-0x28(%rsp)
  0x000000010f800b7e: sub    $0x80,%rsp
  0x000000010f800b85: mov    %rax,0x78(%rsp)
  0x000000010f800b8a: mov    %rcx,0x70(%rsp)
  0x000000010f800b8f: mov    %rdx,0x68(%rsp)
  0x000000010f800b94: mov    %rbx,0x60(%rsp)
  0x000000010f800b99: mov    %rbp,0x50(%rsp)
  0x000000010f800b9e: mov    %rsi,0x48(%rsp)
  0x000000010f800ba3: mov    %rdi,0x40(%rsp)
  0x000000010f800ba8: mov    %r8,0x38(%rsp)
  0x000000010f800bad: mov    %r9,0x30(%rsp)
  0x000000010f800bb2: mov    %r10,0x28(%rsp)
  0x000000010f800bb7: mov    %r11,0x20(%rsp)
  0x000000010f800bbc: mov    %r12,0x18(%rsp)
  0x000000010f800bc1: mov    %r13,0x10(%rsp)
  0x000000010f800bc6: mov    %r14,0x8(%rsp)
  0x000000010f800bcb: mov    %r15,(%rsp)
  0x000000010f800bcf: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f800bd9: movabs $0x10f800b79,%rsi  ;   {internal_word}
  0x000000010f800be3: mov    %rsp,%rdx
  0x000000010f800be6: and    $0xfffffffffffffff0,%rsp
  0x000000010f800bea: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f800bef: hlt    
[Deopt Handler Code]
  0x000000010f800bf0: movabs $0x10f800bf0,%r10  ;   {section_word}
  0x000000010f800bfa: push   %r10
  0x000000010f800bfc: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f800c01: hlt    
  0x000000010f800c02: hlt    
  0x000000010f800c03: hlt    
  0x000000010f800c04: hlt    
  0x000000010f800c05: hlt    
  0x000000010f800c06: hlt    
  0x000000010f800c07: hlt    
Decoding compiled method 0x000000010f800f90:
Code:
[Entry Point]
  # {method} {0x000000010ea7e898} 'nanoTime' '()J' in 'java/lang/System'
  #           [sp+0x50]  (sp of caller)
  0x000000010f801100: mov    0x8(%rsi),%r10d
  0x000000010f801104: shl    $0x3,%r10
  0x000000010f801108: cmp    %r10,%rax
  0x000000010f80110b: je     0x000000010f801118
  0x000000010f801111: jmpq   0x000000010f716e60  ;   {runtime_call}
  0x000000010f801116: xchg   %ax,%ax
[Verified Entry Point]
  0x000000010f801118: mov    %eax,-0x14000(%rsp)
  0x000000010f80111f: push   %rbp
  0x000000010f801120: mov    %rsp,%rbp
  0x000000010f801123: sub    $0x40,%rsp
  0x000000010f801127: movabs $0x795580c78,%r14  ;   {oop(a 'java/lang/Class' = 'java/lang/System')}
  0x000000010f801131: mov    %r14,0x30(%rsp)
  0x000000010f801136: lea    0x30(%rsp),%r14
  0x000000010f80113b: mov    %r14,%rsi          ; OopMap{[48]=Oop off=62}
  0x000000010f80113e: movabs $0x10f80113e,%r10  ;   {section_word}
  0x000000010f801148: mov    %r10,0x1e0(%r15)
  0x000000010f80114f: mov    %rsp,0x1d8(%r15)
  0x000000010f801156: cmpb   $0x0,-0x5f0eda3(%rip)        # 0x00000001098f23ba
                                                ;   {external_word}
  0x000000010f80115d: je     0x000000010f801195
  0x000000010f801163: push   %rsi
  0x000000010f801164: movabs $0x10ea7e898,%rsi  ;   {metadata({method} {0x000000010ea7e898} 'nanoTime' '()J' in 'java/lang/System')}
  0x000000010f80116e: mov    %r15,%rdi
  0x000000010f801171: test   $0xf,%esp
  0x000000010f801177: je     0x000000010f80118f
  0x000000010f80117d: sub    $0x8,%rsp
  0x000000010f801181: callq  0x00000001094ed064  ;   {runtime_call}
  0x000000010f801186: add    $0x8,%rsp
  0x000000010f80118a: jmpq   0x000000010f801194
  0x000000010f80118f: callq  0x00000001094ed064  ;   {runtime_call}
  0x000000010f801194: pop    %rsi
  0x000000010f801195: lea    0x1f8(%r15),%rdi
  0x000000010f80119c: movl   $0x4,0x270(%r15)
  0x000000010f8011a7: callq  0x00000001093531c2  ;   {runtime_call}
  0x000000010f8011ac: vzeroupper 
  0x000000010f8011af: movl   $0x5,0x270(%r15)
  0x000000010f8011ba: lock addl $0x0,(%rsp)
  0x000000010f8011bf: cmpl   $0x0,-0x5f04459(%rip)        # 0x00000001098fcd70
                                                ;   {external_word}
  0x000000010f8011c9: jne    0x000000010f8011dd
  0x000000010f8011cf: cmpl   $0x0,0x30(%r15)
  0x000000010f8011d7: je     0x000000010f8011fe
  0x000000010f8011dd: mov    %rax,-0x8(%rbp)
  0x000000010f8011e1: mov    %r15,%rdi
  0x000000010f8011e4: mov    %rsp,%r12
  0x000000010f8011e7: sub    $0x0,%rsp
  0x000000010f8011eb: and    $0xfffffffffffffff0,%rsp
  0x000000010f8011ef: callq  0x000000010956fe1e  ;   {runtime_call}
  0x000000010f8011f4: mov    %r12,%rsp
  0x000000010f8011f7: xor    %r12,%r12
  0x000000010f8011fa: mov    -0x8(%rbp),%rax
  0x000000010f8011fe: movl   $0x8,0x270(%r15)
  0x000000010f801209: cmpl   $0x1,0x29c(%r15)
  0x000000010f801214: je     0x000000010f8012a4
  0x000000010f80121a: cmpb   $0x0,-0x5f0ee67(%rip)        # 0x00000001098f23ba
                                                ;   {external_word}
  0x000000010f801221: je     0x000000010f80125f
  0x000000010f801227: mov    %rax,-0x8(%rbp)
  0x000000010f80122b: movabs $0x10ea7e898,%rsi  ;   {metadata({method} {0x000000010ea7e898} 'nanoTime' '()J' in 'java/lang/System')}
  0x000000010f801235: mov    %r15,%rdi
  0x000000010f801238: test   $0xf,%esp
  0x000000010f80123e: je     0x000000010f801256
  0x000000010f801244: sub    $0x8,%rsp
  0x000000010f801248: callq  0x00000001094ecfd6  ;   {runtime_call}
  0x000000010f80124d: add    $0x8,%rsp
  0x000000010f801251: jmpq   0x000000010f80125b
  0x000000010f801256: callq  0x00000001094ecfd6  ;   {runtime_call}
  0x000000010f80125b: mov    -0x8(%rbp),%rax
  0x000000010f80125f: movabs $0x0,%r10
  0x000000010f801269: mov    %r10,0x1d8(%r15)
  0x000000010f801270: movabs $0x0,%r10
  0x000000010f80127a: mov    %r10,0x1e0(%r15)
  0x000000010f801281: mov    0x38(%r15),%rcx
  0x000000010f801285: movl   $0x0,0x100(%rcx)
  0x000000010f80128f: leaveq 
  0x000000010f801290: cmpq   $0x0,0x8(%r15)
  0x000000010f801298: jne    0x000000010f80129f
  0x000000010f80129e: retq   
  0x000000010f80129f: jmpq   Stub::forward exception  ;   {runtime_call}
  0x000000010f8012a4: mov    %rax,-0x8(%rbp)
  0x000000010f8012a8: mov    %rsp,%r12
  0x000000010f8012ab: sub    $0x0,%rsp
  0x000000010f8012af: and    $0xfffffffffffffff0,%rsp
  0x000000010f8012b3: callq  0x00000001094ead1c  ;   {runtime_call}
  0x000000010f8012b8: mov    %r12,%rsp
  0x000000010f8012bb: xor    %r12,%r12
  0x000000010f8012be: mov    -0x8(%rbp),%rax
  0x000000010f8012c2: jmpq   0x000000010f80121a
  0x000000010f8012c7: hlt    
Decoding compiled method 0x000000010f801310:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010ec15238} 'spread' '(I)I' in 'java/util/concurrent/ConcurrentHashMap'
  # parm0:    rsi       = int
  #           [sp+0x40]  (sp of caller)
  0x000000010f801460: mov    %eax,-0x14000(%rsp)
  0x000000010f801467: push   %rbp
  0x000000010f801468: sub    $0x30,%rsp
  0x000000010f80146c: movabs $0x10ed9a268,%rax  ;   {metadata(method data for {method} {0x000000010ec15238} 'spread' '(I)I' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f801476: mov    0xdc(%rax),%edi
  0x000000010f80147c: add    $0x8,%edi
  0x000000010f80147f: mov    %edi,0xdc(%rax)
  0x000000010f801485: movabs $0x10ec15238,%rax  ;   {metadata({method} {0x000000010ec15238} 'spread' '(I)I' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f80148f: and    $0x1ff8,%edi
  0x000000010f801495: cmp    $0x0,%edi
  0x000000010f801498: je     0x000000010f8014b9  ;*iload_0
                                                ; - java.util.concurrent.ConcurrentHashMap::spread@0 (line 685)

  0x000000010f80149e: mov    %rsi,%rax
  0x000000010f8014a1: shr    $0x10,%eax
  0x000000010f8014a4: xor    %rsi,%rax
  0x000000010f8014a7: and    $0x7fffffff,%eax
  0x000000010f8014ad: add    $0x30,%rsp
  0x000000010f8014b1: pop    %rbp
  0x000000010f8014b2: test   %eax,-0x8d663b8(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f8014b8: retq   
  0x000000010f8014b9: mov    %rax,0x8(%rsp)
  0x000000010f8014be: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f8014c6: callq  0x000000010f7d1a20  ; OopMap{off=107}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::spread@-1 (line 685)
                                                ;   {runtime_call}
  0x000000010f8014cb: jmp    0x000000010f80149e
  0x000000010f8014cd: nop
  0x000000010f8014ce: nop
  0x000000010f8014cf: mov    0x2a8(%r15),%rax
  0x000000010f8014d6: movabs $0x0,%r10
  0x000000010f8014e0: mov    %r10,0x2a8(%r15)
  0x000000010f8014e7: movabs $0x0,%r10
  0x000000010f8014f1: mov    %r10,0x2b0(%r15)
  0x000000010f8014f8: add    $0x30,%rsp
  0x000000010f8014fc: pop    %rbp
  0x000000010f8014fd: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f801502: hlt    
  0x000000010f801503: hlt    
  0x000000010f801504: hlt    
  0x000000010f801505: hlt    
  0x000000010f801506: hlt    
  0x000000010f801507: hlt    
  0x000000010f801508: hlt    
  0x000000010f801509: hlt    
  0x000000010f80150a: hlt    
  0x000000010f80150b: hlt    
  0x000000010f80150c: hlt    
  0x000000010f80150d: hlt    
  0x000000010f80150e: hlt    
  0x000000010f80150f: hlt    
  0x000000010f801510: hlt    
  0x000000010f801511: hlt    
  0x000000010f801512: hlt    
  0x000000010f801513: hlt    
  0x000000010f801514: hlt    
  0x000000010f801515: hlt    
  0x000000010f801516: hlt    
  0x000000010f801517: hlt    
  0x000000010f801518: hlt    
  0x000000010f801519: hlt    
  0x000000010f80151a: hlt    
  0x000000010f80151b: hlt    
  0x000000010f80151c: hlt    
  0x000000010f80151d: hlt    
  0x000000010f80151e: hlt    
  0x000000010f80151f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f801520: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f801525: mov    %rsp,-0x28(%rsp)
  0x000000010f80152a: sub    $0x80,%rsp
  0x000000010f801531: mov    %rax,0x78(%rsp)
  0x000000010f801536: mov    %rcx,0x70(%rsp)
  0x000000010f80153b: mov    %rdx,0x68(%rsp)
  0x000000010f801540: mov    %rbx,0x60(%rsp)
  0x000000010f801545: mov    %rbp,0x50(%rsp)
  0x000000010f80154a: mov    %rsi,0x48(%rsp)
  0x000000010f80154f: mov    %rdi,0x40(%rsp)
  0x000000010f801554: mov    %r8,0x38(%rsp)
  0x000000010f801559: mov    %r9,0x30(%rsp)
  0x000000010f80155e: mov    %r10,0x28(%rsp)
  0x000000010f801563: mov    %r11,0x20(%rsp)
  0x000000010f801568: mov    %r12,0x18(%rsp)
  0x000000010f80156d: mov    %r13,0x10(%rsp)
  0x000000010f801572: mov    %r14,0x8(%rsp)
  0x000000010f801577: mov    %r15,(%rsp)
  0x000000010f80157b: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f801585: movabs $0x10f801525,%rsi  ;   {internal_word}
  0x000000010f80158f: mov    %rsp,%rdx
  0x000000010f801592: and    $0xfffffffffffffff0,%rsp
  0x000000010f801596: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f80159b: hlt    
[Deopt Handler Code]
  0x000000010f80159c: movabs $0x10f80159c,%r10  ;   {section_word}
  0x000000010f8015a6: push   %r10
  0x000000010f8015a8: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f8015ad: hlt    
  0x000000010f8015ae: hlt    
  0x000000010f8015af: hlt    
Decoding compiled method 0x000000010f801650:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010eb36078} 'ensureCapacityInternal' '(I)V' in 'java/util/ArrayList'
  # this:     rsi:rsi   = 'java/util/ArrayList'
  # parm0:    rdx       = int
  #           [sp+0x70]  (sp of caller)
  0x000000010f8017e0: mov    0x8(%rsi),%r10d
  0x000000010f8017e4: shl    $0x3,%r10
  0x000000010f8017e8: cmp    %rax,%r10
  0x000000010f8017eb: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f8017f1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f8017fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f801800: mov    %eax,-0x14000(%rsp)
  0x000000010f801807: push   %rbp
  0x000000010f801808: sub    $0x60,%rsp
  0x000000010f80180c: movabs $0x10ed9a0b8,%rdi  ;   {metadata(method data for {method} {0x000000010eb36078} 'ensureCapacityInternal' '(I)V' in 'java/util/ArrayList')}
  0x000000010f801816: mov    0xdc(%rdi),%ebx
  0x000000010f80181c: add    $0x8,%ebx
  0x000000010f80181f: mov    %ebx,0xdc(%rdi)
  0x000000010f801825: movabs $0x10eb36078,%rdi  ;   {metadata({method} {0x000000010eb36078} 'ensureCapacityInternal' '(I)V' in 'java/util/ArrayList')}
  0x000000010f80182f: and    $0x1ff8,%ebx
  0x000000010f801835: cmp    $0x0,%ebx
  0x000000010f801838: je     0x000000010f801a18  ;*aload_0
                                                ; - java.util.ArrayList::ensureCapacityInternal@0 (line 231)

  0x000000010f80183e: mov    0x14(%rsi),%edi
  0x000000010f801841: shl    $0x3,%rdi          ;*getfield elementData
                                                ; - java.util.ArrayList::ensureCapacityInternal@2 (line 231)

  0x000000010f801845: movabs $0x10ed9a0b8,%rbx  ;   {metadata(method data for {method} {0x000000010eb36078} 'ensureCapacityInternal' '(I)V' in 'java/util/ArrayList')}
  0x000000010f80184f: addq   $0x1,0x108(%rbx)
  0x000000010f801857: movabs $0x10ed99aa0,%rbx  ;   {metadata(method data for {method} {0x000000010eb35fd8} 'calculateCapacity' '([Ljava/lang/Object;I)I' in 'java/util/ArrayList')}
  0x000000010f801861: mov    0xdc(%rbx),%eax
  0x000000010f801867: add    $0x8,%eax
  0x000000010f80186a: mov    %eax,0xdc(%rbx)
  0x000000010f801870: movabs $0x10eb35fd8,%rbx  ;   {metadata({method} {0x000000010eb35fd8} 'calculateCapacity' '([Ljava/lang/Object;I)I' in 'java/util/ArrayList')}
  0x000000010f80187a: and    $0x7ffff8,%eax
  0x000000010f801880: cmp    $0x0,%eax
  0x000000010f801883: je     0x000000010f801a2f
  0x000000010f801889: movabs $0x795586e48,%r10  ;   {oop(a 'java/lang/Object'[0] )}
  0x000000010f801893: cmp    %r10,%rdi
  0x000000010f801896: movabs $0x10ed99aa0,%rbx  ;   {metadata(method data for {method} {0x000000010eb35fd8} 'calculateCapacity' '([Ljava/lang/Object;I)I' in 'java/util/ArrayList')}
  0x000000010f8018a0: movabs $0x108,%rax
  0x000000010f8018aa: jne    0x000000010f8018ba
  0x000000010f8018b0: movabs $0x118,%rax
  0x000000010f8018ba: mov    (%rbx,%rax,1),%rcx
  0x000000010f8018be: lea    0x1(%rcx),%rcx
  0x000000010f8018c2: mov    %rcx,(%rbx,%rax,1)
  0x000000010f8018c6: jne    0x000000010f80195e  ;*if_acmpne
                                                ; - java.util.ArrayList::calculateCapacity@4 (line 224)
                                                ; - java.util.ArrayList::ensureCapacityInternal@6 (line 231)

  0x000000010f8018cc: movabs $0x10ed99aa0,%rbx  ;   {metadata(method data for {method} {0x000000010eb35fd8} 'calculateCapacity' '([Ljava/lang/Object;I)I' in 'java/util/ArrayList')}
  0x000000010f8018d6: addq   $0x1,0x128(%rbx)
  0x000000010f8018de: movabs $0x10ec812e0,%rbx  ;   {metadata(method data for {method} {0x000000010eb5b520} 'max' '(II)I' in 'java/lang/Math')}
  0x000000010f8018e8: mov    0xdc(%rbx),%eax
  0x000000010f8018ee: add    $0x8,%eax
  0x000000010f8018f1: mov    %eax,0xdc(%rbx)
  0x000000010f8018f7: movabs $0x10eb5b520,%rbx  ;   {metadata({method} {0x000000010eb5b520} 'max' '(II)I' in 'java/lang/Math')}
  0x000000010f801901: and    $0x7ffff8,%eax
  0x000000010f801907: cmp    $0x0,%eax
  0x000000010f80190a: je     0x000000010f801a46
  0x000000010f801910: cmp    $0xa,%edx
  0x000000010f801913: movabs $0x10ec812e0,%rbx  ;   {metadata(method data for {method} {0x000000010eb5b520} 'max' '(II)I' in 'java/lang/Math')}
  0x000000010f80191d: movabs $0x108,%rax
  0x000000010f801927: jg     0x000000010f801937
  0x000000010f80192d: movabs $0x118,%rax
  0x000000010f801937: mov    (%rbx,%rax,1),%rcx
  0x000000010f80193b: lea    0x1(%rcx),%rcx
  0x000000010f80193f: mov    %rcx,(%rbx,%rax,1)
  0x000000010f801943: jg     0x000000010f80195e  ;*if_icmplt
                                                ; - java.lang.Math::max@2 (line 1252)
                                                ; - java.util.ArrayList::calculateCapacity@10 (line 225)
                                                ; - java.util.ArrayList::ensureCapacityInternal@6 (line 231)

  0x000000010f801949: movabs $0x10ec812e0,%rdx  ;   {metadata(method data for {method} {0x000000010eb5b520} 'max' '(II)I' in 'java/lang/Math')}
  0x000000010f801953: incl   0x128(%rdx)
  0x000000010f801959: mov    $0xa,%edx          ;*goto
                                                ; - java.lang.Math::max@6 (line 1252)
                                                ; - java.util.ArrayList::calculateCapacity@10 (line 225)
                                                ; - java.util.ArrayList::ensureCapacityInternal@6 (line 231)

  0x000000010f80195e: mov    %rsi,%rbx
  0x000000010f801961: movabs $0x10ed9a0b8,%rax  ;   {metadata(method data for {method} {0x000000010eb36078} 'ensureCapacityInternal' '(I)V' in 'java/util/ArrayList')}
  0x000000010f80196b: addq   $0x1,0x118(%rax)
  0x000000010f801973: movabs $0x10ed99c20,%rbx  ;   {metadata(method data for {method} {0x000000010eb36128} 'ensureExplicitCapacity' '(I)V' in 'java/util/ArrayList')}
  0x000000010f80197d: mov    0xdc(%rbx),%eax
  0x000000010f801983: add    $0x8,%eax
  0x000000010f801986: mov    %eax,0xdc(%rbx)
  0x000000010f80198c: movabs $0x10eb36128,%rbx  ;   {metadata({method} {0x000000010eb36128} 'ensureExplicitCapacity' '(I)V' in 'java/util/ArrayList')}
  0x000000010f801996: and    $0x7ffff8,%eax
  0x000000010f80199c: cmp    $0x0,%eax
  0x000000010f80199f: je     0x000000010f801a5d
  0x000000010f8019a5: mov    0xc(%rsi),%ebx     ;*getfield modCount
                                                ; - java.util.ArrayList::ensureExplicitCapacity@2 (line 235)
                                                ; - java.util.ArrayList::ensureCapacityInternal@9 (line 231)

  0x000000010f8019a8: inc    %ebx
  0x000000010f8019aa: mov    %ebx,0xc(%rsi)     ;*putfield modCount
                                                ; - java.util.ArrayList::ensureExplicitCapacity@7 (line 235)
                                                ; - java.util.ArrayList::ensureCapacityInternal@9 (line 231)

  0x000000010f8019ad: mov    0xc(%rdi),%edi     ;*arraylength
                                                ; - java.util.ArrayList::ensureExplicitCapacity@15 (line 238)
                                                ; - java.util.ArrayList::ensureCapacityInternal@9 (line 231)
                                                ; implicit exception: dispatches to 0x000000010f801a74
  0x000000010f8019b0: mov    %rdx,%rbx
  0x000000010f8019b3: sub    %edi,%ebx
  0x000000010f8019b5: cmp    $0x0,%ebx
  0x000000010f8019b8: movabs $0x10ed99c20,%rdi  ;   {metadata(method data for {method} {0x000000010eb36128} 'ensureExplicitCapacity' '(I)V' in 'java/util/ArrayList')}
  0x000000010f8019c2: movabs $0x108,%rbx
  0x000000010f8019cc: jle    0x000000010f8019dc
  0x000000010f8019d2: movabs $0x118,%rbx
  0x000000010f8019dc: mov    (%rdi,%rbx,1),%rax
  0x000000010f8019e0: lea    0x1(%rax),%rax
  0x000000010f8019e4: mov    %rax,(%rdi,%rbx,1)
  0x000000010f8019e8: jle    0x000000010f801a0c  ;*ifle
                                                ; - java.util.ArrayList::ensureExplicitCapacity@17 (line 238)
                                                ; - java.util.ArrayList::ensureCapacityInternal@9 (line 231)

  0x000000010f8019ee: mov    %rsi,%rdi
  0x000000010f8019f1: movabs $0x10ed99c20,%rbx  ;   {metadata(method data for {method} {0x000000010eb36128} 'ensureExplicitCapacity' '(I)V' in 'java/util/ArrayList')}
  0x000000010f8019fb: addq   $0x1,0x128(%rbx)
  0x000000010f801a03: nop
  0x000000010f801a04: nop
  0x000000010f801a05: nop
  0x000000010f801a06: nop
  0x000000010f801a07: callq  0x000000010f7170a0  ; OopMap{off=556}
                                                ;*invokespecial grow
                                                ; - java.util.ArrayList::ensureExplicitCapacity@22 (line 239)
                                                ; - java.util.ArrayList::ensureCapacityInternal@9 (line 231)
                                                ;   {optimized virtual_call}
  0x000000010f801a0c: add    $0x60,%rsp
  0x000000010f801a10: pop    %rbp
  0x000000010f801a11: test   %eax,-0x8d66917(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f801a17: retq   
  0x000000010f801a18: mov    %rdi,0x8(%rsp)
  0x000000010f801a1d: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f801a25: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=586}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::ensureCapacityInternal@-1 (line 231)
                                                ;   {runtime_call}
  0x000000010f801a2a: jmpq   0x000000010f80183e
  0x000000010f801a2f: mov    %rbx,0x8(%rsp)
  0x000000010f801a34: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f801a3c: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop rdi=Oop off=609}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::calculateCapacity@-1 (line 224)
                                                ; - java.util.ArrayList::ensureCapacityInternal@6 (line 231)
                                                ;   {runtime_call}
  0x000000010f801a41: jmpq   0x000000010f801889
  0x000000010f801a46: mov    %rbx,0x8(%rsp)
  0x000000010f801a4b: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f801a53: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop rdi=Oop off=632}
                                                ;*synchronization entry
                                                ; - java.lang.Math::max@-1 (line 1252)
                                                ; - java.util.ArrayList::calculateCapacity@10 (line 225)
                                                ; - java.util.ArrayList::ensureCapacityInternal@6 (line 231)
                                                ;   {runtime_call}
  0x000000010f801a58: jmpq   0x000000010f801910
  0x000000010f801a5d: mov    %rbx,0x8(%rsp)
  0x000000010f801a62: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f801a6a: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop rdi=Oop off=655}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::ensureExplicitCapacity@-1 (line 235)
                                                ; - java.util.ArrayList::ensureCapacityInternal@9 (line 231)
                                                ;   {runtime_call}
  0x000000010f801a6f: jmpq   0x000000010f8019a5
  0x000000010f801a74: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop off=665}
                                                ;*arraylength
                                                ; - java.util.ArrayList::ensureExplicitCapacity@15 (line 238)
                                                ; - java.util.ArrayList::ensureCapacityInternal@9 (line 231)
                                                ;   {runtime_call}
  0x000000010f801a79: nop
  0x000000010f801a7a: nop
  0x000000010f801a7b: mov    0x2a8(%r15),%rax
  0x000000010f801a82: movabs $0x0,%r10
  0x000000010f801a8c: mov    %r10,0x2a8(%r15)
  0x000000010f801a93: movabs $0x0,%r10
  0x000000010f801a9d: mov    %r10,0x2b0(%r15)
  0x000000010f801aa4: add    $0x60,%rsp
  0x000000010f801aa8: pop    %rbp
  0x000000010f801aa9: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f801aae: hlt    
  0x000000010f801aaf: hlt    
  0x000000010f801ab0: hlt    
  0x000000010f801ab1: hlt    
  0x000000010f801ab2: hlt    
  0x000000010f801ab3: hlt    
  0x000000010f801ab4: hlt    
  0x000000010f801ab5: hlt    
  0x000000010f801ab6: hlt    
  0x000000010f801ab7: hlt    
  0x000000010f801ab8: hlt    
  0x000000010f801ab9: hlt    
  0x000000010f801aba: hlt    
  0x000000010f801abb: hlt    
  0x000000010f801abc: hlt    
  0x000000010f801abd: hlt    
  0x000000010f801abe: hlt    
  0x000000010f801abf: hlt    
[Stub Code]
  0x000000010f801ac0: nop                       ;   {no_reloc}
  0x000000010f801ac1: nop
  0x000000010f801ac2: nop
  0x000000010f801ac3: nop
  0x000000010f801ac4: nop
  0x000000010f801ac5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f801acf: jmpq   0x000000010f801acf  ;   {runtime_call}
[Exception Handler]
  0x000000010f801ad4: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f801ad9: mov    %rsp,-0x28(%rsp)
  0x000000010f801ade: sub    $0x80,%rsp
  0x000000010f801ae5: mov    %rax,0x78(%rsp)
  0x000000010f801aea: mov    %rcx,0x70(%rsp)
  0x000000010f801aef: mov    %rdx,0x68(%rsp)
  0x000000010f801af4: mov    %rbx,0x60(%rsp)
  0x000000010f801af9: mov    %rbp,0x50(%rsp)
  0x000000010f801afe: mov    %rsi,0x48(%rsp)
  0x000000010f801b03: mov    %rdi,0x40(%rsp)
  0x000000010f801b08: mov    %r8,0x38(%rsp)
  0x000000010f801b0d: mov    %r9,0x30(%rsp)
  0x000000010f801b12: mov    %r10,0x28(%rsp)
  0x000000010f801b17: mov    %r11,0x20(%rsp)
  0x000000010f801b1c: mov    %r12,0x18(%rsp)
  0x000000010f801b21: mov    %r13,0x10(%rsp)
  0x000000010f801b26: mov    %r14,0x8(%rsp)
  0x000000010f801b2b: mov    %r15,(%rsp)
  0x000000010f801b2f: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f801b39: movabs $0x10f801ad9,%rsi  ;   {internal_word}
  0x000000010f801b43: mov    %rsp,%rdx
  0x000000010f801b46: and    $0xfffffffffffffff0,%rsp
  0x000000010f801b4a: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f801b4f: hlt    
[Deopt Handler Code]
  0x000000010f801b50: movabs $0x10f801b50,%r10  ;   {section_word}
  0x000000010f801b5a: push   %r10
  0x000000010f801b5c: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f801b61: hlt    
  0x000000010f801b62: hlt    
  0x000000010f801b63: hlt    
  0x000000010f801b64: hlt    
  0x000000010f801b65: hlt    
  0x000000010f801b66: hlt    
  0x000000010f801b67: hlt    
Decoding compiled method 0x000000010f801d90:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010eabee50} 'testAnyFlags' '(I)Z' in 'java/lang/invoke/MemberName'
  # this:     rsi:rsi   = 'java/lang/invoke/MemberName'
  # parm0:    rdx       = int
  #           [sp+0x50]  (sp of caller)
  0x000000010f801f00: mov    0x8(%rsi),%r10d
  0x000000010f801f04: shl    $0x3,%r10
  0x000000010f801f08: cmp    %rax,%r10
  0x000000010f801f0b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f801f11: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f801f1c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f801f20: mov    %eax,-0x14000(%rsp)
  0x000000010f801f27: push   %rbp
  0x000000010f801f28: sub    $0x40,%rsp
  0x000000010f801f2c: movabs $0x10ed9a510,%rax  ;   {metadata(method data for {method} {0x000000010eabee50} 'testAnyFlags' '(I)Z' in 'java/lang/invoke/MemberName')}
  0x000000010f801f36: mov    0xdc(%rax),%edi
  0x000000010f801f3c: add    $0x8,%edi
  0x000000010f801f3f: mov    %edi,0xdc(%rax)
  0x000000010f801f45: movabs $0x10eabee50,%rax  ;   {metadata({method} {0x000000010eabee50} 'testAnyFlags' '(I)Z' in 'java/lang/invoke/MemberName')}
  0x000000010f801f4f: and    $0x1ff8,%edi
  0x000000010f801f55: cmp    $0x0,%edi
  0x000000010f801f58: je     0x000000010f80206d  ;*aload_0
                                                ; - java.lang.invoke.MemberName::testAnyFlags@0 (line 340)

  0x000000010f801f5e: mov    %rsi,%rax
  0x000000010f801f61: movabs $0x10ed9a510,%rdi  ;   {metadata(method data for {method} {0x000000010eabee50} 'testAnyFlags' '(I)Z' in 'java/lang/invoke/MemberName')}
  0x000000010f801f6b: addq   $0x1,0x108(%rdi)
  0x000000010f801f73: movabs $0x10ed91b60,%rax  ;   {metadata(method data for {method} {0x000000010eabed18} 'testFlags' '(II)Z' in 'java/lang/invoke/MemberName')}
  0x000000010f801f7d: mov    0xdc(%rax),%edi
  0x000000010f801f83: add    $0x8,%edi
  0x000000010f801f86: mov    %edi,0xdc(%rax)
  0x000000010f801f8c: movabs $0x10eabed18,%rax  ;   {metadata({method} {0x000000010eabed18} 'testFlags' '(II)Z' in 'java/lang/invoke/MemberName')}
  0x000000010f801f96: and    $0x7ffff8,%edi
  0x000000010f801f9c: cmp    $0x0,%edi
  0x000000010f801f9f: je     0x000000010f802084
  0x000000010f801fa5: mov    0xc(%rsi),%eax     ;*getfield flags
                                                ; - java.lang.invoke.MemberName::testFlags@1 (line 334)
                                                ; - java.lang.invoke.MemberName::testAnyFlags@3 (line 340)

  0x000000010f801fa8: and    %rdx,%rax
  0x000000010f801fab: cmp    $0x0,%eax
  0x000000010f801fae: movabs $0x10ed91b60,%rax  ;   {metadata(method data for {method} {0x000000010eabed18} 'testFlags' '(II)Z' in 'java/lang/invoke/MemberName')}
  0x000000010f801fb8: movabs $0x108,%rsi
  0x000000010f801fc2: jne    0x000000010f801fd2
  0x000000010f801fc8: movabs $0x118,%rsi
  0x000000010f801fd2: mov    (%rax,%rsi,1),%rdi
  0x000000010f801fd6: lea    0x1(%rdi),%rdi
  0x000000010f801fda: mov    %rdi,(%rax,%rsi,1)
  0x000000010f801fde: jne    0x000000010f801ffe  ;*if_icmpne
                                                ; - java.lang.invoke.MemberName::testFlags@7 (line 334)
                                                ; - java.lang.invoke.MemberName::testAnyFlags@3 (line 340)

  0x000000010f801fe4: movabs $0x10ed91b60,%rax  ;   {metadata(method data for {method} {0x000000010eabed18} 'testFlags' '(II)Z' in 'java/lang/invoke/MemberName')}
  0x000000010f801fee: incl   0x128(%rax)
  0x000000010f801ff4: mov    $0x1,%eax
  0x000000010f801ff9: jmpq   0x000000010f802003  ;*goto
                                                ; - java.lang.invoke.MemberName::testFlags@11 (line 334)
                                                ; - java.lang.invoke.MemberName::testAnyFlags@3 (line 340)

  0x000000010f801ffe: mov    $0x0,%eax          ;*ireturn
                                                ; - java.lang.invoke.MemberName::testFlags@15 (line 334)
                                                ; - java.lang.invoke.MemberName::testAnyFlags@3 (line 340)

  0x000000010f802003: and    $0x1,%eax
  0x000000010f802006: cmp    $0x0,%eax
  0x000000010f802009: movabs $0x10ed9a510,%rax  ;   {metadata(method data for {method} {0x000000010eabee50} 'testAnyFlags' '(I)Z' in 'java/lang/invoke/MemberName')}
  0x000000010f802013: movabs $0x118,%rsi
  0x000000010f80201d: jne    0x000000010f80202d
  0x000000010f802023: movabs $0x128,%rsi
  0x000000010f80202d: mov    (%rax,%rsi,1),%rdi
  0x000000010f802031: lea    0x1(%rdi),%rdi
  0x000000010f802035: mov    %rdi,(%rax,%rsi,1)
  0x000000010f802039: jne    0x000000010f802059  ;*ifne
                                                ; - java.lang.invoke.MemberName::testAnyFlags@6 (line 340)

  0x000000010f80203f: movabs $0x10ed9a510,%rax  ;   {metadata(method data for {method} {0x000000010eabee50} 'testAnyFlags' '(I)Z' in 'java/lang/invoke/MemberName')}
  0x000000010f802049: incl   0x138(%rax)
  0x000000010f80204f: mov    $0x1,%eax
  0x000000010f802054: jmpq   0x000000010f80205e  ;*goto
                                                ; - java.lang.invoke.MemberName::testAnyFlags@10 (line 340)

  0x000000010f802059: mov    $0x0,%eax          ;*ireturn
                                                ; - java.lang.invoke.MemberName::testAnyFlags@14 (line 340)

  0x000000010f80205e: and    $0x1,%eax
  0x000000010f802061: add    $0x40,%rsp
  0x000000010f802065: pop    %rbp
  0x000000010f802066: test   %eax,-0x8d66f6c(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f80206c: retq   
  0x000000010f80206d: mov    %rax,0x8(%rsp)
  0x000000010f802072: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f80207a: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=383}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MemberName::testAnyFlags@-1 (line 340)
                                                ;   {runtime_call}
  0x000000010f80207f: jmpq   0x000000010f801f5e
  0x000000010f802084: mov    %rax,0x8(%rsp)
  0x000000010f802089: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f802091: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=406}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MemberName::testFlags@-1 (line 334)
                                                ; - java.lang.invoke.MemberName::testAnyFlags@3 (line 340)
                                                ;   {runtime_call}
  0x000000010f802096: jmpq   0x000000010f801fa5
  0x000000010f80209b: nop
  0x000000010f80209c: nop
  0x000000010f80209d: mov    0x2a8(%r15),%rax
  0x000000010f8020a4: movabs $0x0,%r10
  0x000000010f8020ae: mov    %r10,0x2a8(%r15)
  0x000000010f8020b5: movabs $0x0,%r10
  0x000000010f8020bf: mov    %r10,0x2b0(%r15)
  0x000000010f8020c6: add    $0x40,%rsp
  0x000000010f8020ca: pop    %rbp
  0x000000010f8020cb: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f8020d0: hlt    
  0x000000010f8020d1: hlt    
  0x000000010f8020d2: hlt    
  0x000000010f8020d3: hlt    
  0x000000010f8020d4: hlt    
  0x000000010f8020d5: hlt    
  0x000000010f8020d6: hlt    
  0x000000010f8020d7: hlt    
  0x000000010f8020d8: hlt    
  0x000000010f8020d9: hlt    
  0x000000010f8020da: hlt    
  0x000000010f8020db: hlt    
  0x000000010f8020dc: hlt    
  0x000000010f8020dd: hlt    
  0x000000010f8020de: hlt    
  0x000000010f8020df: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f8020e0: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f8020e5: mov    %rsp,-0x28(%rsp)
  0x000000010f8020ea: sub    $0x80,%rsp
  0x000000010f8020f1: mov    %rax,0x78(%rsp)
  0x000000010f8020f6: mov    %rcx,0x70(%rsp)
  0x000000010f8020fb: mov    %rdx,0x68(%rsp)
  0x000000010f802100: mov    %rbx,0x60(%rsp)
  0x000000010f802105: mov    %rbp,0x50(%rsp)
  0x000000010f80210a: mov    %rsi,0x48(%rsp)
  0x000000010f80210f: mov    %rdi,0x40(%rsp)
  0x000000010f802114: mov    %r8,0x38(%rsp)
  0x000000010f802119: mov    %r9,0x30(%rsp)
  0x000000010f80211e: mov    %r10,0x28(%rsp)
  0x000000010f802123: mov    %r11,0x20(%rsp)
  0x000000010f802128: mov    %r12,0x18(%rsp)
  0x000000010f80212d: mov    %r13,0x10(%rsp)
  0x000000010f802132: mov    %r14,0x8(%rsp)
  0x000000010f802137: mov    %r15,(%rsp)
  0x000000010f80213b: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f802145: movabs $0x10f8020e5,%rsi  ;   {internal_word}
  0x000000010f80214f: mov    %rsp,%rdx
  0x000000010f802152: and    $0xfffffffffffffff0,%rsp
  0x000000010f802156: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f80215b: hlt    
[Deopt Handler Code]
  0x000000010f80215c: movabs $0x10f80215c,%r10  ;   {section_word}
  0x000000010f802166: push   %r10
  0x000000010f802168: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f80216d: hlt    
  0x000000010f80216e: hlt    
  0x000000010f80216f: hlt    
Decoding compiled method 0x000000010f8022d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ea719c0} 'getClassLoader' '()Ljava/lang/ClassLoader;' in 'java/lang/Class'
  #           [sp+0x80]  (sp of caller)
  0x000000010f8024c0: mov    0x8(%rsi),%r10d
  0x000000010f8024c4: shl    $0x3,%r10
  0x000000010f8024c8: cmp    %rax,%r10
  0x000000010f8024cb: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f8024d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f8024dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f8024e0: mov    %eax,-0x14000(%rsp)
  0x000000010f8024e7: push   %rbp
  0x000000010f8024e8: sub    $0x70,%rsp
  0x000000010f8024ec: movabs $0x10ed9a680,%rdi  ;   {metadata(method data for {method} {0x000000010ea719c0} 'getClassLoader' '()Ljava/lang/ClassLoader;' in 'java/lang/Class')}
  0x000000010f8024f6: mov    0xdc(%rdi),%ebx
  0x000000010f8024fc: add    $0x8,%ebx
  0x000000010f8024ff: mov    %ebx,0xdc(%rdi)
  0x000000010f802505: movabs $0x10ea719c0,%rdi  ;   {metadata({method} {0x000000010ea719c0} 'getClassLoader' '()Ljava/lang/ClassLoader;' in 'java/lang/Class')}
  0x000000010f80250f: and    $0x1ff8,%ebx
  0x000000010f802515: cmp    $0x0,%ebx
  0x000000010f802518: je     0x000000010f802c7e  ;*aload_0
                                                ; - java.lang.Class::getClassLoader@0 (line 678)

  0x000000010f80251e: mov    %rsi,%rdi
  0x000000010f802521: movabs $0x10ed9a680,%rbx  ;   {metadata(method data for {method} {0x000000010ea719c0} 'getClassLoader' '()Ljava/lang/ClassLoader;' in 'java/lang/Class')}
  0x000000010f80252b: mov    0x8(%rdi),%edi
  0x000000010f80252e: shl    $0x3,%rdi
  0x000000010f802532: cmp    0x110(%rbx),%rdi
  0x000000010f802539: jne    0x000000010f802548
  0x000000010f80253b: addq   $0x1,0x118(%rbx)
  0x000000010f802543: jmpq   0x000000010f8025ae
  0x000000010f802548: cmp    0x120(%rbx),%rdi
  0x000000010f80254f: jne    0x000000010f80255e
  0x000000010f802551: addq   $0x1,0x128(%rbx)
  0x000000010f802559: jmpq   0x000000010f8025ae
  0x000000010f80255e: cmpq   $0x0,0x110(%rbx)
  0x000000010f802569: jne    0x000000010f802582
  0x000000010f80256b: mov    %rdi,0x110(%rbx)
  0x000000010f802572: movq   $0x1,0x118(%rbx)
  0x000000010f80257d: jmpq   0x000000010f8025ae
  0x000000010f802582: cmpq   $0x0,0x120(%rbx)
  0x000000010f80258d: jne    0x000000010f8025a6
  0x000000010f80258f: mov    %rdi,0x120(%rbx)
  0x000000010f802596: movq   $0x1,0x128(%rbx)
  0x000000010f8025a1: jmpq   0x000000010f8025ae
  0x000000010f8025a6: addq   $0x1,0x108(%rbx)
  0x000000010f8025ae: mov    0x18(%rsi),%esi
  0x000000010f8025b1: shl    $0x3,%rsi          ;*getfield classLoader
                                                ; - java.lang.Class::getClassLoader0@1 (line 689)
                                                ; - java.lang.Class::getClassLoader@1 (line 678)

  0x000000010f8025b5: mov    %rsi,0x60(%rsp)
  0x000000010f8025ba: cmp    $0x0,%rsi
  0x000000010f8025be: movabs $0x10ed9a680,%rdi  ;   {metadata(method data for {method} {0x000000010ea719c0} 'getClassLoader' '()Ljava/lang/ClassLoader;' in 'java/lang/Class')}
  0x000000010f8025c8: movabs $0x138,%rbx
  0x000000010f8025d2: jne    0x000000010f8025e2
  0x000000010f8025d8: movabs $0x148,%rbx
  0x000000010f8025e2: mov    (%rdi,%rbx,1),%rax
  0x000000010f8025e6: lea    0x1(%rax),%rax
  0x000000010f8025ea: mov    %rax,(%rdi,%rbx,1)
  0x000000010f8025ee: je     0x000000010f802c68  ;*ifnonnull
                                                ; - java.lang.Class::getClassLoader@6 (line 679)

  0x000000010f8025f4: movabs $0x10ed9a680,%rdi  ;   {metadata(method data for {method} {0x000000010ea719c0} 'getClassLoader' '()Ljava/lang/ClassLoader;' in 'java/lang/Class')}
  0x000000010f8025fe: addq   $0x1,0x158(%rdi)
  0x000000010f802606: movabs $0x10ec81848,%rdi  ;   {metadata(method data for {method} {0x000000010ea7e778} 'getSecurityManager' '()Ljava/lang/SecurityManager;' in 'java/lang/System')}
  0x000000010f802610: mov    0xdc(%rdi),%ebx
  0x000000010f802616: add    $0x8,%ebx
  0x000000010f802619: mov    %ebx,0xdc(%rdi)
  0x000000010f80261f: movabs $0x10ea7e778,%rdi  ;   {metadata({method} {0x000000010ea7e778} 'getSecurityManager' '()Ljava/lang/SecurityManager;' in 'java/lang/System')}
  0x000000010f802629: and    $0x7ffff8,%ebx
  0x000000010f80262f: cmp    $0x0,%ebx
  0x000000010f802632: je     0x000000010f802c95
  0x000000010f802638: movabs $0x795580c78,%rdi  ;   {oop(a 'java/lang/Class' = 'java/lang/System')}
  0x000000010f802642: mov    0x74(%rdi),%edi
  0x000000010f802645: shl    $0x3,%rdi          ;*getstatic security
                                                ; - java.lang.System::getSecurityManager@0 (line 334)
                                                ; - java.lang.Class::getClassLoader@11 (line 681)

  0x000000010f802649: cmp    $0x0,%rdi
  0x000000010f80264d: movabs $0x10ed9a680,%rdi  ;   {metadata(method data for {method} {0x000000010ea719c0} 'getClassLoader' '()Ljava/lang/ClassLoader;' in 'java/lang/Class')}
  0x000000010f802657: movabs $0x168,%rbx
  0x000000010f802661: je     0x000000010f802671
  0x000000010f802667: movabs $0x178,%rbx
  0x000000010f802671: mov    (%rdi,%rbx,1),%rax
  0x000000010f802675: lea    0x1(%rax),%rax
  0x000000010f802679: mov    %rax,(%rdi,%rbx,1)
  0x000000010f80267d: je     0x000000010f802c59  ;*ifnull
                                                ; - java.lang.Class::getClassLoader@16 (line 682)

  0x000000010f802683: movabs $0x10ed9a680,%rdi  ;   {metadata(method data for {method} {0x000000010ea719c0} 'getClassLoader' '()Ljava/lang/ClassLoader;' in 'java/lang/Class')}
  0x000000010f80268d: addq   $0x1,0x188(%rdi)
  0x000000010f802695: nop
  0x000000010f802696: nop
  0x000000010f802697: callq  0x000000010f717520  ; OopMap{[96]=Oop off=476}
                                                ;*invokestatic getCallerClass
                                                ; - java.lang.Class::getClassLoader@20 (line 683)
                                                ;   {static_call}
  0x000000010f80269c: movabs $0x10ed9a680,%rdx  ;   {metadata(method data for {method} {0x000000010ea719c0} 'getClassLoader' '()Ljava/lang/ClassLoader;' in 'java/lang/Class')}
  0x000000010f8026a6: addq   $0x1,0x198(%rdx)
  0x000000010f8026ae: movabs $0x10ed9a868,%rdx  ;   {metadata(method data for {method} {0x000000010ea7bb30} 'checkClassLoaderPermission' '(Ljava/lang/ClassLoader;Ljava/lang/Class;)V' in 'java/lang/ClassLoader')}
  0x000000010f8026b8: mov    0xdc(%rdx),%esi
  0x000000010f8026be: add    $0x8,%esi
  0x000000010f8026c1: mov    %esi,0xdc(%rdx)
  0x000000010f8026c7: movabs $0x10ea7bb30,%rdx  ;   {metadata({method} {0x000000010ea7bb30} 'checkClassLoaderPermission' '(Ljava/lang/ClassLoader;Ljava/lang/Class;)V' in 'java/lang/ClassLoader')}
  0x000000010f8026d1: and    $0x7ffff8,%esi
  0x000000010f8026d7: cmp    $0x0,%esi
  0x000000010f8026da: je     0x000000010f802cac
  0x000000010f8026e0: movabs $0x10ed9a868,%rdx  ;   {metadata(method data for {method} {0x000000010ea7bb30} 'checkClassLoaderPermission' '(Ljava/lang/ClassLoader;Ljava/lang/Class;)V' in 'java/lang/ClassLoader')}
  0x000000010f8026ea: addq   $0x1,0x108(%rdx)
  0x000000010f8026f2: movabs $0x10ec81848,%rdx  ;   {metadata(method data for {method} {0x000000010ea7e778} 'getSecurityManager' '()Ljava/lang/SecurityManager;' in 'java/lang/System')}
  0x000000010f8026fc: mov    0xdc(%rdx),%esi
  0x000000010f802702: add    $0x8,%esi
  0x000000010f802705: mov    %esi,0xdc(%rdx)
  0x000000010f80270b: movabs $0x10ea7e778,%rdx  ;   {metadata({method} {0x000000010ea7e778} 'getSecurityManager' '()Ljava/lang/SecurityManager;' in 'java/lang/System')}
  0x000000010f802715: and    $0x7ffff8,%esi
  0x000000010f80271b: cmp    $0x0,%esi
  0x000000010f80271e: je     0x000000010f802cc3
  0x000000010f802724: movabs $0x795580c78,%rdx  ;   {oop(a 'java/lang/Class' = 'java/lang/System')}
  0x000000010f80272e: mov    0x74(%rdx),%esi
  0x000000010f802731: shl    $0x3,%rsi          ;*getstatic security
                                                ; - java.lang.System::getSecurityManager@0 (line 334)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@0 (line 1523)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)

  0x000000010f802735: cmp    $0x0,%rsi
  0x000000010f802739: movabs $0x10ed9a868,%rdx  ;   {metadata(method data for {method} {0x000000010ea7bb30} 'checkClassLoaderPermission' '(Ljava/lang/ClassLoader;Ljava/lang/Class;)V' in 'java/lang/ClassLoader')}
  0x000000010f802743: movabs $0x118,%rdi
  0x000000010f80274d: je     0x000000010f80275d
  0x000000010f802753: movabs $0x128,%rdi
  0x000000010f80275d: mov    (%rdx,%rdi,1),%rbx
  0x000000010f802761: lea    0x1(%rbx),%rbx
  0x000000010f802765: mov    %rbx,(%rdx,%rdi,1)
  0x000000010f802769: je     0x000000010f802c54  ;*ifnull
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@5 (line 1524)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)

  0x000000010f80276f: movabs $0x10ed9a868,%rdx  ;   {metadata(method data for {method} {0x000000010ea7bb30} 'checkClassLoaderPermission' '(Ljava/lang/ClassLoader;Ljava/lang/Class;)V' in 'java/lang/ClassLoader')}
  0x000000010f802779: addq   $0x1,0x138(%rdx)
  0x000000010f802781: movabs $0x10ed9aa58,%rdx  ;   {metadata(method data for {method} {0x000000010ea7ba78} 'getClassLoader' '(Ljava/lang/Class;)Ljava/lang/ClassLoader;' in 'java/lang/ClassLoader')}
  0x000000010f80278b: mov    0xdc(%rdx),%edi
  0x000000010f802791: add    $0x8,%edi
  0x000000010f802794: mov    %edi,0xdc(%rdx)
  0x000000010f80279a: movabs $0x10ea7ba78,%rdx  ;   {metadata({method} {0x000000010ea7ba78} 'getClassLoader' '(Ljava/lang/Class;)Ljava/lang/ClassLoader;' in 'java/lang/ClassLoader')}
  0x000000010f8027a4: and    $0x7ffff8,%edi
  0x000000010f8027aa: cmp    $0x0,%edi
  0x000000010f8027ad: je     0x000000010f802cda
  0x000000010f8027b3: cmp    $0x0,%rax
  0x000000010f8027b7: movabs $0x10ed9aa58,%rdx  ;   {metadata(method data for {method} {0x000000010ea7ba78} 'getClassLoader' '(Ljava/lang/Class;)Ljava/lang/ClassLoader;' in 'java/lang/ClassLoader')}
  0x000000010f8027c1: movabs $0x108,%rdi
  0x000000010f8027cb: jne    0x000000010f8027db
  0x000000010f8027d1: movabs $0x118,%rdi
  0x000000010f8027db: mov    (%rdx,%rdi,1),%rbx
  0x000000010f8027df: lea    0x1(%rbx),%rbx
  0x000000010f8027e3: mov    %rbx,(%rdx,%rdi,1)
  0x000000010f8027e7: jne    0x000000010f8027fc  ;*ifnonnull
                                                ; - java.lang.ClassLoader::getClassLoader@1 (line 1510)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@9 (line 1526)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)

  0x000000010f8027ed: movabs $0x0,%rdx          ;   {oop(NULL)}
  0x000000010f8027f7: jmpq   0x000000010f802896  ;*astore_3
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@12 (line 1526)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)

  0x000000010f8027fc: cmp    (%rax),%rax        ;*invokevirtual getClassLoader0
                                                ; - java.lang.ClassLoader::getClassLoader@7 (line 1514)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@9 (line 1526)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; implicit exception: dispatches to 0x000000010f802cf1
  0x000000010f8027ff: mov    %rax,%rdx
  0x000000010f802802: movabs $0x10ed9aa58,%rdi  ;   {metadata(method data for {method} {0x000000010ea7ba78} 'getClassLoader' '(Ljava/lang/Class;)Ljava/lang/ClassLoader;' in 'java/lang/ClassLoader')}
  0x000000010f80280c: mov    0x8(%rdx),%edx
  0x000000010f80280f: shl    $0x3,%rdx
  0x000000010f802813: cmp    0x130(%rdi),%rdx
  0x000000010f80281a: jne    0x000000010f802829
  0x000000010f80281c: addq   $0x1,0x138(%rdi)
  0x000000010f802824: jmpq   0x000000010f80288f
  0x000000010f802829: cmp    0x140(%rdi),%rdx
  0x000000010f802830: jne    0x000000010f80283f
  0x000000010f802832: addq   $0x1,0x148(%rdi)
  0x000000010f80283a: jmpq   0x000000010f80288f
  0x000000010f80283f: cmpq   $0x0,0x130(%rdi)
  0x000000010f80284a: jne    0x000000010f802863
  0x000000010f80284c: mov    %rdx,0x130(%rdi)
  0x000000010f802853: movq   $0x1,0x138(%rdi)
  0x000000010f80285e: jmpq   0x000000010f80288f
  0x000000010f802863: cmpq   $0x0,0x140(%rdi)
  0x000000010f80286e: jne    0x000000010f802887
  0x000000010f802870: mov    %rdx,0x140(%rdi)
  0x000000010f802877: movq   $0x1,0x148(%rdi)
  0x000000010f802882: jmpq   0x000000010f80288f
  0x000000010f802887: addq   $0x1,0x128(%rdi)
  0x000000010f80288f: mov    0x18(%rax),%edx
  0x000000010f802892: shl    $0x3,%rdx          ;*getfield classLoader
                                                ; - java.lang.Class::getClassLoader0@1 (line 689)
                                                ; - java.lang.ClassLoader::getClassLoader@7 (line 1514)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@9 (line 1526)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)

  0x000000010f802896: mov    0x60(%rsp),%rdi
  0x000000010f80289b: movabs $0x10ed9a868,%rbx  ;   {metadata(method data for {method} {0x000000010ea7bb30} 'checkClassLoaderPermission' '(Ljava/lang/ClassLoader;Ljava/lang/Class;)V' in 'java/lang/ClassLoader')}
  0x000000010f8028a5: addq   $0x1,0x148(%rbx)
  0x000000010f8028ad: movabs $0x10ed9ad18,%rbx  ;   {metadata(method data for {method} {0x000000010ea7b9d8} 'needsClassLoaderPermissionCheck' '(Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;)Z' in 'java/lang/ClassLoader')}
  0x000000010f8028b7: mov    0xdc(%rbx),%eax
  0x000000010f8028bd: add    $0x8,%eax
  0x000000010f8028c0: mov    %eax,0xdc(%rbx)
  0x000000010f8028c6: movabs $0x10ea7b9d8,%rbx  ;   {metadata({method} {0x000000010ea7b9d8} 'needsClassLoaderPermissionCheck' '(Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;)Z' in 'java/lang/ClassLoader')}
  0x000000010f8028d0: and    $0x7ffff8,%eax
  0x000000010f8028d6: cmp    $0x0,%eax
  0x000000010f8028d9: je     0x000000010f802cf6
  0x000000010f8028df: cmp    %rdi,%rdx
  0x000000010f8028e2: movabs $0x10ed9ad18,%rbx  ;   {metadata(method data for {method} {0x000000010ea7b9d8} 'needsClassLoaderPermissionCheck' '(Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;)Z' in 'java/lang/ClassLoader')}
  0x000000010f8028ec: movabs $0x108,%rax
  0x000000010f8028f6: jne    0x000000010f802906
  0x000000010f8028fc: movabs $0x118,%rax
  0x000000010f802906: mov    (%rbx,%rax,1),%rcx
  0x000000010f80290a: lea    0x1(%rcx),%rcx
  0x000000010f80290e: mov    %rcx,(%rbx,%rax,1)
  0x000000010f802912: jne    0x000000010f802922  ;*if_acmpne
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@2 (line 1498)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1527)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)

  0x000000010f802918: mov    $0x0,%edx
  0x000000010f80291d: jmpq   0x000000010f802b59  ;*ifeq
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@18 (line 1527)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)

  0x000000010f802922: cmp    $0x0,%rdx
  0x000000010f802926: movabs $0x10ed9ad18,%rbx  ;   {metadata(method data for {method} {0x000000010ea7b9d8} 'needsClassLoaderPermissionCheck' '(Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;)Z' in 'java/lang/ClassLoader')}
  0x000000010f802930: movabs $0x128,%rax
  0x000000010f80293a: jne    0x000000010f80294a
  0x000000010f802940: movabs $0x138,%rax
  0x000000010f80294a: mov    (%rbx,%rax,1),%rcx
  0x000000010f80294e: lea    0x1(%rcx),%rcx
  0x000000010f802952: mov    %rcx,(%rbx,%rax,1)
  0x000000010f802956: jne    0x000000010f802966  ;*ifnonnull
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@8 (line 1501)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1527)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)

  0x000000010f80295c: mov    $0x0,%edx
  0x000000010f802961: jmpq   0x000000010f802b59  ;*ifeq
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@18 (line 1527)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)

  0x000000010f802966: cmp    (%rdi),%rax        ;*invokevirtual isAncestor
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@15 (line 1504)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1527)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; implicit exception: dispatches to 0x000000010f802d0d
  0x000000010f802969: mov    %rdi,%rbx
  0x000000010f80296c: movabs $0x10ed9ad18,%rax  ;   {metadata(method data for {method} {0x000000010ea7b9d8} 'needsClassLoaderPermissionCheck' '(Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;)Z' in 'java/lang/ClassLoader')}
  0x000000010f802976: mov    0x8(%rbx),%ebx
  0x000000010f802979: shl    $0x3,%rbx
  0x000000010f80297d: cmp    0x150(%rax),%rbx
  0x000000010f802984: jne    0x000000010f802993
  0x000000010f802986: addq   $0x1,0x158(%rax)
  0x000000010f80298e: jmpq   0x000000010f8029f9
  0x000000010f802993: cmp    0x160(%rax),%rbx
  0x000000010f80299a: jne    0x000000010f8029a9
  0x000000010f80299c: addq   $0x1,0x168(%rax)
  0x000000010f8029a4: jmpq   0x000000010f8029f9
  0x000000010f8029a9: cmpq   $0x0,0x150(%rax)
  0x000000010f8029b4: jne    0x000000010f8029cd
  0x000000010f8029b6: mov    %rbx,0x150(%rax)
  0x000000010f8029bd: movq   $0x1,0x158(%rax)
  0x000000010f8029c8: jmpq   0x000000010f8029f9
  0x000000010f8029cd: cmpq   $0x0,0x160(%rax)
  0x000000010f8029d8: jne    0x000000010f8029f1
  0x000000010f8029da: mov    %rbx,0x160(%rax)
  0x000000010f8029e1: movq   $0x1,0x168(%rax)
  0x000000010f8029ec: jmpq   0x000000010f8029f9
  0x000000010f8029f1: addq   $0x1,0x148(%rax)
  0x000000010f8029f9: movabs $0x10ed9af10,%rbx  ;   {metadata(method data for {method} {0x000000010ea7b928} 'isAncestor' '(Ljava/lang/ClassLoader;)Z' in 'java/lang/ClassLoader')}
  0x000000010f802a03: mov    0xdc(%rbx),%eax
  0x000000010f802a09: add    $0x8,%eax
  0x000000010f802a0c: mov    %eax,0xdc(%rbx)
  0x000000010f802a12: movabs $0x10ea7b928,%rbx  ;   {metadata({method} {0x000000010ea7b928} 'isAncestor' '(Ljava/lang/ClassLoader;)Z' in 'java/lang/ClassLoader')}
  0x000000010f802a1c: and    $0x7ffff8,%eax
  0x000000010f802a22: cmp    $0x0,%eax
  0x000000010f802a25: je     0x000000010f802d12
  0x000000010f802a2b: mov    %rdi,%rbx
  0x000000010f802a2e: jmpq   0x000000010f802aaa  ;*aload_2
                                                ; - java.lang.ClassLoader::isAncestor@2 (line 1482)
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@15 (line 1504)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1527)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)

  0x000000010f802a33: nopl   0x0(%rax,%rax,1)
  0x000000010f802a38: movabs $0x10ed9af10,%rax  ;   {metadata(method data for {method} {0x000000010ea7b928} 'isAncestor' '(Ljava/lang/ClassLoader;)Z' in 'java/lang/ClassLoader')}
  0x000000010f802a42: mov    0xe0(%rax),%ecx
  0x000000010f802a48: add    $0x8,%ecx
  0x000000010f802a4b: mov    %ecx,0xe0(%rax)
  0x000000010f802a51: movabs $0x10ea7b928,%rax  ;   {metadata({method} {0x000000010ea7b928} 'isAncestor' '(Ljava/lang/ClassLoader;)Z' in 'java/lang/ClassLoader')}
  0x000000010f802a5b: and    $0xfff8,%ecx
  0x000000010f802a61: cmp    $0x0,%ecx
  0x000000010f802a64: je     0x000000010f802d29  ; OopMap{rsi=Oop rdi=Oop [96]=Oop rdx=Oop rbx=Oop off=1450}
                                                ;*ifnonnull
                                                ; - java.lang.ClassLoader::isAncestor@15 (line 1486)
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@15 (line 1504)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1527)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)

  0x000000010f802a6a: test   %eax,-0x8d67970(%rip)        # 0x0000000106a9b100
                                                ;   {poll}
  0x000000010f802a70: cmp    $0x0,%rbx
  0x000000010f802a74: movabs $0x10ed9af10,%rax  ;   {metadata(method data for {method} {0x000000010ea7b928} 'isAncestor' '(Ljava/lang/ClassLoader;)Z' in 'java/lang/ClassLoader')}
  0x000000010f802a7e: movabs $0x128,%rcx
  0x000000010f802a88: jne    0x000000010f802a98
  0x000000010f802a8e: movabs $0x138,%rcx
  0x000000010f802a98: mov    (%rax,%rcx,1),%r8
  0x000000010f802a9c: lea    0x1(%r8),%r8
  0x000000010f802aa0: mov    %r8,(%rax,%rcx,1)
  0x000000010f802aa4: je     0x000000010f802aef  ;*ifnonnull
                                                ; - java.lang.ClassLoader::isAncestor@15 (line 1486)
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@15 (line 1504)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1527)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)

  0x000000010f802aaa: mov    0xc(%rbx),%ebx     ; implicit exception: dispatches to 0x000000010f802d40
  0x000000010f802aad: shl    $0x3,%rbx          ;*getfield parent
                                                ; - java.lang.ClassLoader::isAncestor@3 (line 1482)
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@15 (line 1504)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1527)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)

  0x000000010f802ab1: cmp    %rbx,%rdx
  0x000000010f802ab4: movabs $0x10ed9af10,%rax  ;   {metadata(method data for {method} {0x000000010ea7b928} 'isAncestor' '(Ljava/lang/ClassLoader;)Z' in 'java/lang/ClassLoader')}
  0x000000010f802abe: movabs $0x108,%rcx
  0x000000010f802ac8: jne    0x000000010f802ad8
  0x000000010f802ace: movabs $0x118,%rcx
  0x000000010f802ad8: mov    (%rax,%rcx,1),%r8
  0x000000010f802adc: lea    0x1(%r8),%r8
  0x000000010f802ae0: mov    %r8,(%rax,%rcx,1)
  0x000000010f802ae4: jne    0x000000010f802a38
  0x000000010f802aea: jmpq   0x000000010f802af9  ;*if_acmpne
                                                ; - java.lang.ClassLoader::isAncestor@9 (line 1483)
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@15 (line 1504)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1527)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)

  0x000000010f802aef: mov    $0x0,%edx
  0x000000010f802af4: jmpq   0x000000010f802afe
  0x000000010f802af9: mov    $0x1,%edx
  0x000000010f802afe: cmp    $0x0,%edx
  0x000000010f802b01: movabs $0x10ed9ad18,%rdx  ;   {metadata(method data for {method} {0x000000010ea7b9d8} 'needsClassLoaderPermissionCheck' '(Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;)Z' in 'java/lang/ClassLoader')}
  0x000000010f802b0b: movabs $0x178,%rbx
  0x000000010f802b15: jne    0x000000010f802b25
  0x000000010f802b1b: movabs $0x188,%rbx
  0x000000010f802b25: mov    (%rdx,%rbx,1),%rax
  0x000000010f802b29: lea    0x1(%rax),%rax
  0x000000010f802b2d: mov    %rax,(%rdx,%rbx,1)
  0x000000010f802b31: jne    0x000000010f802b51  ;*ifne
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@18 (line 1504)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1527)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)

  0x000000010f802b37: movabs $0x10ed9ad18,%rdx  ;   {metadata(method data for {method} {0x000000010ea7b9d8} 'needsClassLoaderPermissionCheck' '(Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;)Z' in 'java/lang/ClassLoader')}
  0x000000010f802b41: incl   0x198(%rdx)
  0x000000010f802b47: mov    $0x1,%edx
  0x000000010f802b4c: jmpq   0x000000010f802b56  ;*goto
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@22 (line 1504)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1527)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)

  0x000000010f802b51: mov    $0x0,%edx          ;*ireturn
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@26 (line 1504)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1527)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)

  0x000000010f802b56: and    $0x1,%edx
  0x000000010f802b59: cmp    $0x0,%edx
  0x000000010f802b5c: movabs $0x10ed9a868,%rdx  ;   {metadata(method data for {method} {0x000000010ea7bb30} 'checkClassLoaderPermission' '(Ljava/lang/ClassLoader;Ljava/lang/Class;)V' in 'java/lang/ClassLoader')}
  0x000000010f802b66: movabs $0x158,%rbx
  0x000000010f802b70: je     0x000000010f802b80
  0x000000010f802b76: movabs $0x168,%rbx
  0x000000010f802b80: mov    (%rdx,%rbx,1),%rax
  0x000000010f802b84: lea    0x1(%rax),%rax
  0x000000010f802b88: mov    %rax,(%rdx,%rbx,1)
  0x000000010f802b8c: je     0x000000010f802c54  ;*ifeq
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@18 (line 1527)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)

  0x000000010f802b92: nopw   0x0(%rax,%rax,1)
  0x000000010f802b98: jmpq   0x000000010f802da2  ;   {no_reloc}
  0x000000010f802b9d: add    %al,(%rax)
  0x000000010f802b9f: add    %al,(%rax)
  0x000000010f802ba1: add    %ah,0xf(%rsi)
  0x000000010f802ba4: (bad)  
  0x000000010f802ba5: add    %r8b,(%rax)
  0x000000010f802ba8: jmpq   0x000000010f802dbc  ; implicit exception: dispatches to 0x000000010f802dac
  0x000000010f802bad: nop
  0x000000010f802bae: shl    $0x3,%rdx          ;*getstatic GET_CLASSLOADER_PERMISSION
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@22 (line 1528)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)

  0x000000010f802bb2: cmp    (%rsi),%rax        ;*invokevirtual checkPermission
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@25 (line 1528)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; implicit exception: dispatches to 0x000000010f802dc6
  0x000000010f802bb5: mov    %rsi,%rbx
  0x000000010f802bb8: movabs $0x10ed9a868,%rax  ;   {metadata(method data for {method} {0x000000010ea7bb30} 'checkClassLoaderPermission' '(Ljava/lang/ClassLoader;Ljava/lang/Class;)V' in 'java/lang/ClassLoader')}
  0x000000010f802bc2: mov    0x8(%rbx),%ebx
  0x000000010f802bc5: shl    $0x3,%rbx
  0x000000010f802bc9: cmp    0x180(%rax),%rbx
  0x000000010f802bd0: jne    0x000000010f802bdf
  0x000000010f802bd2: addq   $0x1,0x188(%rax)
  0x000000010f802bda: jmpq   0x000000010f802c45
  0x000000010f802bdf: cmp    0x190(%rax),%rbx
  0x000000010f802be6: jne    0x000000010f802bf5
  0x000000010f802be8: addq   $0x1,0x198(%rax)
  0x000000010f802bf0: jmpq   0x000000010f802c45
  0x000000010f802bf5: cmpq   $0x0,0x180(%rax)
  0x000000010f802c00: jne    0x000000010f802c19
  0x000000010f802c02: mov    %rbx,0x180(%rax)
  0x000000010f802c09: movq   $0x1,0x188(%rax)
  0x000000010f802c14: jmpq   0x000000010f802c45
  0x000000010f802c19: cmpq   $0x0,0x190(%rax)
  0x000000010f802c24: jne    0x000000010f802c3d
  0x000000010f802c26: mov    %rbx,0x190(%rax)
  0x000000010f802c2d: movq   $0x1,0x198(%rax)
  0x000000010f802c38: jmpq   0x000000010f802c45
  0x000000010f802c3d: addq   $0x1,0x178(%rax)
  0x000000010f802c45: movabs $0xffffffffffffffff,%rax
  0x000000010f802c4f: callq  0x000000010f7172e0  ; OopMap{[96]=Oop off=1940}
                                                ;*invokevirtual checkPermission
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@25 (line 1528)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ;   {virtual_call}
  0x000000010f802c54: mov    0x60(%rsp),%rsi
  0x000000010f802c59: mov    %rsi,%rax
  0x000000010f802c5c: add    $0x70,%rsp
  0x000000010f802c60: pop    %rbp
  0x000000010f802c61: test   %eax,-0x8d67b67(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f802c67: retq                      ;*areturn
                                                ; - java.lang.Class::getClassLoader@27 (line 685)

  0x000000010f802c68: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000010f802c72: add    $0x70,%rsp
  0x000000010f802c76: pop    %rbp
  0x000000010f802c77: test   %eax,-0x8d67b7d(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f802c7d: retq   
  0x000000010f802c7e: mov    %rdi,0x8(%rsp)
  0x000000010f802c83: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f802c8b: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=2000}
                                                ;*synchronization entry
                                                ; - java.lang.Class::getClassLoader@-1 (line 678)
                                                ;   {runtime_call}
  0x000000010f802c90: jmpq   0x000000010f80251e
  0x000000010f802c95: mov    %rdi,0x8(%rsp)
  0x000000010f802c9a: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f802ca2: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [96]=Oop off=2023}
                                                ;*synchronization entry
                                                ; - java.lang.System::getSecurityManager@-1 (line 334)
                                                ; - java.lang.Class::getClassLoader@11 (line 681)
                                                ;   {runtime_call}
  0x000000010f802ca7: jmpq   0x000000010f802638
  0x000000010f802cac: mov    %rdx,0x8(%rsp)
  0x000000010f802cb1: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f802cb9: callq  0x000000010f7d1a20  ; OopMap{[96]=Oop rax=Oop off=2046}
                                                ;*synchronization entry
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@-1 (line 1523)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ;   {runtime_call}
  0x000000010f802cbe: jmpq   0x000000010f8026e0
  0x000000010f802cc3: mov    %rdx,0x8(%rsp)
  0x000000010f802cc8: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f802cd0: callq  0x000000010f7d1a20  ; OopMap{[96]=Oop rax=Oop off=2069}
                                                ;*synchronization entry
                                                ; - java.lang.System::getSecurityManager@-1 (line 334)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@0 (line 1523)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ;   {runtime_call}
  0x000000010f802cd5: jmpq   0x000000010f802724
  0x000000010f802cda: mov    %rdx,0x8(%rsp)
  0x000000010f802cdf: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f802ce7: callq  0x000000010f7d1a20  ; OopMap{[96]=Oop rsi=Oop rax=Oop off=2092}
                                                ;*synchronization entry
                                                ; - java.lang.ClassLoader::getClassLoader@-1 (line 1510)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@9 (line 1526)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ;   {runtime_call}
  0x000000010f802cec: jmpq   0x000000010f8027b3
  0x000000010f802cf1: callq  0x000000010f7cd0c0  ; OopMap{[96]=Oop rsi=Oop rax=Oop off=2102}
                                                ;*invokevirtual getClassLoader0
                                                ; - java.lang.ClassLoader::getClassLoader@7 (line 1514)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@9 (line 1526)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ;   {runtime_call}
  0x000000010f802cf6: mov    %rbx,0x8(%rsp)
  0x000000010f802cfb: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f802d03: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop rdx=Oop rdi=Oop [96]=Oop off=2120}
                                                ;*synchronization entry
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@-1 (line 1498)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1527)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ;   {runtime_call}
  0x000000010f802d08: jmpq   0x000000010f8028df
  0x000000010f802d0d: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop rdi=Oop [96]=Oop rdx=Oop off=2130}
                                                ;*invokevirtual isAncestor
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@15 (line 1504)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1527)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ;   {runtime_call}
  0x000000010f802d12: mov    %rbx,0x8(%rsp)
  0x000000010f802d17: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f802d1f: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop rdi=Oop [96]=Oop rdx=Oop off=2148}
                                                ;*synchronization entry
                                                ; - java.lang.ClassLoader::isAncestor@-1 (line 1480)
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@15 (line 1504)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1527)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ;   {runtime_call}
  0x000000010f802d24: jmpq   0x000000010f802a2b
  0x000000010f802d29: mov    %rax,0x8(%rsp)
  0x000000010f802d2e: movq   $0xf,(%rsp)
  0x000000010f802d36: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop rdi=Oop [96]=Oop rdx=Oop rbx=Oop off=2171}
                                                ;*ifnonnull
                                                ; - java.lang.ClassLoader::isAncestor@15 (line 1486)
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@15 (line 1504)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1527)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ;   {runtime_call}
  0x000000010f802d3b: jmpq   0x000000010f802a6a
  0x000000010f802d40: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop rdi=Oop [96]=Oop rdx=Oop off=2181}
                                                ;*getfield parent
                                                ; - java.lang.ClassLoader::isAncestor@3 (line 1482)
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@15 (line 1504)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1527)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ;   {runtime_call}
  0x000000010f802d45: movabs $0x0,%rdx          ;   {oop(NULL)}
  0x000000010f802d4f: push   %rax
  0x000000010f802d50: push   %rbx
  0x000000010f802d51: mov    0x48(%rdx),%rbx
  0x000000010f802d55: push   %rdi
  0x000000010f802d56: push   %rsi
  0x000000010f802d57: push   %rdx
  0x000000010f802d58: push   %rcx
  0x000000010f802d59: push   %r8
  0x000000010f802d5b: push   %r9
  0x000000010f802d5d: push   %r10
  0x000000010f802d5f: mov    %rsp,%r10
  0x000000010f802d62: and    $0xfffffffffffffff0,%rsp
  0x000000010f802d66: push   %r10
  0x000000010f802d68: push   %r11
  0x000000010f802d6a: mov    $0x10d,%edi
  0x000000010f802d6f: movabs $0x7fff203204e5,%r10  ;   {runtime_call}
  0x000000010f802d79: callq  *%r10
  0x000000010f802d7c: pop    %r11
  0x000000010f802d7e: pop    %rsp
  0x000000010f802d7f: pop    %r10
  0x000000010f802d81: pop    %r9
  0x000000010f802d83: pop    %r8
  0x000000010f802d85: pop    %rcx
  0x000000010f802d86: pop    %rdx
  0x000000010f802d87: pop    %rsi
  0x000000010f802d88: pop    %rdi
  0x000000010f802d89: cmp    0x118(%rbx),%rax
  0x000000010f802d90: pop    %rbx
  0x000000010f802d91: pop    %rax
  0x000000010f802d92: jne    0x000000010f802da2
  0x000000010f802d98: jmpq   0x000000010f802ba2
  0x000000010f802d9d: mov    $0xa535d00,%eax
  0x000000010f802da2: callq  0x000000010f7d0ce0  ; OopMap{[96]=Oop rsi=Oop off=2279}
                                                ;*getstatic GET_CLASSLOADER_PERMISSION
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@22 (line 1528)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ;   {runtime_call}
  0x000000010f802da7: jmpq   0x000000010f802b98
  0x000000010f802dac: callq  0x000000010f7cd0c0  ; OopMap{[96]=Oop rsi=Oop rdx=Oop off=2289}
                                                ;*getstatic GET_CLASSLOADER_PERMISSION
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@22 (line 1528)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ;   {runtime_call}
  0x000000010f802db1: mov    0x0(%rdx),%edx
  0x000000010f802db7: mov    $0x6050b00,%eax
  0x000000010f802dbc: callq  0x000000010f7d04e0  ; OopMap{[96]=Oop rsi=Oop rdx=Oop off=2305}
                                                ;*getstatic GET_CLASSLOADER_PERMISSION
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@22 (line 1528)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ;   {runtime_call}
  0x000000010f802dc1: jmpq   0x000000010f802ba8
  0x000000010f802dc6: callq  0x000000010f7cd0c0  ; OopMap{[96]=Oop rsi=Oop rdx=Oop off=2315}
                                                ;*invokevirtual checkPermission
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@25 (line 1528)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ;   {runtime_call}
  0x000000010f802dcb: nop
  0x000000010f802dcc: nop
  0x000000010f802dcd: mov    0x2a8(%r15),%rax
  0x000000010f802dd4: movabs $0x0,%r10
  0x000000010f802dde: mov    %r10,0x2a8(%r15)
  0x000000010f802de5: movabs $0x0,%r10
  0x000000010f802def: mov    %r10,0x2b0(%r15)
  0x000000010f802df6: add    $0x70,%rsp
  0x000000010f802dfa: pop    %rbp
  0x000000010f802dfb: jmpq   0x000000010f73f560  ;   {runtime_call}
[Stub Code]
  0x000000010f802e00: nop                       ;   {no_reloc}
  0x000000010f802e01: nop
  0x000000010f802e02: nop
  0x000000010f802e03: nop
  0x000000010f802e04: nop
  0x000000010f802e05: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f802e0f: jmpq   0x000000010f802e0f  ;   {runtime_call}
  0x000000010f802e14: nop
  0x000000010f802e15: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f802e1f: jmpq   0x000000010f802e1f  ;   {runtime_call}
[Exception Handler]
  0x000000010f802e24: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f802e29: mov    %rsp,-0x28(%rsp)
  0x000000010f802e2e: sub    $0x80,%rsp
  0x000000010f802e35: mov    %rax,0x78(%rsp)
  0x000000010f802e3a: mov    %rcx,0x70(%rsp)
  0x000000010f802e3f: mov    %rdx,0x68(%rsp)
  0x000000010f802e44: mov    %rbx,0x60(%rsp)
  0x000000010f802e49: mov    %rbp,0x50(%rsp)
  0x000000010f802e4e: mov    %rsi,0x48(%rsp)
  0x000000010f802e53: mov    %rdi,0x40(%rsp)
  0x000000010f802e58: mov    %r8,0x38(%rsp)
  0x000000010f802e5d: mov    %r9,0x30(%rsp)
  0x000000010f802e62: mov    %r10,0x28(%rsp)
  0x000000010f802e67: mov    %r11,0x20(%rsp)
  0x000000010f802e6c: mov    %r12,0x18(%rsp)
  0x000000010f802e71: mov    %r13,0x10(%rsp)
  0x000000010f802e76: mov    %r14,0x8(%rsp)
  0x000000010f802e7b: mov    %r15,(%rsp)
  0x000000010f802e7f: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f802e89: movabs $0x10f802e29,%rsi  ;   {internal_word}
  0x000000010f802e93: mov    %rsp,%rdx
  0x000000010f802e96: and    $0xfffffffffffffff0,%rsp
  0x000000010f802e9a: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f802e9f: hlt    
[Deopt Handler Code]
  0x000000010f802ea0: movabs $0x10f802ea0,%r10  ;   {section_word}
  0x000000010f802eaa: push   %r10
  0x000000010f802eac: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f802eb1: hlt    
  0x000000010f802eb2: hlt    
  0x000000010f802eb3: hlt    
  0x000000010f802eb4: hlt    
  0x000000010f802eb5: hlt    
  0x000000010f802eb6: hlt    
  0x000000010f802eb7: hlt    
Decoding compiled method 0x000000010f803410:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010eb37288} 'rangeCheck' '(I)V' in 'java/util/ArrayList'
  # this:     rsi:rsi   = 'java/util/ArrayList'
  # parm0:    rdx       = int
  #           [sp+0xc0]  (sp of caller)
  0x000000010f803620: mov    0x8(%rsi),%r10d
  0x000000010f803624: shl    $0x3,%r10
  0x000000010f803628: cmp    %rax,%r10
  0x000000010f80362b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f803631: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f80363c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f803640: mov    %eax,-0x14000(%rsp)
  0x000000010f803647: push   %rbp
  0x000000010f803648: sub    $0xb0,%rsp
  0x000000010f80364f: movabs $0x10ed9a3a8,%rax  ;   {metadata(method data for {method} {0x000000010eb37288} 'rangeCheck' '(I)V' in 'java/util/ArrayList')}
  0x000000010f803659: mov    0xdc(%rax),%edi
  0x000000010f80365f: add    $0x8,%edi
  0x000000010f803662: mov    %edi,0xdc(%rax)
  0x000000010f803668: movabs $0x10eb37288,%rax  ;   {metadata({method} {0x000000010eb37288} 'rangeCheck' '(I)V' in 'java/util/ArrayList')}
  0x000000010f803672: and    $0x1ff8,%edi
  0x000000010f803678: cmp    $0x0,%edi
  0x000000010f80367b: je     0x000000010f803e39  ;*iload_1
                                                ; - java.util.ArrayList::rangeCheck@0 (line 656)

  0x000000010f803681: mov    0x10(%rsi),%eax    ;*getfield size
                                                ; - java.util.ArrayList::rangeCheck@2 (line 656)

  0x000000010f803684: cmp    %eax,%edx
  0x000000010f803686: movabs $0x10ed9a3a8,%rax  ;   {metadata(method data for {method} {0x000000010eb37288} 'rangeCheck' '(I)V' in 'java/util/ArrayList')}
  0x000000010f803690: movabs $0x108,%rdi
  0x000000010f80369a: jl     0x000000010f8036aa
  0x000000010f8036a0: movabs $0x118,%rdi
  0x000000010f8036aa: mov    (%rax,%rdi,1),%rcx
  0x000000010f8036ae: lea    0x1(%rcx),%rcx
  0x000000010f8036b2: mov    %rcx,(%rax,%rdi,1)
  0x000000010f8036b6: jge    0x000000010f8036cb  ;*if_icmplt
                                                ; - java.util.ArrayList::rangeCheck@5 (line 656)

  0x000000010f8036bc: add    $0xb0,%rsp
  0x000000010f8036c3: pop    %rbp
  0x000000010f8036c4: test   %eax,-0x8d685ca(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f8036ca: retq                      ;*return
                                                ; - java.util.ArrayList::rangeCheck@21 (line 658)

  0x000000010f8036cb: mov    %edx,0x80(%rsp)
  0x000000010f8036d2: nopw   0x0(%rax,%rax,1)
  0x000000010f8036d8: jmpq   0x000000010f803e5f  ;   {no_reloc}
  0x000000010f8036dd: add    %al,(%rax)
  0x000000010f8036df: add    %al,(%rax)
  0x000000010f8036e1: add    %ch,%cl
  0x000000010f8036e3: (bad)  
  0x000000010f8036e4: (bad)  
  0x000000010f8036e5: add    %al,(%rax)         ;*new  ; - java.util.ArrayList::rangeCheck@8 (line 657)

  0x000000010f8036e7: mov    %rsi,%rdx
  0x000000010f8036ea: movabs $0x10ed9a3a8,%rdi  ;   {metadata(method data for {method} {0x000000010eb37288} 'rangeCheck' '(I)V' in 'java/util/ArrayList')}
  0x000000010f8036f4: addq   $0x1,0x128(%rdi)
  0x000000010f8036fc: movabs $0x10ed9b0a0,%rdx  ;   {metadata(method data for {method} {0x000000010eb373e8} 'outOfBoundsMsg' '(I)Ljava/lang/String;' in 'java/util/ArrayList')}
  0x000000010f803706: mov    0xdc(%rdx),%edi
  0x000000010f80370c: add    $0x8,%edi
  0x000000010f80370f: mov    %edi,0xdc(%rdx)
  0x000000010f803715: movabs $0x10eb373e8,%rdx  ;   {metadata({method} {0x000000010eb373e8} 'outOfBoundsMsg' '(I)Ljava/lang/String;' in 'java/util/ArrayList')}
  0x000000010f80371f: and    $0x7ffff8,%edi
  0x000000010f803725: cmp    $0x0,%edi
  0x000000010f803728: je     0x000000010f803e76
  0x000000010f80372e: xchg   %ax,%ax
  0x000000010f803730: jmpq   0x000000010f803e9c  ;   {no_reloc}
  0x000000010f803735: add    %al,(%rax)
  0x000000010f803737: add    %al,(%rax)
  0x000000010f803739: add    %cl,-0x77(%rax)
  0x000000010f80373c: test   %ah,(%rax,%rdx,4)
  0x000000010f80373f: add    %al,(%rax)
  0x000000010f803741: add    %cl,-0x77(%rax)
  0x000000010f803744: mov    $0x24,%ah
  0x000000010f803746: mov    %al,(%rax)
  0x000000010f803748: add    %al,(%rax)
  0x000000010f80374a: mov    0x60(%r15),%rax
  0x000000010f80374e: lea    0x18(%rax),%rdi
  0x000000010f803752: cmp    0x70(%r15),%rdi
  0x000000010f803756: ja     0x000000010f803ea6
  0x000000010f80375c: mov    %rdi,0x60(%r15)
  0x000000010f803760: mov    0xa8(%rdx),%rcx
  0x000000010f803767: mov    %rcx,(%rax)
  0x000000010f80376a: mov    %rdx,%rcx
  0x000000010f80376d: shr    $0x3,%rcx
  0x000000010f803771: mov    %ecx,0x8(%rax)
  0x000000010f803774: xor    %rcx,%rcx
  0x000000010f803777: mov    %ecx,0xc(%rax)
  0x000000010f80377a: xor    %rcx,%rcx
  0x000000010f80377d: mov    %rcx,0x10(%rax)    ;*new  ; - java.util.ArrayList::outOfBoundsMsg@0 (line 674)
                                                ; - java.util.ArrayList::rangeCheck@14 (line 657)

  0x000000010f803781: mov    %rax,%rbx
  0x000000010f803784: movabs $0x10ed9b0a0,%rdx  ;   {metadata(method data for {method} {0x000000010eb373e8} 'outOfBoundsMsg' '(I)Ljava/lang/String;' in 'java/util/ArrayList')}
  0x000000010f80378e: addq   $0x1,0x108(%rdx)
  0x000000010f803796: movabs $0x10ed0ae70,%rbx  ;   {metadata(method data for {method} {0x000000010eaddf30} '<init>' '()V' in 'java/lang/StringBuilder')}
  0x000000010f8037a0: mov    0xdc(%rbx),%edx
  0x000000010f8037a6: add    $0x8,%edx
  0x000000010f8037a9: mov    %edx,0xdc(%rbx)
  0x000000010f8037af: movabs $0x10eaddf30,%rbx  ;   {metadata({method} {0x000000010eaddf30} '<init>' '()V' in 'java/lang/StringBuilder')}
  0x000000010f8037b9: and    $0x7ffff8,%edx
  0x000000010f8037bf: cmp    $0x0,%edx
  0x000000010f8037c2: je     0x000000010f803eb3
  0x000000010f8037c8: mov    %rax,%rbx
  0x000000010f8037cb: movabs $0x10ed0ae70,%rdx  ;   {metadata(method data for {method} {0x000000010eaddf30} '<init>' '()V' in 'java/lang/StringBuilder')}
  0x000000010f8037d5: addq   $0x1,0x108(%rdx)
  0x000000010f8037dd: movabs $0x10ec9a3e8,%rbx  ;   {metadata(method data for {method} {0x000000010eada260} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f8037e7: mov    0xdc(%rbx),%edx
  0x000000010f8037ed: add    $0x8,%edx
  0x000000010f8037f0: mov    %edx,0xdc(%rbx)
  0x000000010f8037f6: movabs $0x10eada260,%rbx  ;   {metadata({method} {0x000000010eada260} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f803800: and    $0x7ffff8,%edx
  0x000000010f803806: cmp    $0x0,%edx
  0x000000010f803809: je     0x000000010f803eca
  0x000000010f80380f: mov    %rax,%rbx
  0x000000010f803812: movabs $0x10ec9a3e8,%rdx  ;   {metadata(method data for {method} {0x000000010eada260} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f80381c: addq   $0x1,0x108(%rdx)
  0x000000010f803824: movabs $0x10ebdca10,%rbx  ;   {metadata(method data for {method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f80382e: mov    0xdc(%rbx),%edx
  0x000000010f803834: add    $0x8,%edx
  0x000000010f803837: mov    %edx,0xdc(%rbx)
  0x000000010f80383d: movabs $0x10ea65480,%rbx  ;   {metadata({method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f803847: and    $0x7ffff8,%edx
  0x000000010f80384d: cmp    $0x0,%edx
  0x000000010f803850: je     0x000000010f803ee1
  0x000000010f803856: mov    $0x10,%ebx
  0x000000010f80385b: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000000010f803865: mov    %rax,%r13
  0x000000010f803868: movslq %ebx,%rbx
  0x000000010f80386b: mov    %rbx,%rdi
  0x000000010f80386e: cmp    $0xffffff,%rbx
  0x000000010f803875: ja     0x000000010f803ef8
  0x000000010f80387b: movabs $0x17,%rsi
  0x000000010f803885: lea    (%rsi,%rbx,2),%rsi
  0x000000010f803889: and    $0xfffffffffffffff8,%rsi
  0x000000010f80388d: mov    0x60(%r15),%rax
  0x000000010f803891: lea    (%rax,%rsi,1),%rsi
  0x000000010f803895: cmp    0x70(%r15),%rsi
  0x000000010f803899: ja     0x000000010f803ef8
  0x000000010f80389f: mov    %rsi,0x60(%r15)
  0x000000010f8038a3: sub    %rax,%rsi
  0x000000010f8038a6: movq   $0x1,(%rax)
  0x000000010f8038ad: mov    %rdx,%rcx
  0x000000010f8038b0: shr    $0x3,%rcx
  0x000000010f8038b4: mov    %ecx,0x8(%rax)
  0x000000010f8038b7: mov    %ebx,0xc(%rax)
  0x000000010f8038ba: sub    $0x10,%rsi
  0x000000010f8038be: je     0x000000010f8038d5
  0x000000010f8038c4: xor    %rbx,%rbx
  0x000000010f8038c7: shr    $0x3,%rsi
  0x000000010f8038cb: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000010f8038d0: dec    %rsi
  0x000000010f8038d3: jne    0x000000010f8038cb  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::<init>@6 (line 68)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.util.ArrayList::outOfBoundsMsg@4 (line 674)
                                                ; - java.util.ArrayList::rangeCheck@14 (line 657)

  0x000000010f8038d5: mov    %rax,%r10
  0x000000010f8038d8: shr    $0x3,%r10
  0x000000010f8038dc: mov    %r10d,0x10(%r13)
  0x000000010f8038e0: mov    %r13,%rax
  0x000000010f8038e3: shr    $0x9,%rax
  0x000000010f8038e7: movabs $0x1065b9000,%rdx
  0x000000010f8038f1: movb   $0x0,(%rax,%rdx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::<init>@8 (line 68)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.util.ArrayList::outOfBoundsMsg@4 (line 674)
                                                ; - java.util.ArrayList::rangeCheck@14 (line 657)

  0x000000010f8038f5: mov    %r13,%rax
  0x000000010f8038f8: movabs $0x10ed9b0a0,%rdx  ;   {metadata(method data for {method} {0x000000010eb373e8} 'outOfBoundsMsg' '(I)Ljava/lang/String;' in 'java/util/ArrayList')}
  0x000000010f803902: mov    0x8(%rax),%eax
  0x000000010f803905: shl    $0x3,%rax
  0x000000010f803909: cmp    0x120(%rdx),%rax
  0x000000010f803910: jne    0x000000010f80391f
  0x000000010f803912: addq   $0x1,0x128(%rdx)
  0x000000010f80391a: jmpq   0x000000010f803985
  0x000000010f80391f: cmp    0x130(%rdx),%rax
  0x000000010f803926: jne    0x000000010f803935
  0x000000010f803928: addq   $0x1,0x138(%rdx)
  0x000000010f803930: jmpq   0x000000010f803985
  0x000000010f803935: cmpq   $0x0,0x120(%rdx)
  0x000000010f803940: jne    0x000000010f803959
  0x000000010f803942: mov    %rax,0x120(%rdx)
  0x000000010f803949: movq   $0x1,0x128(%rdx)
  0x000000010f803954: jmpq   0x000000010f803985
  0x000000010f803959: cmpq   $0x0,0x130(%rdx)
  0x000000010f803964: jne    0x000000010f80397d
  0x000000010f803966: mov    %rax,0x130(%rdx)
  0x000000010f80396d: movq   $0x1,0x138(%rdx)
  0x000000010f803978: jmpq   0x000000010f803985
  0x000000010f80397d: addq   $0x1,0x118(%rdx)
  0x000000010f803985: movabs $0x10ec81440,%rdx  ;   {metadata(method data for {method} {0x000000010eade248} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f80398f: mov    0xdc(%rdx),%esi
  0x000000010f803995: add    $0x8,%esi
  0x000000010f803998: mov    %esi,0xdc(%rdx)
  0x000000010f80399e: movabs $0x10eade248,%rdx  ;   {metadata({method} {0x000000010eade248} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f8039a8: and    $0x7ffff8,%esi
  0x000000010f8039ae: cmp    $0x0,%esi
  0x000000010f8039b1: je     0x000000010f803f02
  0x000000010f8039b7: mov    %r13,%rax
  0x000000010f8039ba: movabs $0x10ec81440,%rdx  ;   {metadata(method data for {method} {0x000000010eade248} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f8039c4: addq   $0x1,0x108(%rdx)
  0x000000010f8039cc: movabs $0x795968bd8,%rdx  ;   {oop("Index: ")}
  0x000000010f8039d6: mov    %r13,%rsi          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.ArrayList::outOfBoundsMsg@9 (line 674)
                                                ; - java.util.ArrayList::rangeCheck@14 (line 657)

  0x000000010f8039d9: mov    %r13,0x78(%rsp)
  0x000000010f8039de: nop
  0x000000010f8039df: callq  0x000000010f7170a0  ; OopMap{[120]=Oop [136]=Oop [144]=Oop off=964}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.ArrayList::outOfBoundsMsg@9 (line 674)
                                                ; - java.util.ArrayList::rangeCheck@14 (line 657)
                                                ;   {optimized virtual_call}
  0x000000010f8039e4: mov    0x78(%rsp),%rax
  0x000000010f8039e9: movabs $0x10ed9b0a0,%rdx  ;   {metadata(method data for {method} {0x000000010eb373e8} 'outOfBoundsMsg' '(I)Ljava/lang/String;' in 'java/util/ArrayList')}
  0x000000010f8039f3: mov    0x8(%rax),%eax
  0x000000010f8039f6: shl    $0x3,%rax
  0x000000010f8039fa: cmp    0x150(%rdx),%rax
  0x000000010f803a01: jne    0x000000010f803a10
  0x000000010f803a03: addq   $0x1,0x158(%rdx)
  0x000000010f803a0b: jmpq   0x000000010f803a76
  0x000000010f803a10: cmp    0x160(%rdx),%rax
  0x000000010f803a17: jne    0x000000010f803a26
  0x000000010f803a19: addq   $0x1,0x168(%rdx)
  0x000000010f803a21: jmpq   0x000000010f803a76
  0x000000010f803a26: cmpq   $0x0,0x150(%rdx)
  0x000000010f803a31: jne    0x000000010f803a4a
  0x000000010f803a33: mov    %rax,0x150(%rdx)
  0x000000010f803a3a: movq   $0x1,0x158(%rdx)
  0x000000010f803a45: jmpq   0x000000010f803a76
  0x000000010f803a4a: cmpq   $0x0,0x160(%rdx)
  0x000000010f803a55: jne    0x000000010f803a6e
  0x000000010f803a57: mov    %rax,0x160(%rdx)
  0x000000010f803a5e: movq   $0x1,0x168(%rdx)
  0x000000010f803a69: jmpq   0x000000010f803a76
  0x000000010f803a6e: addq   $0x1,0x148(%rdx)
  0x000000010f803a76: movabs $0x10ed0b000,%rdx  ;   {metadata(method data for {method} {0x000000010eade708} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f803a80: mov    0xdc(%rdx),%esi
  0x000000010f803a86: add    $0x8,%esi
  0x000000010f803a89: mov    %esi,0xdc(%rdx)
  0x000000010f803a8f: movabs $0x10eade708,%rdx  ;   {metadata({method} {0x000000010eade708} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f803a99: and    $0x7ffff8,%esi
  0x000000010f803a9f: cmp    $0x0,%esi
  0x000000010f803aa2: je     0x000000010f803f19
  0x000000010f803aa8: mov    0x78(%rsp),%rax
  0x000000010f803aad: movabs $0x10ed0b000,%rdx  ;   {metadata(method data for {method} {0x000000010eade708} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f803ab7: addq   $0x1,0x108(%rdx)
  0x000000010f803abf: mov    0x80(%rsp),%edx
  0x000000010f803ac6: mov    0x78(%rsp),%rsi    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.ArrayList::outOfBoundsMsg@13 (line 674)
                                                ; - java.util.ArrayList::rangeCheck@14 (line 657)

  0x000000010f803acb: nop
  0x000000010f803acc: nop
  0x000000010f803acd: nop
  0x000000010f803ace: nop
  0x000000010f803acf: callq  0x000000010f7170a0  ; OopMap{[120]=Oop [136]=Oop [144]=Oop off=1204}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.ArrayList::outOfBoundsMsg@13 (line 674)
                                                ; - java.util.ArrayList::rangeCheck@14 (line 657)
                                                ;   {optimized virtual_call}
  0x000000010f803ad4: mov    0x78(%rsp),%rax
  0x000000010f803ad9: movabs $0x10ed9b0a0,%rdx  ;   {metadata(method data for {method} {0x000000010eb373e8} 'outOfBoundsMsg' '(I)Ljava/lang/String;' in 'java/util/ArrayList')}
  0x000000010f803ae3: mov    0x8(%rax),%eax
  0x000000010f803ae6: shl    $0x3,%rax
  0x000000010f803aea: cmp    0x180(%rdx),%rax
  0x000000010f803af1: jne    0x000000010f803b00
  0x000000010f803af3: addq   $0x1,0x188(%rdx)
  0x000000010f803afb: jmpq   0x000000010f803b66
  0x000000010f803b00: cmp    0x190(%rdx),%rax
  0x000000010f803b07: jne    0x000000010f803b16
  0x000000010f803b09: addq   $0x1,0x198(%rdx)
  0x000000010f803b11: jmpq   0x000000010f803b66
  0x000000010f803b16: cmpq   $0x0,0x180(%rdx)
  0x000000010f803b21: jne    0x000000010f803b3a
  0x000000010f803b23: mov    %rax,0x180(%rdx)
  0x000000010f803b2a: movq   $0x1,0x188(%rdx)
  0x000000010f803b35: jmpq   0x000000010f803b66
  0x000000010f803b3a: cmpq   $0x0,0x190(%rdx)
  0x000000010f803b45: jne    0x000000010f803b5e
  0x000000010f803b47: mov    %rax,0x190(%rdx)
  0x000000010f803b4e: movq   $0x1,0x198(%rdx)
  0x000000010f803b59: jmpq   0x000000010f803b66
  0x000000010f803b5e: addq   $0x1,0x178(%rdx)
  0x000000010f803b66: movabs $0x10ec81440,%rdx  ;   {metadata(method data for {method} {0x000000010eade248} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f803b70: mov    0xdc(%rdx),%esi
  0x000000010f803b76: add    $0x8,%esi
  0x000000010f803b79: mov    %esi,0xdc(%rdx)
  0x000000010f803b7f: movabs $0x10eade248,%rdx  ;   {metadata({method} {0x000000010eade248} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f803b89: and    $0x7ffff8,%esi
  0x000000010f803b8f: cmp    $0x0,%esi
  0x000000010f803b92: je     0x000000010f803f30
  0x000000010f803b98: mov    0x78(%rsp),%rax
  0x000000010f803b9d: movabs $0x10ec81440,%rdx  ;   {metadata(method data for {method} {0x000000010eade248} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f803ba7: addq   $0x1,0x108(%rdx)
  0x000000010f803baf: movabs $0x795968c10,%rdx  ;   {oop(", Size: ")}
  0x000000010f803bb9: mov    0x78(%rsp),%rsi    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.ArrayList::outOfBoundsMsg@18 (line 674)
                                                ; - java.util.ArrayList::rangeCheck@14 (line 657)

  0x000000010f803bbe: nop
  0x000000010f803bbf: callq  0x000000010f7170a0  ; OopMap{[120]=Oop [136]=Oop [144]=Oop off=1444}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.ArrayList::outOfBoundsMsg@18 (line 674)
                                                ; - java.util.ArrayList::rangeCheck@14 (line 657)
                                                ;   {optimized virtual_call}
  0x000000010f803bc4: mov    0x88(%rsp),%rsi
  0x000000010f803bcc: mov    0x10(%rsi),%edx    ;*getfield size
                                                ; - java.util.ArrayList::outOfBoundsMsg@22 (line 674)
                                                ; - java.util.ArrayList::rangeCheck@14 (line 657)

  0x000000010f803bcf: mov    0x78(%rsp),%rax
  0x000000010f803bd4: movabs $0x10ed9b0a0,%rsi  ;   {metadata(method data for {method} {0x000000010eb373e8} 'outOfBoundsMsg' '(I)Ljava/lang/String;' in 'java/util/ArrayList')}
  0x000000010f803bde: mov    0x8(%rax),%eax
  0x000000010f803be1: shl    $0x3,%rax
  0x000000010f803be5: cmp    0x1b0(%rsi),%rax
  0x000000010f803bec: jne    0x000000010f803bfb
  0x000000010f803bee: addq   $0x1,0x1b8(%rsi)
  0x000000010f803bf6: jmpq   0x000000010f803c61
  0x000000010f803bfb: cmp    0x1c0(%rsi),%rax
  0x000000010f803c02: jne    0x000000010f803c11
  0x000000010f803c04: addq   $0x1,0x1c8(%rsi)
  0x000000010f803c0c: jmpq   0x000000010f803c61
  0x000000010f803c11: cmpq   $0x0,0x1b0(%rsi)
  0x000000010f803c1c: jne    0x000000010f803c35
  0x000000010f803c1e: mov    %rax,0x1b0(%rsi)
  0x000000010f803c25: movq   $0x1,0x1b8(%rsi)
  0x000000010f803c30: jmpq   0x000000010f803c61
  0x000000010f803c35: cmpq   $0x0,0x1c0(%rsi)
  0x000000010f803c40: jne    0x000000010f803c59
  0x000000010f803c42: mov    %rax,0x1c0(%rsi)
  0x000000010f803c49: movq   $0x1,0x1c8(%rsi)
  0x000000010f803c54: jmpq   0x000000010f803c61
  0x000000010f803c59: addq   $0x1,0x1a8(%rsi)
  0x000000010f803c61: movabs $0x10ed0b000,%rsi  ;   {metadata(method data for {method} {0x000000010eade708} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f803c6b: mov    0xdc(%rsi),%edi
  0x000000010f803c71: add    $0x8,%edi
  0x000000010f803c74: mov    %edi,0xdc(%rsi)
  0x000000010f803c7a: movabs $0x10eade708,%rsi  ;   {metadata({method} {0x000000010eade708} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f803c84: and    $0x7ffff8,%edi
  0x000000010f803c8a: cmp    $0x0,%edi
  0x000000010f803c8d: je     0x000000010f803f47
  0x000000010f803c93: mov    0x78(%rsp),%rax
  0x000000010f803c98: movabs $0x10ed0b000,%rsi  ;   {metadata(method data for {method} {0x000000010eade708} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f803ca2: addq   $0x1,0x108(%rsi)
  0x000000010f803caa: mov    0x78(%rsp),%rsi    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.ArrayList::outOfBoundsMsg@25 (line 674)
                                                ; - java.util.ArrayList::rangeCheck@14 (line 657)

  0x000000010f803caf: callq  0x000000010f7170a0  ; OopMap{[120]=Oop [144]=Oop off=1684}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.ArrayList::outOfBoundsMsg@25 (line 674)
                                                ; - java.util.ArrayList::rangeCheck@14 (line 657)
                                                ;   {optimized virtual_call}
  0x000000010f803cb4: mov    0x78(%rsp),%rax
  0x000000010f803cb9: movabs $0x10ed9b0a0,%rdx  ;   {metadata(method data for {method} {0x000000010eb373e8} 'outOfBoundsMsg' '(I)Ljava/lang/String;' in 'java/util/ArrayList')}
  0x000000010f803cc3: mov    0x8(%rax),%eax
  0x000000010f803cc6: shl    $0x3,%rax
  0x000000010f803cca: cmp    0x1e0(%rdx),%rax
  0x000000010f803cd1: jne    0x000000010f803ce0
  0x000000010f803cd3: addq   $0x1,0x1e8(%rdx)
  0x000000010f803cdb: jmpq   0x000000010f803d46
  0x000000010f803ce0: cmp    0x1f0(%rdx),%rax
  0x000000010f803ce7: jne    0x000000010f803cf6
  0x000000010f803ce9: addq   $0x1,0x1f8(%rdx)
  0x000000010f803cf1: jmpq   0x000000010f803d46
  0x000000010f803cf6: cmpq   $0x0,0x1e0(%rdx)
  0x000000010f803d01: jne    0x000000010f803d1a
  0x000000010f803d03: mov    %rax,0x1e0(%rdx)
  0x000000010f803d0a: movq   $0x1,0x1e8(%rdx)
  0x000000010f803d15: jmpq   0x000000010f803d46
  0x000000010f803d1a: cmpq   $0x0,0x1f0(%rdx)
  0x000000010f803d25: jne    0x000000010f803d3e
  0x000000010f803d27: mov    %rax,0x1f0(%rdx)
  0x000000010f803d2e: movq   $0x1,0x1f8(%rdx)
  0x000000010f803d39: jmpq   0x000000010f803d46
  0x000000010f803d3e: addq   $0x1,0x1d8(%rdx)
  0x000000010f803d46: movabs $0x10ed00b80,%rdx  ;   {metadata(method data for {method} {0x000000010eadf5f8} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder')}
  0x000000010f803d50: mov    0xdc(%rdx),%esi
  0x000000010f803d56: add    $0x8,%esi
  0x000000010f803d59: mov    %esi,0xdc(%rdx)
  0x000000010f803d5f: movabs $0x10eadf5f8,%rdx  ;   {metadata({method} {0x000000010eadf5f8} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder')}
  0x000000010f803d69: and    $0x7ffff8,%esi
  0x000000010f803d6f: cmp    $0x0,%esi
  0x000000010f803d72: je     0x000000010f803f5e
  0x000000010f803d78: movabs $0x7c00016d0,%rdx  ;   {metadata('java/lang/String')}
  0x000000010f803d82: mov    0x60(%r15),%rax
  0x000000010f803d86: lea    0x18(%rax),%rdi
  0x000000010f803d8a: cmp    0x70(%r15),%rdi
  0x000000010f803d8e: ja     0x000000010f803f75
  0x000000010f803d94: mov    %rdi,0x60(%r15)
  0x000000010f803d98: mov    0xa8(%rdx),%rcx
  0x000000010f803d9f: mov    %rcx,(%rax)
  0x000000010f803da2: mov    %rdx,%rcx
  0x000000010f803da5: shr    $0x3,%rcx
  0x000000010f803da9: mov    %ecx,0x8(%rax)
  0x000000010f803dac: xor    %rcx,%rcx
  0x000000010f803daf: mov    %ecx,0xc(%rax)
  0x000000010f803db2: xor    %rcx,%rcx
  0x000000010f803db5: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.util.ArrayList::outOfBoundsMsg@28 (line 674)
                                                ; - java.util.ArrayList::rangeCheck@14 (line 657)

  0x000000010f803db9: mov    0x78(%rsp),%rdx
  0x000000010f803dbe: mov    0x10(%rdx),%ecx
  0x000000010f803dc1: shl    $0x3,%rcx          ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 407)
                                                ; - java.util.ArrayList::outOfBoundsMsg@28 (line 674)
                                                ; - java.util.ArrayList::rangeCheck@14 (line 657)

  0x000000010f803dc5: mov    0xc(%rdx),%r8d     ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 407)
                                                ; - java.util.ArrayList::outOfBoundsMsg@28 (line 674)
                                                ; - java.util.ArrayList::rangeCheck@14 (line 657)

  0x000000010f803dc9: mov    %rax,%rdx
  0x000000010f803dcc: movabs $0x10ed00b80,%rsi  ;   {metadata(method data for {method} {0x000000010eadf5f8} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder')}
  0x000000010f803dd6: addq   $0x1,0x108(%rsi)
  0x000000010f803dde: mov    %rcx,%rdx
  0x000000010f803de1: mov    $0x0,%ecx
  0x000000010f803de6: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.util.ArrayList::outOfBoundsMsg@28 (line 674)
                                                ; - java.util.ArrayList::rangeCheck@14 (line 657)

  0x000000010f803de9: mov    %rax,0x98(%rsp)
  0x000000010f803df1: nop
  0x000000010f803df2: nop
  0x000000010f803df3: nop
  0x000000010f803df4: nop
  0x000000010f803df5: nop
  0x000000010f803df6: nop
  0x000000010f803df7: callq  0x000000010f7170a0  ; OopMap{[144]=Oop [152]=Oop off=2012}
                                                ;*invokespecial <init>
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.util.ArrayList::outOfBoundsMsg@28 (line 674)
                                                ; - java.util.ArrayList::rangeCheck@14 (line 657)
                                                ;   {optimized virtual_call}
  0x000000010f803dfc: mov    0x90(%rsp),%rax
  0x000000010f803e04: movabs $0x10ed9a3a8,%rdx  ;   {metadata(method data for {method} {0x000000010eb37288} 'rangeCheck' '(I)V' in 'java/util/ArrayList')}
  0x000000010f803e0e: addq   $0x1,0x138(%rdx)
  0x000000010f803e16: mov    0x98(%rsp),%rdx
  0x000000010f803e1e: mov    0x90(%rsp),%rsi    ;*invokespecial <init>
                                                ; - java.util.ArrayList::rangeCheck@17 (line 657)

  0x000000010f803e26: nop
  0x000000010f803e27: callq  0x000000010f7170a0  ; OopMap{[144]=Oop off=2060}
                                                ;*invokespecial <init>
                                                ; - java.util.ArrayList::rangeCheck@17 (line 657)
                                                ;   {optimized virtual_call}
  0x000000010f803e2c: mov    0x90(%rsp),%rax
  0x000000010f803e34: jmpq   0x000000010f803fad
  0x000000010f803e39: mov    %rax,0x8(%rsp)
  0x000000010f803e3e: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f803e46: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=2091}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::rangeCheck@-1 (line 656)
                                                ;   {runtime_call}
  0x000000010f803e4b: jmpq   0x000000010f803681
  0x000000010f803e50: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f803e5a: mov    $0xa050f00,%eax
  0x000000010f803e5f: callq  0x000000010f7d08e0  ; OopMap{rsi=Oop off=2116}
                                                ;*new  ; - java.util.ArrayList::rangeCheck@8 (line 657)
                                                ;   {runtime_call}
  0x000000010f803e64: jmpq   0x000000010f8036d8
  0x000000010f803e69: mov    %rdx,%rdx
  0x000000010f803e6c: callq  0x000000010f7cd560  ; OopMap{rsi=Oop off=2129}
                                                ;*new  ; - java.util.ArrayList::rangeCheck@8 (line 657)
                                                ;   {runtime_call}
  0x000000010f803e71: jmpq   0x000000010f8036e7
  0x000000010f803e76: mov    %rdx,0x8(%rsp)
  0x000000010f803e7b: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f803e83: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop rax=Oop off=2152}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::outOfBoundsMsg@-1 (line 674)
                                                ; - java.util.ArrayList::rangeCheck@14 (line 657)
                                                ;   {runtime_call}
  0x000000010f803e88: jmpq   0x000000010f80372e
  0x000000010f803e8d: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f803e97: mov    $0xa050f00,%eax
  0x000000010f803e9c: callq  0x000000010f7d08e0  ; OopMap{rsi=Oop rax=Oop off=2177}
                                                ;*new  ; - java.util.ArrayList::outOfBoundsMsg@0 (line 674)
                                                ; - java.util.ArrayList::rangeCheck@14 (line 657)
                                                ;   {runtime_call}
  0x000000010f803ea1: jmpq   0x000000010f803730
  0x000000010f803ea6: mov    %rdx,%rdx
  0x000000010f803ea9: callq  0x000000010f7cd820  ; OopMap{[144]=Oop [136]=Oop off=2190}
                                                ;*new  ; - java.util.ArrayList::outOfBoundsMsg@0 (line 674)
                                                ; - java.util.ArrayList::rangeCheck@14 (line 657)
                                                ;   {runtime_call}
  0x000000010f803eae: jmpq   0x000000010f803781
  0x000000010f803eb3: mov    %rbx,0x8(%rsp)
  0x000000010f803eb8: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f803ec0: callq  0x000000010f7d1a20  ; OopMap{[144]=Oop [136]=Oop rax=Oop off=2213}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::<init>@-1 (line 89)
                                                ; - java.util.ArrayList::outOfBoundsMsg@4 (line 674)
                                                ; - java.util.ArrayList::rangeCheck@14 (line 657)
                                                ;   {runtime_call}
  0x000000010f803ec5: jmpq   0x000000010f8037c8
  0x000000010f803eca: mov    %rbx,0x8(%rsp)
  0x000000010f803ecf: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f803ed7: callq  0x000000010f7d1a20  ; OopMap{[144]=Oop [136]=Oop rax=Oop off=2236}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::<init>@-1 (line 67)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.util.ArrayList::outOfBoundsMsg@4 (line 674)
                                                ; - java.util.ArrayList::rangeCheck@14 (line 657)
                                                ;   {runtime_call}
  0x000000010f803edc: jmpq   0x000000010f80380f
  0x000000010f803ee1: mov    %rbx,0x8(%rsp)
  0x000000010f803ee6: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f803eee: callq  0x000000010f7d1a20  ; OopMap{[144]=Oop [136]=Oop rax=Oop off=2259}
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::<init>@1 (line 67)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.util.ArrayList::outOfBoundsMsg@4 (line 674)
                                                ; - java.util.ArrayList::rangeCheck@14 (line 657)
                                                ;   {runtime_call}
  0x000000010f803ef3: jmpq   0x000000010f803856
  0x000000010f803ef8: callq  0x000000010f7ce120  ; OopMap{[144]=Oop [136]=Oop r13=Oop off=2269}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::<init>@6 (line 68)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.util.ArrayList::outOfBoundsMsg@4 (line 674)
                                                ; - java.util.ArrayList::rangeCheck@14 (line 657)
                                                ;   {runtime_call}
  0x000000010f803efd: jmpq   0x000000010f8038d5
  0x000000010f803f02: mov    %rdx,0x8(%rsp)
  0x000000010f803f07: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f803f0f: callq  0x000000010f7d1a20  ; OopMap{[144]=Oop [136]=Oop r13=Oop off=2292}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ; - java.util.ArrayList::outOfBoundsMsg@9 (line 674)
                                                ; - java.util.ArrayList::rangeCheck@14 (line 657)
                                                ;   {runtime_call}
  0x000000010f803f14: jmpq   0x000000010f8039b7
  0x000000010f803f19: mov    %rdx,0x8(%rsp)
  0x000000010f803f1e: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f803f26: callq  0x000000010f7d1a20  ; OopMap{[120]=Oop [136]=Oop [144]=Oop off=2315}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.util.ArrayList::outOfBoundsMsg@13 (line 674)
                                                ; - java.util.ArrayList::rangeCheck@14 (line 657)
                                                ;   {runtime_call}
  0x000000010f803f2b: jmpq   0x000000010f803aa8
  0x000000010f803f30: mov    %rdx,0x8(%rsp)
  0x000000010f803f35: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f803f3d: callq  0x000000010f7d1a20  ; OopMap{[120]=Oop [136]=Oop [144]=Oop off=2338}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ; - java.util.ArrayList::outOfBoundsMsg@18 (line 674)
                                                ; - java.util.ArrayList::rangeCheck@14 (line 657)
                                                ;   {runtime_call}
  0x000000010f803f42: jmpq   0x000000010f803b98
  0x000000010f803f47: mov    %rsi,0x8(%rsp)
  0x000000010f803f4c: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f803f54: callq  0x000000010f7d1a20  ; OopMap{[120]=Oop [144]=Oop off=2361}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.util.ArrayList::outOfBoundsMsg@25 (line 674)
                                                ; - java.util.ArrayList::rangeCheck@14 (line 657)
                                                ;   {runtime_call}
  0x000000010f803f59: jmpq   0x000000010f803c93
  0x000000010f803f5e: mov    %rdx,0x8(%rsp)
  0x000000010f803f63: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f803f6b: callq  0x000000010f7d1a20  ; OopMap{[120]=Oop [144]=Oop off=2384}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.util.ArrayList::outOfBoundsMsg@28 (line 674)
                                                ; - java.util.ArrayList::rangeCheck@14 (line 657)
                                                ;   {runtime_call}
  0x000000010f803f70: jmpq   0x000000010f803d78
  0x000000010f803f75: mov    %rdx,%rdx
  0x000000010f803f78: callq  0x000000010f7cd820  ; OopMap{[120]=Oop [144]=Oop off=2397}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.util.ArrayList::outOfBoundsMsg@28 (line 674)
                                                ; - java.util.ArrayList::rangeCheck@14 (line 657)
                                                ;   {runtime_call}
  0x000000010f803f7d: jmpq   0x000000010f803db9
  0x000000010f803f82: nop
  0x000000010f803f83: nop
  0x000000010f803f84: mov    0x2a8(%r15),%rax
  0x000000010f803f8b: movabs $0x0,%r10
  0x000000010f803f95: mov    %r10,0x2a8(%r15)
  0x000000010f803f9c: movabs $0x0,%r10
  0x000000010f803fa6: mov    %r10,0x2b0(%r15)
  0x000000010f803fad: add    $0xb0,%rsp
  0x000000010f803fb4: pop    %rbp
  0x000000010f803fb5: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f803fba: hlt    
  0x000000010f803fbb: hlt    
  0x000000010f803fbc: hlt    
  0x000000010f803fbd: hlt    
  0x000000010f803fbe: hlt    
  0x000000010f803fbf: hlt    
[Stub Code]
  0x000000010f803fc0: nop                       ;   {no_reloc}
  0x000000010f803fc1: nop
  0x000000010f803fc2: nop
  0x000000010f803fc3: nop
  0x000000010f803fc4: nop
  0x000000010f803fc5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f803fcf: jmpq   0x000000010f803fcf  ;   {runtime_call}
  0x000000010f803fd4: nop
  0x000000010f803fd5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f803fdf: jmpq   0x000000010f803fdf  ;   {runtime_call}
  0x000000010f803fe4: nop
  0x000000010f803fe5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f803fef: jmpq   0x000000010f803fef  ;   {runtime_call}
  0x000000010f803ff4: nop
  0x000000010f803ff5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f803fff: jmpq   0x000000010f803fff  ;   {runtime_call}
  0x000000010f804004: nop
  0x000000010f804005: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f80400f: jmpq   0x000000010f80400f  ;   {runtime_call}
  0x000000010f804014: nop
  0x000000010f804015: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f80401f: jmpq   0x000000010f80401f  ;   {runtime_call}
[Exception Handler]
  0x000000010f804024: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f804029: mov    %rsp,-0x28(%rsp)
  0x000000010f80402e: sub    $0x80,%rsp
  0x000000010f804035: mov    %rax,0x78(%rsp)
  0x000000010f80403a: mov    %rcx,0x70(%rsp)
  0x000000010f80403f: mov    %rdx,0x68(%rsp)
  0x000000010f804044: mov    %rbx,0x60(%rsp)
  0x000000010f804049: mov    %rbp,0x50(%rsp)
  0x000000010f80404e: mov    %rsi,0x48(%rsp)
  0x000000010f804053: mov    %rdi,0x40(%rsp)
  0x000000010f804058: mov    %r8,0x38(%rsp)
  0x000000010f80405d: mov    %r9,0x30(%rsp)
  0x000000010f804062: mov    %r10,0x28(%rsp)
  0x000000010f804067: mov    %r11,0x20(%rsp)
  0x000000010f80406c: mov    %r12,0x18(%rsp)
  0x000000010f804071: mov    %r13,0x10(%rsp)
  0x000000010f804076: mov    %r14,0x8(%rsp)
  0x000000010f80407b: mov    %r15,(%rsp)
  0x000000010f80407f: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f804089: movabs $0x10f804029,%rsi  ;   {internal_word}
  0x000000010f804093: mov    %rsp,%rdx
  0x000000010f804096: and    $0xfffffffffffffff0,%rsp
  0x000000010f80409a: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f80409f: hlt    
[Deopt Handler Code]
  0x000000010f8040a0: movabs $0x10f8040a0,%r10  ;   {section_word}
  0x000000010f8040aa: push   %r10
  0x000000010f8040ac: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f8040b1: hlt    
  0x000000010f8040b2: hlt    
  0x000000010f8040b3: hlt    
  0x000000010f8040b4: hlt    
  0x000000010f8040b5: hlt    
  0x000000010f8040b6: hlt    
  0x000000010f8040b7: hlt    
Decoding compiled method 0x000000010f8045d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010eabf7c0} 'isInvocable' '()Z' in 'java/lang/invoke/MemberName'
  #           [sp+0x70]  (sp of caller)
  0x000000010f804740: mov    0x8(%rsi),%r10d
  0x000000010f804744: shl    $0x3,%r10
  0x000000010f804748: cmp    %rax,%r10
  0x000000010f80474b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f804751: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f80475c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f804760: mov    %eax,-0x14000(%rsp)
  0x000000010f804767: push   %rbp
  0x000000010f804768: sub    $0x60,%rsp
  0x000000010f80476c: movabs $0x10ed9b4e8,%rax  ;   {metadata(method data for {method} {0x000000010eabf7c0} 'isInvocable' '()Z' in 'java/lang/invoke/MemberName')}
  0x000000010f804776: mov    0xdc(%rax),%edi
  0x000000010f80477c: add    $0x8,%edi
  0x000000010f80477f: mov    %edi,0xdc(%rax)
  0x000000010f804785: movabs $0x10eabf7c0,%rax  ;   {metadata({method} {0x000000010eabf7c0} 'isInvocable' '()Z' in 'java/lang/invoke/MemberName')}
  0x000000010f80478f: and    $0x1ff8,%edi
  0x000000010f804795: cmp    $0x0,%edi
  0x000000010f804798: je     0x000000010f8048fa  ;*aload_0
                                                ; - java.lang.invoke.MemberName::isInvocable@0 (line 443)

  0x000000010f80479e: mov    %rsi,%rax
  0x000000010f8047a1: movabs $0x10ed9b4e8,%rdi  ;   {metadata(method data for {method} {0x000000010eabf7c0} 'isInvocable' '()Z' in 'java/lang/invoke/MemberName')}
  0x000000010f8047ab: addq   $0x1,0x108(%rdi)
  0x000000010f8047b3: movabs $0x10ed9a510,%rax  ;   {metadata(method data for {method} {0x000000010eabee50} 'testAnyFlags' '(I)Z' in 'java/lang/invoke/MemberName')}
  0x000000010f8047bd: mov    0xdc(%rax),%edi
  0x000000010f8047c3: add    $0x8,%edi
  0x000000010f8047c6: mov    %edi,0xdc(%rax)
  0x000000010f8047cc: movabs $0x10eabee50,%rax  ;   {metadata({method} {0x000000010eabee50} 'testAnyFlags' '(I)Z' in 'java/lang/invoke/MemberName')}
  0x000000010f8047d6: and    $0x7ffff8,%edi
  0x000000010f8047dc: cmp    $0x0,%edi
  0x000000010f8047df: je     0x000000010f804911
  0x000000010f8047e5: mov    %rsi,%rax
  0x000000010f8047e8: movabs $0x10ed9a510,%rdi  ;   {metadata(method data for {method} {0x000000010eabee50} 'testAnyFlags' '(I)Z' in 'java/lang/invoke/MemberName')}
  0x000000010f8047f2: addq   $0x1,0x108(%rdi)
  0x000000010f8047fa: movabs $0x10ed91b60,%rax  ;   {metadata(method data for {method} {0x000000010eabed18} 'testFlags' '(II)Z' in 'java/lang/invoke/MemberName')}
  0x000000010f804804: mov    0xdc(%rax),%edi
  0x000000010f80480a: add    $0x8,%edi
  0x000000010f80480d: mov    %edi,0xdc(%rax)
  0x000000010f804813: movabs $0x10eabed18,%rax  ;   {metadata({method} {0x000000010eabed18} 'testFlags' '(II)Z' in 'java/lang/invoke/MemberName')}
  0x000000010f80481d: and    $0x7ffff8,%edi
  0x000000010f804823: cmp    $0x0,%edi
  0x000000010f804826: je     0x000000010f804928
  0x000000010f80482c: mov    0xc(%rsi),%eax     ;*getfield flags
                                                ; - java.lang.invoke.MemberName::testFlags@1 (line 334)
                                                ; - java.lang.invoke.MemberName::testAnyFlags@3 (line 340)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 443)

  0x000000010f80482f: and    $0x30000,%eax
  0x000000010f804835: cmp    $0x0,%eax
  0x000000010f804838: movabs $0x10ed91b60,%rax  ;   {metadata(method data for {method} {0x000000010eabed18} 'testFlags' '(II)Z' in 'java/lang/invoke/MemberName')}
  0x000000010f804842: movabs $0x108,%rsi
  0x000000010f80484c: jne    0x000000010f80485c
  0x000000010f804852: movabs $0x118,%rsi
  0x000000010f80485c: mov    (%rax,%rsi,1),%rdi
  0x000000010f804860: lea    0x1(%rdi),%rdi
  0x000000010f804864: mov    %rdi,(%rax,%rsi,1)
  0x000000010f804868: jne    0x000000010f804888  ;*if_icmpne
                                                ; - java.lang.invoke.MemberName::testFlags@7 (line 334)
                                                ; - java.lang.invoke.MemberName::testAnyFlags@3 (line 340)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 443)

  0x000000010f80486e: movabs $0x10ed91b60,%rax  ;   {metadata(method data for {method} {0x000000010eabed18} 'testFlags' '(II)Z' in 'java/lang/invoke/MemberName')}
  0x000000010f804878: incl   0x128(%rax)
  0x000000010f80487e: mov    $0x1,%eax
  0x000000010f804883: jmpq   0x000000010f80488d  ;*goto
                                                ; - java.lang.invoke.MemberName::testFlags@11 (line 334)
                                                ; - java.lang.invoke.MemberName::testAnyFlags@3 (line 340)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 443)

  0x000000010f804888: mov    $0x0,%eax          ;*ireturn
                                                ; - java.lang.invoke.MemberName::testFlags@15 (line 334)
                                                ; - java.lang.invoke.MemberName::testAnyFlags@3 (line 340)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 443)

  0x000000010f80488d: and    $0x1,%eax
  0x000000010f804890: cmp    $0x0,%eax
  0x000000010f804893: movabs $0x10ed9a510,%rax  ;   {metadata(method data for {method} {0x000000010eabee50} 'testAnyFlags' '(I)Z' in 'java/lang/invoke/MemberName')}
  0x000000010f80489d: movabs $0x118,%rsi
  0x000000010f8048a7: jne    0x000000010f8048b7
  0x000000010f8048ad: movabs $0x128,%rsi
  0x000000010f8048b7: mov    (%rax,%rsi,1),%rdi
  0x000000010f8048bb: lea    0x1(%rdi),%rdi
  0x000000010f8048bf: mov    %rdi,(%rax,%rsi,1)
  0x000000010f8048c3: jne    0x000000010f8048e3  ;*ifne
                                                ; - java.lang.invoke.MemberName::testAnyFlags@6 (line 340)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 443)

  0x000000010f8048c9: movabs $0x10ed9a510,%rax  ;   {metadata(method data for {method} {0x000000010eabee50} 'testAnyFlags' '(I)Z' in 'java/lang/invoke/MemberName')}
  0x000000010f8048d3: incl   0x138(%rax)
  0x000000010f8048d9: mov    $0x1,%eax
  0x000000010f8048de: jmpq   0x000000010f8048e8  ;*goto
                                                ; - java.lang.invoke.MemberName::testAnyFlags@10 (line 340)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 443)

  0x000000010f8048e3: mov    $0x0,%eax          ;*ireturn
                                                ; - java.lang.invoke.MemberName::testAnyFlags@14 (line 340)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 443)

  0x000000010f8048e8: and    $0x1,%eax
  0x000000010f8048eb: and    $0x1,%eax
  0x000000010f8048ee: add    $0x60,%rsp
  0x000000010f8048f2: pop    %rbp
  0x000000010f8048f3: test   %eax,-0x8d697f9(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f8048f9: retq   
  0x000000010f8048fa: mov    %rax,0x8(%rsp)
  0x000000010f8048ff: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f804907: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=460}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MemberName::isInvocable@-1 (line 443)
                                                ;   {runtime_call}
  0x000000010f80490c: jmpq   0x000000010f80479e
  0x000000010f804911: mov    %rax,0x8(%rsp)
  0x000000010f804916: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f80491e: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=483}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MemberName::testAnyFlags@-1 (line 340)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 443)
                                                ;   {runtime_call}
  0x000000010f804923: jmpq   0x000000010f8047e5
  0x000000010f804928: mov    %rax,0x8(%rsp)
  0x000000010f80492d: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f804935: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=506}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MemberName::testFlags@-1 (line 334)
                                                ; - java.lang.invoke.MemberName::testAnyFlags@3 (line 340)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 443)
                                                ;   {runtime_call}
  0x000000010f80493a: jmpq   0x000000010f80482c
  0x000000010f80493f: nop
  0x000000010f804940: nop
  0x000000010f804941: mov    0x2a8(%r15),%rax
  0x000000010f804948: movabs $0x0,%r10
  0x000000010f804952: mov    %r10,0x2a8(%r15)
  0x000000010f804959: movabs $0x0,%r10
  0x000000010f804963: mov    %r10,0x2b0(%r15)
  0x000000010f80496a: add    $0x60,%rsp
  0x000000010f80496e: pop    %rbp
  0x000000010f80496f: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f804974: hlt    
  0x000000010f804975: hlt    
  0x000000010f804976: hlt    
  0x000000010f804977: hlt    
  0x000000010f804978: hlt    
  0x000000010f804979: hlt    
  0x000000010f80497a: hlt    
  0x000000010f80497b: hlt    
  0x000000010f80497c: hlt    
  0x000000010f80497d: hlt    
  0x000000010f80497e: hlt    
  0x000000010f80497f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f804980: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f804985: mov    %rsp,-0x28(%rsp)
  0x000000010f80498a: sub    $0x80,%rsp
  0x000000010f804991: mov    %rax,0x78(%rsp)
  0x000000010f804996: mov    %rcx,0x70(%rsp)
  0x000000010f80499b: mov    %rdx,0x68(%rsp)
  0x000000010f8049a0: mov    %rbx,0x60(%rsp)
  0x000000010f8049a5: mov    %rbp,0x50(%rsp)
  0x000000010f8049aa: mov    %rsi,0x48(%rsp)
  0x000000010f8049af: mov    %rdi,0x40(%rsp)
  0x000000010f8049b4: mov    %r8,0x38(%rsp)
  0x000000010f8049b9: mov    %r9,0x30(%rsp)
  0x000000010f8049be: mov    %r10,0x28(%rsp)
  0x000000010f8049c3: mov    %r11,0x20(%rsp)
  0x000000010f8049c8: mov    %r12,0x18(%rsp)
  0x000000010f8049cd: mov    %r13,0x10(%rsp)
  0x000000010f8049d2: mov    %r14,0x8(%rsp)
  0x000000010f8049d7: mov    %r15,(%rsp)
  0x000000010f8049db: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f8049e5: movabs $0x10f804985,%rsi  ;   {internal_word}
  0x000000010f8049ef: mov    %rsp,%rdx
  0x000000010f8049f2: and    $0xfffffffffffffff0,%rsp
  0x000000010f8049f6: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f8049fb: hlt    
[Deopt Handler Code]
  0x000000010f8049fc: movabs $0x10f8049fc,%r10  ;   {section_word}
  0x000000010f804a06: push   %r10
  0x000000010f804a08: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f804a0d: hlt    
  0x000000010f804a0e: hlt    
  0x000000010f804a0f: hlt    
Decoding compiled method 0x000000010f804b90:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010eb36908} 'elementData' '(I)Ljava/lang/Object;' in 'java/util/ArrayList'
  # this:     rsi:rsi   = 'java/util/ArrayList'
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x000000010f804d00: mov    0x8(%rsi),%r10d
  0x000000010f804d04: shl    $0x3,%r10
  0x000000010f804d08: cmp    %rax,%r10
  0x000000010f804d0b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f804d11: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f804d1c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f804d20: mov    %eax,-0x14000(%rsp)
  0x000000010f804d27: push   %rbp
  0x000000010f804d28: sub    $0x30,%rsp
  0x000000010f804d2c: movabs $0x10ed9abf0,%rax  ;   {metadata(method data for {method} {0x000000010eb36908} 'elementData' '(I)Ljava/lang/Object;' in 'java/util/ArrayList')}
  0x000000010f804d36: mov    0xdc(%rax),%edi
  0x000000010f804d3c: add    $0x8,%edi
  0x000000010f804d3f: mov    %edi,0xdc(%rax)
  0x000000010f804d45: movabs $0x10eb36908,%rax  ;   {metadata({method} {0x000000010eb36908} 'elementData' '(I)Ljava/lang/Object;' in 'java/util/ArrayList')}
  0x000000010f804d4f: and    $0x1ff8,%edi
  0x000000010f804d55: cmp    $0x0,%edi
  0x000000010f804d58: je     0x000000010f804d85  ;*aload_0
                                                ; - java.util.ArrayList::elementData@0 (line 422)

  0x000000010f804d5e: mov    0x14(%rsi),%eax
  0x000000010f804d61: shl    $0x3,%rax          ;*getfield elementData
                                                ; - java.util.ArrayList::elementData@1 (line 422)

  0x000000010f804d65: movslq %edx,%rsi
  0x000000010f804d68: cmp    0xc(%rax),%edx     ; implicit exception: dispatches to 0x000000010f804d99
  0x000000010f804d6b: jae    0x000000010f804da3
  0x000000010f804d71: mov    0x10(%rax,%rsi,4),%eax
  0x000000010f804d75: shl    $0x3,%rax          ;*aaload
                                                ; - java.util.ArrayList::elementData@5 (line 422)

  0x000000010f804d79: add    $0x30,%rsp
  0x000000010f804d7d: pop    %rbp
  0x000000010f804d7e: test   %eax,-0x8d69c84(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f804d84: retq   
  0x000000010f804d85: mov    %rax,0x8(%rsp)
  0x000000010f804d8a: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f804d92: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=151}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::elementData@-1 (line 422)
                                                ;   {runtime_call}
  0x000000010f804d97: jmp    0x000000010f804d5e
  0x000000010f804d99: callq  0x000000010f7cd0c0  ; OopMap{rax=Oop off=158}
                                                ;*aaload
                                                ; - java.util.ArrayList::elementData@5 (line 422)
                                                ;   {runtime_call}
  0x000000010f804d9e: callq  0x000000010f7cd0c0  ; OopMap{rax=Oop off=163}
                                                ;*aaload
                                                ; - java.util.ArrayList::elementData@5 (line 422)
                                                ;   {runtime_call}
  0x000000010f804da3: mov    %rdx,(%rsp)
  0x000000010f804da7: callq  0x000000010f7cca00  ; OopMap{rax=Oop off=172}
                                                ;*aaload
                                                ; - java.util.ArrayList::elementData@5 (line 422)
                                                ;   {runtime_call}
  0x000000010f804dac: nop
  0x000000010f804dad: nop
  0x000000010f804dae: mov    0x2a8(%r15),%rax
  0x000000010f804db5: movabs $0x0,%r10
  0x000000010f804dbf: mov    %r10,0x2a8(%r15)
  0x000000010f804dc6: movabs $0x0,%r10
  0x000000010f804dd0: mov    %r10,0x2b0(%r15)
  0x000000010f804dd7: add    $0x30,%rsp
  0x000000010f804ddb: pop    %rbp
  0x000000010f804ddc: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f804de1: hlt    
  0x000000010f804de2: hlt    
  0x000000010f804de3: hlt    
  0x000000010f804de4: hlt    
  0x000000010f804de5: hlt    
  0x000000010f804de6: hlt    
  0x000000010f804de7: hlt    
  0x000000010f804de8: hlt    
  0x000000010f804de9: hlt    
  0x000000010f804dea: hlt    
  0x000000010f804deb: hlt    
  0x000000010f804dec: hlt    
  0x000000010f804ded: hlt    
  0x000000010f804dee: hlt    
  0x000000010f804def: hlt    
  0x000000010f804df0: hlt    
  0x000000010f804df1: hlt    
  0x000000010f804df2: hlt    
  0x000000010f804df3: hlt    
  0x000000010f804df4: hlt    
  0x000000010f804df5: hlt    
  0x000000010f804df6: hlt    
  0x000000010f804df7: hlt    
  0x000000010f804df8: hlt    
  0x000000010f804df9: hlt    
  0x000000010f804dfa: hlt    
  0x000000010f804dfb: hlt    
  0x000000010f804dfc: hlt    
  0x000000010f804dfd: hlt    
  0x000000010f804dfe: hlt    
  0x000000010f804dff: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f804e00: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f804e05: mov    %rsp,-0x28(%rsp)
  0x000000010f804e0a: sub    $0x80,%rsp
  0x000000010f804e11: mov    %rax,0x78(%rsp)
  0x000000010f804e16: mov    %rcx,0x70(%rsp)
  0x000000010f804e1b: mov    %rdx,0x68(%rsp)
  0x000000010f804e20: mov    %rbx,0x60(%rsp)
  0x000000010f804e25: mov    %rbp,0x50(%rsp)
  0x000000010f804e2a: mov    %rsi,0x48(%rsp)
  0x000000010f804e2f: mov    %rdi,0x40(%rsp)
  0x000000010f804e34: mov    %r8,0x38(%rsp)
  0x000000010f804e39: mov    %r9,0x30(%rsp)
  0x000000010f804e3e: mov    %r10,0x28(%rsp)
  0x000000010f804e43: mov    %r11,0x20(%rsp)
  0x000000010f804e48: mov    %r12,0x18(%rsp)
  0x000000010f804e4d: mov    %r13,0x10(%rsp)
  0x000000010f804e52: mov    %r14,0x8(%rsp)
  0x000000010f804e57: mov    %r15,(%rsp)
  0x000000010f804e5b: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f804e65: movabs $0x10f804e05,%rsi  ;   {internal_word}
  0x000000010f804e6f: mov    %rsp,%rdx
  0x000000010f804e72: and    $0xfffffffffffffff0,%rsp
  0x000000010f804e76: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f804e7b: hlt    
[Deopt Handler Code]
  0x000000010f804e7c: movabs $0x10f804e7c,%r10  ;   {section_word}
  0x000000010f804e86: push   %r10
  0x000000010f804e88: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f804e8d: hlt    
  0x000000010f804e8e: hlt    
  0x000000010f804e8f: hlt    
Decoding compiled method 0x000000010f804f90:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010eb381e8} 'access$000' '(Ljava/util/ArrayList;)I' in 'java/util/ArrayList'
  # parm0:    rsi:rsi   = 'java/util/ArrayList'
  #           [sp+0x40]  (sp of caller)
  0x000000010f8050e0: mov    %eax,-0x14000(%rsp)
  0x000000010f8050e7: push   %rbp
  0x000000010f8050e8: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.util.ArrayList::access$000@0 (line 107)

  0x000000010f8050ec: mov    0x10(%rsi),%eax    ;*getfield size
                                                ; - java.util.ArrayList::access$000@1 (line 107)
                                                ; implicit exception: dispatches to 0x000000010f8050fb
  0x000000010f8050ef: add    $0x30,%rsp
  0x000000010f8050f3: pop    %rbp
  0x000000010f8050f4: test   %eax,-0x8d69ffa(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f8050fa: retq   
  0x000000010f8050fb: callq  0x000000010f7cd0c0  ; OopMap{off=32}
                                                ;*getfield size
                                                ; - java.util.ArrayList::access$000@1 (line 107)
                                                ;   {runtime_call}
  0x000000010f805100: nop
  0x000000010f805101: nop
  0x000000010f805102: mov    0x2a8(%r15),%rax
  0x000000010f805109: movabs $0x0,%r10
  0x000000010f805113: mov    %r10,0x2a8(%r15)
  0x000000010f80511a: movabs $0x0,%r10
  0x000000010f805124: mov    %r10,0x2b0(%r15)
  0x000000010f80512b: add    $0x30,%rsp
  0x000000010f80512f: pop    %rbp
  0x000000010f805130: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f805135: hlt    
  0x000000010f805136: hlt    
  0x000000010f805137: hlt    
  0x000000010f805138: hlt    
  0x000000010f805139: hlt    
  0x000000010f80513a: hlt    
  0x000000010f80513b: hlt    
  0x000000010f80513c: hlt    
  0x000000010f80513d: hlt    
  0x000000010f80513e: hlt    
  0x000000010f80513f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f805140: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f805145: mov    %rsp,-0x28(%rsp)
  0x000000010f80514a: sub    $0x80,%rsp
  0x000000010f805151: mov    %rax,0x78(%rsp)
  0x000000010f805156: mov    %rcx,0x70(%rsp)
  0x000000010f80515b: mov    %rdx,0x68(%rsp)
  0x000000010f805160: mov    %rbx,0x60(%rsp)
  0x000000010f805165: mov    %rbp,0x50(%rsp)
  0x000000010f80516a: mov    %rsi,0x48(%rsp)
  0x000000010f80516f: mov    %rdi,0x40(%rsp)
  0x000000010f805174: mov    %r8,0x38(%rsp)
  0x000000010f805179: mov    %r9,0x30(%rsp)
  0x000000010f80517e: mov    %r10,0x28(%rsp)
  0x000000010f805183: mov    %r11,0x20(%rsp)
  0x000000010f805188: mov    %r12,0x18(%rsp)
  0x000000010f80518d: mov    %r13,0x10(%rsp)
  0x000000010f805192: mov    %r14,0x8(%rsp)
  0x000000010f805197: mov    %r15,(%rsp)
  0x000000010f80519b: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f8051a5: movabs $0x10f805145,%rsi  ;   {internal_word}
  0x000000010f8051af: mov    %rsp,%rdx
  0x000000010f8051b2: and    $0xfffffffffffffff0,%rsp
  0x000000010f8051b6: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f8051bb: hlt    
[Deopt Handler Code]
  0x000000010f8051bc: movabs $0x10f8051bc,%r10  ;   {section_word}
  0x000000010f8051c6: push   %r10
  0x000000010f8051c8: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f8051cd: hlt    
  0x000000010f8051ce: hlt    
  0x000000010f8051cf: hlt    
Decoding compiled method 0x000000010f805290:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000010ed9b480} 'linkToStatic' '(Ljava/lang/invoke/MemberName;)V' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x000000010f8053c0: mov    0x18(%rsi),%rbx
  0x000000010f8053c4: test   %rbx,%rbx
  0x000000010f8053c7: je     0x000000010f8053d0
  0x000000010f8053cd: jmpq   *0x40(%rbx)
  0x000000010f8053d0: jmpq   0x000000010f6d61a0  ;   {runtime_call}
  0x000000010f8053d5: hlt    
  0x000000010f8053d6: hlt    
  0x000000010f8053d7: hlt    
Decoding compiled method 0x000000010f805410:
Code:
[Entry Point]
  # {method} {0x000000010ea715e0} 'isArray' '()Z' in 'java/lang/Class'
  #           [sp+0x50]  (sp of caller)
  0x000000010f805580: mov    0x8(%rsi),%r10d
  0x000000010f805584: shl    $0x3,%r10
  0x000000010f805588: cmp    %r10,%rax
  0x000000010f80558b: je     0x000000010f805598
  0x000000010f805591: jmpq   0x000000010f716e60  ;   {runtime_call}
  0x000000010f805596: xchg   %ax,%ax
[Verified Entry Point]
  0x000000010f805598: mov    %eax,-0x14000(%rsp)
  0x000000010f80559f: push   %rbp
  0x000000010f8055a0: mov    %rsp,%rbp
  0x000000010f8055a3: sub    $0x40,%rsp
  0x000000010f8055a7: mov    %rsi,(%rsp)
  0x000000010f8055ab: cmp    $0x0,%rsi
  0x000000010f8055af: lea    (%rsp),%rsi
  0x000000010f8055b3: cmove  (%rsp),%rsi        ; OopMap{[0]=Oop off=56}
  0x000000010f8055b8: movabs $0x10f8055b8,%r10  ;   {section_word}
  0x000000010f8055c2: mov    %r10,0x1e0(%r15)
  0x000000010f8055c9: mov    %rsp,0x1d8(%r15)
  0x000000010f8055d0: cmpb   $0x0,-0x5f1321d(%rip)        # 0x00000001098f23ba
                                                ;   {external_word}
  0x000000010f8055d7: je     0x000000010f80560f
  0x000000010f8055dd: push   %rsi
  0x000000010f8055de: movabs $0x10ea715e0,%rsi  ;   {metadata({method} {0x000000010ea715e0} 'isArray' '()Z' in 'java/lang/Class')}
  0x000000010f8055e8: mov    %r15,%rdi
  0x000000010f8055eb: test   $0xf,%esp
  0x000000010f8055f1: je     0x000000010f805609
  0x000000010f8055f7: sub    $0x8,%rsp
  0x000000010f8055fb: callq  0x00000001094ed064  ;   {runtime_call}
  0x000000010f805600: add    $0x8,%rsp
  0x000000010f805604: jmpq   0x000000010f80560e
  0x000000010f805609: callq  0x00000001094ed064  ;   {runtime_call}
  0x000000010f80560e: pop    %rsi
  0x000000010f80560f: lea    0x1f8(%r15),%rdi
  0x000000010f805616: movl   $0x4,0x270(%r15)
  0x000000010f805621: callq  0x000000010934812d  ;   {runtime_call}
  0x000000010f805626: vzeroupper 
  0x000000010f805629: and    $0xff,%eax
  0x000000010f80562f: setne  %al
  0x000000010f805632: movl   $0x5,0x270(%r15)
  0x000000010f80563d: lock addl $0x0,(%rsp)
  0x000000010f805642: cmpl   $0x0,-0x5f088dc(%rip)        # 0x00000001098fcd70
                                                ;   {external_word}
  0x000000010f80564c: jne    0x000000010f805660
  0x000000010f805652: cmpl   $0x0,0x30(%r15)
  0x000000010f80565a: je     0x000000010f805681
  0x000000010f805660: mov    %rax,-0x8(%rbp)
  0x000000010f805664: mov    %r15,%rdi
  0x000000010f805667: mov    %rsp,%r12
  0x000000010f80566a: sub    $0x0,%rsp
  0x000000010f80566e: and    $0xfffffffffffffff0,%rsp
  0x000000010f805672: callq  0x000000010956fe1e  ;   {runtime_call}
  0x000000010f805677: mov    %r12,%rsp
  0x000000010f80567a: xor    %r12,%r12
  0x000000010f80567d: mov    -0x8(%rbp),%rax
  0x000000010f805681: movl   $0x8,0x270(%r15)
  0x000000010f80568c: cmpl   $0x1,0x29c(%r15)
  0x000000010f805697: je     0x000000010f805727
  0x000000010f80569d: cmpb   $0x0,-0x5f132ea(%rip)        # 0x00000001098f23ba
                                                ;   {external_word}
  0x000000010f8056a4: je     0x000000010f8056e2
  0x000000010f8056aa: mov    %rax,-0x8(%rbp)
  0x000000010f8056ae: movabs $0x10ea715e0,%rsi  ;   {metadata({method} {0x000000010ea715e0} 'isArray' '()Z' in 'java/lang/Class')}
  0x000000010f8056b8: mov    %r15,%rdi
  0x000000010f8056bb: test   $0xf,%esp
  0x000000010f8056c1: je     0x000000010f8056d9
  0x000000010f8056c7: sub    $0x8,%rsp
  0x000000010f8056cb: callq  0x00000001094ecfd6  ;   {runtime_call}
  0x000000010f8056d0: add    $0x8,%rsp
  0x000000010f8056d4: jmpq   0x000000010f8056de
  0x000000010f8056d9: callq  0x00000001094ecfd6  ;   {runtime_call}
  0x000000010f8056de: mov    -0x8(%rbp),%rax
  0x000000010f8056e2: movabs $0x0,%r10
  0x000000010f8056ec: mov    %r10,0x1d8(%r15)
  0x000000010f8056f3: movabs $0x0,%r10
  0x000000010f8056fd: mov    %r10,0x1e0(%r15)
  0x000000010f805704: mov    0x38(%r15),%rcx
  0x000000010f805708: movl   $0x0,0x100(%rcx)
  0x000000010f805712: leaveq 
  0x000000010f805713: cmpq   $0x0,0x8(%r15)
  0x000000010f80571b: jne    0x000000010f805722
  0x000000010f805721: retq   
  0x000000010f805722: jmpq   Stub::forward exception  ;   {runtime_call}
  0x000000010f805727: mov    %rax,-0x8(%rbp)
  0x000000010f80572b: mov    %rsp,%r12
  0x000000010f80572e: sub    $0x0,%rsp
  0x000000010f805732: and    $0xfffffffffffffff0,%rsp
  0x000000010f805736: callq  0x00000001094ead1c  ;   {runtime_call}
  0x000000010f80573b: mov    %r12,%rsp
  0x000000010f80573e: xor    %r12,%r12
  0x000000010f805741: mov    -0x8(%rbp),%rax
  0x000000010f805745: jmpq   0x000000010f80569d
  0x000000010f80574a: hlt    
  0x000000010f80574b: hlt    
  0x000000010f80574c: hlt    
  0x000000010f80574d: hlt    
  0x000000010f80574e: hlt    
  0x000000010f80574f: hlt    
Decoding compiled method 0x000000010f805790:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000010ed9bf90} 'linkToVirtual' '(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x000000010f8058c0: mov    0x8(%rsi),%r10d
  0x000000010f8058c4: shl    $0x3,%r10
  0x000000010f8058c8: mov    0x10(%rdx),%r11
  0x000000010f8058cc: mov    0x1b8(%r10,%r11,8),%rbx
  0x000000010f8058d4: test   %rbx,%rbx
  0x000000010f8058d7: je     0x000000010f8058e0
  0x000000010f8058dd: jmpq   *0x40(%rbx)
  0x000000010f8058e0: jmpq   0x000000010f6d61a0  ;   {runtime_call}
  0x000000010f8058e5: hlt    
  0x000000010f8058e6: hlt    
  0x000000010f8058e7: hlt    
Decoding compiled method 0x000000010f805b10:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000010ed9fda0} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)V' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x000000010f805c40: mov    0x18(%rcx),%rbx
  0x000000010f805c44: test   %rbx,%rbx
  0x000000010f805c47: je     0x000000010f805c50
  0x000000010f805c4d: jmpq   *0x40(%rbx)
  0x000000010f805c50: jmpq   0x000000010f6d61a0  ;   {runtime_call}
  0x000000010f805c55: hlt    
  0x000000010f805c56: hlt    
  0x000000010f805c57: hlt    
Decoding compiled method 0x000000010f805c90:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000010ed9ff58} 'invokeBasic' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rsi:rsi   = 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  #           [sp+0x0]  (sp of caller)
  0x000000010f805dc0: mov    0x14(%rsi),%ebx
  0x000000010f805dc3: shl    $0x3,%rbx
  0x000000010f805dc7: mov    0x28(%rbx),%ebx
  0x000000010f805dca: shl    $0x3,%rbx
  0x000000010f805dce: mov    0x18(%rbx),%rbx
  0x000000010f805dd2: test   %rbx,%rbx
  0x000000010f805dd5: je     0x000000010f805dde
  0x000000010f805ddb: jmpq   *0x40(%rbx)
  0x000000010f805dde: jmpq   0x000000010f6d61a0  ;   {runtime_call}
  0x000000010f805de3: hlt    
  0x000000010f805de4: hlt    
  0x000000010f805de5: hlt    
  0x000000010f805de6: hlt    
  0x000000010f805de7: hlt    
Decoding compiled method 0x000000010f805e10:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000010eda0070} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x000000010f805f40: cmp    (%rsi),%rax
  0x000000010f805f43: mov    0x18(%rcx),%rbx
  0x000000010f805f47: test   %rbx,%rbx
  0x000000010f805f4a: je     0x000000010f805f53
  0x000000010f805f50: jmpq   *0x40(%rbx)
  0x000000010f805f53: jmpq   0x000000010f6d61a0  ;   {runtime_call}
Decoding compiled method 0x000000010f805f90:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000010eda1380} 'linkToStatic' '(Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x000000010f8060c0: mov    0x18(%rsi),%rbx
  0x000000010f8060c4: test   %rbx,%rbx
  0x000000010f8060c7: je     0x000000010f8060d0
  0x000000010f8060cd: jmpq   *0x40(%rbx)
  0x000000010f8060d0: jmpq   0x000000010f6d61a0  ;   {runtime_call}
  0x000000010f8060d5: hlt    
  0x000000010f8060d6: hlt    
  0x000000010f8060d7: hlt    
Decoding compiled method 0x000000010f806110:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000010eda1f98} 'invokeBasic' '()Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  #           [sp+0x0]  (sp of caller)
  0x000000010f806240: mov    0x14(%rsi),%ebx
  0x000000010f806243: shl    $0x3,%rbx
  0x000000010f806247: mov    0x28(%rbx),%ebx
  0x000000010f80624a: shl    $0x3,%rbx
  0x000000010f80624e: mov    0x18(%rbx),%rbx
  0x000000010f806252: test   %rbx,%rbx
  0x000000010f806255: je     0x000000010f80625e
  0x000000010f80625b: jmpq   *0x40(%rbx)
  0x000000010f80625e: jmpq   0x000000010f6d61a0  ;   {runtime_call}
  0x000000010f806263: hlt    
  0x000000010f806264: hlt    
  0x000000010f806265: hlt    
  0x000000010f806266: hlt    
  0x000000010f806267: hlt    
Decoding compiled method 0x000000010f806290:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000010eda20b0} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x000000010f8063c0: cmp    (%rsi),%rax
  0x000000010f8063c3: mov    0x18(%rdx),%rbx
  0x000000010f8063c7: test   %rbx,%rbx
  0x000000010f8063ca: je     0x000000010f8063d3
  0x000000010f8063d0: jmpq   *0x40(%rbx)
  0x000000010f8063d3: jmpq   0x000000010f6d61a0  ;   {runtime_call}
Decoding compiled method 0x000000010f806410:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000010eda2550} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rsi:rsi   = 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    rcx:rcx   = 'java/lang/Object'
  #           [sp+0x0]  (sp of caller)
  0x000000010f806540: mov    0x14(%rsi),%ebx
  0x000000010f806543: shl    $0x3,%rbx
  0x000000010f806547: mov    0x28(%rbx),%ebx
  0x000000010f80654a: shl    $0x3,%rbx
  0x000000010f80654e: mov    0x18(%rbx),%rbx
  0x000000010f806552: test   %rbx,%rbx
  0x000000010f806555: je     0x000000010f80655e
  0x000000010f80655b: jmpq   *0x40(%rbx)
  0x000000010f80655e: jmpq   0x000000010f6d61a0  ;   {runtime_call}
  0x000000010f806563: hlt    
  0x000000010f806564: hlt    
  0x000000010f806565: hlt    
  0x000000010f806566: hlt    
  0x000000010f806567: hlt    
Decoding compiled method 0x000000010f806590:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000010eda2848} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8:r8     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x000000010f8066c0: cmp    (%rsi),%rax
  0x000000010f8066c3: mov    0x18(%r8),%rbx
  0x000000010f8066c7: test   %rbx,%rbx
  0x000000010f8066ca: je     0x000000010f8066d3
  0x000000010f8066d0: jmpq   *0x40(%rbx)
  0x000000010f8066d3: jmpq   0x000000010f6d61a0  ;   {runtime_call}
Decoding compiled method 0x000000010f806710:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ead0680} 'hashCode' '()I' in 'java/lang/invoke/MethodType'
  #           [sp+0x60]  (sp of caller)
  0x000000010f8068a0: mov    0x8(%rsi),%r10d
  0x000000010f8068a4: shl    $0x3,%r10
  0x000000010f8068a8: cmp    %rax,%r10
  0x000000010f8068ab: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f8068b1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f8068bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f8068c0: mov    %eax,-0x14000(%rsp)
  0x000000010f8068c7: push   %rbp
  0x000000010f8068c8: sub    $0x50,%rsp
  0x000000010f8068cc: movabs $0x10eda25b8,%rdi  ;   {metadata(method data for {method} {0x000000010ead0680} 'hashCode' '()I' in 'java/lang/invoke/MethodType')}
  0x000000010f8068d6: mov    0xdc(%rdi),%ebx
  0x000000010f8068dc: add    $0x8,%ebx
  0x000000010f8068df: mov    %ebx,0xdc(%rdi)
  0x000000010f8068e5: movabs $0x10ead0680,%rdi  ;   {metadata({method} {0x000000010ead0680} 'hashCode' '()I' in 'java/lang/invoke/MethodType')}
  0x000000010f8068ef: and    $0x1ff8,%ebx
  0x000000010f8068f5: cmp    $0x0,%ebx
  0x000000010f8068f8: je     0x000000010f806b30  ;*bipush
                                                ; - java.lang.invoke.MethodType::hashCode@0 (line 775)

  0x000000010f8068fe: mov    0xc(%rsi),%edi
  0x000000010f806901: shl    $0x3,%rdi          ;*getfield rtype
                                                ; - java.lang.invoke.MethodType::hashCode@3 (line 775)

  0x000000010f806905: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x000000010f806b47
  0x000000010f806908: mov    %rdi,%rbx
  0x000000010f80690b: movabs $0x10eda25b8,%rax  ;   {metadata(method data for {method} {0x000000010ead0680} 'hashCode' '()I' in 'java/lang/invoke/MethodType')}
  0x000000010f806915: mov    0x8(%rbx),%ebx
  0x000000010f806918: shl    $0x3,%rbx
  0x000000010f80691c: cmp    0x110(%rax),%rbx
  0x000000010f806923: jne    0x000000010f806932
  0x000000010f806925: addq   $0x1,0x118(%rax)
  0x000000010f80692d: jmpq   0x000000010f806998
  0x000000010f806932: cmp    0x120(%rax),%rbx
  0x000000010f806939: jne    0x000000010f806948
  0x000000010f80693b: addq   $0x1,0x128(%rax)
  0x000000010f806943: jmpq   0x000000010f806998
  0x000000010f806948: cmpq   $0x0,0x110(%rax)
  0x000000010f806953: jne    0x000000010f80696c
  0x000000010f806955: mov    %rbx,0x110(%rax)
  0x000000010f80695c: movq   $0x1,0x118(%rax)
  0x000000010f806967: jmpq   0x000000010f806998
  0x000000010f80696c: cmpq   $0x0,0x120(%rax)
  0x000000010f806977: jne    0x000000010f806990
  0x000000010f806979: mov    %rbx,0x120(%rax)
  0x000000010f806980: movq   $0x1,0x128(%rax)
  0x000000010f80698b: jmpq   0x000000010f806998
  0x000000010f806990: addq   $0x1,0x108(%rax)
  0x000000010f806998: mov    %rsi,0x20(%rsp)
  0x000000010f80699d: mov    %rdi,%rsi          ;*invokevirtual hashCode
                                                ; - java.lang.invoke.MethodType::hashCode@6 (line 775)

  0x000000010f8069a0: nop
  0x000000010f8069a1: nop
  0x000000010f8069a2: nop
  0x000000010f8069a3: nop
  0x000000010f8069a4: nop
  0x000000010f8069a5: nop
  0x000000010f8069a6: nop
  0x000000010f8069a7: callq  0x000000010f7170a0  ; OopMap{[32]=Oop off=268}
                                                ;*invokevirtual hashCode
                                                ; - java.lang.invoke.MethodType::hashCode@6 (line 775)
                                                ;   {optimized virtual_call}
  0x000000010f8069ac: add    $0x1f,%eax
  0x000000010f8069af: mov    0x20(%rsp),%rsi
  0x000000010f8069b4: mov    0x10(%rsi),%edi
  0x000000010f8069b7: shl    $0x3,%rdi          ;*getfield ptypes
                                                ; - java.lang.invoke.MethodType::hashCode@12 (line 776)

  0x000000010f8069bb: mov    %rdi,0x38(%rsp)
  0x000000010f8069c0: mov    0xc(%rdi),%ebx     ;*arraylength
                                                ; - java.lang.invoke.MethodType::hashCode@17 (line 776)
                                                ; implicit exception: dispatches to 0x000000010f806b4c
  0x000000010f8069c3: mov    %ebx,0x30(%rsp)
  0x000000010f8069c7: mov    $0x0,%edx
  0x000000010f8069cc: jmpq   0x000000010f806aec  ;*iload
                                                ; - java.lang.invoke.MethodType::hashCode@22 (line 776)

  0x000000010f8069d1: nopl   0x0(%rax)
  0x000000010f8069d8: movslq %edx,%rsi
  0x000000010f8069db: mov    0x10(%rdi,%rsi,4),%esi
  0x000000010f8069df: shl    $0x3,%rsi          ;*aaload
                                                ; - java.lang.invoke.MethodType::hashCode@31 (line 776)

  0x000000010f8069e3: cmp    (%rsi),%rax        ;*invokevirtual hashCode
                                                ; - java.lang.invoke.MethodType::hashCode@40 (line 777)
                                                ; implicit exception: dispatches to 0x000000010f806b51
  0x000000010f8069e6: mov    %rsi,%rcx
  0x000000010f8069e9: movabs $0x10eda25b8,%r8   ;   {metadata(method data for {method} {0x000000010ead0680} 'hashCode' '()I' in 'java/lang/invoke/MethodType')}
  0x000000010f8069f3: mov    0x8(%rcx),%ecx
  0x000000010f8069f6: shl    $0x3,%rcx
  0x000000010f8069fa: cmp    0x160(%r8),%rcx
  0x000000010f806a01: jne    0x000000010f806a10
  0x000000010f806a03: addq   $0x1,0x168(%r8)
  0x000000010f806a0b: jmpq   0x000000010f806a76
  0x000000010f806a10: cmp    0x170(%r8),%rcx
  0x000000010f806a17: jne    0x000000010f806a26
  0x000000010f806a19: addq   $0x1,0x178(%r8)
  0x000000010f806a21: jmpq   0x000000010f806a76
  0x000000010f806a26: cmpq   $0x0,0x160(%r8)
  0x000000010f806a31: jne    0x000000010f806a4a
  0x000000010f806a33: mov    %rcx,0x160(%r8)
  0x000000010f806a3a: movq   $0x1,0x168(%r8)
  0x000000010f806a45: jmpq   0x000000010f806a76
  0x000000010f806a4a: cmpq   $0x0,0x170(%r8)
  0x000000010f806a55: jne    0x000000010f806a6e
  0x000000010f806a57: mov    %rcx,0x170(%r8)
  0x000000010f806a5e: movq   $0x1,0x178(%r8)
  0x000000010f806a69: jmpq   0x000000010f806a76
  0x000000010f806a6e: addq   $0x1,0x158(%r8)
  0x000000010f806a76: mov    %rax,%rcx
  0x000000010f806a79: shl    $0x5,%eax
  0x000000010f806a7c: sub    %ecx,%eax
  0x000000010f806a7e: mov    %edx,0x2c(%rsp)
  0x000000010f806a82: mov    %eax,0x28(%rsp)
  0x000000010f806a86: nop
  0x000000010f806a87: callq  0x000000010f7170a0  ; OopMap{[56]=Oop off=492}
                                                ;*invokevirtual hashCode
                                                ; - java.lang.invoke.MethodType::hashCode@40 (line 777)
                                                ;   {optimized virtual_call}
  0x000000010f806a8c: mov    0x28(%rsp),%esi
  0x000000010f806a90: add    %eax,%esi
  0x000000010f806a92: mov    0x2c(%rsp),%edx
  0x000000010f806a96: inc    %edx
  0x000000010f806a98: movabs $0x10eda25b8,%rax  ;   {metadata(method data for {method} {0x000000010ead0680} 'hashCode' '()I' in 'java/lang/invoke/MethodType')}
  0x000000010f806aa2: mov    0xe0(%rax),%edi
  0x000000010f806aa8: add    $0x8,%edi
  0x000000010f806aab: mov    %edi,0xe0(%rax)
  0x000000010f806ab1: movabs $0x10ead0680,%rax  ;   {metadata({method} {0x000000010ead0680} 'hashCode' '()I' in 'java/lang/invoke/MethodType')}
  0x000000010f806abb: and    $0xfff8,%edi
  0x000000010f806ac1: cmp    $0x0,%edi
  0x000000010f806ac4: je     0x000000010f806b56  ; OopMap{[56]=Oop off=554}
                                                ;*goto
                                                ; - java.lang.invoke.MethodType::hashCode@48 (line 776)

  0x000000010f806aca: test   %eax,-0x8d6b9d0(%rip)        # 0x0000000106a9b100
                                                ;   {poll}
  0x000000010f806ad0: movabs $0x10eda25b8,%rax  ;   {metadata(method data for {method} {0x000000010ead0680} 'hashCode' '()I' in 'java/lang/invoke/MethodType')}
  0x000000010f806ada: incl   0x188(%rax)
  0x000000010f806ae0: mov    %rsi,%rax          ;*goto
                                                ; - java.lang.invoke.MethodType::hashCode@48 (line 776)

  0x000000010f806ae3: mov    0x30(%rsp),%ebx
  0x000000010f806ae7: mov    0x38(%rsp),%rdi
  0x000000010f806aec: cmp    %ebx,%edx
  0x000000010f806aee: movabs $0x10eda25b8,%rsi  ;   {metadata(method data for {method} {0x000000010ead0680} 'hashCode' '()I' in 'java/lang/invoke/MethodType')}
  0x000000010f806af8: movabs $0x138,%rcx
  0x000000010f806b02: jge    0x000000010f806b12
  0x000000010f806b08: movabs $0x148,%rcx
  0x000000010f806b12: mov    (%rsi,%rcx,1),%r8
  0x000000010f806b16: lea    0x1(%r8),%r8
  0x000000010f806b1a: mov    %r8,(%rsi,%rcx,1)
  0x000000010f806b1e: jl     0x000000010f8069d8  ;*if_icmpge
                                                ; - java.lang.invoke.MethodType::hashCode@25 (line 776)

  0x000000010f806b24: add    $0x50,%rsp
  0x000000010f806b28: pop    %rbp
  0x000000010f806b29: test   %eax,-0x8d6ba2f(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f806b2f: retq   
  0x000000010f806b30: mov    %rdi,0x8(%rsp)
  0x000000010f806b35: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f806b3d: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=674}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MethodType::hashCode@-1 (line 775)
                                                ;   {runtime_call}
  0x000000010f806b42: jmpq   0x000000010f8068fe
  0x000000010f806b47: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop rdi=Oop off=684}
                                                ;*invokevirtual hashCode
                                                ; - java.lang.invoke.MethodType::hashCode@6 (line 775)
                                                ;   {runtime_call}
  0x000000010f806b4c: callq  0x000000010f7cd0c0  ; OopMap{rdi=Oop [56]=Oop off=689}
                                                ;*arraylength
                                                ; - java.lang.invoke.MethodType::hashCode@17 (line 776)
                                                ;   {runtime_call}
  0x000000010f806b51: callq  0x000000010f7cd0c0  ; OopMap{rdi=Oop [56]=Oop rsi=Oop off=694}
                                                ;*invokevirtual hashCode
                                                ; - java.lang.invoke.MethodType::hashCode@40 (line 777)
                                                ;   {runtime_call}
  0x000000010f806b56: mov    %rax,0x8(%rsp)
  0x000000010f806b5b: movq   $0x30,(%rsp)
  0x000000010f806b63: callq  0x000000010f7d1a20  ; OopMap{[56]=Oop off=712}
                                                ;*goto
                                                ; - java.lang.invoke.MethodType::hashCode@48 (line 776)
                                                ;   {runtime_call}
  0x000000010f806b68: jmpq   0x000000010f806aca
  0x000000010f806b6d: nop
  0x000000010f806b6e: nop
  0x000000010f806b6f: mov    0x2a8(%r15),%rax
  0x000000010f806b76: movabs $0x0,%r10
  0x000000010f806b80: mov    %r10,0x2a8(%r15)
  0x000000010f806b87: movabs $0x0,%r10
  0x000000010f806b91: mov    %r10,0x2b0(%r15)
  0x000000010f806b98: add    $0x50,%rsp
  0x000000010f806b9c: pop    %rbp
  0x000000010f806b9d: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f806ba2: hlt    
  0x000000010f806ba3: hlt    
  0x000000010f806ba4: hlt    
  0x000000010f806ba5: hlt    
  0x000000010f806ba6: hlt    
  0x000000010f806ba7: hlt    
  0x000000010f806ba8: hlt    
  0x000000010f806ba9: hlt    
  0x000000010f806baa: hlt    
  0x000000010f806bab: hlt    
  0x000000010f806bac: hlt    
  0x000000010f806bad: hlt    
  0x000000010f806bae: hlt    
  0x000000010f806baf: hlt    
  0x000000010f806bb0: hlt    
  0x000000010f806bb1: hlt    
  0x000000010f806bb2: hlt    
  0x000000010f806bb3: hlt    
  0x000000010f806bb4: hlt    
  0x000000010f806bb5: hlt    
  0x000000010f806bb6: hlt    
  0x000000010f806bb7: hlt    
  0x000000010f806bb8: hlt    
  0x000000010f806bb9: hlt    
  0x000000010f806bba: hlt    
  0x000000010f806bbb: hlt    
  0x000000010f806bbc: hlt    
  0x000000010f806bbd: hlt    
  0x000000010f806bbe: hlt    
  0x000000010f806bbf: hlt    
[Stub Code]
  0x000000010f806bc0: nop                       ;   {no_reloc}
  0x000000010f806bc1: nop
  0x000000010f806bc2: nop
  0x000000010f806bc3: nop
  0x000000010f806bc4: nop
  0x000000010f806bc5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f806bcf: jmpq   0x000000010f806bcf  ;   {runtime_call}
  0x000000010f806bd4: nop
  0x000000010f806bd5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f806bdf: jmpq   0x000000010f806bdf  ;   {runtime_call}
[Exception Handler]
  0x000000010f806be4: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f806be9: mov    %rsp,-0x28(%rsp)
  0x000000010f806bee: sub    $0x80,%rsp
  0x000000010f806bf5: mov    %rax,0x78(%rsp)
  0x000000010f806bfa: mov    %rcx,0x70(%rsp)
  0x000000010f806bff: mov    %rdx,0x68(%rsp)
  0x000000010f806c04: mov    %rbx,0x60(%rsp)
  0x000000010f806c09: mov    %rbp,0x50(%rsp)
  0x000000010f806c0e: mov    %rsi,0x48(%rsp)
  0x000000010f806c13: mov    %rdi,0x40(%rsp)
  0x000000010f806c18: mov    %r8,0x38(%rsp)
  0x000000010f806c1d: mov    %r9,0x30(%rsp)
  0x000000010f806c22: mov    %r10,0x28(%rsp)
  0x000000010f806c27: mov    %r11,0x20(%rsp)
  0x000000010f806c2c: mov    %r12,0x18(%rsp)
  0x000000010f806c31: mov    %r13,0x10(%rsp)
  0x000000010f806c36: mov    %r14,0x8(%rsp)
  0x000000010f806c3b: mov    %r15,(%rsp)
  0x000000010f806c3f: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f806c49: movabs $0x10f806be9,%rsi  ;   {internal_word}
  0x000000010f806c53: mov    %rsp,%rdx
  0x000000010f806c56: and    $0xfffffffffffffff0,%rsp
  0x000000010f806c5a: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f806c5f: hlt    
[Deopt Handler Code]
  0x000000010f806c60: movabs $0x10f806c60,%r10  ;   {section_word}
  0x000000010f806c6a: push   %r10
  0x000000010f806c6c: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f806c71: hlt    
  0x000000010f806c72: hlt    
  0x000000010f806c73: hlt    
  0x000000010f806c74: hlt    
  0x000000010f806c75: hlt    
  0x000000010f806c76: hlt    
  0x000000010f806c77: hlt    
Decoding compiled method 0x000000010f806ed0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ed76c70} 'putByte' '(I)Ljdk/internal/org/objectweb/asm/ByteVector;' in 'jdk/internal/org/objectweb/asm/ByteVector'
  # this:     rsi:rsi   = 'jdk/internal/org/objectweb/asm/ByteVector'
  # parm0:    rdx       = int
  #           [sp+0x50]  (sp of caller)
  0x000000010f807040: mov    0x8(%rsi),%r10d
  0x000000010f807044: shl    $0x3,%r10
  0x000000010f807048: cmp    %rax,%r10
  0x000000010f80704b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f807051: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f80705c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f807060: mov    %eax,-0x14000(%rsp)
  0x000000010f807067: push   %rbp
  0x000000010f807068: sub    $0x40,%rsp
  0x000000010f80706c: movabs $0x10eda2118,%rdi  ;   {metadata(method data for {method} {0x000000010ed76c70} 'putByte' '(I)Ljdk/internal/org/objectweb/asm/ByteVector;' in 'jdk/internal/org/objectweb/asm/ByteVector')}
  0x000000010f807076: mov    0xdc(%rdi),%ebx
  0x000000010f80707c: add    $0x8,%ebx
  0x000000010f80707f: mov    %ebx,0xdc(%rdi)
  0x000000010f807085: movabs $0x10ed76c70,%rdi  ;   {metadata({method} {0x000000010ed76c70} 'putByte' '(I)Ljdk/internal/org/objectweb/asm/ByteVector;' in 'jdk/internal/org/objectweb/asm/ByteVector')}
  0x000000010f80708f: and    $0x1ff8,%ebx
  0x000000010f807095: cmp    $0x0,%ebx
  0x000000010f807098: je     0x000000010f80715e  ;*aload_0
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putByte@0 (line 107)

  0x000000010f80709e: mov    0xc(%rsi),%edi     ;*getfield length
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putByte@1 (line 107)

  0x000000010f8070a1: mov    %rdi,%rbx
  0x000000010f8070a4: inc    %ebx
  0x000000010f8070a6: mov    0x10(%rsi),%eax
  0x000000010f8070a9: shl    $0x3,%rax          ;*getfield data
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putByte@9 (line 108)

  0x000000010f8070ad: mov    0xc(%rax),%eax     ;*arraylength
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putByte@12 (line 108)
                                                ; implicit exception: dispatches to 0x000000010f807175
  0x000000010f8070b0: cmp    %eax,%ebx
  0x000000010f8070b2: movabs $0x10eda2118,%rax  ;   {metadata(method data for {method} {0x000000010ed76c70} 'putByte' '(I)Ljdk/internal/org/objectweb/asm/ByteVector;' in 'jdk/internal/org/objectweb/asm/ByteVector')}
  0x000000010f8070bc: movabs $0x108,%rcx
  0x000000010f8070c6: jle    0x000000010f8070d6
  0x000000010f8070cc: movabs $0x118,%rcx
  0x000000010f8070d6: mov    (%rax,%rcx,1),%r8
  0x000000010f8070da: lea    0x1(%r8),%r8
  0x000000010f8070de: mov    %r8,(%rax,%rcx,1)
  0x000000010f8070e2: jle    0x000000010f807135  ;*if_icmple
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putByte@13 (line 108)

  0x000000010f8070e8: mov    %ebx,0x30(%rsp)
  0x000000010f8070ec: mov    %edi,0x2c(%rsp)
  0x000000010f8070f0: mov    %edx,0x28(%rsp)
  0x000000010f8070f4: mov    %rsi,%rax
  0x000000010f8070f7: movabs $0x10eda2118,%rcx  ;   {metadata(method data for {method} {0x000000010ed76c70} 'putByte' '(I)Ljdk/internal/org/objectweb/asm/ByteVector;' in 'jdk/internal/org/objectweb/asm/ByteVector')}
  0x000000010f807101: addq   $0x1,0x128(%rcx)
  0x000000010f807109: mov    $0x1,%edx
  0x000000010f80710e: mov    %rsi,%rcx
  0x000000010f807111: mov    %rcx,%rsi          ;*invokespecial enlarge
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putByte@18 (line 109)

  0x000000010f807114: mov    %rcx,0x20(%rsp)
  0x000000010f807119: nop
  0x000000010f80711a: nop
  0x000000010f80711b: nop
  0x000000010f80711c: nop
  0x000000010f80711d: nop
  0x000000010f80711e: nop
  0x000000010f80711f: callq  0x000000010f7170a0  ; OopMap{[32]=Oop off=228}
                                                ;*invokespecial enlarge
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putByte@18 (line 109)
                                                ;   {optimized virtual_call}
  0x000000010f807124: mov    0x30(%rsp),%ebx
  0x000000010f807128: mov    0x2c(%rsp),%edi
  0x000000010f80712c: mov    0x28(%rsp),%edx
  0x000000010f807130: mov    0x20(%rsp),%rsi
  0x000000010f807135: mov    0x10(%rsi),%eax
  0x000000010f807138: shl    $0x3,%rax          ;*getfield data
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putByte@22 (line 111)

  0x000000010f80713c: movslq %edi,%rcx
  0x000000010f80713f: cmp    0xc(%rax),%edi     ; implicit exception: dispatches to 0x000000010f80717a
  0x000000010f807142: jae    0x000000010f807184
  0x000000010f807148: mov    %dl,0x10(%rax,%rcx,1)  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putByte@31 (line 111)

  0x000000010f80714c: mov    %ebx,0xc(%rsi)     ;*putfield length
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putByte@34 (line 112)

  0x000000010f80714f: mov    %rsi,%rax
  0x000000010f807152: add    $0x40,%rsp
  0x000000010f807156: pop    %rbp
  0x000000010f807157: test   %eax,-0x8d6c05d(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f80715d: retq   
  0x000000010f80715e: mov    %rdi,0x8(%rsp)
  0x000000010f807163: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f80716b: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=304}
                                                ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putByte@-1 (line 107)
                                                ;   {runtime_call}
  0x000000010f807170: jmpq   0x000000010f80709e
  0x000000010f807175: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop off=314}
                                                ;*arraylength
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putByte@12 (line 108)
                                                ;   {runtime_call}
  0x000000010f80717a: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop rax=Oop off=319}
                                                ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putByte@31 (line 111)
                                                ;   {runtime_call}
  0x000000010f80717f: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop rax=Oop off=324}
                                                ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putByte@31 (line 111)
                                                ;   {runtime_call}
  0x000000010f807184: mov    %rdi,(%rsp)
  0x000000010f807188: callq  0x000000010f7cca00  ; OopMap{rsi=Oop rax=Oop off=333}
                                                ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putByte@31 (line 111)
                                                ;   {runtime_call}
  0x000000010f80718d: nop
  0x000000010f80718e: nop
  0x000000010f80718f: mov    0x2a8(%r15),%rax
  0x000000010f807196: movabs $0x0,%r10
  0x000000010f8071a0: mov    %r10,0x2a8(%r15)
  0x000000010f8071a7: movabs $0x0,%r10
  0x000000010f8071b1: mov    %r10,0x2b0(%r15)
  0x000000010f8071b8: add    $0x40,%rsp
  0x000000010f8071bc: pop    %rbp
  0x000000010f8071bd: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f8071c2: hlt    
  0x000000010f8071c3: hlt    
  0x000000010f8071c4: hlt    
  0x000000010f8071c5: hlt    
  0x000000010f8071c6: hlt    
  0x000000010f8071c7: hlt    
  0x000000010f8071c8: hlt    
  0x000000010f8071c9: hlt    
  0x000000010f8071ca: hlt    
  0x000000010f8071cb: hlt    
  0x000000010f8071cc: hlt    
  0x000000010f8071cd: hlt    
  0x000000010f8071ce: hlt    
  0x000000010f8071cf: hlt    
  0x000000010f8071d0: hlt    
  0x000000010f8071d1: hlt    
  0x000000010f8071d2: hlt    
  0x000000010f8071d3: hlt    
  0x000000010f8071d4: hlt    
  0x000000010f8071d5: hlt    
  0x000000010f8071d6: hlt    
  0x000000010f8071d7: hlt    
  0x000000010f8071d8: hlt    
  0x000000010f8071d9: hlt    
  0x000000010f8071da: hlt    
  0x000000010f8071db: hlt    
  0x000000010f8071dc: hlt    
  0x000000010f8071dd: hlt    
  0x000000010f8071de: hlt    
  0x000000010f8071df: hlt    
[Stub Code]
  0x000000010f8071e0: nop                       ;   {no_reloc}
  0x000000010f8071e1: nop
  0x000000010f8071e2: nop
  0x000000010f8071e3: nop
  0x000000010f8071e4: nop
  0x000000010f8071e5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f8071ef: jmpq   0x000000010f8071ef  ;   {runtime_call}
[Exception Handler]
  0x000000010f8071f4: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f8071f9: mov    %rsp,-0x28(%rsp)
  0x000000010f8071fe: sub    $0x80,%rsp
  0x000000010f807205: mov    %rax,0x78(%rsp)
  0x000000010f80720a: mov    %rcx,0x70(%rsp)
  0x000000010f80720f: mov    %rdx,0x68(%rsp)
  0x000000010f807214: mov    %rbx,0x60(%rsp)
  0x000000010f807219: mov    %rbp,0x50(%rsp)
  0x000000010f80721e: mov    %rsi,0x48(%rsp)
  0x000000010f807223: mov    %rdi,0x40(%rsp)
  0x000000010f807228: mov    %r8,0x38(%rsp)
  0x000000010f80722d: mov    %r9,0x30(%rsp)
  0x000000010f807232: mov    %r10,0x28(%rsp)
  0x000000010f807237: mov    %r11,0x20(%rsp)
  0x000000010f80723c: mov    %r12,0x18(%rsp)
  0x000000010f807241: mov    %r13,0x10(%rsp)
  0x000000010f807246: mov    %r14,0x8(%rsp)
  0x000000010f80724b: mov    %r15,(%rsp)
  0x000000010f80724f: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f807259: movabs $0x10f8071f9,%rsi  ;   {internal_word}
  0x000000010f807263: mov    %rsp,%rdx
  0x000000010f807266: and    $0xfffffffffffffff0,%rsp
  0x000000010f80726a: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f80726f: hlt    
[Deopt Handler Code]
  0x000000010f807270: movabs $0x10f807270,%r10  ;   {section_word}
  0x000000010f80727a: push   %r10
  0x000000010f80727c: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f807281: hlt    
  0x000000010f807282: hlt    
  0x000000010f807283: hlt    
  0x000000010f807284: hlt    
  0x000000010f807285: hlt    
  0x000000010f807286: hlt    
  0x000000010f807287: hlt    
Decoding compiled method 0x000000010f807450:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ed72c70} 'newUTF8' '(Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/ClassWriter'
  # this:     rsi:rsi   = 'jdk/internal/org/objectweb/asm/ClassWriter'
  # parm0:    rdx:rdx   = 'java/lang/String'
  #           [sp+0x70]  (sp of caller)
  0x000000010f807620: mov    0x8(%rsi),%r10d
  0x000000010f807624: shl    $0x3,%r10
  0x000000010f807628: cmp    %rax,%r10
  0x000000010f80762b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f807631: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f80763c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f807640: mov    %eax,-0x14000(%rsp)
  0x000000010f807647: push   %rbp
  0x000000010f807648: sub    $0x60,%rsp
  0x000000010f80764c: mov    %rsi,0x38(%rsp)
  0x000000010f807651: mov    %rdx,0x40(%rsp)
  0x000000010f807656: movabs $0x10eda2270,%rcx  ;   {metadata(method data for {method} {0x000000010ed72c70} 'newUTF8' '(Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000000010f807660: mov    0xdc(%rcx),%r8d
  0x000000010f807667: add    $0x8,%r8d
  0x000000010f80766b: mov    %r8d,0xdc(%rcx)
  0x000000010f807672: movabs $0x10ed72c70,%rcx  ;   {metadata({method} {0x000000010ed72c70} 'newUTF8' '(Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000000010f80767c: and    $0x1ff8,%r8d
  0x000000010f807683: cmp    $0x0,%r8d
  0x000000010f807687: je     0x000000010f8078e8  ;*aload_0
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newUTF8@0 (line 1118)

  0x000000010f80768d: mov    0x5c(%rsi),%edi
  0x000000010f807690: shl    $0x3,%rdi          ;*getfield key
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newUTF8@1 (line 1118)

  0x000000010f807694: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x000000010f8078ff
  0x000000010f807697: mov    %rdi,%rcx
  0x000000010f80769a: movabs $0x10eda2270,%r8   ;   {metadata(method data for {method} {0x000000010ed72c70} 'newUTF8' '(Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000000010f8076a4: mov    0x8(%rcx),%ecx
  0x000000010f8076a7: shl    $0x3,%rcx
  0x000000010f8076ab: cmp    0x110(%r8),%rcx
  0x000000010f8076b2: jne    0x000000010f8076c1
  0x000000010f8076b4: addq   $0x1,0x118(%r8)
  0x000000010f8076bc: jmpq   0x000000010f807727
  0x000000010f8076c1: cmp    0x120(%r8),%rcx
  0x000000010f8076c8: jne    0x000000010f8076d7
  0x000000010f8076ca: addq   $0x1,0x128(%r8)
  0x000000010f8076d2: jmpq   0x000000010f807727
  0x000000010f8076d7: cmpq   $0x0,0x110(%r8)
  0x000000010f8076e2: jne    0x000000010f8076fb
  0x000000010f8076e4: mov    %rcx,0x110(%r8)
  0x000000010f8076eb: movq   $0x1,0x118(%r8)
  0x000000010f8076f6: jmpq   0x000000010f807727
  0x000000010f8076fb: cmpq   $0x0,0x120(%r8)
  0x000000010f807706: jne    0x000000010f80771f
  0x000000010f807708: mov    %rcx,0x120(%r8)
  0x000000010f80770f: movq   $0x1,0x128(%r8)
  0x000000010f80771a: jmpq   0x000000010f807727
  0x000000010f80771f: addq   $0x1,0x108(%r8)
  0x000000010f807727: mov    %rdx,%rbx
  0x000000010f80772a: mov    $0x1,%edx
  0x000000010f80772f: mov    %rbx,%rcx
  0x000000010f807732: movabs $0x0,%r8           ;   {oop(NULL)}
  0x000000010f80773c: movabs $0x0,%r9           ;   {oop(NULL)}
  0x000000010f807746: mov    %rdi,%rsi          ;*invokevirtual set
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newUTF8@8 (line 1118)

  0x000000010f807749: nop
  0x000000010f80774a: nop
  0x000000010f80774b: nop
  0x000000010f80774c: nop
  0x000000010f80774d: nop
  0x000000010f80774e: nop
  0x000000010f80774f: callq  0x000000010f7170a0  ; OopMap{[56]=Oop [64]=Oop off=308}
                                                ;*invokevirtual set
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newUTF8@8 (line 1118)
                                                ;   {optimized virtual_call}
  0x000000010f807754: mov    0x38(%rsp),%rsi
  0x000000010f807759: mov    0x5c(%rsi),%edx
  0x000000010f80775c: shl    $0x3,%rdx          ;*getfield key
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newUTF8@13 (line 1119)

  0x000000010f807760: mov    %rsi,%rdi
  0x000000010f807763: movabs $0x10eda2270,%rbx  ;   {metadata(method data for {method} {0x000000010ed72c70} 'newUTF8' '(Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000000010f80776d: addq   $0x1,0x138(%rbx)
  0x000000010f807775: mov    %rsi,%rdi
  0x000000010f807778: mov    %rdi,%rsi          ;*invokespecial get
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newUTF8@16 (line 1119)

  0x000000010f80777b: nop
  0x000000010f80777c: nop
  0x000000010f80777d: nop
  0x000000010f80777e: nop
  0x000000010f80777f: callq  0x000000010f7170a0  ; OopMap{[64]=Oop [56]=Oop off=356}
                                                ;*invokespecial get
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newUTF8@16 (line 1119)
                                                ;   {optimized virtual_call}
  0x000000010f807784: cmp    $0x0,%rax
  0x000000010f807788: movabs $0x10eda2270,%rdx  ;   {metadata(method data for {method} {0x000000010ed72c70} 'newUTF8' '(Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000000010f807792: movabs $0x148,%rsi
  0x000000010f80779c: jne    0x000000010f8077ac
  0x000000010f8077a2: movabs $0x158,%rsi
  0x000000010f8077ac: mov    (%rdx,%rsi,1),%rdi
  0x000000010f8077b0: lea    0x1(%rdi),%rdi
  0x000000010f8077b4: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f8077b8: jne    0x000000010f8078d9  ;*ifnonnull
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newUTF8@21 (line 1120)

  0x000000010f8077be: mov    0x38(%rsp),%rsi
  0x000000010f8077c3: mov    0x54(%rsi),%edi
  0x000000010f8077c6: shl    $0x3,%rdi          ;*getfield pool
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newUTF8@25 (line 1121)

  0x000000010f8077ca: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x000000010f807904
  0x000000010f8077cd: mov    %rdi,%rbx
  0x000000010f8077d0: movabs $0x10eda2270,%rax  ;   {metadata(method data for {method} {0x000000010ed72c70} 'newUTF8' '(Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000000010f8077da: addq   $0x1,0x178(%rax)
  0x000000010f8077e2: mov    $0x1,%edx
  0x000000010f8077e7: mov    %rdi,%rsi          ;*invokevirtual putByte
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newUTF8@29 (line 1121)

  0x000000010f8077ea: nop
  0x000000010f8077eb: nop
  0x000000010f8077ec: nop
  0x000000010f8077ed: nop
  0x000000010f8077ee: nop
  0x000000010f8077ef: callq  0x000000010f7170a0  ; OopMap{[56]=Oop [64]=Oop off=468}
                                                ;*invokevirtual putByte
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newUTF8@29 (line 1121)
                                                ;   {optimized virtual_call}
  0x000000010f8077f4: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x000000010f807909
  0x000000010f8077f7: mov    %rax,%rdx
  0x000000010f8077fa: movabs $0x10eda2270,%rsi  ;   {metadata(method data for {method} {0x000000010ed72c70} 'newUTF8' '(Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000000010f807804: addq   $0x1,0x1a8(%rsi)
  0x000000010f80780c: mov    0x40(%rsp),%rdx
  0x000000010f807811: mov    %rax,%rsi          ;*invokevirtual putUTF8
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newUTF8@33 (line 1121)

  0x000000010f807814: nop
  0x000000010f807815: nop
  0x000000010f807816: nop
  0x000000010f807817: callq  0x000000010f7170a0  ; OopMap{[56]=Oop off=508}
                                                ;*invokevirtual putUTF8
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newUTF8@33 (line 1121)
                                                ;   {optimized virtual_call}
  0x000000010f80781c: movabs $0x7c005dbf0,%rdx  ;   {metadata('jdk/internal/org/objectweb/asm/Item')}
  0x000000010f807826: mov    0x60(%r15),%rax
  0x000000010f80782a: lea    0x38(%rax),%rdi
  0x000000010f80782e: cmp    0x70(%r15),%rdi
  0x000000010f807832: ja     0x000000010f80790e
  0x000000010f807838: mov    %rdi,0x60(%r15)
  0x000000010f80783c: mov    0xa8(%rdx),%rcx
  0x000000010f807843: mov    %rcx,(%rax)
  0x000000010f807846: mov    %rdx,%rcx
  0x000000010f807849: shr    $0x3,%rcx
  0x000000010f80784d: mov    %ecx,0x8(%rax)
  0x000000010f807850: xor    %rcx,%rcx
  0x000000010f807853: mov    %ecx,0xc(%rax)
  0x000000010f807856: xor    %rcx,%rcx
  0x000000010f807859: movabs $0x5,%rdi
  0x000000010f807863: mov    %rcx,0x8(%rax,%rdi,8)
  0x000000010f807868: dec    %rdi
  0x000000010f80786b: jne    0x000000010f807863  ;*new
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newUTF8@37 (line 1122)

  0x000000010f80786d: mov    0x38(%rsp),%rsi
  0x000000010f807872: mov    0x18(%rsi),%edx    ;*getfield index
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newUTF8@43 (line 1122)

  0x000000010f807875: mov    %rdx,%rcx
  0x000000010f807878: inc    %ecx
  0x000000010f80787a: mov    %ecx,0x18(%rsi)    ;*putfield index
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newUTF8@49 (line 1122)

  0x000000010f80787d: mov    0x5c(%rsi),%ecx
  0x000000010f807880: shl    $0x3,%rcx          ;*getfield key
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newUTF8@53 (line 1122)

  0x000000010f807884: mov    %rax,%rdi
  0x000000010f807887: movabs $0x10eda2270,%rbx  ;   {metadata(method data for {method} {0x000000010ed72c70} 'newUTF8' '(Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000000010f807891: addq   $0x1,0x1c8(%rbx)
  0x000000010f807899: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newUTF8@56 (line 1122)

  0x000000010f80789c: mov    %rax,0x48(%rsp)
  0x000000010f8078a1: nop
  0x000000010f8078a2: nop
  0x000000010f8078a3: nop
  0x000000010f8078a4: nop
  0x000000010f8078a5: nop
  0x000000010f8078a6: nop
  0x000000010f8078a7: callq  0x000000010f7170a0  ; OopMap{[56]=Oop [72]=Oop off=652}
                                                ;*invokespecial <init>
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newUTF8@56 (line 1122)
                                                ;   {optimized virtual_call}
  0x000000010f8078ac: mov    0x38(%rsp),%rsi
  0x000000010f8078b1: movabs $0x10eda2270,%rdx  ;   {metadata(method data for {method} {0x000000010ed72c70} 'newUTF8' '(Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000000010f8078bb: addq   $0x1,0x1d8(%rdx)
  0x000000010f8078c3: mov    0x48(%rsp),%rdx
  0x000000010f8078c8: mov    0x38(%rsp),%rsi    ;*invokespecial put
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newUTF8@62 (line 1123)

  0x000000010f8078cd: nop
  0x000000010f8078ce: nop
  0x000000010f8078cf: callq  0x000000010f7170a0  ; OopMap{[72]=Oop off=692}
                                                ;*invokespecial put
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newUTF8@62 (line 1123)
                                                ;   {optimized virtual_call}
  0x000000010f8078d4: mov    0x48(%rsp),%rax    ;*aload_2
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newUTF8@65 (line 1125)

  0x000000010f8078d9: mov    0xc(%rax),%eax     ;*getfield index
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newUTF8@66 (line 1125)
                                                ; implicit exception: dispatches to 0x000000010f80791b
  0x000000010f8078dc: add    $0x60,%rsp
  0x000000010f8078e0: pop    %rbp
  0x000000010f8078e1: test   %eax,-0x8d6c7e7(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f8078e7: retq   
  0x000000010f8078e8: mov    %rcx,0x8(%rsp)
  0x000000010f8078ed: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f8078f5: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [56]=Oop rdx=Oop [64]=Oop off=730}
                                                ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newUTF8@-1 (line 1118)
                                                ;   {runtime_call}
  0x000000010f8078fa: jmpq   0x000000010f80768d
  0x000000010f8078ff: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop [56]=Oop rdx=Oop [64]=Oop rdi=Oop off=740}
                                                ;*invokevirtual set
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newUTF8@8 (line 1118)
                                                ;   {runtime_call}
  0x000000010f807904: callq  0x000000010f7cd0c0  ; OopMap{[64]=Oop rsi=Oop [56]=Oop rdi=Oop off=745}
                                                ;*invokevirtual putByte
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newUTF8@29 (line 1121)
                                                ;   {runtime_call}
  0x000000010f807909: callq  0x000000010f7cd0c0  ; OopMap{[56]=Oop [64]=Oop rax=Oop off=750}
                                                ;*invokevirtual putUTF8
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newUTF8@33 (line 1121)
                                                ;   {runtime_call}
  0x000000010f80790e: mov    %rdx,%rdx
  0x000000010f807911: callq  0x000000010f7cd820  ; OopMap{[56]=Oop off=758}
                                                ;*new  ; - jdk.internal.org.objectweb.asm.ClassWriter::newUTF8@37 (line 1122)
                                                ;   {runtime_call}
  0x000000010f807916: jmpq   0x000000010f80786d
  0x000000010f80791b: callq  0x000000010f7cd0c0  ; OopMap{off=768}
                                                ;*getfield index
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newUTF8@66 (line 1125)
                                                ;   {runtime_call}
  0x000000010f807920: nop
  0x000000010f807921: nop
  0x000000010f807922: mov    0x2a8(%r15),%rax
  0x000000010f807929: movabs $0x0,%r10
  0x000000010f807933: mov    %r10,0x2a8(%r15)
  0x000000010f80793a: movabs $0x0,%r10
  0x000000010f807944: mov    %r10,0x2b0(%r15)
  0x000000010f80794b: add    $0x60,%rsp
  0x000000010f80794f: pop    %rbp
  0x000000010f807950: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f807955: hlt    
  0x000000010f807956: hlt    
  0x000000010f807957: hlt    
  0x000000010f807958: hlt    
  0x000000010f807959: hlt    
  0x000000010f80795a: hlt    
  0x000000010f80795b: hlt    
  0x000000010f80795c: hlt    
  0x000000010f80795d: hlt    
  0x000000010f80795e: hlt    
  0x000000010f80795f: hlt    
[Stub Code]
  0x000000010f807960: nop                       ;   {no_reloc}
  0x000000010f807961: nop
  0x000000010f807962: nop
  0x000000010f807963: nop
  0x000000010f807964: nop
  0x000000010f807965: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f80796f: jmpq   0x000000010f80796f  ;   {runtime_call}
  0x000000010f807974: nop
  0x000000010f807975: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f80797f: jmpq   0x000000010f80797f  ;   {runtime_call}
  0x000000010f807984: nop
  0x000000010f807985: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f80798f: jmpq   0x000000010f80798f  ;   {runtime_call}
  0x000000010f807994: nop
  0x000000010f807995: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f80799f: jmpq   0x000000010f80799f  ;   {runtime_call}
  0x000000010f8079a4: nop
  0x000000010f8079a5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f8079af: jmpq   0x000000010f8079af  ;   {runtime_call}
  0x000000010f8079b4: nop
  0x000000010f8079b5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f8079bf: jmpq   0x000000010f8079bf  ;   {runtime_call}
[Exception Handler]
  0x000000010f8079c4: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f8079c9: mov    %rsp,-0x28(%rsp)
  0x000000010f8079ce: sub    $0x80,%rsp
  0x000000010f8079d5: mov    %rax,0x78(%rsp)
  0x000000010f8079da: mov    %rcx,0x70(%rsp)
  0x000000010f8079df: mov    %rdx,0x68(%rsp)
  0x000000010f8079e4: mov    %rbx,0x60(%rsp)
  0x000000010f8079e9: mov    %rbp,0x50(%rsp)
  0x000000010f8079ee: mov    %rsi,0x48(%rsp)
  0x000000010f8079f3: mov    %rdi,0x40(%rsp)
  0x000000010f8079f8: mov    %r8,0x38(%rsp)
  0x000000010f8079fd: mov    %r9,0x30(%rsp)
  0x000000010f807a02: mov    %r10,0x28(%rsp)
  0x000000010f807a07: mov    %r11,0x20(%rsp)
  0x000000010f807a0c: mov    %r12,0x18(%rsp)
  0x000000010f807a11: mov    %r13,0x10(%rsp)
  0x000000010f807a16: mov    %r14,0x8(%rsp)
  0x000000010f807a1b: mov    %r15,(%rsp)
  0x000000010f807a1f: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f807a29: movabs $0x10f8079c9,%rsi  ;   {internal_word}
  0x000000010f807a33: mov    %rsp,%rdx
  0x000000010f807a36: and    $0xfffffffffffffff0,%rsp
  0x000000010f807a3a: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f807a3f: hlt    
[Deopt Handler Code]
  0x000000010f807a40: movabs $0x10f807a40,%r10  ;   {section_word}
  0x000000010f807a4a: push   %r10
  0x000000010f807a4c: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f807a51: hlt    
  0x000000010f807a52: hlt    
  0x000000010f807a53: hlt    
  0x000000010f807a54: hlt    
  0x000000010f807a55: hlt    
  0x000000010f807a56: hlt    
  0x000000010f807a57: hlt    
Decoding compiled method 0x000000010f807d90:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010eaddf30} '<init>' '()V' in 'java/lang/StringBuilder'
  #           [sp+0x50]  (sp of caller)
  0x000000010f807f00: mov    0x8(%rsi),%r10d
  0x000000010f807f04: shl    $0x3,%r10
  0x000000010f807f08: cmp    %rax,%r10
  0x000000010f807f0b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f807f11: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f807f1c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f807f20: mov    %eax,-0x14000(%rsp)
  0x000000010f807f27: push   %rbp
  0x000000010f807f28: sub    $0x40,%rsp
  0x000000010f807f2c: mov    %rsi,%r8
  0x000000010f807f2f: movabs $0x10ed0ae70,%rbx  ;   {metadata(method data for {method} {0x000000010eaddf30} '<init>' '()V' in 'java/lang/StringBuilder')}
  0x000000010f807f39: mov    0xdc(%rbx),%edx
  0x000000010f807f3f: add    $0x8,%edx
  0x000000010f807f42: mov    %edx,0xdc(%rbx)
  0x000000010f807f48: movabs $0x10eaddf30,%rbx  ;   {metadata({method} {0x000000010eaddf30} '<init>' '()V' in 'java/lang/StringBuilder')}
  0x000000010f807f52: and    $0x1ff8,%edx
  0x000000010f807f58: cmp    $0x0,%edx
  0x000000010f807f5b: je     0x000000010f808095  ;*aload_0
                                                ; - java.lang.StringBuilder::<init>@0 (line 89)

  0x000000010f807f61: mov    %r8,%rbx
  0x000000010f807f64: movabs $0x10ed0ae70,%rdx  ;   {metadata(method data for {method} {0x000000010eaddf30} '<init>' '()V' in 'java/lang/StringBuilder')}
  0x000000010f807f6e: addq   $0x1,0x108(%rdx)
  0x000000010f807f76: movabs $0x10ec9a3e8,%rbx  ;   {metadata(method data for {method} {0x000000010eada260} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f807f80: mov    0xdc(%rbx),%edx
  0x000000010f807f86: add    $0x8,%edx
  0x000000010f807f89: mov    %edx,0xdc(%rbx)
  0x000000010f807f8f: movabs $0x10eada260,%rbx  ;   {metadata({method} {0x000000010eada260} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f807f99: and    $0x7ffff8,%edx
  0x000000010f807f9f: cmp    $0x0,%edx
  0x000000010f807fa2: je     0x000000010f8080ac
  0x000000010f807fa8: mov    %r8,%rbx
  0x000000010f807fab: movabs $0x10ec9a3e8,%rdx  ;   {metadata(method data for {method} {0x000000010eada260} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f807fb5: addq   $0x1,0x108(%rdx)
  0x000000010f807fbd: movabs $0x10ebdca10,%rbx  ;   {metadata(method data for {method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f807fc7: mov    0xdc(%rbx),%edx
  0x000000010f807fcd: add    $0x8,%edx
  0x000000010f807fd0: mov    %edx,0xdc(%rbx)
  0x000000010f807fd6: movabs $0x10ea65480,%rbx  ;   {metadata({method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f807fe0: and    $0x7ffff8,%edx
  0x000000010f807fe6: cmp    $0x0,%edx
  0x000000010f807fe9: je     0x000000010f8080c3
  0x000000010f807fef: mov    $0x10,%ebx
  0x000000010f807ff4: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000000010f807ffe: movslq %ebx,%rbx
  0x000000010f808001: mov    %rbx,%rdi
  0x000000010f808004: cmp    $0xffffff,%rbx
  0x000000010f80800b: ja     0x000000010f8080da
  0x000000010f808011: movabs $0x17,%rsi
  0x000000010f80801b: lea    (%rsi,%rbx,2),%rsi
  0x000000010f80801f: and    $0xfffffffffffffff8,%rsi
  0x000000010f808023: mov    0x60(%r15),%rax
  0x000000010f808027: lea    (%rax,%rsi,1),%rsi
  0x000000010f80802b: cmp    0x70(%r15),%rsi
  0x000000010f80802f: ja     0x000000010f8080da
  0x000000010f808035: mov    %rsi,0x60(%r15)
  0x000000010f808039: sub    %rax,%rsi
  0x000000010f80803c: movq   $0x1,(%rax)
  0x000000010f808043: mov    %rdx,%rcx
  0x000000010f808046: shr    $0x3,%rcx
  0x000000010f80804a: mov    %ecx,0x8(%rax)
  0x000000010f80804d: mov    %ebx,0xc(%rax)
  0x000000010f808050: sub    $0x10,%rsi
  0x000000010f808054: je     0x000000010f80806b
  0x000000010f80805a: xor    %rbx,%rbx
  0x000000010f80805d: shr    $0x3,%rsi
  0x000000010f808061: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000010f808066: dec    %rsi
  0x000000010f808069: jne    0x000000010f808061  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::<init>@6 (line 68)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)

  0x000000010f80806b: mov    %rax,%r10
  0x000000010f80806e: shr    $0x3,%r10
  0x000000010f808072: mov    %r10d,0x10(%r8)
  0x000000010f808076: shr    $0x9,%r8
  0x000000010f80807a: movabs $0x1065b9000,%rsi
  0x000000010f808084: movb   $0x0,(%r8,%rsi,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::<init>@8 (line 68)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)

  0x000000010f808089: add    $0x40,%rsp
  0x000000010f80808d: pop    %rbp
  0x000000010f80808e: test   %eax,-0x8d6cf94(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f808094: retq   
  0x000000010f808095: mov    %rbx,0x8(%rsp)
  0x000000010f80809a: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f8080a2: callq  0x000000010f7d1a20  ; OopMap{r8=Oop off=423}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::<init>@-1 (line 89)
                                                ;   {runtime_call}
  0x000000010f8080a7: jmpq   0x000000010f807f61
  0x000000010f8080ac: mov    %rbx,0x8(%rsp)
  0x000000010f8080b1: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f8080b9: callq  0x000000010f7d1a20  ; OopMap{r8=Oop off=446}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::<init>@-1 (line 67)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ;   {runtime_call}
  0x000000010f8080be: jmpq   0x000000010f807fa8
  0x000000010f8080c3: mov    %rbx,0x8(%rsp)
  0x000000010f8080c8: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f8080d0: callq  0x000000010f7d1a20  ; OopMap{r8=Oop off=469}
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::<init>@1 (line 67)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ;   {runtime_call}
  0x000000010f8080d5: jmpq   0x000000010f807fef
  0x000000010f8080da: callq  0x000000010f7ce120  ; OopMap{r8=Oop off=479}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::<init>@6 (line 68)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ;   {runtime_call}
  0x000000010f8080df: jmp    0x000000010f80806b
  0x000000010f8080e1: nop
  0x000000010f8080e2: nop
  0x000000010f8080e3: mov    0x2a8(%r15),%rax
  0x000000010f8080ea: movabs $0x0,%r10
  0x000000010f8080f4: mov    %r10,0x2a8(%r15)
  0x000000010f8080fb: movabs $0x0,%r10
  0x000000010f808105: mov    %r10,0x2b0(%r15)
  0x000000010f80810c: add    $0x40,%rsp
  0x000000010f808110: pop    %rbp
  0x000000010f808111: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f808116: hlt    
  0x000000010f808117: hlt    
  0x000000010f808118: hlt    
  0x000000010f808119: hlt    
  0x000000010f80811a: hlt    
  0x000000010f80811b: hlt    
  0x000000010f80811c: hlt    
  0x000000010f80811d: hlt    
  0x000000010f80811e: hlt    
  0x000000010f80811f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f808120: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f808125: mov    %rsp,-0x28(%rsp)
  0x000000010f80812a: sub    $0x80,%rsp
  0x000000010f808131: mov    %rax,0x78(%rsp)
  0x000000010f808136: mov    %rcx,0x70(%rsp)
  0x000000010f80813b: mov    %rdx,0x68(%rsp)
  0x000000010f808140: mov    %rbx,0x60(%rsp)
  0x000000010f808145: mov    %rbp,0x50(%rsp)
  0x000000010f80814a: mov    %rsi,0x48(%rsp)
  0x000000010f80814f: mov    %rdi,0x40(%rsp)
  0x000000010f808154: mov    %r8,0x38(%rsp)
  0x000000010f808159: mov    %r9,0x30(%rsp)
  0x000000010f80815e: mov    %r10,0x28(%rsp)
  0x000000010f808163: mov    %r11,0x20(%rsp)
  0x000000010f808168: mov    %r12,0x18(%rsp)
  0x000000010f80816d: mov    %r13,0x10(%rsp)
  0x000000010f808172: mov    %r14,0x8(%rsp)
  0x000000010f808177: mov    %r15,(%rsp)
  0x000000010f80817b: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f808185: movabs $0x10f808125,%rsi  ;   {internal_word}
  0x000000010f80818f: mov    %rsp,%rdx
  0x000000010f808192: and    $0xfffffffffffffff0,%rsp
  0x000000010f808196: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f80819b: hlt    
[Deopt Handler Code]
  0x000000010f80819c: movabs $0x10f80819c,%r10  ;   {section_word}
  0x000000010f8081a6: push   %r10
  0x000000010f8081a8: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f8081ad: hlt    
  0x000000010f8081ae: hlt    
  0x000000010f8081af: hlt    
Decoding compiled method 0x000000010f8082d0:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000010eda2b40} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rsi:rsi   = 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    rcx:rcx   = 'java/lang/Object'
  # parm2:    r8:r8     = 'java/lang/Object'
  #           [sp+0x0]  (sp of caller)
  0x000000010f808400: mov    0x14(%rsi),%ebx
  0x000000010f808403: shl    $0x3,%rbx
  0x000000010f808407: mov    0x28(%rbx),%ebx
  0x000000010f80840a: shl    $0x3,%rbx
  0x000000010f80840e: mov    0x18(%rbx),%rbx
  0x000000010f808412: test   %rbx,%rbx
  0x000000010f808415: je     0x000000010f80841e
  0x000000010f80841b: jmpq   *0x40(%rbx)
  0x000000010f80841e: jmpq   0x000000010f6d61a0  ;   {runtime_call}
  0x000000010f808423: hlt    
  0x000000010f808424: hlt    
  0x000000010f808425: hlt    
  0x000000010f808426: hlt    
  0x000000010f808427: hlt    
Decoding compiled method 0x000000010f808450:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000010eda2c58} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8:r8     = 'java/lang/Object'
  # parm4:    r9:r9     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x000000010f808580: cmp    (%rsi),%rax
  0x000000010f808583: mov    0x18(%r9),%rbx
  0x000000010f808587: test   %rbx,%rbx
  0x000000010f80858a: je     0x000000010f808593
  0x000000010f808590: jmpq   *0x40(%rbx)
  0x000000010f808593: jmpq   0x000000010f6d61a0  ;   {runtime_call}
Decoding compiled method 0x000000010f8085d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ed2db18} 'expungeStaleElements' '()V' in 'java/lang/invoke/MethodType$ConcurrentWeakInternSet'
  #           [sp+0x70]  (sp of caller)
  0x000000010f808780: mov    0x8(%rsi),%r10d
  0x000000010f808784: shl    $0x3,%r10
  0x000000010f808788: cmp    %rax,%r10
  0x000000010f80878b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f808791: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f80879c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f8087a0: mov    %eax,-0x14000(%rsp)
  0x000000010f8087a7: push   %rbp
  0x000000010f8087a8: sub    $0x60,%rsp
  0x000000010f8087ac: mov    %rsi,0x30(%rsp)
  0x000000010f8087b1: movabs $0x10eda28b0,%rax  ;   {metadata(method data for {method} {0x000000010ed2db18} 'expungeStaleElements' '()V' in 'java/lang/invoke/MethodType$ConcurrentWeakInternSet')}
  0x000000010f8087bb: mov    0xdc(%rax),%edi
  0x000000010f8087c1: add    $0x8,%edi
  0x000000010f8087c4: mov    %edi,0xdc(%rax)
  0x000000010f8087ca: movabs $0x10ed2db18,%rax  ;   {metadata({method} {0x000000010ed2db18} 'expungeStaleElements' '()V' in 'java/lang/invoke/MethodType$ConcurrentWeakInternSet')}
  0x000000010f8087d4: and    $0x1ff8,%edi
  0x000000010f8087da: cmp    $0x0,%edi
  0x000000010f8087dd: je     0x000000010f808bd1  ;*aload_0
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@0 (line 1264)

  0x000000010f8087e3: nopl   0x0(%rax,%rax,1)
  0x000000010f8087e8: mov    0x10(%rsi),%edi
  0x000000010f8087eb: shl    $0x3,%rdi          ;*getfield stale
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@1 (line 1264)

  0x000000010f8087ef: cmp    (%rdi),%rax        ;*invokevirtual poll
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@4 (line 1264)
                                                ; implicit exception: dispatches to 0x000000010f808be8
  0x000000010f8087f2: mov    %rdi,%rax
  0x000000010f8087f5: movabs $0x10eda28b0,%rbx  ;   {metadata(method data for {method} {0x000000010ed2db18} 'expungeStaleElements' '()V' in 'java/lang/invoke/MethodType$ConcurrentWeakInternSet')}
  0x000000010f8087ff: mov    0x8(%rax),%eax
  0x000000010f808802: shl    $0x3,%rax
  0x000000010f808806: cmp    0x110(%rbx),%rax
  0x000000010f80880d: jne    0x000000010f80881c
  0x000000010f80880f: addq   $0x1,0x118(%rbx)
  0x000000010f808817: jmpq   0x000000010f808882
  0x000000010f80881c: cmp    0x120(%rbx),%rax
  0x000000010f808823: jne    0x000000010f808832
  0x000000010f808825: addq   $0x1,0x128(%rbx)
  0x000000010f80882d: jmpq   0x000000010f808882
  0x000000010f808832: cmpq   $0x0,0x110(%rbx)
  0x000000010f80883d: jne    0x000000010f808856
  0x000000010f80883f: mov    %rax,0x110(%rbx)
  0x000000010f808846: movq   $0x1,0x118(%rbx)
  0x000000010f808851: jmpq   0x000000010f808882
  0x000000010f808856: cmpq   $0x0,0x120(%rbx)
  0x000000010f808861: jne    0x000000010f80887a
  0x000000010f808863: mov    %rax,0x120(%rbx)
  0x000000010f80886a: movq   $0x1,0x128(%rbx)
  0x000000010f808875: jmpq   0x000000010f808882
  0x000000010f80887a: addq   $0x1,0x108(%rbx)
  0x000000010f808882: movabs $0x10ed93f80,%rax  ;   {metadata(method data for {method} {0x000000010ea90688} 'poll' '()Ljava/lang/ref/Reference;' in 'java/lang/ref/ReferenceQueue')}
  0x000000010f80888c: mov    0xdc(%rax),%ebx
  0x000000010f808892: add    $0x8,%ebx
  0x000000010f808895: mov    %ebx,0xdc(%rax)
  0x000000010f80889b: movabs $0x10ea90688,%rax  ;   {metadata({method} {0x000000010ea90688} 'poll' '()Ljava/lang/ref/Reference;' in 'java/lang/ref/ReferenceQueue')}
  0x000000010f8088a5: and    $0x7ffff8,%ebx
  0x000000010f8088ab: cmp    $0x0,%ebx
  0x000000010f8088ae: je     0x000000010f808bed
  0x000000010f8088b4: mov    0x18(%rdi),%eax
  0x000000010f8088b7: shl    $0x3,%rax          ;*getfield head
                                                ; - java.lang.ref.ReferenceQueue::poll@1 (line 106)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@4 (line 1264)

  0x000000010f8088bb: cmp    $0x0,%rax
  0x000000010f8088bf: movabs $0x10ed93f80,%rax  ;   {metadata(method data for {method} {0x000000010ea90688} 'poll' '()Ljava/lang/ref/Reference;' in 'java/lang/ref/ReferenceQueue')}
  0x000000010f8088c9: movabs $0x108,%rbx
  0x000000010f8088d3: jne    0x000000010f8088e3
  0x000000010f8088d9: movabs $0x118,%rbx
  0x000000010f8088e3: mov    (%rax,%rbx,1),%rdx
  0x000000010f8088e7: lea    0x1(%rdx),%rdx
  0x000000010f8088eb: mov    %rdx,(%rax,%rbx,1)
  0x000000010f8088ef: jne    0x000000010f808904  ;*ifnonnull
                                                ; - java.lang.ref.ReferenceQueue::poll@4 (line 106)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@4 (line 1264)

  0x000000010f8088f5: movabs $0x0,%rdi          ;   {oop(NULL)}
  0x000000010f8088ff: jmpq   0x000000010f808a2b  ;*dup
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@7 (line 1264)

  0x000000010f808904: mov    0xc(%rdi),%ebx
  0x000000010f808907: shl    $0x3,%rbx          ;*getfield lock
                                                ; - java.lang.ref.ReferenceQueue::poll@10 (line 108)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@4 (line 1264)

  0x000000010f80890b: lea    0x40(%rsp),%rdx
  0x000000010f808910: mov    %rbx,0x8(%rdx)
  0x000000010f808914: mov    (%rbx),%rax        ; implicit exception: dispatches to 0x000000010f808c04
  0x000000010f808917: mov    %rax,%rcx
  0x000000010f80891a: and    $0x7,%rcx
  0x000000010f80891e: cmp    $0x5,%rcx
  0x000000010f808922: jne    0x000000010f8089a9
  0x000000010f808928: mov    0x8(%rbx),%ecx
  0x000000010f80892b: shl    $0x3,%rcx
  0x000000010f80892f: mov    0xa8(%rcx),%rcx
  0x000000010f808936: or     %r15,%rcx
  0x000000010f808939: xor    %rax,%rcx
  0x000000010f80893c: and    $0xffffffffffffff87,%rcx
  0x000000010f808940: je     0x000000010f8089d1
  0x000000010f808946: test   $0x7,%rcx
  0x000000010f80894d: jne    0x000000010f808996
  0x000000010f80894f: test   $0x300,%rcx
  0x000000010f808956: jne    0x000000010f808975
  0x000000010f808958: and    $0x37f,%rax
  0x000000010f80895f: mov    %rax,%rcx
  0x000000010f808962: or     %r15,%rcx
  0x000000010f808965: lock cmpxchg %rcx,(%rbx)
  0x000000010f80896a: jne    0x000000010f808c09
  0x000000010f808970: jmpq   0x000000010f8089d1
  0x000000010f808975: mov    0x8(%rbx),%ecx
  0x000000010f808978: shl    $0x3,%rcx
  0x000000010f80897c: mov    0xa8(%rcx),%rcx
  0x000000010f808983: or     %r15,%rcx
  0x000000010f808986: lock cmpxchg %rcx,(%rbx)
  0x000000010f80898b: jne    0x000000010f808c09
  0x000000010f808991: jmpq   0x000000010f8089d1
  0x000000010f808996: mov    0x8(%rbx),%ecx
  0x000000010f808999: shl    $0x3,%rcx
  0x000000010f80899d: mov    0xa8(%rcx),%rcx
  0x000000010f8089a4: lock cmpxchg %rcx,(%rbx)
  0x000000010f8089a9: mov    (%rbx),%rax
  0x000000010f8089ac: or     $0x1,%rax
  0x000000010f8089b0: mov    %rax,(%rdx)
  0x000000010f8089b3: lock cmpxchg %rdx,(%rbx)
  0x000000010f8089b8: je     0x000000010f8089d1
  0x000000010f8089be: sub    %rsp,%rax
  0x000000010f8089c1: and    $0xfffffffffffff007,%rax
  0x000000010f8089c8: mov    %rax,(%rdx)
  0x000000010f8089cb: jne    0x000000010f808c09  ;*monitorenter
                                                ; - java.lang.ref.ReferenceQueue::poll@15 (line 108)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@4 (line 1264)

  0x000000010f8089d1: mov    %rbx,0x38(%rsp)
  0x000000010f8089d6: mov    %rdi,%rax
  0x000000010f8089d9: movabs $0x10ed93f80,%rdx  ;   {metadata(method data for {method} {0x000000010ea90688} 'poll' '()Ljava/lang/ref/Reference;' in 'java/lang/ref/ReferenceQueue')}
  0x000000010f8089e3: addq   $0x1,0x128(%rdx)
  0x000000010f8089eb: mov    %rdi,%rsi          ;*invokespecial reallyPoll
                                                ; - java.lang.ref.ReferenceQueue::poll@17 (line 109)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@4 (line 1264)

  0x000000010f8089ee: nop
  0x000000010f8089ef: callq  0x000000010f7170a0  ; OopMap{[56]=Oop [48]=Oop [72]=Oop off=628}
                                                ;*invokespecial reallyPoll
                                                ; - java.lang.ref.ReferenceQueue::poll@17 (line 109)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@4 (line 1264)
                                                ;   {optimized virtual_call}
  0x000000010f8089f4: mov    %rax,%rdx          ;*invokespecial reallyPoll
                                                ; - java.lang.ref.ReferenceQueue::poll@17 (line 109)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@4 (line 1264)

  0x000000010f8089f7: lea    0x40(%rsp),%rax
  0x000000010f8089fc: mov    0x8(%rax),%rdi
  0x000000010f808a00: mov    (%rdi),%rsi
  0x000000010f808a03: and    $0x7,%rsi
  0x000000010f808a07: cmp    $0x5,%rsi
  0x000000010f808a0b: je     0x000000010f808a28
  0x000000010f808a11: mov    (%rax),%rsi
  0x000000010f808a14: test   %rsi,%rsi
  0x000000010f808a17: je     0x000000010f808a28
  0x000000010f808a1d: lock cmpxchg %rsi,(%rdi)
  0x000000010f808a22: jne    0x000000010f808c1c  ;*monitorexit
                                                ; - java.lang.ref.ReferenceQueue::poll@21 (line 109)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@4 (line 1264)

  0x000000010f808a28: mov    %rdx,%rdi          ;*dup  ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@7 (line 1264)

  0x000000010f808a2b: cmp    $0x0,%rdi
  0x000000010f808a2f: movabs $0x10eda28b0,%rdx  ;   {metadata(method data for {method} {0x000000010ed2db18} 'expungeStaleElements' '()V' in 'java/lang/invoke/MethodType$ConcurrentWeakInternSet')}
  0x000000010f808a39: movabs $0x138,%rsi
  0x000000010f808a43: je     0x000000010f808a53
  0x000000010f808a49: movabs $0x148,%rsi
  0x000000010f808a53: mov    (%rdx,%rsi,1),%rbx
  0x000000010f808a57: lea    0x1(%rbx),%rbx
  0x000000010f808a5b: mov    %rbx,(%rdx,%rsi,1)
  0x000000010f808a5f: je     0x000000010f808b6e  ;*ifnull
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@9 (line 1264)

  0x000000010f808a65: mov    0x30(%rsp),%rsi
  0x000000010f808a6a: mov    0xc(%rsi),%ebx
  0x000000010f808a6d: shl    $0x3,%rbx          ;*getfield map
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@13 (line 1265)

  0x000000010f808a71: cmp    (%rbx),%rax        ; implicit exception: dispatches to 0x000000010f808c2f
  0x000000010f808a74: mov    %rbx,%rdx
  0x000000010f808a77: movabs $0x10eda28b0,%rax  ;   {metadata(method data for {method} {0x000000010ed2db18} 'expungeStaleElements' '()V' in 'java/lang/invoke/MethodType$ConcurrentWeakInternSet')}
  0x000000010f808a81: mov    0x8(%rdx),%edx
  0x000000010f808a84: shl    $0x3,%rdx
  0x000000010f808a88: cmp    0x160(%rax),%rdx
  0x000000010f808a8f: jne    0x000000010f808a9e
  0x000000010f808a91: addq   $0x1,0x168(%rax)
  0x000000010f808a99: jmpq   0x000000010f808b04
  0x000000010f808a9e: cmp    0x170(%rax),%rdx
  0x000000010f808aa5: jne    0x000000010f808ab4
  0x000000010f808aa7: addq   $0x1,0x178(%rax)
  0x000000010f808aaf: jmpq   0x000000010f808b04
  0x000000010f808ab4: cmpq   $0x0,0x160(%rax)
  0x000000010f808abf: jne    0x000000010f808ad8
  0x000000010f808ac1: mov    %rdx,0x160(%rax)
  0x000000010f808ac8: movq   $0x1,0x168(%rax)
  0x000000010f808ad3: jmpq   0x000000010f808b04
  0x000000010f808ad8: cmpq   $0x0,0x170(%rax)
  0x000000010f808ae3: jne    0x000000010f808afc
  0x000000010f808ae5: mov    %rdx,0x170(%rax)
  0x000000010f808aec: movq   $0x1,0x178(%rax)
  0x000000010f808af7: jmpq   0x000000010f808b04
  0x000000010f808afc: addq   $0x1,0x158(%rax)
  0x000000010f808b04: mov    %rdi,%rdx
  0x000000010f808b07: mov    %rbx,%rsi          ;*invokeinterface remove
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@17 (line 1265)

  0x000000010f808b0a: nop
  0x000000010f808b0b: nop
  0x000000010f808b0c: nop
  0x000000010f808b0d: movabs $0xffffffffffffffff,%rax
  0x000000010f808b17: callq  0x000000010f7172e0  ; OopMap{[48]=Oop off=924}
                                                ;*invokeinterface remove
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@17 (line 1265)
                                                ;   {virtual_call}
  0x000000010f808b1c: movabs $0x10eda28b0,%rax  ;   {metadata(method data for {method} {0x000000010ed2db18} 'expungeStaleElements' '()V' in 'java/lang/invoke/MethodType$ConcurrentWeakInternSet')}
  0x000000010f808b26: mov    0xe0(%rax),%esi
  0x000000010f808b2c: add    $0x8,%esi
  0x000000010f808b2f: mov    %esi,0xe0(%rax)
  0x000000010f808b35: movabs $0x10ed2db18,%rax  ;   {metadata({method} {0x000000010ed2db18} 'expungeStaleElements' '()V' in 'java/lang/invoke/MethodType$ConcurrentWeakInternSet')}
  0x000000010f808b3f: and    $0xfff8,%esi
  0x000000010f808b45: cmp    $0x0,%esi
  0x000000010f808b48: je     0x000000010f808c34  ; OopMap{[48]=Oop off=974}
                                                ;*goto
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@23 (line 1265)

  0x000000010f808b4e: test   %eax,-0x8d6da54(%rip)        # 0x0000000106a9b100
                                                ;   {poll}
  0x000000010f808b54: movabs $0x10eda28b0,%rax  ;   {metadata(method data for {method} {0x000000010ed2db18} 'expungeStaleElements' '()V' in 'java/lang/invoke/MethodType$ConcurrentWeakInternSet')}
  0x000000010f808b5e: incl   0x188(%rax)
  0x000000010f808b64: mov    0x30(%rsp),%rsi
  0x000000010f808b69: jmpq   0x000000010f8087e8  ;*goto
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@23 (line 1265)

  0x000000010f808b6e: add    $0x60,%rsp
  0x000000010f808b72: pop    %rbp
  0x000000010f808b73: test   %eax,-0x8d6da79(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f808b79: retq                      ;*return
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@26 (line 1267)

  0x000000010f808b7a: mov    0x2a8(%r15),%rax
  0x000000010f808b81: xor    %r10,%r10
  0x000000010f808b84: mov    %r10,0x2a8(%r15)
  0x000000010f808b8b: xor    %r10,%r10
  0x000000010f808b8e: mov    %r10,0x2b0(%r15)
  0x000000010f808b95: mov    %rax,%rsi
  0x000000010f808b98: lea    0x40(%rsp),%rax
  0x000000010f808b9d: mov    0x8(%rax),%rbx
  0x000000010f808ba1: mov    (%rbx),%rdi
  0x000000010f808ba4: and    $0x7,%rdi
  0x000000010f808ba8: cmp    $0x5,%rdi
  0x000000010f808bac: je     0x000000010f808bc9
  0x000000010f808bb2: mov    (%rax),%rdi
  0x000000010f808bb5: test   %rdi,%rdi
  0x000000010f808bb8: je     0x000000010f808bc9
  0x000000010f808bbe: lock cmpxchg %rdi,(%rbx)
  0x000000010f808bc3: jne    0x000000010f808c4b  ;*monitorexit
                                                ; - java.lang.ref.ReferenceQueue::poll@25 (line 110)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@4 (line 1264)

  0x000000010f808bc9: mov    %rsi,%rax
  0x000000010f808bcc: jmpq   0x000000010f808c89
  0x000000010f808bd1: mov    %rax,0x8(%rsp)
  0x000000010f808bd6: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f808bde: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [48]=Oop off=1123}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@-1 (line 1264)
                                                ;   {runtime_call}
  0x000000010f808be3: jmpq   0x000000010f8087e3
  0x000000010f808be8: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop [48]=Oop rdi=Oop off=1133}
                                                ;*invokevirtual poll
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@4 (line 1264)
                                                ;   {runtime_call}
  0x000000010f808bed: mov    %rax,0x8(%rsp)
  0x000000010f808bf2: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f808bfa: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [48]=Oop rdi=Oop off=1151}
                                                ;*synchronization entry
                                                ; - java.lang.ref.ReferenceQueue::poll@-1 (line 106)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@4 (line 1264)
                                                ;   {runtime_call}
  0x000000010f808bff: jmpq   0x000000010f8088b4
  0x000000010f808c04: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop [48]=Oop rdi=Oop rbx=Oop off=1161}
                                                ;*monitorenter
                                                ; - java.lang.ref.ReferenceQueue::poll@15 (line 108)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@4 (line 1264)
                                                ;   {runtime_call}
  0x000000010f808c09: mov    %rbx,0x8(%rsp)
  0x000000010f808c0e: mov    %rdx,(%rsp)
  0x000000010f808c12: callq  0x000000010f7cfc60  ; OopMap{rsi=Oop [48]=Oop rdi=Oop rbx=Oop [72]=Oop off=1175}
                                                ;*monitorenter
                                                ; - java.lang.ref.ReferenceQueue::poll@15 (line 108)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@4 (line 1264)
                                                ;   {runtime_call}
  0x000000010f808c17: jmpq   0x000000010f8089d1
  0x000000010f808c1c: lea    0x40(%rsp),%rax
  0x000000010f808c21: mov    %rax,(%rsp)
  0x000000010f808c25: callq  0x000000010f7d00a0  ;   {runtime_call}
  0x000000010f808c2a: jmpq   0x000000010f808a28
  0x000000010f808c2f: callq  0x000000010f7cd0c0  ; OopMap{rdi=Oop rsi=Oop [48]=Oop rbx=Oop off=1204}
                                                ;*invokeinterface remove
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@17 (line 1265)
                                                ;   {runtime_call}
  0x000000010f808c34: mov    %rax,0x8(%rsp)
  0x000000010f808c39: movq   $0x17,(%rsp)
  0x000000010f808c41: callq  0x000000010f7d1a20  ; OopMap{[48]=Oop off=1222}
                                                ;*goto
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@23 (line 1265)
                                                ;   {runtime_call}
  0x000000010f808c46: jmpq   0x000000010f808b4e
  0x000000010f808c4b: lea    0x40(%rsp),%rax
  0x000000010f808c50: mov    %rax,(%rsp)
  0x000000010f808c54: callq  0x000000010f7d00a0  ;   {runtime_call}
  0x000000010f808c59: jmpq   0x000000010f808bc9
  0x000000010f808c5e: nop
  0x000000010f808c5f: nop
  0x000000010f808c60: mov    0x2a8(%r15),%rax
  0x000000010f808c67: movabs $0x0,%r10
  0x000000010f808c71: mov    %r10,0x2a8(%r15)
  0x000000010f808c78: movabs $0x0,%r10
  0x000000010f808c82: mov    %r10,0x2b0(%r15)
  0x000000010f808c89: add    $0x60,%rsp
  0x000000010f808c8d: pop    %rbp
  0x000000010f808c8e: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f808c93: hlt    
  0x000000010f808c94: hlt    
  0x000000010f808c95: hlt    
  0x000000010f808c96: hlt    
  0x000000010f808c97: hlt    
  0x000000010f808c98: hlt    
  0x000000010f808c99: hlt    
  0x000000010f808c9a: hlt    
  0x000000010f808c9b: hlt    
  0x000000010f808c9c: hlt    
  0x000000010f808c9d: hlt    
  0x000000010f808c9e: hlt    
  0x000000010f808c9f: hlt    
[Stub Code]
  0x000000010f808ca0: nop                       ;   {no_reloc}
  0x000000010f808ca1: nop
  0x000000010f808ca2: nop
  0x000000010f808ca3: nop
  0x000000010f808ca4: nop
  0x000000010f808ca5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f808caf: jmpq   0x000000010f808caf  ;   {runtime_call}
  0x000000010f808cb4: nop
  0x000000010f808cb5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f808cbf: jmpq   0x000000010f808cbf  ;   {runtime_call}
[Exception Handler]
  0x000000010f808cc4: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f808cc9: mov    %rsp,-0x28(%rsp)
  0x000000010f808cce: sub    $0x80,%rsp
  0x000000010f808cd5: mov    %rax,0x78(%rsp)
  0x000000010f808cda: mov    %rcx,0x70(%rsp)
  0x000000010f808cdf: mov    %rdx,0x68(%rsp)
  0x000000010f808ce4: mov    %rbx,0x60(%rsp)
  0x000000010f808ce9: mov    %rbp,0x50(%rsp)
  0x000000010f808cee: mov    %rsi,0x48(%rsp)
  0x000000010f808cf3: mov    %rdi,0x40(%rsp)
  0x000000010f808cf8: mov    %r8,0x38(%rsp)
  0x000000010f808cfd: mov    %r9,0x30(%rsp)
  0x000000010f808d02: mov    %r10,0x28(%rsp)
  0x000000010f808d07: mov    %r11,0x20(%rsp)
  0x000000010f808d0c: mov    %r12,0x18(%rsp)
  0x000000010f808d11: mov    %r13,0x10(%rsp)
  0x000000010f808d16: mov    %r14,0x8(%rsp)
  0x000000010f808d1b: mov    %r15,(%rsp)
  0x000000010f808d1f: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f808d29: movabs $0x10f808cc9,%rsi  ;   {internal_word}
  0x000000010f808d33: mov    %rsp,%rdx
  0x000000010f808d36: and    $0xfffffffffffffff0,%rsp
  0x000000010f808d3a: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f808d3f: hlt    
[Deopt Handler Code]
  0x000000010f808d40: movabs $0x10f808d40,%r10  ;   {section_word}
  0x000000010f808d4a: push   %r10
  0x000000010f808d4c: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f808d51: hlt    
  0x000000010f808d52: hlt    
  0x000000010f808d53: hlt    
  0x000000010f808d54: hlt    
  0x000000010f808d55: hlt    
  0x000000010f808d56: hlt    
  0x000000010f808d57: hlt    
Decoding compiled method 0x000000010f809090:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ed50608} 'index' '()I' in 'java/lang/invoke/LambdaForm$Name'
  #           [sp+0x40]  (sp of caller)
  0x000000010f8091e0: mov    0x8(%rsi),%r10d
  0x000000010f8091e4: shl    $0x3,%r10
  0x000000010f8091e8: cmp    %rax,%r10
  0x000000010f8091eb: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f8091f1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f8091fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f809200: mov    %eax,-0x14000(%rsp)
  0x000000010f809207: push   %rbp
  0x000000010f809208: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.lang.invoke.LambdaForm$Name::index@0 (line 1420)

  0x000000010f80920c: movswl 0xc(%rsi),%eax     ;*getfield index
                                                ; - java.lang.invoke.LambdaForm$Name::index@1 (line 1420)

  0x000000010f809210: add    $0x30,%rsp
  0x000000010f809214: pop    %rbp
  0x000000010f809215: test   %eax,-0x8d6e11b(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f80921b: retq   
  0x000000010f80921c: nop
  0x000000010f80921d: nop
  0x000000010f80921e: mov    0x2a8(%r15),%rax
  0x000000010f809225: movabs $0x0,%r10
  0x000000010f80922f: mov    %r10,0x2a8(%r15)
  0x000000010f809236: movabs $0x0,%r10
  0x000000010f809240: mov    %r10,0x2b0(%r15)
  0x000000010f809247: add    $0x30,%rsp
  0x000000010f80924b: pop    %rbp
  0x000000010f80924c: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f809251: hlt    
  0x000000010f809252: hlt    
  0x000000010f809253: hlt    
  0x000000010f809254: hlt    
  0x000000010f809255: hlt    
  0x000000010f809256: hlt    
  0x000000010f809257: hlt    
  0x000000010f809258: hlt    
  0x000000010f809259: hlt    
  0x000000010f80925a: hlt    
  0x000000010f80925b: hlt    
  0x000000010f80925c: hlt    
  0x000000010f80925d: hlt    
  0x000000010f80925e: hlt    
  0x000000010f80925f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f809260: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f809265: mov    %rsp,-0x28(%rsp)
  0x000000010f80926a: sub    $0x80,%rsp
  0x000000010f809271: mov    %rax,0x78(%rsp)
  0x000000010f809276: mov    %rcx,0x70(%rsp)
  0x000000010f80927b: mov    %rdx,0x68(%rsp)
  0x000000010f809280: mov    %rbx,0x60(%rsp)
  0x000000010f809285: mov    %rbp,0x50(%rsp)
  0x000000010f80928a: mov    %rsi,0x48(%rsp)
  0x000000010f80928f: mov    %rdi,0x40(%rsp)
  0x000000010f809294: mov    %r8,0x38(%rsp)
  0x000000010f809299: mov    %r9,0x30(%rsp)
  0x000000010f80929e: mov    %r10,0x28(%rsp)
  0x000000010f8092a3: mov    %r11,0x20(%rsp)
  0x000000010f8092a8: mov    %r12,0x18(%rsp)
  0x000000010f8092ad: mov    %r13,0x10(%rsp)
  0x000000010f8092b2: mov    %r14,0x8(%rsp)
  0x000000010f8092b7: mov    %r15,(%rsp)
  0x000000010f8092bb: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f8092c5: movabs $0x10f809265,%rsi  ;   {internal_word}
  0x000000010f8092cf: mov    %rsp,%rdx
  0x000000010f8092d2: and    $0xfffffffffffffff0,%rsp
  0x000000010f8092d6: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f8092db: hlt    
[Deopt Handler Code]
  0x000000010f8092dc: movabs $0x10f8092dc,%r10  ;   {section_word}
  0x000000010f8092e6: push   %r10
  0x000000010f8092e8: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f8092ed: hlt    
  0x000000010f8092ee: hlt    
  0x000000010f8092ef: hlt    
Decoding compiled method 0x000000010f809390:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010eace390} 'form' '()Ljava/lang/invoke/MethodTypeForm;' in 'java/lang/invoke/MethodType'
  #           [sp+0x40]  (sp of caller)
  0x000000010f8094e0: mov    0x8(%rsi),%r10d
  0x000000010f8094e4: shl    $0x3,%r10
  0x000000010f8094e8: cmp    %rax,%r10
  0x000000010f8094eb: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f8094f1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f8094fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f809500: mov    %eax,-0x14000(%rsp)
  0x000000010f809507: push   %rbp
  0x000000010f809508: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.lang.invoke.MethodType::form@0 (line 125)

  0x000000010f80950c: mov    0x14(%rsi),%eax
  0x000000010f80950f: shl    $0x3,%rax          ;*getfield form
                                                ; - java.lang.invoke.MethodType::form@1 (line 125)

  0x000000010f809513: add    $0x30,%rsp
  0x000000010f809517: pop    %rbp
  0x000000010f809518: test   %eax,-0x8d6e41e(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f80951e: retq   
  0x000000010f80951f: nop
  0x000000010f809520: nop
  0x000000010f809521: mov    0x2a8(%r15),%rax
  0x000000010f809528: movabs $0x0,%r10
  0x000000010f809532: mov    %r10,0x2a8(%r15)
  0x000000010f809539: movabs $0x0,%r10
  0x000000010f809543: mov    %r10,0x2b0(%r15)
  0x000000010f80954a: add    $0x30,%rsp
  0x000000010f80954e: pop    %rbp
  0x000000010f80954f: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f809554: hlt    
  0x000000010f809555: hlt    
  0x000000010f809556: hlt    
  0x000000010f809557: hlt    
  0x000000010f809558: hlt    
  0x000000010f809559: hlt    
  0x000000010f80955a: hlt    
  0x000000010f80955b: hlt    
  0x000000010f80955c: hlt    
  0x000000010f80955d: hlt    
  0x000000010f80955e: hlt    
  0x000000010f80955f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f809560: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f809565: mov    %rsp,-0x28(%rsp)
  0x000000010f80956a: sub    $0x80,%rsp
  0x000000010f809571: mov    %rax,0x78(%rsp)
  0x000000010f809576: mov    %rcx,0x70(%rsp)
  0x000000010f80957b: mov    %rdx,0x68(%rsp)
  0x000000010f809580: mov    %rbx,0x60(%rsp)
  0x000000010f809585: mov    %rbp,0x50(%rsp)
  0x000000010f80958a: mov    %rsi,0x48(%rsp)
  0x000000010f80958f: mov    %rdi,0x40(%rsp)
  0x000000010f809594: mov    %r8,0x38(%rsp)
  0x000000010f809599: mov    %r9,0x30(%rsp)
  0x000000010f80959e: mov    %r10,0x28(%rsp)
  0x000000010f8095a3: mov    %r11,0x20(%rsp)
  0x000000010f8095a8: mov    %r12,0x18(%rsp)
  0x000000010f8095ad: mov    %r13,0x10(%rsp)
  0x000000010f8095b2: mov    %r14,0x8(%rsp)
  0x000000010f8095b7: mov    %r15,(%rsp)
  0x000000010f8095bb: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f8095c5: movabs $0x10f809565,%rsi  ;   {internal_word}
  0x000000010f8095cf: mov    %rsp,%rdx
  0x000000010f8095d2: and    $0xfffffffffffffff0,%rsp
  0x000000010f8095d6: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f8095db: hlt    
[Deopt Handler Code]
  0x000000010f8095dc: movabs $0x10f8095dc,%r10  ;   {section_word}
  0x000000010f8095e6: push   %r10
  0x000000010f8095e8: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f8095ed: hlt    
  0x000000010f8095ee: hlt    
  0x000000010f8095ef: hlt    
Decoding compiled method 0x000000010f809690:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010eace4c0} 'ptypes' '()[Ljava/lang/Class;' in 'java/lang/invoke/MethodType'
  #           [sp+0x40]  (sp of caller)
  0x000000010f8097e0: mov    0x8(%rsi),%r10d
  0x000000010f8097e4: shl    $0x3,%r10
  0x000000010f8097e8: cmp    %rax,%r10
  0x000000010f8097eb: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f8097f1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f8097fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f809800: mov    %eax,-0x14000(%rsp)
  0x000000010f809807: push   %rbp
  0x000000010f809808: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.lang.invoke.MethodType::ptypes@0 (line 127)

  0x000000010f80980c: mov    0x10(%rsi),%eax
  0x000000010f80980f: shl    $0x3,%rax          ;*getfield ptypes
                                                ; - java.lang.invoke.MethodType::ptypes@1 (line 127)

  0x000000010f809813: add    $0x30,%rsp
  0x000000010f809817: pop    %rbp
  0x000000010f809818: test   %eax,-0x8d6e71e(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f80981e: retq   
  0x000000010f80981f: nop
  0x000000010f809820: nop
  0x000000010f809821: mov    0x2a8(%r15),%rax
  0x000000010f809828: movabs $0x0,%r10
  0x000000010f809832: mov    %r10,0x2a8(%r15)
  0x000000010f809839: movabs $0x0,%r10
  0x000000010f809843: mov    %r10,0x2b0(%r15)
  0x000000010f80984a: add    $0x30,%rsp
  0x000000010f80984e: pop    %rbp
  0x000000010f80984f: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f809854: hlt    
  0x000000010f809855: hlt    
  0x000000010f809856: hlt    
  0x000000010f809857: hlt    
  0x000000010f809858: hlt    
  0x000000010f809859: hlt    
  0x000000010f80985a: hlt    
  0x000000010f80985b: hlt    
  0x000000010f80985c: hlt    
  0x000000010f80985d: hlt    
  0x000000010f80985e: hlt    
  0x000000010f80985f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f809860: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f809865: mov    %rsp,-0x28(%rsp)
  0x000000010f80986a: sub    $0x80,%rsp
  0x000000010f809871: mov    %rax,0x78(%rsp)
  0x000000010f809876: mov    %rcx,0x70(%rsp)
  0x000000010f80987b: mov    %rdx,0x68(%rsp)
  0x000000010f809880: mov    %rbx,0x60(%rsp)
  0x000000010f809885: mov    %rbp,0x50(%rsp)
  0x000000010f80988a: mov    %rsi,0x48(%rsp)
  0x000000010f80988f: mov    %rdi,0x40(%rsp)
  0x000000010f809894: mov    %r8,0x38(%rsp)
  0x000000010f809899: mov    %r9,0x30(%rsp)
  0x000000010f80989e: mov    %r10,0x28(%rsp)
  0x000000010f8098a3: mov    %r11,0x20(%rsp)
  0x000000010f8098a8: mov    %r12,0x18(%rsp)
  0x000000010f8098ad: mov    %r13,0x10(%rsp)
  0x000000010f8098b2: mov    %r14,0x8(%rsp)
  0x000000010f8098b7: mov    %r15,(%rsp)
  0x000000010f8098bb: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f8098c5: movabs $0x10f809865,%rsi  ;   {internal_word}
  0x000000010f8098cf: mov    %rsp,%rdx
  0x000000010f8098d2: and    $0xfffffffffffffff0,%rsp
  0x000000010f8098d6: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f8098db: hlt    
[Deopt Handler Code]
  0x000000010f8098dc: movabs $0x10f8098dc,%r10  ;   {section_word}
  0x000000010f8098e6: push   %r10
  0x000000010f8098e8: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f8098ed: hlt    
  0x000000010f8098ee: hlt    
  0x000000010f8098ef: hlt    
Decoding compiled method 0x000000010f809990:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000010eda2d70} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8:r8     = 'java/lang/Object'
  # parm4:    r9:r9     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x000000010f809ac0: mov    0x18(%r9),%rbx
  0x000000010f809ac4: test   %rbx,%rbx
  0x000000010f809ac7: je     0x000000010f809ad0
  0x000000010f809acd: jmpq   *0x40(%rbx)
  0x000000010f809ad0: jmpq   0x000000010f6d61a0  ;   {runtime_call}
  0x000000010f809ad5: hlt    
  0x000000010f809ad6: hlt    
  0x000000010f809ad7: hlt    
Decoding compiled method 0x000000010f809b10:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000010eda2e88} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rsi:rsi   = 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    rcx:rcx   = 'java/lang/Object'
  # parm2:    r8:r8     = 'java/lang/Object'
  # parm3:    r9:r9     = 'java/lang/Object'
  #           [sp+0x0]  (sp of caller)
  0x000000010f809c40: mov    0x14(%rsi),%ebx
  0x000000010f809c43: shl    $0x3,%rbx
  0x000000010f809c47: mov    0x28(%rbx),%ebx
  0x000000010f809c4a: shl    $0x3,%rbx
  0x000000010f809c4e: mov    0x18(%rbx),%rbx
  0x000000010f809c52: test   %rbx,%rbx
  0x000000010f809c55: je     0x000000010f809c5e
  0x000000010f809c5b: jmpq   *0x40(%rbx)
  0x000000010f809c5e: jmpq   0x000000010f6d61a0  ;   {runtime_call}
  0x000000010f809c63: hlt    
  0x000000010f809c64: hlt    
  0x000000010f809c65: hlt    
  0x000000010f809c66: hlt    
  0x000000010f809c67: hlt    
Decoding compiled method 0x000000010f809c90:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000010eda2fa0} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8:r8     = 'java/lang/Object'
  # parm4:    r9:r9     = 'java/lang/Object'
  # parm5:    rdi:rdi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x000000010f809dc0: cmp    (%rsi),%rax
  0x000000010f809dc3: mov    0x18(%rdi),%rbx
  0x000000010f809dc7: test   %rbx,%rbx
  0x000000010f809dca: je     0x000000010f809dd3
  0x000000010f809dd0: jmpq   *0x40(%rbx)
  0x000000010f809dd3: jmpq   0x000000010f6d61a0  ;   {runtime_call}
Decoding compiled method 0x000000010f809e10:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000010eda3240} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8:r8     = 'java/lang/Object'
  # parm4:    r9:r9     = 'java/lang/Object'
  # parm5:    rdi:rdi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x000000010f809f40: mov    0x18(%rdi),%rbx
  0x000000010f809f44: test   %rbx,%rbx
  0x000000010f809f47: je     0x000000010f809f50
  0x000000010f809f4d: jmpq   *0x40(%rbx)
  0x000000010f809f50: jmpq   0x000000010f6d61a0  ;   {runtime_call}
  0x000000010f809f55: hlt    
  0x000000010f809f56: hlt    
  0x000000010f809f57: hlt    
Decoding compiled method 0x000000010f809f90:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010eabedb0} 'testAllFlags' '(I)Z' in 'java/lang/invoke/MemberName'
  # this:     rsi:rsi   = 'java/lang/invoke/MemberName'
  # parm0:    rdx       = int
  #           [sp+0x50]  (sp of caller)
  0x000000010f80a100: mov    0x8(%rsi),%r10d
  0x000000010f80a104: shl    $0x3,%r10
  0x000000010f80a108: cmp    %rax,%r10
  0x000000010f80a10b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f80a111: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f80a11c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f80a120: mov    %eax,-0x14000(%rsp)
  0x000000010f80a127: push   %rbp
  0x000000010f80a128: sub    $0x40,%rsp
  0x000000010f80a12c: movabs $0x10eda32a8,%rax  ;   {metadata(method data for {method} {0x000000010eabedb0} 'testAllFlags' '(I)Z' in 'java/lang/invoke/MemberName')}
  0x000000010f80a136: mov    0xdc(%rax),%edi
  0x000000010f80a13c: add    $0x8,%edi
  0x000000010f80a13f: mov    %edi,0xdc(%rax)
  0x000000010f80a145: movabs $0x10eabedb0,%rax  ;   {metadata({method} {0x000000010eabedb0} 'testAllFlags' '(I)Z' in 'java/lang/invoke/MemberName')}
  0x000000010f80a14f: and    $0x1ff8,%edi
  0x000000010f80a155: cmp    $0x0,%edi
  0x000000010f80a158: je     0x000000010f80a214  ;*aload_0
                                                ; - java.lang.invoke.MemberName::testAllFlags@0 (line 337)

  0x000000010f80a15e: mov    %rsi,%rax
  0x000000010f80a161: movabs $0x10eda32a8,%rdi  ;   {metadata(method data for {method} {0x000000010eabedb0} 'testAllFlags' '(I)Z' in 'java/lang/invoke/MemberName')}
  0x000000010f80a16b: addq   $0x1,0x108(%rdi)
  0x000000010f80a173: movabs $0x10ed91b60,%rax  ;   {metadata(method data for {method} {0x000000010eabed18} 'testFlags' '(II)Z' in 'java/lang/invoke/MemberName')}
  0x000000010f80a17d: mov    0xdc(%rax),%edi
  0x000000010f80a183: add    $0x8,%edi
  0x000000010f80a186: mov    %edi,0xdc(%rax)
  0x000000010f80a18c: movabs $0x10eabed18,%rax  ;   {metadata({method} {0x000000010eabed18} 'testFlags' '(II)Z' in 'java/lang/invoke/MemberName')}
  0x000000010f80a196: and    $0x7ffff8,%edi
  0x000000010f80a19c: cmp    $0x0,%edi
  0x000000010f80a19f: je     0x000000010f80a22b
  0x000000010f80a1a5: mov    0xc(%rsi),%eax     ;*getfield flags
                                                ; - java.lang.invoke.MemberName::testFlags@1 (line 334)
                                                ; - java.lang.invoke.MemberName::testAllFlags@3 (line 337)

  0x000000010f80a1a8: and    %rdx,%rax
  0x000000010f80a1ab: cmp    %edx,%eax
  0x000000010f80a1ad: movabs $0x10ed91b60,%rax  ;   {metadata(method data for {method} {0x000000010eabed18} 'testFlags' '(II)Z' in 'java/lang/invoke/MemberName')}
  0x000000010f80a1b7: movabs $0x108,%rsi
  0x000000010f80a1c1: jne    0x000000010f80a1d1
  0x000000010f80a1c7: movabs $0x118,%rsi
  0x000000010f80a1d1: mov    (%rax,%rsi,1),%rdi
  0x000000010f80a1d5: lea    0x1(%rdi),%rdi
  0x000000010f80a1d9: mov    %rdi,(%rax,%rsi,1)
  0x000000010f80a1dd: jne    0x000000010f80a1fd  ;*if_icmpne
                                                ; - java.lang.invoke.MemberName::testFlags@7 (line 334)
                                                ; - java.lang.invoke.MemberName::testAllFlags@3 (line 337)

  0x000000010f80a1e3: movabs $0x10ed91b60,%rax  ;   {metadata(method data for {method} {0x000000010eabed18} 'testFlags' '(II)Z' in 'java/lang/invoke/MemberName')}
  0x000000010f80a1ed: incl   0x128(%rax)
  0x000000010f80a1f3: mov    $0x1,%eax
  0x000000010f80a1f8: jmpq   0x000000010f80a202  ;*goto
                                                ; - java.lang.invoke.MemberName::testFlags@11 (line 334)
                                                ; - java.lang.invoke.MemberName::testAllFlags@3 (line 337)

  0x000000010f80a1fd: mov    $0x0,%eax          ;*ireturn
                                                ; - java.lang.invoke.MemberName::testFlags@15 (line 334)
                                                ; - java.lang.invoke.MemberName::testAllFlags@3 (line 337)

  0x000000010f80a202: and    $0x1,%eax
  0x000000010f80a205: and    $0x1,%eax
  0x000000010f80a208: add    $0x40,%rsp
  0x000000010f80a20c: pop    %rbp
  0x000000010f80a20d: test   %eax,-0x8d6f113(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f80a213: retq   
  0x000000010f80a214: mov    %rax,0x8(%rsp)
  0x000000010f80a219: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f80a221: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=294}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MemberName::testAllFlags@-1 (line 337)
                                                ;   {runtime_call}
  0x000000010f80a226: jmpq   0x000000010f80a15e
  0x000000010f80a22b: mov    %rax,0x8(%rsp)
  0x000000010f80a230: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f80a238: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=317}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MemberName::testFlags@-1 (line 334)
                                                ; - java.lang.invoke.MemberName::testAllFlags@3 (line 337)
                                                ;   {runtime_call}
  0x000000010f80a23d: jmpq   0x000000010f80a1a5
  0x000000010f80a242: nop
  0x000000010f80a243: nop
  0x000000010f80a244: mov    0x2a8(%r15),%rax
  0x000000010f80a24b: movabs $0x0,%r10
  0x000000010f80a255: mov    %r10,0x2a8(%r15)
  0x000000010f80a25c: movabs $0x0,%r10
  0x000000010f80a266: mov    %r10,0x2b0(%r15)
  0x000000010f80a26d: add    $0x40,%rsp
  0x000000010f80a271: pop    %rbp
  0x000000010f80a272: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f80a277: hlt    
  0x000000010f80a278: hlt    
  0x000000010f80a279: hlt    
  0x000000010f80a27a: hlt    
  0x000000010f80a27b: hlt    
  0x000000010f80a27c: hlt    
  0x000000010f80a27d: hlt    
  0x000000010f80a27e: hlt    
  0x000000010f80a27f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f80a280: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f80a285: mov    %rsp,-0x28(%rsp)
  0x000000010f80a28a: sub    $0x80,%rsp
  0x000000010f80a291: mov    %rax,0x78(%rsp)
  0x000000010f80a296: mov    %rcx,0x70(%rsp)
  0x000000010f80a29b: mov    %rdx,0x68(%rsp)
  0x000000010f80a2a0: mov    %rbx,0x60(%rsp)
  0x000000010f80a2a5: mov    %rbp,0x50(%rsp)
  0x000000010f80a2aa: mov    %rsi,0x48(%rsp)
  0x000000010f80a2af: mov    %rdi,0x40(%rsp)
  0x000000010f80a2b4: mov    %r8,0x38(%rsp)
  0x000000010f80a2b9: mov    %r9,0x30(%rsp)
  0x000000010f80a2be: mov    %r10,0x28(%rsp)
  0x000000010f80a2c3: mov    %r11,0x20(%rsp)
  0x000000010f80a2c8: mov    %r12,0x18(%rsp)
  0x000000010f80a2cd: mov    %r13,0x10(%rsp)
  0x000000010f80a2d2: mov    %r14,0x8(%rsp)
  0x000000010f80a2d7: mov    %r15,(%rsp)
  0x000000010f80a2db: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f80a2e5: movabs $0x10f80a285,%rsi  ;   {internal_word}
  0x000000010f80a2ef: mov    %rsp,%rdx
  0x000000010f80a2f2: and    $0xfffffffffffffff0,%rsp
  0x000000010f80a2f6: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f80a2fb: hlt    
[Deopt Handler Code]
  0x000000010f80a2fc: movabs $0x10f80a2fc,%r10  ;   {section_word}
  0x000000010f80a306: push   %r10
  0x000000010f80a308: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f80a30d: hlt    
  0x000000010f80a30e: hlt    
  0x000000010f80a30f: hlt    
Decoding compiled method 0x000000010f80a450:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010ed517e0} 'access$000' '(Ljava/lang/invoke/LambdaForm$Name;)S' in 'java/lang/invoke/LambdaForm$Name'
  # parm0:    rsi:rsi   = 'java/lang/invoke/LambdaForm$Name'
  #           [sp+0x40]  (sp of caller)
  0x000000010f80a5a0: mov    %eax,-0x14000(%rsp)
  0x000000010f80a5a7: push   %rbp
  0x000000010f80a5a8: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.lang.invoke.LambdaForm$Name::access$000@0 (line 1372)

  0x000000010f80a5ac: movswl 0xc(%rsi),%eax     ;*getfield index
                                                ; - java.lang.invoke.LambdaForm$Name::access$000@1 (line 1372)
                                                ; implicit exception: dispatches to 0x000000010f80a5c2
  0x000000010f80a5b0: shl    $0x10,%eax
  0x000000010f80a5b3: sar    $0x10,%eax
  0x000000010f80a5b6: add    $0x30,%rsp
  0x000000010f80a5ba: pop    %rbp
  0x000000010f80a5bb: test   %eax,-0x8d6f4c1(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f80a5c1: retq   
  0x000000010f80a5c2: callq  0x000000010f7cd0c0  ; OopMap{off=39}
                                                ;*getfield index
                                                ; - java.lang.invoke.LambdaForm$Name::access$000@1 (line 1372)
                                                ;   {runtime_call}
  0x000000010f80a5c7: nop
  0x000000010f80a5c8: nop
  0x000000010f80a5c9: mov    0x2a8(%r15),%rax
  0x000000010f80a5d0: movabs $0x0,%r10
  0x000000010f80a5da: mov    %r10,0x2a8(%r15)
  0x000000010f80a5e1: movabs $0x0,%r10
  0x000000010f80a5eb: mov    %r10,0x2b0(%r15)
  0x000000010f80a5f2: add    $0x30,%rsp
  0x000000010f80a5f6: pop    %rbp
  0x000000010f80a5f7: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f80a5fc: hlt    
  0x000000010f80a5fd: hlt    
  0x000000010f80a5fe: hlt    
  0x000000010f80a5ff: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f80a600: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f80a605: mov    %rsp,-0x28(%rsp)
  0x000000010f80a60a: sub    $0x80,%rsp
  0x000000010f80a611: mov    %rax,0x78(%rsp)
  0x000000010f80a616: mov    %rcx,0x70(%rsp)
  0x000000010f80a61b: mov    %rdx,0x68(%rsp)
  0x000000010f80a620: mov    %rbx,0x60(%rsp)
  0x000000010f80a625: mov    %rbp,0x50(%rsp)
  0x000000010f80a62a: mov    %rsi,0x48(%rsp)
  0x000000010f80a62f: mov    %rdi,0x40(%rsp)
  0x000000010f80a634: mov    %r8,0x38(%rsp)
  0x000000010f80a639: mov    %r9,0x30(%rsp)
  0x000000010f80a63e: mov    %r10,0x28(%rsp)
  0x000000010f80a643: mov    %r11,0x20(%rsp)
  0x000000010f80a648: mov    %r12,0x18(%rsp)
  0x000000010f80a64d: mov    %r13,0x10(%rsp)
  0x000000010f80a652: mov    %r14,0x8(%rsp)
  0x000000010f80a657: mov    %r15,(%rsp)
  0x000000010f80a65b: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f80a665: movabs $0x10f80a605,%rsi  ;   {internal_word}
  0x000000010f80a66f: mov    %rsp,%rdx
  0x000000010f80a672: and    $0xfffffffffffffff0,%rsp
  0x000000010f80a676: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f80a67b: hlt    
[Deopt Handler Code]
  0x000000010f80a67c: movabs $0x10f80a67c,%r10  ;   {section_word}
  0x000000010f80a686: push   %r10
  0x000000010f80a688: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f80a68d: hlt    
  0x000000010f80a68e: hlt    
  0x000000010f80a68f: hlt    
Decoding compiled method 0x000000010f80a750:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ed4dd70} 'basicTypeChar' '()C' in 'java/lang/invoke/LambdaForm$BasicType'
  #           [sp+0x40]  (sp of caller)
  0x000000010f80a8a0: mov    0x8(%rsi),%r10d
  0x000000010f80a8a4: shl    $0x3,%r10
  0x000000010f80a8a8: cmp    %rax,%r10
  0x000000010f80a8ab: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f80a8b1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f80a8bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f80a8c0: mov    %eax,-0x14000(%rsp)
  0x000000010f80a8c7: push   %rbp
  0x000000010f80a8c8: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.lang.invoke.LambdaForm$BasicType::basicTypeChar@0 (line 159)

  0x000000010f80a8cc: movzwl 0x14(%rsi),%eax    ;*getfield btChar
                                                ; - java.lang.invoke.LambdaForm$BasicType::basicTypeChar@1 (line 159)

  0x000000010f80a8d0: and    $0xffff,%eax
  0x000000010f80a8d6: add    $0x30,%rsp
  0x000000010f80a8da: pop    %rbp
  0x000000010f80a8db: test   %eax,-0x8d6f7e1(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f80a8e1: retq   
  0x000000010f80a8e2: nop
  0x000000010f80a8e3: nop
  0x000000010f80a8e4: mov    0x2a8(%r15),%rax
  0x000000010f80a8eb: movabs $0x0,%r10
  0x000000010f80a8f5: mov    %r10,0x2a8(%r15)
  0x000000010f80a8fc: movabs $0x0,%r10
  0x000000010f80a906: mov    %r10,0x2b0(%r15)
  0x000000010f80a90d: add    $0x30,%rsp
  0x000000010f80a911: pop    %rbp
  0x000000010f80a912: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f80a917: hlt    
  0x000000010f80a918: hlt    
  0x000000010f80a919: hlt    
  0x000000010f80a91a: hlt    
  0x000000010f80a91b: hlt    
  0x000000010f80a91c: hlt    
  0x000000010f80a91d: hlt    
  0x000000010f80a91e: hlt    
  0x000000010f80a91f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f80a920: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f80a925: mov    %rsp,-0x28(%rsp)
  0x000000010f80a92a: sub    $0x80,%rsp
  0x000000010f80a931: mov    %rax,0x78(%rsp)
  0x000000010f80a936: mov    %rcx,0x70(%rsp)
  0x000000010f80a93b: mov    %rdx,0x68(%rsp)
  0x000000010f80a940: mov    %rbx,0x60(%rsp)
  0x000000010f80a945: mov    %rbp,0x50(%rsp)
  0x000000010f80a94a: mov    %rsi,0x48(%rsp)
  0x000000010f80a94f: mov    %rdi,0x40(%rsp)
  0x000000010f80a954: mov    %r8,0x38(%rsp)
  0x000000010f80a959: mov    %r9,0x30(%rsp)
  0x000000010f80a95e: mov    %r10,0x28(%rsp)
  0x000000010f80a963: mov    %r11,0x20(%rsp)
  0x000000010f80a968: mov    %r12,0x18(%rsp)
  0x000000010f80a96d: mov    %r13,0x10(%rsp)
  0x000000010f80a972: mov    %r14,0x8(%rsp)
  0x000000010f80a977: mov    %r15,(%rsp)
  0x000000010f80a97b: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f80a985: movabs $0x10f80a925,%rsi  ;   {internal_word}
  0x000000010f80a98f: mov    %rsp,%rdx
  0x000000010f80a992: and    $0xfffffffffffffff0,%rsp
  0x000000010f80a996: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f80a99b: hlt    
[Deopt Handler Code]
  0x000000010f80a99c: movabs $0x10f80a99c,%r10  ;   {section_word}
  0x000000010f80a9a6: push   %r10
  0x000000010f80a9a8: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f80a9ad: hlt    
  0x000000010f80a9ae: hlt    
  0x000000010f80a9af: hlt    
Decoding compiled method 0x000000010f80aa50:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010ed4e840} 'access$100' '(Ljava/lang/invoke/LambdaForm$BasicType;)Ljava/lang/Class;' in 'java/lang/invoke/LambdaForm$BasicType'
  # parm0:    rsi:rsi   = 'java/lang/invoke/LambdaForm$BasicType'
  #           [sp+0x40]  (sp of caller)
  0x000000010f80aba0: mov    %eax,-0x14000(%rsp)
  0x000000010f80aba7: push   %rbp
  0x000000010f80aba8: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.lang.invoke.LambdaForm$BasicType::access$100@0 (line 134)

  0x000000010f80abac: mov    0x18(%rsi),%eax    ; implicit exception: dispatches to 0x000000010f80abbf
  0x000000010f80abaf: shl    $0x3,%rax          ;*getfield btClass
                                                ; - java.lang.invoke.LambdaForm$BasicType::access$100@1 (line 134)

  0x000000010f80abb3: add    $0x30,%rsp
  0x000000010f80abb7: pop    %rbp
  0x000000010f80abb8: test   %eax,-0x8d6fabe(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f80abbe: retq   
  0x000000010f80abbf: callq  0x000000010f7cd0c0  ; OopMap{off=36}
                                                ;*getfield btClass
                                                ; - java.lang.invoke.LambdaForm$BasicType::access$100@1 (line 134)
                                                ;   {runtime_call}
  0x000000010f80abc4: nop
  0x000000010f80abc5: nop
  0x000000010f80abc6: mov    0x2a8(%r15),%rax
  0x000000010f80abcd: movabs $0x0,%r10
  0x000000010f80abd7: mov    %r10,0x2a8(%r15)
  0x000000010f80abde: movabs $0x0,%r10
  0x000000010f80abe8: mov    %r10,0x2b0(%r15)
  0x000000010f80abef: add    $0x30,%rsp
  0x000000010f80abf3: pop    %rbp
  0x000000010f80abf4: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f80abf9: hlt    
  0x000000010f80abfa: hlt    
  0x000000010f80abfb: hlt    
  0x000000010f80abfc: hlt    
  0x000000010f80abfd: hlt    
  0x000000010f80abfe: hlt    
  0x000000010f80abff: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f80ac00: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f80ac05: mov    %rsp,-0x28(%rsp)
  0x000000010f80ac0a: sub    $0x80,%rsp
  0x000000010f80ac11: mov    %rax,0x78(%rsp)
  0x000000010f80ac16: mov    %rcx,0x70(%rsp)
  0x000000010f80ac1b: mov    %rdx,0x68(%rsp)
  0x000000010f80ac20: mov    %rbx,0x60(%rsp)
  0x000000010f80ac25: mov    %rbp,0x50(%rsp)
  0x000000010f80ac2a: mov    %rsi,0x48(%rsp)
  0x000000010f80ac2f: mov    %rdi,0x40(%rsp)
  0x000000010f80ac34: mov    %r8,0x38(%rsp)
  0x000000010f80ac39: mov    %r9,0x30(%rsp)
  0x000000010f80ac3e: mov    %r10,0x28(%rsp)
  0x000000010f80ac43: mov    %r11,0x20(%rsp)
  0x000000010f80ac48: mov    %r12,0x18(%rsp)
  0x000000010f80ac4d: mov    %r13,0x10(%rsp)
  0x000000010f80ac52: mov    %r14,0x8(%rsp)
  0x000000010f80ac57: mov    %r15,(%rsp)
  0x000000010f80ac5b: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f80ac65: movabs $0x10f80ac05,%rsi  ;   {internal_word}
  0x000000010f80ac6f: mov    %rsp,%rdx
  0x000000010f80ac72: and    $0xfffffffffffffff0,%rsp
  0x000000010f80ac76: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f80ac7b: hlt    
[Deopt Handler Code]
  0x000000010f80ac7c: movabs $0x10f80ac7c,%r10  ;   {section_word}
  0x000000010f80ac86: push   %r10
  0x000000010f80ac88: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f80ac8d: hlt    
  0x000000010f80ac8e: hlt    
  0x000000010f80ac8f: hlt    
Decoding compiled method 0x000000010f80ad50:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ed50570} 'type' '()Ljava/lang/invoke/LambdaForm$BasicType;' in 'java/lang/invoke/LambdaForm$Name'
  #           [sp+0x40]  (sp of caller)
  0x000000010f80aea0: mov    0x8(%rsi),%r10d
  0x000000010f80aea4: shl    $0x3,%r10
  0x000000010f80aea8: cmp    %rax,%r10
  0x000000010f80aeab: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f80aeb1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f80aebc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f80aec0: mov    %eax,-0x14000(%rsp)
  0x000000010f80aec7: push   %rbp
  0x000000010f80aec8: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.lang.invoke.LambdaForm$Name::type@0 (line 1419)

  0x000000010f80aecc: mov    0x10(%rsi),%eax
  0x000000010f80aecf: shl    $0x3,%rax          ;*getfield type
                                                ; - java.lang.invoke.LambdaForm$Name::type@1 (line 1419)

  0x000000010f80aed3: add    $0x30,%rsp
  0x000000010f80aed7: pop    %rbp
  0x000000010f80aed8: test   %eax,-0x8d6fdde(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f80aede: retq   
  0x000000010f80aedf: nop
  0x000000010f80aee0: nop
  0x000000010f80aee1: mov    0x2a8(%r15),%rax
  0x000000010f80aee8: movabs $0x0,%r10
  0x000000010f80aef2: mov    %r10,0x2a8(%r15)
  0x000000010f80aef9: movabs $0x0,%r10
  0x000000010f80af03: mov    %r10,0x2b0(%r15)
  0x000000010f80af0a: add    $0x30,%rsp
  0x000000010f80af0e: pop    %rbp
  0x000000010f80af0f: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f80af14: hlt    
  0x000000010f80af15: hlt    
  0x000000010f80af16: hlt    
  0x000000010f80af17: hlt    
  0x000000010f80af18: hlt    
  0x000000010f80af19: hlt    
  0x000000010f80af1a: hlt    
  0x000000010f80af1b: hlt    
  0x000000010f80af1c: hlt    
  0x000000010f80af1d: hlt    
  0x000000010f80af1e: hlt    
  0x000000010f80af1f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f80af20: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f80af25: mov    %rsp,-0x28(%rsp)
  0x000000010f80af2a: sub    $0x80,%rsp
  0x000000010f80af31: mov    %rax,0x78(%rsp)
  0x000000010f80af36: mov    %rcx,0x70(%rsp)
  0x000000010f80af3b: mov    %rdx,0x68(%rsp)
  0x000000010f80af40: mov    %rbx,0x60(%rsp)
  0x000000010f80af45: mov    %rbp,0x50(%rsp)
  0x000000010f80af4a: mov    %rsi,0x48(%rsp)
  0x000000010f80af4f: mov    %rdi,0x40(%rsp)
  0x000000010f80af54: mov    %r8,0x38(%rsp)
  0x000000010f80af59: mov    %r9,0x30(%rsp)
  0x000000010f80af5e: mov    %r10,0x28(%rsp)
  0x000000010f80af63: mov    %r11,0x20(%rsp)
  0x000000010f80af68: mov    %r12,0x18(%rsp)
  0x000000010f80af6d: mov    %r13,0x10(%rsp)
  0x000000010f80af72: mov    %r14,0x8(%rsp)
  0x000000010f80af77: mov    %r15,(%rsp)
  0x000000010f80af7b: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f80af85: movabs $0x10f80af25,%rsi  ;   {internal_word}
  0x000000010f80af8f: mov    %rsp,%rdx
  0x000000010f80af92: and    $0xfffffffffffffff0,%rsp
  0x000000010f80af96: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f80af9b: hlt    
[Deopt Handler Code]
  0x000000010f80af9c: movabs $0x10f80af9c,%r10  ;   {section_word}
  0x000000010f80afa6: push   %r10
  0x000000010f80afa8: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f80afad: hlt    
  0x000000010f80afae: hlt    
  0x000000010f80afaf: hlt    
Decoding compiled method 0x000000010f80b050:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ea8de50} '<init>' '(Ljava/lang/Object;)V' in 'java/lang/ref/WeakReference'
  # this:     rsi:rsi   = 'java/lang/ref/WeakReference'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  #           [sp+0x70]  (sp of caller)
  0x000000010f80b1c0: mov    0x8(%rsi),%r10d
  0x000000010f80b1c4: shl    $0x3,%r10
  0x000000010f80b1c8: cmp    %rax,%r10
  0x000000010f80b1cb: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f80b1d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f80b1dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f80b1e0: mov    %eax,-0x14000(%rsp)
  0x000000010f80b1e7: push   %rbp
  0x000000010f80b1e8: sub    $0x60,%rsp
  0x000000010f80b1ec: movabs $0x10eda34f8,%rdi  ;   {metadata(method data for {method} {0x000000010ea8de50} '<init>' '(Ljava/lang/Object;)V' in 'java/lang/ref/WeakReference')}
  0x000000010f80b1f6: mov    0xdc(%rdi),%ebx
  0x000000010f80b1fc: add    $0x8,%ebx
  0x000000010f80b1ff: mov    %ebx,0xdc(%rdi)
  0x000000010f80b205: movabs $0x10ea8de50,%rdi  ;   {metadata({method} {0x000000010ea8de50} '<init>' '(Ljava/lang/Object;)V' in 'java/lang/ref/WeakReference')}
  0x000000010f80b20f: and    $0x1ff8,%ebx
  0x000000010f80b215: cmp    $0x0,%ebx
  0x000000010f80b218: je     0x000000010f80b372  ;*aload_0
                                                ; - java.lang.ref.WeakReference::<init>@0 (line 57)

  0x000000010f80b21e: mov    %rsi,%rdi
  0x000000010f80b221: movabs $0x10eda34f8,%rbx  ;   {metadata(method data for {method} {0x000000010ea8de50} '<init>' '(Ljava/lang/Object;)V' in 'java/lang/ref/WeakReference')}
  0x000000010f80b22b: addq   $0x1,0x108(%rbx)
  0x000000010f80b233: movabs $0x10eda3630,%rdi  ;   {metadata(method data for {method} {0x000000010ea8d6f0} '<init>' '(Ljava/lang/Object;)V' in 'java/lang/ref/Reference')}
  0x000000010f80b23d: mov    0xdc(%rdi),%ebx
  0x000000010f80b243: add    $0x8,%ebx
  0x000000010f80b246: mov    %ebx,0xdc(%rdi)
  0x000000010f80b24c: movabs $0x10ea8d6f0,%rdi  ;   {metadata({method} {0x000000010ea8d6f0} '<init>' '(Ljava/lang/Object;)V' in 'java/lang/ref/Reference')}
  0x000000010f80b256: and    $0x7ffff8,%ebx
  0x000000010f80b25c: cmp    $0x0,%ebx
  0x000000010f80b25f: je     0x000000010f80b389
  0x000000010f80b265: mov    %rsi,%rdi
  0x000000010f80b268: movabs $0x10eda3630,%rbx  ;   {metadata(method data for {method} {0x000000010ea8d6f0} '<init>' '(Ljava/lang/Object;)V' in 'java/lang/ref/Reference')}
  0x000000010f80b272: addq   $0x1,0x108(%rbx)
  0x000000010f80b27a: movabs $0x10ec8c800,%rdi  ;   {metadata(method data for {method} {0x000000010ea8d7a0} '<init>' '(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V' in 'java/lang/ref/Reference')}
  0x000000010f80b284: mov    0xdc(%rdi),%ebx
  0x000000010f80b28a: add    $0x8,%ebx
  0x000000010f80b28d: mov    %ebx,0xdc(%rdi)
  0x000000010f80b293: movabs $0x10ea8d7a0,%rdi  ;   {metadata({method} {0x000000010ea8d7a0} '<init>' '(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V' in 'java/lang/ref/Reference')}
  0x000000010f80b29d: and    $0x7ffff8,%ebx
  0x000000010f80b2a3: cmp    $0x0,%ebx
  0x000000010f80b2a6: je     0x000000010f80b3a0
  0x000000010f80b2ac: mov    %rsi,%rdi
  0x000000010f80b2af: movabs $0x10ec8c800,%rbx  ;   {metadata(method data for {method} {0x000000010ea8d7a0} '<init>' '(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V' in 'java/lang/ref/Reference')}
  0x000000010f80b2b9: addq   $0x1,0x108(%rbx)
  0x000000010f80b2c1: movabs $0x10ebdca10,%rdi  ;   {metadata(method data for {method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f80b2cb: mov    0xdc(%rdi),%ebx
  0x000000010f80b2d1: add    $0x8,%ebx
  0x000000010f80b2d4: mov    %ebx,0xdc(%rdi)
  0x000000010f80b2da: movabs $0x10ea65480,%rdi  ;   {metadata({method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f80b2e4: and    $0x7ffff8,%ebx
  0x000000010f80b2ea: cmp    $0x0,%ebx
  0x000000010f80b2ed: je     0x000000010f80b3b7
  0x000000010f80b2f3: mov    %rdx,%r10
  0x000000010f80b2f6: shr    $0x3,%r10
  0x000000010f80b2fa: mov    %r10d,0xc(%rsi)
  0x000000010f80b2fe: mov    %rsi,%rdi
  0x000000010f80b301: shr    $0x9,%rdi
  0x000000010f80b305: movabs $0x1065b9000,%rbx
  0x000000010f80b30f: movb   $0x0,(%rdi,%rbx,1)  ;*putfield referent
                                                ; - java.lang.ref.Reference::<init>@6 (line 307)
                                                ; - java.lang.ref.Reference::<init>@3 (line 303)
                                                ; - java.lang.ref.WeakReference::<init>@2 (line 57)

  0x000000010f80b313: movabs $0x10ec8c800,%rdi  ;   {metadata(method data for {method} {0x000000010ea8d7a0} '<init>' '(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V' in 'java/lang/ref/Reference')}
  0x000000010f80b31d: incl   0x128(%rdi)        ;*ifnonnull
                                                ; - java.lang.ref.Reference::<init>@11 (line 308)
                                                ; - java.lang.ref.Reference::<init>@3 (line 303)
                                                ; - java.lang.ref.WeakReference::<init>@2 (line 57)

  0x000000010f80b323: movabs $0x795581b90,%rdi  ;   {oop(a 'java/lang/Class' = 'java/lang/ref/ReferenceQueue')}
  0x000000010f80b32d: mov    0x68(%rdi),%edi
  0x000000010f80b330: shl    $0x3,%rdi          ;*getstatic NULL
                                                ; - java.lang.ref.Reference::<init>@14 (line 308)
                                                ; - java.lang.ref.Reference::<init>@3 (line 303)
                                                ; - java.lang.ref.WeakReference::<init>@2 (line 57)

  0x000000010f80b334: movabs $0x10ec8c800,%rbx  ;   {metadata(method data for {method} {0x000000010ea8d7a0} '<init>' '(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V' in 'java/lang/ref/Reference')}
  0x000000010f80b33e: incl   0x138(%rbx)
  0x000000010f80b344: mov    %rdi,%r10
  0x000000010f80b347: shr    $0x3,%r10
  0x000000010f80b34b: mov    %r10d,0x10(%rsi)
  0x000000010f80b34f: shr    $0x9,%rsi
  0x000000010f80b353: movabs $0x1065b9000,%rdi
  0x000000010f80b35d: movb   $0x0,(%rsi,%rdi,1)
  0x000000010f80b361: lock addl $0x0,(%rsp)     ;*putfield queue
                                                ; - java.lang.ref.Reference::<init>@21 (line 308)
                                                ; - java.lang.ref.Reference::<init>@3 (line 303)
                                                ; - java.lang.ref.WeakReference::<init>@2 (line 57)

  0x000000010f80b366: add    $0x60,%rsp
  0x000000010f80b36a: pop    %rbp
  0x000000010f80b36b: test   %eax,-0x8d70271(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f80b371: retq   
  0x000000010f80b372: mov    %rdi,0x8(%rsp)
  0x000000010f80b377: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f80b37f: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop rdx=Oop off=452}
                                                ;*synchronization entry
                                                ; - java.lang.ref.WeakReference::<init>@-1 (line 57)
                                                ;   {runtime_call}
  0x000000010f80b384: jmpq   0x000000010f80b21e
  0x000000010f80b389: mov    %rdi,0x8(%rsp)
  0x000000010f80b38e: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f80b396: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop rdx=Oop off=475}
                                                ;*synchronization entry
                                                ; - java.lang.ref.Reference::<init>@-1 (line 303)
                                                ; - java.lang.ref.WeakReference::<init>@2 (line 57)
                                                ;   {runtime_call}
  0x000000010f80b39b: jmpq   0x000000010f80b265
  0x000000010f80b3a0: mov    %rdi,0x8(%rsp)
  0x000000010f80b3a5: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f80b3ad: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop rdx=Oop off=498}
                                                ;*synchronization entry
                                                ; - java.lang.ref.Reference::<init>@-1 (line 306)
                                                ; - java.lang.ref.Reference::<init>@3 (line 303)
                                                ; - java.lang.ref.WeakReference::<init>@2 (line 57)
                                                ;   {runtime_call}
  0x000000010f80b3b2: jmpq   0x000000010f80b2ac
  0x000000010f80b3b7: mov    %rdi,0x8(%rsp)
  0x000000010f80b3bc: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f80b3c4: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop rdx=Oop off=521}
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 37)
                                                ; - java.lang.ref.Reference::<init>@1 (line 306)
                                                ; - java.lang.ref.Reference::<init>@3 (line 303)
                                                ; - java.lang.ref.WeakReference::<init>@2 (line 57)
                                                ;   {runtime_call}
  0x000000010f80b3c9: jmpq   0x000000010f80b2f3
  0x000000010f80b3ce: nop
  0x000000010f80b3cf: nop
  0x000000010f80b3d0: mov    0x2a8(%r15),%rax
  0x000000010f80b3d7: movabs $0x0,%r10
  0x000000010f80b3e1: mov    %r10,0x2a8(%r15)
  0x000000010f80b3e8: movabs $0x0,%r10
  0x000000010f80b3f2: mov    %r10,0x2b0(%r15)
  0x000000010f80b3f9: add    $0x60,%rsp
  0x000000010f80b3fd: pop    %rbp
  0x000000010f80b3fe: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f80b403: hlt    
  0x000000010f80b404: hlt    
  0x000000010f80b405: hlt    
  0x000000010f80b406: hlt    
  0x000000010f80b407: hlt    
  0x000000010f80b408: hlt    
  0x000000010f80b409: hlt    
  0x000000010f80b40a: hlt    
  0x000000010f80b40b: hlt    
  0x000000010f80b40c: hlt    
  0x000000010f80b40d: hlt    
  0x000000010f80b40e: hlt    
  0x000000010f80b40f: hlt    
  0x000000010f80b410: hlt    
  0x000000010f80b411: hlt    
  0x000000010f80b412: hlt    
  0x000000010f80b413: hlt    
  0x000000010f80b414: hlt    
  0x000000010f80b415: hlt    
  0x000000010f80b416: hlt    
  0x000000010f80b417: hlt    
  0x000000010f80b418: hlt    
  0x000000010f80b419: hlt    
  0x000000010f80b41a: hlt    
  0x000000010f80b41b: hlt    
  0x000000010f80b41c: hlt    
  0x000000010f80b41d: hlt    
  0x000000010f80b41e: hlt    
  0x000000010f80b41f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f80b420: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f80b425: mov    %rsp,-0x28(%rsp)
  0x000000010f80b42a: sub    $0x80,%rsp
  0x000000010f80b431: mov    %rax,0x78(%rsp)
  0x000000010f80b436: mov    %rcx,0x70(%rsp)
  0x000000010f80b43b: mov    %rdx,0x68(%rsp)
  0x000000010f80b440: mov    %rbx,0x60(%rsp)
  0x000000010f80b445: mov    %rbp,0x50(%rsp)
  0x000000010f80b44a: mov    %rsi,0x48(%rsp)
  0x000000010f80b44f: mov    %rdi,0x40(%rsp)
  0x000000010f80b454: mov    %r8,0x38(%rsp)
  0x000000010f80b459: mov    %r9,0x30(%rsp)
  0x000000010f80b45e: mov    %r10,0x28(%rsp)
  0x000000010f80b463: mov    %r11,0x20(%rsp)
  0x000000010f80b468: mov    %r12,0x18(%rsp)
  0x000000010f80b46d: mov    %r13,0x10(%rsp)
  0x000000010f80b472: mov    %r14,0x8(%rsp)
  0x000000010f80b477: mov    %r15,(%rsp)
  0x000000010f80b47b: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f80b485: movabs $0x10f80b425,%rsi  ;   {internal_word}
  0x000000010f80b48f: mov    %rsp,%rdx
  0x000000010f80b492: and    $0xfffffffffffffff0,%rsp
  0x000000010f80b496: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f80b49b: hlt    
[Deopt Handler Code]
  0x000000010f80b49c: movabs $0x10f80b49c,%r10  ;   {section_word}
  0x000000010f80b4a6: push   %r10
  0x000000010f80b4a8: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f80b4ad: hlt    
  0x000000010f80b4ae: hlt    
  0x000000010f80b4af: hlt    
Decoding compiled method 0x000000010f80b610:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ed3d960} 'basicTypeChar' '()C' in 'sun/invoke/util/Wrapper'
  #           [sp+0x40]  (sp of caller)
  0x000000010f80b760: mov    0x8(%rsi),%r10d
  0x000000010f80b764: shl    $0x3,%r10
  0x000000010f80b768: cmp    %rax,%r10
  0x000000010f80b76b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f80b771: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f80b77c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f80b780: mov    %eax,-0x14000(%rsp)
  0x000000010f80b787: push   %rbp
  0x000000010f80b788: sub    $0x30,%rsp         ;*aload_0
                                                ; - sun.invoke.util.Wrapper::basicTypeChar@0 (line 411)

  0x000000010f80b78c: movzwl 0x18(%rsi),%eax    ;*getfield basicTypeChar
                                                ; - sun.invoke.util.Wrapper::basicTypeChar@1 (line 411)

  0x000000010f80b790: and    $0xffff,%eax
  0x000000010f80b796: add    $0x30,%rsp
  0x000000010f80b79a: pop    %rbp
  0x000000010f80b79b: test   %eax,-0x8d706a1(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f80b7a1: retq   
  0x000000010f80b7a2: nop
  0x000000010f80b7a3: nop
  0x000000010f80b7a4: mov    0x2a8(%r15),%rax
  0x000000010f80b7ab: movabs $0x0,%r10
  0x000000010f80b7b5: mov    %r10,0x2a8(%r15)
  0x000000010f80b7bc: movabs $0x0,%r10
  0x000000010f80b7c6: mov    %r10,0x2b0(%r15)
  0x000000010f80b7cd: add    $0x30,%rsp
  0x000000010f80b7d1: pop    %rbp
  0x000000010f80b7d2: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f80b7d7: hlt    
  0x000000010f80b7d8: hlt    
  0x000000010f80b7d9: hlt    
  0x000000010f80b7da: hlt    
  0x000000010f80b7db: hlt    
  0x000000010f80b7dc: hlt    
  0x000000010f80b7dd: hlt    
  0x000000010f80b7de: hlt    
  0x000000010f80b7df: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f80b7e0: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f80b7e5: mov    %rsp,-0x28(%rsp)
  0x000000010f80b7ea: sub    $0x80,%rsp
  0x000000010f80b7f1: mov    %rax,0x78(%rsp)
  0x000000010f80b7f6: mov    %rcx,0x70(%rsp)
  0x000000010f80b7fb: mov    %rdx,0x68(%rsp)
  0x000000010f80b800: mov    %rbx,0x60(%rsp)
  0x000000010f80b805: mov    %rbp,0x50(%rsp)
  0x000000010f80b80a: mov    %rsi,0x48(%rsp)
  0x000000010f80b80f: mov    %rdi,0x40(%rsp)
  0x000000010f80b814: mov    %r8,0x38(%rsp)
  0x000000010f80b819: mov    %r9,0x30(%rsp)
  0x000000010f80b81e: mov    %r10,0x28(%rsp)
  0x000000010f80b823: mov    %r11,0x20(%rsp)
  0x000000010f80b828: mov    %r12,0x18(%rsp)
  0x000000010f80b82d: mov    %r13,0x10(%rsp)
  0x000000010f80b832: mov    %r14,0x8(%rsp)
  0x000000010f80b837: mov    %r15,(%rsp)
  0x000000010f80b83b: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f80b845: movabs $0x10f80b7e5,%rsi  ;   {internal_word}
  0x000000010f80b84f: mov    %rsp,%rdx
  0x000000010f80b852: and    $0xfffffffffffffff0,%rsp
  0x000000010f80b856: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f80b85b: hlt    
[Deopt Handler Code]
  0x000000010f80b85c: movabs $0x10f80b85c,%r10  ;   {section_word}
  0x000000010f80b866: push   %r10
  0x000000010f80b868: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f80b86d: hlt    
  0x000000010f80b86e: hlt    
  0x000000010f80b86f: hlt    
Decoding compiled method 0x000000010f80b910:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000010eda3490} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rsi:rsi   = 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    rcx:rcx   = 'java/lang/Object'
  # parm2:    r8:r8     = 'java/lang/Object'
  # parm3:    r9:r9     = 'java/lang/Object'
  # parm4:    rdi:rdi   = 'java/lang/Object'
  #           [sp+0x0]  (sp of caller)
  0x000000010f80ba40: mov    0x14(%rsi),%ebx
  0x000000010f80ba43: shl    $0x3,%rbx
  0x000000010f80ba47: mov    0x28(%rbx),%ebx
  0x000000010f80ba4a: shl    $0x3,%rbx
  0x000000010f80ba4e: mov    0x18(%rbx),%rbx
  0x000000010f80ba52: test   %rbx,%rbx
  0x000000010f80ba55: je     0x000000010f80ba5e
  0x000000010f80ba5b: jmpq   *0x40(%rbx)
  0x000000010f80ba5e: jmpq   0x000000010f6d61a0  ;   {runtime_call}
  0x000000010f80ba63: hlt    
  0x000000010f80ba64: hlt    
  0x000000010f80ba65: hlt    
  0x000000010f80ba66: hlt    
  0x000000010f80ba67: hlt    
Decoding compiled method 0x000000010f80ba90:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000010eda3818} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8:r8     = 'java/lang/Object'
  # parm4:    r9:r9     = 'java/lang/Object'
  # parm5:    rdi:rdi   = 'java/lang/Object'
  # parm6:    [sp+0x0]   = 'java/lang/invoke/MemberName'  (sp of caller)
  0x000000010f80bbc0: mov    0x8(%rsp),%rbx
  0x000000010f80bbc5: cmp    (%rsi),%rax
  0x000000010f80bbc8: mov    0x18(%rbx),%rbx
  0x000000010f80bbcc: test   %rbx,%rbx
  0x000000010f80bbcf: je     0x000000010f80bbd8
  0x000000010f80bbd5: jmpq   *0x40(%rbx)
  0x000000010f80bbd8: jmpq   0x000000010f6d61a0  ;   {runtime_call}
  0x000000010f80bbdd: hlt    
  0x000000010f80bbde: hlt    
  0x000000010f80bbdf: hlt    
Decoding compiled method 0x000000010f80bc10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ed4de08} 'basicTypeClass' '()Ljava/lang/Class;' in 'java/lang/invoke/LambdaForm$BasicType'
  #           [sp+0x40]  (sp of caller)
  0x000000010f80bd60: mov    0x8(%rsi),%r10d
  0x000000010f80bd64: shl    $0x3,%r10
  0x000000010f80bd68: cmp    %rax,%r10
  0x000000010f80bd6b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f80bd71: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f80bd7c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f80bd80: mov    %eax,-0x14000(%rsp)
  0x000000010f80bd87: push   %rbp
  0x000000010f80bd88: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.lang.invoke.LambdaForm$BasicType::basicTypeClass@0 (line 162)

  0x000000010f80bd8c: mov    0x18(%rsi),%eax
  0x000000010f80bd8f: shl    $0x3,%rax          ;*getfield btClass
                                                ; - java.lang.invoke.LambdaForm$BasicType::basicTypeClass@1 (line 162)

  0x000000010f80bd93: add    $0x30,%rsp
  0x000000010f80bd97: pop    %rbp
  0x000000010f80bd98: test   %eax,-0x8d70c9e(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f80bd9e: retq   
  0x000000010f80bd9f: nop
  0x000000010f80bda0: nop
  0x000000010f80bda1: mov    0x2a8(%r15),%rax
  0x000000010f80bda8: movabs $0x0,%r10
  0x000000010f80bdb2: mov    %r10,0x2a8(%r15)
  0x000000010f80bdb9: movabs $0x0,%r10
  0x000000010f80bdc3: mov    %r10,0x2b0(%r15)
  0x000000010f80bdca: add    $0x30,%rsp
  0x000000010f80bdce: pop    %rbp
  0x000000010f80bdcf: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f80bdd4: hlt    
  0x000000010f80bdd5: hlt    
  0x000000010f80bdd6: hlt    
  0x000000010f80bdd7: hlt    
  0x000000010f80bdd8: hlt    
  0x000000010f80bdd9: hlt    
  0x000000010f80bdda: hlt    
  0x000000010f80bddb: hlt    
  0x000000010f80bddc: hlt    
  0x000000010f80bddd: hlt    
  0x000000010f80bdde: hlt    
  0x000000010f80bddf: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f80bde0: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f80bde5: mov    %rsp,-0x28(%rsp)
  0x000000010f80bdea: sub    $0x80,%rsp
  0x000000010f80bdf1: mov    %rax,0x78(%rsp)
  0x000000010f80bdf6: mov    %rcx,0x70(%rsp)
  0x000000010f80bdfb: mov    %rdx,0x68(%rsp)
  0x000000010f80be00: mov    %rbx,0x60(%rsp)
  0x000000010f80be05: mov    %rbp,0x50(%rsp)
  0x000000010f80be0a: mov    %rsi,0x48(%rsp)
  0x000000010f80be0f: mov    %rdi,0x40(%rsp)
  0x000000010f80be14: mov    %r8,0x38(%rsp)
  0x000000010f80be19: mov    %r9,0x30(%rsp)
  0x000000010f80be1e: mov    %r10,0x28(%rsp)
  0x000000010f80be23: mov    %r11,0x20(%rsp)
  0x000000010f80be28: mov    %r12,0x18(%rsp)
  0x000000010f80be2d: mov    %r13,0x10(%rsp)
  0x000000010f80be32: mov    %r14,0x8(%rsp)
  0x000000010f80be37: mov    %r15,(%rsp)
  0x000000010f80be3b: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f80be45: movabs $0x10f80bde5,%rsi  ;   {internal_word}
  0x000000010f80be4f: mov    %rsp,%rdx
  0x000000010f80be52: and    $0xfffffffffffffff0,%rsp
  0x000000010f80be56: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f80be5b: hlt    
[Deopt Handler Code]
  0x000000010f80be5c: movabs $0x10f80be5c,%r10  ;   {section_word}
  0x000000010f80be66: push   %r10
  0x000000010f80be68: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f80be6d: hlt    
  0x000000010f80be6e: hlt    
  0x000000010f80be6f: hlt    
Decoding compiled method 0x000000010f80bf10:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010eb75990} 'isStatic' '(I)Z' in 'java/lang/reflect/Modifier'
  # parm0:    rsi       = int
  #           [sp+0x40]  (sp of caller)
  0x000000010f80c080: mov    %eax,-0x14000(%rsp)
  0x000000010f80c087: push   %rbp
  0x000000010f80c088: sub    $0x30,%rsp
  0x000000010f80c08c: movabs $0x10eda3880,%rax  ;   {metadata(method data for {method} {0x000000010eb75990} 'isStatic' '(I)Z' in 'java/lang/reflect/Modifier')}
  0x000000010f80c096: mov    0xdc(%rax),%edi
  0x000000010f80c09c: add    $0x8,%edi
  0x000000010f80c09f: mov    %edi,0xdc(%rax)
  0x000000010f80c0a5: movabs $0x10eb75990,%rax  ;   {metadata({method} {0x000000010eb75990} 'isStatic' '(I)Z' in 'java/lang/reflect/Modifier')}
  0x000000010f80c0af: and    $0x1ff8,%edi
  0x000000010f80c0b5: cmp    $0x0,%edi
  0x000000010f80c0b8: je     0x000000010f80c128  ;*iload_0
                                                ; - java.lang.reflect.Modifier::isStatic@0 (line 104)

  0x000000010f80c0be: and    $0x8,%esi
  0x000000010f80c0c1: cmp    $0x0,%esi
  0x000000010f80c0c4: movabs $0x10eda3880,%rax  ;   {metadata(method data for {method} {0x000000010eb75990} 'isStatic' '(I)Z' in 'java/lang/reflect/Modifier')}
  0x000000010f80c0ce: movabs $0x108,%rsi
  0x000000010f80c0d8: je     0x000000010f80c0e8
  0x000000010f80c0de: movabs $0x118,%rsi
  0x000000010f80c0e8: mov    (%rax,%rsi,1),%rdi
  0x000000010f80c0ec: lea    0x1(%rdi),%rdi
  0x000000010f80c0f0: mov    %rdi,(%rax,%rsi,1)
  0x000000010f80c0f4: je     0x000000010f80c114  ;*ifeq
                                                ; - java.lang.reflect.Modifier::isStatic@4 (line 104)

  0x000000010f80c0fa: movabs $0x10eda3880,%rax  ;   {metadata(method data for {method} {0x000000010eb75990} 'isStatic' '(I)Z' in 'java/lang/reflect/Modifier')}
  0x000000010f80c104: incl   0x128(%rax)
  0x000000010f80c10a: mov    $0x1,%eax
  0x000000010f80c10f: jmpq   0x000000010f80c119  ;*goto
                                                ; - java.lang.reflect.Modifier::isStatic@8 (line 104)

  0x000000010f80c114: mov    $0x0,%eax          ;*ireturn
                                                ; - java.lang.reflect.Modifier::isStatic@12 (line 104)

  0x000000010f80c119: and    $0x1,%eax
  0x000000010f80c11c: add    $0x30,%rsp
  0x000000010f80c120: pop    %rbp
  0x000000010f80c121: test   %eax,-0x8d71027(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f80c127: retq   
  0x000000010f80c128: mov    %rax,0x8(%rsp)
  0x000000010f80c12d: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f80c135: callq  0x000000010f7d1a20  ; OopMap{off=186}
                                                ;*synchronization entry
                                                ; - java.lang.reflect.Modifier::isStatic@-1 (line 104)
                                                ;   {runtime_call}
  0x000000010f80c13a: jmp    0x000000010f80c0be
  0x000000010f80c13c: nop
  0x000000010f80c13d: nop
  0x000000010f80c13e: mov    0x2a8(%r15),%rax
  0x000000010f80c145: movabs $0x0,%r10
  0x000000010f80c14f: mov    %r10,0x2a8(%r15)
  0x000000010f80c156: movabs $0x0,%r10
  0x000000010f80c160: mov    %r10,0x2b0(%r15)
  0x000000010f80c167: add    $0x30,%rsp
  0x000000010f80c16b: pop    %rbp
  0x000000010f80c16c: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f80c171: hlt    
  0x000000010f80c172: hlt    
  0x000000010f80c173: hlt    
  0x000000010f80c174: hlt    
  0x000000010f80c175: hlt    
  0x000000010f80c176: hlt    
  0x000000010f80c177: hlt    
  0x000000010f80c178: hlt    
  0x000000010f80c179: hlt    
  0x000000010f80c17a: hlt    
  0x000000010f80c17b: hlt    
  0x000000010f80c17c: hlt    
  0x000000010f80c17d: hlt    
  0x000000010f80c17e: hlt    
  0x000000010f80c17f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f80c180: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f80c185: mov    %rsp,-0x28(%rsp)
  0x000000010f80c18a: sub    $0x80,%rsp
  0x000000010f80c191: mov    %rax,0x78(%rsp)
  0x000000010f80c196: mov    %rcx,0x70(%rsp)
  0x000000010f80c19b: mov    %rdx,0x68(%rsp)
  0x000000010f80c1a0: mov    %rbx,0x60(%rsp)
  0x000000010f80c1a5: mov    %rbp,0x50(%rsp)
  0x000000010f80c1aa: mov    %rsi,0x48(%rsp)
  0x000000010f80c1af: mov    %rdi,0x40(%rsp)
  0x000000010f80c1b4: mov    %r8,0x38(%rsp)
  0x000000010f80c1b9: mov    %r9,0x30(%rsp)
  0x000000010f80c1be: mov    %r10,0x28(%rsp)
  0x000000010f80c1c3: mov    %r11,0x20(%rsp)
  0x000000010f80c1c8: mov    %r12,0x18(%rsp)
  0x000000010f80c1cd: mov    %r13,0x10(%rsp)
  0x000000010f80c1d2: mov    %r14,0x8(%rsp)
  0x000000010f80c1d7: mov    %r15,(%rsp)
  0x000000010f80c1db: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f80c1e5: movabs $0x10f80c185,%rsi  ;   {internal_word}
  0x000000010f80c1ef: mov    %rsp,%rdx
  0x000000010f80c1f2: and    $0xfffffffffffffff0,%rsp
  0x000000010f80c1f6: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f80c1fb: hlt    
[Deopt Handler Code]
  0x000000010f80c1fc: movabs $0x10f80c1fc,%r10  ;   {section_word}
  0x000000010f80c206: push   %r10
  0x000000010f80c208: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f80c20d: hlt    
  0x000000010f80c20e: hlt    
  0x000000010f80c20f: hlt    
Decoding compiled method 0x000000010f80c2d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010eabf088} 'isStatic' '()Z' in 'java/lang/invoke/MemberName'
  #           [sp+0x40]  (sp of caller)
  0x000000010f80c440: mov    0x8(%rsi),%r10d
  0x000000010f80c444: shl    $0x3,%r10
  0x000000010f80c448: cmp    %rax,%r10
  0x000000010f80c44b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f80c451: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f80c45c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f80c460: mov    %eax,-0x14000(%rsp)
  0x000000010f80c467: push   %rbp
  0x000000010f80c468: sub    $0x30,%rsp
  0x000000010f80c46c: movabs $0x10eda39d8,%rax  ;   {metadata(method data for {method} {0x000000010eabf088} 'isStatic' '()Z' in 'java/lang/invoke/MemberName')}
  0x000000010f80c476: mov    0xdc(%rax),%edi
  0x000000010f80c47c: add    $0x8,%edi
  0x000000010f80c47f: mov    %edi,0xdc(%rax)
  0x000000010f80c485: movabs $0x10eabf088,%rax  ;   {metadata({method} {0x000000010eabf088} 'isStatic' '()Z' in 'java/lang/invoke/MemberName')}
  0x000000010f80c48f: and    $0x1ff8,%edi
  0x000000010f80c495: cmp    $0x0,%edi
  0x000000010f80c498: je     0x000000010f80c552  ;*aload_0
                                                ; - java.lang.invoke.MemberName::isStatic@0 (line 367)

  0x000000010f80c49e: mov    0xc(%rsi),%eax     ;*getfield flags
                                                ; - java.lang.invoke.MemberName::isStatic@1 (line 367)

  0x000000010f80c4a1: movabs $0x10eda39d8,%rsi  ;   {metadata(method data for {method} {0x000000010eabf088} 'isStatic' '()Z' in 'java/lang/invoke/MemberName')}
  0x000000010f80c4ab: addq   $0x1,0x108(%rsi)
  0x000000010f80c4b3: movabs $0x10eda3880,%rsi  ;   {metadata(method data for {method} {0x000000010eb75990} 'isStatic' '(I)Z' in 'java/lang/reflect/Modifier')}
  0x000000010f80c4bd: mov    0xdc(%rsi),%edi
  0x000000010f80c4c3: add    $0x8,%edi
  0x000000010f80c4c6: mov    %edi,0xdc(%rsi)
  0x000000010f80c4cc: movabs $0x10eb75990,%rsi  ;   {metadata({method} {0x000000010eb75990} 'isStatic' '(I)Z' in 'java/lang/reflect/Modifier')}
  0x000000010f80c4d6: and    $0x7ffff8,%edi
  0x000000010f80c4dc: cmp    $0x0,%edi
  0x000000010f80c4df: je     0x000000010f80c569
  0x000000010f80c4e5: and    $0x8,%eax
  0x000000010f80c4e8: cmp    $0x0,%eax
  0x000000010f80c4eb: movabs $0x10eda3880,%rax  ;   {metadata(method data for {method} {0x000000010eb75990} 'isStatic' '(I)Z' in 'java/lang/reflect/Modifier')}
  0x000000010f80c4f5: movabs $0x108,%rsi
  0x000000010f80c4ff: je     0x000000010f80c50f
  0x000000010f80c505: movabs $0x118,%rsi
  0x000000010f80c50f: mov    (%rax,%rsi,1),%rdi
  0x000000010f80c513: lea    0x1(%rdi),%rdi
  0x000000010f80c517: mov    %rdi,(%rax,%rsi,1)
  0x000000010f80c51b: je     0x000000010f80c53b  ;*ifeq
                                                ; - java.lang.reflect.Modifier::isStatic@4 (line 104)
                                                ; - java.lang.invoke.MemberName::isStatic@4 (line 367)

  0x000000010f80c521: movabs $0x10eda3880,%rax  ;   {metadata(method data for {method} {0x000000010eb75990} 'isStatic' '(I)Z' in 'java/lang/reflect/Modifier')}
  0x000000010f80c52b: incl   0x128(%rax)
  0x000000010f80c531: mov    $0x1,%eax
  0x000000010f80c536: jmpq   0x000000010f80c540  ;*goto
                                                ; - java.lang.reflect.Modifier::isStatic@8 (line 104)
                                                ; - java.lang.invoke.MemberName::isStatic@4 (line 367)

  0x000000010f80c53b: mov    $0x0,%eax          ;*ireturn
                                                ; - java.lang.reflect.Modifier::isStatic@12 (line 104)
                                                ; - java.lang.invoke.MemberName::isStatic@4 (line 367)

  0x000000010f80c540: and    $0x1,%eax
  0x000000010f80c543: and    $0x1,%eax
  0x000000010f80c546: add    $0x30,%rsp
  0x000000010f80c54a: pop    %rbp
  0x000000010f80c54b: test   %eax,-0x8d71451(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f80c551: retq   
  0x000000010f80c552: mov    %rax,0x8(%rsp)
  0x000000010f80c557: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f80c55f: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=292}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MemberName::isStatic@-1 (line 367)
                                                ;   {runtime_call}
  0x000000010f80c564: jmpq   0x000000010f80c49e
  0x000000010f80c569: mov    %rsi,0x8(%rsp)
  0x000000010f80c56e: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f80c576: callq  0x000000010f7d1a20  ; OopMap{off=315}
                                                ;*synchronization entry
                                                ; - java.lang.reflect.Modifier::isStatic@-1 (line 104)
                                                ; - java.lang.invoke.MemberName::isStatic@4 (line 367)
                                                ;   {runtime_call}
  0x000000010f80c57b: jmpq   0x000000010f80c4e5
  0x000000010f80c580: nop
  0x000000010f80c581: nop
  0x000000010f80c582: mov    0x2a8(%r15),%rax
  0x000000010f80c589: movabs $0x0,%r10
  0x000000010f80c593: mov    %r10,0x2a8(%r15)
  0x000000010f80c59a: movabs $0x0,%r10
  0x000000010f80c5a4: mov    %r10,0x2b0(%r15)
  0x000000010f80c5ab: add    $0x30,%rsp
  0x000000010f80c5af: pop    %rbp
  0x000000010f80c5b0: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f80c5b5: hlt    
  0x000000010f80c5b6: hlt    
  0x000000010f80c5b7: hlt    
  0x000000010f80c5b8: hlt    
  0x000000010f80c5b9: hlt    
  0x000000010f80c5ba: hlt    
  0x000000010f80c5bb: hlt    
  0x000000010f80c5bc: hlt    
  0x000000010f80c5bd: hlt    
  0x000000010f80c5be: hlt    
  0x000000010f80c5bf: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f80c5c0: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f80c5c5: mov    %rsp,-0x28(%rsp)
  0x000000010f80c5ca: sub    $0x80,%rsp
  0x000000010f80c5d1: mov    %rax,0x78(%rsp)
  0x000000010f80c5d6: mov    %rcx,0x70(%rsp)
  0x000000010f80c5db: mov    %rdx,0x68(%rsp)
  0x000000010f80c5e0: mov    %rbx,0x60(%rsp)
  0x000000010f80c5e5: mov    %rbp,0x50(%rsp)
  0x000000010f80c5ea: mov    %rsi,0x48(%rsp)
  0x000000010f80c5ef: mov    %rdi,0x40(%rsp)
  0x000000010f80c5f4: mov    %r8,0x38(%rsp)
  0x000000010f80c5f9: mov    %r9,0x30(%rsp)
  0x000000010f80c5fe: mov    %r10,0x28(%rsp)
  0x000000010f80c603: mov    %r11,0x20(%rsp)
  0x000000010f80c608: mov    %r12,0x18(%rsp)
  0x000000010f80c60d: mov    %r13,0x10(%rsp)
  0x000000010f80c612: mov    %r14,0x8(%rsp)
  0x000000010f80c617: mov    %r15,(%rsp)
  0x000000010f80c61b: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f80c625: movabs $0x10f80c5c5,%rsi  ;   {internal_word}
  0x000000010f80c62f: mov    %rsp,%rdx
  0x000000010f80c632: and    $0xfffffffffffffff0,%rsp
  0x000000010f80c636: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f80c63b: hlt    
[Deopt Handler Code]
  0x000000010f80c63c: movabs $0x10f80c63c,%r10  ;   {section_word}
  0x000000010f80c646: push   %r10
  0x000000010f80c648: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f80c64d: hlt    
  0x000000010f80c64e: hlt    
  0x000000010f80c64f: hlt    
Decoding compiled method 0x000000010f80c750:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000010eda3be0} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rsi:rsi   = 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    rcx:rcx   = 'java/lang/Object'
  # parm2:    r8:r8     = 'java/lang/Object'
  # parm3:    r9:r9     = 'java/lang/Object'
  # parm4:    rdi:rdi   = 'java/lang/Object'
  # parm5:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  0x000000010f80c880: mov    0x14(%rsi),%ebx
  0x000000010f80c883: shl    $0x3,%rbx
  0x000000010f80c887: mov    0x28(%rbx),%ebx
  0x000000010f80c88a: shl    $0x3,%rbx
  0x000000010f80c88e: mov    0x18(%rbx),%rbx
  0x000000010f80c892: test   %rbx,%rbx
  0x000000010f80c895: je     0x000000010f80c89e
  0x000000010f80c89b: jmpq   *0x40(%rbx)
  0x000000010f80c89e: jmpq   0x000000010f6d61a0  ;   {runtime_call}
  0x000000010f80c8a3: hlt    
  0x000000010f80c8a4: hlt    
  0x000000010f80c8a5: hlt    
  0x000000010f80c8a6: hlt    
  0x000000010f80c8a7: hlt    
Decoding compiled method 0x000000010f80c8d0:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000010eda3cf8} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8:r8     = 'java/lang/Object'
  # parm4:    r9:r9     = 'java/lang/Object'
  # parm5:    rdi:rdi   = 'java/lang/Object'
  # parm6:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm7:    [sp+0x8]   = 'java/lang/invoke/MemberName'
  0x000000010f80ca00: mov    0x10(%rsp),%rbx
  0x000000010f80ca05: cmp    (%rsi),%rax
  0x000000010f80ca08: mov    0x18(%rbx),%rbx
  0x000000010f80ca0c: test   %rbx,%rbx
  0x000000010f80ca0f: je     0x000000010f80ca18
  0x000000010f80ca15: jmpq   *0x40(%rbx)
  0x000000010f80ca18: jmpq   0x000000010f6d61a0  ;   {runtime_call}
  0x000000010f80ca1d: hlt    
  0x000000010f80ca1e: hlt    
  0x000000010f80ca1f: hlt    
Decoding compiled method 0x000000010f80ca50:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010eb97a68} 'requireNonNull' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/Objects'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x000000010f80cbc0: mov    %eax,-0x14000(%rsp)
  0x000000010f80cbc7: push   %rbp
  0x000000010f80cbc8: sub    $0x30,%rsp
  0x000000010f80cbcc: movabs $0x10eda3d60,%rax  ;   {metadata(method data for {method} {0x000000010eb97a68} 'requireNonNull' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/Objects')}
  0x000000010f80cbd6: mov    0xdc(%rax),%edx
  0x000000010f80cbdc: add    $0x8,%edx
  0x000000010f80cbdf: mov    %edx,0xdc(%rax)
  0x000000010f80cbe5: movabs $0x10eb97a68,%rax  ;   {metadata({method} {0x000000010eb97a68} 'requireNonNull' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/Objects')}
  0x000000010f80cbef: and    $0x1ff8,%edx
  0x000000010f80cbf5: cmp    $0x0,%edx
  0x000000010f80cbf8: je     0x000000010f80ccbe  ;*aload_0
                                                ; - java.util.Objects::requireNonNull@0 (line 202)

  0x000000010f80cbfe: cmp    $0x0,%rsi
  0x000000010f80cc02: movabs $0x10eda3d60,%rax  ;   {metadata(method data for {method} {0x000000010eb97a68} 'requireNonNull' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/Objects')}
  0x000000010f80cc0c: movabs $0x108,%rdx
  0x000000010f80cc16: jne    0x000000010f80cc26
  0x000000010f80cc1c: movabs $0x118,%rdx
  0x000000010f80cc26: mov    (%rax,%rdx,1),%rdi
  0x000000010f80cc2a: lea    0x1(%rdi),%rdi
  0x000000010f80cc2e: mov    %rdi,(%rax,%rdx,1)
  0x000000010f80cc32: je     0x000000010f80cc47  ;*ifnonnull
                                                ; - java.util.Objects::requireNonNull@1 (line 202)

  0x000000010f80cc38: mov    %rsi,%rax
  0x000000010f80cc3b: add    $0x30,%rsp
  0x000000010f80cc3f: pop    %rbp
  0x000000010f80cc40: test   %eax,-0x8d71b46(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f80cc46: retq                      ;*areturn
                                                ; - java.util.Objects::requireNonNull@13 (line 204)

  0x000000010f80cc47: nop
  0x000000010f80cc48: jmpq   0x000000010f80cce4  ;   {no_reloc}
  0x000000010f80cc4d: add    %al,(%rax)
  0x000000010f80cc4f: add    %al,(%rax)
  0x000000010f80cc51: add    %cl,-0x75(%rcx)
  0x000000010f80cc54: rex.RXB (bad) 
  0x000000010f80cc56: lea    0x20(%rax),%rdi
  0x000000010f80cc5a: cmp    0x70(%r15),%rdi
  0x000000010f80cc5e: ja     0x000000010f80ccee
  0x000000010f80cc64: mov    %rdi,0x60(%r15)
  0x000000010f80cc68: mov    0xa8(%rdx),%rcx
  0x000000010f80cc6f: mov    %rcx,(%rax)
  0x000000010f80cc72: mov    %rdx,%rcx
  0x000000010f80cc75: shr    $0x3,%rcx
  0x000000010f80cc79: mov    %ecx,0x8(%rax)
  0x000000010f80cc7c: xor    %rcx,%rcx
  0x000000010f80cc7f: mov    %ecx,0xc(%rax)
  0x000000010f80cc82: xor    %rcx,%rcx
  0x000000010f80cc85: mov    %rcx,0x10(%rax)
  0x000000010f80cc89: mov    %rcx,0x18(%rax)    ;*new  ; - java.util.Objects::requireNonNull@4 (line 203)

  0x000000010f80cc8d: mov    %rax,%rsi
  0x000000010f80cc90: movabs $0x10eda3d60,%rdi  ;   {metadata(method data for {method} {0x000000010eb97a68} 'requireNonNull' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/Objects')}
  0x000000010f80cc9a: addq   $0x1,0x128(%rdi)
  0x000000010f80cca2: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.util.Objects::requireNonNull@8 (line 203)

  0x000000010f80cca5: mov    %rax,0x20(%rsp)
  0x000000010f80ccaa: nop
  0x000000010f80ccab: nop
  0x000000010f80ccac: nop
  0x000000010f80ccad: nop
  0x000000010f80ccae: nop
  0x000000010f80ccaf: callq  0x000000010f7170a0  ; OopMap{[32]=Oop off=244}
                                                ;*invokespecial <init>
                                                ; - java.util.Objects::requireNonNull@8 (line 203)
                                                ;   {optimized virtual_call}
  0x000000010f80ccb4: mov    0x20(%rsp),%rax
  0x000000010f80ccb9: jmpq   0x000000010f80cd23
  0x000000010f80ccbe: mov    %rax,0x8(%rsp)
  0x000000010f80ccc3: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f80cccb: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=272}
                                                ;*synchronization entry
                                                ; - java.util.Objects::requireNonNull@-1 (line 202)
                                                ;   {runtime_call}
  0x000000010f80ccd0: jmpq   0x000000010f80cbfe
  0x000000010f80ccd5: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f80ccdf: mov    $0xa050f00,%eax
  0x000000010f80cce4: callq  0x000000010f7d08e0  ; OopMap{off=297}
                                                ;*new  ; - java.util.Objects::requireNonNull@4 (line 203)
                                                ;   {runtime_call}
  0x000000010f80cce9: jmpq   0x000000010f80cc48
  0x000000010f80ccee: mov    %rdx,%rdx
  0x000000010f80ccf1: callq  0x000000010f7cd820  ; OopMap{off=310}
                                                ;*new  ; - java.util.Objects::requireNonNull@4 (line 203)
                                                ;   {runtime_call}
  0x000000010f80ccf6: jmp    0x000000010f80cc8d
  0x000000010f80ccf8: nop
  0x000000010f80ccf9: nop
  0x000000010f80ccfa: mov    0x2a8(%r15),%rax
  0x000000010f80cd01: movabs $0x0,%r10
  0x000000010f80cd0b: mov    %r10,0x2a8(%r15)
  0x000000010f80cd12: movabs $0x0,%r10
  0x000000010f80cd1c: mov    %r10,0x2b0(%r15)
  0x000000010f80cd23: add    $0x30,%rsp
  0x000000010f80cd27: pop    %rbp
  0x000000010f80cd28: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f80cd2d: hlt    
  0x000000010f80cd2e: hlt    
  0x000000010f80cd2f: hlt    
  0x000000010f80cd30: hlt    
  0x000000010f80cd31: hlt    
  0x000000010f80cd32: hlt    
  0x000000010f80cd33: hlt    
  0x000000010f80cd34: hlt    
  0x000000010f80cd35: hlt    
  0x000000010f80cd36: hlt    
  0x000000010f80cd37: hlt    
  0x000000010f80cd38: hlt    
  0x000000010f80cd39: hlt    
  0x000000010f80cd3a: hlt    
  0x000000010f80cd3b: hlt    
  0x000000010f80cd3c: hlt    
  0x000000010f80cd3d: hlt    
  0x000000010f80cd3e: hlt    
  0x000000010f80cd3f: hlt    
[Stub Code]
  0x000000010f80cd40: nop                       ;   {no_reloc}
  0x000000010f80cd41: nop
  0x000000010f80cd42: nop
  0x000000010f80cd43: nop
  0x000000010f80cd44: nop
  0x000000010f80cd45: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f80cd4f: jmpq   0x000000010f80cd4f  ;   {runtime_call}
[Exception Handler]
  0x000000010f80cd54: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f80cd59: mov    %rsp,-0x28(%rsp)
  0x000000010f80cd5e: sub    $0x80,%rsp
  0x000000010f80cd65: mov    %rax,0x78(%rsp)
  0x000000010f80cd6a: mov    %rcx,0x70(%rsp)
  0x000000010f80cd6f: mov    %rdx,0x68(%rsp)
  0x000000010f80cd74: mov    %rbx,0x60(%rsp)
  0x000000010f80cd79: mov    %rbp,0x50(%rsp)
  0x000000010f80cd7e: mov    %rsi,0x48(%rsp)
  0x000000010f80cd83: mov    %rdi,0x40(%rsp)
  0x000000010f80cd88: mov    %r8,0x38(%rsp)
  0x000000010f80cd8d: mov    %r9,0x30(%rsp)
  0x000000010f80cd92: mov    %r10,0x28(%rsp)
  0x000000010f80cd97: mov    %r11,0x20(%rsp)
  0x000000010f80cd9c: mov    %r12,0x18(%rsp)
  0x000000010f80cda1: mov    %r13,0x10(%rsp)
  0x000000010f80cda6: mov    %r14,0x8(%rsp)
  0x000000010f80cdab: mov    %r15,(%rsp)
  0x000000010f80cdaf: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f80cdb9: movabs $0x10f80cd59,%rsi  ;   {internal_word}
  0x000000010f80cdc3: mov    %rsp,%rdx
  0x000000010f80cdc6: and    $0xfffffffffffffff0,%rsp
  0x000000010f80cdca: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f80cdcf: hlt    
[Deopt Handler Code]
  0x000000010f80cdd0: movabs $0x10f80cdd0,%r10  ;   {section_word}
  0x000000010f80cdda: push   %r10
  0x000000010f80cddc: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f80cde1: hlt    
  0x000000010f80cde2: hlt    
  0x000000010f80cde3: hlt    
  0x000000010f80cde4: hlt    
  0x000000010f80cde5: hlt    
  0x000000010f80cde6: hlt    
  0x000000010f80cde7: hlt    
Decoding compiled method 0x000000010f80cf10:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010ed4e258} 'basicType' '(Ljava/lang/Class;)Ljava/lang/invoke/LambdaForm$BasicType;' in 'java/lang/invoke/LambdaForm$BasicType'
  # parm0:    rsi:rsi   = 'java/lang/Class'
  #           [sp+0x50]  (sp of caller)
  0x000000010f80d0a0: mov    %eax,-0x14000(%rsp)
  0x000000010f80d0a7: push   %rbp
  0x000000010f80d0a8: sub    $0x40,%rsp
  0x000000010f80d0ac: movabs $0x10eda3fe0,%rdi  ;   {metadata(method data for {method} {0x000000010ed4e258} 'basicType' '(Ljava/lang/Class;)Ljava/lang/invoke/LambdaForm$BasicType;' in 'java/lang/invoke/LambdaForm$BasicType')}
  0x000000010f80d0b6: mov    0xdc(%rdi),%ebx
  0x000000010f80d0bc: add    $0x8,%ebx
  0x000000010f80d0bf: mov    %ebx,0xdc(%rdi)
  0x000000010f80d0c5: movabs $0x10ed4e258,%rdi  ;   {metadata({method} {0x000000010ed4e258} 'basicType' '(Ljava/lang/Class;)Ljava/lang/invoke/LambdaForm$BasicType;' in 'java/lang/invoke/LambdaForm$BasicType')}
  0x000000010f80d0cf: and    $0x1ff8,%ebx
  0x000000010f80d0d5: cmp    $0x0,%ebx
  0x000000010f80d0d8: je     0x000000010f80d2f8  ;*aload_0
                                                ; - java.lang.invoke.LambdaForm$BasicType::basicType@0 (line 197)

  0x000000010f80d0de: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x000000010f80d30f
  0x000000010f80d0e1: mov    %rsi,%rdi
  0x000000010f80d0e4: movabs $0x10eda3fe0,%rbx  ;   {metadata(method data for {method} {0x000000010ed4e258} 'basicType' '(Ljava/lang/Class;)Ljava/lang/invoke/LambdaForm$BasicType;' in 'java/lang/invoke/LambdaForm$BasicType')}
  0x000000010f80d0ee: mov    0x8(%rdi),%edi
  0x000000010f80d0f1: shl    $0x3,%rdi
  0x000000010f80d0f5: cmp    0x110(%rbx),%rdi
  0x000000010f80d0fc: jne    0x000000010f80d10b
  0x000000010f80d0fe: addq   $0x1,0x118(%rbx)
  0x000000010f80d106: jmpq   0x000000010f80d171
  0x000000010f80d10b: cmp    0x120(%rbx),%rdi
  0x000000010f80d112: jne    0x000000010f80d121
  0x000000010f80d114: addq   $0x1,0x128(%rbx)
  0x000000010f80d11c: jmpq   0x000000010f80d171
  0x000000010f80d121: cmpq   $0x0,0x110(%rbx)
  0x000000010f80d12c: jne    0x000000010f80d145
  0x000000010f80d12e: mov    %rdi,0x110(%rbx)
  0x000000010f80d135: movq   $0x1,0x118(%rbx)
  0x000000010f80d140: jmpq   0x000000010f80d171
  0x000000010f80d145: cmpq   $0x0,0x120(%rbx)
  0x000000010f80d150: jne    0x000000010f80d169
  0x000000010f80d152: mov    %rdi,0x120(%rbx)
  0x000000010f80d159: movq   $0x1,0x128(%rbx)
  0x000000010f80d164: jmpq   0x000000010f80d171
  0x000000010f80d169: addq   $0x1,0x108(%rbx)
  0x000000010f80d171: mov    %rsi,%rdi
  0x000000010f80d174: mov    %rdi,%rsi          ;*invokevirtual isPrimitive
                                                ; - java.lang.invoke.LambdaForm$BasicType::basicType@1 (line 197)

  0x000000010f80d177: mov    %rdi,0x30(%rsp)
  0x000000010f80d17c: nop
  0x000000010f80d17d: nop
  0x000000010f80d17e: nop
  0x000000010f80d17f: callq  0x000000010f7170a0  ; OopMap{[48]=Oop off=228}
                                                ;*invokevirtual isPrimitive
                                                ; - java.lang.invoke.LambdaForm$BasicType::basicType@1 (line 197)
                                                ;   {optimized virtual_call}
  0x000000010f80d184: cmp    $0x0,%eax
  0x000000010f80d187: movabs $0x10eda3fe0,%rax  ;   {metadata(method data for {method} {0x000000010ed4e258} 'basicType' '(Ljava/lang/Class;)Ljava/lang/invoke/LambdaForm$BasicType;' in 'java/lang/invoke/LambdaForm$BasicType')}
  0x000000010f80d191: movabs $0x138,%rsi
  0x000000010f80d19b: jne    0x000000010f80d1ab
  0x000000010f80d1a1: movabs $0x148,%rsi
  0x000000010f80d1ab: mov    (%rax,%rsi,1),%rdi
  0x000000010f80d1af: lea    0x1(%rdi),%rdi
  0x000000010f80d1b3: mov    %rdi,(%rax,%rsi,1)
  0x000000010f80d1b7: jne    0x000000010f80d1d3  ;*ifne
                                                ; - java.lang.invoke.LambdaForm$BasicType::basicType@4 (line 197)

  0x000000010f80d1bd: movabs $0x79588c990,%rax  ;   {oop(a 'java/lang/invoke/LambdaForm$BasicType')}
  0x000000010f80d1c7: add    $0x40,%rsp
  0x000000010f80d1cb: pop    %rbp
  0x000000010f80d1cc: test   %eax,-0x8d720d2(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f80d1d2: retq                      ;*areturn
                                                ; - java.lang.invoke.LambdaForm$BasicType::basicType@10 (line 197)

  0x000000010f80d1d3: mov    0x30(%rsp),%rsi
  0x000000010f80d1d8: movabs $0x10eda3fe0,%rdi  ;   {metadata(method data for {method} {0x000000010ed4e258} 'basicType' '(Ljava/lang/Class;)Ljava/lang/invoke/LambdaForm$BasicType;' in 'java/lang/invoke/LambdaForm$BasicType')}
  0x000000010f80d1e2: addq   $0x1,0x158(%rdi)
  0x000000010f80d1ea: nop
  0x000000010f80d1eb: nop
  0x000000010f80d1ec: nop
  0x000000010f80d1ed: nop
  0x000000010f80d1ee: nop
  0x000000010f80d1ef: callq  0x000000010f717520  ; OopMap{off=340}
                                                ;*invokestatic forPrimitiveType
                                                ; - java.lang.invoke.LambdaForm$BasicType::basicType@12 (line 198)
                                                ;   {static_call}
  0x000000010f80d1f4: movabs $0x10eda3fe0,%rsi  ;   {metadata(method data for {method} {0x000000010ed4e258} 'basicType' '(Ljava/lang/Class;)Ljava/lang/invoke/LambdaForm$BasicType;' in 'java/lang/invoke/LambdaForm$BasicType')}
  0x000000010f80d1fe: addq   $0x1,0x168(%rsi)
  0x000000010f80d206: movabs $0x10eda4420,%rsi  ;   {metadata(method data for {method} {0x000000010ed4e1b0} 'basicType' '(Lsun/invoke/util/Wrapper;)Ljava/lang/invoke/LambdaForm$BasicType;' in 'java/lang/invoke/LambdaForm$BasicType')}
  0x000000010f80d210: mov    0xdc(%rsi),%edi
  0x000000010f80d216: add    $0x8,%edi
  0x000000010f80d219: mov    %edi,0xdc(%rsi)
  0x000000010f80d21f: movabs $0x10ed4e1b0,%rsi  ;   {metadata({method} {0x000000010ed4e1b0} 'basicType' '(Lsun/invoke/util/Wrapper;)Ljava/lang/invoke/LambdaForm$BasicType;' in 'java/lang/invoke/LambdaForm$BasicType')}
  0x000000010f80d229: and    $0x7ffff8,%edi
  0x000000010f80d22f: cmp    $0x0,%edi
  0x000000010f80d232: je     0x000000010f80d314
  0x000000010f80d238: cmp    (%rax),%rax        ;*invokevirtual basicTypeChar
                                                ; - java.lang.invoke.LambdaForm$BasicType::basicType@1 (line 193)
                                                ; - java.lang.invoke.LambdaForm$BasicType::basicType@15 (line 198)
                                                ; implicit exception: dispatches to 0x000000010f80d32b
  0x000000010f80d23b: mov    %rax,%rsi
  0x000000010f80d23e: movabs $0x10eda4420,%rdi  ;   {metadata(method data for {method} {0x000000010ed4e1b0} 'basicType' '(Lsun/invoke/util/Wrapper;)Ljava/lang/invoke/LambdaForm$BasicType;' in 'java/lang/invoke/LambdaForm$BasicType')}
  0x000000010f80d248: mov    0x8(%rsi),%esi
  0x000000010f80d24b: shl    $0x3,%rsi
  0x000000010f80d24f: cmp    0x110(%rdi),%rsi
  0x000000010f80d256: jne    0x000000010f80d265
  0x000000010f80d258: addq   $0x1,0x118(%rdi)
  0x000000010f80d260: jmpq   0x000000010f80d2cb
  0x000000010f80d265: cmp    0x120(%rdi),%rsi
  0x000000010f80d26c: jne    0x000000010f80d27b
  0x000000010f80d26e: addq   $0x1,0x128(%rdi)
  0x000000010f80d276: jmpq   0x000000010f80d2cb
  0x000000010f80d27b: cmpq   $0x0,0x110(%rdi)
  0x000000010f80d286: jne    0x000000010f80d29f
  0x000000010f80d288: mov    %rsi,0x110(%rdi)
  0x000000010f80d28f: movq   $0x1,0x118(%rdi)
  0x000000010f80d29a: jmpq   0x000000010f80d2cb
  0x000000010f80d29f: cmpq   $0x0,0x120(%rdi)
  0x000000010f80d2aa: jne    0x000000010f80d2c3
  0x000000010f80d2ac: mov    %rsi,0x120(%rdi)
  0x000000010f80d2b3: movq   $0x1,0x128(%rdi)
  0x000000010f80d2be: jmpq   0x000000010f80d2cb
  0x000000010f80d2c3: addq   $0x1,0x108(%rdi)
  0x000000010f80d2cb: movzwl 0x18(%rax),%esi    ;*getfield basicTypeChar
                                                ; - sun.invoke.util.Wrapper::basicTypeChar@1 (line 411)
                                                ; - java.lang.invoke.LambdaForm$BasicType::basicType@1 (line 193)
                                                ; - java.lang.invoke.LambdaForm$BasicType::basicType@15 (line 198)

  0x000000010f80d2cf: movabs $0x10eda4420,%rdi  ;   {metadata(method data for {method} {0x000000010ed4e1b0} 'basicType' '(Lsun/invoke/util/Wrapper;)Ljava/lang/invoke/LambdaForm$BasicType;' in 'java/lang/invoke/LambdaForm$BasicType')}
  0x000000010f80d2d9: addq   $0x1,0x138(%rdi)
  0x000000010f80d2e1: and    $0xffff,%esi
  0x000000010f80d2e7: callq  0x000000010f717520  ; OopMap{off=588}
                                                ;*invokestatic basicType
                                                ; - java.lang.invoke.LambdaForm$BasicType::basicType@6 (line 194)
                                                ; - java.lang.invoke.LambdaForm$BasicType::basicType@15 (line 198)
                                                ;   {static_call}
  0x000000010f80d2ec: add    $0x40,%rsp
  0x000000010f80d2f0: pop    %rbp
  0x000000010f80d2f1: test   %eax,-0x8d721f7(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f80d2f7: retq   
  0x000000010f80d2f8: mov    %rdi,0x8(%rsp)
  0x000000010f80d2fd: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f80d305: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=618}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.LambdaForm$BasicType::basicType@-1 (line 197)
                                                ;   {runtime_call}
  0x000000010f80d30a: jmpq   0x000000010f80d0de
  0x000000010f80d30f: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop off=628}
                                                ;*invokevirtual isPrimitive
                                                ; - java.lang.invoke.LambdaForm$BasicType::basicType@1 (line 197)
                                                ;   {runtime_call}
  0x000000010f80d314: mov    %rsi,0x8(%rsp)
  0x000000010f80d319: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f80d321: callq  0x000000010f7d1a20  ; OopMap{rax=Oop off=646}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.LambdaForm$BasicType::basicType@-1 (line 193)
                                                ; - java.lang.invoke.LambdaForm$BasicType::basicType@15 (line 198)
                                                ;   {runtime_call}
  0x000000010f80d326: jmpq   0x000000010f80d238
  0x000000010f80d32b: callq  0x000000010f7cd0c0  ; OopMap{rax=Oop off=656}
                                                ;*invokevirtual basicTypeChar
                                                ; - java.lang.invoke.LambdaForm$BasicType::basicType@1 (line 193)
                                                ; - java.lang.invoke.LambdaForm$BasicType::basicType@15 (line 198)
                                                ;   {runtime_call}
  0x000000010f80d330: nop
  0x000000010f80d331: nop
  0x000000010f80d332: mov    0x2a8(%r15),%rax
  0x000000010f80d339: movabs $0x0,%r10
  0x000000010f80d343: mov    %r10,0x2a8(%r15)
  0x000000010f80d34a: movabs $0x0,%r10
  0x000000010f80d354: mov    %r10,0x2b0(%r15)
  0x000000010f80d35b: add    $0x40,%rsp
  0x000000010f80d35f: pop    %rbp
  0x000000010f80d360: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f80d365: hlt    
  0x000000010f80d366: hlt    
  0x000000010f80d367: hlt    
  0x000000010f80d368: hlt    
  0x000000010f80d369: hlt    
  0x000000010f80d36a: hlt    
  0x000000010f80d36b: hlt    
  0x000000010f80d36c: hlt    
  0x000000010f80d36d: hlt    
  0x000000010f80d36e: hlt    
  0x000000010f80d36f: hlt    
  0x000000010f80d370: hlt    
  0x000000010f80d371: hlt    
  0x000000010f80d372: hlt    
  0x000000010f80d373: hlt    
  0x000000010f80d374: hlt    
  0x000000010f80d375: hlt    
  0x000000010f80d376: hlt    
  0x000000010f80d377: hlt    
  0x000000010f80d378: hlt    
  0x000000010f80d379: hlt    
  0x000000010f80d37a: hlt    
  0x000000010f80d37b: hlt    
  0x000000010f80d37c: hlt    
  0x000000010f80d37d: hlt    
  0x000000010f80d37e: hlt    
  0x000000010f80d37f: hlt    
[Stub Code]
  0x000000010f80d380: nop                       ;   {no_reloc}
  0x000000010f80d381: nop
  0x000000010f80d382: nop
  0x000000010f80d383: nop
  0x000000010f80d384: nop
  0x000000010f80d385: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f80d38f: jmpq   0x000000010f80d38f  ;   {runtime_call}
  0x000000010f80d394: nop
  0x000000010f80d395: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f80d39f: jmpq   0x000000010f80d39f  ;   {runtime_call}
  0x000000010f80d3a4: nop
  0x000000010f80d3a5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f80d3af: jmpq   0x000000010f80d3af  ;   {runtime_call}
[Exception Handler]
  0x000000010f80d3b4: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f80d3b9: mov    %rsp,-0x28(%rsp)
  0x000000010f80d3be: sub    $0x80,%rsp
  0x000000010f80d3c5: mov    %rax,0x78(%rsp)
  0x000000010f80d3ca: mov    %rcx,0x70(%rsp)
  0x000000010f80d3cf: mov    %rdx,0x68(%rsp)
  0x000000010f80d3d4: mov    %rbx,0x60(%rsp)
  0x000000010f80d3d9: mov    %rbp,0x50(%rsp)
  0x000000010f80d3de: mov    %rsi,0x48(%rsp)
  0x000000010f80d3e3: mov    %rdi,0x40(%rsp)
  0x000000010f80d3e8: mov    %r8,0x38(%rsp)
  0x000000010f80d3ed: mov    %r9,0x30(%rsp)
  0x000000010f80d3f2: mov    %r10,0x28(%rsp)
  0x000000010f80d3f7: mov    %r11,0x20(%rsp)
  0x000000010f80d3fc: mov    %r12,0x18(%rsp)
  0x000000010f80d401: mov    %r13,0x10(%rsp)
  0x000000010f80d406: mov    %r14,0x8(%rsp)
  0x000000010f80d40b: mov    %r15,(%rsp)
  0x000000010f80d40f: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f80d419: movabs $0x10f80d3b9,%rsi  ;   {internal_word}
  0x000000010f80d423: mov    %rsp,%rdx
  0x000000010f80d426: and    $0xfffffffffffffff0,%rsp
  0x000000010f80d42a: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f80d42f: hlt    
[Deopt Handler Code]
  0x000000010f80d430: movabs $0x10f80d430,%r10  ;   {section_word}
  0x000000010f80d43a: push   %r10
  0x000000010f80d43c: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f80d441: hlt    
  0x000000010f80d442: hlt    
  0x000000010f80d443: hlt    
  0x000000010f80d444: hlt    
  0x000000010f80d445: hlt    
  0x000000010f80d446: hlt    
  0x000000010f80d447: hlt    
Decoding compiled method 0x000000010f80d610:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ed76ed8} 'put12' '(II)Ljdk/internal/org/objectweb/asm/ByteVector;' in 'jdk/internal/org/objectweb/asm/ByteVector'
  # this:     rsi:rsi   = 'jdk/internal/org/objectweb/asm/ByteVector'
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  #           [sp+0x60]  (sp of caller)
  0x000000010f80d780: mov    0x8(%rsi),%r10d
  0x000000010f80d784: shl    $0x3,%r10
  0x000000010f80d788: cmp    %rax,%r10
  0x000000010f80d78b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f80d791: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f80d79c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f80d7a0: mov    %eax,-0x14000(%rsp)
  0x000000010f80d7a7: push   %rbp
  0x000000010f80d7a8: sub    $0x50,%rsp
  0x000000010f80d7ac: movabs $0x10eda4980,%rdi  ;   {metadata(method data for {method} {0x000000010ed76ed8} 'put12' '(II)Ljdk/internal/org/objectweb/asm/ByteVector;' in 'jdk/internal/org/objectweb/asm/ByteVector')}
  0x000000010f80d7b6: mov    0xdc(%rdi),%ebx
  0x000000010f80d7bc: add    $0x8,%ebx
  0x000000010f80d7bf: mov    %ebx,0xdc(%rdi)
  0x000000010f80d7c5: movabs $0x10ed76ed8,%rdi  ;   {metadata({method} {0x000000010ed76ed8} 'put12' '(II)Ljdk/internal/org/objectweb/asm/ByteVector;' in 'jdk/internal/org/objectweb/asm/ByteVector')}
  0x000000010f80d7cf: and    $0x1ff8,%ebx
  0x000000010f80d7d5: cmp    $0x0,%ebx
  0x000000010f80d7d8: je     0x000000010f80d8cd  ;*aload_0
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::put12@0 (line 169)

  0x000000010f80d7de: mov    0xc(%rsi),%edi     ;*getfield length
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::put12@1 (line 169)

  0x000000010f80d7e1: mov    0x10(%rsi),%ebx
  0x000000010f80d7e4: shl    $0x3,%rbx          ;*getfield data
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::put12@9 (line 170)

  0x000000010f80d7e8: mov    0xc(%rbx),%ebx     ;*arraylength
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::put12@12 (line 170)
                                                ; implicit exception: dispatches to 0x000000010f80d8e4
  0x000000010f80d7eb: mov    %rdi,%rax
  0x000000010f80d7ee: add    $0x3,%eax
  0x000000010f80d7f1: cmp    %ebx,%eax
  0x000000010f80d7f3: movabs $0x10eda4980,%rbx  ;   {metadata(method data for {method} {0x000000010ed76ed8} 'put12' '(II)Ljdk/internal/org/objectweb/asm/ByteVector;' in 'jdk/internal/org/objectweb/asm/ByteVector')}
  0x000000010f80d7fd: movabs $0x108,%rax
  0x000000010f80d807: jle    0x000000010f80d817
  0x000000010f80d80d: movabs $0x118,%rax
  0x000000010f80d817: mov    (%rbx,%rax,1),%r8
  0x000000010f80d81b: lea    0x1(%r8),%r8
  0x000000010f80d81f: mov    %r8,(%rbx,%rax,1)
  0x000000010f80d823: jle    0x000000010f80d875  ;*if_icmple
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::put12@13 (line 170)

  0x000000010f80d829: mov    %edi,0x34(%rsp)
  0x000000010f80d82d: mov    %ecx,0x38(%rsp)
  0x000000010f80d831: mov    %edx,0x30(%rsp)
  0x000000010f80d835: mov    %rsi,%rbx
  0x000000010f80d838: movabs $0x10eda4980,%rax  ;   {metadata(method data for {method} {0x000000010ed76ed8} 'put12' '(II)Ljdk/internal/org/objectweb/asm/ByteVector;' in 'jdk/internal/org/objectweb/asm/ByteVector')}
  0x000000010f80d842: addq   $0x1,0x128(%rax)
  0x000000010f80d84a: mov    $0x3,%edx
  0x000000010f80d84f: mov    %rsi,%rax
  0x000000010f80d852: mov    %rax,%rsi          ;*invokespecial enlarge
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::put12@18 (line 171)

  0x000000010f80d855: mov    %rax,0x28(%rsp)
  0x000000010f80d85a: nop
  0x000000010f80d85b: nop
  0x000000010f80d85c: nop
  0x000000010f80d85d: nop
  0x000000010f80d85e: nop
  0x000000010f80d85f: callq  0x000000010f7170a0  ; OopMap{[40]=Oop off=228}
                                                ;*invokespecial enlarge
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::put12@18 (line 171)
                                                ;   {optimized virtual_call}
  0x000000010f80d864: mov    0x34(%rsp),%edi
  0x000000010f80d868: mov    0x38(%rsp),%ecx
  0x000000010f80d86c: mov    0x30(%rsp),%edx
  0x000000010f80d870: mov    0x28(%rsp),%rsi
  0x000000010f80d875: mov    0x10(%rsi),%eax
  0x000000010f80d878: shl    $0x3,%rax          ;*getfield data
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::put12@22 (line 173)

  0x000000010f80d87c: movslq %edi,%rbx
  0x000000010f80d87f: cmp    0xc(%rax),%edi     ; implicit exception: dispatches to 0x000000010f80d8e9
  0x000000010f80d882: jae    0x000000010f80d8f3
  0x000000010f80d888: mov    %dl,0x10(%rax,%rbx,1)  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::put12@35 (line 174)

  0x000000010f80d88c: inc    %edi
  0x000000010f80d88e: mov    %rcx,%rbx
  0x000000010f80d891: shr    $0x8,%ebx
  0x000000010f80d894: movslq %edi,%rdx
  0x000000010f80d897: cmp    0xc(%rax),%edi
  0x000000010f80d89a: jae    0x000000010f80d8fc
  0x000000010f80d8a0: mov    %bl,0x10(%rax,%rdx,1)  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::put12@47 (line 175)

  0x000000010f80d8a4: inc    %edi
  0x000000010f80d8a6: mov    %rdi,%rbx
  0x000000010f80d8a9: inc    %ebx
  0x000000010f80d8ab: movslq %edi,%rdx
  0x000000010f80d8ae: cmp    0xc(%rax),%edi
  0x000000010f80d8b1: jae    0x000000010f80d905
  0x000000010f80d8b7: mov    %cl,0x10(%rax,%rdx,1)  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::put12@56 (line 176)

  0x000000010f80d8bb: mov    %ebx,0xc(%rsi)     ;*putfield length
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::put12@59 (line 177)

  0x000000010f80d8be: mov    %rsi,%rax
  0x000000010f80d8c1: add    $0x50,%rsp
  0x000000010f80d8c5: pop    %rbp
  0x000000010f80d8c6: test   %eax,-0x8d727cc(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f80d8cc: retq   
  0x000000010f80d8cd: mov    %rdi,0x8(%rsp)
  0x000000010f80d8d2: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f80d8da: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=351}
                                                ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::put12@-1 (line 169)
                                                ;   {runtime_call}
  0x000000010f80d8df: jmpq   0x000000010f80d7de
  0x000000010f80d8e4: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop off=361}
                                                ;*arraylength
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::put12@12 (line 170)
                                                ;   {runtime_call}
  0x000000010f80d8e9: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop rax=Oop off=366}
                                                ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::put12@35 (line 174)
                                                ;   {runtime_call}
  0x000000010f80d8ee: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop rax=Oop off=371}
                                                ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::put12@35 (line 174)
                                                ;   {runtime_call}
  0x000000010f80d8f3: mov    %rdi,(%rsp)
  0x000000010f80d8f7: callq  0x000000010f7cca00  ; OopMap{rsi=Oop rax=Oop off=380}
                                                ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::put12@35 (line 174)
                                                ;   {runtime_call}
  0x000000010f80d8fc: mov    %rdi,(%rsp)
  0x000000010f80d900: callq  0x000000010f7cca00  ; OopMap{rsi=Oop rax=Oop off=389}
                                                ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::put12@47 (line 175)
                                                ;   {runtime_call}
  0x000000010f80d905: mov    %rdi,(%rsp)
  0x000000010f80d909: callq  0x000000010f7cca00  ; OopMap{rsi=Oop rax=Oop off=398}
                                                ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::put12@56 (line 176)
                                                ;   {runtime_call}
  0x000000010f80d90e: nop
  0x000000010f80d90f: nop
  0x000000010f80d910: mov    0x2a8(%r15),%rax
  0x000000010f80d917: movabs $0x0,%r10
  0x000000010f80d921: mov    %r10,0x2a8(%r15)
  0x000000010f80d928: movabs $0x0,%r10
  0x000000010f80d932: mov    %r10,0x2b0(%r15)
  0x000000010f80d939: add    $0x50,%rsp
  0x000000010f80d93d: pop    %rbp
  0x000000010f80d93e: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f80d943: hlt    
  0x000000010f80d944: hlt    
  0x000000010f80d945: hlt    
  0x000000010f80d946: hlt    
  0x000000010f80d947: hlt    
  0x000000010f80d948: hlt    
  0x000000010f80d949: hlt    
  0x000000010f80d94a: hlt    
  0x000000010f80d94b: hlt    
  0x000000010f80d94c: hlt    
  0x000000010f80d94d: hlt    
  0x000000010f80d94e: hlt    
  0x000000010f80d94f: hlt    
  0x000000010f80d950: hlt    
  0x000000010f80d951: hlt    
  0x000000010f80d952: hlt    
  0x000000010f80d953: hlt    
  0x000000010f80d954: hlt    
  0x000000010f80d955: hlt    
  0x000000010f80d956: hlt    
  0x000000010f80d957: hlt    
  0x000000010f80d958: hlt    
  0x000000010f80d959: hlt    
  0x000000010f80d95a: hlt    
  0x000000010f80d95b: hlt    
  0x000000010f80d95c: hlt    
  0x000000010f80d95d: hlt    
  0x000000010f80d95e: hlt    
  0x000000010f80d95f: hlt    
[Stub Code]
  0x000000010f80d960: nop                       ;   {no_reloc}
  0x000000010f80d961: nop
  0x000000010f80d962: nop
  0x000000010f80d963: nop
  0x000000010f80d964: nop
  0x000000010f80d965: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f80d96f: jmpq   0x000000010f80d96f  ;   {runtime_call}
[Exception Handler]
  0x000000010f80d974: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f80d979: mov    %rsp,-0x28(%rsp)
  0x000000010f80d97e: sub    $0x80,%rsp
  0x000000010f80d985: mov    %rax,0x78(%rsp)
  0x000000010f80d98a: mov    %rcx,0x70(%rsp)
  0x000000010f80d98f: mov    %rdx,0x68(%rsp)
  0x000000010f80d994: mov    %rbx,0x60(%rsp)
  0x000000010f80d999: mov    %rbp,0x50(%rsp)
  0x000000010f80d99e: mov    %rsi,0x48(%rsp)
  0x000000010f80d9a3: mov    %rdi,0x40(%rsp)
  0x000000010f80d9a8: mov    %r8,0x38(%rsp)
  0x000000010f80d9ad: mov    %r9,0x30(%rsp)
  0x000000010f80d9b2: mov    %r10,0x28(%rsp)
  0x000000010f80d9b7: mov    %r11,0x20(%rsp)
  0x000000010f80d9bc: mov    %r12,0x18(%rsp)
  0x000000010f80d9c1: mov    %r13,0x10(%rsp)
  0x000000010f80d9c6: mov    %r14,0x8(%rsp)
  0x000000010f80d9cb: mov    %r15,(%rsp)
  0x000000010f80d9cf: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f80d9d9: movabs $0x10f80d979,%rsi  ;   {internal_word}
  0x000000010f80d9e3: mov    %rsp,%rdx
  0x000000010f80d9e6: and    $0xfffffffffffffff0,%rsp
  0x000000010f80d9ea: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f80d9ef: hlt    
[Deopt Handler Code]
  0x000000010f80d9f0: movabs $0x10f80d9f0,%r10  ;   {section_word}
  0x000000010f80d9fa: push   %r10
  0x000000010f80d9fc: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f80da01: hlt    
  0x000000010f80da02: hlt    
  0x000000010f80da03: hlt    
  0x000000010f80da04: hlt    
  0x000000010f80da05: hlt    
  0x000000010f80da06: hlt    
  0x000000010f80da07: hlt    
Decoding compiled method 0x000000010f80dc50:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ead0138} 'parameterType' '(I)Ljava/lang/Class;' in 'java/lang/invoke/MethodType'
  # this:     rsi:rsi   = 'java/lang/invoke/MethodType'
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x000000010f80ddc0: mov    0x8(%rsi),%r10d
  0x000000010f80ddc4: shl    $0x3,%r10
  0x000000010f80ddc8: cmp    %rax,%r10
  0x000000010f80ddcb: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f80ddd1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f80dddc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f80dde0: mov    %eax,-0x14000(%rsp)
  0x000000010f80dde7: push   %rbp
  0x000000010f80dde8: sub    $0x30,%rsp
  0x000000010f80ddec: movabs $0x10eda4ae0,%rax  ;   {metadata(method data for {method} {0x000000010ead0138} 'parameterType' '(I)Ljava/lang/Class;' in 'java/lang/invoke/MethodType')}
  0x000000010f80ddf6: mov    0xdc(%rax),%edi
  0x000000010f80ddfc: add    $0x8,%edi
  0x000000010f80ddff: mov    %edi,0xdc(%rax)
  0x000000010f80de05: movabs $0x10ead0138,%rax  ;   {metadata({method} {0x000000010ead0138} 'parameterType' '(I)Ljava/lang/Class;' in 'java/lang/invoke/MethodType')}
  0x000000010f80de0f: and    $0x1ff8,%edi
  0x000000010f80de15: cmp    $0x0,%edi
  0x000000010f80de18: je     0x000000010f80de47  ;*aload_0
                                                ; - java.lang.invoke.MethodType::parameterType@0 (line 706)

  0x000000010f80de1e: mov    0x10(%rsi),%eax
  0x000000010f80de21: shl    $0x3,%rax          ;*getfield ptypes
                                                ; - java.lang.invoke.MethodType::parameterType@1 (line 706)

  0x000000010f80de25: mov    0xc(%rax),%esi     ; implicit exception: dispatches to 0x000000010f80de5b
  0x000000010f80de28: movslq %edx,%rdi
  0x000000010f80de2b: cmp    %edx,%esi
  0x000000010f80de2d: jbe    0x000000010f80de60
  0x000000010f80de33: mov    0x10(%rax,%rdi,4),%eax
  0x000000010f80de37: shl    $0x3,%rax          ;*aaload
                                                ; - java.lang.invoke.MethodType::parameterType@5 (line 706)

  0x000000010f80de3b: add    $0x30,%rsp
  0x000000010f80de3f: pop    %rbp
  0x000000010f80de40: test   %eax,-0x8d72d46(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f80de46: retq   
  0x000000010f80de47: mov    %rax,0x8(%rsp)
  0x000000010f80de4c: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f80de54: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=153}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MethodType::parameterType@-1 (line 706)
                                                ;   {runtime_call}
  0x000000010f80de59: jmp    0x000000010f80de1e
  0x000000010f80de5b: callq  0x000000010f7cd0c0  ; OopMap{rax=Oop off=160}
                                                ;*aaload
                                                ; - java.lang.invoke.MethodType::parameterType@5 (line 706)
                                                ;   {runtime_call}
  0x000000010f80de60: mov    %rdx,(%rsp)
  0x000000010f80de64: callq  0x000000010f7cca00  ; OopMap{rax=Oop off=169}
                                                ;*aaload
                                                ; - java.lang.invoke.MethodType::parameterType@5 (line 706)
                                                ;   {runtime_call}
  0x000000010f80de69: nop
  0x000000010f80de6a: nop
  0x000000010f80de6b: mov    0x2a8(%r15),%rax
  0x000000010f80de72: movabs $0x0,%r10
  0x000000010f80de7c: mov    %r10,0x2a8(%r15)
  0x000000010f80de83: movabs $0x0,%r10
  0x000000010f80de8d: mov    %r10,0x2b0(%r15)
  0x000000010f80de94: add    $0x30,%rsp
  0x000000010f80de98: pop    %rbp
  0x000000010f80de99: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f80de9e: hlt    
  0x000000010f80de9f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f80dea0: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f80dea5: mov    %rsp,-0x28(%rsp)
  0x000000010f80deaa: sub    $0x80,%rsp
  0x000000010f80deb1: mov    %rax,0x78(%rsp)
  0x000000010f80deb6: mov    %rcx,0x70(%rsp)
  0x000000010f80debb: mov    %rdx,0x68(%rsp)
  0x000000010f80dec0: mov    %rbx,0x60(%rsp)
  0x000000010f80dec5: mov    %rbp,0x50(%rsp)
  0x000000010f80deca: mov    %rsi,0x48(%rsp)
  0x000000010f80decf: mov    %rdi,0x40(%rsp)
  0x000000010f80ded4: mov    %r8,0x38(%rsp)
  0x000000010f80ded9: mov    %r9,0x30(%rsp)
  0x000000010f80dede: mov    %r10,0x28(%rsp)
  0x000000010f80dee3: mov    %r11,0x20(%rsp)
  0x000000010f80dee8: mov    %r12,0x18(%rsp)
  0x000000010f80deed: mov    %r13,0x10(%rsp)
  0x000000010f80def2: mov    %r14,0x8(%rsp)
  0x000000010f80def7: mov    %r15,(%rsp)
  0x000000010f80defb: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f80df05: movabs $0x10f80dea5,%rsi  ;   {internal_word}
  0x000000010f80df0f: mov    %rsp,%rdx
  0x000000010f80df12: and    $0xfffffffffffffff0,%rsp
  0x000000010f80df16: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f80df1b: hlt    
[Deopt Handler Code]
  0x000000010f80df1c: movabs $0x10f80df1c,%r10  ;   {section_word}
  0x000000010f80df26: push   %r10
  0x000000010f80df28: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f80df2d: hlt    
  0x000000010f80df2e: hlt    
  0x000000010f80df2f: hlt    
Decoding compiled method 0x000000010f80e010:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000010eda4cb8} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8:r8     = 'java/lang/Object'
  # parm4:    r9:r9     = 'java/lang/Object'
  # parm5:    rdi:rdi   = 'java/lang/Object'
  # parm6:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm7:    [sp+0x8]   = 'java/lang/invoke/MemberName'
  0x000000010f80e140: mov    0x10(%rsp),%rbx
  0x000000010f80e145: mov    0x18(%rbx),%rbx
  0x000000010f80e149: test   %rbx,%rbx
  0x000000010f80e14c: je     0x000000010f80e155
  0x000000010f80e152: jmpq   *0x40(%rbx)
  0x000000010f80e155: jmpq   0x000000010f6d61a0  ;   {runtime_call}
  0x000000010f80e15a: hlt    
  0x000000010f80e15b: hlt    
  0x000000010f80e15c: hlt    
  0x000000010f80e15d: hlt    
  0x000000010f80e15e: hlt    
  0x000000010f80e15f: hlt    
Decoding compiled method 0x000000010f80e190:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000010eda4f58} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rsi:rsi   = 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    rcx:rcx   = 'java/lang/Object'
  # parm2:    r8:r8     = 'java/lang/Object'
  # parm3:    r9:r9     = 'java/lang/Object'
  # parm4:    rdi:rdi   = 'java/lang/Object'
  # parm5:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm6:    [sp+0x8]   = 'java/lang/Object'
  0x000000010f80e2c0: mov    0x14(%rsi),%ebx
  0x000000010f80e2c3: shl    $0x3,%rbx
  0x000000010f80e2c7: mov    0x28(%rbx),%ebx
  0x000000010f80e2ca: shl    $0x3,%rbx
  0x000000010f80e2ce: mov    0x18(%rbx),%rbx
  0x000000010f80e2d2: test   %rbx,%rbx
  0x000000010f80e2d5: je     0x000000010f80e2de
  0x000000010f80e2db: jmpq   *0x40(%rbx)
  0x000000010f80e2de: jmpq   0x000000010f6d61a0  ;   {runtime_call}
  0x000000010f80e2e3: hlt    
  0x000000010f80e2e4: hlt    
  0x000000010f80e2e5: hlt    
  0x000000010f80e2e6: hlt    
  0x000000010f80e2e7: hlt    
Decoding compiled method 0x000000010f80e310:
Code:
[Entry Point]
  # {method} {0x000000010ea655a8} 'getClass' '()Ljava/lang/Class;' in 'java/lang/Object'
  #           [sp+0x50]  (sp of caller)
  0x000000010f80e480: mov    0x8(%rsi),%r10d
  0x000000010f80e484: shl    $0x3,%r10
  0x000000010f80e488: cmp    %r10,%rax
  0x000000010f80e48b: je     0x000000010f80e498
  0x000000010f80e491: jmpq   0x000000010f716e60  ;   {runtime_call}
  0x000000010f80e496: xchg   %ax,%ax
[Verified Entry Point]
  0x000000010f80e498: mov    %eax,-0x14000(%rsp)
  0x000000010f80e49f: push   %rbp
  0x000000010f80e4a0: mov    %rsp,%rbp
  0x000000010f80e4a3: sub    $0x40,%rsp
  0x000000010f80e4a7: mov    %rsi,(%rsp)
  0x000000010f80e4ab: cmp    $0x0,%rsi
  0x000000010f80e4af: lea    (%rsp),%rsi
  0x000000010f80e4b3: cmove  (%rsp),%rsi        ; OopMap{[0]=Oop off=56}
  0x000000010f80e4b8: movabs $0x10f80e4b8,%r10  ;   {section_word}
  0x000000010f80e4c2: mov    %r10,0x1e0(%r15)
  0x000000010f80e4c9: mov    %rsp,0x1d8(%r15)
  0x000000010f80e4d0: cmpb   $0x0,-0x5f1c11d(%rip)        # 0x00000001098f23ba
                                                ;   {external_word}
  0x000000010f80e4d7: je     0x000000010f80e50f
  0x000000010f80e4dd: push   %rsi
  0x000000010f80e4de: movabs $0x10ea655a8,%rsi  ;   {metadata({method} {0x000000010ea655a8} 'getClass' '()Ljava/lang/Class;' in 'java/lang/Object')}
  0x000000010f80e4e8: mov    %r15,%rdi
  0x000000010f80e4eb: test   $0xf,%esp
  0x000000010f80e4f1: je     0x000000010f80e509
  0x000000010f80e4f7: sub    $0x8,%rsp
  0x000000010f80e4fb: callq  0x00000001094ed064  ;   {runtime_call}
  0x000000010f80e500: add    $0x8,%rsp
  0x000000010f80e504: jmpq   0x000000010f80e50e
  0x000000010f80e509: callq  0x00000001094ed064  ;   {runtime_call}
  0x000000010f80e50e: pop    %rsi
  0x000000010f80e50f: lea    0x1f8(%r15),%rdi
  0x000000010f80e516: movl   $0x4,0x270(%r15)
  0x000000010f80e521: callq  0x0000000106a6901a  ;   {runtime_call}
  0x000000010f80e526: vzeroupper 
  0x000000010f80e529: movl   $0x5,0x270(%r15)
  0x000000010f80e534: lock addl $0x0,(%rsp)
  0x000000010f80e539: cmpl   $0x0,-0x5f117d3(%rip)        # 0x00000001098fcd70
                                                ;   {external_word}
  0x000000010f80e543: jne    0x000000010f80e557
  0x000000010f80e549: cmpl   $0x0,0x30(%r15)
  0x000000010f80e551: je     0x000000010f80e578
  0x000000010f80e557: mov    %rax,-0x8(%rbp)
  0x000000010f80e55b: mov    %r15,%rdi
  0x000000010f80e55e: mov    %rsp,%r12
  0x000000010f80e561: sub    $0x0,%rsp
  0x000000010f80e565: and    $0xfffffffffffffff0,%rsp
  0x000000010f80e569: callq  0x000000010956fe1e  ;   {runtime_call}
  0x000000010f80e56e: mov    %r12,%rsp
  0x000000010f80e571: xor    %r12,%r12
  0x000000010f80e574: mov    -0x8(%rbp),%rax
  0x000000010f80e578: movl   $0x8,0x270(%r15)
  0x000000010f80e583: cmpl   $0x1,0x29c(%r15)
  0x000000010f80e58e: je     0x000000010f80e62a
  0x000000010f80e594: cmpb   $0x0,-0x5f1c1e1(%rip)        # 0x00000001098f23ba
                                                ;   {external_word}
  0x000000010f80e59b: je     0x000000010f80e5d9
  0x000000010f80e5a1: mov    %rax,-0x8(%rbp)
  0x000000010f80e5a5: movabs $0x10ea655a8,%rsi  ;   {metadata({method} {0x000000010ea655a8} 'getClass' '()Ljava/lang/Class;' in 'java/lang/Object')}
  0x000000010f80e5af: mov    %r15,%rdi
  0x000000010f80e5b2: test   $0xf,%esp
  0x000000010f80e5b8: je     0x000000010f80e5d0
  0x000000010f80e5be: sub    $0x8,%rsp
  0x000000010f80e5c2: callq  0x00000001094ecfd6  ;   {runtime_call}
  0x000000010f80e5c7: add    $0x8,%rsp
  0x000000010f80e5cb: jmpq   0x000000010f80e5d5
  0x000000010f80e5d0: callq  0x00000001094ecfd6  ;   {runtime_call}
  0x000000010f80e5d5: mov    -0x8(%rbp),%rax
  0x000000010f80e5d9: movabs $0x0,%r10
  0x000000010f80e5e3: mov    %r10,0x1d8(%r15)
  0x000000010f80e5ea: movabs $0x0,%r10
  0x000000010f80e5f4: mov    %r10,0x1e0(%r15)
  0x000000010f80e5fb: test   %rax,%rax
  0x000000010f80e5fe: je     0x000000010f80e607
  0x000000010f80e604: mov    (%rax),%rax
  0x000000010f80e607: mov    0x38(%r15),%rcx
  0x000000010f80e60b: movl   $0x0,0x100(%rcx)
  0x000000010f80e615: leaveq 
  0x000000010f80e616: cmpq   $0x0,0x8(%r15)
  0x000000010f80e61e: jne    0x000000010f80e625
  0x000000010f80e624: retq   
  0x000000010f80e625: jmpq   Stub::forward exception  ;   {runtime_call}
  0x000000010f80e62a: mov    %rax,-0x8(%rbp)
  0x000000010f80e62e: mov    %rsp,%r12
  0x000000010f80e631: sub    $0x0,%rsp
  0x000000010f80e635: and    $0xfffffffffffffff0,%rsp
  0x000000010f80e639: callq  0x00000001094ead1c  ;   {runtime_call}
  0x000000010f80e63e: mov    %r12,%rsp
  0x000000010f80e641: xor    %r12,%r12
  0x000000010f80e644: mov    -0x8(%rbp),%rax
  0x000000010f80e648: jmpq   0x000000010f80e594
  0x000000010f80e64d: hlt    
  0x000000010f80e64e: hlt    
  0x000000010f80e64f: hlt    
Decoding compiled method 0x000000010f80e690:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ea656e8} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/Object'
  # this:     rsi:rsi   = 'java/lang/Object'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x000000010f80e800: mov    0x8(%rsi),%r10d
  0x000000010f80e804: shl    $0x3,%r10
  0x000000010f80e808: cmp    %rax,%r10
  0x000000010f80e80b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f80e811: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f80e81c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f80e820: mov    %eax,-0x14000(%rsp)
  0x000000010f80e827: push   %rbp
  0x000000010f80e828: sub    $0x30,%rsp
  0x000000010f80e82c: movabs $0x10eda4d20,%rax  ;   {metadata(method data for {method} {0x000000010ea656e8} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/Object')}
  0x000000010f80e836: mov    0xdc(%rax),%edi
  0x000000010f80e83c: add    $0x8,%edi
  0x000000010f80e83f: mov    %edi,0xdc(%rax)
  0x000000010f80e845: movabs $0x10ea656e8,%rax  ;   {metadata({method} {0x000000010ea656e8} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/Object')}
  0x000000010f80e84f: and    $0x1ff8,%edi
  0x000000010f80e855: cmp    $0x0,%edi
  0x000000010f80e858: je     0x000000010f80e8c5  ;*aload_0
                                                ; - java.lang.Object::equals@0 (line 149)

  0x000000010f80e85e: cmp    %rdx,%rsi
  0x000000010f80e861: movabs $0x10eda4d20,%rax  ;   {metadata(method data for {method} {0x000000010ea656e8} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/Object')}
  0x000000010f80e86b: movabs $0x108,%rsi
  0x000000010f80e875: jne    0x000000010f80e885
  0x000000010f80e87b: movabs $0x118,%rsi
  0x000000010f80e885: mov    (%rax,%rsi,1),%rdi
  0x000000010f80e889: lea    0x1(%rdi),%rdi
  0x000000010f80e88d: mov    %rdi,(%rax,%rsi,1)
  0x000000010f80e891: jne    0x000000010f80e8b1  ;*if_acmpne
                                                ; - java.lang.Object::equals@2 (line 149)

  0x000000010f80e897: movabs $0x10eda4d20,%rax  ;   {metadata(method data for {method} {0x000000010ea656e8} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/Object')}
  0x000000010f80e8a1: incl   0x128(%rax)
  0x000000010f80e8a7: mov    $0x1,%eax
  0x000000010f80e8ac: jmpq   0x000000010f80e8b6  ;*goto
                                                ; - java.lang.Object::equals@6 (line 149)

  0x000000010f80e8b1: mov    $0x0,%eax          ;*ireturn
                                                ; - java.lang.Object::equals@10 (line 149)

  0x000000010f80e8b6: and    $0x1,%eax
  0x000000010f80e8b9: add    $0x30,%rsp
  0x000000010f80e8bd: pop    %rbp
  0x000000010f80e8be: test   %eax,-0x8d737c4(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f80e8c4: retq   
  0x000000010f80e8c5: mov    %rax,0x8(%rsp)
  0x000000010f80e8ca: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f80e8d2: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop rdx=Oop off=215}
                                                ;*synchronization entry
                                                ; - java.lang.Object::equals@-1 (line 149)
                                                ;   {runtime_call}
  0x000000010f80e8d7: jmp    0x000000010f80e85e
  0x000000010f80e8d9: nop
  0x000000010f80e8da: nop
  0x000000010f80e8db: mov    0x2a8(%r15),%rax
  0x000000010f80e8e2: movabs $0x0,%r10
  0x000000010f80e8ec: mov    %r10,0x2a8(%r15)
  0x000000010f80e8f3: movabs $0x0,%r10
  0x000000010f80e8fd: mov    %r10,0x2b0(%r15)
  0x000000010f80e904: add    $0x30,%rsp
  0x000000010f80e908: pop    %rbp
  0x000000010f80e909: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f80e90e: hlt    
  0x000000010f80e90f: hlt    
  0x000000010f80e910: hlt    
  0x000000010f80e911: hlt    
  0x000000010f80e912: hlt    
  0x000000010f80e913: hlt    
  0x000000010f80e914: hlt    
  0x000000010f80e915: hlt    
  0x000000010f80e916: hlt    
  0x000000010f80e917: hlt    
  0x000000010f80e918: hlt    
  0x000000010f80e919: hlt    
  0x000000010f80e91a: hlt    
  0x000000010f80e91b: hlt    
  0x000000010f80e91c: hlt    
  0x000000010f80e91d: hlt    
  0x000000010f80e91e: hlt    
  0x000000010f80e91f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f80e920: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f80e925: mov    %rsp,-0x28(%rsp)
  0x000000010f80e92a: sub    $0x80,%rsp
  0x000000010f80e931: mov    %rax,0x78(%rsp)
  0x000000010f80e936: mov    %rcx,0x70(%rsp)
  0x000000010f80e93b: mov    %rdx,0x68(%rsp)
  0x000000010f80e940: mov    %rbx,0x60(%rsp)
  0x000000010f80e945: mov    %rbp,0x50(%rsp)
  0x000000010f80e94a: mov    %rsi,0x48(%rsp)
  0x000000010f80e94f: mov    %rdi,0x40(%rsp)
  0x000000010f80e954: mov    %r8,0x38(%rsp)
  0x000000010f80e959: mov    %r9,0x30(%rsp)
  0x000000010f80e95e: mov    %r10,0x28(%rsp)
  0x000000010f80e963: mov    %r11,0x20(%rsp)
  0x000000010f80e968: mov    %r12,0x18(%rsp)
  0x000000010f80e96d: mov    %r13,0x10(%rsp)
  0x000000010f80e972: mov    %r14,0x8(%rsp)
  0x000000010f80e977: mov    %r15,(%rsp)
  0x000000010f80e97b: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f80e985: movabs $0x10f80e925,%rsi  ;   {internal_word}
  0x000000010f80e98f: mov    %rsp,%rdx
  0x000000010f80e992: and    $0xfffffffffffffff0,%rsp
  0x000000010f80e996: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f80e99b: hlt    
[Deopt Handler Code]
  0x000000010f80e99c: movabs $0x10f80e99c,%r10  ;   {section_word}
  0x000000010f80e9a6: push   %r10
  0x000000010f80e9a8: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f80e9ad: hlt    
  0x000000010f80e9ae: hlt    
  0x000000010f80e9af: hlt    
Decoding compiled method 0x000000010f80ea90:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010eacb3a0} 'argument' '(ILjava/lang/invoke/LambdaForm$BasicType;)Ljava/lang/invoke/LambdaForm$Name;' in 'java/lang/invoke/LambdaForm'
  # parm0:    rsi       = int
  # parm1:    rdx:rdx   = 'java/lang/invoke/LambdaForm$BasicType'
  #           [sp+0x80]  (sp of caller)
  0x000000010f80ec20: mov    %eax,-0x14000(%rsp)
  0x000000010f80ec27: push   %rbp
  0x000000010f80ec28: sub    $0x70,%rsp
  0x000000010f80ec2c: mov    %rsi,%rbx
  0x000000010f80ec2f: mov    %rdx,%r8
  0x000000010f80ec32: movabs $0x10eda4fc0,%rdx  ;   {metadata(method data for {method} {0x000000010eacb3a0} 'argument' '(ILjava/lang/invoke/LambdaForm$BasicType;)Ljava/lang/invoke/LambdaForm$Name;' in 'java/lang/invoke/LambdaForm')}
  0x000000010f80ec3c: mov    0xdc(%rdx),%esi
  0x000000010f80ec42: add    $0x8,%esi
  0x000000010f80ec45: mov    %esi,0xdc(%rdx)
  0x000000010f80ec4b: movabs $0x10eacb3a0,%rdx  ;   {metadata({method} {0x000000010eacb3a0} 'argument' '(ILjava/lang/invoke/LambdaForm$BasicType;)Ljava/lang/invoke/LambdaForm$Name;' in 'java/lang/invoke/LambdaForm')}
  0x000000010f80ec55: and    $0x1ff8,%esi
  0x000000010f80ec5b: cmp    $0x0,%esi
  0x000000010f80ec5e: je     0x000000010f80ee52  ;*iload_0
                                                ; - java.lang.invoke.LambdaForm::argument@0 (line 1647)

  0x000000010f80ec64: cmp    $0xa,%ebx
  0x000000010f80ec67: movabs $0x10eda4fc0,%rdx  ;   {metadata(method data for {method} {0x000000010eacb3a0} 'argument' '(ILjava/lang/invoke/LambdaForm$BasicType;)Ljava/lang/invoke/LambdaForm$Name;' in 'java/lang/invoke/LambdaForm')}
  0x000000010f80ec71: movabs $0x108,%rsi
  0x000000010f80ec7b: jl     0x000000010f80ec8b
  0x000000010f80ec81: movabs $0x118,%rsi
  0x000000010f80ec8b: mov    (%rdx,%rsi,1),%rdi
  0x000000010f80ec8f: lea    0x1(%rdi),%rdi
  0x000000010f80ec93: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f80ec97: jl     0x000000010f80ed7d  ;*if_icmplt
                                                ; - java.lang.invoke.LambdaForm::argument@3 (line 1647)

  0x000000010f80ec9d: movabs $0x7c005a280,%rdx  ;   {metadata('java/lang/invoke/LambdaForm$Name')}
  0x000000010f80eca7: mov    0x60(%r15),%rax
  0x000000010f80ecab: lea    0x20(%rax),%rdi
  0x000000010f80ecaf: cmp    0x70(%r15),%rdi
  0x000000010f80ecb3: ja     0x000000010f80ee69
  0x000000010f80ecb9: mov    %rdi,0x60(%r15)
  0x000000010f80ecbd: mov    0xa8(%rdx),%rcx
  0x000000010f80ecc4: mov    %rcx,(%rax)
  0x000000010f80ecc7: mov    %rdx,%rcx
  0x000000010f80ecca: shr    $0x3,%rcx
  0x000000010f80ecce: mov    %ecx,0x8(%rax)
  0x000000010f80ecd1: xor    %rcx,%rcx
  0x000000010f80ecd4: mov    %ecx,0xc(%rax)
  0x000000010f80ecd7: xor    %rcx,%rcx
  0x000000010f80ecda: mov    %rcx,0x10(%rax)
  0x000000010f80ecde: mov    %rcx,0x18(%rax)    ;*new  ; - java.lang.invoke.LambdaForm::argument@6 (line 1648)

  0x000000010f80ece2: mov    %rax,%rdx
  0x000000010f80ece5: movabs $0x10eda4fc0,%rcx  ;   {metadata(method data for {method} {0x000000010eacb3a0} 'argument' '(ILjava/lang/invoke/LambdaForm$BasicType;)Ljava/lang/invoke/LambdaForm$Name;' in 'java/lang/invoke/LambdaForm')}
  0x000000010f80ecef: addq   $0x1,0x128(%rcx)
  0x000000010f80ecf7: movabs $0x10eda5170,%rdx  ;   {metadata(method data for {method} {0x000000010ed50440} '<init>' '(ILjava/lang/invoke/LambdaForm$BasicType;)V' in 'java/lang/invoke/LambdaForm$Name')}
  0x000000010f80ed01: mov    0xdc(%rdx),%ecx
  0x000000010f80ed07: add    $0x8,%ecx
  0x000000010f80ed0a: mov    %ecx,0xdc(%rdx)
  0x000000010f80ed10: movabs $0x10ed50440,%rdx  ;   {metadata({method} {0x000000010ed50440} '<init>' '(ILjava/lang/invoke/LambdaForm$BasicType;)V' in 'java/lang/invoke/LambdaForm$Name')}
  0x000000010f80ed1a: and    $0x7ffff8,%ecx
  0x000000010f80ed20: cmp    $0x0,%ecx
  0x000000010f80ed23: je     0x000000010f80ee76
  0x000000010f80ed29: mov    %rax,%rdx
  0x000000010f80ed2c: movabs $0x10eda5170,%rcx  ;   {metadata(method data for {method} {0x000000010ed50440} '<init>' '(ILjava/lang/invoke/LambdaForm$BasicType;)V' in 'java/lang/invoke/LambdaForm$Name')}
  0x000000010f80ed36: addq   $0x1,0x108(%rcx)
  0x000000010f80ed3e: mov    %rbx,%rdx
  0x000000010f80ed41: mov    %r8,%rcx
  0x000000010f80ed44: movabs $0x0,%r8           ;   {oop(NULL)}
  0x000000010f80ed4e: movabs $0x0,%r9           ;   {oop(NULL)}
  0x000000010f80ed58: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.invoke.LambdaForm$Name::<init>@5 (line 1414)
                                                ; - java.lang.invoke.LambdaForm::argument@12 (line 1648)

  0x000000010f80ed5b: mov    %rax,0x58(%rsp)
  0x000000010f80ed60: nop
  0x000000010f80ed61: nop
  0x000000010f80ed62: nop
  0x000000010f80ed63: nop
  0x000000010f80ed64: nop
  0x000000010f80ed65: nop
  0x000000010f80ed66: nop
  0x000000010f80ed67: callq  0x000000010f7170a0  ; OopMap{[88]=Oop off=332}
                                                ;*invokespecial <init>
                                                ; - java.lang.invoke.LambdaForm$Name::<init>@5 (line 1414)
                                                ; - java.lang.invoke.LambdaForm::argument@12 (line 1648)
                                                ;   {optimized virtual_call}
  0x000000010f80ed6c: mov    0x58(%rsp),%rax
  0x000000010f80ed71: add    $0x70,%rsp
  0x000000010f80ed75: pop    %rbp
  0x000000010f80ed76: test   %eax,-0x8d73c7c(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f80ed7c: retq                      ;*areturn
                                                ; - java.lang.invoke.LambdaForm::argument@15 (line 1648)

  0x000000010f80ed7d: cmp    (%r8),%rax         ;*invokevirtual ordinal
                                                ; - java.lang.invoke.LambdaForm::argument@20 (line 1649)
                                                ; implicit exception: dispatches to 0x000000010f80ee8d
  0x000000010f80ed80: mov    %r8,%rax
  0x000000010f80ed83: movabs $0x10eda4fc0,%rsi  ;   {metadata(method data for {method} {0x000000010eacb3a0} 'argument' '(ILjava/lang/invoke/LambdaForm$BasicType;)Ljava/lang/invoke/LambdaForm$Name;' in 'java/lang/invoke/LambdaForm')}
  0x000000010f80ed8d: mov    0x8(%rax),%eax
  0x000000010f80ed90: shl    $0x3,%rax
  0x000000010f80ed94: cmp    0x140(%rsi),%rax
  0x000000010f80ed9b: jne    0x000000010f80edaa
  0x000000010f80ed9d: addq   $0x1,0x148(%rsi)
  0x000000010f80eda5: jmpq   0x000000010f80ee10
  0x000000010f80edaa: cmp    0x150(%rsi),%rax
  0x000000010f80edb1: jne    0x000000010f80edc0
  0x000000010f80edb3: addq   $0x1,0x158(%rsi)
  0x000000010f80edbb: jmpq   0x000000010f80ee10
  0x000000010f80edc0: cmpq   $0x0,0x140(%rsi)
  0x000000010f80edcb: jne    0x000000010f80ede4
  0x000000010f80edcd: mov    %rax,0x140(%rsi)
  0x000000010f80edd4: movq   $0x1,0x148(%rsi)
  0x000000010f80eddf: jmpq   0x000000010f80ee10
  0x000000010f80ede4: cmpq   $0x0,0x150(%rsi)
  0x000000010f80edef: jne    0x000000010f80ee08
  0x000000010f80edf1: mov    %rax,0x150(%rsi)
  0x000000010f80edf8: movq   $0x1,0x158(%rsi)
  0x000000010f80ee03: jmpq   0x000000010f80ee10
  0x000000010f80ee08: addq   $0x1,0x138(%rsi)
  0x000000010f80ee10: mov    0xc(%r8),%eax      ;*getfield ordinal
                                                ; - java.lang.Enum::ordinal@1 (line 103)
                                                ; - java.lang.invoke.LambdaForm::argument@20 (line 1649)

  0x000000010f80ee14: movabs $0x79588edb0,%rsi  ;   {oop(a 'java/lang/invoke/LambdaForm$Name'[][5] )}
  0x000000010f80ee1e: movslq %eax,%rdi
  0x000000010f80ee21: cmp    0xc(%rsi),%eax     ; implicit exception: dispatches to 0x000000010f80ee92
  0x000000010f80ee24: jae    0x000000010f80ee9c
  0x000000010f80ee2a: mov    0x10(%rsi,%rdi,4),%eax
  0x000000010f80ee2e: shl    $0x3,%rax          ;*aaload
                                                ; - java.lang.invoke.LambdaForm::argument@23 (line 1649)

  0x000000010f80ee32: movslq %ebx,%rsi
  0x000000010f80ee35: cmp    0xc(%rax),%ebx     ; implicit exception: dispatches to 0x000000010f80eea5
  0x000000010f80ee38: jae    0x000000010f80eeaf
  0x000000010f80ee3e: mov    0x10(%rax,%rsi,4),%eax
  0x000000010f80ee42: shl    $0x3,%rax          ;*aaload
                                                ; - java.lang.invoke.LambdaForm::argument@25 (line 1649)

  0x000000010f80ee46: add    $0x70,%rsp
  0x000000010f80ee4a: pop    %rbp
  0x000000010f80ee4b: test   %eax,-0x8d73d51(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f80ee51: retq   
  0x000000010f80ee52: mov    %rdx,0x8(%rsp)
  0x000000010f80ee57: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f80ee5f: callq  0x000000010f7d1a20  ; OopMap{r8=Oop off=580}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.LambdaForm::argument@-1 (line 1647)
                                                ;   {runtime_call}
  0x000000010f80ee64: jmpq   0x000000010f80ec64
  0x000000010f80ee69: mov    %rdx,%rdx
  0x000000010f80ee6c: callq  0x000000010f7cd820  ; OopMap{r8=Oop off=593}
                                                ;*new  ; - java.lang.invoke.LambdaForm::argument@6 (line 1648)
                                                ;   {runtime_call}
  0x000000010f80ee71: jmpq   0x000000010f80ece2
  0x000000010f80ee76: mov    %rdx,0x8(%rsp)
  0x000000010f80ee7b: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f80ee83: callq  0x000000010f7d1a20  ; OopMap{r8=Oop rax=Oop off=616}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.LambdaForm$Name::<init>@-1 (line 1414)
                                                ; - java.lang.invoke.LambdaForm::argument@12 (line 1648)
                                                ;   {runtime_call}
  0x000000010f80ee88: jmpq   0x000000010f80ed29
  0x000000010f80ee8d: callq  0x000000010f7cd0c0  ; OopMap{r8=Oop off=626}
                                                ;*invokevirtual ordinal
                                                ; - java.lang.invoke.LambdaForm::argument@20 (line 1649)
                                                ;   {runtime_call}
  0x000000010f80ee92: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop off=631}
                                                ;*aaload
                                                ; - java.lang.invoke.LambdaForm::argument@23 (line 1649)
                                                ;   {runtime_call}
  0x000000010f80ee97: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop off=636}
                                                ;*aaload
                                                ; - java.lang.invoke.LambdaForm::argument@23 (line 1649)
                                                ;   {runtime_call}
  0x000000010f80ee9c: mov    %rax,(%rsp)
  0x000000010f80eea0: callq  0x000000010f7cca00  ; OopMap{rsi=Oop off=645}
                                                ;*aaload
                                                ; - java.lang.invoke.LambdaForm::argument@23 (line 1649)
                                                ;   {runtime_call}
  0x000000010f80eea5: callq  0x000000010f7cd0c0  ; OopMap{rax=Oop off=650}
                                                ;*aaload
                                                ; - java.lang.invoke.LambdaForm::argument@25 (line 1649)
                                                ;   {runtime_call}
  0x000000010f80eeaa: callq  0x000000010f7cd0c0  ; OopMap{rax=Oop off=655}
                                                ;*aaload
                                                ; - java.lang.invoke.LambdaForm::argument@25 (line 1649)
                                                ;   {runtime_call}
  0x000000010f80eeaf: mov    %rbx,(%rsp)
  0x000000010f80eeb3: callq  0x000000010f7cca00  ; OopMap{rax=Oop off=664}
                                                ;*aaload
                                                ; - java.lang.invoke.LambdaForm::argument@25 (line 1649)
                                                ;   {runtime_call}
  0x000000010f80eeb8: nop
  0x000000010f80eeb9: nop
  0x000000010f80eeba: mov    0x2a8(%r15),%rax
  0x000000010f80eec1: movabs $0x0,%r10
  0x000000010f80eecb: mov    %r10,0x2a8(%r15)
  0x000000010f80eed2: movabs $0x0,%r10
  0x000000010f80eedc: mov    %r10,0x2b0(%r15)
  0x000000010f80eee3: add    $0x70,%rsp
  0x000000010f80eee7: pop    %rbp
  0x000000010f80eee8: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f80eeed: hlt    
  0x000000010f80eeee: hlt    
  0x000000010f80eeef: hlt    
  0x000000010f80eef0: hlt    
  0x000000010f80eef1: hlt    
  0x000000010f80eef2: hlt    
  0x000000010f80eef3: hlt    
  0x000000010f80eef4: hlt    
  0x000000010f80eef5: hlt    
  0x000000010f80eef6: hlt    
  0x000000010f80eef7: hlt    
  0x000000010f80eef8: hlt    
  0x000000010f80eef9: hlt    
  0x000000010f80eefa: hlt    
  0x000000010f80eefb: hlt    
  0x000000010f80eefc: hlt    
  0x000000010f80eefd: hlt    
  0x000000010f80eefe: hlt    
  0x000000010f80eeff: hlt    
[Stub Code]
  0x000000010f80ef00: nop                       ;   {no_reloc}
  0x000000010f80ef01: nop
  0x000000010f80ef02: nop
  0x000000010f80ef03: nop
  0x000000010f80ef04: nop
  0x000000010f80ef05: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f80ef0f: jmpq   0x000000010f80ef0f  ;   {runtime_call}
[Exception Handler]
  0x000000010f80ef14: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f80ef19: mov    %rsp,-0x28(%rsp)
  0x000000010f80ef1e: sub    $0x80,%rsp
  0x000000010f80ef25: mov    %rax,0x78(%rsp)
  0x000000010f80ef2a: mov    %rcx,0x70(%rsp)
  0x000000010f80ef2f: mov    %rdx,0x68(%rsp)
  0x000000010f80ef34: mov    %rbx,0x60(%rsp)
  0x000000010f80ef39: mov    %rbp,0x50(%rsp)
  0x000000010f80ef3e: mov    %rsi,0x48(%rsp)
  0x000000010f80ef43: mov    %rdi,0x40(%rsp)
  0x000000010f80ef48: mov    %r8,0x38(%rsp)
  0x000000010f80ef4d: mov    %r9,0x30(%rsp)
  0x000000010f80ef52: mov    %r10,0x28(%rsp)
  0x000000010f80ef57: mov    %r11,0x20(%rsp)
  0x000000010f80ef5c: mov    %r12,0x18(%rsp)
  0x000000010f80ef61: mov    %r13,0x10(%rsp)
  0x000000010f80ef66: mov    %r14,0x8(%rsp)
  0x000000010f80ef6b: mov    %r15,(%rsp)
  0x000000010f80ef6f: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f80ef79: movabs $0x10f80ef19,%rsi  ;   {internal_word}
  0x000000010f80ef83: mov    %rsp,%rdx
  0x000000010f80ef86: and    $0xfffffffffffffff0,%rsp
  0x000000010f80ef8a: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f80ef8f: hlt    
[Deopt Handler Code]
  0x000000010f80ef90: movabs $0x10f80ef90,%r10  ;   {section_word}
  0x000000010f80ef9a: push   %r10
  0x000000010f80ef9c: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f80efa1: hlt    
  0x000000010f80efa2: hlt    
  0x000000010f80efa3: hlt    
  0x000000010f80efa4: hlt    
  0x000000010f80efa5: hlt    
  0x000000010f80efa6: hlt    
  0x000000010f80efa7: hlt    
Decoding compiled method 0x000000010f80f210:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000010eda5500} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8:r8     = 'java/lang/Object'
  # parm4:    r9:r9     = 'java/lang/Object'
  # parm5:    rdi:rdi   = 'java/lang/Object'
  # parm6:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm7:    [sp+0x8]   = 'java/lang/Object'
  # parm8:    [sp+0x10]   = 'java/lang/invoke/MemberName'
  0x000000010f80f340: mov    0x18(%rsp),%rbx
  0x000000010f80f345: cmp    (%rsi),%rax
  0x000000010f80f348: mov    0x18(%rbx),%rbx
  0x000000010f80f34c: test   %rbx,%rbx
  0x000000010f80f34f: je     0x000000010f80f358
  0x000000010f80f355: jmpq   *0x40(%rbx)
  0x000000010f80f358: jmpq   0x000000010f6d61a0  ;   {runtime_call}
  0x000000010f80f35d: hlt    
  0x000000010f80f35e: hlt    
  0x000000010f80f35f: hlt    
Decoding compiled method 0x000000010f80f390:
Code:
[Entry Point]
  # {method} {0x000000010ea65778} 'clone' '()Ljava/lang/Object;' in 'java/lang/Object'
  #           [sp+0x50]  (sp of caller)
  0x000000010f80f500: mov    0x8(%rsi),%r10d
  0x000000010f80f504: shl    $0x3,%r10
  0x000000010f80f508: cmp    %r10,%rax
  0x000000010f80f50b: je     0x000000010f80f518
  0x000000010f80f511: jmpq   0x000000010f716e60  ;   {runtime_call}
  0x000000010f80f516: xchg   %ax,%ax
[Verified Entry Point]
  0x000000010f80f518: mov    %eax,-0x14000(%rsp)
  0x000000010f80f51f: push   %rbp
  0x000000010f80f520: mov    %rsp,%rbp
  0x000000010f80f523: sub    $0x40,%rsp
  0x000000010f80f527: mov    %rsi,(%rsp)
  0x000000010f80f52b: cmp    $0x0,%rsi
  0x000000010f80f52f: lea    (%rsp),%rsi
  0x000000010f80f533: cmove  (%rsp),%rsi        ; OopMap{[0]=Oop off=56}
  0x000000010f80f538: movabs $0x10f80f538,%r10  ;   {section_word}
  0x000000010f80f542: mov    %r10,0x1e0(%r15)
  0x000000010f80f549: mov    %rsp,0x1d8(%r15)
  0x000000010f80f550: cmpb   $0x0,-0x5f1d19d(%rip)        # 0x00000001098f23ba
                                                ;   {external_word}
  0x000000010f80f557: je     0x000000010f80f58f
  0x000000010f80f55d: push   %rsi
  0x000000010f80f55e: movabs $0x10ea65778,%rsi  ;   {metadata({method} {0x000000010ea65778} 'clone' '()Ljava/lang/Object;' in 'java/lang/Object')}
  0x000000010f80f568: mov    %r15,%rdi
  0x000000010f80f56b: test   $0xf,%esp
  0x000000010f80f571: je     0x000000010f80f589
  0x000000010f80f577: sub    $0x8,%rsp
  0x000000010f80f57b: callq  0x00000001094ed064  ;   {runtime_call}
  0x000000010f80f580: add    $0x8,%rsp
  0x000000010f80f584: jmpq   0x000000010f80f58e
  0x000000010f80f589: callq  0x00000001094ed064  ;   {runtime_call}
  0x000000010f80f58e: pop    %rsi
  0x000000010f80f58f: lea    0x1f8(%r15),%rdi
  0x000000010f80f596: movl   $0x4,0x270(%r15)
  0x000000010f80f5a1: callq  0x00000001093524cb  ;   {runtime_call}
  0x000000010f80f5a6: vzeroupper 
  0x000000010f80f5a9: movl   $0x5,0x270(%r15)
  0x000000010f80f5b4: lock addl $0x0,(%rsp)
  0x000000010f80f5b9: cmpl   $0x0,-0x5f12853(%rip)        # 0x00000001098fcd70
                                                ;   {external_word}
  0x000000010f80f5c3: jne    0x000000010f80f5d7
  0x000000010f80f5c9: cmpl   $0x0,0x30(%r15)
  0x000000010f80f5d1: je     0x000000010f80f5f8
  0x000000010f80f5d7: mov    %rax,-0x8(%rbp)
  0x000000010f80f5db: mov    %r15,%rdi
  0x000000010f80f5de: mov    %rsp,%r12
  0x000000010f80f5e1: sub    $0x0,%rsp
  0x000000010f80f5e5: and    $0xfffffffffffffff0,%rsp
  0x000000010f80f5e9: callq  0x000000010956fe1e  ;   {runtime_call}
  0x000000010f80f5ee: mov    %r12,%rsp
  0x000000010f80f5f1: xor    %r12,%r12
  0x000000010f80f5f4: mov    -0x8(%rbp),%rax
  0x000000010f80f5f8: movl   $0x8,0x270(%r15)
  0x000000010f80f603: cmpl   $0x1,0x29c(%r15)
  0x000000010f80f60e: je     0x000000010f80f6aa
  0x000000010f80f614: cmpb   $0x0,-0x5f1d261(%rip)        # 0x00000001098f23ba
                                                ;   {external_word}
  0x000000010f80f61b: je     0x000000010f80f659
  0x000000010f80f621: mov    %rax,-0x8(%rbp)
  0x000000010f80f625: movabs $0x10ea65778,%rsi  ;   {metadata({method} {0x000000010ea65778} 'clone' '()Ljava/lang/Object;' in 'java/lang/Object')}
  0x000000010f80f62f: mov    %r15,%rdi
  0x000000010f80f632: test   $0xf,%esp
  0x000000010f80f638: je     0x000000010f80f650
  0x000000010f80f63e: sub    $0x8,%rsp
  0x000000010f80f642: callq  0x00000001094ecfd6  ;   {runtime_call}
  0x000000010f80f647: add    $0x8,%rsp
  0x000000010f80f64b: jmpq   0x000000010f80f655
  0x000000010f80f650: callq  0x00000001094ecfd6  ;   {runtime_call}
  0x000000010f80f655: mov    -0x8(%rbp),%rax
  0x000000010f80f659: movabs $0x0,%r10
  0x000000010f80f663: mov    %r10,0x1d8(%r15)
  0x000000010f80f66a: movabs $0x0,%r10
  0x000000010f80f674: mov    %r10,0x1e0(%r15)
  0x000000010f80f67b: test   %rax,%rax
  0x000000010f80f67e: je     0x000000010f80f687
  0x000000010f80f684: mov    (%rax),%rax
  0x000000010f80f687: mov    0x38(%r15),%rcx
  0x000000010f80f68b: movl   $0x0,0x100(%rcx)
  0x000000010f80f695: leaveq 
  0x000000010f80f696: cmpq   $0x0,0x8(%r15)
  0x000000010f80f69e: jne    0x000000010f80f6a5
  0x000000010f80f6a4: retq   
  0x000000010f80f6a5: jmpq   Stub::forward exception  ;   {runtime_call}
  0x000000010f80f6aa: mov    %rax,-0x8(%rbp)
  0x000000010f80f6ae: mov    %rsp,%r12
  0x000000010f80f6b1: sub    $0x0,%rsp
  0x000000010f80f6b5: and    $0xfffffffffffffff0,%rsp
  0x000000010f80f6b9: callq  0x00000001094ead1c  ;   {runtime_call}
  0x000000010f80f6be: mov    %r12,%rsp
  0x000000010f80f6c1: xor    %r12,%r12
  0x000000010f80f6c4: mov    -0x8(%rbp),%rax
  0x000000010f80f6c8: jmpq   0x000000010f80f614
  0x000000010f80f6cd: hlt    
  0x000000010f80f6ce: hlt    
  0x000000010f80f6cf: hlt    
Decoding compiled method 0x000000010f80f710:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010eace698} 'checkPtype' '(Ljava/lang/Class;)V' in 'java/lang/invoke/MethodType'
  # parm0:    rsi:rsi   = 'java/lang/Class'
  #           [sp+0x70]  (sp of caller)
  0x000000010f80f8c0: mov    %eax,-0x14000(%rsp)
  0x000000010f80f8c7: push   %rbp
  0x000000010f80f8c8: sub    $0x60,%rsp
  0x000000010f80f8cc: movabs $0x10eda5568,%rdx  ;   {metadata(method data for {method} {0x000000010eace698} 'checkPtype' '(Ljava/lang/Class;)V' in 'java/lang/invoke/MethodType')}
  0x000000010f80f8d6: mov    0xdc(%rdx),%edi
  0x000000010f80f8dc: add    $0x8,%edi
  0x000000010f80f8df: mov    %edi,0xdc(%rdx)
  0x000000010f80f8e5: movabs $0x10eace698,%rdx  ;   {metadata({method} {0x000000010eace698} 'checkPtype' '(Ljava/lang/Class;)V' in 'java/lang/invoke/MethodType')}
  0x000000010f80f8ef: and    $0x1ff8,%edi
  0x000000010f80f8f5: cmp    $0x0,%edi
  0x000000010f80f8f8: je     0x000000010f80fb0e  ;*aload_0
                                                ; - java.lang.invoke.MethodType::checkPtype@0 (line 165)

  0x000000010f80f8fe: movabs $0x10eda5568,%rdx  ;   {metadata(method data for {method} {0x000000010eace698} 'checkPtype' '(Ljava/lang/Class;)V' in 'java/lang/invoke/MethodType')}
  0x000000010f80f908: addq   $0x1,0x108(%rdx)
  0x000000010f80f910: movabs $0x10eda3d60,%rdx  ;   {metadata(method data for {method} {0x000000010eb97a68} 'requireNonNull' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/Objects')}
  0x000000010f80f91a: mov    0xdc(%rdx),%edi
  0x000000010f80f920: add    $0x8,%edi
  0x000000010f80f923: mov    %edi,0xdc(%rdx)
  0x000000010f80f929: movabs $0x10eb97a68,%rdx  ;   {metadata({method} {0x000000010eb97a68} 'requireNonNull' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/Objects')}
  0x000000010f80f933: and    $0x7ffff8,%edi
  0x000000010f80f939: cmp    $0x0,%edi
  0x000000010f80f93c: je     0x000000010f80fb25
  0x000000010f80f942: cmp    $0x0,%rsi
  0x000000010f80f946: movabs $0x10eda3d60,%rdx  ;   {metadata(method data for {method} {0x000000010eb97a68} 'requireNonNull' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/Objects')}
  0x000000010f80f950: movabs $0x108,%rdi
  0x000000010f80f95a: jne    0x000000010f80f96a
  0x000000010f80f960: movabs $0x118,%rdi
  0x000000010f80f96a: mov    (%rdx,%rdi,1),%rax
  0x000000010f80f96e: lea    0x1(%rax),%rax
  0x000000010f80f972: mov    %rax,(%rdx,%rdi,1)
  0x000000010f80f976: je     0x000000010f80fa8e  ;*ifnonnull
                                                ; - java.util.Objects::requireNonNull@1 (line 202)
                                                ; - java.lang.invoke.MethodType::checkPtype@1 (line 165)

  0x000000010f80f97c: movabs $0x795580350,%r10  ;   {oop(a 'java/lang/Class' = void)}
  0x000000010f80f986: cmp    %r10,%rsi
  0x000000010f80f989: movabs $0x10eda5568,%rdx  ;   {metadata(method data for {method} {0x000000010eace698} 'checkPtype' '(Ljava/lang/Class;)V' in 'java/lang/invoke/MethodType')}
  0x000000010f80f993: movabs $0x118,%rsi
  0x000000010f80f99d: jne    0x000000010f80f9ad
  0x000000010f80f9a3: movabs $0x128,%rsi
  0x000000010f80f9ad: mov    (%rdx,%rsi,1),%rdi
  0x000000010f80f9b1: lea    0x1(%rdi),%rdi
  0x000000010f80f9b5: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f80f9b9: je     0x000000010f80f9cb  ;*if_acmpne
                                                ; - java.lang.invoke.MethodType::checkPtype@9 (line 166)

  0x000000010f80f9bf: add    $0x60,%rsp
  0x000000010f80f9c3: pop    %rbp
  0x000000010f80f9c4: test   %eax,-0x8d748ca(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f80f9ca: retq                      ;*return
                                                ; - java.lang.invoke.MethodType::checkPtype@18 (line 168)

  0x000000010f80f9cb: movabs $0x10eda5568,%rdx  ;   {metadata(method data for {method} {0x000000010eace698} 'checkPtype' '(Ljava/lang/Class;)V' in 'java/lang/invoke/MethodType')}
  0x000000010f80f9d5: addq   $0x1,0x138(%rdx)
  0x000000010f80f9dd: movabs $0x10eda56f0,%rdx  ;   {metadata(method data for {method} {0x000000010ecd9338} 'newIllegalArgumentException' '(Ljava/lang/String;)Ljava/lang/RuntimeException;' in 'java/lang/invoke/MethodHandleStatics')}
  0x000000010f80f9e7: mov    0xdc(%rdx),%esi
  0x000000010f80f9ed: add    $0x8,%esi
  0x000000010f80f9f0: mov    %esi,0xdc(%rdx)
  0x000000010f80f9f6: movabs $0x10ecd9338,%rdx  ;   {metadata({method} {0x000000010ecd9338} 'newIllegalArgumentException' '(Ljava/lang/String;)Ljava/lang/RuntimeException;' in 'java/lang/invoke/MethodHandleStatics')}
  0x000000010f80fa00: and    $0x7ffff8,%esi
  0x000000010f80fa06: cmp    $0x0,%esi
  0x000000010f80fa09: je     0x000000010f80fb3c
  0x000000010f80fa0f: nop
  0x000000010f80fa10: jmpq   0x000000010f80fb62  ;   {no_reloc}
  0x000000010f80fa15: add    %al,(%rax)
  0x000000010f80fa17: add    %al,(%rax)
  0x000000010f80fa19: add    %cl,-0x75(%rcx)
  0x000000010f80fa1c: rex.RXB (bad) 
  0x000000010f80fa1e: lea    0x20(%rax),%rdi
  0x000000010f80fa22: cmp    0x70(%r15),%rdi
  0x000000010f80fa26: ja     0x000000010f80fb6c
  0x000000010f80fa2c: mov    %rdi,0x60(%r15)
  0x000000010f80fa30: mov    0xa8(%rdx),%rcx
  0x000000010f80fa37: mov    %rcx,(%rax)
  0x000000010f80fa3a: mov    %rdx,%rcx
  0x000000010f80fa3d: shr    $0x3,%rcx
  0x000000010f80fa41: mov    %ecx,0x8(%rax)
  0x000000010f80fa44: xor    %rcx,%rcx
  0x000000010f80fa47: mov    %ecx,0xc(%rax)
  0x000000010f80fa4a: xor    %rcx,%rcx
  0x000000010f80fa4d: mov    %rcx,0x10(%rax)
  0x000000010f80fa51: mov    %rcx,0x18(%rax)    ;*new  ; - java.lang.invoke.MethodHandleStatics::newIllegalArgumentException@0 (line 139)
                                                ; - java.lang.invoke.MethodType::checkPtype@14 (line 167)

  0x000000010f80fa55: mov    %rax,%rdx
  0x000000010f80fa58: movabs $0x10eda56f0,%rsi  ;   {metadata(method data for {method} {0x000000010ecd9338} 'newIllegalArgumentException' '(Ljava/lang/String;)Ljava/lang/RuntimeException;' in 'java/lang/invoke/MethodHandleStatics')}
  0x000000010f80fa62: addq   $0x1,0x108(%rsi)
  0x000000010f80fa6a: movabs $0x795968c48,%rdx  ;   {oop("parameter type cannot be void")}
  0x000000010f80fa74: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.invoke.MethodHandleStatics::newIllegalArgumentException@5 (line 139)
                                                ; - java.lang.invoke.MethodType::checkPtype@14 (line 167)

  0x000000010f80fa77: mov    %rax,0x38(%rsp)
  0x000000010f80fa7c: nop
  0x000000010f80fa7d: nop
  0x000000010f80fa7e: nop
  0x000000010f80fa7f: callq  0x000000010f7170a0  ; OopMap{[56]=Oop off=452}
                                                ;*invokespecial <init>
                                                ; - java.lang.invoke.MethodHandleStatics::newIllegalArgumentException@5 (line 139)
                                                ; - java.lang.invoke.MethodType::checkPtype@14 (line 167)
                                                ;   {optimized virtual_call}
  0x000000010f80fa84: mov    0x38(%rsp),%rax
  0x000000010f80fa89: jmpq   0x000000010f80fbca  ;*athrow
                                                ; - java.lang.invoke.MethodType::checkPtype@17 (line 167)

  0x000000010f80fa8e: mov    %rsi,0x48(%rsp)
  0x000000010f80fa93: nopl   0x0(%rax,%rax,1)
  0x000000010f80fa98: jmpq   0x000000010f80fb88  ;   {no_reloc}
  0x000000010f80fa9d: add    %al,(%rax)
  0x000000010f80fa9f: add    %al,(%rax)
  0x000000010f80faa1: add    %cl,-0x75(%rcx)
  0x000000010f80faa4: rex.RXB (bad) 
  0x000000010f80faa6: lea    0x20(%rax),%rdi
  0x000000010f80faaa: cmp    0x70(%r15),%rdi
  0x000000010f80faae: ja     0x000000010f80fb92
  0x000000010f80fab4: mov    %rdi,0x60(%r15)
  0x000000010f80fab8: mov    0xa8(%rdx),%rcx
  0x000000010f80fabf: mov    %rcx,(%rax)
  0x000000010f80fac2: mov    %rdx,%rcx
  0x000000010f80fac5: shr    $0x3,%rcx
  0x000000010f80fac9: mov    %ecx,0x8(%rax)
  0x000000010f80facc: xor    %rcx,%rcx
  0x000000010f80facf: mov    %ecx,0xc(%rax)
  0x000000010f80fad2: xor    %rcx,%rcx
  0x000000010f80fad5: mov    %rcx,0x10(%rax)
  0x000000010f80fad9: mov    %rcx,0x18(%rax)    ;*new  ; - java.util.Objects::requireNonNull@4 (line 203)
                                                ; - java.lang.invoke.MethodType::checkPtype@1 (line 165)

  0x000000010f80fadd: mov    %rax,%rsi
  0x000000010f80fae0: movabs $0x10eda3d60,%rdi  ;   {metadata(method data for {method} {0x000000010eb97a68} 'requireNonNull' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/Objects')}
  0x000000010f80faea: addq   $0x1,0x128(%rdi)
  0x000000010f80faf2: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.util.Objects::requireNonNull@8 (line 203)
                                                ; - java.lang.invoke.MethodType::checkPtype@1 (line 165)

  0x000000010f80faf5: mov    %rax,0x40(%rsp)
  0x000000010f80fafa: nop
  0x000000010f80fafb: nop
  0x000000010f80fafc: nop
  0x000000010f80fafd: nop
  0x000000010f80fafe: nop
  0x000000010f80faff: callq  0x000000010f7170a0  ; OopMap{[64]=Oop [72]=Oop off=580}
                                                ;*invokespecial <init>
                                                ; - java.util.Objects::requireNonNull@8 (line 203)
                                                ; - java.lang.invoke.MethodType::checkPtype@1 (line 165)
                                                ;   {optimized virtual_call}
  0x000000010f80fb04: mov    0x40(%rsp),%rax
  0x000000010f80fb09: jmpq   0x000000010f80fbca
  0x000000010f80fb0e: mov    %rdx,0x8(%rsp)
  0x000000010f80fb13: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f80fb1b: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=608}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MethodType::checkPtype@-1 (line 165)
                                                ;   {runtime_call}
  0x000000010f80fb20: jmpq   0x000000010f80f8fe
  0x000000010f80fb25: mov    %rdx,0x8(%rsp)
  0x000000010f80fb2a: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f80fb32: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=631}
                                                ;*synchronization entry
                                                ; - java.util.Objects::requireNonNull@-1 (line 202)
                                                ; - java.lang.invoke.MethodType::checkPtype@1 (line 165)
                                                ;   {runtime_call}
  0x000000010f80fb37: jmpq   0x000000010f80f942
  0x000000010f80fb3c: mov    %rdx,0x8(%rsp)
  0x000000010f80fb41: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f80fb49: callq  0x000000010f7d1a20  ; OopMap{off=654}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MethodHandleStatics::newIllegalArgumentException@-1 (line 139)
                                                ; - java.lang.invoke.MethodType::checkPtype@14 (line 167)
                                                ;   {runtime_call}
  0x000000010f80fb4e: jmpq   0x000000010f80fa0f
  0x000000010f80fb53: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f80fb5d: mov    $0xa050f00,%eax
  0x000000010f80fb62: callq  0x000000010f7d08e0  ; OopMap{off=679}
                                                ;*new  ; - java.lang.invoke.MethodHandleStatics::newIllegalArgumentException@0 (line 139)
                                                ; - java.lang.invoke.MethodType::checkPtype@14 (line 167)
                                                ;   {runtime_call}
  0x000000010f80fb67: jmpq   0x000000010f80fa10
  0x000000010f80fb6c: mov    %rdx,%rdx
  0x000000010f80fb6f: callq  0x000000010f7cd820  ; OopMap{off=692}
                                                ;*new  ; - java.lang.invoke.MethodHandleStatics::newIllegalArgumentException@0 (line 139)
                                                ; - java.lang.invoke.MethodType::checkPtype@14 (line 167)
                                                ;   {runtime_call}
  0x000000010f80fb74: jmpq   0x000000010f80fa55
  0x000000010f80fb79: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f80fb83: mov    $0xa050f00,%eax
  0x000000010f80fb88: callq  0x000000010f7d08e0  ; OopMap{[72]=Oop off=717}
                                                ;*new  ; - java.util.Objects::requireNonNull@4 (line 203)
                                                ; - java.lang.invoke.MethodType::checkPtype@1 (line 165)
                                                ;   {runtime_call}
  0x000000010f80fb8d: jmpq   0x000000010f80fa98
  0x000000010f80fb92: mov    %rdx,%rdx
  0x000000010f80fb95: callq  0x000000010f7cd820  ; OopMap{[72]=Oop off=730}
                                                ;*new  ; - java.util.Objects::requireNonNull@4 (line 203)
                                                ; - java.lang.invoke.MethodType::checkPtype@1 (line 165)
                                                ;   {runtime_call}
  0x000000010f80fb9a: jmpq   0x000000010f80fadd
  0x000000010f80fb9f: nop
  0x000000010f80fba0: nop
  0x000000010f80fba1: mov    0x2a8(%r15),%rax
  0x000000010f80fba8: movabs $0x0,%r10
  0x000000010f80fbb2: mov    %r10,0x2a8(%r15)
  0x000000010f80fbb9: movabs $0x0,%r10
  0x000000010f80fbc3: mov    %r10,0x2b0(%r15)
  0x000000010f80fbca: add    $0x60,%rsp
  0x000000010f80fbce: pop    %rbp
  0x000000010f80fbcf: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f80fbd4: hlt    
  0x000000010f80fbd5: hlt    
  0x000000010f80fbd6: hlt    
  0x000000010f80fbd7: hlt    
  0x000000010f80fbd8: hlt    
  0x000000010f80fbd9: hlt    
  0x000000010f80fbda: hlt    
  0x000000010f80fbdb: hlt    
  0x000000010f80fbdc: hlt    
  0x000000010f80fbdd: hlt    
  0x000000010f80fbde: hlt    
  0x000000010f80fbdf: hlt    
[Stub Code]
  0x000000010f80fbe0: nop                       ;   {no_reloc}
  0x000000010f80fbe1: nop
  0x000000010f80fbe2: nop
  0x000000010f80fbe3: nop
  0x000000010f80fbe4: nop
  0x000000010f80fbe5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f80fbef: jmpq   0x000000010f80fbef  ;   {runtime_call}
  0x000000010f80fbf4: nop
  0x000000010f80fbf5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f80fbff: jmpq   0x000000010f80fbff  ;   {runtime_call}
[Exception Handler]
  0x000000010f80fc04: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f80fc09: mov    %rsp,-0x28(%rsp)
  0x000000010f80fc0e: sub    $0x80,%rsp
  0x000000010f80fc15: mov    %rax,0x78(%rsp)
  0x000000010f80fc1a: mov    %rcx,0x70(%rsp)
  0x000000010f80fc1f: mov    %rdx,0x68(%rsp)
  0x000000010f80fc24: mov    %rbx,0x60(%rsp)
  0x000000010f80fc29: mov    %rbp,0x50(%rsp)
  0x000000010f80fc2e: mov    %rsi,0x48(%rsp)
  0x000000010f80fc33: mov    %rdi,0x40(%rsp)
  0x000000010f80fc38: mov    %r8,0x38(%rsp)
  0x000000010f80fc3d: mov    %r9,0x30(%rsp)
  0x000000010f80fc42: mov    %r10,0x28(%rsp)
  0x000000010f80fc47: mov    %r11,0x20(%rsp)
  0x000000010f80fc4c: mov    %r12,0x18(%rsp)
  0x000000010f80fc51: mov    %r13,0x10(%rsp)
  0x000000010f80fc56: mov    %r14,0x8(%rsp)
  0x000000010f80fc5b: mov    %r15,(%rsp)
  0x000000010f80fc5f: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f80fc69: movabs $0x10f80fc09,%rsi  ;   {internal_word}
  0x000000010f80fc73: mov    %rsp,%rdx
  0x000000010f80fc76: and    $0xfffffffffffffff0,%rsp
  0x000000010f80fc7a: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f80fc7f: hlt    
[Deopt Handler Code]
  0x000000010f80fc80: movabs $0x10f80fc80,%r10  ;   {section_word}
  0x000000010f80fc8a: push   %r10
  0x000000010f80fc8c: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f80fc91: hlt    
  0x000000010f80fc92: hlt    
  0x000000010f80fc93: hlt    
  0x000000010f80fc94: hlt    
  0x000000010f80fc95: hlt    
  0x000000010f80fc96: hlt    
  0x000000010f80fc97: hlt    
Decoding compiled method 0x000000010f80fed0:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000010eda6d40} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8:r8     = 'java/lang/Object'
  # parm4:    r9:r9     = 'java/lang/Object'
  # parm5:    rdi:rdi   = 'java/lang/Object'
  # parm6:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm7:    [sp+0x8]   = 'java/lang/Object'
  # parm8:    [sp+0x10]   = 'java/lang/invoke/MemberName'
  0x000000010f810000: mov    0x18(%rsp),%rbx
  0x000000010f810005: mov    0x18(%rbx),%rbx
  0x000000010f810009: test   %rbx,%rbx
  0x000000010f81000c: je     0x000000010f810015
  0x000000010f810012: jmpq   *0x40(%rbx)
  0x000000010f810015: jmpq   0x000000010f6d61a0  ;   {runtime_call}
  0x000000010f81001a: hlt    
  0x000000010f81001b: hlt    
  0x000000010f81001c: hlt    
  0x000000010f81001d: hlt    
  0x000000010f81001e: hlt    
  0x000000010f81001f: hlt    
Decoding compiled method 0x000000010f810050:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010ed30188} 'canonicalize' '(Ljava/lang/Class;I)Ljava/lang/Class;' in 'java/lang/invoke/MethodTypeForm'
  # parm0:    rsi:rsi   = 'java/lang/Class'
  # parm1:    rdx       = int
  #           [sp+0x70]  (sp of caller)
  0x000000010f8102a0: mov    %eax,-0x14000(%rsp)
  0x000000010f8102a7: push   %rbp
  0x000000010f8102a8: sub    $0x60,%rsp
  0x000000010f8102ac: mov    %rsi,0x50(%rsp)
  0x000000010f8102b1: movabs $0x10eda5820,%rdi  ;   {metadata(method data for {method} {0x000000010ed30188} 'canonicalize' '(Ljava/lang/Class;I)Ljava/lang/Class;' in 'java/lang/invoke/MethodTypeForm')}
  0x000000010f8102bb: mov    0xdc(%rdi),%ebx
  0x000000010f8102c1: add    $0x8,%ebx
  0x000000010f8102c4: mov    %ebx,0xdc(%rdi)
  0x000000010f8102ca: movabs $0x10ed30188,%rdi  ;   {metadata({method} {0x000000010ed30188} 'canonicalize' '(Ljava/lang/Class;I)Ljava/lang/Class;' in 'java/lang/invoke/MethodTypeForm')}
  0x000000010f8102d4: and    $0x1ff8,%ebx
  0x000000010f8102da: cmp    $0x0,%ebx
  0x000000010f8102dd: je     0x000000010f810c9c  ;*aload_0
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@0 (line 357)

  0x000000010f8102e3: movabs $0x7955806f8,%rdi  ;   {oop(a 'java/lang/Class' = 'java/lang/Object')}
  0x000000010f8102ed: cmp    %rdi,%rsi
  0x000000010f8102f0: movabs $0x10eda5820,%rdi  ;   {metadata(method data for {method} {0x000000010ed30188} 'canonicalize' '(Ljava/lang/Class;I)Ljava/lang/Class;' in 'java/lang/invoke/MethodTypeForm')}
  0x000000010f8102fa: movabs $0x108,%rbx
  0x000000010f810304: jne    0x000000010f810314
  0x000000010f81030a: movabs $0x118,%rbx
  0x000000010f810314: mov    (%rdi,%rbx,1),%rax
  0x000000010f810318: lea    0x1(%rax),%rax
  0x000000010f81031c: mov    %rax,(%rdi,%rbx,1)
  0x000000010f810320: je     0x000000010f810c76  ;*if_acmpne
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@3 (line 357)

  0x000000010f810326: mov    %edx,0x48(%rsp)
  0x000000010f81032a: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x000000010f810cb3
  0x000000010f81032d: mov    %rsi,%rdi
  0x000000010f810330: movabs $0x10eda5820,%rbx  ;   {metadata(method data for {method} {0x000000010ed30188} 'canonicalize' '(Ljava/lang/Class;I)Ljava/lang/Class;' in 'java/lang/invoke/MethodTypeForm')}
  0x000000010f81033a: mov    0x8(%rdi),%edi
  0x000000010f81033d: shl    $0x3,%rdi
  0x000000010f810341: cmp    0x148(%rbx),%rdi
  0x000000010f810348: jne    0x000000010f810357
  0x000000010f81034a: addq   $0x1,0x150(%rbx)
  0x000000010f810352: jmpq   0x000000010f8103bd
  0x000000010f810357: cmp    0x158(%rbx),%rdi
  0x000000010f81035e: jne    0x000000010f81036d
  0x000000010f810360: addq   $0x1,0x160(%rbx)
  0x000000010f810368: jmpq   0x000000010f8103bd
  0x000000010f81036d: cmpq   $0x0,0x148(%rbx)
  0x000000010f810378: jne    0x000000010f810391
  0x000000010f81037a: mov    %rdi,0x148(%rbx)
  0x000000010f810381: movq   $0x1,0x150(%rbx)
  0x000000010f81038c: jmpq   0x000000010f8103bd
  0x000000010f810391: cmpq   $0x0,0x158(%rbx)
  0x000000010f81039c: jne    0x000000010f8103b5
  0x000000010f81039e: mov    %rdi,0x158(%rbx)
  0x000000010f8103a5: movq   $0x1,0x160(%rbx)
  0x000000010f8103b0: jmpq   0x000000010f8103bd
  0x000000010f8103b5: addq   $0x1,0x140(%rbx)
  0x000000010f8103bd: mov    %rsi,%rdi
  0x000000010f8103c0: mov    %rdi,%rsi          ;*invokevirtual isPrimitive
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@10 (line 359)

  0x000000010f8103c3: nop
  0x000000010f8103c4: nop
  0x000000010f8103c5: nop
  0x000000010f8103c6: nop
  0x000000010f8103c7: callq  0x000000010f7170a0  ; OopMap{[80]=Oop off=300}
                                                ;*invokevirtual isPrimitive
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@10 (line 359)
                                                ;   {optimized virtual_call}
  0x000000010f8103cc: cmp    $0x0,%eax
  0x000000010f8103cf: movabs $0x10eda5820,%rsi  ;   {metadata(method data for {method} {0x000000010ed30188} 'canonicalize' '(Ljava/lang/Class;I)Ljava/lang/Class;' in 'java/lang/invoke/MethodTypeForm')}
  0x000000010f8103d9: movabs $0x170,%rdi
  0x000000010f8103e3: jne    0x000000010f8103f3
  0x000000010f8103e9: movabs $0x180,%rdi
  0x000000010f8103f3: mov    (%rsi,%rdi,1),%rbx
  0x000000010f8103f7: lea    0x1(%rbx),%rbx
  0x000000010f8103fb: mov    %rbx,(%rsi,%rdi,1)
  0x000000010f8103ff: mov    0x48(%rsp),%edx
  0x000000010f810403: jne    0x000000010f8106c0  ;*ifne
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@13 (line 359)

  0x000000010f810409: cmp    $0x1,%edx
  0x000000010f81040c: je     0x000000010f810c60
  0x000000010f810412: cmp    $0x3,%edx
  0x000000010f810415: je     0x000000010f810429
  0x000000010f81041b: cmp    $0x6,%edx
  0x000000010f81041e: je     0x000000010f810c60
  0x000000010f810424: jmpq   0x000000010f810c3f  ;*lookupswitch
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@17 (line 360)

  0x000000010f810429: movabs $0x10eda5820,%rsi  ;   {metadata(method data for {method} {0x000000010ed30188} 'canonicalize' '(Ljava/lang/Class;I)Ljava/lang/Class;' in 'java/lang/invoke/MethodTypeForm')}
  0x000000010f810433: addq   $0x1,0x1e0(%rsi)
  0x000000010f81043b: movabs $0x10eda5c88,%rsi  ;   {metadata(method data for {method} {0x000000010ed3d6e8} 'asPrimitiveType' '(Ljava/lang/Class;)Ljava/lang/Class;' in 'sun/invoke/util/Wrapper')}
  0x000000010f810445: mov    0xdc(%rsi),%edi
  0x000000010f81044b: add    $0x8,%edi
  0x000000010f81044e: mov    %edi,0xdc(%rsi)
  0x000000010f810454: movabs $0x10ed3d6e8,%rsi  ;   {metadata({method} {0x000000010ed3d6e8} 'asPrimitiveType' '(Ljava/lang/Class;)Ljava/lang/Class;' in 'sun/invoke/util/Wrapper')}
  0x000000010f81045e: and    $0x7ffff8,%edi
  0x000000010f810464: cmp    $0x0,%edi
  0x000000010f810467: je     0x000000010f810cb8
  0x000000010f81046d: movabs $0x10eda5c88,%rsi  ;   {metadata(method data for {method} {0x000000010ed3d6e8} 'asPrimitiveType' '(Ljava/lang/Class;)Ljava/lang/Class;' in 'sun/invoke/util/Wrapper')}
  0x000000010f810477: addq   $0x1,0x108(%rsi)
  0x000000010f81047f: movabs $0x10eda5e40,%rsi  ;   {metadata(method data for {method} {0x000000010ed3cf40} 'findWrapperType' '(Ljava/lang/Class;)Lsun/invoke/util/Wrapper;' in 'sun/invoke/util/Wrapper')}
  0x000000010f810489: mov    0xdc(%rsi),%edi
  0x000000010f81048f: add    $0x8,%edi
  0x000000010f810492: mov    %edi,0xdc(%rsi)
  0x000000010f810498: movabs $0x10ed3cf40,%rsi  ;   {metadata({method} {0x000000010ed3cf40} 'findWrapperType' '(Ljava/lang/Class;)Lsun/invoke/util/Wrapper;' in 'sun/invoke/util/Wrapper')}
  0x000000010f8104a2: and    $0x7ffff8,%edi
  0x000000010f8104a8: cmp    $0x0,%edi
  0x000000010f8104ab: je     0x000000010f810ccf
  0x000000010f8104b1: movabs $0x10eda5e40,%rsi  ;   {metadata(method data for {method} {0x000000010ed3cf40} 'findWrapperType' '(Ljava/lang/Class;)Lsun/invoke/util/Wrapper;' in 'sun/invoke/util/Wrapper')}
  0x000000010f8104bb: addq   $0x1,0x108(%rsi)
  0x000000010f8104c3: mov    0x50(%rsp),%rsi    ;*invokestatic hashWrap
                                                ; - sun.invoke.util.Wrapper::findWrapperType@4 (line 270)
                                                ; - sun.invoke.util.Wrapper::asPrimitiveType@1 (line 381)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@53 (line 362)

  0x000000010f8104c8: nop
  0x000000010f8104c9: nop
  0x000000010f8104ca: nop
  0x000000010f8104cb: nop
  0x000000010f8104cc: nop
  0x000000010f8104cd: nop
  0x000000010f8104ce: nop
  0x000000010f8104cf: callq  0x000000010f717520  ; OopMap{[80]=Oop off=564}
                                                ;*invokestatic hashWrap
                                                ; - sun.invoke.util.Wrapper::findWrapperType@4 (line 270)
                                                ; - sun.invoke.util.Wrapper::asPrimitiveType@1 (line 381)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@53 (line 362)
                                                ;   {static_call}
  0x000000010f8104d4: movabs $0x7958852a0,%rsi  ;   {oop(a 'sun/invoke/util/Wrapper'[16] )}
  0x000000010f8104de: movslq %eax,%rdx
  0x000000010f8104e1: cmp    0xc(%rsi),%eax     ; implicit exception: dispatches to 0x000000010f810ce6
  0x000000010f8104e4: jae    0x000000010f810cf0
  0x000000010f8104ea: mov    0x10(%rsi,%rdx,4),%esi
  0x000000010f8104ee: shl    $0x3,%rsi          ;*aaload
                                                ; - sun.invoke.util.Wrapper::findWrapperType@7 (line 270)
                                                ; - sun.invoke.util.Wrapper::asPrimitiveType@1 (line 381)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@53 (line 362)

  0x000000010f8104f2: cmp    $0x0,%rsi
  0x000000010f8104f6: movabs $0x10eda5e40,%rdx  ;   {metadata(method data for {method} {0x000000010ed3cf40} 'findWrapperType' '(Ljava/lang/Class;)Lsun/invoke/util/Wrapper;' in 'sun/invoke/util/Wrapper')}
  0x000000010f810500: movabs $0x118,%rdi
  0x000000010f81050a: je     0x000000010f81051a
  0x000000010f810510: movabs $0x128,%rdi
  0x000000010f81051a: mov    (%rdx,%rdi,1),%rbx
  0x000000010f81051e: lea    0x1(%rbx),%rbx
  0x000000010f810522: mov    %rbx,(%rdx,%rdi,1)
  0x000000010f810526: mov    0x50(%rsp),%rdi
  0x000000010f81052b: je     0x000000010f810571  ;*ifnull
                                                ; - sun.invoke.util.Wrapper::findWrapperType@10 (line 271)
                                                ; - sun.invoke.util.Wrapper::asPrimitiveType@1 (line 381)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@53 (line 362)

  0x000000010f810531: mov    0x1c(%rsi),%edx    ; implicit exception: dispatches to 0x000000010f810cf9
  0x000000010f810534: shl    $0x3,%rdx          ;*getfield wrapperType
                                                ; - sun.invoke.util.Wrapper::findWrapperType@14 (line 271)
                                                ; - sun.invoke.util.Wrapper::asPrimitiveType@1 (line 381)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@53 (line 362)

  0x000000010f810538: cmp    %rdi,%rdx
  0x000000010f81053b: movabs $0x10eda5e40,%rdx  ;   {metadata(method data for {method} {0x000000010ed3cf40} 'findWrapperType' '(Ljava/lang/Class;)Lsun/invoke/util/Wrapper;' in 'sun/invoke/util/Wrapper')}
  0x000000010f810545: movabs $0x138,%rbx
  0x000000010f81054f: jne    0x000000010f81055f
  0x000000010f810555: movabs $0x148,%rbx
  0x000000010f81055f: mov    (%rdx,%rbx,1),%rax
  0x000000010f810563: lea    0x1(%rax),%rax
  0x000000010f810567: mov    %rax,(%rdx,%rbx,1)
  0x000000010f81056b: je     0x000000010f81057b  ;*if_acmpne
                                                ; - sun.invoke.util.Wrapper::findWrapperType@18 (line 271)
                                                ; - sun.invoke.util.Wrapper::asPrimitiveType@1 (line 381)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@53 (line 362)

  0x000000010f810571: movabs $0x0,%rsi          ;*astore_1
                                                ; - sun.invoke.util.Wrapper::asPrimitiveType@4 (line 381)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@53 (line 362)
                                                ;   {oop(NULL)}
  0x000000010f81057b: cmp    $0x0,%rsi
  0x000000010f81057f: movabs $0x10eda5c88,%rdx  ;   {metadata(method data for {method} {0x000000010ed3d6e8} 'asPrimitiveType' '(Ljava/lang/Class;)Ljava/lang/Class;' in 'sun/invoke/util/Wrapper')}
  0x000000010f810589: movabs $0x118,%rbx
  0x000000010f810593: je     0x000000010f8105a3
  0x000000010f810599: movabs $0x128,%rbx
  0x000000010f8105a3: mov    (%rdx,%rbx,1),%rax
  0x000000010f8105a7: lea    0x1(%rax),%rax
  0x000000010f8105ab: mov    %rax,(%rdx,%rbx,1)
  0x000000010f8105af: je     0x000000010f810671  ;*ifnull
                                                ; - sun.invoke.util.Wrapper::asPrimitiveType@6 (line 382)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@53 (line 362)

  0x000000010f8105b5: cmp    (%rsi),%rax        ;*invokevirtual primitiveType
                                                ; - sun.invoke.util.Wrapper::asPrimitiveType@10 (line 383)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@53 (line 362)
                                                ; implicit exception: dispatches to 0x000000010f810cfe
  0x000000010f8105b8: mov    %rsi,%rdx
  0x000000010f8105bb: movabs $0x10eda5c88,%rbx  ;   {metadata(method data for {method} {0x000000010ed3d6e8} 'asPrimitiveType' '(Ljava/lang/Class;)Ljava/lang/Class;' in 'sun/invoke/util/Wrapper')}
  0x000000010f8105c5: mov    0x8(%rdx),%edx
  0x000000010f8105c8: shl    $0x3,%rdx
  0x000000010f8105cc: cmp    0x140(%rbx),%rdx
  0x000000010f8105d3: jne    0x000000010f8105e2
  0x000000010f8105d5: addq   $0x1,0x148(%rbx)
  0x000000010f8105dd: jmpq   0x000000010f810648
  0x000000010f8105e2: cmp    0x150(%rbx),%rdx
  0x000000010f8105e9: jne    0x000000010f8105f8
  0x000000010f8105eb: addq   $0x1,0x158(%rbx)
  0x000000010f8105f3: jmpq   0x000000010f810648
  0x000000010f8105f8: cmpq   $0x0,0x140(%rbx)
  0x000000010f810603: jne    0x000000010f81061c
  0x000000010f810605: mov    %rdx,0x140(%rbx)
  0x000000010f81060c: movq   $0x1,0x148(%rbx)
  0x000000010f810617: jmpq   0x000000010f810648
  0x000000010f81061c: cmpq   $0x0,0x150(%rbx)
  0x000000010f810627: jne    0x000000010f810640
  0x000000010f810629: mov    %rdx,0x150(%rbx)
  0x000000010f810630: movq   $0x1,0x158(%rbx)
  0x000000010f81063b: jmpq   0x000000010f810648
  0x000000010f810640: addq   $0x1,0x138(%rbx)
  0x000000010f810648: mov    0x20(%rsi),%esi
  0x000000010f81064b: shl    $0x3,%rsi          ;*getfield primitiveType
                                                ; - sun.invoke.util.Wrapper::primitiveType@1 (line 340)
                                                ; - sun.invoke.util.Wrapper::asPrimitiveType@10 (line 383)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@53 (line 362)

  0x000000010f81064f: movabs $0x10eda5c88,%rdx  ;   {metadata(method data for {method} {0x000000010ed3d6e8} 'asPrimitiveType' '(Ljava/lang/Class;)Ljava/lang/Class;' in 'sun/invoke/util/Wrapper')}
  0x000000010f810659: addq   $0x1,0x168(%rdx)
  0x000000010f810661: mov    %rdi,%rdx          ;*invokestatic forceType
                                                ; - sun.invoke.util.Wrapper::asPrimitiveType@14 (line 383)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@53 (line 362)

  0x000000010f810664: nop
  0x000000010f810665: nop
  0x000000010f810666: nop
  0x000000010f810667: callq  0x000000010f717520  ; OopMap{[80]=Oop off=972}
                                                ;*invokestatic forceType
                                                ; - sun.invoke.util.Wrapper::asPrimitiveType@14 (line 383)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@53 (line 362)
                                                ;   {static_call}
  0x000000010f81066c: jmpq   0x000000010f810676
  0x000000010f810671: mov    0x50(%rsp),%rax    ;*astore_2
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@56 (line 362)

  0x000000010f810676: mov    0x50(%rsp),%rsi
  0x000000010f81067b: cmp    %rsi,%rax
  0x000000010f81067e: movabs $0x10eda5820,%rsi  ;   {metadata(method data for {method} {0x000000010ed30188} 'canonicalize' '(Ljava/lang/Class;I)Ljava/lang/Class;' in 'java/lang/invoke/MethodTypeForm')}
  0x000000010f810688: movabs $0x1f0,%rdi
  0x000000010f810692: je     0x000000010f8106a2
  0x000000010f810698: movabs $0x200,%rdi
  0x000000010f8106a2: mov    (%rsi,%rdi,1),%rbx
  0x000000010f8106a6: lea    0x1(%rbx),%rbx
  0x000000010f8106aa: mov    %rbx,(%rsi,%rdi,1)
  0x000000010f8106ae: je     0x000000010f810c3f  ;*if_acmpeq
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@59 (line 363)

  0x000000010f8106b4: add    $0x60,%rsp
  0x000000010f8106b8: pop    %rbp
  0x000000010f8106b9: test   %eax,-0x8d755bf(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f8106bf: retq   
  0x000000010f8106c0: mov    0x50(%rsp),%rsi
  0x000000010f8106c5: movabs $0x795580350,%r10  ;   {oop(a 'java/lang/Class' = void)}
  0x000000010f8106cf: cmp    %r10,%rsi
  0x000000010f8106d2: movabs $0x10eda5820,%rdi  ;   {metadata(method data for {method} {0x000000010ed30188} 'canonicalize' '(Ljava/lang/Class;I)Ljava/lang/Class;' in 'java/lang/invoke/MethodTypeForm')}
  0x000000010f8106dc: movabs $0x228,%rbx
  0x000000010f8106e6: jne    0x000000010f8106f6
  0x000000010f8106ec: movabs $0x238,%rbx
  0x000000010f8106f6: mov    (%rdi,%rbx,1),%rax
  0x000000010f8106fa: lea    0x1(%rax),%rax
  0x000000010f8106fe: mov    %rax,(%rdi,%rbx,1)
  0x000000010f810702: jne    0x000000010f81071f  ;*if_acmpne
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@74 (line 369)

  0x000000010f810708: cmp    $0x2,%edx
  0x000000010f81070b: je     0x000000010f810c29
  0x000000010f810711: cmp    $0x6,%edx
  0x000000010f810714: je     0x000000010f810c13
  0x000000010f81071a: jmpq   0x000000010f810bfe  ;*lookupswitch
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@78 (line 371)

  0x000000010f81071f: cmp    $0x2,%edx
  0x000000010f810722: je     0x000000010f81096a
  0x000000010f810728: cmp    $0x4,%edx
  0x000000010f81072b: je     0x000000010f81089c
  0x000000010f810731: cmp    $0x5,%edx
  0x000000010f810734: je     0x000000010f810854
  0x000000010f81073a: cmp    $0x6,%edx
  0x000000010f81073d: jne    0x000000010f810c86  ;*tableswitch
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@115 (line 379)

  0x000000010f810743: movabs $0x795580010,%rdi  ;   {oop(a 'java/lang/Class' = int)}
  0x000000010f81074d: cmp    %rdi,%rsi
  0x000000010f810750: movabs $0x10eda5820,%rdi  ;   {metadata(method data for {method} {0x000000010ed30188} 'canonicalize' '(Ljava/lang/Class;I)Ljava/lang/Class;' in 'java/lang/invoke/MethodTypeForm')}
  0x000000010f81075a: movabs $0x3a0,%rbx
  0x000000010f810764: je     0x000000010f810774
  0x000000010f81076a: movabs $0x3b0,%rbx
  0x000000010f810774: mov    (%rdi,%rbx,1),%rax
  0x000000010f810778: lea    0x1(%rax),%rax
  0x000000010f81077c: mov    %rax,(%rdi,%rbx,1)
  0x000000010f810780: je     0x000000010f810bd2  ;*if_acmpeq
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@201 (line 393)

  0x000000010f810786: movabs $0x795580280,%r10  ;   {oop(a 'java/lang/Class' = long)}
  0x000000010f810790: cmp    %r10,%rsi
  0x000000010f810793: movabs $0x10eda5820,%rdi  ;   {metadata(method data for {method} {0x000000010ed30188} 'canonicalize' '(Ljava/lang/Class;I)Ljava/lang/Class;' in 'java/lang/invoke/MethodTypeForm')}
  0x000000010f81079d: movabs $0x3c0,%rbx
  0x000000010f8107a7: je     0x000000010f8107b7
  0x000000010f8107ad: movabs $0x3d0,%rbx
  0x000000010f8107b7: mov    (%rdi,%rbx,1),%rax
  0x000000010f8107bb: lea    0x1(%rax),%rax
  0x000000010f8107bf: mov    %rax,(%rdi,%rbx,1)
  0x000000010f8107c3: je     0x000000010f810bd2  ;*if_acmpeq
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@208 (line 393)

  0x000000010f8107c9: movabs $0x795580078,%r10  ;   {oop(a 'java/lang/Class' = float)}
  0x000000010f8107d3: cmp    %r10,%rsi
  0x000000010f8107d6: movabs $0x10eda5820,%rdi  ;   {metadata(method data for {method} {0x000000010ed30188} 'canonicalize' '(Ljava/lang/Class;I)Ljava/lang/Class;' in 'java/lang/invoke/MethodTypeForm')}
  0x000000010f8107e0: movabs $0x3e0,%rbx
  0x000000010f8107ea: je     0x000000010f8107fa
  0x000000010f8107f0: movabs $0x3f0,%rbx
  0x000000010f8107fa: mov    (%rdi,%rbx,1),%rax
  0x000000010f8107fe: lea    0x1(%rax),%rax
  0x000000010f810802: mov    %rax,(%rdi,%rbx,1)
  0x000000010f810806: je     0x000000010f810bd2  ;*if_acmpeq
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@215 (line 393)

  0x000000010f81080c: movabs $0x7955800e0,%r10  ;   {oop(a 'java/lang/Class' = double)}
  0x000000010f810816: cmp    %r10,%rsi
  0x000000010f810819: movabs $0x10eda5820,%rsi  ;   {metadata(method data for {method} {0x000000010ed30188} 'canonicalize' '(Ljava/lang/Class;I)Ljava/lang/Class;' in 'java/lang/invoke/MethodTypeForm')}
  0x000000010f810823: movabs $0x400,%rdi
  0x000000010f81082d: jne    0x000000010f81083d
  0x000000010f810833: movabs $0x410,%rdi
  0x000000010f81083d: mov    (%rsi,%rdi,1),%rbx
  0x000000010f810841: lea    0x1(%rbx),%rbx
  0x000000010f810845: mov    %rbx,(%rsi,%rdi,1)
  0x000000010f810849: jne    0x000000010f810be8
  0x000000010f81084f: jmpq   0x000000010f810bd2  ;*if_acmpne
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@222 (line 393)

  0x000000010f810854: movabs $0x795580280,%rdi  ;   {oop(a 'java/lang/Class' = long)}
  0x000000010f81085e: cmp    %rdi,%rsi
  0x000000010f810861: movabs $0x10eda5820,%rsi  ;   {metadata(method data for {method} {0x000000010ed30188} 'canonicalize' '(Ljava/lang/Class;I)Ljava/lang/Class;' in 'java/lang/invoke/MethodTypeForm')}
  0x000000010f81086b: movabs $0x380,%rdi
  0x000000010f810875: jne    0x000000010f810885
  0x000000010f81087b: movabs $0x390,%rdi
  0x000000010f810885: mov    (%rsi,%rdi,1),%rbx
  0x000000010f810889: lea    0x1(%rbx),%rbx
  0x000000010f81088d: mov    %rbx,(%rsi,%rdi,1)
  0x000000010f810891: jne    0x000000010f810bbc
  0x000000010f810897: jmpq   0x000000010f810ba6  ;*if_acmpne
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@188 (line 389)

  0x000000010f81089c: movabs $0x795580010,%rdi  ;   {oop(a 'java/lang/Class' = int)}
  0x000000010f8108a6: cmp    %rdi,%rsi
  0x000000010f8108a9: movabs $0x10eda5820,%rdi  ;   {metadata(method data for {method} {0x000000010ed30188} 'canonicalize' '(Ljava/lang/Class;I)Ljava/lang/Class;' in 'java/lang/invoke/MethodTypeForm')}
  0x000000010f8108b3: movabs $0x320,%rbx
  0x000000010f8108bd: je     0x000000010f8108cd
  0x000000010f8108c3: movabs $0x330,%rbx
  0x000000010f8108cd: mov    (%rdi,%rbx,1),%rax
  0x000000010f8108d1: lea    0x1(%rax),%rax
  0x000000010f8108d5: mov    %rax,(%rdi,%rbx,1)
  0x000000010f8108d9: je     0x000000010f810b90  ;*if_acmpeq
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@157 (line 383)

  0x000000010f8108df: movabs $0x795580280,%rdi  ;   {oop(a 'java/lang/Class' = long)}
  0x000000010f8108e9: cmp    %rdi,%rsi
  0x000000010f8108ec: movabs $0x10eda5820,%rdi  ;   {metadata(method data for {method} {0x000000010ed30188} 'canonicalize' '(Ljava/lang/Class;I)Ljava/lang/Class;' in 'java/lang/invoke/MethodTypeForm')}
  0x000000010f8108f6: movabs $0x340,%rbx
  0x000000010f810900: jne    0x000000010f810910
  0x000000010f810906: movabs $0x350,%rbx
  0x000000010f810910: mov    (%rdi,%rbx,1),%rax
  0x000000010f810914: lea    0x1(%rax),%rax
  0x000000010f810918: mov    %rax,(%rdi,%rbx,1)
  0x000000010f81091c: je     0x000000010f810b90  ;*if_acmpne
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@164 (line 383)

  0x000000010f810922: movabs $0x7955800e0,%r10  ;   {oop(a 'java/lang/Class' = double)}
  0x000000010f81092c: cmp    %r10,%rsi
  0x000000010f81092f: movabs $0x10eda5820,%rsi  ;   {metadata(method data for {method} {0x000000010ed30188} 'canonicalize' '(Ljava/lang/Class;I)Ljava/lang/Class;' in 'java/lang/invoke/MethodTypeForm')}
  0x000000010f810939: movabs $0x360,%rdi
  0x000000010f810943: jne    0x000000010f810953
  0x000000010f810949: movabs $0x370,%rdi
  0x000000010f810953: mov    (%rsi,%rdi,1),%rbx
  0x000000010f810957: lea    0x1(%rbx),%rbx
  0x000000010f81095b: mov    %rbx,(%rsi,%rdi,1)
  0x000000010f81095f: jne    0x000000010f810b7a
  0x000000010f810965: jmpq   0x000000010f810b64  ;*if_acmpne
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@173 (line 385)

  0x000000010f81096a: movabs $0x10eda5820,%rdi  ;   {metadata(method data for {method} {0x000000010ed30188} 'canonicalize' '(Ljava/lang/Class;I)Ljava/lang/Class;' in 'java/lang/invoke/MethodTypeForm')}
  0x000000010f810974: addq   $0x1,0x310(%rdi)
  0x000000010f81097c: movabs $0x10eda6898,%rdi  ;   {metadata(method data for {method} {0x000000010ed3d640} 'asWrapperType' '(Ljava/lang/Class;)Ljava/lang/Class;' in 'sun/invoke/util/Wrapper')}
  0x000000010f810986: mov    0xdc(%rdi),%ebx
  0x000000010f81098c: add    $0x8,%ebx
  0x000000010f81098f: mov    %ebx,0xdc(%rdi)
  0x000000010f810995: movabs $0x10ed3d640,%rdi  ;   {metadata({method} {0x000000010ed3d640} 'asWrapperType' '(Ljava/lang/Class;)Ljava/lang/Class;' in 'sun/invoke/util/Wrapper')}
  0x000000010f81099f: and    $0x7ffff8,%ebx
  0x000000010f8109a5: cmp    $0x0,%ebx
  0x000000010f8109a8: je     0x000000010f810d03
  0x000000010f8109ae: mov    %rsi,%rdi
  0x000000010f8109b1: movabs $0x10eda6898,%rbx  ;   {metadata(method data for {method} {0x000000010ed3d640} 'asWrapperType' '(Ljava/lang/Class;)Ljava/lang/Class;' in 'sun/invoke/util/Wrapper')}
  0x000000010f8109bb: mov    0x8(%rdi),%edi
  0x000000010f8109be: shl    $0x3,%rdi
  0x000000010f8109c2: cmp    0x110(%rbx),%rdi
  0x000000010f8109c9: jne    0x000000010f8109d8
  0x000000010f8109cb: addq   $0x1,0x118(%rbx)
  0x000000010f8109d3: jmpq   0x000000010f810a3e
  0x000000010f8109d8: cmp    0x120(%rbx),%rdi
  0x000000010f8109df: jne    0x000000010f8109ee
  0x000000010f8109e1: addq   $0x1,0x128(%rbx)
  0x000000010f8109e9: jmpq   0x000000010f810a3e
  0x000000010f8109ee: cmpq   $0x0,0x110(%rbx)
  0x000000010f8109f9: jne    0x000000010f810a12
  0x000000010f8109fb: mov    %rdi,0x110(%rbx)
  0x000000010f810a02: movq   $0x1,0x118(%rbx)
  0x000000010f810a0d: jmpq   0x000000010f810a3e
  0x000000010f810a12: cmpq   $0x0,0x120(%rbx)
  0x000000010f810a1d: jne    0x000000010f810a36
  0x000000010f810a1f: mov    %rdi,0x120(%rbx)
  0x000000010f810a26: movq   $0x1,0x128(%rbx)
  0x000000010f810a31: jmpq   0x000000010f810a3e
  0x000000010f810a36: addq   $0x1,0x108(%rbx)
  0x000000010f810a3e: mov    %rsi,%rdi
  0x000000010f810a41: mov    %rdi,%rsi          ;*invokevirtual isPrimitive
                                                ; - sun.invoke.util.Wrapper::asWrapperType@1 (line 371)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@149 (line 381)

  0x000000010f810a44: nop
  0x000000010f810a45: nop
  0x000000010f810a46: nop
  0x000000010f810a47: callq  0x000000010f7170a0  ; OopMap{[80]=Oop off=1964}
                                                ;*invokevirtual isPrimitive
                                                ; - sun.invoke.util.Wrapper::asWrapperType@1 (line 371)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@149 (line 381)
                                                ;   {optimized virtual_call}
  0x000000010f810a4c: cmp    $0x0,%eax
  0x000000010f810a4f: movabs $0x10eda6898,%rsi  ;   {metadata(method data for {method} {0x000000010ed3d640} 'asWrapperType' '(Ljava/lang/Class;)Ljava/lang/Class;' in 'sun/invoke/util/Wrapper')}
  0x000000010f810a59: movabs $0x138,%rdi
  0x000000010f810a63: je     0x000000010f810a73
  0x000000010f810a69: movabs $0x148,%rdi
  0x000000010f810a73: mov    (%rsi,%rdi,1),%rbx
  0x000000010f810a77: lea    0x1(%rbx),%rbx
  0x000000010f810a7b: mov    %rbx,(%rsi,%rdi,1)
  0x000000010f810a7f: je     0x000000010f810b50  ;*ifeq
                                                ; - sun.invoke.util.Wrapper::asWrapperType@4 (line 371)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@149 (line 381)

  0x000000010f810a85: movabs $0x10eda6898,%rsi  ;   {metadata(method data for {method} {0x000000010ed3d640} 'asWrapperType' '(Ljava/lang/Class;)Ljava/lang/Class;' in 'sun/invoke/util/Wrapper')}
  0x000000010f810a8f: addq   $0x1,0x158(%rsi)
  0x000000010f810a97: mov    0x50(%rsp),%rsi    ;*invokestatic forPrimitiveType
                                                ; - sun.invoke.util.Wrapper::asWrapperType@8 (line 372)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@149 (line 381)

  0x000000010f810a9c: nop
  0x000000010f810a9d: nop
  0x000000010f810a9e: nop
  0x000000010f810a9f: callq  0x000000010f717520  ; OopMap{[80]=Oop off=2052}
                                                ;*invokestatic forPrimitiveType
                                                ; - sun.invoke.util.Wrapper::asWrapperType@8 (line 372)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@149 (line 381)
                                                ;   {static_call}
  0x000000010f810aa4: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x000000010f810d1a
  0x000000010f810aa7: mov    %rax,%rdx
  0x000000010f810aaa: movabs $0x10eda6898,%rsi  ;   {metadata(method data for {method} {0x000000010ed3d640} 'asWrapperType' '(Ljava/lang/Class;)Ljava/lang/Class;' in 'sun/invoke/util/Wrapper')}
  0x000000010f810ab4: mov    0x8(%rdx),%edx
  0x000000010f810ab7: shl    $0x3,%rdx
  0x000000010f810abb: cmp    0x170(%rsi),%rdx
  0x000000010f810ac2: jne    0x000000010f810ad1
  0x000000010f810ac4: addq   $0x1,0x178(%rsi)
  0x000000010f810acc: jmpq   0x000000010f810b37
  0x000000010f810ad1: cmp    0x180(%rsi),%rdx
  0x000000010f810ad8: jne    0x000000010f810ae7
  0x000000010f810ada: addq   $0x1,0x188(%rsi)
  0x000000010f810ae2: jmpq   0x000000010f810b37
  0x000000010f810ae7: cmpq   $0x0,0x170(%rsi)
  0x000000010f810af2: jne    0x000000010f810b0b
  0x000000010f810af4: mov    %rdx,0x170(%rsi)
  0x000000010f810afb: movq   $0x1,0x178(%rsi)
  0x000000010f810b06: jmpq   0x000000010f810b37
  0x000000010f810b0b: cmpq   $0x0,0x180(%rsi)
  0x000000010f810b16: jne    0x000000010f810b2f
  0x000000010f810b18: mov    %rdx,0x180(%rsi)
  0x000000010f810b1f: movq   $0x1,0x188(%rsi)
  0x000000010f810b2a: jmpq   0x000000010f810b37
  0x000000010f810b2f: addq   $0x1,0x168(%rsi)
  0x000000010f810b37: mov    0x50(%rsp),%rdx
  0x000000010f810b3c: mov    %rax,%rsi          ;*invokevirtual wrapperType
                                                ; - sun.invoke.util.Wrapper::asWrapperType@12 (line 372)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@149 (line 381)

  0x000000010f810b3f: callq  0x000000010f7170a0  ; OopMap{off=2212}
                                                ;*invokevirtual wrapperType
                                                ; - sun.invoke.util.Wrapper::asWrapperType@12 (line 372)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@149 (line 381)
                                                ;   {optimized virtual_call}
  0x000000010f810b44: add    $0x60,%rsp
  0x000000010f810b48: pop    %rbp
  0x000000010f810b49: test   %eax,-0x8d75a4f(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f810b4f: retq   
  0x000000010f810b50: mov    0x50(%rsp),%rsi
  0x000000010f810b55: mov    %rsi,%rax
  0x000000010f810b58: add    $0x60,%rsp
  0x000000010f810b5c: pop    %rbp
  0x000000010f810b5d: test   %eax,-0x8d75a63(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f810b63: retq                      ;*areturn
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@152 (line 381)

  0x000000010f810b64: movabs $0x795580280,%rax  ;   {oop(a 'java/lang/Class' = long)}
  0x000000010f810b6e: add    $0x60,%rsp
  0x000000010f810b72: pop    %rbp
  0x000000010f810b73: test   %eax,-0x8d75a79(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f810b79: retq                      ;*areturn
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@179 (line 386)

  0x000000010f810b7a: movabs $0x795580010,%rax  ;   {oop(a 'java/lang/Class' = int)}
  0x000000010f810b84: add    $0x60,%rsp
  0x000000010f810b88: pop    %rbp
  0x000000010f810b89: test   %eax,-0x8d75a8f(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f810b8f: retq                      ;*areturn
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@183 (line 387)

  0x000000010f810b90: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000010f810b9a: add    $0x60,%rsp
  0x000000010f810b9e: pop    %rbp
  0x000000010f810b9f: test   %eax,-0x8d75aa5(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f810ba5: retq                      ;*areturn
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@168 (line 384)

  0x000000010f810ba6: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000010f810bb0: add    $0x60,%rsp
  0x000000010f810bb4: pop    %rbp
  0x000000010f810bb5: test   %eax,-0x8d75abb(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f810bbb: retq                      ;*areturn
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@192 (line 390)

  0x000000010f810bbc: movabs $0x795580280,%rax  ;   {oop(a 'java/lang/Class' = long)}
  0x000000010f810bc6: add    $0x60,%rsp
  0x000000010f810bca: pop    %rbp
  0x000000010f810bcb: test   %eax,-0x8d75ad1(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f810bd1: retq                      ;*areturn
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@196 (line 391)

  0x000000010f810bd2: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000010f810bdc: add    $0x60,%rsp
  0x000000010f810be0: pop    %rbp
  0x000000010f810be1: test   %eax,-0x8d75ae7(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f810be7: retq                      ;*areturn
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@226 (line 395)

  0x000000010f810be8: movabs $0x795580010,%rax  ;   {oop(a 'java/lang/Class' = int)}
  0x000000010f810bf2: add    $0x60,%rsp
  0x000000010f810bf6: pop    %rbp
  0x000000010f810bf7: test   %eax,-0x8d75afd(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f810bfd: retq                      ;*areturn
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@230 (line 397)

  0x000000010f810bfe: movabs $0x10eda5820,%rax  ;   {metadata(method data for {method} {0x000000010ed30188} 'canonicalize' '(Ljava/lang/Class;I)Ljava/lang/Class;' in 'java/lang/invoke/MethodTypeForm')}
  0x000000010f810c08: incl   0x288(%rax)
  0x000000010f810c0e: jmpq   0x000000010f810c86  ;*goto
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@111 (line 375)

  0x000000010f810c13: movabs $0x795580010,%rax  ;   {oop(a 'java/lang/Class' = int)}
  0x000000010f810c1d: add    $0x60,%rsp
  0x000000010f810c21: pop    %rbp
  0x000000010f810c22: test   %eax,-0x8d75b28(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f810c28: retq                      ;*areturn
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@107 (line 373)

  0x000000010f810c29: movabs $0x7958681e8,%rax  ;   {oop(a 'java/lang/Class' = 'java/lang/Void')}
  0x000000010f810c33: add    $0x60,%rsp
  0x000000010f810c37: pop    %rbp
  0x000000010f810c38: test   %eax,-0x8d75b3e(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f810c3e: retq                      ;*areturn
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@110 (line 375)

  0x000000010f810c3f: movabs $0x10eda5820,%rax  ;   {metadata(method data for {method} {0x000000010ed30188} 'canonicalize' '(Ljava/lang/Class;I)Ljava/lang/Class;' in 'java/lang/invoke/MethodTypeForm')}
  0x000000010f810c49: incl   0x210(%rax)
  0x000000010f810c4f: jmpq   0x000000010f810c86  ;*goto
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@67 (line 367)

  0x000000010f810c54: add    $0x60,%rsp
  0x000000010f810c58: pop    %rbp
  0x000000010f810c59: test   %eax,-0x8d75b5f(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f810c5f: retq                      ;*areturn
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@63 (line 363)

  0x000000010f810c60: movabs $0x7955806f8,%rax  ;   {oop(a 'java/lang/Class' = 'java/lang/Object')}
  0x000000010f810c6a: add    $0x60,%rsp
  0x000000010f810c6e: pop    %rbp
  0x000000010f810c6f: test   %eax,-0x8d75b75(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f810c75: retq                      ;*areturn
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@66 (line 367)

  0x000000010f810c76: movabs $0x10eda5820,%rax  ;   {metadata(method data for {method} {0x000000010ed30188} 'canonicalize' '(Ljava/lang/Class;I)Ljava/lang/Class;' in 'java/lang/invoke/MethodTypeForm')}
  0x000000010f810c80: incl   0x128(%rax)        ;*goto
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@6 (line 357)

  0x000000010f810c86: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000010f810c90: add    $0x60,%rsp
  0x000000010f810c94: pop    %rbp
  0x000000010f810c95: test   %eax,-0x8d75b9b(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f810c9b: retq   
  0x000000010f810c9c: mov    %rdi,0x8(%rsp)
  0x000000010f810ca1: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f810ca9: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [80]=Oop off=2574}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@-1 (line 357)
                                                ;   {runtime_call}
  0x000000010f810cae: jmpq   0x000000010f8102e3
  0x000000010f810cb3: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop [80]=Oop off=2584}
                                                ;*invokevirtual isPrimitive
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@10 (line 359)
                                                ;   {runtime_call}
  0x000000010f810cb8: mov    %rsi,0x8(%rsp)
  0x000000010f810cbd: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f810cc5: callq  0x000000010f7d1a20  ; OopMap{[80]=Oop off=2602}
                                                ;*synchronization entry
                                                ; - sun.invoke.util.Wrapper::asPrimitiveType@-1 (line 381)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@53 (line 362)
                                                ;   {runtime_call}
  0x000000010f810cca: jmpq   0x000000010f81046d
  0x000000010f810ccf: mov    %rsi,0x8(%rsp)
  0x000000010f810cd4: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f810cdc: callq  0x000000010f7d1a20  ; OopMap{[80]=Oop off=2625}
                                                ;*synchronization entry
                                                ; - sun.invoke.util.Wrapper::findWrapperType@-1 (line 270)
                                                ; - sun.invoke.util.Wrapper::asPrimitiveType@1 (line 381)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@53 (line 362)
                                                ;   {runtime_call}
  0x000000010f810ce1: jmpq   0x000000010f8104b1
  0x000000010f810ce6: callq  0x000000010f7cd0c0  ; OopMap{[80]=Oop rsi=Oop off=2635}
                                                ;*aaload
                                                ; - sun.invoke.util.Wrapper::findWrapperType@7 (line 270)
                                                ; - sun.invoke.util.Wrapper::asPrimitiveType@1 (line 381)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@53 (line 362)
                                                ;   {runtime_call}
  0x000000010f810ceb: callq  0x000000010f7cd0c0  ; OopMap{[80]=Oop rsi=Oop off=2640}
                                                ;*aaload
                                                ; - sun.invoke.util.Wrapper::findWrapperType@7 (line 270)
                                                ; - sun.invoke.util.Wrapper::asPrimitiveType@1 (line 381)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@53 (line 362)
                                                ;   {runtime_call}
  0x000000010f810cf0: mov    %rax,(%rsp)
  0x000000010f810cf4: callq  0x000000010f7cca00  ; OopMap{[80]=Oop rsi=Oop off=2649}
                                                ;*aaload
                                                ; - sun.invoke.util.Wrapper::findWrapperType@7 (line 270)
                                                ; - sun.invoke.util.Wrapper::asPrimitiveType@1 (line 381)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@53 (line 362)
                                                ;   {runtime_call}
  0x000000010f810cf9: callq  0x000000010f7cd0c0  ; OopMap{rdi=Oop [80]=Oop rsi=Oop off=2654}
                                                ;*getfield wrapperType
                                                ; - sun.invoke.util.Wrapper::findWrapperType@14 (line 271)
                                                ; - sun.invoke.util.Wrapper::asPrimitiveType@1 (line 381)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@53 (line 362)
                                                ;   {runtime_call}
  0x000000010f810cfe: callq  0x000000010f7cd0c0  ; OopMap{rdi=Oop [80]=Oop rsi=Oop off=2659}
                                                ;*invokevirtual primitiveType
                                                ; - sun.invoke.util.Wrapper::asPrimitiveType@10 (line 383)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@53 (line 362)
                                                ;   {runtime_call}
  0x000000010f810d03: mov    %rdi,0x8(%rsp)
  0x000000010f810d08: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f810d10: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [80]=Oop off=2677}
                                                ;*synchronization entry
                                                ; - sun.invoke.util.Wrapper::asWrapperType@-1 (line 371)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@149 (line 381)
                                                ;   {runtime_call}
  0x000000010f810d15: jmpq   0x000000010f8109ae
  0x000000010f810d1a: callq  0x000000010f7cd0c0  ; OopMap{[80]=Oop rax=Oop off=2687}
                                                ;*invokevirtual wrapperType
                                                ; - sun.invoke.util.Wrapper::asWrapperType@12 (line 372)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@149 (line 381)
                                                ;   {runtime_call}
  0x000000010f810d1f: nop
  0x000000010f810d20: nop
  0x000000010f810d21: mov    0x2a8(%r15),%rax
  0x000000010f810d28: movabs $0x0,%r10
  0x000000010f810d32: mov    %r10,0x2a8(%r15)
  0x000000010f810d39: movabs $0x0,%r10
  0x000000010f810d43: mov    %r10,0x2b0(%r15)
  0x000000010f810d4a: add    $0x60,%rsp
  0x000000010f810d4e: pop    %rbp
  0x000000010f810d4f: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f810d54: hlt    
  0x000000010f810d55: hlt    
  0x000000010f810d56: hlt    
  0x000000010f810d57: hlt    
  0x000000010f810d58: hlt    
  0x000000010f810d59: hlt    
  0x000000010f810d5a: hlt    
  0x000000010f810d5b: hlt    
  0x000000010f810d5c: hlt    
  0x000000010f810d5d: hlt    
  0x000000010f810d5e: hlt    
  0x000000010f810d5f: hlt    
[Stub Code]
  0x000000010f810d60: nop                       ;   {no_reloc}
  0x000000010f810d61: nop
  0x000000010f810d62: nop
  0x000000010f810d63: nop
  0x000000010f810d64: nop
  0x000000010f810d65: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f810d6f: jmpq   0x000000010f810d6f  ;   {runtime_call}
  0x000000010f810d74: nop
  0x000000010f810d75: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f810d7f: jmpq   0x000000010f810d7f  ;   {runtime_call}
  0x000000010f810d84: nop
  0x000000010f810d85: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f810d8f: jmpq   0x000000010f810d8f  ;   {runtime_call}
  0x000000010f810d94: nop
  0x000000010f810d95: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f810d9f: jmpq   0x000000010f810d9f  ;   {runtime_call}
  0x000000010f810da4: nop
  0x000000010f810da5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f810daf: jmpq   0x000000010f810daf  ;   {runtime_call}
  0x000000010f810db4: nop
  0x000000010f810db5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f810dbf: jmpq   0x000000010f810dbf  ;   {runtime_call}
[Exception Handler]
  0x000000010f810dc4: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f810dc9: mov    %rsp,-0x28(%rsp)
  0x000000010f810dce: sub    $0x80,%rsp
  0x000000010f810dd5: mov    %rax,0x78(%rsp)
  0x000000010f810dda: mov    %rcx,0x70(%rsp)
  0x000000010f810ddf: mov    %rdx,0x68(%rsp)
  0x000000010f810de4: mov    %rbx,0x60(%rsp)
  0x000000010f810de9: mov    %rbp,0x50(%rsp)
  0x000000010f810dee: mov    %rsi,0x48(%rsp)
  0x000000010f810df3: mov    %rdi,0x40(%rsp)
  0x000000010f810df8: mov    %r8,0x38(%rsp)
  0x000000010f810dfd: mov    %r9,0x30(%rsp)
  0x000000010f810e02: mov    %r10,0x28(%rsp)
  0x000000010f810e07: mov    %r11,0x20(%rsp)
  0x000000010f810e0c: mov    %r12,0x18(%rsp)
  0x000000010f810e11: mov    %r13,0x10(%rsp)
  0x000000010f810e16: mov    %r14,0x8(%rsp)
  0x000000010f810e1b: mov    %r15,(%rsp)
  0x000000010f810e1f: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f810e29: movabs $0x10f810dc9,%rsi  ;   {internal_word}
  0x000000010f810e33: mov    %rsp,%rdx
  0x000000010f810e36: and    $0xfffffffffffffff0,%rsp
  0x000000010f810e3a: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f810e3f: hlt    
[Deopt Handler Code]
  0x000000010f810e40: movabs $0x10f810e40,%r10  ;   {section_word}
  0x000000010f810e4a: push   %r10
  0x000000010f810e4c: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f810e51: hlt    
  0x000000010f810e52: hlt    
  0x000000010f810e53: hlt    
  0x000000010f810e54: hlt    
  0x000000010f810e55: hlt    
  0x000000010f810e56: hlt    
  0x000000010f810e57: hlt    
Decoding compiled method 0x000000010f811510:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010eabf988} 'isConstructor' '()Z' in 'java/lang/invoke/MemberName'
  #           [sp+0x70]  (sp of caller)
  0x000000010f811680: mov    0x8(%rsi),%r10d
  0x000000010f811684: shl    $0x3,%r10
  0x000000010f811688: cmp    %rax,%r10
  0x000000010f81168b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f811691: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f81169c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f8116a0: mov    %eax,-0x14000(%rsp)
  0x000000010f8116a7: push   %rbp
  0x000000010f8116a8: sub    $0x60,%rsp
  0x000000010f8116ac: movabs $0x10eda6da8,%rax  ;   {metadata(method data for {method} {0x000000010eabf988} 'isConstructor' '()Z' in 'java/lang/invoke/MemberName')}
  0x000000010f8116b6: mov    0xdc(%rax),%edi
  0x000000010f8116bc: add    $0x8,%edi
  0x000000010f8116bf: mov    %edi,0xdc(%rax)
  0x000000010f8116c5: movabs $0x10eabf988,%rax  ;   {metadata({method} {0x000000010eabf988} 'isConstructor' '()Z' in 'java/lang/invoke/MemberName')}
  0x000000010f8116cf: and    $0x1ff8,%edi
  0x000000010f8116d5: cmp    $0x0,%edi
  0x000000010f8116d8: je     0x000000010f8117e5  ;*aload_0
                                                ; - java.lang.invoke.MemberName::isConstructor@0 (line 455)

  0x000000010f8116de: mov    %rsi,%rax
  0x000000010f8116e1: movabs $0x10eda6da8,%rdi  ;   {metadata(method data for {method} {0x000000010eabf988} 'isConstructor' '()Z' in 'java/lang/invoke/MemberName')}
  0x000000010f8116eb: addq   $0x1,0x108(%rdi)
  0x000000010f8116f3: movabs $0x10eda32a8,%rax  ;   {metadata(method data for {method} {0x000000010eabedb0} 'testAllFlags' '(I)Z' in 'java/lang/invoke/MemberName')}
  0x000000010f8116fd: mov    0xdc(%rax),%edi
  0x000000010f811703: add    $0x8,%edi
  0x000000010f811706: mov    %edi,0xdc(%rax)
  0x000000010f81170c: movabs $0x10eabedb0,%rax  ;   {metadata({method} {0x000000010eabedb0} 'testAllFlags' '(I)Z' in 'java/lang/invoke/MemberName')}
  0x000000010f811716: and    $0x7ffff8,%edi
  0x000000010f81171c: cmp    $0x0,%edi
  0x000000010f81171f: je     0x000000010f8117fc
  0x000000010f811725: mov    %rsi,%rax
  0x000000010f811728: movabs $0x10eda32a8,%rdi  ;   {metadata(method data for {method} {0x000000010eabedb0} 'testAllFlags' '(I)Z' in 'java/lang/invoke/MemberName')}
  0x000000010f811732: addq   $0x1,0x108(%rdi)
  0x000000010f81173a: movabs $0x10ed91b60,%rax  ;   {metadata(method data for {method} {0x000000010eabed18} 'testFlags' '(II)Z' in 'java/lang/invoke/MemberName')}
  0x000000010f811744: mov    0xdc(%rax),%edi
  0x000000010f81174a: add    $0x8,%edi
  0x000000010f81174d: mov    %edi,0xdc(%rax)
  0x000000010f811753: movabs $0x10eabed18,%rax  ;   {metadata({method} {0x000000010eabed18} 'testFlags' '(II)Z' in 'java/lang/invoke/MemberName')}
  0x000000010f81175d: and    $0x7ffff8,%edi
  0x000000010f811763: cmp    $0x0,%edi
  0x000000010f811766: je     0x000000010f811813
  0x000000010f81176c: mov    0xc(%rsi),%eax     ;*getfield flags
                                                ; - java.lang.invoke.MemberName::testFlags@1 (line 334)
                                                ; - java.lang.invoke.MemberName::testAllFlags@3 (line 337)
                                                ; - java.lang.invoke.MemberName::isConstructor@3 (line 455)

  0x000000010f81176f: and    $0x20000,%eax
  0x000000010f811775: cmp    $0x20000,%eax
  0x000000010f81177b: movabs $0x10ed91b60,%rax  ;   {metadata(method data for {method} {0x000000010eabed18} 'testFlags' '(II)Z' in 'java/lang/invoke/MemberName')}
  0x000000010f811785: movabs $0x108,%rsi
  0x000000010f81178f: jne    0x000000010f81179f
  0x000000010f811795: movabs $0x118,%rsi
  0x000000010f81179f: mov    (%rax,%rsi,1),%rdi
  0x000000010f8117a3: lea    0x1(%rdi),%rdi
  0x000000010f8117a7: mov    %rdi,(%rax,%rsi,1)
  0x000000010f8117ab: jne    0x000000010f8117cb  ;*if_icmpne
                                                ; - java.lang.invoke.MemberName::testFlags@7 (line 334)
                                                ; - java.lang.invoke.MemberName::testAllFlags@3 (line 337)
                                                ; - java.lang.invoke.MemberName::isConstructor@3 (line 455)

  0x000000010f8117b1: movabs $0x10ed91b60,%rax  ;   {metadata(method data for {method} {0x000000010eabed18} 'testFlags' '(II)Z' in 'java/lang/invoke/MemberName')}
  0x000000010f8117bb: incl   0x128(%rax)
  0x000000010f8117c1: mov    $0x1,%eax
  0x000000010f8117c6: jmpq   0x000000010f8117d0  ;*goto
                                                ; - java.lang.invoke.MemberName::testFlags@11 (line 334)
                                                ; - java.lang.invoke.MemberName::testAllFlags@3 (line 337)
                                                ; - java.lang.invoke.MemberName::isConstructor@3 (line 455)

  0x000000010f8117cb: mov    $0x0,%eax          ;*ireturn
                                                ; - java.lang.invoke.MemberName::testFlags@15 (line 334)
                                                ; - java.lang.invoke.MemberName::testAllFlags@3 (line 337)
                                                ; - java.lang.invoke.MemberName::isConstructor@3 (line 455)

  0x000000010f8117d0: and    $0x1,%eax
  0x000000010f8117d3: and    $0x1,%eax
  0x000000010f8117d6: and    $0x1,%eax
  0x000000010f8117d9: add    $0x60,%rsp
  0x000000010f8117dd: pop    %rbp
  0x000000010f8117de: test   %eax,-0x8d766e4(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f8117e4: retq   
  0x000000010f8117e5: mov    %rax,0x8(%rsp)
  0x000000010f8117ea: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f8117f2: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=375}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MemberName::isConstructor@-1 (line 455)
                                                ;   {runtime_call}
  0x000000010f8117f7: jmpq   0x000000010f8116de
  0x000000010f8117fc: mov    %rax,0x8(%rsp)
  0x000000010f811801: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f811809: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=398}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MemberName::testAllFlags@-1 (line 337)
                                                ; - java.lang.invoke.MemberName::isConstructor@3 (line 455)
                                                ;   {runtime_call}
  0x000000010f81180e: jmpq   0x000000010f811725
  0x000000010f811813: mov    %rax,0x8(%rsp)
  0x000000010f811818: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f811820: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=421}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MemberName::testFlags@-1 (line 334)
                                                ; - java.lang.invoke.MemberName::testAllFlags@3 (line 337)
                                                ; - java.lang.invoke.MemberName::isConstructor@3 (line 455)
                                                ;   {runtime_call}
  0x000000010f811825: jmpq   0x000000010f81176c
  0x000000010f81182a: nop
  0x000000010f81182b: nop
  0x000000010f81182c: mov    0x2a8(%r15),%rax
  0x000000010f811833: movabs $0x0,%r10
  0x000000010f81183d: mov    %r10,0x2a8(%r15)
  0x000000010f811844: movabs $0x0,%r10
  0x000000010f81184e: mov    %r10,0x2b0(%r15)
  0x000000010f811855: add    $0x60,%rsp
  0x000000010f811859: pop    %rbp
  0x000000010f81185a: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f81185f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f811860: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f811865: mov    %rsp,-0x28(%rsp)
  0x000000010f81186a: sub    $0x80,%rsp
  0x000000010f811871: mov    %rax,0x78(%rsp)
  0x000000010f811876: mov    %rcx,0x70(%rsp)
  0x000000010f81187b: mov    %rdx,0x68(%rsp)
  0x000000010f811880: mov    %rbx,0x60(%rsp)
  0x000000010f811885: mov    %rbp,0x50(%rsp)
  0x000000010f81188a: mov    %rsi,0x48(%rsp)
  0x000000010f81188f: mov    %rdi,0x40(%rsp)
  0x000000010f811894: mov    %r8,0x38(%rsp)
  0x000000010f811899: mov    %r9,0x30(%rsp)
  0x000000010f81189e: mov    %r10,0x28(%rsp)
  0x000000010f8118a3: mov    %r11,0x20(%rsp)
  0x000000010f8118a8: mov    %r12,0x18(%rsp)
  0x000000010f8118ad: mov    %r13,0x10(%rsp)
  0x000000010f8118b2: mov    %r14,0x8(%rsp)
  0x000000010f8118b7: mov    %r15,(%rsp)
  0x000000010f8118bb: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f8118c5: movabs $0x10f811865,%rsi  ;   {internal_word}
  0x000000010f8118cf: mov    %rsp,%rdx
  0x000000010f8118d2: and    $0xfffffffffffffff0,%rsp
  0x000000010f8118d6: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f8118db: hlt    
[Deopt Handler Code]
  0x000000010f8118dc: movabs $0x10f8118dc,%r10  ;   {section_word}
  0x000000010f8118e6: push   %r10
  0x000000010f8118e8: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f8118ed: hlt    
  0x000000010f8118ee: hlt    
  0x000000010f8118ef: hlt    
Decoding compiled method 0x000000010f811a50:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000010eda7bd0} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rsi:rsi   = 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    rcx:rcx   = 'java/lang/Object'
  # parm2:    r8:r8     = 'java/lang/Object'
  # parm3:    r9:r9     = 'java/lang/Object'
  # parm4:    rdi:rdi   = 'java/lang/Object'
  # parm5:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm6:    [sp+0x8]   = 'java/lang/Object'
  # parm7:    [sp+0x10]   = 'java/lang/Object'
  0x000000010f811b80: mov    0x14(%rsi),%ebx
  0x000000010f811b83: shl    $0x3,%rbx
  0x000000010f811b87: mov    0x28(%rbx),%ebx
  0x000000010f811b8a: shl    $0x3,%rbx
  0x000000010f811b8e: mov    0x18(%rbx),%rbx
  0x000000010f811b92: test   %rbx,%rbx
  0x000000010f811b95: je     0x000000010f811b9e
  0x000000010f811b9b: jmpq   *0x40(%rbx)
  0x000000010f811b9e: jmpq   0x000000010f6d61a0  ;   {runtime_call}
  0x000000010f811ba3: hlt    
  0x000000010f811ba4: hlt    
  0x000000010f811ba5: hlt    
  0x000000010f811ba6: hlt    
  0x000000010f811ba7: hlt    
Decoding compiled method 0x000000010f811bd0:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000010eda9920} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8:r8     = 'java/lang/Object'
  # parm4:    r9:r9     = 'java/lang/Object'
  # parm5:    rdi:rdi   = 'java/lang/Object'
  # parm6:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm7:    [sp+0x8]   = 'java/lang/Object'
  # parm8:    [sp+0x10]   = 'java/lang/Object'
  # parm9:    [sp+0x18]   = 'java/lang/invoke/MemberName'
  0x000000010f811d00: mov    0x20(%rsp),%rbx
  0x000000010f811d05: cmp    (%rsi),%rax
  0x000000010f811d08: mov    0x18(%rbx),%rbx
  0x000000010f811d0c: test   %rbx,%rbx
  0x000000010f811d0f: je     0x000000010f811d18
  0x000000010f811d15: jmpq   *0x40(%rbx)
  0x000000010f811d18: jmpq   0x000000010f6d61a0  ;   {runtime_call}
  0x000000010f811d1d: hlt    
  0x000000010f811d1e: hlt    
  0x000000010f811d1f: hlt    
Decoding compiled method 0x000000010f811d50:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010eabde10} 'getMethodOrFieldType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName'
  #           [sp+0xc0]  (sp of caller)
  0x000000010f812040: mov    0x8(%rsi),%r10d
  0x000000010f812044: shl    $0x3,%r10
  0x000000010f812048: cmp    %rax,%r10
  0x000000010f81204b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f812051: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f81205c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f812060: mov    %eax,-0x14000(%rsp)
  0x000000010f812067: push   %rbp
  0x000000010f812068: sub    $0xb0,%rsp
  0x000000010f81206f: mov    %rsi,0x78(%rsp)
  0x000000010f812074: movabs $0x10eda6ed8,%rdi  ;   {metadata(method data for {method} {0x000000010eabde10} 'getMethodOrFieldType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f81207e: mov    0xdc(%rdi),%ebx
  0x000000010f812084: add    $0x8,%ebx
  0x000000010f812087: mov    %ebx,0xdc(%rdi)
  0x000000010f81208d: movabs $0x10eabde10,%rdi  ;   {metadata({method} {0x000000010eabde10} 'getMethodOrFieldType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f812097: and    $0x1ff8,%ebx
  0x000000010f81209d: cmp    $0x0,%ebx
  0x000000010f8120a0: je     0x000000010f813379  ;*aload_0
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@0 (line 109)

  0x000000010f8120a6: mov    %rsi,%rdi
  0x000000010f8120a9: movabs $0x10eda6ed8,%rbx  ;   {metadata(method data for {method} {0x000000010eabde10} 'getMethodOrFieldType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f8120b3: mov    0x8(%rdi),%edi
  0x000000010f8120b6: shl    $0x3,%rdi
  0x000000010f8120ba: cmp    0x110(%rbx),%rdi
  0x000000010f8120c1: jne    0x000000010f8120d0
  0x000000010f8120c3: addq   $0x1,0x118(%rbx)
  0x000000010f8120cb: jmpq   0x000000010f812136
  0x000000010f8120d0: cmp    0x120(%rbx),%rdi
  0x000000010f8120d7: jne    0x000000010f8120e6
  0x000000010f8120d9: addq   $0x1,0x128(%rbx)
  0x000000010f8120e1: jmpq   0x000000010f812136
  0x000000010f8120e6: cmpq   $0x0,0x110(%rbx)
  0x000000010f8120f1: jne    0x000000010f81210a
  0x000000010f8120f3: mov    %rdi,0x110(%rbx)
  0x000000010f8120fa: movq   $0x1,0x118(%rbx)
  0x000000010f812105: jmpq   0x000000010f812136
  0x000000010f81210a: cmpq   $0x0,0x120(%rbx)
  0x000000010f812115: jne    0x000000010f81212e
  0x000000010f812117: mov    %rdi,0x120(%rbx)
  0x000000010f81211e: movq   $0x1,0x128(%rbx)
  0x000000010f812129: jmpq   0x000000010f812136
  0x000000010f81212e: addq   $0x1,0x108(%rbx)
  0x000000010f812136: movabs $0x10ed9b4e8,%rdi  ;   {metadata(method data for {method} {0x000000010eabf7c0} 'isInvocable' '()Z' in 'java/lang/invoke/MemberName')}
  0x000000010f812140: mov    0xdc(%rdi),%ebx
  0x000000010f812146: add    $0x8,%ebx
  0x000000010f812149: mov    %ebx,0xdc(%rdi)
  0x000000010f81214f: movabs $0x10eabf7c0,%rdi  ;   {metadata({method} {0x000000010eabf7c0} 'isInvocable' '()Z' in 'java/lang/invoke/MemberName')}
  0x000000010f812159: and    $0x7ffff8,%ebx
  0x000000010f81215f: cmp    $0x0,%ebx
  0x000000010f812162: je     0x000000010f813390
  0x000000010f812168: mov    %rsi,%rdi
  0x000000010f81216b: movabs $0x10ed9b4e8,%rbx  ;   {metadata(method data for {method} {0x000000010eabf7c0} 'isInvocable' '()Z' in 'java/lang/invoke/MemberName')}
  0x000000010f812175: addq   $0x1,0x108(%rbx)
  0x000000010f81217d: movabs $0x10ed9a510,%rdi  ;   {metadata(method data for {method} {0x000000010eabee50} 'testAnyFlags' '(I)Z' in 'java/lang/invoke/MemberName')}
  0x000000010f812187: mov    0xdc(%rdi),%ebx
  0x000000010f81218d: add    $0x8,%ebx
  0x000000010f812190: mov    %ebx,0xdc(%rdi)
  0x000000010f812196: movabs $0x10eabee50,%rdi  ;   {metadata({method} {0x000000010eabee50} 'testAnyFlags' '(I)Z' in 'java/lang/invoke/MemberName')}
  0x000000010f8121a0: and    $0x7ffff8,%ebx
  0x000000010f8121a6: cmp    $0x0,%ebx
  0x000000010f8121a9: je     0x000000010f8133a7
  0x000000010f8121af: mov    %rsi,%rdi
  0x000000010f8121b2: movabs $0x10ed9a510,%rbx  ;   {metadata(method data for {method} {0x000000010eabee50} 'testAnyFlags' '(I)Z' in 'java/lang/invoke/MemberName')}
  0x000000010f8121bc: addq   $0x1,0x108(%rbx)
  0x000000010f8121c4: movabs $0x10ed91b60,%rdi  ;   {metadata(method data for {method} {0x000000010eabed18} 'testFlags' '(II)Z' in 'java/lang/invoke/MemberName')}
  0x000000010f8121ce: mov    0xdc(%rdi),%ebx
  0x000000010f8121d4: add    $0x8,%ebx
  0x000000010f8121d7: mov    %ebx,0xdc(%rdi)
  0x000000010f8121dd: movabs $0x10eabed18,%rdi  ;   {metadata({method} {0x000000010eabed18} 'testFlags' '(II)Z' in 'java/lang/invoke/MemberName')}
  0x000000010f8121e7: and    $0x7ffff8,%ebx
  0x000000010f8121ed: cmp    $0x0,%ebx
  0x000000010f8121f0: je     0x000000010f8133be
  0x000000010f8121f6: mov    0xc(%rsi),%edi     ;*getfield flags
                                                ; - java.lang.invoke.MemberName::testFlags@1 (line 334)
                                                ; - java.lang.invoke.MemberName::testAnyFlags@3 (line 340)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 443)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@1 (line 109)

  0x000000010f8121f9: mov    %rdi,%rbx
  0x000000010f8121fc: and    $0x30000,%ebx
  0x000000010f812202: cmp    $0x0,%ebx
  0x000000010f812205: movabs $0x10ed91b60,%rbx  ;   {metadata(method data for {method} {0x000000010eabed18} 'testFlags' '(II)Z' in 'java/lang/invoke/MemberName')}
  0x000000010f81220f: movabs $0x108,%rax
  0x000000010f812219: jne    0x000000010f812229
  0x000000010f81221f: movabs $0x118,%rax
  0x000000010f812229: mov    (%rbx,%rax,1),%rdx
  0x000000010f81222d: lea    0x1(%rdx),%rdx
  0x000000010f812231: mov    %rdx,(%rbx,%rax,1)
  0x000000010f812235: jne    0x000000010f812255  ;*if_icmpne
                                                ; - java.lang.invoke.MemberName::testFlags@7 (line 334)
                                                ; - java.lang.invoke.MemberName::testAnyFlags@3 (line 340)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 443)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@1 (line 109)

  0x000000010f81223b: movabs $0x10ed91b60,%rbx  ;   {metadata(method data for {method} {0x000000010eabed18} 'testFlags' '(II)Z' in 'java/lang/invoke/MemberName')}
  0x000000010f812245: incl   0x128(%rbx)
  0x000000010f81224b: mov    $0x1,%ebx
  0x000000010f812250: jmpq   0x000000010f81225a  ;*goto
                                                ; - java.lang.invoke.MemberName::testFlags@11 (line 334)
                                                ; - java.lang.invoke.MemberName::testAnyFlags@3 (line 340)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 443)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@1 (line 109)

  0x000000010f812255: mov    $0x0,%ebx          ;*ireturn
                                                ; - java.lang.invoke.MemberName::testFlags@15 (line 334)
                                                ; - java.lang.invoke.MemberName::testAnyFlags@3 (line 340)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 443)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@1 (line 109)

  0x000000010f81225a: and    $0x1,%ebx
  0x000000010f81225d: cmp    $0x0,%ebx
  0x000000010f812260: movabs $0x10ed9a510,%rbx  ;   {metadata(method data for {method} {0x000000010eabee50} 'testAnyFlags' '(I)Z' in 'java/lang/invoke/MemberName')}
  0x000000010f81226a: movabs $0x118,%rax
  0x000000010f812274: jne    0x000000010f812284
  0x000000010f81227a: movabs $0x128,%rax
  0x000000010f812284: mov    (%rbx,%rax,1),%rdx
  0x000000010f812288: lea    0x1(%rdx),%rdx
  0x000000010f81228c: mov    %rdx,(%rbx,%rax,1)
  0x000000010f812290: jne    0x000000010f8122b0  ;*ifne
                                                ; - java.lang.invoke.MemberName::testAnyFlags@6 (line 340)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 443)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@1 (line 109)

  0x000000010f812296: movabs $0x10ed9a510,%rbx  ;   {metadata(method data for {method} {0x000000010eabee50} 'testAnyFlags' '(I)Z' in 'java/lang/invoke/MemberName')}
  0x000000010f8122a0: incl   0x138(%rbx)
  0x000000010f8122a6: mov    $0x1,%ebx
  0x000000010f8122ab: jmpq   0x000000010f8122b5  ;*goto
                                                ; - java.lang.invoke.MemberName::testAnyFlags@10 (line 340)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 443)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@1 (line 109)

  0x000000010f8122b0: mov    $0x0,%ebx          ;*ireturn
                                                ; - java.lang.invoke.MemberName::testAnyFlags@14 (line 340)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 443)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@1 (line 109)

  0x000000010f8122b5: and    $0x1,%ebx
  0x000000010f8122b8: and    $0x1,%ebx
  0x000000010f8122bb: cmp    $0x0,%ebx
  0x000000010f8122be: movabs $0x10eda6ed8,%rbx  ;   {metadata(method data for {method} {0x000000010eabde10} 'getMethodOrFieldType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f8122c8: movabs $0x138,%rax
  0x000000010f8122d2: je     0x000000010f8122e2
  0x000000010f8122d8: movabs $0x148,%rax
  0x000000010f8122e2: mov    (%rbx,%rax,1),%rdx
  0x000000010f8122e6: lea    0x1(%rdx),%rdx
  0x000000010f8122ea: mov    %rdx,(%rbx,%rax,1)
  0x000000010f8122ee: jne    0x000000010f81305b  ;*ifeq
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@4 (line 109)

  0x000000010f8122f4: mov    %rsi,%rbx
  0x000000010f8122f7: movabs $0x10eda6ed8,%rax  ;   {metadata(method data for {method} {0x000000010eabde10} 'getMethodOrFieldType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f812301: mov    0x8(%rbx),%ebx
  0x000000010f812304: shl    $0x3,%rbx
  0x000000010f812308: cmp    0x190(%rax),%rbx
  0x000000010f81230f: jne    0x000000010f81231e
  0x000000010f812311: addq   $0x1,0x198(%rax)
  0x000000010f812319: jmpq   0x000000010f812384
  0x000000010f81231e: cmp    0x1a0(%rax),%rbx
  0x000000010f812325: jne    0x000000010f812334
  0x000000010f812327: addq   $0x1,0x1a8(%rax)
  0x000000010f81232f: jmpq   0x000000010f812384
  0x000000010f812334: cmpq   $0x0,0x190(%rax)
  0x000000010f81233f: jne    0x000000010f812358
  0x000000010f812341: mov    %rbx,0x190(%rax)
  0x000000010f812348: movq   $0x1,0x198(%rax)
  0x000000010f812353: jmpq   0x000000010f812384
  0x000000010f812358: cmpq   $0x0,0x1a0(%rax)
  0x000000010f812363: jne    0x000000010f81237c
  0x000000010f812365: mov    %rbx,0x1a0(%rax)
  0x000000010f81236c: movq   $0x1,0x1a8(%rax)
  0x000000010f812377: jmpq   0x000000010f812384
  0x000000010f81237c: addq   $0x1,0x188(%rax)
  0x000000010f812384: movabs $0x10eda7878,%rbx  ;   {metadata(method data for {method} {0x000000010eac0700} 'isGetter' '()Z' in 'java/lang/invoke/MemberName')}
  0x000000010f81238e: mov    0xdc(%rbx),%eax
  0x000000010f812394: add    $0x8,%eax
  0x000000010f812397: mov    %eax,0xdc(%rbx)
  0x000000010f81239d: movabs $0x10eac0700,%rbx  ;   {metadata({method} {0x000000010eac0700} 'isGetter' '()Z' in 'java/lang/invoke/MemberName')}
  0x000000010f8123a7: and    $0x7ffff8,%eax
  0x000000010f8123ad: cmp    $0x0,%eax
  0x000000010f8123b0: je     0x000000010f8133d5
  0x000000010f8123b6: mov    %rsi,%rbx
  0x000000010f8123b9: movabs $0x10eda7878,%rax  ;   {metadata(method data for {method} {0x000000010eac0700} 'isGetter' '()Z' in 'java/lang/invoke/MemberName')}
  0x000000010f8123c3: mov    0x8(%rbx),%ebx
  0x000000010f8123c6: shl    $0x3,%rbx
  0x000000010f8123ca: cmp    0x110(%rax),%rbx
  0x000000010f8123d1: jne    0x000000010f8123e0
  0x000000010f8123d3: addq   $0x1,0x118(%rax)
  0x000000010f8123db: jmpq   0x000000010f812446
  0x000000010f8123e0: cmp    0x120(%rax),%rbx
  0x000000010f8123e7: jne    0x000000010f8123f6
  0x000000010f8123e9: addq   $0x1,0x128(%rax)
  0x000000010f8123f1: jmpq   0x000000010f812446
  0x000000010f8123f6: cmpq   $0x0,0x110(%rax)
  0x000000010f812401: jne    0x000000010f81241a
  0x000000010f812403: mov    %rbx,0x110(%rax)
  0x000000010f81240a: movq   $0x1,0x118(%rax)
  0x000000010f812415: jmpq   0x000000010f812446
  0x000000010f81241a: cmpq   $0x0,0x120(%rax)
  0x000000010f812425: jne    0x000000010f81243e
  0x000000010f812427: mov    %rbx,0x120(%rax)
  0x000000010f81242e: movq   $0x1,0x128(%rax)
  0x000000010f812439: jmpq   0x000000010f812446
  0x000000010f81243e: addq   $0x1,0x108(%rax)
  0x000000010f812446: movabs $0x10eda7a00,%rbx  ;   {metadata(method data for {method} {0x000000010eabe598} 'getReferenceKind' '()B' in 'java/lang/invoke/MemberName')}
  0x000000010f812450: mov    0xdc(%rbx),%eax
  0x000000010f812456: add    $0x8,%eax
  0x000000010f812459: mov    %eax,0xdc(%rbx)
  0x000000010f81245f: movabs $0x10eabe598,%rbx  ;   {metadata({method} {0x000000010eabe598} 'getReferenceKind' '()B' in 'java/lang/invoke/MemberName')}
  0x000000010f812469: and    $0x7ffff8,%eax
  0x000000010f81246f: cmp    $0x0,%eax
  0x000000010f812472: je     0x000000010f8133ec
  0x000000010f812478: movabs $0x10eda7878,%rbx  ;   {metadata(method data for {method} {0x000000010eac0700} 'isGetter' '()Z' in 'java/lang/invoke/MemberName')}
  0x000000010f812482: addq   $0x1,0x138(%rbx)
  0x000000010f81248a: shr    $0x18,%edi
  0x000000010f81248d: and    $0xf,%edi
  0x000000010f812490: shl    $0x18,%edi
  0x000000010f812493: sar    $0x18,%edi
  0x000000010f812496: mov    %rdi,%rsi          ;*invokestatic refKindIsGetter
                                                ; - java.lang.invoke.MemberName::isGetter@4 (line 630)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@13 (line 111)

  0x000000010f812499: nop
  0x000000010f81249a: nop
  0x000000010f81249b: nop
  0x000000010f81249c: nop
  0x000000010f81249d: nop
  0x000000010f81249e: nop
  0x000000010f81249f: callq  0x000000010f717520  ; OopMap{[120]=Oop off=1124}
                                                ;*invokestatic refKindIsGetter
                                                ; - java.lang.invoke.MemberName::isGetter@4 (line 630)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@13 (line 111)
                                                ;   {static_call}
  0x000000010f8124a4: and    $0x1,%eax
  0x000000010f8124a7: cmp    $0x0,%eax
  0x000000010f8124aa: movabs $0x10eda6ed8,%rsi  ;   {metadata(method data for {method} {0x000000010eabde10} 'getMethodOrFieldType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f8124b4: movabs $0x1b8,%rdi
  0x000000010f8124be: je     0x000000010f8124ce
  0x000000010f8124c4: movabs $0x1c8,%rdi
  0x000000010f8124ce: mov    (%rsi,%rdi,1),%rbx
  0x000000010f8124d2: lea    0x1(%rbx),%rbx
  0x000000010f8124d6: mov    %rbx,(%rsi,%rdi,1)
  0x000000010f8124da: mov    0x78(%rsp),%rsi
  0x000000010f8124df: mov    %rsi,%rdi
  0x000000010f8124e2: jne    0x000000010f812f43  ;*ifeq
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@16 (line 111)

  0x000000010f8124e8: movabs $0x10eda6ed8,%rbx  ;   {metadata(method data for {method} {0x000000010eabde10} 'getMethodOrFieldType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f8124f2: mov    0x8(%rdi),%edi
  0x000000010f8124f5: shl    $0x3,%rdi
  0x000000010f8124f9: cmp    0x220(%rbx),%rdi
  0x000000010f812500: jne    0x000000010f81250f
  0x000000010f812502: addq   $0x1,0x228(%rbx)
  0x000000010f81250a: jmpq   0x000000010f812575
  0x000000010f81250f: cmp    0x230(%rbx),%rdi
  0x000000010f812516: jne    0x000000010f812525
  0x000000010f812518: addq   $0x1,0x238(%rbx)
  0x000000010f812520: jmpq   0x000000010f812575
  0x000000010f812525: cmpq   $0x0,0x220(%rbx)
  0x000000010f812530: jne    0x000000010f812549
  0x000000010f812532: mov    %rdi,0x220(%rbx)
  0x000000010f812539: movq   $0x1,0x228(%rbx)
  0x000000010f812544: jmpq   0x000000010f812575
  0x000000010f812549: cmpq   $0x0,0x230(%rbx)
  0x000000010f812554: jne    0x000000010f81256d
  0x000000010f812556: mov    %rdi,0x230(%rbx)
  0x000000010f81255d: movq   $0x1,0x238(%rbx)
  0x000000010f812568: jmpq   0x000000010f812575
  0x000000010f81256d: addq   $0x1,0x218(%rbx)
  0x000000010f812575: movabs $0x10eda8768,%rdi  ;   {metadata(method data for {method} {0x000000010eac0798} 'isSetter' '()Z' in 'java/lang/invoke/MemberName')}
  0x000000010f81257f: mov    0xdc(%rdi),%ebx
  0x000000010f812585: add    $0x8,%ebx
  0x000000010f812588: mov    %ebx,0xdc(%rdi)
  0x000000010f81258e: movabs $0x10eac0798,%rdi  ;   {metadata({method} {0x000000010eac0798} 'isSetter' '()Z' in 'java/lang/invoke/MemberName')}
  0x000000010f812598: and    $0x7ffff8,%ebx
  0x000000010f81259e: cmp    $0x0,%ebx
  0x000000010f8125a1: je     0x000000010f813403
  0x000000010f8125a7: mov    %rsi,%rdi
  0x000000010f8125aa: movabs $0x10eda8768,%rbx  ;   {metadata(method data for {method} {0x000000010eac0798} 'isSetter' '()Z' in 'java/lang/invoke/MemberName')}
  0x000000010f8125b4: mov    0x8(%rdi),%edi
  0x000000010f8125b7: shl    $0x3,%rdi
  0x000000010f8125bb: cmp    0x110(%rbx),%rdi
  0x000000010f8125c2: jne    0x000000010f8125d1
  0x000000010f8125c4: addq   $0x1,0x118(%rbx)
  0x000000010f8125cc: jmpq   0x000000010f812637
  0x000000010f8125d1: cmp    0x120(%rbx),%rdi
  0x000000010f8125d8: jne    0x000000010f8125e7
  0x000000010f8125da: addq   $0x1,0x128(%rbx)
  0x000000010f8125e2: jmpq   0x000000010f812637
  0x000000010f8125e7: cmpq   $0x0,0x110(%rbx)
  0x000000010f8125f2: jne    0x000000010f81260b
  0x000000010f8125f4: mov    %rdi,0x110(%rbx)
  0x000000010f8125fb: movq   $0x1,0x118(%rbx)
  0x000000010f812606: jmpq   0x000000010f812637
  0x000000010f81260b: cmpq   $0x0,0x120(%rbx)
  0x000000010f812616: jne    0x000000010f81262f
  0x000000010f812618: mov    %rdi,0x120(%rbx)
  0x000000010f81261f: movq   $0x1,0x128(%rbx)
  0x000000010f81262a: jmpq   0x000000010f812637
  0x000000010f81262f: addq   $0x1,0x108(%rbx)
  0x000000010f812637: movabs $0x10eda7a00,%rdi  ;   {metadata(method data for {method} {0x000000010eabe598} 'getReferenceKind' '()B' in 'java/lang/invoke/MemberName')}
  0x000000010f812641: mov    0xdc(%rdi),%ebx
  0x000000010f812647: add    $0x8,%ebx
  0x000000010f81264a: mov    %ebx,0xdc(%rdi)
  0x000000010f812650: movabs $0x10eabe598,%rdi  ;   {metadata({method} {0x000000010eabe598} 'getReferenceKind' '()B' in 'java/lang/invoke/MemberName')}
  0x000000010f81265a: and    $0x7ffff8,%ebx
  0x000000010f812660: cmp    $0x0,%ebx
  0x000000010f812663: je     0x000000010f81341a
  0x000000010f812669: mov    0xc(%rsi),%edi     ;*getfield flags
                                                ; - java.lang.invoke.MemberName::getReferenceKind@1 (line 250)
                                                ; - java.lang.invoke.MemberName::isSetter@1 (line 633)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@28 (line 113)

  0x000000010f81266c: shr    $0x18,%edi
  0x000000010f81266f: and    $0xf,%edi
  0x000000010f812672: shl    $0x18,%edi
  0x000000010f812675: sar    $0x18,%edi
  0x000000010f812678: movabs $0x10eda8768,%rbx  ;   {metadata(method data for {method} {0x000000010eac0798} 'isSetter' '()Z' in 'java/lang/invoke/MemberName')}
  0x000000010f812682: addq   $0x1,0x138(%rbx)
  0x000000010f81268a: movabs $0x10eda88f0,%rbx  ;   {metadata(method data for {method} {0x000000010eac3978} 'refKindIsSetter' '(B)Z' in 'java/lang/invoke/MethodHandleNatives')}
  0x000000010f812694: mov    0xdc(%rbx),%eax
  0x000000010f81269a: add    $0x8,%eax
  0x000000010f81269d: mov    %eax,0xdc(%rbx)
  0x000000010f8126a3: movabs $0x10eac3978,%rbx  ;   {metadata({method} {0x000000010eac3978} 'refKindIsSetter' '(B)Z' in 'java/lang/invoke/MethodHandleNatives')}
  0x000000010f8126ad: and    $0x7ffff8,%eax
  0x000000010f8126b3: cmp    $0x0,%eax
  0x000000010f8126b6: je     0x000000010f813431
  0x000000010f8126bc: movabs $0x10eda88f0,%rbx  ;   {metadata(method data for {method} {0x000000010eac3978} 'refKindIsSetter' '(B)Z' in 'java/lang/invoke/MethodHandleNatives')}
  0x000000010f8126c6: addq   $0x1,0x108(%rbx)
  0x000000010f8126ce: mov    %rdi,%rsi          ;*invokestatic refKindIsField
                                                ; - java.lang.invoke.MethodHandleNatives::refKindIsSetter@1 (line 203)
                                                ; - java.lang.invoke.MemberName::isSetter@4 (line 633)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@28 (line 113)

  0x000000010f8126d1: mov    %edi,0x80(%rsp)
  0x000000010f8126d8: nop
  0x000000010f8126d9: nop
  0x000000010f8126da: nop
  0x000000010f8126db: nop
  0x000000010f8126dc: nop
  0x000000010f8126dd: nop
  0x000000010f8126de: nop
  0x000000010f8126df: callq  0x000000010f717520  ; OopMap{[120]=Oop off=1700}
                                                ;*invokestatic refKindIsField
                                                ; - java.lang.invoke.MethodHandleNatives::refKindIsSetter@1 (line 203)
                                                ; - java.lang.invoke.MemberName::isSetter@4 (line 633)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@28 (line 113)
                                                ;   {static_call}
  0x000000010f8126e4: cmp    $0x0,%eax
  0x000000010f8126e7: movabs $0x10eda88f0,%rsi  ;   {metadata(method data for {method} {0x000000010eac3978} 'refKindIsSetter' '(B)Z' in 'java/lang/invoke/MethodHandleNatives')}
  0x000000010f8126f1: movabs $0x118,%rdi
  0x000000010f8126fb: je     0x000000010f81270b
  0x000000010f812701: movabs $0x128,%rdi
  0x000000010f81270b: mov    (%rsi,%rdi,1),%rbx
  0x000000010f81270f: lea    0x1(%rbx),%rbx
  0x000000010f812713: mov    %rbx,(%rsi,%rdi,1)
  0x000000010f812717: je     0x000000010f81277d  ;*ifeq
                                                ; - java.lang.invoke.MethodHandleNatives::refKindIsSetter@4 (line 203)
                                                ; - java.lang.invoke.MemberName::isSetter@4 (line 633)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@28 (line 113)

  0x000000010f81271d: mov    0x80(%rsp),%edi
  0x000000010f812724: movabs $0x10eda88f0,%rsi  ;   {metadata(method data for {method} {0x000000010eac3978} 'refKindIsSetter' '(B)Z' in 'java/lang/invoke/MethodHandleNatives')}
  0x000000010f81272e: addq   $0x1,0x138(%rsi)
  0x000000010f812736: mov    %rdi,%rsi          ;*invokestatic refKindIsGetter
                                                ; - java.lang.invoke.MethodHandleNatives::refKindIsSetter@8 (line 203)
                                                ; - java.lang.invoke.MemberName::isSetter@4 (line 633)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@28 (line 113)

  0x000000010f812739: nop
  0x000000010f81273a: nop
  0x000000010f81273b: nop
  0x000000010f81273c: nop
  0x000000010f81273d: nop
  0x000000010f81273e: nop
  0x000000010f81273f: callq  0x000000010f717520  ; OopMap{[120]=Oop off=1796}
                                                ;*invokestatic refKindIsGetter
                                                ; - java.lang.invoke.MethodHandleNatives::refKindIsSetter@8 (line 203)
                                                ; - java.lang.invoke.MemberName::isSetter@4 (line 633)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@28 (line 113)
                                                ;   {static_call}
  0x000000010f812744: cmp    $0x0,%eax
  0x000000010f812747: movabs $0x10eda88f0,%rdx  ;   {metadata(method data for {method} {0x000000010eac3978} 'refKindIsSetter' '(B)Z' in 'java/lang/invoke/MethodHandleNatives')}
  0x000000010f812751: movabs $0x148,%rsi
  0x000000010f81275b: jne    0x000000010f81276b
  0x000000010f812761: movabs $0x158,%rsi
  0x000000010f81276b: mov    (%rdx,%rsi,1),%rdi
  0x000000010f81276f: lea    0x1(%rdi),%rdi
  0x000000010f812773: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f812777: je     0x000000010f812787  ;*ifne
                                                ; - java.lang.invoke.MethodHandleNatives::refKindIsSetter@11 (line 203)
                                                ; - java.lang.invoke.MemberName::isSetter@4 (line 633)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@28 (line 113)

  0x000000010f81277d: mov    $0x0,%edx
  0x000000010f812782: jmpq   0x000000010f81279c  ;*ireturn
                                                ; - java.lang.invoke.MethodHandleNatives::refKindIsSetter@19 (line 203)
                                                ; - java.lang.invoke.MemberName::isSetter@4 (line 633)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@28 (line 113)

  0x000000010f812787: movabs $0x10eda88f0,%rdx  ;   {metadata(method data for {method} {0x000000010eac3978} 'refKindIsSetter' '(B)Z' in 'java/lang/invoke/MethodHandleNatives')}
  0x000000010f812791: incl   0x168(%rdx)
  0x000000010f812797: mov    $0x1,%edx          ;*goto
                                                ; - java.lang.invoke.MethodHandleNatives::refKindIsSetter@15 (line 203)
                                                ; - java.lang.invoke.MemberName::isSetter@4 (line 633)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@28 (line 113)

  0x000000010f81279c: and    $0x1,%edx
  0x000000010f81279f: and    $0x1,%edx
  0x000000010f8127a2: cmp    $0x0,%edx
  0x000000010f8127a5: movabs $0x10eda6ed8,%rdx  ;   {metadata(method data for {method} {0x000000010eabde10} 'getMethodOrFieldType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f8127af: movabs $0x248,%rsi
  0x000000010f8127b9: je     0x000000010f8127c9
  0x000000010f8127bf: movabs $0x258,%rsi
  0x000000010f8127c9: mov    (%rdx,%rsi,1),%rdi
  0x000000010f8127cd: lea    0x1(%rdi),%rdi
  0x000000010f8127d1: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f8127d5: jne    0x000000010f812c7c  ;*ifeq
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@31 (line 113)

  0x000000010f8127db: nopl   0x0(%rax,%rax,1)
  0x000000010f8127e0: jmpq   0x000000010f813457  ;   {no_reloc}
  0x000000010f8127e5: add    %al,(%rax)
  0x000000010f8127e7: add    %al,(%rax)
  0x000000010f8127e9: add    %cl,-0x75(%rcx)
  0x000000010f8127ec: rex.RXB (bad) 
  0x000000010f8127ee: lea    0x20(%rax),%rdi
  0x000000010f8127f2: cmp    0x70(%r15),%rdi
  0x000000010f8127f6: ja     0x000000010f813461
  0x000000010f8127fc: mov    %rdi,0x60(%r15)
  0x000000010f812800: mov    0xa8(%rdx),%rcx
  0x000000010f812807: mov    %rcx,(%rax)
  0x000000010f81280a: mov    %rdx,%rcx
  0x000000010f81280d: shr    $0x3,%rcx
  0x000000010f812811: mov    %ecx,0x8(%rax)
  0x000000010f812814: xor    %rcx,%rcx
  0x000000010f812817: mov    %ecx,0xc(%rax)
  0x000000010f81281a: xor    %rcx,%rcx
  0x000000010f81281d: mov    %rcx,0x10(%rax)
  0x000000010f812821: mov    %rcx,0x18(%rax)    ;*new  ; - java.lang.invoke.MemberName::getMethodOrFieldType@45 (line 115)

  0x000000010f812825: mov    %rax,0x90(%rsp)
  0x000000010f81282d: data16 xchg %ax,%ax
  0x000000010f812830: jmpq   0x000000010f81347d  ;   {no_reloc}
  0x000000010f812835: add    %al,(%rax)
  0x000000010f812837: add    %al,(%rax)
  0x000000010f812839: add    %cl,-0x75(%rcx)
  0x000000010f81283c: rex.RXB (bad) 
  0x000000010f81283e: lea    0x18(%rax),%rdi
  0x000000010f812842: cmp    0x70(%r15),%rdi
  0x000000010f812846: ja     0x000000010f813487
  0x000000010f81284c: mov    %rdi,0x60(%r15)
  0x000000010f812850: mov    0xa8(%rdx),%rcx
  0x000000010f812857: mov    %rcx,(%rax)
  0x000000010f81285a: mov    %rdx,%rcx
  0x000000010f81285d: shr    $0x3,%rcx
  0x000000010f812861: mov    %ecx,0x8(%rax)
  0x000000010f812864: xor    %rcx,%rcx
  0x000000010f812867: mov    %ecx,0xc(%rax)
  0x000000010f81286a: xor    %rcx,%rcx
  0x000000010f81286d: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.invoke.MemberName::getMethodOrFieldType@49 (line 115)

  0x000000010f812871: mov    %rax,%rbx
  0x000000010f812874: movabs $0x10eda6ed8,%rdx  ;   {metadata(method data for {method} {0x000000010eabde10} 'getMethodOrFieldType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f81287e: addq   $0x1,0x2a8(%rdx)
  0x000000010f812886: movabs $0x10ed0ae70,%rbx  ;   {metadata(method data for {method} {0x000000010eaddf30} '<init>' '()V' in 'java/lang/StringBuilder')}
  0x000000010f812890: mov    0xdc(%rbx),%edx
  0x000000010f812896: add    $0x8,%edx
  0x000000010f812899: mov    %edx,0xdc(%rbx)
  0x000000010f81289f: movabs $0x10eaddf30,%rbx  ;   {metadata({method} {0x000000010eaddf30} '<init>' '()V' in 'java/lang/StringBuilder')}
  0x000000010f8128a9: and    $0x7ffff8,%edx
  0x000000010f8128af: cmp    $0x0,%edx
  0x000000010f8128b2: je     0x000000010f813494
  0x000000010f8128b8: mov    %rax,%rbx
  0x000000010f8128bb: movabs $0x10ed0ae70,%rdx  ;   {metadata(method data for {method} {0x000000010eaddf30} '<init>' '()V' in 'java/lang/StringBuilder')}
  0x000000010f8128c5: addq   $0x1,0x108(%rdx)
  0x000000010f8128cd: movabs $0x10ec9a3e8,%rbx  ;   {metadata(method data for {method} {0x000000010eada260} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f8128d7: mov    0xdc(%rbx),%edx
  0x000000010f8128dd: add    $0x8,%edx
  0x000000010f8128e0: mov    %edx,0xdc(%rbx)
  0x000000010f8128e6: movabs $0x10eada260,%rbx  ;   {metadata({method} {0x000000010eada260} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f8128f0: and    $0x7ffff8,%edx
  0x000000010f8128f6: cmp    $0x0,%edx
  0x000000010f8128f9: je     0x000000010f8134ab
  0x000000010f8128ff: mov    %rax,%rbx
  0x000000010f812902: movabs $0x10ec9a3e8,%rdx  ;   {metadata(method data for {method} {0x000000010eada260} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f81290c: addq   $0x1,0x108(%rdx)
  0x000000010f812914: movabs $0x10ebdca10,%rbx  ;   {metadata(method data for {method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f81291e: mov    0xdc(%rbx),%edx
  0x000000010f812924: add    $0x8,%edx
  0x000000010f812927: mov    %edx,0xdc(%rbx)
  0x000000010f81292d: movabs $0x10ea65480,%rbx  ;   {metadata({method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f812937: and    $0x7ffff8,%edx
  0x000000010f81293d: cmp    $0x0,%edx
  0x000000010f812940: je     0x000000010f8134c2
  0x000000010f812946: mov    $0x10,%ebx
  0x000000010f81294b: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000000010f812955: mov    %rax,%r11
  0x000000010f812958: movslq %ebx,%rbx
  0x000000010f81295b: mov    %rbx,%rdi
  0x000000010f81295e: cmp    $0xffffff,%rbx
  0x000000010f812965: ja     0x000000010f8134d9
  0x000000010f81296b: movabs $0x17,%rsi
  0x000000010f812975: lea    (%rsi,%rbx,2),%rsi
  0x000000010f812979: and    $0xfffffffffffffff8,%rsi
  0x000000010f81297d: mov    0x60(%r15),%rax
  0x000000010f812981: lea    (%rax,%rsi,1),%rsi
  0x000000010f812985: cmp    0x70(%r15),%rsi
  0x000000010f812989: ja     0x000000010f8134d9
  0x000000010f81298f: mov    %rsi,0x60(%r15)
  0x000000010f812993: sub    %rax,%rsi
  0x000000010f812996: movq   $0x1,(%rax)
  0x000000010f81299d: mov    %rdx,%rcx
  0x000000010f8129a0: shr    $0x3,%rcx
  0x000000010f8129a4: mov    %ecx,0x8(%rax)
  0x000000010f8129a7: mov    %ebx,0xc(%rax)
  0x000000010f8129aa: sub    $0x10,%rsi
  0x000000010f8129ae: je     0x000000010f8129c5
  0x000000010f8129b4: xor    %rbx,%rbx
  0x000000010f8129b7: shr    $0x3,%rsi
  0x000000010f8129bb: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000010f8129c0: dec    %rsi
  0x000000010f8129c3: jne    0x000000010f8129bb  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::<init>@6 (line 68)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@53 (line 115)

  0x000000010f8129c5: mov    %rax,%r10
  0x000000010f8129c8: shr    $0x3,%r10
  0x000000010f8129cc: mov    %r10d,0x10(%r11)
  0x000000010f8129d0: mov    %r11,%rax
  0x000000010f8129d3: shr    $0x9,%rax
  0x000000010f8129d7: movabs $0x1065b9000,%rdx
  0x000000010f8129e1: movb   $0x0,(%rax,%rdx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::<init>@8 (line 68)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@53 (line 115)

  0x000000010f8129e5: mov    %r11,%rax
  0x000000010f8129e8: movabs $0x10eda6ed8,%rdx  ;   {metadata(method data for {method} {0x000000010eabde10} 'getMethodOrFieldType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f8129f2: mov    0x8(%rax),%eax
  0x000000010f8129f5: shl    $0x3,%rax
  0x000000010f8129f9: cmp    0x2c0(%rdx),%rax
  0x000000010f812a00: jne    0x000000010f812a0f
  0x000000010f812a02: addq   $0x1,0x2c8(%rdx)
  0x000000010f812a0a: jmpq   0x000000010f812a75
  0x000000010f812a0f: cmp    0x2d0(%rdx),%rax
  0x000000010f812a16: jne    0x000000010f812a25
  0x000000010f812a18: addq   $0x1,0x2d8(%rdx)
  0x000000010f812a20: jmpq   0x000000010f812a75
  0x000000010f812a25: cmpq   $0x0,0x2c0(%rdx)
  0x000000010f812a30: jne    0x000000010f812a49
  0x000000010f812a32: mov    %rax,0x2c0(%rdx)
  0x000000010f812a39: movq   $0x1,0x2c8(%rdx)
  0x000000010f812a44: jmpq   0x000000010f812a75
  0x000000010f812a49: cmpq   $0x0,0x2d0(%rdx)
  0x000000010f812a54: jne    0x000000010f812a6d
  0x000000010f812a56: mov    %rax,0x2d0(%rdx)
  0x000000010f812a5d: movq   $0x1,0x2d8(%rdx)
  0x000000010f812a68: jmpq   0x000000010f812a75
  0x000000010f812a6d: addq   $0x1,0x2b8(%rdx)
  0x000000010f812a75: movabs $0x10ec81440,%rdx  ;   {metadata(method data for {method} {0x000000010eade248} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f812a7f: mov    0xdc(%rdx),%esi
  0x000000010f812a85: add    $0x8,%esi
  0x000000010f812a88: mov    %esi,0xdc(%rdx)
  0x000000010f812a8e: movabs $0x10eade248,%rdx  ;   {metadata({method} {0x000000010eade248} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f812a98: and    $0x7ffff8,%esi
  0x000000010f812a9e: cmp    $0x0,%esi
  0x000000010f812aa1: je     0x000000010f8134e3
  0x000000010f812aa7: mov    %r11,%rax
  0x000000010f812aaa: movabs $0x10ec81440,%rdx  ;   {metadata(method data for {method} {0x000000010eade248} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f812ab4: addq   $0x1,0x108(%rdx)
  0x000000010f812abc: movabs $0x795968cb0,%rdx  ;   {oop("not a method or field: ")}
  0x000000010f812ac6: mov    %r11,%rsi          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@58 (line 115)

  0x000000010f812ac9: mov    %r11,0x88(%rsp)
  0x000000010f812ad1: nop
  0x000000010f812ad2: nop
  0x000000010f812ad3: nop
  0x000000010f812ad4: nop
  0x000000010f812ad5: nop
  0x000000010f812ad6: nop
  0x000000010f812ad7: callq  0x000000010f7170a0  ; OopMap{[136]=Oop [144]=Oop [120]=Oop off=2716}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@58 (line 115)
                                                ;   {optimized virtual_call}
  0x000000010f812adc: mov    0x88(%rsp),%rax
  0x000000010f812ae4: movabs $0x10eda6ed8,%rsi  ;   {metadata(method data for {method} {0x000000010eabde10} 'getMethodOrFieldType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f812aee: mov    0x8(%rax),%eax
  0x000000010f812af1: shl    $0x3,%rax
  0x000000010f812af5: cmp    0x2f0(%rsi),%rax
  0x000000010f812afc: jne    0x000000010f812b0b
  0x000000010f812afe: addq   $0x1,0x2f8(%rsi)
  0x000000010f812b06: jmpq   0x000000010f812b71
  0x000000010f812b0b: cmp    0x300(%rsi),%rax
  0x000000010f812b12: jne    0x000000010f812b21
  0x000000010f812b14: addq   $0x1,0x308(%rsi)
  0x000000010f812b1c: jmpq   0x000000010f812b71
  0x000000010f812b21: cmpq   $0x0,0x2f0(%rsi)
  0x000000010f812b2c: jne    0x000000010f812b45
  0x000000010f812b2e: mov    %rax,0x2f0(%rsi)
  0x000000010f812b35: movq   $0x1,0x2f8(%rsi)
  0x000000010f812b40: jmpq   0x000000010f812b71
  0x000000010f812b45: cmpq   $0x0,0x300(%rsi)
  0x000000010f812b50: jne    0x000000010f812b69
  0x000000010f812b52: mov    %rax,0x300(%rsi)
  0x000000010f812b59: movq   $0x1,0x308(%rsi)
  0x000000010f812b64: jmpq   0x000000010f812b71
  0x000000010f812b69: addq   $0x1,0x2e8(%rsi)
  0x000000010f812b71: movabs $0x10eda8e20,%rsi  ;   {metadata(method data for {method} {0x000000010eade1b0} 'append' '(Ljava/lang/Object;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f812b7b: mov    0xdc(%rsi),%edi
  0x000000010f812b81: add    $0x8,%edi
  0x000000010f812b84: mov    %edi,0xdc(%rsi)
  0x000000010f812b8a: movabs $0x10eade1b0,%rsi  ;   {metadata({method} {0x000000010eade1b0} 'append' '(Ljava/lang/Object;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f812b94: and    $0x7ffff8,%edi
  0x000000010f812b9a: cmp    $0x0,%edi
  0x000000010f812b9d: je     0x000000010f8134fa
  0x000000010f812ba3: movabs $0x10eda8e20,%rsi  ;   {metadata(method data for {method} {0x000000010eade1b0} 'append' '(Ljava/lang/Object;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f812bad: addq   $0x1,0x108(%rsi)
  0x000000010f812bb5: movabs $0x10eda8fb0,%rsi  ;   {metadata(method data for {method} {0x000000010ea6c0c8} 'valueOf' '(Ljava/lang/Object;)Ljava/lang/String;' in 'java/lang/String')}
  0x000000010f812bbf: mov    0xdc(%rsi),%edi
  0x000000010f812bc5: add    $0x8,%edi
  0x000000010f812bc8: mov    %edi,0xdc(%rsi)
  0x000000010f812bce: movabs $0x10ea6c0c8,%rsi  ;   {metadata({method} {0x000000010ea6c0c8} 'valueOf' '(Ljava/lang/Object;)Ljava/lang/String;' in 'java/lang/String')}
  0x000000010f812bd8: and    $0x7ffff8,%edi
  0x000000010f812bde: cmp    $0x0,%edi
  0x000000010f812be1: je     0x000000010f813511
  0x000000010f812be7: mov    0x78(%rsp),%rsi
  0x000000010f812bec: cmp    $0x0,%rsi
  0x000000010f812bf0: movabs $0x10eda8fb0,%rdi  ;   {metadata(method data for {method} {0x000000010ea6c0c8} 'valueOf' '(Ljava/lang/Object;)Ljava/lang/String;' in 'java/lang/String')}
  0x000000010f812bfa: movabs $0x108,%rbx
  0x000000010f812c04: jne    0x000000010f812c14
  0x000000010f812c0a: movabs $0x118,%rbx
  0x000000010f812c14: mov    (%rdi,%rbx,1),%rax
  0x000000010f812c18: lea    0x1(%rax),%rax
  0x000000010f812c1c: mov    %rax,(%rdi,%rbx,1)
  0x000000010f812c20: jne    0x000000010f812c45  ;*ifnonnull
                                                ; - java.lang.String::valueOf@1 (line 2994)
                                                ; - java.lang.StringBuilder::append@2 (line 131)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@62 (line 115)

  0x000000010f812c26: movabs $0x10eda8fb0,%rsi  ;   {metadata(method data for {method} {0x000000010ea6c0c8} 'valueOf' '(Ljava/lang/Object;)Ljava/lang/String;' in 'java/lang/String')}
  0x000000010f812c30: incl   0x128(%rsi)
  0x000000010f812c36: movabs $0x7955840a0,%rsi  ;   {oop("null")}
  0x000000010f812c40: jmpq   0x000000010f813103  ;*goto
                                                ; - java.lang.String::valueOf@6 (line 2994)
                                                ; - java.lang.StringBuilder::append@2 (line 131)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@62 (line 115)

  0x000000010f812c45: mov    %rsi,%rdi
  0x000000010f812c48: movabs $0x10eda8fb0,%rbx  ;   {metadata(method data for {method} {0x000000010ea6c0c8} 'valueOf' '(Ljava/lang/Object;)Ljava/lang/String;' in 'java/lang/String')}
  0x000000010f812c52: movabs $0x7c000bd70,%r10  ;   {metadata('java/lang/invoke/MemberName')}
  0x000000010f812c5c: mov    %r10,0x148(%rbx)
  0x000000010f812c63: addq   $0x1,0x150(%rbx)
  0x000000010f812c6b: nop
  0x000000010f812c6c: nop
  0x000000010f812c6d: nop
  0x000000010f812c6e: nop
  0x000000010f812c6f: callq  0x000000010f7170a0  ; OopMap{[136]=Oop [144]=Oop off=3124}
                                                ;*invokevirtual toString
                                                ; - java.lang.String::valueOf@10 (line 2994)
                                                ; - java.lang.StringBuilder::append@2 (line 131)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@62 (line 115)
                                                ;   {optimized virtual_call}
  0x000000010f812c74: mov    %rax,%rsi
  0x000000010f812c77: jmpq   0x000000010f813103  ;*areturn
                                                ; - java.lang.String::valueOf@13 (line 2994)
                                                ; - java.lang.StringBuilder::append@2 (line 131)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@62 (line 115)

  0x000000010f812c7c: mov    0x78(%rsp),%rsi
  0x000000010f812c81: mov    %rsi,%rdi
  0x000000010f812c84: movabs $0x10eda6ed8,%rbx  ;   {metadata(method data for {method} {0x000000010eabde10} 'getMethodOrFieldType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f812c8e: mov    0x8(%rdi),%edi
  0x000000010f812c91: shl    $0x3,%rdi
  0x000000010f812c95: cmp    0x270(%rbx),%rdi
  0x000000010f812c9c: jne    0x000000010f812cab
  0x000000010f812c9e: addq   $0x1,0x278(%rbx)
  0x000000010f812ca6: jmpq   0x000000010f812d11
  0x000000010f812cab: cmp    0x280(%rbx),%rdi
  0x000000010f812cb2: jne    0x000000010f812cc1
  0x000000010f812cb4: addq   $0x1,0x288(%rbx)
  0x000000010f812cbc: jmpq   0x000000010f812d11
  0x000000010f812cc1: cmpq   $0x0,0x270(%rbx)
  0x000000010f812ccc: jne    0x000000010f812ce5
  0x000000010f812cce: mov    %rdi,0x270(%rbx)
  0x000000010f812cd5: movq   $0x1,0x278(%rbx)
  0x000000010f812ce0: jmpq   0x000000010f812d11
  0x000000010f812ce5: cmpq   $0x0,0x280(%rbx)
  0x000000010f812cf0: jne    0x000000010f812d09
  0x000000010f812cf2: mov    %rdi,0x280(%rbx)
  0x000000010f812cf9: movq   $0x1,0x288(%rbx)
  0x000000010f812d04: jmpq   0x000000010f812d11
  0x000000010f812d09: addq   $0x1,0x268(%rbx)
  0x000000010f812d11: nop
  0x000000010f812d12: nop
  0x000000010f812d13: nop
  0x000000010f812d14: nop
  0x000000010f812d15: nop
  0x000000010f812d16: nop
  0x000000010f812d17: callq  0x000000010f7170a0  ; OopMap{off=3292}
                                                ;*invokevirtual getFieldType
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@38 (line 114)
                                                ;   {optimized virtual_call}
  0x000000010f812d1c: mov    %rax,%r8           ;*invokevirtual getFieldType
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@38 (line 114)

  0x000000010f812d1f: movabs $0x10eda6ed8,%rbx  ;   {metadata(method data for {method} {0x000000010eabde10} 'getMethodOrFieldType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f812d29: addq   $0x1,0x298(%rbx)
  0x000000010f812d31: movabs $0x10eda8c90,%rbx  ;   {metadata(method data for {method} {0x000000010eaceca0} 'methodType' '(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MethodType')}
  0x000000010f812d3b: mov    0xdc(%rbx),%edx
  0x000000010f812d41: add    $0x8,%edx
  0x000000010f812d44: mov    %edx,0xdc(%rbx)
  0x000000010f812d4a: movabs $0x10eaceca0,%rbx  ;   {metadata({method} {0x000000010eaceca0} 'methodType' '(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MethodType')}
  0x000000010f812d54: and    $0x7ffff8,%edx
  0x000000010f812d5a: cmp    $0x0,%edx
  0x000000010f812d5d: je     0x000000010f813528
  0x000000010f812d63: mov    $0x1,%ebx
  0x000000010f812d68: movabs $0x7c0012340,%rdx  ;   {metadata('java/lang/Class'[])}
  0x000000010f812d72: movslq %ebx,%rbx
  0x000000010f812d75: mov    %rbx,%rdi
  0x000000010f812d78: cmp    $0xffffff,%rbx
  0x000000010f812d7f: ja     0x000000010f81353f
  0x000000010f812d85: movabs $0x17,%rsi
  0x000000010f812d8f: lea    (%rsi,%rbx,4),%rsi
  0x000000010f812d93: and    $0xfffffffffffffff8,%rsi
  0x000000010f812d97: mov    0x60(%r15),%rax
  0x000000010f812d9b: lea    (%rax,%rsi,1),%rsi
  0x000000010f812d9f: cmp    0x70(%r15),%rsi
  0x000000010f812da3: ja     0x000000010f81353f
  0x000000010f812da9: mov    %rsi,0x60(%r15)
  0x000000010f812dad: sub    %rax,%rsi
  0x000000010f812db0: movq   $0x1,(%rax)
  0x000000010f812db7: mov    %rdx,%rcx
  0x000000010f812dba: shr    $0x3,%rcx
  0x000000010f812dbe: mov    %ecx,0x8(%rax)
  0x000000010f812dc1: mov    %ebx,0xc(%rax)
  0x000000010f812dc4: sub    $0x10,%rsi
  0x000000010f812dc8: je     0x000000010f812ddf
  0x000000010f812dce: xor    %rbx,%rbx
  0x000000010f812dd1: shr    $0x3,%rsi
  0x000000010f812dd5: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000010f812dda: dec    %rsi
  0x000000010f812ddd: jne    0x000000010f812dd5  ;*anewarray
                                                ; - java.lang.invoke.MethodType::methodType@2 (line 274)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@41 (line 114)

  0x000000010f812ddf: lea    0x10(%rax),%rsi
  0x000000010f812de3: cmp    $0x0,%r8
  0x000000010f812de7: jne    0x000000010f812e02
  0x000000010f812de9: movabs $0x10eda8c90,%rcx  ;   {metadata(method data for {method} {0x000000010eaceca0} 'methodType' '(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MethodType')}
  0x000000010f812df3: orl    $0x100,0x100(%rcx)
  0x000000010f812dfd: jmpq   0x000000010f812ee8
  0x000000010f812e02: mov    0x8(%rax),%edx     ; implicit exception: dispatches to 0x000000010f813549
  0x000000010f812e05: shl    $0x3,%rdx
  0x000000010f812e09: mov    0x8(%r8),%ecx
  0x000000010f812e0d: shl    $0x3,%rcx
  0x000000010f812e11: mov    0xe8(%rdx),%rdx
  0x000000010f812e18: cmp    %rdx,%rcx
  0x000000010f812e1b: je     0x000000010f812e49
  0x000000010f812e21: mov    0xc(%rdx),%edi
  0x000000010f812e24: cmp    (%rcx,%rdi,1),%rdx
  0x000000010f812e28: je     0x000000010f812e49
  0x000000010f812e2e: cmp    $0x18,%edi
  0x000000010f812e31: jne    0x000000010f812ed1
  0x000000010f812e37: push   %rcx
  0x000000010f812e38: push   %rdx
  0x000000010f812e39: callq  0x000000010f7cf8e0  ;   {runtime_call}
  0x000000010f812e3e: pop    %rcx
  0x000000010f812e3f: pop    %rdx
  0x000000010f812e40: cmp    $0x0,%edx
  0x000000010f812e43: je     0x000000010f812ed1
  0x000000010f812e49: movabs $0x10eda8c90,%rcx  ;   {metadata(method data for {method} {0x000000010eaceca0} 'methodType' '(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MethodType')}
  0x000000010f812e53: mov    0x8(%r8),%edx
  0x000000010f812e57: shl    $0x3,%rdx
  0x000000010f812e5b: cmp    0x110(%rcx),%rdx
  0x000000010f812e62: jne    0x000000010f812e71
  0x000000010f812e64: addq   $0x1,0x118(%rcx)
  0x000000010f812e6c: jmpq   0x000000010f812ee8
  0x000000010f812e71: cmp    0x120(%rcx),%rdx
  0x000000010f812e78: jne    0x000000010f812e87
  0x000000010f812e7a: addq   $0x1,0x128(%rcx)
  0x000000010f812e82: jmpq   0x000000010f812ee8
  0x000000010f812e87: cmpq   $0x0,0x110(%rcx)
  0x000000010f812e92: jne    0x000000010f812eab
  0x000000010f812e94: mov    %rdx,0x110(%rcx)
  0x000000010f812e9b: movq   $0x1,0x118(%rcx)
  0x000000010f812ea6: jmpq   0x000000010f812ee8
  0x000000010f812eab: cmpq   $0x0,0x120(%rcx)
  0x000000010f812eb6: jne    0x000000010f812ecf
  0x000000010f812eb8: mov    %rdx,0x120(%rcx)
  0x000000010f812ebf: movq   $0x1,0x128(%rcx)
  0x000000010f812eca: jmpq   0x000000010f812ee8
  0x000000010f812ecf: jmp    0x000000010f812ee8
  0x000000010f812ed1: movabs $0x10eda8c90,%rcx  ;   {metadata(method data for {method} {0x000000010eaceca0} 'methodType' '(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MethodType')}
  0x000000010f812edb: subq   $0x1,0x108(%rcx)
  0x000000010f812ee3: jmpq   0x000000010f81354e
  0x000000010f812ee8: mov    %r8,%r10
  0x000000010f812eeb: shr    $0x3,%r10
  0x000000010f812eef: mov    %r10d,(%rsi)
  0x000000010f812ef2: shr    $0x9,%rsi
  0x000000010f812ef6: movabs $0x1065b9000,%rdx
  0x000000010f812f00: movb   $0x0,(%rsi,%rdx,1)  ;*aastore
                                                ; - java.lang.invoke.MethodType::methodType@8 (line 274)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@41 (line 114)

  0x000000010f812f04: movabs $0x10eda8c90,%rsi  ;   {metadata(method data for {method} {0x000000010eaceca0} 'methodType' '(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MethodType')}
  0x000000010f812f0e: addq   $0x1,0x138(%rsi)
  0x000000010f812f16: movabs $0x795580350,%rsi  ;   {oop(a 'java/lang/Class' = void)}
  0x000000010f812f20: mov    %rax,%rdx
  0x000000010f812f23: mov    $0x1,%ecx          ;*invokestatic makeImpl
                                                ; - java.lang.invoke.MethodType::methodType@10 (line 274)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@41 (line 114)

  0x000000010f812f28: nop
  0x000000010f812f29: nop
  0x000000010f812f2a: nop
  0x000000010f812f2b: nop
  0x000000010f812f2c: nop
  0x000000010f812f2d: nop
  0x000000010f812f2e: nop
  0x000000010f812f2f: callq  0x000000010f717520  ; OopMap{off=3828}
                                                ;*invokestatic makeImpl
                                                ; - java.lang.invoke.MethodType::methodType@10 (line 274)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@41 (line 114)
                                                ;   {static_call}
  0x000000010f812f34: add    $0xb0,%rsp
  0x000000010f812f3b: pop    %rbp
  0x000000010f812f3c: test   %eax,-0x8d77e42(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f812f42: retq                      ;*areturn
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@44 (line 114)

  0x000000010f812f43: movabs $0x10eda6ed8,%rbx  ;   {metadata(method data for {method} {0x000000010eabde10} 'getMethodOrFieldType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f812f4d: mov    0x8(%rdi),%edi
  0x000000010f812f50: shl    $0x3,%rdi
  0x000000010f812f54: cmp    0x1e0(%rbx),%rdi
  0x000000010f812f5b: jne    0x000000010f812f6a
  0x000000010f812f5d: addq   $0x1,0x1e8(%rbx)
  0x000000010f812f65: jmpq   0x000000010f812fd0
  0x000000010f812f6a: cmp    0x1f0(%rbx),%rdi
  0x000000010f812f71: jne    0x000000010f812f80
  0x000000010f812f73: addq   $0x1,0x1f8(%rbx)
  0x000000010f812f7b: jmpq   0x000000010f812fd0
  0x000000010f812f80: cmpq   $0x0,0x1e0(%rbx)
  0x000000010f812f8b: jne    0x000000010f812fa4
  0x000000010f812f8d: mov    %rdi,0x1e0(%rbx)
  0x000000010f812f94: movq   $0x1,0x1e8(%rbx)
  0x000000010f812f9f: jmpq   0x000000010f812fd0
  0x000000010f812fa4: cmpq   $0x0,0x1f0(%rbx)
  0x000000010f812faf: jne    0x000000010f812fc8
  0x000000010f812fb1: mov    %rdi,0x1f0(%rbx)
  0x000000010f812fb8: movq   $0x1,0x1f8(%rbx)
  0x000000010f812fc3: jmpq   0x000000010f812fd0
  0x000000010f812fc8: addq   $0x1,0x1d8(%rbx)
  0x000000010f812fd0: nop
  0x000000010f812fd1: nop
  0x000000010f812fd2: nop
  0x000000010f812fd3: nop
  0x000000010f812fd4: nop
  0x000000010f812fd5: nop
  0x000000010f812fd6: nop
  0x000000010f812fd7: callq  0x000000010f7170a0  ; OopMap{off=3996}
                                                ;*invokevirtual getFieldType
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@20 (line 112)
                                                ;   {optimized virtual_call}
  0x000000010f812fdc: movabs $0x10eda6ed8,%rsi  ;   {metadata(method data for {method} {0x000000010eabde10} 'getMethodOrFieldType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f812fe6: addq   $0x1,0x208(%rsi)
  0x000000010f812fee: movabs $0x10eda8388,%rsi  ;   {metadata(method data for {method} {0x000000010eacec00} 'methodType' '(Ljava/lang/Class;)Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MethodType')}
  0x000000010f812ff8: mov    0xdc(%rsi),%edx
  0x000000010f812ffe: add    $0x8,%edx
  0x000000010f813001: mov    %edx,0xdc(%rsi)
  0x000000010f813007: movabs $0x10eacec00,%rsi  ;   {metadata({method} {0x000000010eacec00} 'methodType' '(Ljava/lang/Class;)Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MethodType')}
  0x000000010f813011: and    $0x7ffff8,%edx
  0x000000010f813017: cmp    $0x0,%edx
  0x000000010f81301a: je     0x000000010f813557
  0x000000010f813020: movabs $0x10eda8388,%rsi  ;   {metadata(method data for {method} {0x000000010eacec00} 'methodType' '(Ljava/lang/Class;)Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MethodType')}
  0x000000010f81302a: addq   $0x1,0x108(%rsi)
  0x000000010f813032: mov    %rax,%rsi
  0x000000010f813035: movabs $0x79586f4e0,%rdx  ;   {oop(a 'java/lang/Class'[0] )}
  0x000000010f81303f: mov    $0x1,%ecx          ;*invokestatic makeImpl
                                                ; - java.lang.invoke.MethodType::methodType@5 (line 259)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@23 (line 112)

  0x000000010f813044: nop
  0x000000010f813045: nop
  0x000000010f813046: nop
  0x000000010f813047: callq  0x000000010f717520  ; OopMap{off=4108}
                                                ;*invokestatic makeImpl
                                                ; - java.lang.invoke.MethodType::methodType@5 (line 259)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@23 (line 112)
                                                ;   {static_call}
  0x000000010f81304c: add    $0xb0,%rsp
  0x000000010f813053: pop    %rbp
  0x000000010f813054: test   %eax,-0x8d77f5a(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f81305a: retq                      ;*areturn
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@26 (line 112)

  0x000000010f81305b: mov    %rsi,%rdi
  0x000000010f81305e: movabs $0x10eda6ed8,%rbx  ;   {metadata(method data for {method} {0x000000010eabde10} 'getMethodOrFieldType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f813068: mov    0x8(%rdi),%edi
  0x000000010f81306b: shl    $0x3,%rdi
  0x000000010f81306f: cmp    0x160(%rbx),%rdi
  0x000000010f813076: jne    0x000000010f813085
  0x000000010f813078: addq   $0x1,0x168(%rbx)
  0x000000010f813080: jmpq   0x000000010f8130eb
  0x000000010f813085: cmp    0x170(%rbx),%rdi
  0x000000010f81308c: jne    0x000000010f81309b
  0x000000010f81308e: addq   $0x1,0x178(%rbx)
  0x000000010f813096: jmpq   0x000000010f8130eb
  0x000000010f81309b: cmpq   $0x0,0x160(%rbx)
  0x000000010f8130a6: jne    0x000000010f8130bf
  0x000000010f8130a8: mov    %rdi,0x160(%rbx)
  0x000000010f8130af: movq   $0x1,0x168(%rbx)
  0x000000010f8130ba: jmpq   0x000000010f8130eb
  0x000000010f8130bf: cmpq   $0x0,0x170(%rbx)
  0x000000010f8130ca: jne    0x000000010f8130e3
  0x000000010f8130cc: mov    %rdi,0x170(%rbx)
  0x000000010f8130d3: movq   $0x1,0x178(%rbx)
  0x000000010f8130de: jmpq   0x000000010f8130eb
  0x000000010f8130e3: addq   $0x1,0x158(%rbx)
  0x000000010f8130eb: nop
  0x000000010f8130ec: nop
  0x000000010f8130ed: nop
  0x000000010f8130ee: nop
  0x000000010f8130ef: callq  0x000000010f7170a0  ; OopMap{off=4276}
                                                ;*invokevirtual getMethodType
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@8 (line 110)
                                                ;   {optimized virtual_call}
  0x000000010f8130f4: add    $0xb0,%rsp
  0x000000010f8130fb: pop    %rbp
  0x000000010f8130fc: test   %eax,-0x8d78002(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f813102: retq                      ;*areturn
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@11 (line 110)

  0x000000010f813103: mov    0x88(%rsp),%rax
  0x000000010f81310b: movabs $0x10eda8e20,%rdx  ;   {metadata(method data for {method} {0x000000010eade1b0} 'append' '(Ljava/lang/Object;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f813115: mov    0x8(%rax),%eax
  0x000000010f813118: shl    $0x3,%rax
  0x000000010f81311c: cmp    0x120(%rdx),%rax
  0x000000010f813123: jne    0x000000010f813132
  0x000000010f813125: addq   $0x1,0x128(%rdx)
  0x000000010f81312d: jmpq   0x000000010f813198
  0x000000010f813132: cmp    0x130(%rdx),%rax
  0x000000010f813139: jne    0x000000010f813148
  0x000000010f81313b: addq   $0x1,0x138(%rdx)
  0x000000010f813143: jmpq   0x000000010f813198
  0x000000010f813148: cmpq   $0x0,0x120(%rdx)
  0x000000010f813153: jne    0x000000010f81316c
  0x000000010f813155: mov    %rax,0x120(%rdx)
  0x000000010f81315c: movq   $0x1,0x128(%rdx)
  0x000000010f813167: jmpq   0x000000010f813198
  0x000000010f81316c: cmpq   $0x0,0x130(%rdx)
  0x000000010f813177: jne    0x000000010f813190
  0x000000010f813179: mov    %rax,0x130(%rdx)
  0x000000010f813180: movq   $0x1,0x138(%rdx)
  0x000000010f81318b: jmpq   0x000000010f813198
  0x000000010f813190: addq   $0x1,0x118(%rdx)
  0x000000010f813198: movabs $0x10ec81440,%rdx  ;   {metadata(method data for {method} {0x000000010eade248} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f8131a2: mov    0xdc(%rdx),%edi
  0x000000010f8131a8: add    $0x8,%edi
  0x000000010f8131ab: mov    %edi,0xdc(%rdx)
  0x000000010f8131b1: movabs $0x10eade248,%rdx  ;   {metadata({method} {0x000000010eade248} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f8131bb: and    $0x7ffff8,%edi
  0x000000010f8131c1: cmp    $0x0,%edi
  0x000000010f8131c4: je     0x000000010f81356e
  0x000000010f8131ca: mov    0x88(%rsp),%rax
  0x000000010f8131d2: movabs $0x10ec81440,%rdx  ;   {metadata(method data for {method} {0x000000010eade248} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f8131dc: addq   $0x1,0x108(%rdx)
  0x000000010f8131e4: mov    %rsi,%rdx
  0x000000010f8131e7: mov    0x88(%rsp),%rsi    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.lang.StringBuilder::append@5 (line 131)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@62 (line 115)

  0x000000010f8131ef: callq  0x000000010f7170a0  ; OopMap{[136]=Oop [144]=Oop off=4532}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.lang.StringBuilder::append@5 (line 131)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@62 (line 115)
                                                ;   {optimized virtual_call}
  0x000000010f8131f4: mov    0x88(%rsp),%r8
  0x000000010f8131fc: mov    %r8,%rdx
  0x000000010f8131ff: movabs $0x10eda6ed8,%rsi  ;   {metadata(method data for {method} {0x000000010eabde10} 'getMethodOrFieldType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f813209: mov    0x8(%rdx),%edx
  0x000000010f81320c: shl    $0x3,%rdx
  0x000000010f813210: cmp    0x320(%rsi),%rdx
  0x000000010f813217: jne    0x000000010f813226
  0x000000010f813219: addq   $0x1,0x328(%rsi)
  0x000000010f813221: jmpq   0x000000010f81328c
  0x000000010f813226: cmp    0x330(%rsi),%rdx
  0x000000010f81322d: jne    0x000000010f81323c
  0x000000010f81322f: addq   $0x1,0x338(%rsi)
  0x000000010f813237: jmpq   0x000000010f81328c
  0x000000010f81323c: cmpq   $0x0,0x320(%rsi)
  0x000000010f813247: jne    0x000000010f813260
  0x000000010f813249: mov    %rdx,0x320(%rsi)
  0x000000010f813250: movq   $0x1,0x328(%rsi)
  0x000000010f81325b: jmpq   0x000000010f81328c
  0x000000010f813260: cmpq   $0x0,0x330(%rsi)
  0x000000010f81326b: jne    0x000000010f813284
  0x000000010f81326d: mov    %rdx,0x330(%rsi)
  0x000000010f813274: movq   $0x1,0x338(%rsi)
  0x000000010f81327f: jmpq   0x000000010f81328c
  0x000000010f813284: addq   $0x1,0x318(%rsi)
  0x000000010f81328c: movabs $0x10ed00b80,%rdx  ;   {metadata(method data for {method} {0x000000010eadf5f8} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder')}
  0x000000010f813296: mov    0xdc(%rdx),%esi
  0x000000010f81329c: add    $0x8,%esi
  0x000000010f81329f: mov    %esi,0xdc(%rdx)
  0x000000010f8132a5: movabs $0x10eadf5f8,%rdx  ;   {metadata({method} {0x000000010eadf5f8} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder')}
  0x000000010f8132af: and    $0x7ffff8,%esi
  0x000000010f8132b5: cmp    $0x0,%esi
  0x000000010f8132b8: je     0x000000010f813585
  0x000000010f8132be: movabs $0x7c00016d0,%rdx  ;   {metadata('java/lang/String')}
  0x000000010f8132c8: mov    0x60(%r15),%rax
  0x000000010f8132cc: lea    0x18(%rax),%rdi
  0x000000010f8132d0: cmp    0x70(%r15),%rdi
  0x000000010f8132d4: ja     0x000000010f81359c
  0x000000010f8132da: mov    %rdi,0x60(%r15)
  0x000000010f8132de: mov    0xa8(%rdx),%rcx
  0x000000010f8132e5: mov    %rcx,(%rax)
  0x000000010f8132e8: mov    %rdx,%rcx
  0x000000010f8132eb: shr    $0x3,%rcx
  0x000000010f8132ef: mov    %ecx,0x8(%rax)
  0x000000010f8132f2: xor    %rcx,%rcx
  0x000000010f8132f5: mov    %ecx,0xc(%rax)
  0x000000010f8132f8: xor    %rcx,%rcx
  0x000000010f8132fb: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@65 (line 115)

  0x000000010f8132ff: mov    0x10(%r8),%edx
  0x000000010f813303: shl    $0x3,%rdx          ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 407)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@65 (line 115)

  0x000000010f813307: mov    0xc(%r8),%r8d      ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 407)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@65 (line 115)

  0x000000010f81330b: mov    %rax,%rcx
  0x000000010f81330e: movabs $0x10ed00b80,%rsi  ;   {metadata(method data for {method} {0x000000010eadf5f8} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder')}
  0x000000010f813318: addq   $0x1,0x108(%rsi)
  0x000000010f813320: mov    $0x0,%ecx
  0x000000010f813325: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@65 (line 115)

  0x000000010f813328: mov    %rax,0x98(%rsp)
  0x000000010f813330: nop
  0x000000010f813331: nop
  0x000000010f813332: nop
  0x000000010f813333: nop
  0x000000010f813334: nop
  0x000000010f813335: nop
  0x000000010f813336: nop
  0x000000010f813337: callq  0x000000010f7170a0  ; OopMap{[152]=Oop [144]=Oop off=4860}
                                                ;*invokespecial <init>
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@65 (line 115)
                                                ;   {optimized virtual_call}
  0x000000010f81333c: mov    0x90(%rsp),%rax
  0x000000010f813344: movabs $0x10eda6ed8,%rdx  ;   {metadata(method data for {method} {0x000000010eabde10} 'getMethodOrFieldType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f81334e: addq   $0x1,0x348(%rdx)
  0x000000010f813356: mov    0x98(%rsp),%rdx
  0x000000010f81335e: mov    0x90(%rsp),%rsi    ;*invokespecial <init>
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@68 (line 115)

  0x000000010f813366: nop
  0x000000010f813367: callq  0x000000010f7170a0  ; OopMap{[144]=Oop off=4908}
                                                ;*invokespecial <init>
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@68 (line 115)
                                                ;   {optimized virtual_call}
  0x000000010f81336c: mov    0x90(%rsp),%rax
  0x000000010f813374: jmpq   0x000000010f8135d4
  0x000000010f813379: mov    %rdi,0x8(%rsp)
  0x000000010f81337e: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f813386: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [120]=Oop off=4939}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@-1 (line 109)
                                                ;   {runtime_call}
  0x000000010f81338b: jmpq   0x000000010f8120a6
  0x000000010f813390: mov    %rdi,0x8(%rsp)
  0x000000010f813395: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f81339d: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [120]=Oop off=4962}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MemberName::isInvocable@-1 (line 443)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@1 (line 109)
                                                ;   {runtime_call}
  0x000000010f8133a2: jmpq   0x000000010f812168
  0x000000010f8133a7: mov    %rdi,0x8(%rsp)
  0x000000010f8133ac: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f8133b4: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [120]=Oop off=4985}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MemberName::testAnyFlags@-1 (line 340)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 443)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@1 (line 109)
                                                ;   {runtime_call}
  0x000000010f8133b9: jmpq   0x000000010f8121af
  0x000000010f8133be: mov    %rdi,0x8(%rsp)
  0x000000010f8133c3: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f8133cb: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [120]=Oop off=5008}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MemberName::testFlags@-1 (line 334)
                                                ; - java.lang.invoke.MemberName::testAnyFlags@3 (line 340)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 443)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@1 (line 109)
                                                ;   {runtime_call}
  0x000000010f8133d0: jmpq   0x000000010f8121f6
  0x000000010f8133d5: mov    %rbx,0x8(%rsp)
  0x000000010f8133da: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f8133e2: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [120]=Oop off=5031}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MemberName::isGetter@-1 (line 630)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@13 (line 111)
                                                ;   {runtime_call}
  0x000000010f8133e7: jmpq   0x000000010f8123b6
  0x000000010f8133ec: mov    %rbx,0x8(%rsp)
  0x000000010f8133f1: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f8133f9: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [120]=Oop off=5054}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MemberName::getReferenceKind@-1 (line 250)
                                                ; - java.lang.invoke.MemberName::isGetter@1 (line 630)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@13 (line 111)
                                                ;   {runtime_call}
  0x000000010f8133fe: jmpq   0x000000010f812478
  0x000000010f813403: mov    %rdi,0x8(%rsp)
  0x000000010f813408: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f813410: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [120]=Oop off=5077}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MemberName::isSetter@-1 (line 633)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@28 (line 113)
                                                ;   {runtime_call}
  0x000000010f813415: jmpq   0x000000010f8125a7
  0x000000010f81341a: mov    %rdi,0x8(%rsp)
  0x000000010f81341f: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f813427: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [120]=Oop off=5100}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MemberName::getReferenceKind@-1 (line 250)
                                                ; - java.lang.invoke.MemberName::isSetter@1 (line 633)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@28 (line 113)
                                                ;   {runtime_call}
  0x000000010f81342c: jmpq   0x000000010f812669
  0x000000010f813431: mov    %rbx,0x8(%rsp)
  0x000000010f813436: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f81343e: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [120]=Oop off=5123}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MethodHandleNatives::refKindIsSetter@-1 (line 203)
                                                ; - java.lang.invoke.MemberName::isSetter@4 (line 633)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@28 (line 113)
                                                ;   {runtime_call}
  0x000000010f813443: jmpq   0x000000010f8126bc
  0x000000010f813448: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f813452: mov    $0xa050f00,%eax
  0x000000010f813457: callq  0x000000010f7d08e0  ; OopMap{[120]=Oop off=5148}
                                                ;*new  ; - java.lang.invoke.MemberName::getMethodOrFieldType@45 (line 115)
                                                ;   {runtime_call}
  0x000000010f81345c: jmpq   0x000000010f8127e0
  0x000000010f813461: mov    %rdx,%rdx
  0x000000010f813464: callq  0x000000010f7cd820  ; OopMap{[120]=Oop off=5161}
                                                ;*new  ; - java.lang.invoke.MemberName::getMethodOrFieldType@45 (line 115)
                                                ;   {runtime_call}
  0x000000010f813469: jmpq   0x000000010f812825
  0x000000010f81346e: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f813478: mov    $0xa050f00,%eax
  0x000000010f81347d: callq  0x000000010f7d08e0  ; OopMap{[120]=Oop rax=Oop [144]=Oop off=5186}
                                                ;*new  ; - java.lang.invoke.MemberName::getMethodOrFieldType@49 (line 115)
                                                ;   {runtime_call}
  0x000000010f813482: jmpq   0x000000010f812830
  0x000000010f813487: mov    %rdx,%rdx
  0x000000010f81348a: callq  0x000000010f7cd820  ; OopMap{[120]=Oop [144]=Oop off=5199}
                                                ;*new  ; - java.lang.invoke.MemberName::getMethodOrFieldType@49 (line 115)
                                                ;   {runtime_call}
  0x000000010f81348f: jmpq   0x000000010f812871
  0x000000010f813494: mov    %rbx,0x8(%rsp)
  0x000000010f813499: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f8134a1: callq  0x000000010f7d1a20  ; OopMap{[120]=Oop [144]=Oop rax=Oop off=5222}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::<init>@-1 (line 89)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@53 (line 115)
                                                ;   {runtime_call}
  0x000000010f8134a6: jmpq   0x000000010f8128b8
  0x000000010f8134ab: mov    %rbx,0x8(%rsp)
  0x000000010f8134b0: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f8134b8: callq  0x000000010f7d1a20  ; OopMap{[120]=Oop [144]=Oop rax=Oop off=5245}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::<init>@-1 (line 67)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@53 (line 115)
                                                ;   {runtime_call}
  0x000000010f8134bd: jmpq   0x000000010f8128ff
  0x000000010f8134c2: mov    %rbx,0x8(%rsp)
  0x000000010f8134c7: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f8134cf: callq  0x000000010f7d1a20  ; OopMap{[120]=Oop [144]=Oop rax=Oop off=5268}
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::<init>@1 (line 67)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@53 (line 115)
                                                ;   {runtime_call}
  0x000000010f8134d4: jmpq   0x000000010f812946
  0x000000010f8134d9: callq  0x000000010f7ce120  ; OopMap{[120]=Oop [144]=Oop r11=Oop off=5278}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::<init>@6 (line 68)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@53 (line 115)
                                                ;   {runtime_call}
  0x000000010f8134de: jmpq   0x000000010f8129c5
  0x000000010f8134e3: mov    %rdx,0x8(%rsp)
  0x000000010f8134e8: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f8134f0: callq  0x000000010f7d1a20  ; OopMap{[120]=Oop [144]=Oop r11=Oop off=5301}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@58 (line 115)
                                                ;   {runtime_call}
  0x000000010f8134f5: jmpq   0x000000010f812aa7
  0x000000010f8134fa: mov    %rsi,0x8(%rsp)
  0x000000010f8134ff: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f813507: callq  0x000000010f7d1a20  ; OopMap{[136]=Oop [144]=Oop [120]=Oop off=5324}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 131)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@62 (line 115)
                                                ;   {runtime_call}
  0x000000010f81350c: jmpq   0x000000010f812ba3
  0x000000010f813511: mov    %rsi,0x8(%rsp)
  0x000000010f813516: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f81351e: callq  0x000000010f7d1a20  ; OopMap{[136]=Oop [144]=Oop [120]=Oop off=5347}
                                                ;*synchronization entry
                                                ; - java.lang.String::valueOf@-1 (line 2994)
                                                ; - java.lang.StringBuilder::append@2 (line 131)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@62 (line 115)
                                                ;   {runtime_call}
  0x000000010f813523: jmpq   0x000000010f812be7
  0x000000010f813528: mov    %rbx,0x8(%rsp)
  0x000000010f81352d: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f813535: callq  0x000000010f7d1a20  ; OopMap{r8=Oop off=5370}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MethodType::methodType@-1 (line 274)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@41 (line 114)
                                                ;   {runtime_call}
  0x000000010f81353a: jmpq   0x000000010f812d63
  0x000000010f81353f: callq  0x000000010f7ce5e0  ; OopMap{r8=Oop off=5380}
                                                ;*anewarray
                                                ; - java.lang.invoke.MethodType::methodType@2 (line 274)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@41 (line 114)
                                                ;   {runtime_call}
  0x000000010f813544: jmpq   0x000000010f812ddf
  0x000000010f813549: callq  0x000000010f7cd0c0  ; OopMap{r8=Oop rax=Oop off=5390}
                                                ;*aastore
                                                ; - java.lang.invoke.MethodType::methodType@8 (line 274)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@41 (line 114)
                                                ;   {runtime_call}
  0x000000010f81354e: mov    %r8,(%rsp)
  0x000000010f813552: callq  0x000000010f7cf240  ; OopMap{r8=Oop rax=Oop off=5399}
                                                ;*aastore
                                                ; - java.lang.invoke.MethodType::methodType@8 (line 274)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@41 (line 114)
                                                ;   {runtime_call}
  0x000000010f813557: mov    %rsi,0x8(%rsp)
  0x000000010f81355c: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f813564: callq  0x000000010f7d1a20  ; OopMap{rax=Oop off=5417}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MethodType::methodType@-1 (line 259)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@23 (line 112)
                                                ;   {runtime_call}
  0x000000010f813569: jmpq   0x000000010f813020
  0x000000010f81356e: mov    %rdx,0x8(%rsp)
  0x000000010f813573: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f81357b: callq  0x000000010f7d1a20  ; OopMap{[136]=Oop [144]=Oop rsi=Oop off=5440}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ; - java.lang.StringBuilder::append@5 (line 131)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@62 (line 115)
                                                ;   {runtime_call}
  0x000000010f813580: jmpq   0x000000010f8131ca
  0x000000010f813585: mov    %rdx,0x8(%rsp)
  0x000000010f81358a: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f813592: callq  0x000000010f7d1a20  ; OopMap{[144]=Oop r8=Oop off=5463}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@65 (line 115)
                                                ;   {runtime_call}
  0x000000010f813597: jmpq   0x000000010f8132be
  0x000000010f81359c: mov    %rdx,%rdx
  0x000000010f81359f: callq  0x000000010f7cd820  ; OopMap{r8=Oop [144]=Oop off=5476}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.lang.invoke.MemberName::getMethodOrFieldType@65 (line 115)
                                                ;   {runtime_call}
  0x000000010f8135a4: jmpq   0x000000010f8132ff
  0x000000010f8135a9: nop
  0x000000010f8135aa: nop
  0x000000010f8135ab: mov    0x2a8(%r15),%rax
  0x000000010f8135b2: movabs $0x0,%r10
  0x000000010f8135bc: mov    %r10,0x2a8(%r15)
  0x000000010f8135c3: movabs $0x0,%r10
  0x000000010f8135cd: mov    %r10,0x2b0(%r15)
  0x000000010f8135d4: add    $0xb0,%rsp
  0x000000010f8135db: pop    %rbp
  0x000000010f8135dc: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f8135e1: hlt    
  0x000000010f8135e2: hlt    
  0x000000010f8135e3: hlt    
  0x000000010f8135e4: hlt    
  0x000000010f8135e5: hlt    
  0x000000010f8135e6: hlt    
  0x000000010f8135e7: hlt    
  0x000000010f8135e8: hlt    
  0x000000010f8135e9: hlt    
  0x000000010f8135ea: hlt    
  0x000000010f8135eb: hlt    
  0x000000010f8135ec: hlt    
  0x000000010f8135ed: hlt    
  0x000000010f8135ee: hlt    
  0x000000010f8135ef: hlt    
  0x000000010f8135f0: hlt    
  0x000000010f8135f1: hlt    
  0x000000010f8135f2: hlt    
  0x000000010f8135f3: hlt    
  0x000000010f8135f4: hlt    
  0x000000010f8135f5: hlt    
  0x000000010f8135f6: hlt    
  0x000000010f8135f7: hlt    
  0x000000010f8135f8: hlt    
  0x000000010f8135f9: hlt    
  0x000000010f8135fa: hlt    
  0x000000010f8135fb: hlt    
  0x000000010f8135fc: hlt    
  0x000000010f8135fd: hlt    
  0x000000010f8135fe: hlt    
  0x000000010f8135ff: hlt    
[Stub Code]
  0x000000010f813600: nop                       ;   {no_reloc}
  0x000000010f813601: nop
  0x000000010f813602: nop
  0x000000010f813603: nop
  0x000000010f813604: nop
  0x000000010f813605: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81360f: jmpq   0x000000010f81360f  ;   {runtime_call}
  0x000000010f813614: nop
  0x000000010f813615: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81361f: jmpq   0x000000010f81361f  ;   {runtime_call}
  0x000000010f813624: nop
  0x000000010f813625: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81362f: jmpq   0x000000010f81362f  ;   {runtime_call}
  0x000000010f813634: nop
  0x000000010f813635: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81363f: jmpq   0x000000010f81363f  ;   {runtime_call}
  0x000000010f813644: nop
  0x000000010f813645: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81364f: jmpq   0x000000010f81364f  ;   {runtime_call}
  0x000000010f813654: nop
  0x000000010f813655: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81365f: jmpq   0x000000010f81365f  ;   {runtime_call}
  0x000000010f813664: nop
  0x000000010f813665: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81366f: jmpq   0x000000010f81366f  ;   {runtime_call}
  0x000000010f813674: nop
  0x000000010f813675: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81367f: jmpq   0x000000010f81367f  ;   {runtime_call}
  0x000000010f813684: nop
  0x000000010f813685: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81368f: jmpq   0x000000010f81368f  ;   {runtime_call}
  0x000000010f813694: nop
  0x000000010f813695: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81369f: jmpq   0x000000010f81369f  ;   {runtime_call}
  0x000000010f8136a4: nop
  0x000000010f8136a5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f8136af: jmpq   0x000000010f8136af  ;   {runtime_call}
  0x000000010f8136b4: nop
  0x000000010f8136b5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f8136bf: jmpq   0x000000010f8136bf  ;   {runtime_call}
  0x000000010f8136c4: nop
  0x000000010f8136c5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f8136cf: jmpq   0x000000010f8136cf  ;   {runtime_call}
[Exception Handler]
  0x000000010f8136d4: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f8136d9: mov    %rsp,-0x28(%rsp)
  0x000000010f8136de: sub    $0x80,%rsp
  0x000000010f8136e5: mov    %rax,0x78(%rsp)
  0x000000010f8136ea: mov    %rcx,0x70(%rsp)
  0x000000010f8136ef: mov    %rdx,0x68(%rsp)
  0x000000010f8136f4: mov    %rbx,0x60(%rsp)
  0x000000010f8136f9: mov    %rbp,0x50(%rsp)
  0x000000010f8136fe: mov    %rsi,0x48(%rsp)
  0x000000010f813703: mov    %rdi,0x40(%rsp)
  0x000000010f813708: mov    %r8,0x38(%rsp)
  0x000000010f81370d: mov    %r9,0x30(%rsp)
  0x000000010f813712: mov    %r10,0x28(%rsp)
  0x000000010f813717: mov    %r11,0x20(%rsp)
  0x000000010f81371c: mov    %r12,0x18(%rsp)
  0x000000010f813721: mov    %r13,0x10(%rsp)
  0x000000010f813726: mov    %r14,0x8(%rsp)
  0x000000010f81372b: mov    %r15,(%rsp)
  0x000000010f81372f: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f813739: movabs $0x10f8136d9,%rsi  ;   {internal_word}
  0x000000010f813743: mov    %rsp,%rdx
  0x000000010f813746: and    $0xfffffffffffffff0,%rsp
  0x000000010f81374a: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f81374f: hlt    
[Deopt Handler Code]
  0x000000010f813750: movabs $0x10f813750,%r10  ;   {section_word}
  0x000000010f81375a: push   %r10
  0x000000010f81375c: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f813761: hlt    
  0x000000010f813762: hlt    
  0x000000010f813763: hlt    
  0x000000010f813764: hlt    
  0x000000010f813765: hlt    
  0x000000010f813766: hlt    
  0x000000010f813767: hlt    
Decoding compiled method 0x000000010f814190:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000010edac6d8} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8:r8     = 'java/lang/Object'
  # parm4:    r9:r9     = 'java/lang/Object'
  # parm5:    rdi:rdi   = 'java/lang/Object'
  # parm6:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm7:    [sp+0x8]   = 'java/lang/Object'
  # parm8:    [sp+0x10]   = 'java/lang/Object'
  # parm9:    [sp+0x18]   = 'java/lang/invoke/MemberName'
  0x000000010f8142c0: mov    0x20(%rsp),%rbx
  0x000000010f8142c5: mov    0x18(%rbx),%rbx
  0x000000010f8142c9: test   %rbx,%rbx
  0x000000010f8142cc: je     0x000000010f8142d5
  0x000000010f8142d2: jmpq   *0x40(%rbx)
  0x000000010f8142d5: jmpq   0x000000010f6d61a0  ;   {runtime_call}
  0x000000010f8142da: hlt    
  0x000000010f8142db: hlt    
  0x000000010f8142dc: hlt    
  0x000000010f8142dd: hlt    
  0x000000010f8142de: hlt    
  0x000000010f8142df: hlt    
Decoding compiled method 0x000000010f814310:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000010edad8c8} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rsi:rsi   = 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    rcx:rcx   = 'java/lang/Object'
  # parm2:    r8:r8     = 'java/lang/Object'
  # parm3:    r9:r9     = 'java/lang/Object'
  # parm4:    rdi:rdi   = 'java/lang/Object'
  # parm5:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm6:    [sp+0x8]   = 'java/lang/Object'
  # parm7:    [sp+0x10]   = 'java/lang/Object'
  # parm8:    [sp+0x18]   = 'java/lang/Object'
  0x000000010f814440: mov    0x14(%rsi),%ebx
  0x000000010f814443: shl    $0x3,%rbx
  0x000000010f814447: mov    0x28(%rbx),%ebx
  0x000000010f81444a: shl    $0x3,%rbx
  0x000000010f81444e: mov    0x18(%rbx),%rbx
  0x000000010f814452: test   %rbx,%rbx
  0x000000010f814455: je     0x000000010f81445e
  0x000000010f81445b: jmpq   *0x40(%rbx)
  0x000000010f81445e: jmpq   0x000000010f6d61a0  ;   {runtime_call}
  0x000000010f814463: hlt    
  0x000000010f814464: hlt    
  0x000000010f814465: hlt    
  0x000000010f814466: hlt    
  0x000000010f814467: hlt    
Decoding compiled method 0x000000010f814490:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000010edad9e0} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8:r8     = 'java/lang/Object'
  # parm4:    r9:r9     = 'java/lang/Object'
  # parm5:    rdi:rdi   = 'java/lang/Object'
  # parm6:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm7:    [sp+0x8]   = 'java/lang/Object'
  # parm8:    [sp+0x10]   = 'java/lang/Object'
  # parm9:    [sp+0x18]   = 'java/lang/Object'
  # parm10:   [sp+0x20]   = 'java/lang/invoke/MemberName'
  0x000000010f8145c0: mov    0x28(%rsp),%rbx
  0x000000010f8145c5: cmp    (%rsi),%rax
  0x000000010f8145c8: mov    0x18(%rbx),%rbx
  0x000000010f8145cc: test   %rbx,%rbx
  0x000000010f8145cf: je     0x000000010f8145d8
  0x000000010f8145d5: jmpq   *0x40(%rbx)
  0x000000010f8145d8: jmpq   0x000000010f6d61a0  ;   {runtime_call}
  0x000000010f8145dd: hlt    
  0x000000010f8145de: hlt    
  0x000000010f8145df: hlt    
Decoding compiled method 0x000000010f814610:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000010edadd10} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8:r8     = 'java/lang/Object'
  # parm4:    r9:r9     = 'java/lang/Object'
  # parm5:    rdi:rdi   = 'java/lang/Object'
  # parm6:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm7:    [sp+0x8]   = 'java/lang/Object'
  # parm8:    [sp+0x10]   = 'java/lang/Object'
  # parm9:    [sp+0x18]   = 'java/lang/Object'
  # parm10:   [sp+0x20]   = 'java/lang/invoke/MemberName'
  0x000000010f814740: mov    0x28(%rsp),%rbx
  0x000000010f814745: mov    0x18(%rbx),%rbx
  0x000000010f814749: test   %rbx,%rbx
  0x000000010f81474c: je     0x000000010f814755
  0x000000010f814752: jmpq   *0x40(%rbx)
  0x000000010f814755: jmpq   0x000000010f6d61a0  ;   {runtime_call}
  0x000000010f81475a: hlt    
  0x000000010f81475b: hlt    
  0x000000010f81475c: hlt    
  0x000000010f81475d: hlt    
  0x000000010f81475e: hlt    
  0x000000010f81475f: hlt    
Decoding compiled method 0x000000010f814790:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000010edade28} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rsi:rsi   = 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    rcx:rcx   = 'java/lang/Object'
  # parm2:    r8:r8     = 'java/lang/Object'
  # parm3:    r9:r9     = 'java/lang/Object'
  # parm4:    rdi:rdi   = 'java/lang/Object'
  # parm5:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm6:    [sp+0x8]   = 'java/lang/Object'
  # parm7:    [sp+0x10]   = 'java/lang/Object'
  # parm8:    [sp+0x18]   = 'java/lang/Object'
  # parm9:    [sp+0x20]   = 'java/lang/Object'
  0x000000010f8148c0: mov    0x14(%rsi),%ebx
  0x000000010f8148c3: shl    $0x3,%rbx
  0x000000010f8148c7: mov    0x28(%rbx),%ebx
  0x000000010f8148ca: shl    $0x3,%rbx
  0x000000010f8148ce: mov    0x18(%rbx),%rbx
  0x000000010f8148d2: test   %rbx,%rbx
  0x000000010f8148d5: je     0x000000010f8148de
  0x000000010f8148db: jmpq   *0x40(%rbx)
  0x000000010f8148de: jmpq   0x000000010f6d61a0  ;   {runtime_call}
  0x000000010f8148e3: hlt    
  0x000000010f8148e4: hlt    
  0x000000010f8148e5: hlt    
  0x000000010f8148e6: hlt    
  0x000000010f8148e7: hlt    
Decoding compiled method 0x000000010f814910:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000010edadf40} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8:r8     = 'java/lang/Object'
  # parm4:    r9:r9     = 'java/lang/Object'
  # parm5:    rdi:rdi   = 'java/lang/Object'
  # parm6:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm7:    [sp+0x8]   = 'java/lang/Object'
  # parm8:    [sp+0x10]   = 'java/lang/Object'
  # parm9:    [sp+0x18]   = 'java/lang/Object'
  # parm10:   [sp+0x20]   = 'java/lang/Object'
  # parm11:   [sp+0x28]   = 'java/lang/invoke/MemberName'
  0x000000010f814a40: mov    0x30(%rsp),%rbx
  0x000000010f814a45: cmp    (%rsi),%rax
  0x000000010f814a48: mov    0x18(%rbx),%rbx
  0x000000010f814a4c: test   %rbx,%rbx
  0x000000010f814a4f: je     0x000000010f814a58
  0x000000010f814a55: jmpq   *0x40(%rbx)
  0x000000010f814a58: jmpq   0x000000010f6d61a0  ;   {runtime_call}
  0x000000010f814a5d: hlt    
  0x000000010f814a5e: hlt    
  0x000000010f814a5f: hlt    
Decoding compiled method 0x000000010f814a90:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame'
  # this:     rsi:rsi   = 'jdk/internal/org/objectweb/asm/Frame'
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  # parm2:    r8:r8     = 'jdk/internal/org/objectweb/asm/ClassWriter'
  # parm3:    r9:r9     = 'jdk/internal/org/objectweb/asm/Item'
  #           [sp+0x1f0]  (sp of caller)
  0x000000010f815820: mov    0x8(%rsi),%r10d
  0x000000010f815824: shl    $0x3,%r10
  0x000000010f815828: cmp    %rax,%r10
  0x000000010f81582b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f815831: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f81583c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f815840: mov    %eax,-0x14000(%rsp)
  0x000000010f815847: push   %rbp
  0x000000010f815848: sub    $0x1e0,%rsp
  0x000000010f81584f: mov    %rsi,0xf0(%rsp)
  0x000000010f815857: mov    %edx,0x104(%rsp)
  0x000000010f81585e: mov    %ecx,0xf8(%rsp)
  0x000000010f815865: mov    %r8,0x110(%rsp)
  0x000000010f81586d: mov    %r9,0x108(%rsp)
  0x000000010f815875: movabs $0x10eda9988,%rdi  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f81587f: mov    0xdc(%rdi),%ebx
  0x000000010f815885: add    $0x8,%ebx
  0x000000010f815888: mov    %ebx,0xdc(%rdi)
  0x000000010f81588e: movabs $0x10ed89b78,%rdi  ;   {metadata({method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f815898: and    $0x1ff8,%ebx
  0x000000010f81589e: cmp    $0x0,%ebx
  0x000000010f8158a1: je     0x000000010f819eb9  ;*iload_1
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@0 (line 880)

  0x000000010f8158a7: cmp    $0x0,%edx
  0x000000010f8158aa: je     0x000000010f818f4b
  0x000000010f8158b0: cmp    $0x1,%edx
  0x000000010f8158b3: je     0x000000010f819cf3
  0x000000010f8158b9: cmp    $0x2,%edx
  0x000000010f8158bc: jl     0x000000010f8158cb
  0x000000010f8158c2: cmp    $0x8,%edx
  0x000000010f8158c5: jle    0x000000010f8185eb
  0x000000010f8158cb: cmp    $0x9,%edx
  0x000000010f8158ce: je     0x000000010f81863b
  0x000000010f8158d4: cmp    $0xa,%edx
  0x000000010f8158d7: je     0x000000010f81863b
  0x000000010f8158dd: cmp    $0xb,%edx
  0x000000010f8158e0: jl     0x000000010f8158ef
  0x000000010f8158e6: cmp    $0xd,%edx
  0x000000010f8158e9: jle    0x000000010f8186bb
  0x000000010f8158ef: cmp    $0xe,%edx
  0x000000010f8158f2: je     0x000000010f81870b
  0x000000010f8158f8: cmp    $0xf,%edx
  0x000000010f8158fb: je     0x000000010f81870b
  0x000000010f815901: cmp    $0x10,%edx
  0x000000010f815904: je     0x000000010f8185eb
  0x000000010f81590a: cmp    $0x11,%edx
  0x000000010f81590d: je     0x000000010f8185eb
  0x000000010f815913: cmp    $0x12,%edx
  0x000000010f815916: je     0x000000010f817bf1
  0x000000010f81591c: cmp    $0x15,%edx
  0x000000010f81591f: je     0x000000010f8185eb
  0x000000010f815925: cmp    $0x16,%edx
  0x000000010f815928: je     0x000000010f81863b
  0x000000010f81592e: cmp    $0x17,%edx
  0x000000010f815931: je     0x000000010f8186bb
  0x000000010f815937: cmp    $0x18,%edx
  0x000000010f81593a: je     0x000000010f81870b
  0x000000010f815940: cmp    $0x19,%edx
  0x000000010f815943: je     0x000000010f819c73
  0x000000010f815949: cmp    $0x2e,%edx
  0x000000010f81594c: je     0x000000010f81878b
  0x000000010f815952: cmp    $0x2f,%edx
  0x000000010f815955: je     0x000000010f818ccb
  0x000000010f81595b: cmp    $0x30,%edx
  0x000000010f81595e: je     0x000000010f819bf3
  0x000000010f815964: cmp    $0x31,%edx
  0x000000010f815967: je     0x000000010f818abb
  0x000000010f81596d: cmp    $0x32,%edx
  0x000000010f815970: je     0x000000010f819b4b
  0x000000010f815976: cmp    $0x33,%edx
  0x000000010f815979: jl     0x000000010f815988
  0x000000010f81597f: cmp    $0x35,%edx
  0x000000010f815982: jle    0x000000010f81878b
  0x000000010f815988: cmp    $0x36,%edx
  0x000000010f81598b: je     0x000000010f815fe6
  0x000000010f815991: cmp    $0x37,%edx
  0x000000010f815994: je     0x000000010f815def
  0x000000010f81599a: cmp    $0x38,%edx
  0x000000010f81599d: je     0x000000010f815fe6
  0x000000010f8159a3: cmp    $0x39,%edx
  0x000000010f8159a6: je     0x000000010f815def
  0x000000010f8159ac: cmp    $0x3a,%edx
  0x000000010f8159af: je     0x000000010f815fe6
  0x000000010f8159b5: cmp    $0x4f,%edx
  0x000000010f8159b8: je     0x000000010f81885b
  0x000000010f8159be: cmp    $0x50,%edx
  0x000000010f8159c1: je     0x000000010f81880b
  0x000000010f8159c7: cmp    $0x51,%edx
  0x000000010f8159ca: je     0x000000010f81885b
  0x000000010f8159d0: cmp    $0x52,%edx
  0x000000010f8159d3: je     0x000000010f81880b
  0x000000010f8159d9: cmp    $0x53,%edx
  0x000000010f8159dc: jl     0x000000010f8159eb
  0x000000010f8159e2: cmp    $0x56,%edx
  0x000000010f8159e5: jle    0x000000010f81885b
  0x000000010f8159eb: cmp    $0x57,%edx
  0x000000010f8159ee: je     0x000000010f818feb
  0x000000010f8159f4: cmp    $0x58,%edx
  0x000000010f8159f7: je     0x000000010f818efb
  0x000000010f8159fd: cmp    $0x59,%edx
  0x000000010f815a00: je     0x000000010f819a9b
  0x000000010f815a06: cmp    $0x5a,%edx
  0x000000010f815a09: je     0x000000010f81998b
  0x000000010f815a0f: cmp    $0x5b,%edx
  0x000000010f815a12: je     0x000000010f81981b
  0x000000010f815a18: cmp    $0x5c,%edx
  0x000000010f815a1b: je     0x000000010f8196db
  0x000000010f815a21: cmp    $0x5d,%edx
  0x000000010f815a24: je     0x000000010f81953b
  0x000000010f815a2a: cmp    $0x5e,%edx
  0x000000010f815a2d: je     0x000000010f81933b
  0x000000010f815a33: cmp    $0x5f,%edx
  0x000000010f815a36: je     0x000000010f81925b
  0x000000010f815a3c: cmp    $0x60,%edx
  0x000000010f815a3f: je     0x000000010f818dfb
  0x000000010f815a45: cmp    $0x61,%edx
  0x000000010f815a48: je     0x000000010f818a0b
  0x000000010f815a4e: cmp    $0x62,%edx
  0x000000010f815a51: je     0x000000010f818d7b
  0x000000010f815a57: cmp    $0x63,%edx
  0x000000010f815a5a: je     0x000000010f8188ab
  0x000000010f815a60: cmp    $0x64,%edx
  0x000000010f815a63: je     0x000000010f818dfb
  0x000000010f815a69: cmp    $0x65,%edx
  0x000000010f815a6c: je     0x000000010f818a0b
  0x000000010f815a72: cmp    $0x66,%edx
  0x000000010f815a75: je     0x000000010f818d7b
  0x000000010f815a7b: cmp    $0x67,%edx
  0x000000010f815a7e: je     0x000000010f8188ab
  0x000000010f815a84: cmp    $0x68,%edx
  0x000000010f815a87: je     0x000000010f818dfb
  0x000000010f815a8d: cmp    $0x69,%edx
  0x000000010f815a90: je     0x000000010f818a0b
  0x000000010f815a96: cmp    $0x6a,%edx
  0x000000010f815a99: je     0x000000010f818d7b
  0x000000010f815a9f: cmp    $0x6b,%edx
  0x000000010f815aa2: je     0x000000010f8188ab
  0x000000010f815aa8: cmp    $0x6c,%edx
  0x000000010f815aab: je     0x000000010f818dfb
  0x000000010f815ab1: cmp    $0x6d,%edx
  0x000000010f815ab4: je     0x000000010f818a0b
  0x000000010f815aba: cmp    $0x6e,%edx
  0x000000010f815abd: je     0x000000010f818d7b
  0x000000010f815ac3: cmp    $0x6f,%edx
  0x000000010f815ac6: je     0x000000010f8188ab
  0x000000010f815acc: cmp    $0x70,%edx
  0x000000010f815acf: je     0x000000010f818dfb
  0x000000010f815ad5: cmp    $0x71,%edx
  0x000000010f815ad8: je     0x000000010f818a0b
  0x000000010f815ade: cmp    $0x72,%edx
  0x000000010f815ae1: je     0x000000010f818d7b
  0x000000010f815ae7: cmp    $0x73,%edx
  0x000000010f815aea: je     0x000000010f8188ab
  0x000000010f815af0: cmp    $0x74,%edx
  0x000000010f815af3: jl     0x000000010f815b02
  0x000000010f815af9: cmp    $0x77,%edx
  0x000000010f815afc: jle    0x000000010f818f4b
  0x000000010f815b02: cmp    $0x78,%edx
  0x000000010f815b05: je     0x000000010f818dfb
  0x000000010f815b0b: cmp    $0x79,%edx
  0x000000010f815b0e: je     0x000000010f81895b
  0x000000010f815b14: cmp    $0x7a,%edx
  0x000000010f815b17: je     0x000000010f818dfb
  0x000000010f815b1d: cmp    $0x7b,%edx
  0x000000010f815b20: je     0x000000010f81895b
  0x000000010f815b26: cmp    $0x7c,%edx
  0x000000010f815b29: je     0x000000010f818dfb
  0x000000010f815b2f: cmp    $0x7d,%edx
  0x000000010f815b32: je     0x000000010f81895b
  0x000000010f815b38: cmp    $0x7e,%edx
  0x000000010f815b3b: je     0x000000010f818dfb
  0x000000010f815b41: cmp    $0x7f,%edx
  0x000000010f815b44: je     0x000000010f818a0b
  0x000000010f815b4a: cmp    $0x80,%edx
  0x000000010f815b50: je     0x000000010f818dfb
  0x000000010f815b56: cmp    $0x81,%edx
  0x000000010f815b5c: je     0x000000010f818a0b
  0x000000010f815b62: cmp    $0x82,%edx
  0x000000010f815b68: je     0x000000010f818dfb
  0x000000010f815b6e: cmp    $0x83,%edx
  0x000000010f815b74: je     0x000000010f818a0b
  0x000000010f815b7a: cmp    $0x84,%edx
  0x000000010f815b80: je     0x000000010f81920b
  0x000000010f815b86: cmp    $0x85,%edx
  0x000000010f815b8c: je     0x000000010f818b6b
  0x000000010f815b92: cmp    $0x86,%edx
  0x000000010f815b98: je     0x000000010f81918b
  0x000000010f815b9e: cmp    $0x87,%edx
  0x000000010f815ba4: je     0x000000010f818c1b
  0x000000010f815baa: cmp    $0x88,%edx
  0x000000010f815bb0: je     0x000000010f818dfb
  0x000000010f815bb6: cmp    $0x89,%edx
  0x000000010f815bbc: je     0x000000010f818d7b
  0x000000010f815bc2: cmp    $0x8a,%edx
  0x000000010f815bc8: je     0x000000010f818abb
  0x000000010f815bce: cmp    $0x8b,%edx
  0x000000010f815bd4: je     0x000000010f818f6a
  0x000000010f815bda: cmp    $0x8c,%edx
  0x000000010f815be0: je     0x000000010f818b6b
  0x000000010f815be6: cmp    $0x8d,%edx
  0x000000010f815bec: je     0x000000010f818c1b
  0x000000010f815bf2: cmp    $0x8e,%edx
  0x000000010f815bf8: je     0x000000010f818dfb
  0x000000010f815bfe: cmp    $0x8f,%edx
  0x000000010f815c04: je     0x000000010f818ccb
  0x000000010f815c0a: cmp    $0x90,%edx
  0x000000010f815c10: je     0x000000010f818d7b
  0x000000010f815c16: cmp    $0x91,%edx
  0x000000010f815c1c: jl     0x000000010f815c2e
  0x000000010f815c22: cmp    $0x93,%edx
  0x000000010f815c28: jle    0x000000010f818f4b
  0x000000010f815c2e: cmp    $0x94,%edx
  0x000000010f815c34: je     0x000000010f818e7b
  0x000000010f815c3a: cmp    $0x95,%edx
  0x000000010f815c40: je     0x000000010f818dfb
  0x000000010f815c46: cmp    $0x96,%edx
  0x000000010f815c4c: je     0x000000010f818dfb
  0x000000010f815c52: cmp    $0x97,%edx
  0x000000010f815c58: je     0x000000010f818e7b
  0x000000010f815c5e: cmp    $0x98,%edx
  0x000000010f815c64: je     0x000000010f818e7b
  0x000000010f815c6a: cmp    $0x99,%edx
  0x000000010f815c70: jl     0x000000010f815c82
  0x000000010f815c76: cmp    $0x9e,%edx
  0x000000010f815c7c: jle    0x000000010f818feb
  0x000000010f815c82: cmp    $0x9f,%edx
  0x000000010f815c88: jl     0x000000010f815c9a  ;   {no_reloc}
  0x000000010f815c8e: cmp    $0xa6,%edx
  0x000000010f815c94: jle    0x000000010f818efb
  0x000000010f815c9a: cmp    $0xa7,%edx
  0x000000010f815ca0: je     0x000000010f818f4b
  0x000000010f815ca6: cmp    $0xa8,%edx
  0x000000010f815cac: je     0x000000010f819e31
  0x000000010f815cb2: cmp    $0xa9,%edx
  0x000000010f815cb8: je     0x000000010f819e31
  0x000000010f815cbe: cmp    $0xaa,%edx
  0x000000010f815cc4: jl     0x000000010f815cd6
  0x000000010f815cca: cmp    $0xac,%edx
  0x000000010f815cd0: jle    0x000000010f818feb
  0x000000010f815cd6: cmp    $0xad,%edx
  0x000000010f815cdc: je     0x000000010f818efb
  0x000000010f815ce2: cmp    $0xae,%edx
  0x000000010f815ce8: je     0x000000010f818feb
  0x000000010f815cee: cmp    $0xaf,%edx
  0x000000010f815cf4: je     0x000000010f818efb
  0x000000010f815cfa: cmp    $0xb0,%edx
  0x000000010f815d00: je     0x000000010f818feb
  0x000000010f815d06: cmp    $0xb1,%edx
  0x000000010f815d0c: je     0x000000010f818f4b
  0x000000010f815d12: cmp    $0xb2,%edx
  0x000000010f815d18: je     0x000000010f817a59
  0x000000010f815d1e: cmp    $0xb3,%edx
  0x000000010f815d24: je     0x000000010f81913b
  0x000000010f815d2a: cmp    $0xb4,%edx
  0x000000010f815d30: je     0x000000010f817881
  0x000000010f815d36: cmp    $0xb5,%edx
  0x000000010f815d3c: je     0x000000010f8190c3
  0x000000010f815d42: cmp    $0xb6,%edx
  0x000000010f815d48: jl     0x000000010f815d5a
  0x000000010f815d4e: cmp    $0xb9,%edx
  0x000000010f815d54: jle    0x000000010f816186
  0x000000010f815d5a: cmp    $0xba,%edx
  0x000000010f815d60: je     0x000000010f8176a7
  0x000000010f815d66: cmp    $0xbb,%edx
  0x000000010f815d6c: je     0x000000010f81903b
  0x000000010f815d72: cmp    $0xbc,%edx
  0x000000010f815d78: je     0x000000010f817631
  0x000000010f815d7e: cmp    $0xbd,%edx
  0x000000010f815d84: je     0x000000010f816ae1
  0x000000010f815d8a: cmp    $0xbe,%edx
  0x000000010f815d90: je     0x000000010f818f6a
  0x000000010f815d96: cmp    $0xbf,%edx
  0x000000010f815d9c: je     0x000000010f818feb
  0x000000010f815da2: cmp    $0xc0,%edx
  0x000000010f815da8: je     0x000000010f8167a3
  0x000000010f815dae: cmp    $0xc1,%edx
  0x000000010f815db4: je     0x000000010f818f6a
  0x000000010f815dba: cmp    $0xc2,%edx
  0x000000010f815dc0: je     0x000000010f818feb
  0x000000010f815dc6: cmp    $0xc3,%edx
  0x000000010f815dcc: je     0x000000010f818feb
  0x000000010f815dd2: cmp    $0xc6,%edx
  0x000000010f815dd8: je     0x000000010f818feb
  0x000000010f815dde: cmp    $0xc7,%edx
  0x000000010f815de4: je     0x000000010f818feb
  0x000000010f815dea: jmpq   0x000000010f8165c1  ;*tableswitch
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1 (line 880)

  0x000000010f815def: mov    %rsi,%rdx
  0x000000010f815df2: movabs $0x10eda9988,%rdi  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f815dfc: addq   $0x1,0x1448(%rdi)
  0x000000010f815e04: mov    $0x1,%edx
  0x000000010f815e09: mov    %rsi,%rdi
  0x000000010f815e0c: mov    %rdi,%rsi          ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1246 (line 1003)

  0x000000010f815e0f: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=1524}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1246 (line 1003)
                                                ;   {optimized virtual_call}
  0x000000010f815e14: mov    0xf0(%rsp),%rsi
  0x000000010f815e1c: movabs $0x10eda9988,%rdi  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f815e26: addq   $0x1,0x1458(%rdi)
  0x000000010f815e2e: mov    0xf0(%rsp),%rsi    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1250 (line 1004)

  0x000000010f815e36: nop
  0x000000010f815e37: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=1564}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1250 (line 1004)
                                                ;   {optimized virtual_call}
  0x000000010f815e3c: mov    0xf0(%rsp),%rsi
  0x000000010f815e44: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f815e4e: addq   $0x1,0x1468(%rdx)
  0x000000010f815e56: mov    0xf8(%rsp),%edx
  0x000000010f815e5d: mov    %rax,%rcx
  0x000000010f815e60: mov    0xf0(%rsp),%rsi    ;*invokespecial set
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1259 (line 1005)

  0x000000010f815e68: nop
  0x000000010f815e69: nop
  0x000000010f815e6a: nop
  0x000000010f815e6b: nop
  0x000000010f815e6c: nop
  0x000000010f815e6d: nop
  0x000000010f815e6e: nop
  0x000000010f815e6f: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=1620}
                                                ;*invokespecial set
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1259 (line 1005)
                                                ;   {optimized virtual_call}
  0x000000010f815e74: mov    0xf0(%rsp),%rsi
  0x000000010f815e7c: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f815e86: addq   $0x1,0x1478(%rdx)
  0x000000010f815e8e: mov    0xf8(%rsp),%ecx
  0x000000010f815e95: inc    %ecx
  0x000000010f815e97: mov    %rcx,%rdx
  0x000000010f815e9a: mov    $0x1000000,%ecx
  0x000000010f815e9f: mov    0xf0(%rsp),%rsi    ;*invokespecial set
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1268 (line 1006)

  0x000000010f815ea7: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=1676}
                                                ;*invokespecial set
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1268 (line 1006)
                                                ;   {optimized virtual_call}
  0x000000010f815eac: mov    0xf8(%rsp),%ecx
  0x000000010f815eb3: cmp    $0x0,%ecx
  0x000000010f815eb6: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f815ec0: movabs $0x1488,%rsi
  0x000000010f815eca: jle    0x000000010f815eda
  0x000000010f815ed0: movabs $0x1498,%rsi
  0x000000010f815eda: mov    (%rdx,%rsi,1),%rdi
  0x000000010f815ede: lea    0x1(%rdi),%rdi
  0x000000010f815ee2: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f815ee6: jle    0x000000010f819d34  ;*ifle
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1272 (line 1007)

  0x000000010f815eec: mov    %rcx,%rdi
  0x000000010f815eef: dec    %edi
  0x000000010f815ef1: mov    0xf0(%rsp),%rsi
  0x000000010f815ef9: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f815f03: addq   $0x1,0x14a8(%rdx)
  0x000000010f815f0b: mov    %rdi,%rdx
  0x000000010f815f0e: mov    0xf0(%rsp),%rsi    ;*invokespecial get
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1279 (line 1008)

  0x000000010f815f16: mov    %edi,0xfc(%rsp)
  0x000000010f815f1d: nop
  0x000000010f815f1e: nop
  0x000000010f815f1f: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=1796}
                                                ;*invokespecial get
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1279 (line 1008)
                                                ;   {optimized virtual_call}
  0x000000010f815f24: cmp    $0x1000004,%eax
  0x000000010f815f2a: movabs $0x10eda9988,%rsi  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f815f34: movabs $0x14b8,%rdi
  0x000000010f815f3e: je     0x000000010f815f4e
  0x000000010f815f44: movabs $0x14c8,%rdi
  0x000000010f815f4e: mov    (%rsi,%rdi,1),%rbx
  0x000000010f815f52: lea    0x1(%rbx),%rbx
  0x000000010f815f56: mov    %rbx,(%rsi,%rdi,1)
  0x000000010f815f5a: je     0x000000010f818593  ;*if_icmpeq
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1288 (line 1010)

  0x000000010f815f60: cmp    $0x1000003,%eax
  0x000000010f815f66: movabs $0x10eda9988,%rsi  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f815f70: movabs $0x14d8,%rdi
  0x000000010f815f7a: jne    0x000000010f815f8a
  0x000000010f815f80: movabs $0x14e8,%rdi
  0x000000010f815f8a: mov    (%rsi,%rdi,1),%rbx
  0x000000010f815f8e: lea    0x1(%rbx),%rbx
  0x000000010f815f92: mov    %rbx,(%rsi,%rdi,1)
  0x000000010f815f96: je     0x000000010f818593  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1295 (line 1010)

  0x000000010f815f9c: mov    %rax,%rsi
  0x000000010f815f9f: and    $0xf000000,%esi
  0x000000010f815fa5: cmp    $0x1000000,%esi
  0x000000010f815fab: movabs $0x10eda9988,%rsi  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f815fb5: movabs $0x1520,%rdi
  0x000000010f815fbf: je     0x000000010f815fcf
  0x000000010f815fc5: movabs $0x1530,%rdi
  0x000000010f815fcf: mov    (%rsi,%rdi,1),%rbx
  0x000000010f815fd3: lea    0x1(%rbx),%rbx
  0x000000010f815fd7: mov    %rbx,(%rsi,%rdi,1)
  0x000000010f815fdb: je     0x000000010f819d34
  0x000000010f815fe1: jmpq   0x000000010f81853b  ;*if_icmpeq
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1317 (line 1012)

  0x000000010f815fe6: mov    0xf0(%rsp),%rsi
  0x000000010f815fee: movabs $0x10eda9988,%rdi  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f815ff8: addq   $0x1,0x1348(%rdi)
  0x000000010f816000: mov    0xf0(%rsp),%rsi    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1168 (line 989)

  0x000000010f816008: nop
  0x000000010f816009: nop
  0x000000010f81600a: nop
  0x000000010f81600b: nop
  0x000000010f81600c: nop
  0x000000010f81600d: nop
  0x000000010f81600e: nop
  0x000000010f81600f: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=2036}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1168 (line 989)
                                                ;   {optimized virtual_call}
  0x000000010f816014: mov    0xf0(%rsp),%rsi
  0x000000010f81601c: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f816026: addq   $0x1,0x1358(%rdx)
  0x000000010f81602e: mov    0xf8(%rsp),%edx
  0x000000010f816035: mov    %rax,%rcx
  0x000000010f816038: mov    0xf0(%rsp),%rsi    ;*invokespecial set
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1177 (line 990)

  0x000000010f816040: nop
  0x000000010f816041: nop
  0x000000010f816042: nop
  0x000000010f816043: nop
  0x000000010f816044: nop
  0x000000010f816045: nop
  0x000000010f816046: nop
  0x000000010f816047: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=2092}
                                                ;*invokespecial set
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1177 (line 990)
                                                ;   {optimized virtual_call}
  0x000000010f81604c: mov    0xf8(%rsp),%ecx
  0x000000010f816053: cmp    $0x0,%ecx
  0x000000010f816056: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f816060: movabs $0x1368,%rsi
  0x000000010f81606a: jle    0x000000010f81607a
  0x000000010f816070: movabs $0x1378,%rsi
  0x000000010f81607a: mov    (%rdx,%rsi,1),%rdi
  0x000000010f81607e: lea    0x1(%rdi),%rdi
  0x000000010f816082: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f816086: jle    0x000000010f819d34  ;*ifle
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1181 (line 991)

  0x000000010f81608c: mov    %rcx,%rdi
  0x000000010f81608f: dec    %edi
  0x000000010f816091: mov    0xf0(%rsp),%rsi
  0x000000010f816099: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8160a3: addq   $0x1,0x1388(%rdx)
  0x000000010f8160ab: mov    %rdi,%rdx
  0x000000010f8160ae: mov    0xf0(%rsp),%rsi    ;*invokespecial get
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1188 (line 992)

  0x000000010f8160b6: mov    %edi,0x100(%rsp)
  0x000000010f8160bd: nop
  0x000000010f8160be: nop
  0x000000010f8160bf: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=2212}
                                                ;*invokespecial get
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1188 (line 992)
                                                ;   {optimized virtual_call}
  0x000000010f8160c4: cmp    $0x1000004,%eax
  0x000000010f8160ca: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8160d4: movabs $0x1398,%rsi
  0x000000010f8160de: je     0x000000010f8160ee
  0x000000010f8160e4: movabs $0x13a8,%rsi
  0x000000010f8160ee: mov    (%rdx,%rsi,1),%rdi
  0x000000010f8160f2: lea    0x1(%rdi),%rdi
  0x000000010f8160f6: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f8160fa: je     0x000000010f8184e3  ;*if_icmpeq
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1197 (line 994)

  0x000000010f816100: cmp    $0x1000003,%eax
  0x000000010f816106: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f816110: movabs $0x13b8,%rsi
  0x000000010f81611a: jne    0x000000010f81612a
  0x000000010f816120: movabs $0x13c8,%rsi
  0x000000010f81612a: mov    (%rdx,%rsi,1),%rdi
  0x000000010f81612e: lea    0x1(%rdi),%rdi
  0x000000010f816132: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f816136: je     0x000000010f8184e3  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1204 (line 994)

  0x000000010f81613c: mov    %rax,%rdx
  0x000000010f81613f: and    $0xf000000,%edx
  0x000000010f816145: cmp    $0x1000000,%edx
  0x000000010f81614b: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f816155: movabs $0x1400,%rsi
  0x000000010f81615f: je     0x000000010f81616f
  0x000000010f816165: movabs $0x1410,%rsi
  0x000000010f81616f: mov    (%rdx,%rsi,1),%rdi
  0x000000010f816173: lea    0x1(%rdi),%rdi
  0x000000010f816177: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f81617b: je     0x000000010f819d34
  0x000000010f816181: jmpq   0x000000010f81848a  ;*if_icmpeq
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1226 (line 996)

  0x000000010f816186: mov    0x2c(%r9),%esi     ; implicit exception: dispatches to 0x000000010f819ed0
  0x000000010f81618a: shl    $0x3,%rsi          ;*getfield strVal3
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1899 (line 1227)

  0x000000010f81618e: mov    0xf0(%rsp),%rdi
  0x000000010f816196: movabs $0x10eda9988,%rbx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8161a0: addq   $0x1,0x1cd8(%rbx)
  0x000000010f8161a8: mov    %rsi,%rdx
  0x000000010f8161ab: mov    0xf0(%rsp),%rsi    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1902 (line 1227)

  0x000000010f8161b3: nop
  0x000000010f8161b4: nop
  0x000000010f8161b5: nop
  0x000000010f8161b6: nop
  0x000000010f8161b7: callq  0x000000010f7170a0  ; OopMap{[240]=Oop [272]=Oop [264]=Oop off=2460}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1902 (line 1227)
                                                ;   {optimized virtual_call}
  0x000000010f8161bc: mov    0x104(%rsp),%edx
  0x000000010f8161c3: cmp    $0xb8,%edx
  0x000000010f8161c9: movabs $0x10eda9988,%rsi  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8161d3: movabs $0x1ce8,%rdi
  0x000000010f8161dd: je     0x000000010f8161ed
  0x000000010f8161e3: movabs $0x1cf8,%rdi
  0x000000010f8161ed: mov    (%rsi,%rdi,1),%rbx
  0x000000010f8161f1: lea    0x1(%rbx),%rbx
  0x000000010f8161f5: mov    %rbx,(%rsi,%rdi,1)
  0x000000010f8161f9: jne    0x000000010f81620c  ;*if_icmpeq
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1909 (line 1228)

  0x000000010f8161ff: mov    0x108(%rsp),%r9
  0x000000010f816207: jmpq   0x000000010f816424  ;*aload_0
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1945 (line 1235)

  0x000000010f81620c: mov    0xf0(%rsp),%rsi
  0x000000010f816214: movabs $0x10eda9988,%rdi  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f81621e: addq   $0x1,0x1d08(%rdi)
  0x000000010f816226: mov    0xf0(%rsp),%rsi    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1913 (line 1229)

  0x000000010f81622e: nop
  0x000000010f81622f: callq  0x000000010f7170a0  ; OopMap{[240]=Oop [272]=Oop [264]=Oop off=2580}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1913 (line 1229)
                                                ;   {optimized virtual_call}
  0x000000010f816234: mov    0x104(%rsp),%edx
  0x000000010f81623b: cmp    $0xb7,%edx
  0x000000010f816241: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f81624b: movabs $0x1d18,%rsi
  0x000000010f816255: jne    0x000000010f816265
  0x000000010f81625b: movabs $0x1d28,%rsi
  0x000000010f816265: mov    (%rdx,%rsi,1),%rdi
  0x000000010f816269: lea    0x1(%rdi),%rdi
  0x000000010f81626d: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f816271: mov    0x108(%rsp),%r9
  0x000000010f816279: jne    0x000000010f816424  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1922 (line 1230)

  0x000000010f81627f: mov    0x28(%r9),%edx
  0x000000010f816283: shl    $0x3,%rdx          ;*getfield strVal2
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1927 (line 1230)

  0x000000010f816287: cmp    (%rdx),%rax        ;*invokevirtual charAt
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1931 (line 1231)
                                                ; implicit exception: dispatches to 0x000000010f819ed5
  0x000000010f81628a: mov    %rdx,%rsi
  0x000000010f81628d: movabs $0x10eda9988,%rdi  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f816297: mov    0x8(%rsi),%esi
  0x000000010f81629a: shl    $0x3,%rsi
  0x000000010f81629e: cmp    0x1d40(%rdi),%rsi
  0x000000010f8162a5: jne    0x000000010f8162b4
  0x000000010f8162a7: addq   $0x1,0x1d48(%rdi)
  0x000000010f8162af: jmpq   0x000000010f81631a
  0x000000010f8162b4: cmp    0x1d50(%rdi),%rsi
  0x000000010f8162bb: jne    0x000000010f8162ca
  0x000000010f8162bd: addq   $0x1,0x1d58(%rdi)
  0x000000010f8162c5: jmpq   0x000000010f81631a
  0x000000010f8162ca: cmpq   $0x0,0x1d40(%rdi)
  0x000000010f8162d5: jne    0x000000010f8162ee
  0x000000010f8162d7: mov    %rsi,0x1d40(%rdi)
  0x000000010f8162de: movq   $0x1,0x1d48(%rdi)
  0x000000010f8162e9: jmpq   0x000000010f81631a
  0x000000010f8162ee: cmpq   $0x0,0x1d50(%rdi)
  0x000000010f8162f9: jne    0x000000010f816312
  0x000000010f8162fb: mov    %rsi,0x1d50(%rdi)
  0x000000010f816302: movq   $0x1,0x1d58(%rdi)
  0x000000010f81630d: jmpq   0x000000010f81631a
  0x000000010f816312: addq   $0x1,0x1d38(%rdi)
  0x000000010f81631a: movabs $0x10ebeb488,%rsi  ;   {metadata(method data for {method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f816324: mov    0xdc(%rsi),%edi
  0x000000010f81632a: add    $0x8,%edi
  0x000000010f81632d: mov    %edi,0xdc(%rsi)
  0x000000010f816333: movabs $0x10ea68db0,%rsi  ;   {metadata({method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f81633d: and    $0x7ffff8,%edi
  0x000000010f816343: cmp    $0x0,%edi
  0x000000010f816346: je     0x000000010f819eda
  0x000000010f81634c: movabs $0x10ebeb488,%rsi  ;   {metadata(method data for {method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f816356: incl   0x118(%rsi)        ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1931 (line 1231)

  0x000000010f81635c: mov    0xc(%rdx),%edx
  0x000000010f81635f: shl    $0x3,%rdx          ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1931 (line 1231)

  0x000000010f816363: mov    0xc(%rdx),%esi     ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1931 (line 1231)
                                                ; implicit exception: dispatches to 0x000000010f819ef1
  0x000000010f816366: cmp    $0x0,%esi
  0x000000010f816369: movabs $0x10ebeb488,%rsi  ;   {metadata(method data for {method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f816373: movabs $0x128,%rdi
  0x000000010f81637d: jg     0x000000010f81638d
  0x000000010f816383: movabs $0x138,%rdi
  0x000000010f81638d: mov    (%rsi,%rdi,1),%rbx
  0x000000010f816391: lea    0x1(%rbx),%rbx
  0x000000010f816395: mov    %rbx,(%rsi,%rdi,1)
  0x000000010f816399: jle    0x000000010f819de1  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1931 (line 1231)

  0x000000010f81639f: cmpl   $0x0,0xc(%rdx)
  0x000000010f8163a6: jbe    0x000000010f819ef6
  0x000000010f8163ac: movzwl 0x10(%rdx),%edx    ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1931 (line 1231)

  0x000000010f8163b0: and    $0xffff,%edx
  0x000000010f8163b6: cmp    $0x3c,%edx
  0x000000010f8163b9: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8163c3: movabs $0x1d68,%rsi
  0x000000010f8163cd: jne    0x000000010f8163dd
  0x000000010f8163d3: movabs $0x1d78,%rsi
  0x000000010f8163dd: mov    (%rdx,%rsi,1),%rdi
  0x000000010f8163e1: lea    0x1(%rdi),%rdi
  0x000000010f8163e5: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f8163e9: jne    0x000000010f816424  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1936 (line 1231)

  0x000000010f8163ef: mov    0xf0(%rsp),%rsi
  0x000000010f8163f7: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f816401: addq   $0x1,0x1d88(%rdx)
  0x000000010f816409: mov    %rax,%rdx
  0x000000010f81640c: mov    0xf0(%rsp),%rsi    ;*invokespecial init
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1942 (line 1232)

  0x000000010f816414: nop
  0x000000010f816415: nop
  0x000000010f816416: nop
  0x000000010f816417: callq  0x000000010f7170a0  ; OopMap{[240]=Oop [272]=Oop [264]=Oop off=3068}
                                                ;*invokespecial init
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1942 (line 1232)
                                                ;   {optimized virtual_call}
  0x000000010f81641c: mov    0x108(%rsp),%r9
  0x000000010f816424: mov    0x2c(%r9),%edx
  0x000000010f816428: shl    $0x3,%rdx          ;*getfield strVal3
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1949 (line 1235)

  0x000000010f81642c: mov    0xf0(%rsp),%rsi
  0x000000010f816434: movabs $0x10eda9988,%rdi  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f81643e: addq   $0x1,0x1d98(%rdi)
  0x000000010f816446: movabs $0x10edac878,%rsi  ;   {metadata(method data for {method} {0x000000010ed88918} 'push' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f816450: mov    0xdc(%rsi),%edi
  0x000000010f816456: add    $0x8,%edi
  0x000000010f816459: mov    %edi,0xdc(%rsi)
  0x000000010f81645f: movabs $0x10ed88918,%rsi  ;   {metadata({method} {0x000000010ed88918} 'push' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f816469: and    $0x7ffff8,%edi
  0x000000010f81646f: cmp    $0x0,%edi
  0x000000010f816472: je     0x000000010f819f03
  0x000000010f816478: movabs $0x10edac878,%rsi  ;   {metadata(method data for {method} {0x000000010ed88918} 'push' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f816482: addq   $0x1,0x108(%rsi)
  0x000000010f81648a: mov    0x110(%rsp),%rsi   ;*invokestatic type
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@2 (line 635)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1952 (line 1235)

  0x000000010f816492: nop
  0x000000010f816493: nop
  0x000000010f816494: nop
  0x000000010f816495: nop
  0x000000010f816496: nop
  0x000000010f816497: callq  0x000000010f717520  ; OopMap{[240]=Oop off=3196}
                                                ;*invokestatic type
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@2 (line 635)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1952 (line 1235)
                                                ;   {static_call}
  0x000000010f81649c: cmp    $0x0,%eax
  0x000000010f81649f: movabs $0x10edac878,%rdx  ;   {metadata(method data for {method} {0x000000010ed88918} 'push' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8164a9: movabs $0x118,%rsi
  0x000000010f8164b3: je     0x000000010f8164c3
  0x000000010f8164b9: movabs $0x128,%rsi
  0x000000010f8164c3: mov    (%rdx,%rsi,1),%rdi
  0x000000010f8164c7: lea    0x1(%rdi),%rdi
  0x000000010f8164cb: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f8164cf: je     0x000000010f81846b  ;*ifeq
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@7 (line 636)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1952 (line 1235)

  0x000000010f8164d5: mov    0xf0(%rsp),%rsi
  0x000000010f8164dd: movabs $0x10edac878,%rdx  ;   {metadata(method data for {method} {0x000000010ed88918} 'push' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8164e7: addq   $0x1,0x138(%rdx)
  0x000000010f8164ef: mov    %rax,%rdx
  0x000000010f8164f2: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@12 (line 637)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1952 (line 1235)

  0x000000010f8164fa: mov    %eax,0x118(%rsp)
  0x000000010f816501: nop
  0x000000010f816502: nop
  0x000000010f816503: nop
  0x000000010f816504: nop
  0x000000010f816505: nop
  0x000000010f816506: nop
  0x000000010f816507: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=3308}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@12 (line 637)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1952 (line 1235)
                                                ;   {optimized virtual_call}
  0x000000010f81650c: mov    0x118(%rsp),%eax
  0x000000010f816513: cmp    $0x1000004,%eax
  0x000000010f816519: movabs $0x10edac878,%rdx  ;   {metadata(method data for {method} {0x000000010ed88918} 'push' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f816523: movabs $0x148,%rsi
  0x000000010f81652d: je     0x000000010f81653d
  0x000000010f816533: movabs $0x158,%rsi
  0x000000010f81653d: mov    (%rdx,%rsi,1),%rdi
  0x000000010f816541: lea    0x1(%rdi),%rdi
  0x000000010f816545: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f816549: je     0x000000010f81658b  ;*if_icmpeq
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@18 (line 638)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1952 (line 1235)

  0x000000010f81654f: cmp    $0x1000003,%eax
  0x000000010f816555: movabs $0x10edac878,%rdx  ;   {metadata(method data for {method} {0x000000010ed88918} 'push' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f81655f: movabs $0x168,%rsi
  0x000000010f816569: jne    0x000000010f816579
  0x000000010f81656f: movabs $0x178,%rsi
  0x000000010f816579: mov    (%rdx,%rsi,1),%rdi
  0x000000010f81657d: lea    0x1(%rdi),%rdi
  0x000000010f816581: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f816585: jne    0x000000010f81846b  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@24 (line 638)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1952 (line 1235)

  0x000000010f81658b: mov    0xf0(%rsp),%rsi
  0x000000010f816593: movabs $0x10edac878,%rdx  ;   {metadata(method data for {method} {0x000000010ed88918} 'push' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f81659d: addq   $0x1,0x188(%rdx)
  0x000000010f8165a5: mov    $0x1000000,%edx
  0x000000010f8165aa: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@30 (line 639)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1952 (line 1235)

  0x000000010f8165b2: nop
  0x000000010f8165b3: nop
  0x000000010f8165b4: nop
  0x000000010f8165b5: nop
  0x000000010f8165b6: nop
  0x000000010f8165b7: callq  0x000000010f7170a0  ; OopMap{off=3484}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@30 (line 639)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1952 (line 1235)
                                                ;   {optimized virtual_call}
  0x000000010f8165bc: jmpq   0x000000010f81846b  ;*return
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@33 (line 642)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1952 (line 1235)

  0x000000010f8165c1: mov    0xf0(%rsp),%rsi
  0x000000010f8165c9: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8165d3: addq   $0x1,0x2290(%rdx)
  0x000000010f8165db: mov    0xf8(%rsp),%edx
  0x000000010f8165e2: mov    0xf0(%rsp),%rsi    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2238 (line 1294)

  0x000000010f8165ea: nop
  0x000000010f8165eb: nop
  0x000000010f8165ec: nop
  0x000000010f8165ed: nop
  0x000000010f8165ee: nop
  0x000000010f8165ef: callq  0x000000010f7170a0  ; OopMap{[272]=Oop [240]=Oop [264]=Oop off=3540}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2238 (line 1294)
                                                ;   {optimized virtual_call}
  0x000000010f8165f4: mov    0x108(%rsp),%r9
  0x000000010f8165fc: mov    0x24(%r9),%edx     ; implicit exception: dispatches to 0x000000010f819f1a
  0x000000010f816600: shl    $0x3,%rdx          ;*getfield strVal1
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2245 (line 1295)

  0x000000010f816604: mov    0xf0(%rsp),%rsi
  0x000000010f81660c: movabs $0x10eda9988,%rdi  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f816616: addq   $0x1,0x22a0(%rdi)
  0x000000010f81661e: movabs $0x10edac878,%rsi  ;   {metadata(method data for {method} {0x000000010ed88918} 'push' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f816628: mov    0xdc(%rsi),%edi
  0x000000010f81662e: add    $0x8,%edi
  0x000000010f816631: mov    %edi,0xdc(%rsi)
  0x000000010f816637: movabs $0x10ed88918,%rsi  ;   {metadata({method} {0x000000010ed88918} 'push' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f816641: and    $0x7ffff8,%edi
  0x000000010f816647: cmp    $0x0,%edi
  0x000000010f81664a: je     0x000000010f819f1f
  0x000000010f816650: movabs $0x10edac878,%rsi  ;   {metadata(method data for {method} {0x000000010ed88918} 'push' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f81665a: addq   $0x1,0x108(%rsi)
  0x000000010f816662: mov    0x110(%rsp),%rsi   ;*invokestatic type
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@2 (line 635)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2248 (line 1295)

  0x000000010f81666a: nop
  0x000000010f81666b: nop
  0x000000010f81666c: nop
  0x000000010f81666d: nop
  0x000000010f81666e: nop
  0x000000010f81666f: callq  0x000000010f717520  ; OopMap{[240]=Oop off=3668}
                                                ;*invokestatic type
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@2 (line 635)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2248 (line 1295)
                                                ;   {static_call}
  0x000000010f816674: cmp    $0x0,%eax
  0x000000010f816677: movabs $0x10edac878,%rdx  ;   {metadata(method data for {method} {0x000000010ed88918} 'push' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f816681: movabs $0x118,%rsi
  0x000000010f81668b: je     0x000000010f81669b
  0x000000010f816691: movabs $0x128,%rsi
  0x000000010f81669b: mov    (%rdx,%rsi,1),%rdi
  0x000000010f81669f: lea    0x1(%rdi),%rdi
  0x000000010f8166a3: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f8166a7: je     0x000000010f819d34  ;*ifeq
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@7 (line 636)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2248 (line 1295)

  0x000000010f8166ad: mov    0xf0(%rsp),%rsi
  0x000000010f8166b5: movabs $0x10edac878,%rdx  ;   {metadata(method data for {method} {0x000000010ed88918} 'push' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8166bf: addq   $0x1,0x138(%rdx)
  0x000000010f8166c7: mov    %rax,%rdx
  0x000000010f8166ca: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@12 (line 637)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2248 (line 1295)

  0x000000010f8166d2: mov    %eax,0x11c(%rsp)
  0x000000010f8166d9: nop
  0x000000010f8166da: nop
  0x000000010f8166db: nop
  0x000000010f8166dc: nop
  0x000000010f8166dd: nop
  0x000000010f8166de: nop
  0x000000010f8166df: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=3780}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@12 (line 637)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2248 (line 1295)
                                                ;   {optimized virtual_call}
  0x000000010f8166e4: mov    0x11c(%rsp),%eax
  0x000000010f8166eb: cmp    $0x1000004,%eax
  0x000000010f8166f1: movabs $0x10edac878,%rdx  ;   {metadata(method data for {method} {0x000000010ed88918} 'push' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8166fb: movabs $0x148,%rsi
  0x000000010f816705: je     0x000000010f816715
  0x000000010f81670b: movabs $0x158,%rsi
  0x000000010f816715: mov    (%rdx,%rsi,1),%rdi
  0x000000010f816719: lea    0x1(%rdi),%rdi
  0x000000010f81671d: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f816721: je     0x000000010f816763  ;*if_icmpeq
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@18 (line 638)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2248 (line 1295)

  0x000000010f816727: cmp    $0x1000003,%eax
  0x000000010f81672d: movabs $0x10edac878,%rdx  ;   {metadata(method data for {method} {0x000000010ed88918} 'push' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f816737: movabs $0x168,%rsi
  0x000000010f816741: jne    0x000000010f816751
  0x000000010f816747: movabs $0x178,%rsi
  0x000000010f816751: mov    (%rdx,%rsi,1),%rdi
  0x000000010f816755: lea    0x1(%rdi),%rdi
  0x000000010f816759: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f81675d: jne    0x000000010f819d34  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@24 (line 638)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2248 (line 1295)

  0x000000010f816763: mov    0xf0(%rsp),%rsi
  0x000000010f81676b: movabs $0x10edac878,%rdx  ;   {metadata(method data for {method} {0x000000010ed88918} 'push' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f816775: addq   $0x1,0x188(%rdx)
  0x000000010f81677d: mov    $0x1000000,%edx
  0x000000010f816782: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@30 (line 639)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2248 (line 1295)

  0x000000010f81678a: nop
  0x000000010f81678b: nop
  0x000000010f81678c: nop
  0x000000010f81678d: nop
  0x000000010f81678e: nop
  0x000000010f81678f: callq  0x000000010f7170a0  ; OopMap{off=3956}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@30 (line 639)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2248 (line 1295)
                                                ;   {optimized virtual_call}
  0x000000010f816794: add    $0x1e0,%rsp
  0x000000010f81679b: pop    %rbp
  0x000000010f81679c: test   %eax,-0x8d7b6a2(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f8167a2: retq   
  0x000000010f8167a3: mov    0x24(%r9),%edi     ; implicit exception: dispatches to 0x000000010f819f36
  0x000000010f8167a7: shl    $0x3,%rdi          ;*getfield strVal1
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2189 (line 1284)

  0x000000010f8167ab: mov    %rdi,0x120(%rsp)
  0x000000010f8167b3: mov    0xf0(%rsp),%rsi
  0x000000010f8167bb: movabs $0x10eda9988,%rbx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8167c5: addq   $0x1,0x21b0(%rbx)
  0x000000010f8167cd: mov    0xf0(%rsp),%rsi    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2195 (line 1285)

  0x000000010f8167d5: nop
  0x000000010f8167d6: nop
  0x000000010f8167d7: callq  0x000000010f7170a0  ; OopMap{[272]=Oop [240]=Oop [288]=Oop off=4028}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2195 (line 1285)
                                                ;   {optimized virtual_call}
  0x000000010f8167dc: mov    0x120(%rsp),%rdi
  0x000000010f8167e4: cmp    (%rdi),%rax        ;*invokevirtual charAt
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2202 (line 1286)
                                                ; implicit exception: dispatches to 0x000000010f819f3b
  0x000000010f8167e7: mov    %rdi,%rsi
  0x000000010f8167ea: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8167f4: mov    0x8(%rsi),%esi
  0x000000010f8167f7: shl    $0x3,%rsi
  0x000000010f8167fb: cmp    0x21c8(%rdx),%rsi
  0x000000010f816802: jne    0x000000010f816811
  0x000000010f816804: addq   $0x1,0x21d0(%rdx)
  0x000000010f81680c: jmpq   0x000000010f816877
  0x000000010f816811: cmp    0x21d8(%rdx),%rsi
  0x000000010f816818: jne    0x000000010f816827
  0x000000010f81681a: addq   $0x1,0x21e0(%rdx)
  0x000000010f816822: jmpq   0x000000010f816877
  0x000000010f816827: cmpq   $0x0,0x21c8(%rdx)
  0x000000010f816832: jne    0x000000010f81684b
  0x000000010f816834: mov    %rsi,0x21c8(%rdx)
  0x000000010f81683b: movq   $0x1,0x21d0(%rdx)
  0x000000010f816846: jmpq   0x000000010f816877
  0x000000010f81684b: cmpq   $0x0,0x21d8(%rdx)
  0x000000010f816856: jne    0x000000010f81686f
  0x000000010f816858: mov    %rsi,0x21d8(%rdx)
  0x000000010f81685f: movq   $0x1,0x21e0(%rdx)
  0x000000010f81686a: jmpq   0x000000010f816877
  0x000000010f81686f: addq   $0x1,0x21c0(%rdx)
  0x000000010f816877: movabs $0x10ebeb488,%rsi  ;   {metadata(method data for {method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f816881: mov    0xdc(%rsi),%edx
  0x000000010f816887: add    $0x8,%edx
  0x000000010f81688a: mov    %edx,0xdc(%rsi)
  0x000000010f816890: movabs $0x10ea68db0,%rsi  ;   {metadata({method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f81689a: and    $0x7ffff8,%edx
  0x000000010f8168a0: cmp    $0x0,%edx
  0x000000010f8168a3: je     0x000000010f819f40
  0x000000010f8168a9: movabs $0x10ebeb488,%rsi  ;   {metadata(method data for {method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f8168b3: incl   0x118(%rsi)        ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2202 (line 1286)

  0x000000010f8168b9: mov    0xc(%rdi),%esi
  0x000000010f8168bc: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2202 (line 1286)

  0x000000010f8168c0: mov    0xc(%rsi),%edx     ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2202 (line 1286)
                                                ; implicit exception: dispatches to 0x000000010f819f57
  0x000000010f8168c3: cmp    $0x0,%edx
  0x000000010f8168c6: movabs $0x10ebeb488,%rdx  ;   {metadata(method data for {method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f8168d0: movabs $0x128,%rbx
  0x000000010f8168da: jg     0x000000010f8168ea
  0x000000010f8168e0: movabs $0x138,%rbx
  0x000000010f8168ea: mov    (%rdx,%rbx,1),%rax
  0x000000010f8168ee: lea    0x1(%rax),%rax
  0x000000010f8168f2: mov    %rax,(%rdx,%rbx,1)
  0x000000010f8168f6: jle    0x000000010f819d91  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2202 (line 1286)

  0x000000010f8168fc: cmpl   $0x0,0xc(%rsi)
  0x000000010f816903: jbe    0x000000010f819f5c
  0x000000010f816909: movzwl 0x10(%rsi),%esi    ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2202 (line 1286)

  0x000000010f81690d: and    $0xffff,%esi
  0x000000010f816913: cmp    $0x5b,%esi
  0x000000010f816916: movabs $0x10eda9988,%rsi  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f816920: movabs $0x21f0,%rdx
  0x000000010f81692a: jne    0x000000010f81693a
  0x000000010f816930: movabs $0x2200,%rdx
  0x000000010f81693a: mov    (%rsi,%rdx,1),%rbx
  0x000000010f81693e: lea    0x1(%rbx),%rbx
  0x000000010f816942: mov    %rbx,(%rsi,%rdx,1)
  0x000000010f816946: jne    0x000000010f8183da  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2207 (line 1286)

  0x000000010f81694c: mov    0xf0(%rsp),%rsi
  0x000000010f816954: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f81695e: addq   $0x1,0x2210(%rdx)
  0x000000010f816966: movabs $0x10edac878,%rsi  ;   {metadata(method data for {method} {0x000000010ed88918} 'push' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f816970: mov    0xdc(%rsi),%edx
  0x000000010f816976: add    $0x8,%edx
  0x000000010f816979: mov    %edx,0xdc(%rsi)
  0x000000010f81697f: movabs $0x10ed88918,%rsi  ;   {metadata({method} {0x000000010ed88918} 'push' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f816989: and    $0x7ffff8,%edx
  0x000000010f81698f: cmp    $0x0,%edx
  0x000000010f816992: je     0x000000010f819f69
  0x000000010f816998: movabs $0x10edac878,%rsi  ;   {metadata(method data for {method} {0x000000010ed88918} 'push' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8169a2: addq   $0x1,0x108(%rsi)
  0x000000010f8169aa: mov    0x110(%rsp),%rsi
  0x000000010f8169b2: mov    %rdi,%rdx          ;*invokestatic type
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@2 (line 635)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2214 (line 1287)

  0x000000010f8169b5: nop
  0x000000010f8169b6: nop
  0x000000010f8169b7: callq  0x000000010f717520  ; OopMap{[240]=Oop off=4508}
                                                ;*invokestatic type
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@2 (line 635)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2214 (line 1287)
                                                ;   {static_call}
  0x000000010f8169bc: cmp    $0x0,%eax
  0x000000010f8169bf: movabs $0x10edac878,%rdx  ;   {metadata(method data for {method} {0x000000010ed88918} 'push' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8169c9: movabs $0x118,%rsi
  0x000000010f8169d3: je     0x000000010f8169e3
  0x000000010f8169d9: movabs $0x128,%rsi
  0x000000010f8169e3: mov    (%rdx,%rsi,1),%rdi
  0x000000010f8169e7: lea    0x1(%rdi),%rdi
  0x000000010f8169eb: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f8169ef: je     0x000000010f8183bb  ;*ifeq
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@7 (line 636)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2214 (line 1287)

  0x000000010f8169f5: mov    0xf0(%rsp),%rsi
  0x000000010f8169fd: movabs $0x10edac878,%rdx  ;   {metadata(method data for {method} {0x000000010ed88918} 'push' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f816a07: addq   $0x1,0x138(%rdx)
  0x000000010f816a0f: mov    %rax,%rdx
  0x000000010f816a12: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@12 (line 637)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2214 (line 1287)

  0x000000010f816a1a: mov    %eax,0x128(%rsp)
  0x000000010f816a21: nop
  0x000000010f816a22: nop
  0x000000010f816a23: nop
  0x000000010f816a24: nop
  0x000000010f816a25: nop
  0x000000010f816a26: nop
  0x000000010f816a27: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=4620}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@12 (line 637)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2214 (line 1287)
                                                ;   {optimized virtual_call}
  0x000000010f816a2c: mov    0x128(%rsp),%eax
  0x000000010f816a33: cmp    $0x1000004,%eax
  0x000000010f816a39: movabs $0x10edac878,%rdx  ;   {metadata(method data for {method} {0x000000010ed88918} 'push' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f816a43: movabs $0x148,%rsi
  0x000000010f816a4d: je     0x000000010f816a5d
  0x000000010f816a53: movabs $0x158,%rsi
  0x000000010f816a5d: mov    (%rdx,%rsi,1),%rdi
  0x000000010f816a61: lea    0x1(%rdi),%rdi
  0x000000010f816a65: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f816a69: je     0x000000010f816aab  ;*if_icmpeq
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@18 (line 638)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2214 (line 1287)

  0x000000010f816a6f: cmp    $0x1000003,%eax
  0x000000010f816a75: movabs $0x10edac878,%rdx  ;   {metadata(method data for {method} {0x000000010ed88918} 'push' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f816a7f: movabs $0x168,%rsi
  0x000000010f816a89: jne    0x000000010f816a99
  0x000000010f816a8f: movabs $0x178,%rsi
  0x000000010f816a99: mov    (%rdx,%rsi,1),%rdi
  0x000000010f816a9d: lea    0x1(%rdi),%rdi
  0x000000010f816aa1: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f816aa5: jne    0x000000010f8183bb  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@24 (line 638)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2214 (line 1287)

  0x000000010f816aab: mov    0xf0(%rsp),%rsi
  0x000000010f816ab3: movabs $0x10edac878,%rdx  ;   {metadata(method data for {method} {0x000000010ed88918} 'push' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f816abd: addq   $0x1,0x188(%rdx)
  0x000000010f816ac5: mov    $0x1000000,%edx
  0x000000010f816aca: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@30 (line 639)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2214 (line 1287)

  0x000000010f816ad2: nop
  0x000000010f816ad3: nop
  0x000000010f816ad4: nop
  0x000000010f816ad5: nop
  0x000000010f816ad6: nop
  0x000000010f816ad7: callq  0x000000010f7170a0  ; OopMap{off=4796}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@30 (line 639)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2214 (line 1287)
                                                ;   {optimized virtual_call}
  0x000000010f816adc: jmpq   0x000000010f8183bb  ;*return
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@33 (line 642)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2214 (line 1287)

  0x000000010f816ae1: mov    0x24(%r9),%edi     ; implicit exception: dispatches to 0x000000010f819f80
  0x000000010f816ae5: shl    $0x3,%rdi          ;*getfield strVal1
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2122 (line 1275)

  0x000000010f816ae9: mov    %rdi,0x130(%rsp)
  0x000000010f816af1: mov    0xf0(%rsp),%rsi
  0x000000010f816af9: movabs $0x10eda9988,%rbx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f816b03: addq   $0x1,0x2030(%rbx)
  0x000000010f816b0b: mov    0xf0(%rsp),%rsi    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2128 (line 1276)

  0x000000010f816b13: nop
  0x000000010f816b14: nop
  0x000000010f816b15: nop
  0x000000010f816b16: nop
  0x000000010f816b17: callq  0x000000010f7170a0  ; OopMap{[272]=Oop [240]=Oop [304]=Oop off=4860}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2128 (line 1276)
                                                ;   {optimized virtual_call}
  0x000000010f816b1c: mov    0x130(%rsp),%rdi
  0x000000010f816b24: cmp    (%rdi),%rax        ;*invokevirtual charAt
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2135 (line 1277)
                                                ; implicit exception: dispatches to 0x000000010f819f85
  0x000000010f816b27: mov    %rdi,%rdx
  0x000000010f816b2a: movabs $0x10eda9988,%rsi  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f816b34: mov    0x8(%rdx),%edx
  0x000000010f816b37: shl    $0x3,%rdx
  0x000000010f816b3b: cmp    0x2048(%rsi),%rdx
  0x000000010f816b42: jne    0x000000010f816b51
  0x000000010f816b44: addq   $0x1,0x2050(%rsi)
  0x000000010f816b4c: jmpq   0x000000010f816bb7
  0x000000010f816b51: cmp    0x2058(%rsi),%rdx
  0x000000010f816b58: jne    0x000000010f816b67
  0x000000010f816b5a: addq   $0x1,0x2060(%rsi)
  0x000000010f816b62: jmpq   0x000000010f816bb7
  0x000000010f816b67: cmpq   $0x0,0x2048(%rsi)
  0x000000010f816b72: jne    0x000000010f816b8b
  0x000000010f816b74: mov    %rdx,0x2048(%rsi)
  0x000000010f816b7b: movq   $0x1,0x2050(%rsi)
  0x000000010f816b86: jmpq   0x000000010f816bb7
  0x000000010f816b8b: cmpq   $0x0,0x2058(%rsi)
  0x000000010f816b96: jne    0x000000010f816baf
  0x000000010f816b98: mov    %rdx,0x2058(%rsi)
  0x000000010f816b9f: movq   $0x1,0x2060(%rsi)
  0x000000010f816baa: jmpq   0x000000010f816bb7
  0x000000010f816baf: addq   $0x1,0x2040(%rsi)
  0x000000010f816bb7: movabs $0x10ebeb488,%rdx  ;   {metadata(method data for {method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f816bc1: mov    0xdc(%rdx),%esi
  0x000000010f816bc7: add    $0x8,%esi
  0x000000010f816bca: mov    %esi,0xdc(%rdx)
  0x000000010f816bd0: movabs $0x10ea68db0,%rdx  ;   {metadata({method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f816bda: and    $0x7ffff8,%esi
  0x000000010f816be0: cmp    $0x0,%esi
  0x000000010f816be3: je     0x000000010f819f8a
  0x000000010f816be9: movabs $0x10ebeb488,%rdx  ;   {metadata(method data for {method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f816bf3: incl   0x118(%rdx)        ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2135 (line 1277)

  0x000000010f816bf9: mov    0xc(%rdi),%edx
  0x000000010f816bfc: shl    $0x3,%rdx          ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2135 (line 1277)

  0x000000010f816c00: mov    0xc(%rdx),%esi     ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2135 (line 1277)
                                                ; implicit exception: dispatches to 0x000000010f819fa1
  0x000000010f816c03: cmp    $0x0,%esi
  0x000000010f816c06: movabs $0x10ebeb488,%rsi  ;   {metadata(method data for {method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f816c10: movabs $0x128,%rax
  0x000000010f816c1a: jg     0x000000010f816c2a
  0x000000010f816c20: movabs $0x138,%rax
  0x000000010f816c2a: mov    (%rsi,%rax,1),%rcx
  0x000000010f816c2e: lea    0x1(%rcx),%rcx
  0x000000010f816c32: mov    %rcx,(%rsi,%rax,1)
  0x000000010f816c36: jle    0x000000010f819d43  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2135 (line 1277)

  0x000000010f816c3c: cmpl   $0x0,0xc(%rdx)
  0x000000010f816c43: jbe    0x000000010f819fa6
  0x000000010f816c49: movzwl 0x10(%rdx),%edx    ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2135 (line 1277)

  0x000000010f816c4d: and    $0xffff,%edx
  0x000000010f816c53: cmp    $0x5b,%edx
  0x000000010f816c56: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f816c60: movabs $0x2070,%rsi
  0x000000010f816c6a: jne    0x000000010f816c7a
  0x000000010f816c70: movabs $0x2080,%rsi
  0x000000010f816c7a: mov    (%rdx,%rsi,1),%rax
  0x000000010f816c7e: lea    0x1(%rax),%rax
  0x000000010f816c82: mov    %rax,(%rdx,%rsi,1)
  0x000000010f816c86: jne    0x000000010f81832a  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2140 (line 1277)

  0x000000010f816c8c: nopl   0x0(%rax)
  0x000000010f816c90: jmpq   0x000000010f819fc2  ;   {no_reloc}
  0x000000010f816c95: add    %al,(%rax)
  0x000000010f816c97: add    %al,(%rax)
  0x000000010f816c99: add    %cl,-0x75(%rcx)
  0x000000010f816c9c: rex.RXB (bad) 
  0x000000010f816c9e: lea    0x18(%rax),%rdi
  0x000000010f816ca2: cmp    0x70(%r15),%rdi
  0x000000010f816ca6: ja     0x000000010f819fcc
  0x000000010f816cac: mov    %rdi,0x60(%r15)
  0x000000010f816cb0: mov    0xa8(%rdx),%rcx
  0x000000010f816cb7: mov    %rcx,(%rax)
  0x000000010f816cba: mov    %rdx,%rcx
  0x000000010f816cbd: shr    $0x3,%rcx
  0x000000010f816cc1: mov    %ecx,0x8(%rax)
  0x000000010f816cc4: xor    %rcx,%rcx
  0x000000010f816cc7: mov    %ecx,0xc(%rax)
  0x000000010f816cca: xor    %rcx,%rcx
  0x000000010f816ccd: mov    %rcx,0x10(%rax)    ;*new  ; - jdk.internal.org.objectweb.asm.Frame::execute@2145 (line 1278)

  0x000000010f816cd1: mov    %rax,0x140(%rsp)
  0x000000010f816cd9: mov    %rax,%rbx
  0x000000010f816cdc: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f816ce6: addq   $0x1,0x2090(%rdx)
  0x000000010f816cee: movabs $0x10ed0ae70,%rbx  ;   {metadata(method data for {method} {0x000000010eaddf30} '<init>' '()V' in 'java/lang/StringBuilder')}
  0x000000010f816cf8: mov    0xdc(%rbx),%edx
  0x000000010f816cfe: add    $0x8,%edx
  0x000000010f816d01: mov    %edx,0xdc(%rbx)
  0x000000010f816d07: movabs $0x10eaddf30,%rbx  ;   {metadata({method} {0x000000010eaddf30} '<init>' '()V' in 'java/lang/StringBuilder')}
  0x000000010f816d11: and    $0x7ffff8,%edx
  0x000000010f816d17: cmp    $0x0,%edx
  0x000000010f816d1a: je     0x000000010f819fd9
  0x000000010f816d20: mov    %rax,%rbx
  0x000000010f816d23: movabs $0x10ed0ae70,%rdx  ;   {metadata(method data for {method} {0x000000010eaddf30} '<init>' '()V' in 'java/lang/StringBuilder')}
  0x000000010f816d2d: addq   $0x1,0x108(%rdx)
  0x000000010f816d35: movabs $0x10ec9a3e8,%rbx  ;   {metadata(method data for {method} {0x000000010eada260} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f816d3f: mov    0xdc(%rbx),%edx
  0x000000010f816d45: add    $0x8,%edx
  0x000000010f816d48: mov    %edx,0xdc(%rbx)
  0x000000010f816d4e: movabs $0x10eada260,%rbx  ;   {metadata({method} {0x000000010eada260} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f816d58: and    $0x7ffff8,%edx
  0x000000010f816d5e: cmp    $0x0,%edx
  0x000000010f816d61: je     0x000000010f819ff0
  0x000000010f816d67: mov    %rax,%rbx
  0x000000010f816d6a: movabs $0x10ec9a3e8,%rdx  ;   {metadata(method data for {method} {0x000000010eada260} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f816d74: addq   $0x1,0x108(%rdx)
  0x000000010f816d7c: movabs $0x10ebdca10,%rbx  ;   {metadata(method data for {method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f816d86: mov    0xdc(%rbx),%edx
  0x000000010f816d8c: add    $0x8,%edx
  0x000000010f816d8f: mov    %edx,0xdc(%rbx)
  0x000000010f816d95: movabs $0x10ea65480,%rbx  ;   {metadata({method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f816d9f: and    $0x7ffff8,%edx
  0x000000010f816da5: cmp    $0x0,%edx
  0x000000010f816da8: je     0x000000010f81a007
  0x000000010f816dae: mov    $0x10,%ebx
  0x000000010f816db3: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000000010f816dbd: mov    %rax,%r9
  0x000000010f816dc0: movslq %ebx,%rbx
  0x000000010f816dc3: mov    %rbx,%rdi
  0x000000010f816dc6: cmp    $0xffffff,%rbx
  0x000000010f816dcd: ja     0x000000010f81a01e
  0x000000010f816dd3: movabs $0x17,%rsi
  0x000000010f816ddd: lea    (%rsi,%rbx,2),%rsi
  0x000000010f816de1: and    $0xfffffffffffffff8,%rsi
  0x000000010f816de5: mov    0x60(%r15),%rax
  0x000000010f816de9: lea    (%rax,%rsi,1),%rsi
  0x000000010f816ded: cmp    0x70(%r15),%rsi
  0x000000010f816df1: ja     0x000000010f81a01e
  0x000000010f816df7: mov    %rsi,0x60(%r15)
  0x000000010f816dfb: sub    %rax,%rsi
  0x000000010f816dfe: movq   $0x1,(%rax)
  0x000000010f816e05: mov    %rdx,%rcx
  0x000000010f816e08: shr    $0x3,%rcx
  0x000000010f816e0c: mov    %ecx,0x8(%rax)
  0x000000010f816e0f: mov    %ebx,0xc(%rax)
  0x000000010f816e12: sub    $0x10,%rsi
  0x000000010f816e16: je     0x000000010f816e2d
  0x000000010f816e1c: xor    %rbx,%rbx
  0x000000010f816e1f: shr    $0x3,%rsi
  0x000000010f816e23: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000010f816e28: dec    %rsi
  0x000000010f816e2b: jne    0x000000010f816e23  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::<init>@6 (line 68)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2149 (line 1278)

  0x000000010f816e2d: mov    %rax,%r10
  0x000000010f816e30: shr    $0x3,%r10
  0x000000010f816e34: mov    %r10d,0x10(%r9)
  0x000000010f816e38: mov    %r9,%rax
  0x000000010f816e3b: shr    $0x9,%rax
  0x000000010f816e3f: movabs $0x1065b9000,%rdx
  0x000000010f816e49: movb   $0x0,(%rax,%rdx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::<init>@8 (line 68)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2149 (line 1278)

  0x000000010f816e4d: mov    %r9,%rax
  0x000000010f816e50: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f816e5a: mov    0x8(%rax),%eax
  0x000000010f816e5d: shl    $0x3,%rax
  0x000000010f816e61: cmp    0x20a8(%rdx),%rax
  0x000000010f816e68: jne    0x000000010f816e77
  0x000000010f816e6a: addq   $0x1,0x20b0(%rdx)
  0x000000010f816e72: jmpq   0x000000010f816edd
  0x000000010f816e77: cmp    0x20b8(%rdx),%rax
  0x000000010f816e7e: jne    0x000000010f816e8d
  0x000000010f816e80: addq   $0x1,0x20c0(%rdx)
  0x000000010f816e88: jmpq   0x000000010f816edd
  0x000000010f816e8d: cmpq   $0x0,0x20a8(%rdx)
  0x000000010f816e98: jne    0x000000010f816eb1
  0x000000010f816e9a: mov    %rax,0x20a8(%rdx)
  0x000000010f816ea1: movq   $0x1,0x20b0(%rdx)
  0x000000010f816eac: jmpq   0x000000010f816edd
  0x000000010f816eb1: cmpq   $0x0,0x20b8(%rdx)
  0x000000010f816ebc: jne    0x000000010f816ed5
  0x000000010f816ebe: mov    %rax,0x20b8(%rdx)
  0x000000010f816ec5: movq   $0x1,0x20c0(%rdx)
  0x000000010f816ed0: jmpq   0x000000010f816edd
  0x000000010f816ed5: addq   $0x1,0x20a0(%rdx)
  0x000000010f816edd: movabs $0x10ed56760,%rdx  ;   {metadata(method data for {method} {0x000000010eade670} 'append' '(C)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f816ee7: mov    0xdc(%rdx),%esi
  0x000000010f816eed: add    $0x8,%esi
  0x000000010f816ef0: mov    %esi,0xdc(%rdx)
  0x000000010f816ef6: movabs $0x10eade670,%rdx  ;   {metadata({method} {0x000000010eade670} 'append' '(C)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f816f00: and    $0x7ffff8,%esi
  0x000000010f816f06: cmp    $0x0,%esi
  0x000000010f816f09: je     0x000000010f81a028
  0x000000010f816f0f: mov    %r9,%rax
  0x000000010f816f12: movabs $0x10ed56760,%rdx  ;   {metadata(method data for {method} {0x000000010eade670} 'append' '(C)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f816f1c: addq   $0x1,0x108(%rdx)
  0x000000010f816f24: movabs $0x10ed56898,%rdx  ;   {metadata(method data for {method} {0x000000010eadb618} 'append' '(C)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x000000010f816f2e: mov    0xdc(%rdx),%esi
  0x000000010f816f34: add    $0x8,%esi
  0x000000010f816f37: mov    %esi,0xdc(%rdx)
  0x000000010f816f3d: movabs $0x10eadb618,%rdx  ;   {metadata({method} {0x000000010eadb618} 'append' '(C)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x000000010f816f47: and    $0x7ffff8,%esi
  0x000000010f816f4d: cmp    $0x0,%esi
  0x000000010f816f50: je     0x000000010f81a03f
  0x000000010f816f56: mov    0xc(%r9),%edx      ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2154 (line 1278)

  0x000000010f816f5a: inc    %edx
  0x000000010f816f5c: mov    %r9,%rax
  0x000000010f816f5f: movabs $0x10ed56898,%rsi  ;   {metadata(method data for {method} {0x000000010eadb618} 'append' '(C)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x000000010f816f69: addq   $0x1,0x108(%rsi)
  0x000000010f816f71: movabs $0x10ec7a878,%rsi  ;   {metadata(method data for {method} {0x000000010eada4e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f816f7b: mov    0xdc(%rsi),%edi
  0x000000010f816f81: add    $0x8,%edi
  0x000000010f816f84: mov    %edi,0xdc(%rsi)
  0x000000010f816f8a: movabs $0x10eada4e0,%rsi  ;   {metadata({method} {0x000000010eada4e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f816f94: and    $0x7ffff8,%edi
  0x000000010f816f9a: cmp    $0x0,%edi
  0x000000010f816f9d: je     0x000000010f81a056
  0x000000010f816fa3: mov    %rdx,%rsi
  0x000000010f816fa6: sub    $0x10,%esi
  0x000000010f816fa9: cmp    $0x0,%esi
  0x000000010f816fac: movabs $0x10ec7a878,%rsi  ;   {metadata(method data for {method} {0x000000010eada4e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f816fb6: movabs $0x108,%rdi
  0x000000010f816fc0: jle    0x000000010f816fd0
  0x000000010f816fc6: movabs $0x118,%rdi
  0x000000010f816fd0: mov    (%rsi,%rdi,1),%rbx
  0x000000010f816fd4: lea    0x1(%rbx),%rbx
  0x000000010f816fd8: mov    %rbx,(%rsi,%rdi,1)
  0x000000010f816fdc: jg     0x000000010f816fea  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2154 (line 1278)

  0x000000010f816fe2: mov    %r9,%rdi
  0x000000010f816fe5: jmpq   0x000000010f81723a  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2154 (line 1278)

  0x000000010f816fea: mov    0x10(%r9),%ebx
  0x000000010f816fee: shl    $0x3,%rbx          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2154 (line 1278)

  0x000000010f816ff2: mov    %r9,%rax
  0x000000010f816ff5: movabs $0x10ec7a878,%rsi  ;   {metadata(method data for {method} {0x000000010eada4e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f816fff: addq   $0x1,0x128(%rsi)
  0x000000010f817007: mov    %r9,%rsi           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2154 (line 1278)

  0x000000010f81700a: mov    %rbx,0x138(%rsp)
  0x000000010f817012: nop
  0x000000010f817013: nop
  0x000000010f817014: nop
  0x000000010f817015: nop
  0x000000010f817016: nop
  0x000000010f817017: callq  0x000000010f7170a0  ; OopMap{[272]=Oop [240]=Oop [320]=Oop [304]=Oop [312]=Oop off=6140}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2154 (line 1278)
                                                ;   {optimized virtual_call}
  0x000000010f81701c: mov    %rax,%r8           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2154 (line 1278)

  0x000000010f81701f: movabs $0x10ec7a878,%rbx  ;   {metadata(method data for {method} {0x000000010eada4e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f817029: addq   $0x1,0x138(%rbx)
  0x000000010f817031: movabs $0x10ec8c690,%rbx  ;   {metadata(method data for {method} {0x000000010eb7ff20} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x000000010f81703b: mov    0xdc(%rbx),%edx
  0x000000010f817041: add    $0x8,%edx
  0x000000010f817044: mov    %edx,0xdc(%rbx)
  0x000000010f81704a: movabs $0x10eb7ff20,%rbx  ;   {metadata({method} {0x000000010eb7ff20} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x000000010f817054: and    $0x7ffff8,%edx
  0x000000010f81705a: cmp    $0x0,%edx
  0x000000010f81705d: je     0x000000010f81a06d
  0x000000010f817063: mov    %r8,%rbx
  0x000000010f817066: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000000010f817070: movslq %ebx,%rbx
  0x000000010f817073: mov    %rbx,%rdi
  0x000000010f817076: cmp    $0xffffff,%rbx
  0x000000010f81707d: ja     0x000000010f81a084
  0x000000010f817083: movabs $0x17,%rsi
  0x000000010f81708d: lea    (%rsi,%rbx,2),%rsi
  0x000000010f817091: and    $0xfffffffffffffff8,%rsi
  0x000000010f817095: mov    0x60(%r15),%rax
  0x000000010f817099: lea    (%rax,%rsi,1),%rsi
  0x000000010f81709d: cmp    0x70(%r15),%rsi
  0x000000010f8170a1: ja     0x000000010f81a084
  0x000000010f8170a7: mov    %rsi,0x60(%r15)
  0x000000010f8170ab: sub    %rax,%rsi
  0x000000010f8170ae: movq   $0x1,(%rax)
  0x000000010f8170b5: mov    %rdx,%rcx
  0x000000010f8170b8: shr    $0x3,%rcx
  0x000000010f8170bc: mov    %ecx,0x8(%rax)
  0x000000010f8170bf: mov    %ebx,0xc(%rax)
  0x000000010f8170c2: sub    $0x10,%rsi
  0x000000010f8170c6: je     0x000000010f8170dd
  0x000000010f8170cc: xor    %rbx,%rbx
  0x000000010f8170cf: shr    $0x3,%rsi
  0x000000010f8170d3: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000010f8170d8: dec    %rsi
  0x000000010f8170db: jne    0x000000010f8170d3  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2154 (line 1278)

  0x000000010f8170dd: mov    0x138(%rsp),%rbx
  0x000000010f8170e5: mov    0xc(%rbx),%esi     ;*arraylength
                                                ; - java.util.Arrays::copyOf@9 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2154 (line 1278)
                                                ; implicit exception: dispatches to 0x000000010f81a08e
  0x000000010f8170e8: movabs $0x10ec8c690,%rdx  ;   {metadata(method data for {method} {0x000000010eb7ff20} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x000000010f8170f2: addq   $0x1,0x108(%rdx)
  0x000000010f8170fa: movabs $0x10ec2f708,%rdx  ;   {metadata(method data for {method} {0x000000010eb5b7d8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010f817104: mov    0xdc(%rdx),%ecx
  0x000000010f81710a: add    $0x8,%ecx
  0x000000010f81710d: mov    %ecx,0xdc(%rdx)
  0x000000010f817113: movabs $0x10eb5b7d8,%rdx  ;   {metadata({method} {0x000000010eb5b7d8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010f81711d: and    $0x7ffff8,%ecx
  0x000000010f817123: cmp    $0x0,%ecx
  0x000000010f817126: je     0x000000010f81a093
  0x000000010f81712c: cmp    %r8d,%esi
  0x000000010f81712f: movabs $0x10ec2f708,%rdx  ;   {metadata(method data for {method} {0x000000010eb5b7d8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010f817139: movabs $0x108,%rcx
  0x000000010f817143: jg     0x000000010f817153
  0x000000010f817149: movabs $0x118,%rcx
  0x000000010f817153: mov    (%rdx,%rcx,1),%r9
  0x000000010f817157: lea    0x1(%r9),%r9
  0x000000010f81715b: mov    %r9,(%rdx,%rcx,1)
  0x000000010f81715f: jg     0x000000010f81717d  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2154 (line 1278)

  0x000000010f817165: movabs $0x10ec2f708,%rdx  ;   {metadata(method data for {method} {0x000000010eb5b7d8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010f81716f: incl   0x128(%rdx)
  0x000000010f817175: mov    %rsi,%r9
  0x000000010f817178: jmpq   0x000000010f817180  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2154 (line 1278)

  0x000000010f81717d: mov    %r8,%r9            ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2154 (line 1278)

  0x000000010f817180: movabs $0x10ec8c690,%rsi  ;   {metadata(method data for {method} {0x000000010eb7ff20} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x000000010f81718a: addq   $0x1,0x118(%rsi)
  0x000000010f817192: mov    %rbx,%rsi
  0x000000010f817195: mov    $0x0,%edx
  0x000000010f81719a: mov    %rax,%rcx
  0x000000010f81719d: mov    $0x0,%r8d
  0x000000010f8171a3: mov    %rax,0x148(%rsp)
  0x000000010f8171ab: lea    (%rdx,%r9,1),%rdi
  0x000000010f8171af: cmp    0xc(%rsi),%edi
  0x000000010f8171b2: ja     0x000000010f81a0aa
  0x000000010f8171b8: lea    (%r8,%r9,1),%rdi
  0x000000010f8171bc: cmp    0xc(%rcx),%edi
  0x000000010f8171bf: ja     0x000000010f81a0aa
  0x000000010f8171c5: test   %r9d,%r9d
  0x000000010f8171c8: jl     0x000000010f81a0aa
  0x000000010f8171ce: je     0x000000010f81720a
  0x000000010f8171d4: movslq %edx,%rdx
  0x000000010f8171d7: movslq %r8d,%r8
  0x000000010f8171da: lea    0x10(%rsi,%rdx,2),%rdi
  0x000000010f8171df: lea    0x10(%rcx,%r8,2),%rsi
  0x000000010f8171e4: mov    %r9,%rdx
  0x000000010f8171e7: test   $0xf,%esp
  0x000000010f8171ed: je     0x000000010f817205
  0x000000010f8171f3: sub    $0x8,%rsp
  0x000000010f8171f7: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x000000010f8171fc: add    $0x8,%rsp
  0x000000010f817200: jmpq   0x000000010f81720a
  0x000000010f817205: callq  Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2154 (line 1278)
                                                ;   {runtime_call}
  0x000000010f81720a: mov    0x148(%rsp),%rax
  0x000000010f817212: mov    0x140(%rsp),%rdi
  0x000000010f81721a: mov    %rax,%r10
  0x000000010f81721d: shr    $0x3,%r10
  0x000000010f817221: mov    %r10d,0x10(%rdi)
  0x000000010f817225: mov    %rdi,%rax
  0x000000010f817228: shr    $0x9,%rax
  0x000000010f81722c: movabs $0x1065b9000,%rdx
  0x000000010f817236: movb   $0x0,(%rax,%rdx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2154 (line 1278)

  0x000000010f81723a: mov    0x10(%rdi),%edx
  0x000000010f81723d: shl    $0x3,%rdx          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2154 (line 1278)

  0x000000010f817241: mov    0xc(%rdi),%esi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2154 (line 1278)

  0x000000010f817244: mov    %rsi,%rbx
  0x000000010f817247: inc    %ebx
  0x000000010f817249: mov    %ebx,0xc(%rdi)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2154 (line 1278)

  0x000000010f81724c: mov    $0x5b,%ebx
  0x000000010f817251: movslq %esi,%rax
  0x000000010f817254: cmp    0xc(%rdx),%esi     ; implicit exception: dispatches to 0x000000010f81a0b9
  0x000000010f817257: jae    0x000000010f81a0c3
  0x000000010f81725d: mov    %bx,0x10(%rdx,%rax,2)  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2154 (line 1278)

  0x000000010f817262: mov    %rdi,%rax
  0x000000010f817265: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f81726f: mov    0x8(%rax),%eax
  0x000000010f817272: shl    $0x3,%rax
  0x000000010f817276: cmp    0x20d8(%rdx),%rax
  0x000000010f81727d: jne    0x000000010f81728c
  0x000000010f81727f: addq   $0x1,0x20e0(%rdx)
  0x000000010f817287: jmpq   0x000000010f8172f2
  0x000000010f81728c: cmp    0x20e8(%rdx),%rax
  0x000000010f817293: jne    0x000000010f8172a2
  0x000000010f817295: addq   $0x1,0x20f0(%rdx)
  0x000000010f81729d: jmpq   0x000000010f8172f2
  0x000000010f8172a2: cmpq   $0x0,0x20d8(%rdx)
  0x000000010f8172ad: jne    0x000000010f8172c6
  0x000000010f8172af: mov    %rax,0x20d8(%rdx)
  0x000000010f8172b6: movq   $0x1,0x20e0(%rdx)
  0x000000010f8172c1: jmpq   0x000000010f8172f2
  0x000000010f8172c6: cmpq   $0x0,0x20e8(%rdx)
  0x000000010f8172d1: jne    0x000000010f8172ea
  0x000000010f8172d3: mov    %rax,0x20e8(%rdx)
  0x000000010f8172da: movq   $0x1,0x20f0(%rdx)
  0x000000010f8172e5: jmpq   0x000000010f8172f2
  0x000000010f8172ea: addq   $0x1,0x20d0(%rdx)
  0x000000010f8172f2: movabs $0x10ec81440,%rdx  ;   {metadata(method data for {method} {0x000000010eade248} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f8172fc: mov    0xdc(%rdx),%esi
  0x000000010f817302: add    $0x8,%esi
  0x000000010f817305: mov    %esi,0xdc(%rdx)
  0x000000010f81730b: movabs $0x10eade248,%rdx  ;   {metadata({method} {0x000000010eade248} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f817315: and    $0x7ffff8,%esi
  0x000000010f81731b: cmp    $0x0,%esi
  0x000000010f81731e: je     0x000000010f81a0cc
  0x000000010f817324: mov    %rdi,%rax
  0x000000010f817327: movabs $0x10ec81440,%rdx  ;   {metadata(method data for {method} {0x000000010eade248} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f817331: addq   $0x1,0x108(%rdx)
  0x000000010f817339: mov    0x130(%rsp),%rdx
  0x000000010f817341: mov    %rdi,%rsi          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2159 (line 1278)

  0x000000010f817344: nop
  0x000000010f817345: nop
  0x000000010f817346: nop
  0x000000010f817347: callq  0x000000010f7170a0  ; OopMap{[272]=Oop [240]=Oop [320]=Oop off=6956}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2159 (line 1278)
                                                ;   {optimized virtual_call}
  0x000000010f81734c: mov    0x140(%rsp),%rax
  0x000000010f817354: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f81735e: mov    0x8(%rax),%eax
  0x000000010f817361: shl    $0x3,%rax
  0x000000010f817365: cmp    0x2108(%rdx),%rax
  0x000000010f81736c: jne    0x000000010f81737b
  0x000000010f81736e: addq   $0x1,0x2110(%rdx)
  0x000000010f817376: jmpq   0x000000010f8173e1
  0x000000010f81737b: cmp    0x2118(%rdx),%rax
  0x000000010f817382: jne    0x000000010f817391
  0x000000010f817384: addq   $0x1,0x2120(%rdx)
  0x000000010f81738c: jmpq   0x000000010f8173e1
  0x000000010f817391: cmpq   $0x0,0x2108(%rdx)
  0x000000010f81739c: jne    0x000000010f8173b5
  0x000000010f81739e: mov    %rax,0x2108(%rdx)
  0x000000010f8173a5: movq   $0x1,0x2110(%rdx)
  0x000000010f8173b0: jmpq   0x000000010f8173e1
  0x000000010f8173b5: cmpq   $0x0,0x2118(%rdx)
  0x000000010f8173c0: jne    0x000000010f8173d9
  0x000000010f8173c2: mov    %rax,0x2118(%rdx)
  0x000000010f8173c9: movq   $0x1,0x2120(%rdx)
  0x000000010f8173d4: jmpq   0x000000010f8173e1
  0x000000010f8173d9: addq   $0x1,0x2100(%rdx)
  0x000000010f8173e1: movabs $0x10ed00b80,%rdx  ;   {metadata(method data for {method} {0x000000010eadf5f8} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder')}
  0x000000010f8173eb: mov    0xdc(%rdx),%esi
  0x000000010f8173f1: add    $0x8,%esi
  0x000000010f8173f4: mov    %esi,0xdc(%rdx)
  0x000000010f8173fa: movabs $0x10eadf5f8,%rdx  ;   {metadata({method} {0x000000010eadf5f8} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder')}
  0x000000010f817404: and    $0x7ffff8,%esi
  0x000000010f81740a: cmp    $0x0,%esi
  0x000000010f81740d: je     0x000000010f81a0e3
  0x000000010f817413: movabs $0x7c00016d0,%rdx  ;   {metadata('java/lang/String')}
  0x000000010f81741d: mov    0x60(%r15),%rax
  0x000000010f817421: lea    0x18(%rax),%rdi
  0x000000010f817425: cmp    0x70(%r15),%rdi
  0x000000010f817429: ja     0x000000010f81a0fa
  0x000000010f81742f: mov    %rdi,0x60(%r15)
  0x000000010f817433: mov    0xa8(%rdx),%rcx
  0x000000010f81743a: mov    %rcx,(%rax)
  0x000000010f81743d: mov    %rdx,%rcx
  0x000000010f817440: shr    $0x3,%rcx
  0x000000010f817444: mov    %ecx,0x8(%rax)
  0x000000010f817447: xor    %rcx,%rcx
  0x000000010f81744a: mov    %ecx,0xc(%rax)
  0x000000010f81744d: xor    %rcx,%rcx
  0x000000010f817450: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2162 (line 1278)

  0x000000010f817454: mov    0x140(%rsp),%rdx
  0x000000010f81745c: mov    0x10(%rdx),%ecx
  0x000000010f81745f: shl    $0x3,%rcx          ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 407)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2162 (line 1278)

  0x000000010f817463: mov    0xc(%rdx),%r8d     ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 407)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2162 (line 1278)

  0x000000010f817467: mov    %rax,%rdx
  0x000000010f81746a: movabs $0x10ed00b80,%rsi  ;   {metadata(method data for {method} {0x000000010eadf5f8} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder')}
  0x000000010f817474: addq   $0x1,0x108(%rsi)
  0x000000010f81747c: mov    %rcx,%rdx
  0x000000010f81747f: mov    $0x0,%ecx
  0x000000010f817484: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2162 (line 1278)

  0x000000010f817487: mov    %rax,0x150(%rsp)
  0x000000010f81748f: callq  0x000000010f7170a0  ; OopMap{[272]=Oop [240]=Oop [336]=Oop off=7284}
                                                ;*invokespecial <init>
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2162 (line 1278)
                                                ;   {optimized virtual_call}
  0x000000010f817494: mov    0xf0(%rsp),%rsi
  0x000000010f81749c: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8174a6: addq   $0x1,0x2130(%rdx)
  0x000000010f8174ae: movabs $0x10edac878,%rsi  ;   {metadata(method data for {method} {0x000000010ed88918} 'push' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8174b8: mov    0xdc(%rsi),%edx
  0x000000010f8174be: add    $0x8,%edx
  0x000000010f8174c1: mov    %edx,0xdc(%rsi)
  0x000000010f8174c7: movabs $0x10ed88918,%rsi  ;   {metadata({method} {0x000000010ed88918} 'push' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8174d1: and    $0x7ffff8,%edx
  0x000000010f8174d7: cmp    $0x0,%edx
  0x000000010f8174da: je     0x000000010f81a107
  0x000000010f8174e0: movabs $0x10edac878,%rsi  ;   {metadata(method data for {method} {0x000000010ed88918} 'push' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8174ea: addq   $0x1,0x108(%rsi)
  0x000000010f8174f2: mov    0x110(%rsp),%rsi
  0x000000010f8174fa: mov    0x150(%rsp),%rdx   ;*invokestatic type
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@2 (line 635)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2165 (line 1278)

  0x000000010f817502: nop
  0x000000010f817503: nop
  0x000000010f817504: nop
  0x000000010f817505: nop
  0x000000010f817506: nop
  0x000000010f817507: callq  0x000000010f717520  ; OopMap{[240]=Oop off=7404}
                                                ;*invokestatic type
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@2 (line 635)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2165 (line 1278)
                                                ;   {static_call}
  0x000000010f81750c: cmp    $0x0,%eax
  0x000000010f81750f: movabs $0x10edac878,%rdx  ;   {metadata(method data for {method} {0x000000010ed88918} 'push' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f817519: movabs $0x118,%rsi
  0x000000010f817523: je     0x000000010f817533
  0x000000010f817529: movabs $0x128,%rsi
  0x000000010f817533: mov    (%rdx,%rsi,1),%rdi
  0x000000010f817537: lea    0x1(%rdi),%rdi
  0x000000010f81753b: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f81753f: je     0x000000010f81830b  ;*ifeq
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@7 (line 636)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2165 (line 1278)

  0x000000010f817545: mov    0xf0(%rsp),%rsi
  0x000000010f81754d: movabs $0x10edac878,%rdx  ;   {metadata(method data for {method} {0x000000010ed88918} 'push' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f817557: addq   $0x1,0x138(%rdx)
  0x000000010f81755f: mov    %rax,%rdx
  0x000000010f817562: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@12 (line 637)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2165 (line 1278)

  0x000000010f81756a: mov    %eax,0x12c(%rsp)
  0x000000010f817571: nop
  0x000000010f817572: nop
  0x000000010f817573: nop
  0x000000010f817574: nop
  0x000000010f817575: nop
  0x000000010f817576: nop
  0x000000010f817577: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=7516}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@12 (line 637)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2165 (line 1278)
                                                ;   {optimized virtual_call}
  0x000000010f81757c: mov    0x12c(%rsp),%eax
  0x000000010f817583: cmp    $0x1000004,%eax
  0x000000010f817589: movabs $0x10edac878,%rdx  ;   {metadata(method data for {method} {0x000000010ed88918} 'push' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f817593: movabs $0x148,%rsi
  0x000000010f81759d: je     0x000000010f8175ad
  0x000000010f8175a3: movabs $0x158,%rsi
  0x000000010f8175ad: mov    (%rdx,%rsi,1),%rdi
  0x000000010f8175b1: lea    0x1(%rdi),%rdi
  0x000000010f8175b5: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f8175b9: je     0x000000010f8175fb  ;*if_icmpeq
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@18 (line 638)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2165 (line 1278)

  0x000000010f8175bf: cmp    $0x1000003,%eax
  0x000000010f8175c5: movabs $0x10edac878,%rdx  ;   {metadata(method data for {method} {0x000000010ed88918} 'push' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8175cf: movabs $0x168,%rsi
  0x000000010f8175d9: jne    0x000000010f8175e9
  0x000000010f8175df: movabs $0x178,%rsi
  0x000000010f8175e9: mov    (%rdx,%rsi,1),%rdi
  0x000000010f8175ed: lea    0x1(%rdi),%rdi
  0x000000010f8175f1: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f8175f5: jne    0x000000010f81830b  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@24 (line 638)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2165 (line 1278)

  0x000000010f8175fb: mov    0xf0(%rsp),%rsi
  0x000000010f817603: movabs $0x10edac878,%rdx  ;   {metadata(method data for {method} {0x000000010ed88918} 'push' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f81760d: addq   $0x1,0x188(%rdx)
  0x000000010f817615: mov    $0x1000000,%edx
  0x000000010f81761a: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@30 (line 639)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2165 (line 1278)

  0x000000010f817622: nop
  0x000000010f817623: nop
  0x000000010f817624: nop
  0x000000010f817625: nop
  0x000000010f817626: nop
  0x000000010f817627: callq  0x000000010f7170a0  ; OopMap{off=7692}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@30 (line 639)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2165 (line 1278)
                                                ;   {optimized virtual_call}
  0x000000010f81762c: jmpq   0x000000010f81830b  ;*return
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@33 (line 642)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2165 (line 1278)

  0x000000010f817631: mov    0xf0(%rsp),%rsi
  0x000000010f817639: movabs $0x10eda9988,%rdi  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f817643: addq   $0x1,0x1e50(%rdi)
  0x000000010f81764b: mov    0xf0(%rsp),%rsi    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2001 (line 1245)

  0x000000010f817653: nop
  0x000000010f817654: nop
  0x000000010f817655: nop
  0x000000010f817656: nop
  0x000000010f817657: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=7740}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2001 (line 1245)
                                                ;   {optimized virtual_call}
  0x000000010f81765c: mov    0xf8(%rsp),%ecx
  0x000000010f817663: cmp    $0x4,%ecx
  0x000000010f817666: je     0x000000010f8182bb
  0x000000010f81766c: cmp    $0x5,%ecx
  0x000000010f81766f: je     0x000000010f81826b
  0x000000010f817675: cmp    $0x6,%ecx
  0x000000010f817678: je     0x000000010f81821b
  0x000000010f81767e: cmp    $0x7,%ecx
  0x000000010f817681: je     0x000000010f8181cb
  0x000000010f817687: cmp    $0x8,%ecx
  0x000000010f81768a: je     0x000000010f81817b
  0x000000010f817690: cmp    $0x9,%ecx
  0x000000010f817693: je     0x000000010f81812b
  0x000000010f817699: cmp    $0xa,%ecx
  0x000000010f81769c: je     0x000000010f8180db
  0x000000010f8176a2: jmpq   0x000000010f818090  ;*tableswitch
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2006 (line 1246)

  0x000000010f8176a7: mov    0x28(%r9),%edx     ; implicit exception: dispatches to 0x000000010f81a11e
  0x000000010f8176ab: shl    $0x3,%rdx          ;*getfield strVal2
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1961 (line 1238)

  0x000000010f8176af: mov    0xf0(%rsp),%rsi
  0x000000010f8176b7: movabs $0x10eda9988,%rdi  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8176c1: addq   $0x1,0x1dc0(%rdi)
  0x000000010f8176c9: mov    0xf0(%rsp),%rsi    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1964 (line 1238)

  0x000000010f8176d1: nop
  0x000000010f8176d2: nop
  0x000000010f8176d3: nop
  0x000000010f8176d4: nop
  0x000000010f8176d5: nop
  0x000000010f8176d6: nop
  0x000000010f8176d7: callq  0x000000010f7170a0  ; OopMap{[240]=Oop [272]=Oop [264]=Oop off=7868}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1964 (line 1238)
                                                ;   {optimized virtual_call}
  0x000000010f8176dc: mov    0x108(%rsp),%r9
  0x000000010f8176e4: mov    0x28(%r9),%edx
  0x000000010f8176e8: shl    $0x3,%rdx          ;*getfield strVal2
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1971 (line 1239)

  0x000000010f8176ec: mov    0xf0(%rsp),%rsi
  0x000000010f8176f4: movabs $0x10eda9988,%rdi  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8176fe: addq   $0x1,0x1dd0(%rdi)
  0x000000010f817706: movabs $0x10edac878,%rsi  ;   {metadata(method data for {method} {0x000000010ed88918} 'push' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f817710: mov    0xdc(%rsi),%edi
  0x000000010f817716: add    $0x8,%edi
  0x000000010f817719: mov    %edi,0xdc(%rsi)
  0x000000010f81771f: movabs $0x10ed88918,%rsi  ;   {metadata({method} {0x000000010ed88918} 'push' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f817729: and    $0x7ffff8,%edi
  0x000000010f81772f: cmp    $0x0,%edi
  0x000000010f817732: je     0x000000010f81a123
  0x000000010f817738: movabs $0x10edac878,%rsi  ;   {metadata(method data for {method} {0x000000010ed88918} 'push' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f817742: addq   $0x1,0x108(%rsi)
  0x000000010f81774a: mov    0x110(%rsp),%rsi   ;*invokestatic type
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@2 (line 635)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1974 (line 1239)

  0x000000010f817752: nop
  0x000000010f817753: nop
  0x000000010f817754: nop
  0x000000010f817755: nop
  0x000000010f817756: nop
  0x000000010f817757: callq  0x000000010f717520  ; OopMap{[240]=Oop off=7996}
                                                ;*invokestatic type
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@2 (line 635)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1974 (line 1239)
                                                ;   {static_call}
  0x000000010f81775c: cmp    $0x0,%eax
  0x000000010f81775f: movabs $0x10edac878,%rdx  ;   {metadata(method data for {method} {0x000000010ed88918} 'push' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f817769: movabs $0x118,%rsi
  0x000000010f817773: je     0x000000010f817783
  0x000000010f817779: movabs $0x128,%rsi
  0x000000010f817783: mov    (%rdx,%rsi,1),%rdi
  0x000000010f817787: lea    0x1(%rdi),%rdi
  0x000000010f81778b: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f81778f: je     0x000000010f818071  ;*ifeq
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@7 (line 636)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1974 (line 1239)

  0x000000010f817795: mov    0xf0(%rsp),%rsi
  0x000000010f81779d: movabs $0x10edac878,%rdx  ;   {metadata(method data for {method} {0x000000010ed88918} 'push' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8177a7: addq   $0x1,0x138(%rdx)
  0x000000010f8177af: mov    %rax,%rdx
  0x000000010f8177b2: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@12 (line 637)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1974 (line 1239)

  0x000000010f8177ba: mov    %eax,0x158(%rsp)
  0x000000010f8177c1: nop
  0x000000010f8177c2: nop
  0x000000010f8177c3: nop
  0x000000010f8177c4: nop
  0x000000010f8177c5: nop
  0x000000010f8177c6: nop
  0x000000010f8177c7: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=8108}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@12 (line 637)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1974 (line 1239)
                                                ;   {optimized virtual_call}
  0x000000010f8177cc: mov    0x158(%rsp),%eax
  0x000000010f8177d3: cmp    $0x1000004,%eax
  0x000000010f8177d9: movabs $0x10edac878,%rdx  ;   {metadata(method data for {method} {0x000000010ed88918} 'push' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8177e3: movabs $0x148,%rsi
  0x000000010f8177ed: je     0x000000010f8177fd
  0x000000010f8177f3: movabs $0x158,%rsi
  0x000000010f8177fd: mov    (%rdx,%rsi,1),%rdi
  0x000000010f817801: lea    0x1(%rdi),%rdi
  0x000000010f817805: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f817809: je     0x000000010f81784b  ;*if_icmpeq
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@18 (line 638)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1974 (line 1239)

  0x000000010f81780f: cmp    $0x1000003,%eax
  0x000000010f817815: movabs $0x10edac878,%rdx  ;   {metadata(method data for {method} {0x000000010ed88918} 'push' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f81781f: movabs $0x168,%rsi
  0x000000010f817829: jne    0x000000010f817839
  0x000000010f81782f: movabs $0x178,%rsi
  0x000000010f817839: mov    (%rdx,%rsi,1),%rdi
  0x000000010f81783d: lea    0x1(%rdi),%rdi
  0x000000010f817841: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f817845: jne    0x000000010f818071  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@24 (line 638)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1974 (line 1239)

  0x000000010f81784b: mov    0xf0(%rsp),%rsi
  0x000000010f817853: movabs $0x10edac878,%rdx  ;   {metadata(method data for {method} {0x000000010ed88918} 'push' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f81785d: addq   $0x1,0x188(%rdx)
  0x000000010f817865: mov    $0x1000000,%edx
  0x000000010f81786a: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@30 (line 639)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1974 (line 1239)

  0x000000010f817872: nop
  0x000000010f817873: nop
  0x000000010f817874: nop
  0x000000010f817875: nop
  0x000000010f817876: nop
  0x000000010f817877: callq  0x000000010f7170a0  ; OopMap{off=8284}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@30 (line 639)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1974 (line 1239)
                                                ;   {optimized virtual_call}
  0x000000010f81787c: jmpq   0x000000010f818071  ;*return
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@33 (line 642)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1974 (line 1239)

  0x000000010f817881: mov    0xf0(%rsp),%rsi
  0x000000010f817889: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f817893: addq   $0x1,0x1c68(%rdx)
  0x000000010f81789b: mov    $0x1,%edx
  0x000000010f8178a0: mov    0xf0(%rsp),%rsi    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1863 (line 1216)

  0x000000010f8178a8: nop
  0x000000010f8178a9: nop
  0x000000010f8178aa: nop
  0x000000010f8178ab: nop
  0x000000010f8178ac: nop
  0x000000010f8178ad: nop
  0x000000010f8178ae: nop
  0x000000010f8178af: callq  0x000000010f7170a0  ; OopMap{[272]=Oop [240]=Oop [264]=Oop off=8340}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1863 (line 1216)
                                                ;   {optimized virtual_call}
  0x000000010f8178b4: mov    0x108(%rsp),%r9
  0x000000010f8178bc: mov    0x2c(%r9),%edx     ; implicit exception: dispatches to 0x000000010f81a13a
  0x000000010f8178c0: shl    $0x3,%rdx          ;*getfield strVal3
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1870 (line 1217)

  0x000000010f8178c4: mov    0xf0(%rsp),%rsi
  0x000000010f8178cc: movabs $0x10eda9988,%rdi  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8178d6: addq   $0x1,0x1c78(%rdi)
  0x000000010f8178de: movabs $0x10edac878,%rsi  ;   {metadata(method data for {method} {0x000000010ed88918} 'push' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8178e8: mov    0xdc(%rsi),%edi
  0x000000010f8178ee: add    $0x8,%edi
  0x000000010f8178f1: mov    %edi,0xdc(%rsi)
  0x000000010f8178f7: movabs $0x10ed88918,%rsi  ;   {metadata({method} {0x000000010ed88918} 'push' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f817901: and    $0x7ffff8,%edi
  0x000000010f817907: cmp    $0x0,%edi
  0x000000010f81790a: je     0x000000010f81a13f
  0x000000010f817910: movabs $0x10edac878,%rsi  ;   {metadata(method data for {method} {0x000000010ed88918} 'push' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f81791a: addq   $0x1,0x108(%rsi)
  0x000000010f817922: mov    0x110(%rsp),%rsi   ;*invokestatic type
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@2 (line 635)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1873 (line 1217)

  0x000000010f81792a: nop
  0x000000010f81792b: nop
  0x000000010f81792c: nop
  0x000000010f81792d: nop
  0x000000010f81792e: nop
  0x000000010f81792f: callq  0x000000010f717520  ; OopMap{[240]=Oop off=8468}
                                                ;*invokestatic type
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@2 (line 635)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1873 (line 1217)
                                                ;   {static_call}
  0x000000010f817934: cmp    $0x0,%eax
  0x000000010f817937: movabs $0x10edac878,%rdx  ;   {metadata(method data for {method} {0x000000010ed88918} 'push' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f817941: movabs $0x118,%rsi
  0x000000010f81794b: je     0x000000010f81795b
  0x000000010f817951: movabs $0x128,%rsi
  0x000000010f81795b: mov    (%rdx,%rsi,1),%rdi
  0x000000010f81795f: lea    0x1(%rdi),%rdi
  0x000000010f817963: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f817967: je     0x000000010f818052  ;*ifeq
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@7 (line 636)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1873 (line 1217)

  0x000000010f81796d: mov    0xf0(%rsp),%rsi
  0x000000010f817975: movabs $0x10edac878,%rdx  ;   {metadata(method data for {method} {0x000000010ed88918} 'push' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f81797f: addq   $0x1,0x138(%rdx)
  0x000000010f817987: mov    %rax,%rdx
  0x000000010f81798a: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@12 (line 637)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1873 (line 1217)

  0x000000010f817992: mov    %eax,0x15c(%rsp)
  0x000000010f817999: nop
  0x000000010f81799a: nop
  0x000000010f81799b: nop
  0x000000010f81799c: nop
  0x000000010f81799d: nop
  0x000000010f81799e: nop
  0x000000010f81799f: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=8580}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@12 (line 637)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1873 (line 1217)
                                                ;   {optimized virtual_call}
  0x000000010f8179a4: mov    0x15c(%rsp),%eax
  0x000000010f8179ab: cmp    $0x1000004,%eax
  0x000000010f8179b1: movabs $0x10edac878,%rdx  ;   {metadata(method data for {method} {0x000000010ed88918} 'push' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8179bb: movabs $0x148,%rsi
  0x000000010f8179c5: je     0x000000010f8179d5
  0x000000010f8179cb: movabs $0x158,%rsi
  0x000000010f8179d5: mov    (%rdx,%rsi,1),%rdi
  0x000000010f8179d9: lea    0x1(%rdi),%rdi
  0x000000010f8179dd: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f8179e1: je     0x000000010f817a23  ;*if_icmpeq
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@18 (line 638)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1873 (line 1217)

  0x000000010f8179e7: cmp    $0x1000003,%eax
  0x000000010f8179ed: movabs $0x10edac878,%rdx  ;   {metadata(method data for {method} {0x000000010ed88918} 'push' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8179f7: movabs $0x168,%rsi
  0x000000010f817a01: jne    0x000000010f817a11
  0x000000010f817a07: movabs $0x178,%rsi
  0x000000010f817a11: mov    (%rdx,%rsi,1),%rdi
  0x000000010f817a15: lea    0x1(%rdi),%rdi
  0x000000010f817a19: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f817a1d: jne    0x000000010f818052  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@24 (line 638)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1873 (line 1217)

  0x000000010f817a23: mov    0xf0(%rsp),%rsi
  0x000000010f817a2b: movabs $0x10edac878,%rdx  ;   {metadata(method data for {method} {0x000000010ed88918} 'push' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f817a35: addq   $0x1,0x188(%rdx)
  0x000000010f817a3d: mov    $0x1000000,%edx
  0x000000010f817a42: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@30 (line 639)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1873 (line 1217)

  0x000000010f817a4a: nop
  0x000000010f817a4b: nop
  0x000000010f817a4c: nop
  0x000000010f817a4d: nop
  0x000000010f817a4e: nop
  0x000000010f817a4f: callq  0x000000010f7170a0  ; OopMap{off=8756}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@30 (line 639)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1873 (line 1217)
                                                ;   {optimized virtual_call}
  0x000000010f817a54: jmpq   0x000000010f818052  ;*return
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@33 (line 642)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1873 (line 1217)

  0x000000010f817a59: mov    0x2c(%r9),%edx     ; implicit exception: dispatches to 0x000000010f81a156
  0x000000010f817a5d: shl    $0x3,%rdx          ;*getfield strVal3
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1840 (line 1210)

  0x000000010f817a61: mov    0xf0(%rsp),%rsi
  0x000000010f817a69: movabs $0x10eda9988,%rdi  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f817a73: addq   $0x1,0x1c18(%rdi)
  0x000000010f817a7b: movabs $0x10edac878,%rsi  ;   {metadata(method data for {method} {0x000000010ed88918} 'push' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f817a85: mov    0xdc(%rsi),%edi
  0x000000010f817a8b: add    $0x8,%edi
  0x000000010f817a8e: mov    %edi,0xdc(%rsi)
  0x000000010f817a94: movabs $0x10ed88918,%rsi  ;   {metadata({method} {0x000000010ed88918} 'push' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f817a9e: and    $0x7ffff8,%edi
  0x000000010f817aa4: cmp    $0x0,%edi
  0x000000010f817aa7: je     0x000000010f81a15b
  0x000000010f817aad: movabs $0x10edac878,%rsi  ;   {metadata(method data for {method} {0x000000010ed88918} 'push' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f817ab7: addq   $0x1,0x108(%rsi)
  0x000000010f817abf: mov    0x110(%rsp),%rsi   ;*invokestatic type
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@2 (line 635)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1843 (line 1210)

  0x000000010f817ac7: callq  0x000000010f717520  ; OopMap{[240]=Oop off=8876}
                                                ;*invokestatic type
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@2 (line 635)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1843 (line 1210)
                                                ;   {static_call}
  0x000000010f817acc: cmp    $0x0,%eax
  0x000000010f817acf: movabs $0x10edac878,%rdx  ;   {metadata(method data for {method} {0x000000010ed88918} 'push' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f817ad9: movabs $0x118,%rsi
  0x000000010f817ae3: je     0x000000010f817af3
  0x000000010f817ae9: movabs $0x128,%rsi
  0x000000010f817af3: mov    (%rdx,%rsi,1),%rdi
  0x000000010f817af7: lea    0x1(%rdi),%rdi
  0x000000010f817afb: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f817aff: je     0x000000010f818033  ;*ifeq
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@7 (line 636)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1843 (line 1210)

  0x000000010f817b05: mov    0xf0(%rsp),%rsi
  0x000000010f817b0d: movabs $0x10edac878,%rdx  ;   {metadata(method data for {method} {0x000000010ed88918} 'push' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f817b17: addq   $0x1,0x138(%rdx)
  0x000000010f817b1f: mov    %rax,%rdx
  0x000000010f817b22: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@12 (line 637)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1843 (line 1210)

  0x000000010f817b2a: mov    %eax,0x160(%rsp)
  0x000000010f817b31: nop
  0x000000010f817b32: nop
  0x000000010f817b33: nop
  0x000000010f817b34: nop
  0x000000010f817b35: nop
  0x000000010f817b36: nop
  0x000000010f817b37: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=8988}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@12 (line 637)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1843 (line 1210)
                                                ;   {optimized virtual_call}
  0x000000010f817b3c: mov    0x160(%rsp),%eax
  0x000000010f817b43: cmp    $0x1000004,%eax
  0x000000010f817b49: movabs $0x10edac878,%rdx  ;   {metadata(method data for {method} {0x000000010ed88918} 'push' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f817b53: movabs $0x148,%rsi
  0x000000010f817b5d: je     0x000000010f817b6d
  0x000000010f817b63: movabs $0x158,%rsi
  0x000000010f817b6d: mov    (%rdx,%rsi,1),%rdi
  0x000000010f817b71: lea    0x1(%rdi),%rdi
  0x000000010f817b75: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f817b79: je     0x000000010f817bbb  ;*if_icmpeq
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@18 (line 638)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1843 (line 1210)

  0x000000010f817b7f: cmp    $0x1000003,%eax
  0x000000010f817b85: movabs $0x10edac878,%rdx  ;   {metadata(method data for {method} {0x000000010ed88918} 'push' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f817b8f: movabs $0x168,%rsi
  0x000000010f817b99: jne    0x000000010f817ba9
  0x000000010f817b9f: movabs $0x178,%rsi
  0x000000010f817ba9: mov    (%rdx,%rsi,1),%rdi
  0x000000010f817bad: lea    0x1(%rdi),%rdi
  0x000000010f817bb1: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f817bb5: jne    0x000000010f818033  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@24 (line 638)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1843 (line 1210)

  0x000000010f817bbb: mov    0xf0(%rsp),%rsi
  0x000000010f817bc3: movabs $0x10edac878,%rdx  ;   {metadata(method data for {method} {0x000000010ed88918} 'push' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f817bcd: addq   $0x1,0x188(%rdx)
  0x000000010f817bd5: mov    $0x1000000,%edx
  0x000000010f817bda: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@30 (line 639)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1843 (line 1210)

  0x000000010f817be2: nop
  0x000000010f817be3: nop
  0x000000010f817be4: nop
  0x000000010f817be5: nop
  0x000000010f817be6: nop
  0x000000010f817be7: callq  0x000000010f7170a0  ; OopMap{off=9164}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@30 (line 639)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1843 (line 1210)
                                                ;   {optimized virtual_call}
  0x000000010f817bec: jmpq   0x000000010f818033  ;*return
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@33 (line 642)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1843 (line 1210)

  0x000000010f817bf1: mov    0x18(%r9),%edx     ;*getfield type
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@878 (line 926)
                                                ; implicit exception: dispatches to 0x000000010f81a172
  0x000000010f817bf5: cmp    $0x3,%edx
  0x000000010f817bf8: je     0x000000010f817fe3
  0x000000010f817bfe: cmp    $0x4,%edx
  0x000000010f817c01: je     0x000000010f817f93
  0x000000010f817c07: cmp    $0x5,%edx
  0x000000010f817c0a: je     0x000000010f817f13
  0x000000010f817c10: cmp    $0x6,%edx
  0x000000010f817c13: je     0x000000010f817e93
  0x000000010f817c19: cmp    $0x7,%edx
  0x000000010f817c1c: je     0x000000010f817dfb
  0x000000010f817c22: cmp    $0x8,%edx
  0x000000010f817c25: je     0x000000010f817d63
  0x000000010f817c2b: cmp    $0x10,%edx
  0x000000010f817c2e: je     0x000000010f817ccb  ;*tableswitch
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@881 (line 926)

  0x000000010f817c34: mov    0x110(%rsp),%r8
  0x000000010f817c3c: cmp    (%r8),%rax         ; implicit exception: dispatches to 0x000000010f81a177
  0x000000010f817c3f: mov    %r8,%rdx
  0x000000010f817c42: movabs $0x10eda9988,%rsi  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f817c4c: movabs $0x7c005d658,%r10  ;   {metadata('jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000000010f817c56: mov    %r10,0x1178(%rsi)
  0x000000010f817c5d: addq   $0x1,0x1180(%rsi)
  0x000000010f817c65: movabs $0x79589cc28,%rdx  ;   {oop("java/lang/invoke/MethodHandle")}
  0x000000010f817c6f: mov    %r8,%rsi           ;*invokevirtual addType
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1054 (line 952)

  0x000000010f817c72: nop
  0x000000010f817c73: nop
  0x000000010f817c74: nop
  0x000000010f817c75: nop
  0x000000010f817c76: nop
  0x000000010f817c77: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=9308}
                                                ;*invokevirtual addType
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1054 (line 952)
                                                ;   {optimized virtual_call}
  0x000000010f817c7c: mov    0xf0(%rsp),%rsi
  0x000000010f817c84: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f817c8e: addq   $0x1,0x11a0(%rdx)
  0x000000010f817c96: or     $0x1700000,%eax
  0x000000010f817c9c: mov    %rax,%rdx
  0x000000010f817c9f: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1058 (line 952)

  0x000000010f817ca7: callq  0x000000010f7170a0  ; OopMap{off=9356}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1058 (line 952)
                                                ;   {optimized virtual_call}
  0x000000010f817cac: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f817cb6: incl   0x11b0(%rdx)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1061 (line 954)

  0x000000010f817cbc: add    $0x1e0,%rsp
  0x000000010f817cc3: pop    %rbp
  0x000000010f817cc4: test   %eax,-0x8d7cbca(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f817cca: retq   
  0x000000010f817ccb: mov    0x110(%rsp),%r8
  0x000000010f817cd3: cmp    (%r8),%rax         ; implicit exception: dispatches to 0x000000010f81a17c
  0x000000010f817cd6: mov    %r8,%rdx
  0x000000010f817cd9: movabs $0x10eda9988,%rsi  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f817ce3: movabs $0x7c005d658,%r10  ;   {metadata('jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000000010f817ced: mov    %r10,0x1120(%rsi)
  0x000000010f817cf4: addq   $0x1,0x1128(%rsi)
  0x000000010f817cfc: movabs $0x795968d08,%rdx  ;   {oop("java/lang/invoke/MethodType")}
  0x000000010f817d06: mov    %r8,%rsi           ;*invokevirtual addType
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1038 (line 948)

  0x000000010f817d09: nop
  0x000000010f817d0a: nop
  0x000000010f817d0b: nop
  0x000000010f817d0c: nop
  0x000000010f817d0d: nop
  0x000000010f817d0e: nop
  0x000000010f817d0f: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=9460}
                                                ;*invokevirtual addType
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1038 (line 948)
                                                ;   {optimized virtual_call}
  0x000000010f817d14: mov    0xf0(%rsp),%rsi
  0x000000010f817d1c: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f817d26: addq   $0x1,0x1148(%rdx)
  0x000000010f817d2e: or     $0x1700000,%eax
  0x000000010f817d34: mov    %rax,%rdx
  0x000000010f817d37: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1042 (line 948)

  0x000000010f817d3f: callq  0x000000010f7170a0  ; OopMap{off=9508}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1042 (line 948)
                                                ;   {optimized virtual_call}
  0x000000010f817d44: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f817d4e: incl   0x1158(%rdx)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1045 (line 949)

  0x000000010f817d54: add    $0x1e0,%rsp
  0x000000010f817d5b: pop    %rbp
  0x000000010f817d5c: test   %eax,-0x8d7cc62(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f817d62: retq   
  0x000000010f817d63: mov    0x110(%rsp),%r8
  0x000000010f817d6b: cmp    (%r8),%rax         ; implicit exception: dispatches to 0x000000010f81a181
  0x000000010f817d6e: mov    %r8,%rdx
  0x000000010f817d71: movabs $0x10eda9988,%rsi  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f817d7b: movabs $0x7c005d658,%r10  ;   {metadata('jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000000010f817d85: mov    %r10,0x10c8(%rsi)
  0x000000010f817d8c: addq   $0x1,0x10d0(%rsi)
  0x000000010f817d94: movabs $0x795a324d8,%rdx  ;   {oop("java/lang/String")}
  0x000000010f817d9e: mov    %r8,%rsi           ;*invokevirtual addType
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1022 (line 945)

  0x000000010f817da1: nop
  0x000000010f817da2: nop
  0x000000010f817da3: nop
  0x000000010f817da4: nop
  0x000000010f817da5: nop
  0x000000010f817da6: nop
  0x000000010f817da7: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=9612}
                                                ;*invokevirtual addType
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1022 (line 945)
                                                ;   {optimized virtual_call}
  0x000000010f817dac: mov    0xf0(%rsp),%rsi
  0x000000010f817db4: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f817dbe: addq   $0x1,0x10f0(%rdx)
  0x000000010f817dc6: or     $0x1700000,%eax
  0x000000010f817dcc: mov    %rax,%rdx
  0x000000010f817dcf: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1026 (line 945)

  0x000000010f817dd7: callq  0x000000010f7170a0  ; OopMap{off=9660}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1026 (line 945)
                                                ;   {optimized virtual_call}
  0x000000010f817ddc: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f817de6: incl   0x1100(%rdx)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1029 (line 946)

  0x000000010f817dec: add    $0x1e0,%rsp
  0x000000010f817df3: pop    %rbp
  0x000000010f817df4: test   %eax,-0x8d7ccfa(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f817dfa: retq   
  0x000000010f817dfb: mov    0x110(%rsp),%r8
  0x000000010f817e03: cmp    (%r8),%rax         ; implicit exception: dispatches to 0x000000010f81a186
  0x000000010f817e06: mov    %r8,%rdx
  0x000000010f817e09: movabs $0x10eda9988,%rsi  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f817e13: movabs $0x7c005d658,%r10  ;   {metadata('jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000000010f817e1d: mov    %r10,0x1070(%rsi)
  0x000000010f817e24: addq   $0x1,0x1078(%rsi)
  0x000000010f817e2c: movabs $0x7958aeb18,%rdx  ;   {oop("java/lang/Class")}
  0x000000010f817e36: mov    %r8,%rsi           ;*invokevirtual addType
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1006 (line 942)

  0x000000010f817e39: nop
  0x000000010f817e3a: nop
  0x000000010f817e3b: nop
  0x000000010f817e3c: nop
  0x000000010f817e3d: nop
  0x000000010f817e3e: nop
  0x000000010f817e3f: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=9764}
                                                ;*invokevirtual addType
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1006 (line 942)
                                                ;   {optimized virtual_call}
  0x000000010f817e44: mov    0xf0(%rsp),%rsi
  0x000000010f817e4c: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f817e56: addq   $0x1,0x1098(%rdx)
  0x000000010f817e5e: or     $0x1700000,%eax
  0x000000010f817e64: mov    %rax,%rdx
  0x000000010f817e67: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1010 (line 942)

  0x000000010f817e6f: callq  0x000000010f7170a0  ; OopMap{off=9812}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1010 (line 942)
                                                ;   {optimized virtual_call}
  0x000000010f817e74: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f817e7e: incl   0x10a8(%rdx)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1013 (line 943)

  0x000000010f817e84: add    $0x1e0,%rsp
  0x000000010f817e8b: pop    %rbp
  0x000000010f817e8c: test   %eax,-0x8d7cd92(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f817e92: retq   
  0x000000010f817e93: mov    0xf0(%rsp),%rsi
  0x000000010f817e9b: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f817ea5: addq   $0x1,0x1030(%rdx)
  0x000000010f817ead: mov    $0x1000003,%edx
  0x000000010f817eb2: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@988 (line 938)

  0x000000010f817eba: nop
  0x000000010f817ebb: nop
  0x000000010f817ebc: nop
  0x000000010f817ebd: nop
  0x000000010f817ebe: nop
  0x000000010f817ebf: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=9892}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@988 (line 938)
                                                ;   {optimized virtual_call}
  0x000000010f817ec4: mov    0xf0(%rsp),%rsi
  0x000000010f817ecc: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f817ed6: addq   $0x1,0x1040(%rdx)
  0x000000010f817ede: mov    $0x1000000,%edx
  0x000000010f817ee3: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@994 (line 939)

  0x000000010f817eeb: nop
  0x000000010f817eec: nop
  0x000000010f817eed: nop
  0x000000010f817eee: nop
  0x000000010f817eef: callq  0x000000010f7170a0  ; OopMap{off=9940}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@994 (line 939)
                                                ;   {optimized virtual_call}
  0x000000010f817ef4: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f817efe: incl   0x1050(%rdx)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@997 (line 940)

  0x000000010f817f04: add    $0x1e0,%rsp
  0x000000010f817f0b: pop    %rbp
  0x000000010f817f0c: test   %eax,-0x8d7ce12(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f817f12: retq   
  0x000000010f817f13: mov    0xf0(%rsp),%rsi
  0x000000010f817f1b: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f817f25: addq   $0x1,0xfd0(%rdx)
  0x000000010f817f2d: mov    $0x1000004,%edx
  0x000000010f817f32: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@964 (line 931)

  0x000000010f817f3a: nop
  0x000000010f817f3b: nop
  0x000000010f817f3c: nop
  0x000000010f817f3d: nop
  0x000000010f817f3e: nop
  0x000000010f817f3f: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=10020}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@964 (line 931)
                                                ;   {optimized virtual_call}
  0x000000010f817f44: mov    0xf0(%rsp),%rsi
  0x000000010f817f4c: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f817f56: addq   $0x1,0xfe0(%rdx)
  0x000000010f817f5e: mov    $0x1000000,%edx
  0x000000010f817f63: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@970 (line 932)

  0x000000010f817f6b: nop
  0x000000010f817f6c: nop
  0x000000010f817f6d: nop
  0x000000010f817f6e: nop
  0x000000010f817f6f: callq  0x000000010f7170a0  ; OopMap{off=10068}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@970 (line 932)
                                                ;   {optimized virtual_call}
  0x000000010f817f74: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f817f7e: incl   0xff0(%rdx)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@973 (line 933)

  0x000000010f817f84: add    $0x1e0,%rsp
  0x000000010f817f8b: pop    %rbp
  0x000000010f817f8c: test   %eax,-0x8d7ce92(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f817f92: retq   
  0x000000010f817f93: mov    0xf0(%rsp),%rsi
  0x000000010f817f9b: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f817fa5: addq   $0x1,0x1008(%rdx)
  0x000000010f817fad: mov    $0x1000002,%edx
  0x000000010f817fb2: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@979 (line 935)

  0x000000010f817fba: nop
  0x000000010f817fbb: nop
  0x000000010f817fbc: nop
  0x000000010f817fbd: nop
  0x000000010f817fbe: nop
  0x000000010f817fbf: callq  0x000000010f7170a0  ; OopMap{off=10148}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@979 (line 935)
                                                ;   {optimized virtual_call}
  0x000000010f817fc4: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f817fce: incl   0x1018(%rdx)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@982 (line 936)

  0x000000010f817fd4: add    $0x1e0,%rsp
  0x000000010f817fdb: pop    %rbp
  0x000000010f817fdc: test   %eax,-0x8d7cee2(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f817fe2: retq   
  0x000000010f817fe3: mov    0xf0(%rsp),%rsi
  0x000000010f817feb: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f817ff5: addq   $0x1,0xfa8(%rdx)
  0x000000010f817ffd: mov    $0x1000001,%edx
  0x000000010f818002: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@955 (line 928)

  0x000000010f81800a: nop
  0x000000010f81800b: nop
  0x000000010f81800c: nop
  0x000000010f81800d: nop
  0x000000010f81800e: nop
  0x000000010f81800f: callq  0x000000010f7170a0  ; OopMap{off=10228}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@955 (line 928)
                                                ;   {optimized virtual_call}
  0x000000010f818014: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f81801e: incl   0xfb8(%rdx)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@958 (line 929)

  0x000000010f818024: add    $0x1e0,%rsp
  0x000000010f81802b: pop    %rbp
  0x000000010f81802c: test   %eax,-0x8d7cf32(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f818032: retq   
  0x000000010f818033: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f81803d: incl   0x1c28(%rdx)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1846 (line 1211)

  0x000000010f818043: add    $0x1e0,%rsp
  0x000000010f81804a: pop    %rbp
  0x000000010f81804b: test   %eax,-0x8d7cf51(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f818051: retq   
  0x000000010f818052: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f81805c: incl   0x1c88(%rdx)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1876 (line 1218)

  0x000000010f818062: add    $0x1e0,%rsp
  0x000000010f818069: pop    %rbp
  0x000000010f81806a: test   %eax,-0x8d7cf70(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f818070: retq   
  0x000000010f818071: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f81807b: incl   0x1de0(%rdx)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1977 (line 1240)

  0x000000010f818081: add    $0x1e0,%rsp
  0x000000010f818088: pop    %rbp
  0x000000010f818089: test   %eax,-0x8d7cf8f(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f81808f: retq   
  0x000000010f818090: mov    0xf0(%rsp),%rsi
  0x000000010f818098: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8180a2: addq   $0x1,0x2008(%rdx)
  0x000000010f8180aa: mov    $0x11000004,%edx
  0x000000010f8180af: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2114 (line 1270)

  0x000000010f8180b7: callq  0x000000010f7170a0  ; OopMap{off=10396}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2114 (line 1270)
                                                ;   {optimized virtual_call}
  0x000000010f8180bc: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8180c6: incl   0x2018(%rdx)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2117 (line 1271)

  0x000000010f8180cc: add    $0x1e0,%rsp
  0x000000010f8180d3: pop    %rbp
  0x000000010f8180d4: test   %eax,-0x8d7cfda(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f8180da: retq   
  0x000000010f8180db: mov    0xf0(%rsp),%rsi
  0x000000010f8180e3: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8180ed: addq   $0x1,0x1f90(%rdx)
  0x000000010f8180f5: mov    $0x11000001,%edx
  0x000000010f8180fa: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2087 (line 1260)

  0x000000010f818102: nop
  0x000000010f818103: nop
  0x000000010f818104: nop
  0x000000010f818105: nop
  0x000000010f818106: nop
  0x000000010f818107: callq  0x000000010f7170a0  ; OopMap{off=10476}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2087 (line 1260)
                                                ;   {optimized virtual_call}
  0x000000010f81810c: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f818116: incl   0x1fa0(%rdx)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2090 (line 1261)

  0x000000010f81811c: add    $0x1e0,%rsp
  0x000000010f818123: pop    %rbp
  0x000000010f818124: test   %eax,-0x8d7d02a(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f81812a: retq   
  0x000000010f81812b: mov    0xf0(%rsp),%rsi
  0x000000010f818133: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f81813d: addq   $0x1,0x1f68(%rdx)
  0x000000010f818145: mov    $0x1100000c,%edx
  0x000000010f81814a: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2078 (line 1257)

  0x000000010f818152: nop
  0x000000010f818153: nop
  0x000000010f818154: nop
  0x000000010f818155: nop
  0x000000010f818156: nop
  0x000000010f818157: callq  0x000000010f7170a0  ; OopMap{off=10556}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2078 (line 1257)
                                                ;   {optimized virtual_call}
  0x000000010f81815c: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f818166: incl   0x1f78(%rdx)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2081 (line 1258)

  0x000000010f81816c: add    $0x1e0,%rsp
  0x000000010f818173: pop    %rbp
  0x000000010f818174: test   %eax,-0x8d7d07a(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f81817a: retq   
  0x000000010f81817b: mov    0xf0(%rsp),%rsi
  0x000000010f818183: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f81818d: addq   $0x1,0x1f40(%rdx)
  0x000000010f818195: mov    $0x1100000a,%edx
  0x000000010f81819a: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2069 (line 1254)

  0x000000010f8181a2: nop
  0x000000010f8181a3: nop
  0x000000010f8181a4: nop
  0x000000010f8181a5: nop
  0x000000010f8181a6: nop
  0x000000010f8181a7: callq  0x000000010f7170a0  ; OopMap{off=10636}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2069 (line 1254)
                                                ;   {optimized virtual_call}
  0x000000010f8181ac: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8181b6: incl   0x1f50(%rdx)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2072 (line 1255)

  0x000000010f8181bc: add    $0x1e0,%rsp
  0x000000010f8181c3: pop    %rbp
  0x000000010f8181c4: test   %eax,-0x8d7d0ca(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f8181ca: retq   
  0x000000010f8181cb: mov    0xf0(%rsp),%rsi
  0x000000010f8181d3: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8181dd: addq   $0x1,0x1fe0(%rdx)
  0x000000010f8181e5: mov    $0x11000003,%edx
  0x000000010f8181ea: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2105 (line 1266)

  0x000000010f8181f2: nop
  0x000000010f8181f3: nop
  0x000000010f8181f4: nop
  0x000000010f8181f5: nop
  0x000000010f8181f6: nop
  0x000000010f8181f7: callq  0x000000010f7170a0  ; OopMap{off=10716}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2105 (line 1266)
                                                ;   {optimized virtual_call}
  0x000000010f8181fc: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f818206: incl   0x1ff0(%rdx)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2108 (line 1267)

  0x000000010f81820c: add    $0x1e0,%rsp
  0x000000010f818213: pop    %rbp
  0x000000010f818214: test   %eax,-0x8d7d11a(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f81821a: retq   
  0x000000010f81821b: mov    0xf0(%rsp),%rsi
  0x000000010f818223: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f81822d: addq   $0x1,0x1fb8(%rdx)
  0x000000010f818235: mov    $0x11000002,%edx
  0x000000010f81823a: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2096 (line 1263)

  0x000000010f818242: nop
  0x000000010f818243: nop
  0x000000010f818244: nop
  0x000000010f818245: nop
  0x000000010f818246: nop
  0x000000010f818247: callq  0x000000010f7170a0  ; OopMap{off=10796}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2096 (line 1263)
                                                ;   {optimized virtual_call}
  0x000000010f81824c: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f818256: incl   0x1fc8(%rdx)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2099 (line 1264)

  0x000000010f81825c: add    $0x1e0,%rsp
  0x000000010f818263: pop    %rbp
  0x000000010f818264: test   %eax,-0x8d7d16a(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f81826a: retq   
  0x000000010f81826b: mov    0xf0(%rsp),%rsi
  0x000000010f818273: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f81827d: addq   $0x1,0x1f18(%rdx)
  0x000000010f818285: mov    $0x1100000b,%edx
  0x000000010f81828a: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2060 (line 1251)

  0x000000010f818292: nop
  0x000000010f818293: nop
  0x000000010f818294: nop
  0x000000010f818295: nop
  0x000000010f818296: nop
  0x000000010f818297: callq  0x000000010f7170a0  ; OopMap{off=10876}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2060 (line 1251)
                                                ;   {optimized virtual_call}
  0x000000010f81829c: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8182a6: incl   0x1f28(%rdx)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2063 (line 1252)

  0x000000010f8182ac: add    $0x1e0,%rsp
  0x000000010f8182b3: pop    %rbp
  0x000000010f8182b4: test   %eax,-0x8d7d1ba(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f8182ba: retq   
  0x000000010f8182bb: mov    0xf0(%rsp),%rsi
  0x000000010f8182c3: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8182cd: addq   $0x1,0x1ef0(%rdx)
  0x000000010f8182d5: mov    $0x11000009,%edx
  0x000000010f8182da: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2051 (line 1248)

  0x000000010f8182e2: nop
  0x000000010f8182e3: nop
  0x000000010f8182e4: nop
  0x000000010f8182e5: nop
  0x000000010f8182e6: nop
  0x000000010f8182e7: callq  0x000000010f7170a0  ; OopMap{off=10956}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2051 (line 1248)
                                                ;   {optimized virtual_call}
  0x000000010f8182ec: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8182f6: incl   0x1f00(%rdx)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2054 (line 1249)

  0x000000010f8182fc: add    $0x1e0,%rsp
  0x000000010f818303: pop    %rbp
  0x000000010f818304: test   %eax,-0x8d7d20a(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f81830a: retq   
  0x000000010f81830b: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f818315: incl   0x2140(%rdx)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2168 (line 1278)

  0x000000010f81831b: add    $0x1e0,%rsp
  0x000000010f818322: pop    %rbp
  0x000000010f818323: test   %eax,-0x8d7d229(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f818329: retq   
  0x000000010f81832a: mov    0x110(%rsp),%r8
  0x000000010f818332: cmp    (%r8),%rax         ; implicit exception: dispatches to 0x000000010f81a18b
  0x000000010f818335: mov    %r8,%rdx
  0x000000010f818338: movabs $0x10eda9988,%rsi  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f818342: movabs $0x7c005d658,%r10  ;   {metadata('jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000000010f81834c: mov    %r10,0x2160(%rsi)
  0x000000010f818353: addq   $0x1,0x2168(%rsi)
  0x000000010f81835b: mov    0x130(%rsp),%rdx
  0x000000010f818363: mov    %r8,%rsi           ;*invokevirtual addType
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2177 (line 1280)

  0x000000010f818366: nop
  0x000000010f818367: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=11084}
                                                ;*invokevirtual addType
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2177 (line 1280)
                                                ;   {optimized virtual_call}
  0x000000010f81836c: mov    0xf0(%rsp),%rsi
  0x000000010f818374: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f81837e: addq   $0x1,0x2188(%rdx)
  0x000000010f818386: or     $0x11700000,%eax
  0x000000010f81838c: mov    %rax,%rdx
  0x000000010f81838f: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2181 (line 1280)

  0x000000010f818397: callq  0x000000010f7170a0  ; OopMap{off=11132}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2181 (line 1280)
                                                ;   {optimized virtual_call}
  0x000000010f81839c: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8183a6: incl   0x2198(%rdx)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2184 (line 1282)

  0x000000010f8183ac: add    $0x1e0,%rsp
  0x000000010f8183b3: pop    %rbp
  0x000000010f8183b4: test   %eax,-0x8d7d2ba(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f8183ba: retq   
  0x000000010f8183bb: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8183c5: incl   0x2220(%rdx)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2217 (line 1287)

  0x000000010f8183cb: add    $0x1e0,%rsp
  0x000000010f8183d2: pop    %rbp
  0x000000010f8183d3: test   %eax,-0x8d7d2d9(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f8183d9: retq   
  0x000000010f8183da: mov    0x110(%rsp),%r8
  0x000000010f8183e2: cmp    (%r8),%rax         ; implicit exception: dispatches to 0x000000010f81a190
  0x000000010f8183e5: mov    %r8,%rdx
  0x000000010f8183e8: movabs $0x10eda9988,%rsi  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8183f2: movabs $0x7c005d658,%r10  ;   {metadata('jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000000010f8183fc: mov    %r10,0x2240(%rsi)
  0x000000010f818403: addq   $0x1,0x2248(%rsi)
  0x000000010f81840b: mov    %rdi,%rdx
  0x000000010f81840e: mov    %r8,%rsi           ;*invokevirtual addType
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2226 (line 1289)

  0x000000010f818411: nop
  0x000000010f818412: nop
  0x000000010f818413: nop
  0x000000010f818414: nop
  0x000000010f818415: nop
  0x000000010f818416: nop
  0x000000010f818417: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=11260}
                                                ;*invokevirtual addType
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2226 (line 1289)
                                                ;   {optimized virtual_call}
  0x000000010f81841c: mov    0xf0(%rsp),%rsi
  0x000000010f818424: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f81842e: addq   $0x1,0x2268(%rdx)
  0x000000010f818436: or     $0x1700000,%eax
  0x000000010f81843c: mov    %rax,%rdx
  0x000000010f81843f: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2230 (line 1289)

  0x000000010f818447: callq  0x000000010f7170a0  ; OopMap{off=11308}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2230 (line 1289)
                                                ;   {optimized virtual_call}
  0x000000010f81844c: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f818456: incl   0x2278(%rdx)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2233 (line 1291)

  0x000000010f81845c: add    $0x1e0,%rsp
  0x000000010f818463: pop    %rbp
  0x000000010f818464: test   %eax,-0x8d7d36a(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f81846a: retq   
  0x000000010f81846b: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f818475: incl   0x1da8(%rdx)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1955 (line 1236)

  0x000000010f81847b: add    $0x1e0,%rsp
  0x000000010f818482: pop    %rbp
  0x000000010f818483: test   %eax,-0x8d7d389(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f818489: retq   
  0x000000010f81848a: mov    0xf0(%rsp),%rsi
  0x000000010f818492: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f81849c: addq   $0x1,0x1420(%rdx)
  0x000000010f8184a4: or     $0x800000,%eax
  0x000000010f8184aa: mov    0x100(%rsp),%edx
  0x000000010f8184b1: mov    %rax,%rcx
  0x000000010f8184b4: mov    0xf0(%rsp),%rsi    ;*invokespecial set
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1238 (line 997)

  0x000000010f8184bc: nop
  0x000000010f8184bd: nop
  0x000000010f8184be: nop
  0x000000010f8184bf: callq  0x000000010f7170a0  ; OopMap{off=11428}
                                                ;*invokespecial set
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1238 (line 997)
                                                ;   {optimized virtual_call}
  0x000000010f8184c4: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8184ce: incl   0x1430(%rdx)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1241 (line 997)

  0x000000010f8184d4: add    $0x1e0,%rsp
  0x000000010f8184db: pop    %rbp
  0x000000010f8184dc: test   %eax,-0x8d7d3e2(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f8184e2: retq   
  0x000000010f8184e3: mov    0x100(%rsp),%edi
  0x000000010f8184ea: mov    0xf0(%rsp),%rsi
  0x000000010f8184f2: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8184fc: addq   $0x1,0x13d8(%rdx)
  0x000000010f818504: mov    %rdi,%rdx
  0x000000010f818507: mov    $0x1000000,%ecx
  0x000000010f81850c: mov    0xf0(%rsp),%rsi    ;*invokespecial set
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1213 (line 995)

  0x000000010f818514: nop
  0x000000010f818515: nop
  0x000000010f818516: nop
  0x000000010f818517: callq  0x000000010f7170a0  ; OopMap{off=11516}
                                                ;*invokespecial set
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1213 (line 995)
                                                ;   {optimized virtual_call}
  0x000000010f81851c: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f818526: incl   0x13e8(%rdx)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1216 (line 995)

  0x000000010f81852c: add    $0x1e0,%rsp
  0x000000010f818533: pop    %rbp
  0x000000010f818534: test   %eax,-0x8d7d43a(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f81853a: retq   
  0x000000010f81853b: mov    0xf0(%rsp),%rsi
  0x000000010f818543: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f81854d: addq   $0x1,0x1540(%rdx)
  0x000000010f818555: or     $0x800000,%eax
  0x000000010f81855b: mov    0xfc(%rsp),%edx
  0x000000010f818562: mov    %rax,%rcx
  0x000000010f818565: mov    0xf0(%rsp),%rsi    ;*invokespecial set
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1329 (line 1013)

  0x000000010f81856d: nop
  0x000000010f81856e: nop
  0x000000010f81856f: callq  0x000000010f7170a0  ; OopMap{off=11604}
                                                ;*invokespecial set
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1329 (line 1013)
                                                ;   {optimized virtual_call}
  0x000000010f818574: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f81857e: incl   0x1550(%rdx)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1332 (line 1013)

  0x000000010f818584: add    $0x1e0,%rsp
  0x000000010f81858b: pop    %rbp
  0x000000010f81858c: test   %eax,-0x8d7d492(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f818592: retq   
  0x000000010f818593: mov    0xfc(%rsp),%edi
  0x000000010f81859a: mov    0xf0(%rsp),%rsi
  0x000000010f8185a2: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8185ac: addq   $0x1,0x14f8(%rdx)
  0x000000010f8185b4: mov    %rdi,%rdx
  0x000000010f8185b7: mov    $0x1000000,%ecx
  0x000000010f8185bc: mov    0xf0(%rsp),%rsi    ;*invokespecial set
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1304 (line 1011)

  0x000000010f8185c4: nop
  0x000000010f8185c5: nop
  0x000000010f8185c6: nop
  0x000000010f8185c7: callq  0x000000010f7170a0  ; OopMap{off=11692}
                                                ;*invokespecial set
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1304 (line 1011)
                                                ;   {optimized virtual_call}
  0x000000010f8185cc: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8185d6: incl   0x1508(%rdx)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1307 (line 1011)

  0x000000010f8185dc: add    $0x1e0,%rsp
  0x000000010f8185e3: pop    %rbp
  0x000000010f8185e4: test   %eax,-0x8d7d4ea(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f8185ea: retq   
  0x000000010f8185eb: mov    0xf0(%rsp),%rsi
  0x000000010f8185f3: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8185fd: addq   $0x1,0xde8(%rdx)
  0x000000010f818605: mov    $0x1000001,%edx
  0x000000010f81860a: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@831 (line 905)

  0x000000010f818612: nop
  0x000000010f818613: nop
  0x000000010f818614: nop
  0x000000010f818615: nop
  0x000000010f818616: nop
  0x000000010f818617: callq  0x000000010f7170a0  ; OopMap{off=11772}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@831 (line 905)
                                                ;   {optimized virtual_call}
  0x000000010f81861c: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f818626: incl   0xdf8(%rdx)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@834 (line 906)

  0x000000010f81862c: add    $0x1e0,%rsp
  0x000000010f818633: pop    %rbp
  0x000000010f818634: test   %eax,-0x8d7d53a(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f81863a: retq   
  0x000000010f81863b: mov    0xf0(%rsp),%rsi
  0x000000010f818643: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f81864d: addq   $0x1,0xe10(%rdx)
  0x000000010f818655: mov    $0x1000004,%edx
  0x000000010f81865a: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@840 (line 910)

  0x000000010f818662: nop
  0x000000010f818663: nop
  0x000000010f818664: nop
  0x000000010f818665: nop
  0x000000010f818666: nop
  0x000000010f818667: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=11852}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@840 (line 910)
                                                ;   {optimized virtual_call}
  0x000000010f81866c: mov    0xf0(%rsp),%rsi
  0x000000010f818674: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f81867e: addq   $0x1,0xe20(%rdx)
  0x000000010f818686: mov    $0x1000000,%edx
  0x000000010f81868b: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@846 (line 911)

  0x000000010f818693: nop
  0x000000010f818694: nop
  0x000000010f818695: nop
  0x000000010f818696: nop
  0x000000010f818697: callq  0x000000010f7170a0  ; OopMap{off=11900}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@846 (line 911)
                                                ;   {optimized virtual_call}
  0x000000010f81869c: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8186a6: incl   0xe30(%rdx)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@849 (line 912)

  0x000000010f8186ac: add    $0x1e0,%rsp
  0x000000010f8186b3: pop    %rbp
  0x000000010f8186b4: test   %eax,-0x8d7d5ba(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f8186ba: retq   
  0x000000010f8186bb: mov    0xf0(%rsp),%rsi
  0x000000010f8186c3: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8186cd: addq   $0x1,0xe48(%rdx)
  0x000000010f8186d5: mov    $0x1000002,%edx
  0x000000010f8186da: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@855 (line 917)

  0x000000010f8186e2: nop
  0x000000010f8186e3: nop
  0x000000010f8186e4: nop
  0x000000010f8186e5: nop
  0x000000010f8186e6: nop
  0x000000010f8186e7: callq  0x000000010f7170a0  ; OopMap{off=11980}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@855 (line 917)
                                                ;   {optimized virtual_call}
  0x000000010f8186ec: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8186f6: incl   0xe58(%rdx)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@858 (line 918)

  0x000000010f8186fc: add    $0x1e0,%rsp
  0x000000010f818703: pop    %rbp
  0x000000010f818704: test   %eax,-0x8d7d60a(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f81870a: retq   
  0x000000010f81870b: mov    0xf0(%rsp),%rsi
  0x000000010f818713: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f81871d: addq   $0x1,0xe70(%rdx)
  0x000000010f818725: mov    $0x1000003,%edx
  0x000000010f81872a: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@864 (line 922)

  0x000000010f818732: nop
  0x000000010f818733: nop
  0x000000010f818734: nop
  0x000000010f818735: nop
  0x000000010f818736: nop
  0x000000010f818737: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=12060}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@864 (line 922)
                                                ;   {optimized virtual_call}
  0x000000010f81873c: mov    0xf0(%rsp),%rsi
  0x000000010f818744: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f81874e: addq   $0x1,0xe80(%rdx)
  0x000000010f818756: mov    $0x1000000,%edx
  0x000000010f81875b: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@870 (line 923)

  0x000000010f818763: nop
  0x000000010f818764: nop
  0x000000010f818765: nop
  0x000000010f818766: nop
  0x000000010f818767: callq  0x000000010f7170a0  ; OopMap{off=12108}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@870 (line 923)
                                                ;   {optimized virtual_call}
  0x000000010f81876c: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f818776: incl   0xe90(%rdx)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@873 (line 924)

  0x000000010f81877c: add    $0x1e0,%rsp
  0x000000010f818783: pop    %rbp
  0x000000010f818784: test   %eax,-0x8d7d68a(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f81878a: retq   
  0x000000010f81878b: mov    0xf0(%rsp),%rsi
  0x000000010f818793: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f81879d: addq   $0x1,0x1200(%rdx)
  0x000000010f8187a5: mov    $0x2,%edx
  0x000000010f8187aa: mov    0xf0(%rsp),%rsi    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1078 (line 962)

  0x000000010f8187b2: nop
  0x000000010f8187b3: nop
  0x000000010f8187b4: nop
  0x000000010f8187b5: nop
  0x000000010f8187b6: nop
  0x000000010f8187b7: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=12188}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1078 (line 962)
                                                ;   {optimized virtual_call}
  0x000000010f8187bc: mov    0xf0(%rsp),%rsi
  0x000000010f8187c4: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8187ce: addq   $0x1,0x1210(%rdx)
  0x000000010f8187d6: mov    $0x1000001,%edx
  0x000000010f8187db: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1084 (line 963)

  0x000000010f8187e3: nop
  0x000000010f8187e4: nop
  0x000000010f8187e5: nop
  0x000000010f8187e6: nop
  0x000000010f8187e7: callq  0x000000010f7170a0  ; OopMap{off=12236}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1084 (line 963)
                                                ;   {optimized virtual_call}
  0x000000010f8187ec: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8187f6: incl   0x1220(%rdx)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1087 (line 964)

  0x000000010f8187fc: add    $0x1e0,%rsp
  0x000000010f818803: pop    %rbp
  0x000000010f818804: test   %eax,-0x8d7d70a(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f81880a: retq   
  0x000000010f81880b: mov    0xf0(%rsp),%rsi
  0x000000010f818813: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f81881d: addq   $0x1,0x1590(%rdx)
  0x000000010f818825: mov    $0x4,%edx
  0x000000010f81882a: mov    0xf0(%rsp),%rsi    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1345 (line 1027)

  0x000000010f818832: nop
  0x000000010f818833: nop
  0x000000010f818834: nop
  0x000000010f818835: nop
  0x000000010f818836: nop
  0x000000010f818837: callq  0x000000010f7170a0  ; OopMap{off=12316}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1345 (line 1027)
                                                ;   {optimized virtual_call}
  0x000000010f81883c: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f818846: incl   0x15a0(%rdx)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1348 (line 1028)

  0x000000010f81884c: add    $0x1e0,%rsp
  0x000000010f818853: pop    %rbp
  0x000000010f818854: test   %eax,-0x8d7d75a(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f81885a: retq   
  0x000000010f81885b: mov    0xf0(%rsp),%rsi
  0x000000010f818863: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f81886d: addq   $0x1,0x1568(%rdx)
  0x000000010f818875: mov    $0x3,%edx
  0x000000010f81887a: mov    0xf0(%rsp),%rsi    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1337 (line 1023)

  0x000000010f818882: nop
  0x000000010f818883: nop
  0x000000010f818884: nop
  0x000000010f818885: nop
  0x000000010f818886: nop
  0x000000010f818887: callq  0x000000010f7170a0  ; OopMap{off=12396}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1337 (line 1023)
                                                ;   {optimized virtual_call}
  0x000000010f81888c: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f818896: incl   0x1578(%rdx)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1340 (line 1024)

  0x000000010f81889c: add    $0x1e0,%rsp
  0x000000010f8188a3: pop    %rbp
  0x000000010f8188a4: test   %eax,-0x8d7d7aa(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f8188aa: retq   
  0x000000010f8188ab: mov    0xf0(%rsp),%rsi
  0x000000010f8188b3: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8188bd: addq   $0x1,0x1a18(%rdx)
  0x000000010f8188c5: mov    $0x4,%edx
  0x000000010f8188ca: mov    0xf0(%rsp),%rsi    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1696 (line 1163)

  0x000000010f8188d2: nop
  0x000000010f8188d3: nop
  0x000000010f8188d4: nop
  0x000000010f8188d5: nop
  0x000000010f8188d6: nop
  0x000000010f8188d7: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=12476}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1696 (line 1163)
                                                ;   {optimized virtual_call}
  0x000000010f8188dc: mov    0xf0(%rsp),%rsi
  0x000000010f8188e4: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8188ee: addq   $0x1,0x1a28(%rdx)
  0x000000010f8188f6: mov    $0x1000003,%edx
  0x000000010f8188fb: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1702 (line 1164)

  0x000000010f818903: nop
  0x000000010f818904: nop
  0x000000010f818905: nop
  0x000000010f818906: nop
  0x000000010f818907: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=12524}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1702 (line 1164)
                                                ;   {optimized virtual_call}
  0x000000010f81890c: mov    0xf0(%rsp),%rsi
  0x000000010f818914: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f81891e: addq   $0x1,0x1a38(%rdx)
  0x000000010f818926: mov    $0x1000000,%edx
  0x000000010f81892b: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1708 (line 1165)

  0x000000010f818933: nop
  0x000000010f818934: nop
  0x000000010f818935: nop
  0x000000010f818936: nop
  0x000000010f818937: callq  0x000000010f7170a0  ; OopMap{off=12572}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1708 (line 1165)
                                                ;   {optimized virtual_call}
  0x000000010f81893c: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f818946: incl   0x1a48(%rdx)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1711 (line 1166)

  0x000000010f81894c: add    $0x1e0,%rsp
  0x000000010f818953: pop    %rbp
  0x000000010f818954: test   %eax,-0x8d7d85a(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f81895a: retq   
  0x000000010f81895b: mov    0xf0(%rsp),%rsi
  0x000000010f818963: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f81896d: addq   $0x1,0x1a60(%rdx)
  0x000000010f818975: mov    $0x3,%edx
  0x000000010f81897a: mov    0xf0(%rsp),%rsi    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1716 (line 1170)

  0x000000010f818982: nop
  0x000000010f818983: nop
  0x000000010f818984: nop
  0x000000010f818985: nop
  0x000000010f818986: nop
  0x000000010f818987: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=12652}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1716 (line 1170)
                                                ;   {optimized virtual_call}
  0x000000010f81898c: mov    0xf0(%rsp),%rsi
  0x000000010f818994: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f81899e: addq   $0x1,0x1a70(%rdx)
  0x000000010f8189a6: mov    $0x1000004,%edx
  0x000000010f8189ab: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1722 (line 1171)

  0x000000010f8189b3: nop
  0x000000010f8189b4: nop
  0x000000010f8189b5: nop
  0x000000010f8189b6: nop
  0x000000010f8189b7: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=12700}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1722 (line 1171)
                                                ;   {optimized virtual_call}
  0x000000010f8189bc: mov    0xf0(%rsp),%rsi
  0x000000010f8189c4: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8189ce: addq   $0x1,0x1a80(%rdx)
  0x000000010f8189d6: mov    $0x1000000,%edx
  0x000000010f8189db: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1728 (line 1172)

  0x000000010f8189e3: nop
  0x000000010f8189e4: nop
  0x000000010f8189e5: nop
  0x000000010f8189e6: nop
  0x000000010f8189e7: callq  0x000000010f7170a0  ; OopMap{off=12748}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1728 (line 1172)
                                                ;   {optimized virtual_call}
  0x000000010f8189ec: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8189f6: incl   0x1a90(%rdx)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1731 (line 1173)

  0x000000010f8189fc: add    $0x1e0,%rsp
  0x000000010f818a03: pop    %rbp
  0x000000010f818a04: test   %eax,-0x8d7d90a(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f818a0a: retq   
  0x000000010f818a0b: mov    0xf0(%rsp),%rsi
  0x000000010f818a13: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f818a1d: addq   $0x1,0x1998(%rdx)
  0x000000010f818a25: mov    $0x4,%edx
  0x000000010f818a2a: mov    0xf0(%rsp),%rsi    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1662 (line 1144)

  0x000000010f818a32: nop
  0x000000010f818a33: nop
  0x000000010f818a34: nop
  0x000000010f818a35: nop
  0x000000010f818a36: nop
  0x000000010f818a37: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=12828}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1662 (line 1144)
                                                ;   {optimized virtual_call}
  0x000000010f818a3c: mov    0xf0(%rsp),%rsi
  0x000000010f818a44: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f818a4e: addq   $0x1,0x19a8(%rdx)
  0x000000010f818a56: mov    $0x1000004,%edx
  0x000000010f818a5b: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1668 (line 1145)

  0x000000010f818a63: nop
  0x000000010f818a64: nop
  0x000000010f818a65: nop
  0x000000010f818a66: nop
  0x000000010f818a67: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=12876}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1668 (line 1145)
                                                ;   {optimized virtual_call}
  0x000000010f818a6c: mov    0xf0(%rsp),%rsi
  0x000000010f818a74: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f818a7e: addq   $0x1,0x19b8(%rdx)
  0x000000010f818a86: mov    $0x1000000,%edx
  0x000000010f818a8b: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1674 (line 1146)

  0x000000010f818a93: nop
  0x000000010f818a94: nop
  0x000000010f818a95: nop
  0x000000010f818a96: nop
  0x000000010f818a97: callq  0x000000010f7170a0  ; OopMap{off=12924}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1674 (line 1146)
                                                ;   {optimized virtual_call}
  0x000000010f818a9c: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f818aa6: incl   0x19c8(%rdx)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1677 (line 1147)

  0x000000010f818aac: add    $0x1e0,%rsp
  0x000000010f818ab3: pop    %rbp
  0x000000010f818ab4: test   %eax,-0x8d7d9ba(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f818aba: retq   
  0x000000010f818abb: mov    0xf0(%rsp),%rsi
  0x000000010f818ac3: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f818acd: addq   $0x1,0x12b8(%rdx)
  0x000000010f818ad5: mov    $0x2,%edx
  0x000000010f818ada: mov    0xf0(%rsp),%rsi    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1126 (line 977)

  0x000000010f818ae2: nop
  0x000000010f818ae3: nop
  0x000000010f818ae4: nop
  0x000000010f818ae5: nop
  0x000000010f818ae6: nop
  0x000000010f818ae7: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=13004}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1126 (line 977)
                                                ;   {optimized virtual_call}
  0x000000010f818aec: mov    0xf0(%rsp),%rsi
  0x000000010f818af4: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f818afe: addq   $0x1,0x12c8(%rdx)
  0x000000010f818b06: mov    $0x1000003,%edx
  0x000000010f818b0b: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1132 (line 978)

  0x000000010f818b13: nop
  0x000000010f818b14: nop
  0x000000010f818b15: nop
  0x000000010f818b16: nop
  0x000000010f818b17: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=13052}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1132 (line 978)
                                                ;   {optimized virtual_call}
  0x000000010f818b1c: mov    0xf0(%rsp),%rsi
  0x000000010f818b24: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f818b2e: addq   $0x1,0x12d8(%rdx)
  0x000000010f818b36: mov    $0x1000000,%edx
  0x000000010f818b3b: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1138 (line 979)

  0x000000010f818b43: nop
  0x000000010f818b44: nop
  0x000000010f818b45: nop
  0x000000010f818b46: nop
  0x000000010f818b47: callq  0x000000010f7170a0  ; OopMap{off=13100}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1138 (line 979)
                                                ;   {optimized virtual_call}
  0x000000010f818b4c: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f818b56: incl   0x12e8(%rdx)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1141 (line 980)

  0x000000010f818b5c: add    $0x1e0,%rsp
  0x000000010f818b63: pop    %rbp
  0x000000010f818b64: test   %eax,-0x8d7da6a(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f818b6a: retq   
  0x000000010f818b6b: mov    0xf0(%rsp),%rsi
  0x000000010f818b73: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f818b7d: addq   $0x1,0x1ad0(%rdx)
  0x000000010f818b85: mov    $0x1,%edx
  0x000000010f818b8a: mov    0xf0(%rsp),%rsi    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1746 (line 1179)

  0x000000010f818b92: nop
  0x000000010f818b93: nop
  0x000000010f818b94: nop
  0x000000010f818b95: nop
  0x000000010f818b96: nop
  0x000000010f818b97: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=13180}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1746 (line 1179)
                                                ;   {optimized virtual_call}
  0x000000010f818b9c: mov    0xf0(%rsp),%rsi
  0x000000010f818ba4: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f818bae: addq   $0x1,0x1ae0(%rdx)
  0x000000010f818bb6: mov    $0x1000004,%edx
  0x000000010f818bbb: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1752 (line 1180)

  0x000000010f818bc3: nop
  0x000000010f818bc4: nop
  0x000000010f818bc5: nop
  0x000000010f818bc6: nop
  0x000000010f818bc7: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=13228}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1752 (line 1180)
                                                ;   {optimized virtual_call}
  0x000000010f818bcc: mov    0xf0(%rsp),%rsi
  0x000000010f818bd4: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f818bde: addq   $0x1,0x1af0(%rdx)
  0x000000010f818be6: mov    $0x1000000,%edx
  0x000000010f818beb: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1758 (line 1181)

  0x000000010f818bf3: nop
  0x000000010f818bf4: nop
  0x000000010f818bf5: nop
  0x000000010f818bf6: nop
  0x000000010f818bf7: callq  0x000000010f7170a0  ; OopMap{off=13276}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1758 (line 1181)
                                                ;   {optimized virtual_call}
  0x000000010f818bfc: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f818c06: incl   0x1b00(%rdx)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1761 (line 1182)

  0x000000010f818c0c: add    $0x1e0,%rsp
  0x000000010f818c13: pop    %rbp
  0x000000010f818c14: test   %eax,-0x8d7db1a(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f818c1a: retq   
  0x000000010f818c1b: mov    0xf0(%rsp),%rsi
  0x000000010f818c23: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f818c2d: addq   $0x1,0x1b50(%rdx)
  0x000000010f818c35: mov    $0x1,%edx
  0x000000010f818c3a: mov    0xf0(%rsp),%rsi    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1780 (line 1189)

  0x000000010f818c42: nop
  0x000000010f818c43: nop
  0x000000010f818c44: nop
  0x000000010f818c45: nop
  0x000000010f818c46: nop
  0x000000010f818c47: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=13356}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1780 (line 1189)
                                                ;   {optimized virtual_call}
  0x000000010f818c4c: mov    0xf0(%rsp),%rsi
  0x000000010f818c54: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f818c5e: addq   $0x1,0x1b60(%rdx)
  0x000000010f818c66: mov    $0x1000003,%edx
  0x000000010f818c6b: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1786 (line 1190)

  0x000000010f818c73: nop
  0x000000010f818c74: nop
  0x000000010f818c75: nop
  0x000000010f818c76: nop
  0x000000010f818c77: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=13404}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1786 (line 1190)
                                                ;   {optimized virtual_call}
  0x000000010f818c7c: mov    0xf0(%rsp),%rsi
  0x000000010f818c84: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f818c8e: addq   $0x1,0x1b70(%rdx)
  0x000000010f818c96: mov    $0x1000000,%edx
  0x000000010f818c9b: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1792 (line 1191)

  0x000000010f818ca3: nop
  0x000000010f818ca4: nop
  0x000000010f818ca5: nop
  0x000000010f818ca6: nop
  0x000000010f818ca7: callq  0x000000010f7170a0  ; OopMap{off=13452}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1792 (line 1191)
                                                ;   {optimized virtual_call}
  0x000000010f818cac: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f818cb6: incl   0x1b80(%rdx)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1795 (line 1192)

  0x000000010f818cbc: add    $0x1e0,%rsp
  0x000000010f818cc3: pop    %rbp
  0x000000010f818cc4: test   %eax,-0x8d7dbca(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f818cca: retq   
  0x000000010f818ccb: mov    0xf0(%rsp),%rsi
  0x000000010f818cd3: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f818cdd: addq   $0x1,0x1238(%rdx)
  0x000000010f818ce5: mov    $0x2,%edx
  0x000000010f818cea: mov    0xf0(%rsp),%rsi    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1092 (line 967)

  0x000000010f818cf2: nop
  0x000000010f818cf3: nop
  0x000000010f818cf4: nop
  0x000000010f818cf5: nop
  0x000000010f818cf6: nop
  0x000000010f818cf7: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=13532}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1092 (line 967)
                                                ;   {optimized virtual_call}
  0x000000010f818cfc: mov    0xf0(%rsp),%rsi
  0x000000010f818d04: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f818d0e: addq   $0x1,0x1248(%rdx)
  0x000000010f818d16: mov    $0x1000004,%edx
  0x000000010f818d1b: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1098 (line 968)

  0x000000010f818d23: nop
  0x000000010f818d24: nop
  0x000000010f818d25: nop
  0x000000010f818d26: nop
  0x000000010f818d27: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=13580}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1098 (line 968)
                                                ;   {optimized virtual_call}
  0x000000010f818d2c: mov    0xf0(%rsp),%rsi
  0x000000010f818d34: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f818d3e: addq   $0x1,0x1258(%rdx)
  0x000000010f818d46: mov    $0x1000000,%edx
  0x000000010f818d4b: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1104 (line 969)

  0x000000010f818d53: nop
  0x000000010f818d54: nop
  0x000000010f818d55: nop
  0x000000010f818d56: nop
  0x000000010f818d57: callq  0x000000010f7170a0  ; OopMap{off=13628}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1104 (line 969)
                                                ;   {optimized virtual_call}
  0x000000010f818d5c: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f818d66: incl   0x1268(%rdx)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1107 (line 970)

  0x000000010f818d6c: add    $0x1e0,%rsp
  0x000000010f818d73: pop    %rbp
  0x000000010f818d74: test   %eax,-0x8d7dc7a(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f818d7a: retq   
  0x000000010f818d7b: mov    0xf0(%rsp),%rsi
  0x000000010f818d83: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f818d8d: addq   $0x1,0x19e0(%rdx)
  0x000000010f818d95: mov    $0x2,%edx
  0x000000010f818d9a: mov    0xf0(%rsp),%rsi    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1682 (line 1155)

  0x000000010f818da2: nop
  0x000000010f818da3: nop
  0x000000010f818da4: nop
  0x000000010f818da5: nop
  0x000000010f818da6: nop
  0x000000010f818da7: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=13708}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1682 (line 1155)
                                                ;   {optimized virtual_call}
  0x000000010f818dac: mov    0xf0(%rsp),%rsi
  0x000000010f818db4: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f818dbe: addq   $0x1,0x19f0(%rdx)
  0x000000010f818dc6: mov    $0x1000002,%edx
  0x000000010f818dcb: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1688 (line 1156)

  0x000000010f818dd3: nop
  0x000000010f818dd4: nop
  0x000000010f818dd5: nop
  0x000000010f818dd6: nop
  0x000000010f818dd7: callq  0x000000010f7170a0  ; OopMap{off=13756}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1688 (line 1156)
                                                ;   {optimized virtual_call}
  0x000000010f818ddc: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f818de6: incl   0x1a00(%rdx)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1691 (line 1157)

  0x000000010f818dec: add    $0x1e0,%rsp
  0x000000010f818df3: pop    %rbp
  0x000000010f818df4: test   %eax,-0x8d7dcfa(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f818dfa: retq   
  0x000000010f818dfb: mov    0xf0(%rsp),%rsi
  0x000000010f818e03: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f818e0d: addq   $0x1,0x1960(%rdx)
  0x000000010f818e15: mov    $0x2,%edx
  0x000000010f818e1a: mov    0xf0(%rsp),%rsi    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1648 (line 1133)

  0x000000010f818e22: nop
  0x000000010f818e23: nop
  0x000000010f818e24: nop
  0x000000010f818e25: nop
  0x000000010f818e26: nop
  0x000000010f818e27: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=13836}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1648 (line 1133)
                                                ;   {optimized virtual_call}
  0x000000010f818e2c: mov    0xf0(%rsp),%rsi
  0x000000010f818e34: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f818e3e: addq   $0x1,0x1970(%rdx)
  0x000000010f818e46: mov    $0x1000001,%edx
  0x000000010f818e4b: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1654 (line 1134)

  0x000000010f818e53: nop
  0x000000010f818e54: nop
  0x000000010f818e55: nop
  0x000000010f818e56: nop
  0x000000010f818e57: callq  0x000000010f7170a0  ; OopMap{off=13884}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1654 (line 1134)
                                                ;   {optimized virtual_call}
  0x000000010f818e5c: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f818e66: incl   0x1980(%rdx)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1657 (line 1135)

  0x000000010f818e6c: add    $0x1e0,%rsp
  0x000000010f818e73: pop    %rbp
  0x000000010f818e74: test   %eax,-0x8d7dd7a(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f818e7a: retq   
  0x000000010f818e7b: mov    0xf0(%rsp),%rsi
  0x000000010f818e83: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f818e8d: addq   $0x1,0x1bd0(%rdx)
  0x000000010f818e95: mov    $0x4,%edx
  0x000000010f818e9a: mov    0xf0(%rsp),%rsi    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1814 (line 1202)

  0x000000010f818ea2: nop
  0x000000010f818ea3: nop
  0x000000010f818ea4: nop
  0x000000010f818ea5: nop
  0x000000010f818ea6: nop
  0x000000010f818ea7: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=13964}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1814 (line 1202)
                                                ;   {optimized virtual_call}
  0x000000010f818eac: mov    0xf0(%rsp),%rsi
  0x000000010f818eb4: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f818ebe: addq   $0x1,0x1be0(%rdx)
  0x000000010f818ec6: mov    $0x1000001,%edx
  0x000000010f818ecb: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1820 (line 1203)

  0x000000010f818ed3: nop
  0x000000010f818ed4: nop
  0x000000010f818ed5: nop
  0x000000010f818ed6: nop
  0x000000010f818ed7: callq  0x000000010f7170a0  ; OopMap{off=14012}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1820 (line 1203)
                                                ;   {optimized virtual_call}
  0x000000010f818edc: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f818ee6: incl   0x1bf0(%rdx)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1823 (line 1204)

  0x000000010f818eec: add    $0x1e0,%rsp
  0x000000010f818ef3: pop    %rbp
  0x000000010f818ef4: test   %eax,-0x8d7ddfa(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f818efa: retq   
  0x000000010f818efb: mov    0xf0(%rsp),%rsi
  0x000000010f818f03: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f818f0d: addq   $0x1,0x15e0(%rdx)
  0x000000010f818f15: mov    $0x2,%edx
  0x000000010f818f1a: mov    0xf0(%rsp),%rsi    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1361 (line 1059)

  0x000000010f818f22: nop
  0x000000010f818f23: nop
  0x000000010f818f24: nop
  0x000000010f818f25: nop
  0x000000010f818f26: nop
  0x000000010f818f27: callq  0x000000010f7170a0  ; OopMap{off=14092}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1361 (line 1059)
                                                ;   {optimized virtual_call}
  0x000000010f818f2c: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f818f36: incl   0x15f0(%rdx)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1364 (line 1060)

  0x000000010f818f3c: add    $0x1e0,%rsp
  0x000000010f818f43: pop    %rbp
  0x000000010f818f44: test   %eax,-0x8d7de4a(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f818f4a: retq   
  0x000000010f818f4b: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f818f55: incl   0xda8(%rdx)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@816 (line 891)

  0x000000010f818f5b: add    $0x1e0,%rsp
  0x000000010f818f62: pop    %rbp
  0x000000010f818f63: test   %eax,-0x8d7de69(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f818f69: retq   
  0x000000010f818f6a: mov    0xf0(%rsp),%rsi
  0x000000010f818f72: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f818f7c: addq   $0x1,0x1b98(%rdx)
  0x000000010f818f84: mov    $0x1,%edx
  0x000000010f818f89: mov    0xf0(%rsp),%rsi    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1800 (line 1196)

  0x000000010f818f91: nop
  0x000000010f818f92: nop
  0x000000010f818f93: nop
  0x000000010f818f94: nop
  0x000000010f818f95: nop
  0x000000010f818f96: nop
  0x000000010f818f97: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=14204}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1800 (line 1196)
                                                ;   {optimized virtual_call}
  0x000000010f818f9c: mov    0xf0(%rsp),%rsi
  0x000000010f818fa4: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f818fae: addq   $0x1,0x1ba8(%rdx)
  0x000000010f818fb6: mov    $0x1000001,%edx
  0x000000010f818fbb: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1806 (line 1197)

  0x000000010f818fc3: nop
  0x000000010f818fc4: nop
  0x000000010f818fc5: nop
  0x000000010f818fc6: nop
  0x000000010f818fc7: callq  0x000000010f7170a0  ; OopMap{off=14252}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1806 (line 1197)
                                                ;   {optimized virtual_call}
  0x000000010f818fcc: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f818fd6: incl   0x1bb8(%rdx)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1809 (line 1198)

  0x000000010f818fdc: add    $0x1e0,%rsp
  0x000000010f818fe3: pop    %rbp
  0x000000010f818fe4: test   %eax,-0x8d7deea(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f818fea: retq   
  0x000000010f818feb: mov    0xf0(%rsp),%rsi
  0x000000010f818ff3: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f818ffd: addq   $0x1,0x15b8(%rdx)
  0x000000010f819005: mov    $0x1,%edx
  0x000000010f81900a: mov    0xf0(%rsp),%rsi    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1353 (line 1046)

  0x000000010f819012: nop
  0x000000010f819013: nop
  0x000000010f819014: nop
  0x000000010f819015: nop
  0x000000010f819016: nop
  0x000000010f819017: callq  0x000000010f7170a0  ; OopMap{off=14332}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1353 (line 1046)
                                                ;   {optimized virtual_call}
  0x000000010f81901c: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f819026: incl   0x15c8(%rdx)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1356 (line 1047)

  0x000000010f81902c: add    $0x1e0,%rsp
  0x000000010f819033: pop    %rbp
  0x000000010f819034: test   %eax,-0x8d7df3a(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f81903a: retq   
  0x000000010f81903b: mov    0x24(%r9),%edx     ; implicit exception: dispatches to 0x000000010f81a195
  0x000000010f81903f: shl    $0x3,%rdx          ;*getfield strVal1
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1986 (line 1242)

  0x000000010f819043: cmp    (%r8),%rax         ; implicit exception: dispatches to 0x000000010f81a19a
  0x000000010f819046: mov    %r8,%rsi
  0x000000010f819049: movabs $0x10eda9988,%rdi  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f819053: movabs $0x7c005d658,%r10  ;   {metadata('jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000000010f81905d: mov    %r10,0x1e00(%rdi)
  0x000000010f819064: addq   $0x1,0x1e08(%rdi)
  0x000000010f81906c: mov    %r8,%rsi           ;*invokevirtual addUninitializedType
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1990 (line 1242)

  0x000000010f81906f: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=14420}
                                                ;*invokevirtual addUninitializedType
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1990 (line 1242)
                                                ;   {optimized virtual_call}
  0x000000010f819074: mov    0xf0(%rsp),%rsi
  0x000000010f81907c: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f819086: addq   $0x1,0x1e28(%rdx)
  0x000000010f81908e: or     $0x1800000,%eax
  0x000000010f819094: mov    %rax,%rdx
  0x000000010f819097: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1994 (line 1242)

  0x000000010f81909f: callq  0x000000010f7170a0  ; OopMap{off=14468}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1994 (line 1242)
                                                ;   {optimized virtual_call}
  0x000000010f8190a4: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8190ae: incl   0x1e38(%rdx)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1997 (line 1243)

  0x000000010f8190b4: add    $0x1e0,%rsp
  0x000000010f8190bb: pop    %rbp
  0x000000010f8190bc: test   %eax,-0x8d7dfc2(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f8190c2: retq   
  0x000000010f8190c3: mov    0x2c(%r9),%edx     ; implicit exception: dispatches to 0x000000010f81a19f
  0x000000010f8190c7: shl    $0x3,%rdx          ;*getfield strVal3
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1882 (line 1220)

  0x000000010f8190cb: mov    0xf0(%rsp),%rsi
  0x000000010f8190d3: movabs $0x10eda9988,%rdi  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8190dd: addq   $0x1,0x1ca0(%rdi)
  0x000000010f8190e5: mov    0xf0(%rsp),%rsi    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1885 (line 1220)

  0x000000010f8190ed: nop
  0x000000010f8190ee: nop
  0x000000010f8190ef: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=14548}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1885 (line 1220)
                                                ;   {optimized virtual_call}
  0x000000010f8190f4: mov    0xf0(%rsp),%rsi
  0x000000010f8190fc: movabs $0x10eda9988,%rdi  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f819106: addq   $0x1,0x1cb0(%rdi)
  0x000000010f81910e: mov    0xf0(%rsp),%rsi    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1889 (line 1221)

  0x000000010f819116: nop
  0x000000010f819117: callq  0x000000010f7170a0  ; OopMap{off=14588}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1889 (line 1221)
                                                ;   {optimized virtual_call}
  0x000000010f81911c: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f819126: incl   0x1cc0(%rdx)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1893 (line 1222)

  0x000000010f81912c: add    $0x1e0,%rsp
  0x000000010f819133: pop    %rbp
  0x000000010f819134: test   %eax,-0x8d7e03a(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f81913a: retq   
  0x000000010f81913b: mov    0x2c(%r9),%edx     ; implicit exception: dispatches to 0x000000010f81a1a4
  0x000000010f81913f: shl    $0x3,%rdx          ;*getfield strVal3
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1852 (line 1213)

  0x000000010f819143: mov    0xf0(%rsp),%rsi
  0x000000010f81914b: movabs $0x10eda9988,%rdi  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f819155: addq   $0x1,0x1c40(%rdi)
  0x000000010f81915d: mov    0xf0(%rsp),%rsi    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1855 (line 1213)

  0x000000010f819165: nop
  0x000000010f819166: nop
  0x000000010f819167: callq  0x000000010f7170a0  ; OopMap{off=14668}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1855 (line 1213)
                                                ;   {optimized virtual_call}
  0x000000010f81916c: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f819176: incl   0x1c50(%rdx)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1858 (line 1214)

  0x000000010f81917c: add    $0x1e0,%rsp
  0x000000010f819183: pop    %rbp
  0x000000010f819184: test   %eax,-0x8d7e08a(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f81918a: retq   
  0x000000010f81918b: mov    0xf0(%rsp),%rsi
  0x000000010f819193: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f81919d: addq   $0x1,0x1b18(%rdx)
  0x000000010f8191a5: mov    $0x1,%edx
  0x000000010f8191aa: mov    0xf0(%rsp),%rsi    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1766 (line 1184)

  0x000000010f8191b2: nop
  0x000000010f8191b3: nop
  0x000000010f8191b4: nop
  0x000000010f8191b5: nop
  0x000000010f8191b6: nop
  0x000000010f8191b7: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=14748}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1766 (line 1184)
                                                ;   {optimized virtual_call}
  0x000000010f8191bc: mov    0xf0(%rsp),%rsi
  0x000000010f8191c4: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8191ce: addq   $0x1,0x1b28(%rdx)
  0x000000010f8191d6: mov    $0x1000002,%edx
  0x000000010f8191db: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1772 (line 1185)

  0x000000010f8191e3: nop
  0x000000010f8191e4: nop
  0x000000010f8191e5: nop
  0x000000010f8191e6: nop
  0x000000010f8191e7: callq  0x000000010f7170a0  ; OopMap{off=14796}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1772 (line 1185)
                                                ;   {optimized virtual_call}
  0x000000010f8191ec: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8191f6: incl   0x1b38(%rdx)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1775 (line 1186)

  0x000000010f8191fc: add    $0x1e0,%rsp
  0x000000010f819203: pop    %rbp
  0x000000010f819204: test   %eax,-0x8d7e10a(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f81920a: retq   
  0x000000010f81920b: mov    0xf0(%rsp),%rsi
  0x000000010f819213: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f81921d: addq   $0x1,0x1aa8(%rdx)
  0x000000010f819225: mov    %rcx,%rdx
  0x000000010f819228: mov    $0x1000001,%ecx
  0x000000010f81922d: mov    0xf0(%rsp),%rsi    ;*invokespecial set
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1738 (line 1175)

  0x000000010f819235: nop
  0x000000010f819236: nop
  0x000000010f819237: callq  0x000000010f7170a0  ; OopMap{off=14876}
                                                ;*invokespecial set
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1738 (line 1175)
                                                ;   {optimized virtual_call}
  0x000000010f81923c: movabs $0x10eda9988,%rsi  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f819246: incl   0x1ab8(%rsi)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1741 (line 1176)

  0x000000010f81924c: add    $0x1e0,%rsp
  0x000000010f819253: pop    %rbp
  0x000000010f819254: test   %eax,-0x8d7e15a(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f81925a: retq   
  0x000000010f81925b: mov    0xf0(%rsp),%rsi
  0x000000010f819263: movabs $0x10eda9988,%rdi  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f81926d: addq   $0x1,0x1908(%rdi)
  0x000000010f819275: mov    0xf0(%rsp),%rsi    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1620 (line 1113)

  0x000000010f81927d: nop
  0x000000010f81927e: nop
  0x000000010f81927f: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=14948}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1620 (line 1113)
                                                ;   {optimized virtual_call}
  0x000000010f819284: mov    0xf0(%rsp),%rsi
  0x000000010f81928c: movabs $0x10eda9988,%rdi  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f819296: addq   $0x1,0x1918(%rdi)
  0x000000010f81929e: mov    0xf0(%rsp),%rsi    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1626 (line 1114)

  0x000000010f8192a6: mov    %eax,0x164(%rsp)
  0x000000010f8192ad: nop
  0x000000010f8192ae: nop
  0x000000010f8192af: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=14996}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1626 (line 1114)
                                                ;   {optimized virtual_call}
  0x000000010f8192b4: mov    0xf0(%rsp),%rsi
  0x000000010f8192bc: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8192c6: addq   $0x1,0x1928(%rdx)
  0x000000010f8192ce: mov    0x164(%rsp),%edx
  0x000000010f8192d5: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1634 (line 1115)

  0x000000010f8192dd: mov    %eax,0x168(%rsp)
  0x000000010f8192e4: nop
  0x000000010f8192e5: nop
  0x000000010f8192e6: nop
  0x000000010f8192e7: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=15052}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1634 (line 1115)
                                                ;   {optimized virtual_call}
  0x000000010f8192ec: mov    0xf0(%rsp),%rsi
  0x000000010f8192f4: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8192fe: addq   $0x1,0x1938(%rdx)
  0x000000010f819306: mov    0x168(%rsp),%edx
  0x000000010f81930d: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1640 (line 1116)

  0x000000010f819315: nop
  0x000000010f819316: nop
  0x000000010f819317: callq  0x000000010f7170a0  ; OopMap{off=15100}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1640 (line 1116)
                                                ;   {optimized virtual_call}
  0x000000010f81931c: movabs $0x10eda9988,%rsi  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f819326: incl   0x1948(%rsi)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1643 (line 1117)

  0x000000010f81932c: add    $0x1e0,%rsp
  0x000000010f819333: pop    %rbp
  0x000000010f819334: test   %eax,-0x8d7e23a(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f81933a: retq   
  0x000000010f81933b: mov    0xf0(%rsp),%rsi
  0x000000010f819343: movabs $0x10eda9988,%rdi  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f81934d: addq   $0x1,0x1850(%rdi)
  0x000000010f819355: mov    0xf0(%rsp),%rsi    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1557 (line 1101)

  0x000000010f81935d: nop
  0x000000010f81935e: nop
  0x000000010f81935f: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=15172}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1557 (line 1101)
                                                ;   {optimized virtual_call}
  0x000000010f819364: mov    0xf0(%rsp),%rsi
  0x000000010f81936c: movabs $0x10eda9988,%rdi  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f819376: addq   $0x1,0x1860(%rdi)
  0x000000010f81937e: mov    0xf0(%rsp),%rsi    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1563 (line 1102)

  0x000000010f819386: mov    %eax,0x16c(%rsp)
  0x000000010f81938d: nop
  0x000000010f81938e: nop
  0x000000010f81938f: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=15220}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1563 (line 1102)
                                                ;   {optimized virtual_call}
  0x000000010f819394: mov    0xf0(%rsp),%rsi
  0x000000010f81939c: movabs $0x10eda9988,%rdi  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8193a6: addq   $0x1,0x1870(%rdi)
  0x000000010f8193ae: mov    0xf0(%rsp),%rsi    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1569 (line 1103)

  0x000000010f8193b6: mov    %eax,0x170(%rsp)
  0x000000010f8193bd: nop
  0x000000010f8193be: nop
  0x000000010f8193bf: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=15268}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1569 (line 1103)
                                                ;   {optimized virtual_call}
  0x000000010f8193c4: mov    0xf0(%rsp),%rsi
  0x000000010f8193cc: movabs $0x10eda9988,%rdi  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8193d6: addq   $0x1,0x1880(%rdi)
  0x000000010f8193de: mov    0xf0(%rsp),%rsi    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1575 (line 1104)

  0x000000010f8193e6: mov    %eax,0x174(%rsp)
  0x000000010f8193ed: nop
  0x000000010f8193ee: nop
  0x000000010f8193ef: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=15316}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1575 (line 1104)
                                                ;   {optimized virtual_call}
  0x000000010f8193f4: mov    0xf0(%rsp),%rsi
  0x000000010f8193fc: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f819406: addq   $0x1,0x1890(%rdx)
  0x000000010f81940e: mov    0x170(%rsp),%edx
  0x000000010f819415: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1583 (line 1105)

  0x000000010f81941d: mov    %eax,0x178(%rsp)
  0x000000010f819424: nop
  0x000000010f819425: nop
  0x000000010f819426: nop
  0x000000010f819427: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=15372}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1583 (line 1105)
                                                ;   {optimized virtual_call}
  0x000000010f81942c: mov    0xf0(%rsp),%rsi
  0x000000010f819434: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f81943e: addq   $0x1,0x18a0(%rdx)
  0x000000010f819446: mov    0x16c(%rsp),%edx
  0x000000010f81944d: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1589 (line 1106)

  0x000000010f819455: nop
  0x000000010f819456: nop
  0x000000010f819457: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=15420}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1589 (line 1106)
                                                ;   {optimized virtual_call}
  0x000000010f81945c: mov    0xf0(%rsp),%rsi
  0x000000010f819464: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f81946e: addq   $0x1,0x18b0(%rdx)
  0x000000010f819476: mov    0x178(%rsp),%edx
  0x000000010f81947d: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1595 (line 1107)

  0x000000010f819485: nop
  0x000000010f819486: nop
  0x000000010f819487: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=15468}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1595 (line 1107)
                                                ;   {optimized virtual_call}
  0x000000010f81948c: mov    0xf0(%rsp),%rsi
  0x000000010f819494: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f81949e: addq   $0x1,0x18c0(%rdx)
  0x000000010f8194a6: mov    0x174(%rsp),%edx
  0x000000010f8194ad: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1601 (line 1108)

  0x000000010f8194b5: nop
  0x000000010f8194b6: nop
  0x000000010f8194b7: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=15516}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1601 (line 1108)
                                                ;   {optimized virtual_call}
  0x000000010f8194bc: mov    0xf0(%rsp),%rsi
  0x000000010f8194c4: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8194ce: addq   $0x1,0x18d0(%rdx)
  0x000000010f8194d6: mov    0x170(%rsp),%edx
  0x000000010f8194dd: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1607 (line 1109)

  0x000000010f8194e5: nop
  0x000000010f8194e6: nop
  0x000000010f8194e7: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=15564}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1607 (line 1109)
                                                ;   {optimized virtual_call}
  0x000000010f8194ec: mov    0xf0(%rsp),%rsi
  0x000000010f8194f4: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8194fe: addq   $0x1,0x18e0(%rdx)
  0x000000010f819506: mov    0x16c(%rsp),%edx
  0x000000010f81950d: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1613 (line 1110)

  0x000000010f819515: nop
  0x000000010f819516: nop
  0x000000010f819517: callq  0x000000010f7170a0  ; OopMap{off=15612}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1613 (line 1110)
                                                ;   {optimized virtual_call}
  0x000000010f81951c: movabs $0x10eda9988,%rsi  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f819526: incl   0x18f0(%rsi)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1616 (line 1111)

  0x000000010f81952c: add    $0x1e0,%rsp
  0x000000010f819533: pop    %rbp
  0x000000010f819534: test   %eax,-0x8d7e43a(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f81953a: retq   
  0x000000010f81953b: mov    0xf0(%rsp),%rsi
  0x000000010f819543: movabs $0x10eda9988,%rdi  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f81954d: addq   $0x1,0x17b8(%rdi)
  0x000000010f819555: mov    0xf0(%rsp),%rsi    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1506 (line 1091)

  0x000000010f81955d: nop
  0x000000010f81955e: nop
  0x000000010f81955f: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=15684}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1506 (line 1091)
                                                ;   {optimized virtual_call}
  0x000000010f819564: mov    0xf0(%rsp),%rsi
  0x000000010f81956c: movabs $0x10eda9988,%rdi  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f819576: addq   $0x1,0x17c8(%rdi)
  0x000000010f81957e: mov    0xf0(%rsp),%rsi    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1512 (line 1092)

  0x000000010f819586: mov    %eax,0x17c(%rsp)
  0x000000010f81958d: nop
  0x000000010f81958e: nop
  0x000000010f81958f: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=15732}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1512 (line 1092)
                                                ;   {optimized virtual_call}
  0x000000010f819594: mov    0xf0(%rsp),%rsi
  0x000000010f81959c: movabs $0x10eda9988,%rdi  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8195a6: addq   $0x1,0x17d8(%rdi)
  0x000000010f8195ae: mov    0xf0(%rsp),%rsi    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1518 (line 1093)

  0x000000010f8195b6: mov    %eax,0x180(%rsp)
  0x000000010f8195bd: nop
  0x000000010f8195be: nop
  0x000000010f8195bf: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=15780}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1518 (line 1093)
                                                ;   {optimized virtual_call}
  0x000000010f8195c4: mov    0xf0(%rsp),%rsi
  0x000000010f8195cc: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8195d6: addq   $0x1,0x17e8(%rdx)
  0x000000010f8195de: mov    0x180(%rsp),%edx
  0x000000010f8195e5: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1526 (line 1094)

  0x000000010f8195ed: mov    %eax,0x184(%rsp)
  0x000000010f8195f4: nop
  0x000000010f8195f5: nop
  0x000000010f8195f6: nop
  0x000000010f8195f7: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=15836}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1526 (line 1094)
                                                ;   {optimized virtual_call}
  0x000000010f8195fc: mov    0xf0(%rsp),%rsi
  0x000000010f819604: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f81960e: addq   $0x1,0x17f8(%rdx)
  0x000000010f819616: mov    0x17c(%rsp),%edx
  0x000000010f81961d: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1532 (line 1095)

  0x000000010f819625: nop
  0x000000010f819626: nop
  0x000000010f819627: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=15884}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1532 (line 1095)
                                                ;   {optimized virtual_call}
  0x000000010f81962c: mov    0xf0(%rsp),%rsi
  0x000000010f819634: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f81963e: addq   $0x1,0x1808(%rdx)
  0x000000010f819646: mov    0x184(%rsp),%edx
  0x000000010f81964d: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1538 (line 1096)

  0x000000010f819655: nop
  0x000000010f819656: nop
  0x000000010f819657: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=15932}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1538 (line 1096)
                                                ;   {optimized virtual_call}
  0x000000010f81965c: mov    0xf0(%rsp),%rsi
  0x000000010f819664: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f81966e: addq   $0x1,0x1818(%rdx)
  0x000000010f819676: mov    0x180(%rsp),%edx
  0x000000010f81967d: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1544 (line 1097)

  0x000000010f819685: nop
  0x000000010f819686: nop
  0x000000010f819687: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=15980}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1544 (line 1097)
                                                ;   {optimized virtual_call}
  0x000000010f81968c: mov    0xf0(%rsp),%rsi
  0x000000010f819694: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f81969e: addq   $0x1,0x1828(%rdx)
  0x000000010f8196a6: mov    0x17c(%rsp),%edx
  0x000000010f8196ad: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1550 (line 1098)

  0x000000010f8196b5: nop
  0x000000010f8196b6: nop
  0x000000010f8196b7: callq  0x000000010f7170a0  ; OopMap{off=16028}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1550 (line 1098)
                                                ;   {optimized virtual_call}
  0x000000010f8196bc: movabs $0x10eda9988,%rsi  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8196c6: incl   0x1838(%rsi)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1553 (line 1099)

  0x000000010f8196cc: add    $0x1e0,%rsp
  0x000000010f8196d3: pop    %rbp
  0x000000010f8196d4: test   %eax,-0x8d7e5da(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f8196da: retq   
  0x000000010f8196db: mov    0xf0(%rsp),%rsi
  0x000000010f8196e3: movabs $0x10eda9988,%rdi  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8196ed: addq   $0x1,0x1740(%rdi)
  0x000000010f8196f5: mov    0xf0(%rsp),%rsi    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1467 (line 1083)

  0x000000010f8196fd: nop
  0x000000010f8196fe: nop
  0x000000010f8196ff: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=16100}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1467 (line 1083)
                                                ;   {optimized virtual_call}
  0x000000010f819704: mov    0xf0(%rsp),%rsi
  0x000000010f81970c: movabs $0x10eda9988,%rdi  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f819716: addq   $0x1,0x1750(%rdi)
  0x000000010f81971e: mov    0xf0(%rsp),%rsi    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1473 (line 1084)

  0x000000010f819726: mov    %eax,0x188(%rsp)
  0x000000010f81972d: nop
  0x000000010f81972e: nop
  0x000000010f81972f: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=16148}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1473 (line 1084)
                                                ;   {optimized virtual_call}
  0x000000010f819734: mov    0xf0(%rsp),%rsi
  0x000000010f81973c: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f819746: addq   $0x1,0x1760(%rdx)
  0x000000010f81974e: mov    %rax,%rdx
  0x000000010f819751: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1481 (line 1085)

  0x000000010f819759: mov    %eax,0x18c(%rsp)
  0x000000010f819760: nop
  0x000000010f819761: nop
  0x000000010f819762: nop
  0x000000010f819763: nop
  0x000000010f819764: nop
  0x000000010f819765: nop
  0x000000010f819766: nop
  0x000000010f819767: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=16204}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1481 (line 1085)
                                                ;   {optimized virtual_call}
  0x000000010f81976c: mov    0xf0(%rsp),%rsi
  0x000000010f819774: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f81977e: addq   $0x1,0x1770(%rdx)
  0x000000010f819786: mov    0x188(%rsp),%edx
  0x000000010f81978d: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1487 (line 1086)

  0x000000010f819795: nop
  0x000000010f819796: nop
  0x000000010f819797: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=16252}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1487 (line 1086)
                                                ;   {optimized virtual_call}
  0x000000010f81979c: mov    0xf0(%rsp),%rsi
  0x000000010f8197a4: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8197ae: addq   $0x1,0x1780(%rdx)
  0x000000010f8197b6: mov    0x18c(%rsp),%edx
  0x000000010f8197bd: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1493 (line 1087)

  0x000000010f8197c5: nop
  0x000000010f8197c6: nop
  0x000000010f8197c7: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=16300}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1493 (line 1087)
                                                ;   {optimized virtual_call}
  0x000000010f8197cc: mov    0xf0(%rsp),%rsi
  0x000000010f8197d4: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8197de: addq   $0x1,0x1790(%rdx)
  0x000000010f8197e6: mov    0x188(%rsp),%edx
  0x000000010f8197ed: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1499 (line 1088)

  0x000000010f8197f5: nop
  0x000000010f8197f6: nop
  0x000000010f8197f7: callq  0x000000010f7170a0  ; OopMap{off=16348}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1499 (line 1088)
                                                ;   {optimized virtual_call}
  0x000000010f8197fc: movabs $0x10eda9988,%rsi  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f819806: incl   0x17a0(%rsi)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1502 (line 1089)

  0x000000010f81980c: add    $0x1e0,%rsp
  0x000000010f819813: pop    %rbp
  0x000000010f819814: test   %eax,-0x8d7e71a(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f81981a: retq   
  0x000000010f81981b: mov    0xf0(%rsp),%rsi
  0x000000010f819823: movabs $0x10eda9988,%rdi  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f81982d: addq   $0x1,0x16b8(%rdi)
  0x000000010f819835: mov    0xf0(%rsp),%rsi    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1422 (line 1074)

  0x000000010f81983d: nop
  0x000000010f81983e: nop
  0x000000010f81983f: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=16420}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1422 (line 1074)
                                                ;   {optimized virtual_call}
  0x000000010f819844: mov    0xf0(%rsp),%rsi
  0x000000010f81984c: movabs $0x10eda9988,%rdi  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f819856: addq   $0x1,0x16c8(%rdi)
  0x000000010f81985e: mov    0xf0(%rsp),%rsi    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1428 (line 1075)

  0x000000010f819866: mov    %eax,0x190(%rsp)
  0x000000010f81986d: nop
  0x000000010f81986e: nop
  0x000000010f81986f: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=16468}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1428 (line 1075)
                                                ;   {optimized virtual_call}
  0x000000010f819874: mov    0xf0(%rsp),%rsi
  0x000000010f81987c: movabs $0x10eda9988,%rdi  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f819886: addq   $0x1,0x16d8(%rdi)
  0x000000010f81988e: mov    0xf0(%rsp),%rsi    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1434 (line 1076)

  0x000000010f819896: mov    %eax,0x194(%rsp)
  0x000000010f81989d: nop
  0x000000010f81989e: nop
  0x000000010f81989f: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=16516}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1434 (line 1076)
                                                ;   {optimized virtual_call}
  0x000000010f8198a4: mov    0xf0(%rsp),%rsi
  0x000000010f8198ac: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8198b6: addq   $0x1,0x16e8(%rdx)
  0x000000010f8198be: mov    0x190(%rsp),%edx
  0x000000010f8198c5: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1442 (line 1077)

  0x000000010f8198cd: mov    %eax,0x198(%rsp)
  0x000000010f8198d4: nop
  0x000000010f8198d5: nop
  0x000000010f8198d6: nop
  0x000000010f8198d7: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=16572}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1442 (line 1077)
                                                ;   {optimized virtual_call}
  0x000000010f8198dc: mov    0xf0(%rsp),%rsi
  0x000000010f8198e4: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8198ee: addq   $0x1,0x16f8(%rdx)
  0x000000010f8198f6: mov    0x198(%rsp),%edx
  0x000000010f8198fd: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1448 (line 1078)

  0x000000010f819905: nop
  0x000000010f819906: nop
  0x000000010f819907: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=16620}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1448 (line 1078)
                                                ;   {optimized virtual_call}
  0x000000010f81990c: mov    0xf0(%rsp),%rsi
  0x000000010f819914: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f81991e: addq   $0x1,0x1708(%rdx)
  0x000000010f819926: mov    0x194(%rsp),%edx
  0x000000010f81992d: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1454 (line 1079)

  0x000000010f819935: nop
  0x000000010f819936: nop
  0x000000010f819937: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=16668}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1454 (line 1079)
                                                ;   {optimized virtual_call}
  0x000000010f81993c: mov    0xf0(%rsp),%rsi
  0x000000010f819944: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f81994e: addq   $0x1,0x1718(%rdx)
  0x000000010f819956: mov    0x190(%rsp),%edx
  0x000000010f81995d: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1460 (line 1080)

  0x000000010f819965: nop
  0x000000010f819966: nop
  0x000000010f819967: callq  0x000000010f7170a0  ; OopMap{off=16716}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1460 (line 1080)
                                                ;   {optimized virtual_call}
  0x000000010f81996c: movabs $0x10eda9988,%rsi  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f819976: incl   0x1728(%rsi)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1463 (line 1081)

  0x000000010f81997c: add    $0x1e0,%rsp
  0x000000010f819983: pop    %rbp
  0x000000010f819984: test   %eax,-0x8d7e88a(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f81998a: retq   
  0x000000010f81998b: mov    0xf0(%rsp),%rsi
  0x000000010f819993: movabs $0x10eda9988,%rdi  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f81999d: addq   $0x1,0x1650(%rdi)
  0x000000010f8199a5: mov    0xf0(%rsp),%rsi    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1389 (line 1067)

  0x000000010f8199ad: nop
  0x000000010f8199ae: nop
  0x000000010f8199af: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=16788}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1389 (line 1067)
                                                ;   {optimized virtual_call}
  0x000000010f8199b4: mov    0xf0(%rsp),%rsi
  0x000000010f8199bc: movabs $0x10eda9988,%rdi  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8199c6: addq   $0x1,0x1660(%rdi)
  0x000000010f8199ce: mov    0xf0(%rsp),%rsi    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1395 (line 1068)

  0x000000010f8199d6: mov    %eax,0x19c(%rsp)
  0x000000010f8199dd: nop
  0x000000010f8199de: nop
  0x000000010f8199df: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=16836}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1395 (line 1068)
                                                ;   {optimized virtual_call}
  0x000000010f8199e4: mov    0xf0(%rsp),%rsi
  0x000000010f8199ec: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f8199f6: addq   $0x1,0x1670(%rdx)
  0x000000010f8199fe: mov    0x19c(%rsp),%edx
  0x000000010f819a05: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1403 (line 1069)

  0x000000010f819a0d: mov    %eax,0x1a0(%rsp)
  0x000000010f819a14: nop
  0x000000010f819a15: nop
  0x000000010f819a16: nop
  0x000000010f819a17: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=16892}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1403 (line 1069)
                                                ;   {optimized virtual_call}
  0x000000010f819a1c: mov    0xf0(%rsp),%rsi
  0x000000010f819a24: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f819a2e: addq   $0x1,0x1680(%rdx)
  0x000000010f819a36: mov    0x1a0(%rsp),%edx
  0x000000010f819a3d: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1409 (line 1070)

  0x000000010f819a45: nop
  0x000000010f819a46: nop
  0x000000010f819a47: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=16940}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1409 (line 1070)
                                                ;   {optimized virtual_call}
  0x000000010f819a4c: mov    0xf0(%rsp),%rsi
  0x000000010f819a54: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f819a5e: addq   $0x1,0x1690(%rdx)
  0x000000010f819a66: mov    0x19c(%rsp),%edx
  0x000000010f819a6d: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1415 (line 1071)

  0x000000010f819a75: nop
  0x000000010f819a76: nop
  0x000000010f819a77: callq  0x000000010f7170a0  ; OopMap{off=16988}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1415 (line 1071)
                                                ;   {optimized virtual_call}
  0x000000010f819a7c: movabs $0x10eda9988,%rsi  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f819a86: incl   0x16a0(%rsi)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1418 (line 1072)

  0x000000010f819a8c: add    $0x1e0,%rsp
  0x000000010f819a93: pop    %rbp
  0x000000010f819a94: test   %eax,-0x8d7e99a(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f819a9a: retq   
  0x000000010f819a9b: mov    0xf0(%rsp),%rsi
  0x000000010f819aa3: movabs $0x10eda9988,%rdi  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f819aad: addq   $0x1,0x1608(%rdi)
  0x000000010f819ab5: mov    0xf0(%rsp),%rsi    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1368 (line 1062)

  0x000000010f819abd: nop
  0x000000010f819abe: nop
  0x000000010f819abf: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=17060}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1368 (line 1062)
                                                ;   {optimized virtual_call}
  0x000000010f819ac4: mov    0xf0(%rsp),%rsi
  0x000000010f819acc: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f819ad6: addq   $0x1,0x1618(%rdx)
  0x000000010f819ade: mov    %rax,%rdx
  0x000000010f819ae1: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1376 (line 1063)

  0x000000010f819ae9: mov    %eax,0x1a4(%rsp)
  0x000000010f819af0: nop
  0x000000010f819af1: nop
  0x000000010f819af2: nop
  0x000000010f819af3: nop
  0x000000010f819af4: nop
  0x000000010f819af5: nop
  0x000000010f819af6: nop
  0x000000010f819af7: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=17116}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1376 (line 1063)
                                                ;   {optimized virtual_call}
  0x000000010f819afc: mov    0xf0(%rsp),%rsi
  0x000000010f819b04: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f819b0e: addq   $0x1,0x1628(%rdx)
  0x000000010f819b16: mov    0x1a4(%rsp),%edx
  0x000000010f819b1d: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1382 (line 1064)

  0x000000010f819b25: nop
  0x000000010f819b26: nop
  0x000000010f819b27: callq  0x000000010f7170a0  ; OopMap{off=17164}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1382 (line 1064)
                                                ;   {optimized virtual_call}
  0x000000010f819b2c: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f819b36: incl   0x1638(%rdx)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1385 (line 1065)

  0x000000010f819b3c: add    $0x1e0,%rsp
  0x000000010f819b43: pop    %rbp
  0x000000010f819b44: test   %eax,-0x8d7ea4a(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f819b4a: retq   
  0x000000010f819b4b: mov    0xf0(%rsp),%rsi
  0x000000010f819b53: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f819b5d: addq   $0x1,0x1300(%rdx)
  0x000000010f819b65: mov    $0x1,%edx
  0x000000010f819b6a: mov    0xf0(%rsp),%rsi    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1146 (line 982)

  0x000000010f819b72: nop
  0x000000010f819b73: nop
  0x000000010f819b74: nop
  0x000000010f819b75: nop
  0x000000010f819b76: nop
  0x000000010f819b77: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=17244}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1146 (line 982)
                                                ;   {optimized virtual_call}
  0x000000010f819b7c: mov    0xf0(%rsp),%rsi
  0x000000010f819b84: movabs $0x10eda9988,%rdi  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f819b8e: addq   $0x1,0x1310(%rdi)
  0x000000010f819b96: mov    0xf0(%rsp),%rsi    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1150 (line 983)

  0x000000010f819b9e: nop
  0x000000010f819b9f: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=17284}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1150 (line 983)
                                                ;   {optimized virtual_call}
  0x000000010f819ba4: mov    0xf0(%rsp),%rsi
  0x000000010f819bac: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f819bb6: addq   $0x1,0x1320(%rdx)
  0x000000010f819bbe: sub    $0x10000000,%eax
  0x000000010f819bc4: mov    %rax,%rdx
  0x000000010f819bc7: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1161 (line 984)

  0x000000010f819bcf: callq  0x000000010f7170a0  ; OopMap{off=17332}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1161 (line 984)
                                                ;   {optimized virtual_call}
  0x000000010f819bd4: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f819bde: incl   0x1330(%rdx)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1164 (line 985)

  0x000000010f819be4: add    $0x1e0,%rsp
  0x000000010f819beb: pop    %rbp
  0x000000010f819bec: test   %eax,-0x8d7eaf2(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f819bf2: retq   
  0x000000010f819bf3: mov    0xf0(%rsp),%rsi
  0x000000010f819bfb: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f819c05: addq   $0x1,0x1280(%rdx)
  0x000000010f819c0d: mov    $0x2,%edx
  0x000000010f819c12: mov    0xf0(%rsp),%rsi    ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1112 (line 972)

  0x000000010f819c1a: nop
  0x000000010f819c1b: nop
  0x000000010f819c1c: nop
  0x000000010f819c1d: nop
  0x000000010f819c1e: nop
  0x000000010f819c1f: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=17412}
                                                ;*invokespecial pop
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1112 (line 972)
                                                ;   {optimized virtual_call}
  0x000000010f819c24: mov    0xf0(%rsp),%rsi
  0x000000010f819c2c: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f819c36: addq   $0x1,0x1290(%rdx)
  0x000000010f819c3e: mov    $0x1000002,%edx
  0x000000010f819c43: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1118 (line 973)

  0x000000010f819c4b: nop
  0x000000010f819c4c: nop
  0x000000010f819c4d: nop
  0x000000010f819c4e: nop
  0x000000010f819c4f: callq  0x000000010f7170a0  ; OopMap{off=17460}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1118 (line 973)
                                                ;   {optimized virtual_call}
  0x000000010f819c54: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f819c5e: incl   0x12a0(%rdx)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1121 (line 974)

  0x000000010f819c64: add    $0x1e0,%rsp
  0x000000010f819c6b: pop    %rbp
  0x000000010f819c6c: test   %eax,-0x8d7eb72(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f819c72: retq   
  0x000000010f819c73: mov    0xf0(%rsp),%rsi
  0x000000010f819c7b: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f819c85: addq   $0x1,0x11c8(%rdx)
  0x000000010f819c8d: mov    %rcx,%rdx
  0x000000010f819c90: mov    0xf0(%rsp),%rsi    ;*invokespecial get
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1067 (line 956)

  0x000000010f819c98: nop
  0x000000010f819c99: nop
  0x000000010f819c9a: nop
  0x000000010f819c9b: nop
  0x000000010f819c9c: nop
  0x000000010f819c9d: nop
  0x000000010f819c9e: nop
  0x000000010f819c9f: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=17540}
                                                ;*invokespecial get
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1067 (line 956)
                                                ;   {optimized virtual_call}
  0x000000010f819ca4: mov    0xf0(%rsp),%rsi
  0x000000010f819cac: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f819cb6: addq   $0x1,0x11d8(%rdx)
  0x000000010f819cbe: mov    %rax,%rdx
  0x000000010f819cc1: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1070 (line 956)

  0x000000010f819cc9: nop
  0x000000010f819cca: nop
  0x000000010f819ccb: nop
  0x000000010f819ccc: nop
  0x000000010f819ccd: nop
  0x000000010f819cce: nop
  0x000000010f819ccf: callq  0x000000010f7170a0  ; OopMap{off=17588}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1070 (line 956)
                                                ;   {optimized virtual_call}
  0x000000010f819cd4: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f819cde: incl   0x11e8(%rdx)       ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1073 (line 957)

  0x000000010f819ce4: add    $0x1e0,%rsp
  0x000000010f819ceb: pop    %rbp
  0x000000010f819cec: test   %eax,-0x8d7ebf2(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f819cf2: retq   
  0x000000010f819cf3: mov    0xf0(%rsp),%rsi
  0x000000010f819cfb: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f819d05: addq   $0x1,0xdc0(%rdx)
  0x000000010f819d0d: mov    $0x1000005,%edx
  0x000000010f819d12: mov    0xf0(%rsp),%rsi    ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@822 (line 893)

  0x000000010f819d1a: nop
  0x000000010f819d1b: nop
  0x000000010f819d1c: nop
  0x000000010f819d1d: nop
  0x000000010f819d1e: nop
  0x000000010f819d1f: callq  0x000000010f7170a0  ; OopMap{off=17668}
                                                ;*invokespecial push
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@822 (line 893)
                                                ;   {optimized virtual_call}
  0x000000010f819d24: movabs $0x10eda9988,%rdx  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f819d2e: incl   0xdd0(%rdx)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@825 (line 894)

  0x000000010f819d34: add    $0x1e0,%rsp
  0x000000010f819d3b: pop    %rbp
  0x000000010f819d3c: test   %eax,-0x8d7ec42(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f819d42: retq                      ;*return
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2251 (line 1298)

  0x000000010f819d43: nopl   0x0(%rax,%rax,1)
  0x000000010f819d48: jmpq   0x000000010f81a1b8  ;   {no_reloc}
  0x000000010f819d4d: add    %al,(%rax)
  0x000000010f819d4f: add    %al,(%rax)
  0x000000010f819d51: add    %ch,%cl
  0x000000010f819d53: imul   $0x0,(%rax,%rax,1),%eax  ;*new
                                                ; - java.lang.String::charAt@13 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2135 (line 1277)

  0x000000010f819d57: mov    %rax,%rdx
  0x000000010f819d5a: movabs $0x10ebeb488,%rsi  ;   {metadata(method data for {method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f819d64: addq   $0x1,0x148(%rsi)
  0x000000010f819d6c: mov    $0x0,%edx
  0x000000010f819d71: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2135 (line 1277)

  0x000000010f819d74: mov    %rax,0x1a8(%rsp)
  0x000000010f819d7c: nop
  0x000000010f819d7d: nop
  0x000000010f819d7e: nop
  0x000000010f819d7f: callq  0x000000010f7170a0  ; OopMap{[240]=Oop [304]=Oop [424]=Oop [272]=Oop off=17764}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2135 (line 1277)
                                                ;   {optimized virtual_call}
  0x000000010f819d84: mov    0x1a8(%rsp),%rax
  0x000000010f819d8c: jmpq   0x000000010f81a26c  ;*athrow
                                                ; - java.lang.String::charAt@21 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2135 (line 1277)

  0x000000010f819d91: nopl   0x0(%rax)
  0x000000010f819d98: jmpq   0x000000010f81a1de  ;   {no_reloc}
  0x000000010f819d9d: add    %al,(%rax)
  0x000000010f819d9f: add    %al,(%rax)
  0x000000010f819da1: add    %ch,%cl
  0x000000010f819da3: rex.B add $0x0,%al
  0x000000010f819da6: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2202 (line 1286)

  0x000000010f819da9: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f819dac: mov    %dh,0x10e(%rsi,%rdi,4)
  0x000000010f819db3: add    %cl,-0x7d(%rax)
  0x000000010f819db6: xchg   %cl,0x1(%rax)
  0x000000010f819db9: add    %al,(%rax)
  0x000000010f819dbb: add    %edi,0x0(%rdx)
  0x000000010f819dc1: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2202 (line 1286)

  0x000000010f819dc4: mov    %rax,0x1b0(%rsp)
  0x000000010f819dcc: nop
  0x000000010f819dcd: nop
  0x000000010f819dce: nop
  0x000000010f819dcf: callq  0x000000010f7170a0  ; OopMap{[272]=Oop [240]=Oop [288]=Oop [432]=Oop off=17844}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2202 (line 1286)
                                                ;   {optimized virtual_call}
  0x000000010f819dd4: mov    0x1b0(%rsp),%rax
  0x000000010f819ddc: jmpq   0x000000010f81a26c  ;*athrow
                                                ; - java.lang.String::charAt@21 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2202 (line 1286)

  0x000000010f819de1: mov    %eax,0x1c0(%rsp)
  0x000000010f819de8: jmpq   0x000000010f81a204  ;   {no_reloc}
  0x000000010f819ded: add    %al,(%rax)
  0x000000010f819def: add    %al,(%rax)
  0x000000010f819df1: add    %ch,%cl
  0x000000010f819df3: (bad)  
  0x000000010f819df4: add    $0x0,%al
  0x000000010f819df6: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1931 (line 1231)

  0x000000010f819df9: rorb   -0x45(%rax)        ;   {metadata(method data for {method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f819dfc: mov    %dh,0x10e(%rsi,%rdi,4)
  0x000000010f819e03: add    %cl,-0x7d(%rax)
  0x000000010f819e06: orl    $0x0,0x1(%rax)
  0x000000010f819e0a: add    %al,(%rcx)
  0x000000010f819e0c: mov    $0x0,%edx
  0x000000010f819e11: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1931 (line 1231)

  0x000000010f819e14: mov    %rax,0x1b8(%rsp)
  0x000000010f819e1c: nop
  0x000000010f819e1d: nop
  0x000000010f819e1e: nop
  0x000000010f819e1f: callq  0x000000010f7170a0  ; OopMap{[240]=Oop [440]=Oop [272]=Oop [264]=Oop off=17924}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1931 (line 1231)
                                                ;   {optimized virtual_call}
  0x000000010f819e24: mov    0x1b8(%rsp),%rax
  0x000000010f819e2c: jmpq   0x000000010f81a26c  ;*athrow
                                                ; - java.lang.String::charAt@21 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1931 (line 1231)

  0x000000010f819e31: nopl   0x0(%rax)
  0x000000010f819e38: jmpq   0x000000010f81a22a  ;   {no_reloc}
  0x000000010f819e3d: add    %al,(%rax)
  0x000000010f819e3f: add    %al,(%rax)
  0x000000010f819e41: add    %cl,-0x75(%rcx)
  0x000000010f819e44: rex.RXB (bad) 
  0x000000010f819e46: lea    0x20(%rax),%rdi
  0x000000010f819e4a: cmp    0x70(%r15),%rdi
  0x000000010f819e4e: ja     0x000000010f81a234
  0x000000010f819e54: mov    %rdi,0x60(%r15)
  0x000000010f819e58: mov    0xa8(%rdx),%rcx
  0x000000010f819e5f: mov    %rcx,(%rax)
  0x000000010f819e62: mov    %rdx,%rcx
  0x000000010f819e65: shr    $0x3,%rcx
  0x000000010f819e69: mov    %ecx,0x8(%rax)
  0x000000010f819e6c: xor    %rcx,%rcx
  0x000000010f819e6f: mov    %ecx,0xc(%rax)
  0x000000010f819e72: xor    %rcx,%rcx
  0x000000010f819e75: mov    %rcx,0x10(%rax)
  0x000000010f819e79: mov    %rcx,0x18(%rax)    ;*new  ; - jdk.internal.org.objectweb.asm.Frame::execute@1826 (line 1207)

  0x000000010f819e7d: mov    %rax,%rdx
  0x000000010f819e80: movabs $0x10eda9988,%rsi  ;   {metadata(method data for {method} {0x000000010ed89b78} 'execute' '(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f819e8a: addq   $0x1,0x1c08(%rsi)
  0x000000010f819e92: movabs $0x795968d68,%rdx  ;   {oop("JSR/RET are not supported with computeFrames option")}
  0x000000010f819e9c: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1832 (line 1207)

  0x000000010f819e9f: mov    %rax,0x1c8(%rsp)
  0x000000010f819ea7: callq  0x000000010f7170a0  ; OopMap{[456]=Oop off=18060}
                                                ;*invokespecial <init>
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1832 (line 1207)
                                                ;   {optimized virtual_call}
  0x000000010f819eac: mov    0x1c8(%rsp),%rax
  0x000000010f819eb4: jmpq   0x000000010f81a26c
  0x000000010f819eb9: mov    %rdi,0x8(%rsp)
  0x000000010f819ebe: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f819ec6: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [240]=Oop r8=Oop [272]=Oop r9=Oop [264]=Oop off=18091}
                                                ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@-1 (line 880)
                                                ;   {runtime_call}
  0x000000010f819ecb: jmpq   0x000000010f8158a7
  0x000000010f819ed0: callq  0x000000010f7cd0c0  ; OopMap{[272]=Oop r9=Oop [264]=Oop [240]=Oop off=18101}
                                                ;*getfield strVal3
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1899 (line 1227)
                                                ;   {runtime_call}
  0x000000010f819ed5: callq  0x000000010f7cd0c0  ; OopMap{[240]=Oop [272]=Oop r9=Oop [264]=Oop rdx=Oop off=18106}
                                                ;*invokevirtual charAt
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1931 (line 1231)
                                                ;   {runtime_call}
  0x000000010f819eda: mov    %rsi,0x8(%rsp)
  0x000000010f819edf: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f819ee7: callq  0x000000010f7d1a20  ; OopMap{[240]=Oop [272]=Oop r9=Oop [264]=Oop rdx=Oop off=18124}
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1931 (line 1231)
                                                ;   {runtime_call}
  0x000000010f819eec: jmpq   0x000000010f81634c
  0x000000010f819ef1: callq  0x000000010f7cd0c0  ; OopMap{[240]=Oop [272]=Oop r9=Oop [264]=Oop rdx=Oop off=18134}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1931 (line 1231)
                                                ;   {runtime_call}
  0x000000010f819ef6: movq   $0x0,(%rsp)
  0x000000010f819efe: callq  0x000000010f7cca00  ; OopMap{[240]=Oop [272]=Oop r9=Oop [264]=Oop rdx=Oop off=18147}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1931 (line 1231)
                                                ;   {runtime_call}
  0x000000010f819f03: mov    %rsi,0x8(%rsp)
  0x000000010f819f08: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f819f10: callq  0x000000010f7d1a20  ; OopMap{[240]=Oop [272]=Oop rdx=Oop off=18165}
                                                ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@-1 (line 635)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1952 (line 1235)
                                                ;   {runtime_call}
  0x000000010f819f15: jmpq   0x000000010f816478
  0x000000010f819f1a: callq  0x000000010f7cd0c0  ; OopMap{[272]=Oop [240]=Oop off=18175}
                                                ;*getfield strVal1
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2245 (line 1295)
                                                ;   {runtime_call}
  0x000000010f819f1f: mov    %rsi,0x8(%rsp)
  0x000000010f819f24: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f819f2c: callq  0x000000010f7d1a20  ; OopMap{[272]=Oop [240]=Oop rdx=Oop off=18193}
                                                ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@-1 (line 635)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2248 (line 1295)
                                                ;   {runtime_call}
  0x000000010f819f31: jmpq   0x000000010f816650
  0x000000010f819f36: callq  0x000000010f7cd0c0  ; OopMap{[272]=Oop [240]=Oop off=18203}
                                                ;*getfield strVal1
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2189 (line 1284)
                                                ;   {runtime_call}
  0x000000010f819f3b: callq  0x000000010f7cd0c0  ; OopMap{[272]=Oop [240]=Oop rdi=Oop [288]=Oop off=18208}
                                                ;*invokevirtual charAt
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2202 (line 1286)
                                                ;   {runtime_call}
  0x000000010f819f40: mov    %rsi,0x8(%rsp)
  0x000000010f819f45: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f819f4d: callq  0x000000010f7d1a20  ; OopMap{[272]=Oop [240]=Oop rdi=Oop [288]=Oop off=18226}
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2202 (line 1286)
                                                ;   {runtime_call}
  0x000000010f819f52: jmpq   0x000000010f8168a9
  0x000000010f819f57: callq  0x000000010f7cd0c0  ; OopMap{[272]=Oop [240]=Oop rdi=Oop [288]=Oop rsi=Oop off=18236}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2202 (line 1286)
                                                ;   {runtime_call}
  0x000000010f819f5c: movq   $0x0,(%rsp)
  0x000000010f819f64: callq  0x000000010f7cca00  ; OopMap{[272]=Oop [240]=Oop rdi=Oop [288]=Oop rsi=Oop off=18249}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2202 (line 1286)
                                                ;   {runtime_call}
  0x000000010f819f69: mov    %rsi,0x8(%rsp)
  0x000000010f819f6e: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f819f76: callq  0x000000010f7d1a20  ; OopMap{[272]=Oop [240]=Oop rdi=Oop [288]=Oop off=18267}
                                                ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@-1 (line 635)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2214 (line 1287)
                                                ;   {runtime_call}
  0x000000010f819f7b: jmpq   0x000000010f816998
  0x000000010f819f80: callq  0x000000010f7cd0c0  ; OopMap{[272]=Oop [240]=Oop off=18277}
                                                ;*getfield strVal1
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2122 (line 1275)
                                                ;   {runtime_call}
  0x000000010f819f85: callq  0x000000010f7cd0c0  ; OopMap{[272]=Oop [240]=Oop rdi=Oop [304]=Oop off=18282}
                                                ;*invokevirtual charAt
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2135 (line 1277)
                                                ;   {runtime_call}
  0x000000010f819f8a: mov    %rdx,0x8(%rsp)
  0x000000010f819f8f: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f819f97: callq  0x000000010f7d1a20  ; OopMap{[272]=Oop [240]=Oop rdi=Oop [304]=Oop off=18300}
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2135 (line 1277)
                                                ;   {runtime_call}
  0x000000010f819f9c: jmpq   0x000000010f816be9
  0x000000010f819fa1: callq  0x000000010f7cd0c0  ; OopMap{[272]=Oop [240]=Oop rdi=Oop [304]=Oop rdx=Oop off=18310}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2135 (line 1277)
                                                ;   {runtime_call}
  0x000000010f819fa6: movq   $0x0,(%rsp)
  0x000000010f819fae: callq  0x000000010f7cca00  ; OopMap{[272]=Oop [240]=Oop rdi=Oop [304]=Oop rdx=Oop off=18323}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2135 (line 1277)
                                                ;   {runtime_call}
  0x000000010f819fb3: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f819fbd: mov    $0xa050f00,%eax
  0x000000010f819fc2: callq  0x000000010f7d08e0  ; OopMap{[272]=Oop [240]=Oop [304]=Oop off=18343}
                                                ;*new  ; - jdk.internal.org.objectweb.asm.Frame::execute@2145 (line 1278)
                                                ;   {runtime_call}
  0x000000010f819fc7: jmpq   0x000000010f816c90
  0x000000010f819fcc: mov    %rdx,%rdx
  0x000000010f819fcf: callq  0x000000010f7cd820  ; OopMap{[272]=Oop [240]=Oop [304]=Oop off=18356}
                                                ;*new  ; - jdk.internal.org.objectweb.asm.Frame::execute@2145 (line 1278)
                                                ;   {runtime_call}
  0x000000010f819fd4: jmpq   0x000000010f816cd1
  0x000000010f819fd9: mov    %rbx,0x8(%rsp)
  0x000000010f819fde: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f819fe6: callq  0x000000010f7d1a20  ; OopMap{[272]=Oop [240]=Oop [304]=Oop rax=Oop [320]=Oop off=18379}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::<init>@-1 (line 89)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2149 (line 1278)
                                                ;   {runtime_call}
  0x000000010f819feb: jmpq   0x000000010f816d20
  0x000000010f819ff0: mov    %rbx,0x8(%rsp)
  0x000000010f819ff5: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f819ffd: callq  0x000000010f7d1a20  ; OopMap{[272]=Oop [240]=Oop [304]=Oop rax=Oop [320]=Oop off=18402}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::<init>@-1 (line 67)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2149 (line 1278)
                                                ;   {runtime_call}
  0x000000010f81a002: jmpq   0x000000010f816d67
  0x000000010f81a007: mov    %rbx,0x8(%rsp)
  0x000000010f81a00c: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f81a014: callq  0x000000010f7d1a20  ; OopMap{[272]=Oop [240]=Oop [304]=Oop rax=Oop [320]=Oop off=18425}
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::<init>@1 (line 67)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2149 (line 1278)
                                                ;   {runtime_call}
  0x000000010f81a019: jmpq   0x000000010f816dae
  0x000000010f81a01e: callq  0x000000010f7ce120  ; OopMap{[272]=Oop [240]=Oop [304]=Oop r9=Oop [320]=Oop off=18435}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::<init>@6 (line 68)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2149 (line 1278)
                                                ;   {runtime_call}
  0x000000010f81a023: jmpq   0x000000010f816e2d
  0x000000010f81a028: mov    %rdx,0x8(%rsp)
  0x000000010f81a02d: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f81a035: callq  0x000000010f7d1a20  ; OopMap{[272]=Oop [240]=Oop [304]=Oop r9=Oop [320]=Oop off=18458}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 202)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2154 (line 1278)
                                                ;   {runtime_call}
  0x000000010f81a03a: jmpq   0x000000010f816f0f
  0x000000010f81a03f: mov    %rdx,0x8(%rsp)
  0x000000010f81a044: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f81a04c: callq  0x000000010f7d1a20  ; OopMap{[272]=Oop [240]=Oop [304]=Oop r9=Oop [320]=Oop off=18481}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2154 (line 1278)
                                                ;   {runtime_call}
  0x000000010f81a051: jmpq   0x000000010f816f56
  0x000000010f81a056: mov    %rsi,0x8(%rsp)
  0x000000010f81a05b: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f81a063: callq  0x000000010f7d1a20  ; OopMap{[272]=Oop [240]=Oop [304]=Oop r9=Oop [320]=Oop off=18504}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2154 (line 1278)
                                                ;   {runtime_call}
  0x000000010f81a068: jmpq   0x000000010f816fa3
  0x000000010f81a06d: mov    %rbx,0x8(%rsp)
  0x000000010f81a072: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f81a07a: callq  0x000000010f7d1a20  ; OopMap{[272]=Oop [240]=Oop [320]=Oop [304]=Oop [312]=Oop off=18527}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2154 (line 1278)
                                                ;   {runtime_call}
  0x000000010f81a07f: jmpq   0x000000010f817063
  0x000000010f81a084: callq  0x000000010f7ce120  ; OopMap{[272]=Oop [240]=Oop [320]=Oop [304]=Oop [312]=Oop off=18537}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2154 (line 1278)
                                                ;   {runtime_call}
  0x000000010f81a089: jmpq   0x000000010f8170dd
  0x000000010f81a08e: callq  0x000000010f7cd0c0  ; OopMap{[272]=Oop [240]=Oop [320]=Oop [304]=Oop rax=Oop rbx=Oop off=18547}
                                                ;*arraylength
                                                ; - java.util.Arrays::copyOf@9 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2154 (line 1278)
                                                ;   {runtime_call}
  0x000000010f81a093: mov    %rdx,0x8(%rsp)
  0x000000010f81a098: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f81a0a0: callq  0x000000010f7d1a20  ; OopMap{[272]=Oop [240]=Oop [320]=Oop [304]=Oop rax=Oop rbx=Oop off=18565}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2154 (line 1278)
                                                ;   {runtime_call}
  0x000000010f81a0a5: jmpq   0x000000010f81712c
  0x000000010f81a0aa: nop
  0x000000010f81a0ab: nop
  0x000000010f81a0ac: nop
  0x000000010f81a0ad: nop
  0x000000010f81a0ae: nop
  0x000000010f81a0af: callq  0x000000010f717520  ; OopMap{[272]=Oop [240]=Oop [320]=Oop [304]=Oop [328]=Oop off=18580}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2154 (line 1278)
                                                ;   {static_call}
  0x000000010f81a0b4: jmpq   0x000000010f81720a
  0x000000010f81a0b9: callq  0x000000010f7cd0c0  ; OopMap{[272]=Oop [240]=Oop [304]=Oop rdi=Oop [320]=Oop rdx=Oop off=18590}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2154 (line 1278)
                                                ;   {runtime_call}
  0x000000010f81a0be: callq  0x000000010f7cd0c0  ; OopMap{[272]=Oop [240]=Oop [304]=Oop rdi=Oop [320]=Oop rdx=Oop off=18595}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2154 (line 1278)
                                                ;   {runtime_call}
  0x000000010f81a0c3: mov    %rsi,(%rsp)
  0x000000010f81a0c7: callq  0x000000010f7cca00  ; OopMap{[272]=Oop [240]=Oop [304]=Oop rdi=Oop [320]=Oop rdx=Oop off=18604}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2154 (line 1278)
                                                ;   {runtime_call}
  0x000000010f81a0cc: mov    %rdx,0x8(%rsp)
  0x000000010f81a0d1: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f81a0d9: callq  0x000000010f7d1a20  ; OopMap{[272]=Oop [240]=Oop [304]=Oop rdi=Oop [320]=Oop off=18622}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2159 (line 1278)
                                                ;   {runtime_call}
  0x000000010f81a0de: jmpq   0x000000010f817324
  0x000000010f81a0e3: mov    %rdx,0x8(%rsp)
  0x000000010f81a0e8: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f81a0f0: callq  0x000000010f7d1a20  ; OopMap{[272]=Oop [240]=Oop [320]=Oop off=18645}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2162 (line 1278)
                                                ;   {runtime_call}
  0x000000010f81a0f5: jmpq   0x000000010f817413
  0x000000010f81a0fa: mov    %rdx,%rdx
  0x000000010f81a0fd: callq  0x000000010f7cd820  ; OopMap{[272]=Oop [240]=Oop [320]=Oop off=18658}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2162 (line 1278)
                                                ;   {runtime_call}
  0x000000010f81a102: jmpq   0x000000010f817454
  0x000000010f81a107: mov    %rsi,0x8(%rsp)
  0x000000010f81a10c: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f81a114: callq  0x000000010f7d1a20  ; OopMap{[272]=Oop [240]=Oop [336]=Oop off=18681}
                                                ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@-1 (line 635)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2165 (line 1278)
                                                ;   {runtime_call}
  0x000000010f81a119: jmpq   0x000000010f8174e0
  0x000000010f81a11e: callq  0x000000010f7cd0c0  ; OopMap{[240]=Oop r9=Oop [264]=Oop [272]=Oop off=18691}
                                                ;*getfield strVal2
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1961 (line 1238)
                                                ;   {runtime_call}
  0x000000010f81a123: mov    %rsi,0x8(%rsp)
  0x000000010f81a128: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f81a130: callq  0x000000010f7d1a20  ; OopMap{[240]=Oop [272]=Oop rdx=Oop off=18709}
                                                ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@-1 (line 635)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1974 (line 1239)
                                                ;   {runtime_call}
  0x000000010f81a135: jmpq   0x000000010f817738
  0x000000010f81a13a: callq  0x000000010f7cd0c0  ; OopMap{[272]=Oop [240]=Oop off=18719}
                                                ;*getfield strVal3
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1870 (line 1217)
                                                ;   {runtime_call}
  0x000000010f81a13f: mov    %rsi,0x8(%rsp)
  0x000000010f81a144: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f81a14c: callq  0x000000010f7d1a20  ; OopMap{[272]=Oop [240]=Oop rdx=Oop off=18737}
                                                ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@-1 (line 635)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1873 (line 1217)
                                                ;   {runtime_call}
  0x000000010f81a151: jmpq   0x000000010f817910
  0x000000010f81a156: callq  0x000000010f7cd0c0  ; OopMap{[272]=Oop [240]=Oop off=18747}
                                                ;*getfield strVal3
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1840 (line 1210)
                                                ;   {runtime_call}
  0x000000010f81a15b: mov    %rsi,0x8(%rsp)
  0x000000010f81a160: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f81a168: callq  0x000000010f7d1a20  ; OopMap{[272]=Oop [240]=Oop rdx=Oop off=18765}
                                                ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@-1 (line 635)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1843 (line 1210)
                                                ;   {runtime_call}
  0x000000010f81a16d: jmpq   0x000000010f817aad
  0x000000010f81a172: callq  0x000000010f7cd0c0  ; OopMap{[272]=Oop [240]=Oop off=18775}
                                                ;*getfield type
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@878 (line 926)
                                                ;   {runtime_call}
  0x000000010f81a177: callq  0x000000010f7cd0c0  ; OopMap{[240]=Oop r8=Oop [272]=Oop off=18780}
                                                ;*invokevirtual addType
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1054 (line 952)
                                                ;   {runtime_call}
  0x000000010f81a17c: callq  0x000000010f7cd0c0  ; OopMap{r8=Oop [272]=Oop [240]=Oop off=18785}
                                                ;*invokevirtual addType
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1038 (line 948)
                                                ;   {runtime_call}
  0x000000010f81a181: callq  0x000000010f7cd0c0  ; OopMap{r8=Oop [272]=Oop [240]=Oop off=18790}
                                                ;*invokevirtual addType
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1022 (line 945)
                                                ;   {runtime_call}
  0x000000010f81a186: callq  0x000000010f7cd0c0  ; OopMap{r8=Oop [272]=Oop [240]=Oop off=18795}
                                                ;*invokevirtual addType
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1006 (line 942)
                                                ;   {runtime_call}
  0x000000010f81a18b: callq  0x000000010f7cd0c0  ; OopMap{[304]=Oop r8=Oop [272]=Oop [240]=Oop off=18800}
                                                ;*invokevirtual addType
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2177 (line 1280)
                                                ;   {runtime_call}
  0x000000010f81a190: callq  0x000000010f7cd0c0  ; OopMap{rdi=Oop [288]=Oop r8=Oop [272]=Oop [240]=Oop off=18805}
                                                ;*invokevirtual addType
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2226 (line 1289)
                                                ;   {runtime_call}
  0x000000010f81a195: callq  0x000000010f7cd0c0  ; OopMap{r8=Oop [272]=Oop [240]=Oop off=18810}
                                                ;*getfield strVal1
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1986 (line 1242)
                                                ;   {runtime_call}
  0x000000010f81a19a: callq  0x000000010f7cd0c0  ; OopMap{r8=Oop [272]=Oop [240]=Oop rdx=Oop off=18815}
                                                ;*invokevirtual addUninitializedType
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1990 (line 1242)
                                                ;   {runtime_call}
  0x000000010f81a19f: callq  0x000000010f7cd0c0  ; OopMap{[240]=Oop off=18820}
                                                ;*getfield strVal3
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1882 (line 1220)
                                                ;   {runtime_call}
  0x000000010f81a1a4: callq  0x000000010f7cd0c0  ; OopMap{[240]=Oop off=18825}
                                                ;*getfield strVal3
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1852 (line 1213)
                                                ;   {runtime_call}
  0x000000010f81a1a9: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f81a1b3: mov    $0xa050f00,%eax
  0x000000010f81a1b8: callq  0x000000010f7d08e0  ; OopMap{[304]=Oop [272]=Oop [240]=Oop off=18845}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2135 (line 1277)
                                                ;   {runtime_call}
  0x000000010f81a1bd: jmpq   0x000000010f819d48
  0x000000010f81a1c2: mov    %rdx,%rdx
  0x000000010f81a1c5: callq  0x000000010f7cd560  ; OopMap{[304]=Oop [272]=Oop [240]=Oop off=18858}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2135 (line 1277)
                                                ;   {runtime_call}
  0x000000010f81a1ca: jmpq   0x000000010f819d57
  0x000000010f81a1cf: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f81a1d9: mov    $0xa050f00,%eax
  0x000000010f81a1de: callq  0x000000010f7d08e0  ; OopMap{[288]=Oop [272]=Oop [240]=Oop off=18883}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2202 (line 1286)
                                                ;   {runtime_call}
  0x000000010f81a1e3: jmpq   0x000000010f819d98
  0x000000010f81a1e8: mov    %rdx,%rdx
  0x000000010f81a1eb: callq  0x000000010f7cd560  ; OopMap{[288]=Oop [272]=Oop [240]=Oop off=18896}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@2202 (line 1286)
                                                ;   {runtime_call}
  0x000000010f81a1f0: jmpq   0x000000010f819da7
  0x000000010f81a1f5: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f81a1ff: mov    $0xa050f00,%eax
  0x000000010f81a204: callq  0x000000010f7d08e0  ; OopMap{[240]=Oop [264]=Oop [272]=Oop off=18921}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1931 (line 1231)
                                                ;   {runtime_call}
  0x000000010f81a209: jmpq   0x000000010f819de8
  0x000000010f81a20e: mov    %rdx,%rdx
  0x000000010f81a211: callq  0x000000010f7cd560  ; OopMap{[240]=Oop [264]=Oop [272]=Oop off=18934}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Frame::execute@1931 (line 1231)
                                                ;   {runtime_call}
  0x000000010f81a216: jmpq   0x000000010f819df7
  0x000000010f81a21b: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f81a225: mov    $0xa050f00,%eax
  0x000000010f81a22a: callq  0x000000010f7d08e0  ; OopMap{off=18959}
                                                ;*new  ; - jdk.internal.org.objectweb.asm.Frame::execute@1826 (line 1207)
                                                ;   {runtime_call}
  0x000000010f81a22f: jmpq   0x000000010f819e38
  0x000000010f81a234: mov    %rdx,%rdx
  0x000000010f81a237: callq  0x000000010f7cd820  ; OopMap{off=18972}
                                                ;*new  ; - jdk.internal.org.objectweb.asm.Frame::execute@1826 (line 1207)
                                                ;   {runtime_call}
  0x000000010f81a23c: jmpq   0x000000010f819e7d
  0x000000010f81a241: nop
  0x000000010f81a242: nop
  0x000000010f81a243: mov    0x2a8(%r15),%rax
  0x000000010f81a24a: movabs $0x0,%r10
  0x000000010f81a254: mov    %r10,0x2a8(%r15)
  0x000000010f81a25b: movabs $0x0,%r10
  0x000000010f81a265: mov    %r10,0x2b0(%r15)
  0x000000010f81a26c: add    $0x1e0,%rsp
  0x000000010f81a273: pop    %rbp
  0x000000010f81a274: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f81a279: hlt    
  0x000000010f81a27a: hlt    
  0x000000010f81a27b: hlt    
  0x000000010f81a27c: hlt    
  0x000000010f81a27d: hlt    
  0x000000010f81a27e: hlt    
  0x000000010f81a27f: hlt    
[Stub Code]
  0x000000010f81a280: nop                       ;   {no_reloc}
  0x000000010f81a281: nop
  0x000000010f81a282: nop
  0x000000010f81a283: nop
  0x000000010f81a284: nop
  0x000000010f81a285: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a28f: jmpq   0x000000010f81a28f  ;   {runtime_call}
  0x000000010f81a294: nop
  0x000000010f81a295: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a29f: jmpq   0x000000010f81a29f  ;   {runtime_call}
  0x000000010f81a2a4: nop
  0x000000010f81a2a5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a2af: jmpq   0x000000010f81a2af  ;   {runtime_call}
  0x000000010f81a2b4: nop
  0x000000010f81a2b5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a2bf: jmpq   0x000000010f81a2bf  ;   {runtime_call}
  0x000000010f81a2c4: nop
  0x000000010f81a2c5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a2cf: jmpq   0x000000010f81a2cf  ;   {runtime_call}
  0x000000010f81a2d4: nop
  0x000000010f81a2d5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a2df: jmpq   0x000000010f81a2df  ;   {runtime_call}
  0x000000010f81a2e4: nop
  0x000000010f81a2e5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a2ef: jmpq   0x000000010f81a2ef  ;   {runtime_call}
  0x000000010f81a2f4: nop
  0x000000010f81a2f5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a2ff: jmpq   0x000000010f81a2ff  ;   {runtime_call}
  0x000000010f81a304: nop
  0x000000010f81a305: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a30f: jmpq   0x000000010f81a30f  ;   {runtime_call}
  0x000000010f81a314: nop
  0x000000010f81a315: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a31f: jmpq   0x000000010f81a31f  ;   {runtime_call}
  0x000000010f81a324: nop
  0x000000010f81a325: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a32f: jmpq   0x000000010f81a32f  ;   {runtime_call}
  0x000000010f81a334: nop
  0x000000010f81a335: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a33f: jmpq   0x000000010f81a33f  ;   {runtime_call}
  0x000000010f81a344: nop
  0x000000010f81a345: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a34f: jmpq   0x000000010f81a34f  ;   {runtime_call}
  0x000000010f81a354: nop
  0x000000010f81a355: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a35f: jmpq   0x000000010f81a35f  ;   {runtime_call}
  0x000000010f81a364: nop
  0x000000010f81a365: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a36f: jmpq   0x000000010f81a36f  ;   {runtime_call}
  0x000000010f81a374: nop
  0x000000010f81a375: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a37f: jmpq   0x000000010f81a37f  ;   {runtime_call}
  0x000000010f81a384: nop
  0x000000010f81a385: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a38f: jmpq   0x000000010f81a38f  ;   {runtime_call}
  0x000000010f81a394: nop
  0x000000010f81a395: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a39f: jmpq   0x000000010f81a39f  ;   {runtime_call}
  0x000000010f81a3a4: nop
  0x000000010f81a3a5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a3af: jmpq   0x000000010f81a3af  ;   {runtime_call}
  0x000000010f81a3b4: nop
  0x000000010f81a3b5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a3bf: jmpq   0x000000010f81a3bf  ;   {runtime_call}
  0x000000010f81a3c4: nop
  0x000000010f81a3c5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a3cf: jmpq   0x000000010f81a3cf  ;   {runtime_call}
  0x000000010f81a3d4: nop
  0x000000010f81a3d5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a3df: jmpq   0x000000010f81a3df  ;   {runtime_call}
  0x000000010f81a3e4: nop
  0x000000010f81a3e5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a3ef: jmpq   0x000000010f81a3ef  ;   {runtime_call}
  0x000000010f81a3f4: nop
  0x000000010f81a3f5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a3ff: jmpq   0x000000010f81a3ff  ;   {runtime_call}
  0x000000010f81a404: nop
  0x000000010f81a405: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a40f: jmpq   0x000000010f81a40f  ;   {runtime_call}
  0x000000010f81a414: nop
  0x000000010f81a415: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a41f: jmpq   0x000000010f81a41f  ;   {runtime_call}
  0x000000010f81a424: nop
  0x000000010f81a425: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a42f: jmpq   0x000000010f81a42f  ;   {runtime_call}
  0x000000010f81a434: nop
  0x000000010f81a435: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a43f: jmpq   0x000000010f81a43f  ;   {runtime_call}
  0x000000010f81a444: nop
  0x000000010f81a445: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a44f: jmpq   0x000000010f81a44f  ;   {runtime_call}
  0x000000010f81a454: nop
  0x000000010f81a455: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a45f: jmpq   0x000000010f81a45f  ;   {runtime_call}
  0x000000010f81a464: nop
  0x000000010f81a465: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a46f: jmpq   0x000000010f81a46f  ;   {runtime_call}
  0x000000010f81a474: nop
  0x000000010f81a475: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a47f: jmpq   0x000000010f81a47f  ;   {runtime_call}
  0x000000010f81a484: nop
  0x000000010f81a485: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a48f: jmpq   0x000000010f81a48f  ;   {runtime_call}
  0x000000010f81a494: nop
  0x000000010f81a495: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a49f: jmpq   0x000000010f81a49f  ;   {runtime_call}
  0x000000010f81a4a4: nop
  0x000000010f81a4a5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a4af: jmpq   0x000000010f81a4af  ;   {runtime_call}
  0x000000010f81a4b4: nop
  0x000000010f81a4b5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a4bf: jmpq   0x000000010f81a4bf  ;   {runtime_call}
  0x000000010f81a4c4: nop
  0x000000010f81a4c5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a4cf: jmpq   0x000000010f81a4cf  ;   {runtime_call}
  0x000000010f81a4d4: nop
  0x000000010f81a4d5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a4df: jmpq   0x000000010f81a4df  ;   {runtime_call}
  0x000000010f81a4e4: nop
  0x000000010f81a4e5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a4ef: jmpq   0x000000010f81a4ef  ;   {runtime_call}
  0x000000010f81a4f4: nop
  0x000000010f81a4f5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a4ff: jmpq   0x000000010f81a4ff  ;   {runtime_call}
  0x000000010f81a504: nop
  0x000000010f81a505: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a50f: jmpq   0x000000010f81a50f  ;   {runtime_call}
  0x000000010f81a514: nop
  0x000000010f81a515: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a51f: jmpq   0x000000010f81a51f  ;   {runtime_call}
  0x000000010f81a524: nop
  0x000000010f81a525: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a52f: jmpq   0x000000010f81a52f  ;   {runtime_call}
  0x000000010f81a534: nop
  0x000000010f81a535: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a53f: jmpq   0x000000010f81a53f  ;   {runtime_call}
  0x000000010f81a544: nop
  0x000000010f81a545: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a54f: jmpq   0x000000010f81a54f  ;   {runtime_call}
  0x000000010f81a554: nop
  0x000000010f81a555: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a55f: jmpq   0x000000010f81a55f  ;   {runtime_call}
  0x000000010f81a564: nop
  0x000000010f81a565: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a56f: jmpq   0x000000010f81a56f  ;   {runtime_call}
  0x000000010f81a574: nop
  0x000000010f81a575: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a57f: jmpq   0x000000010f81a57f  ;   {runtime_call}
  0x000000010f81a584: nop
  0x000000010f81a585: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a58f: jmpq   0x000000010f81a58f  ;   {runtime_call}
  0x000000010f81a594: nop
  0x000000010f81a595: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a59f: jmpq   0x000000010f81a59f  ;   {runtime_call}
  0x000000010f81a5a4: nop
  0x000000010f81a5a5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a5af: jmpq   0x000000010f81a5af  ;   {runtime_call}
  0x000000010f81a5b4: nop
  0x000000010f81a5b5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a5bf: jmpq   0x000000010f81a5bf  ;   {runtime_call}
  0x000000010f81a5c4: nop
  0x000000010f81a5c5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a5cf: jmpq   0x000000010f81a5cf  ;   {runtime_call}
  0x000000010f81a5d4: nop
  0x000000010f81a5d5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a5df: jmpq   0x000000010f81a5df  ;   {runtime_call}
  0x000000010f81a5e4: nop
  0x000000010f81a5e5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a5ef: jmpq   0x000000010f81a5ef  ;   {runtime_call}
  0x000000010f81a5f4: nop
  0x000000010f81a5f5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a5ff: jmpq   0x000000010f81a5ff  ;   {runtime_call}
  0x000000010f81a604: nop
  0x000000010f81a605: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a60f: jmpq   0x000000010f81a60f  ;   {runtime_call}
  0x000000010f81a614: nop
  0x000000010f81a615: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a61f: jmpq   0x000000010f81a61f  ;   {runtime_call}
  0x000000010f81a624: nop
  0x000000010f81a625: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a62f: jmpq   0x000000010f81a62f  ;   {runtime_call}
  0x000000010f81a634: nop
  0x000000010f81a635: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a63f: jmpq   0x000000010f81a63f  ;   {runtime_call}
  0x000000010f81a644: nop
  0x000000010f81a645: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a64f: jmpq   0x000000010f81a64f  ;   {runtime_call}
  0x000000010f81a654: nop
  0x000000010f81a655: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a65f: jmpq   0x000000010f81a65f  ;   {runtime_call}
  0x000000010f81a664: nop
  0x000000010f81a665: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a66f: jmpq   0x000000010f81a66f  ;   {runtime_call}
  0x000000010f81a674: nop
  0x000000010f81a675: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a67f: jmpq   0x000000010f81a67f  ;   {runtime_call}
  0x000000010f81a684: nop
  0x000000010f81a685: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a68f: jmpq   0x000000010f81a68f  ;   {runtime_call}
  0x000000010f81a694: nop
  0x000000010f81a695: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a69f: jmpq   0x000000010f81a69f  ;   {runtime_call}
  0x000000010f81a6a4: nop
  0x000000010f81a6a5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a6af: jmpq   0x000000010f81a6af  ;   {runtime_call}
  0x000000010f81a6b4: nop
  0x000000010f81a6b5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a6bf: jmpq   0x000000010f81a6bf  ;   {runtime_call}
  0x000000010f81a6c4: nop
  0x000000010f81a6c5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a6cf: jmpq   0x000000010f81a6cf  ;   {runtime_call}
  0x000000010f81a6d4: nop
  0x000000010f81a6d5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a6df: jmpq   0x000000010f81a6df  ;   {runtime_call}
  0x000000010f81a6e4: nop
  0x000000010f81a6e5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a6ef: jmpq   0x000000010f81a6ef  ;   {runtime_call}
  0x000000010f81a6f4: nop
  0x000000010f81a6f5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a6ff: jmpq   0x000000010f81a6ff  ;   {runtime_call}
  0x000000010f81a704: nop
  0x000000010f81a705: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a70f: jmpq   0x000000010f81a70f  ;   {runtime_call}
  0x000000010f81a714: nop
  0x000000010f81a715: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a71f: jmpq   0x000000010f81a71f  ;   {runtime_call}
  0x000000010f81a724: nop
  0x000000010f81a725: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a72f: jmpq   0x000000010f81a72f  ;   {runtime_call}
  0x000000010f81a734: nop
  0x000000010f81a735: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a73f: jmpq   0x000000010f81a73f  ;   {runtime_call}
  0x000000010f81a744: nop
  0x000000010f81a745: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a74f: jmpq   0x000000010f81a74f  ;   {runtime_call}
  0x000000010f81a754: nop
  0x000000010f81a755: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a75f: jmpq   0x000000010f81a75f  ;   {runtime_call}
  0x000000010f81a764: nop
  0x000000010f81a765: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a76f: jmpq   0x000000010f81a76f  ;   {runtime_call}
  0x000000010f81a774: nop
  0x000000010f81a775: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a77f: jmpq   0x000000010f81a77f  ;   {runtime_call}
  0x000000010f81a784: nop
  0x000000010f81a785: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a78f: jmpq   0x000000010f81a78f  ;   {runtime_call}
  0x000000010f81a794: nop
  0x000000010f81a795: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a79f: jmpq   0x000000010f81a79f  ;   {runtime_call}
  0x000000010f81a7a4: nop
  0x000000010f81a7a5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a7af: jmpq   0x000000010f81a7af  ;   {runtime_call}
  0x000000010f81a7b4: nop
  0x000000010f81a7b5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a7bf: jmpq   0x000000010f81a7bf  ;   {runtime_call}
  0x000000010f81a7c4: nop
  0x000000010f81a7c5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a7cf: jmpq   0x000000010f81a7cf  ;   {runtime_call}
  0x000000010f81a7d4: nop
  0x000000010f81a7d5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a7df: jmpq   0x000000010f81a7df  ;   {runtime_call}
  0x000000010f81a7e4: nop
  0x000000010f81a7e5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a7ef: jmpq   0x000000010f81a7ef  ;   {runtime_call}
  0x000000010f81a7f4: nop
  0x000000010f81a7f5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a7ff: jmpq   0x000000010f81a7ff  ;   {runtime_call}
  0x000000010f81a804: nop
  0x000000010f81a805: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a80f: jmpq   0x000000010f81a80f  ;   {runtime_call}
  0x000000010f81a814: nop
  0x000000010f81a815: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a81f: jmpq   0x000000010f81a81f  ;   {runtime_call}
  0x000000010f81a824: nop
  0x000000010f81a825: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a82f: jmpq   0x000000010f81a82f  ;   {runtime_call}
  0x000000010f81a834: nop
  0x000000010f81a835: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a83f: jmpq   0x000000010f81a83f  ;   {runtime_call}
  0x000000010f81a844: nop
  0x000000010f81a845: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a84f: jmpq   0x000000010f81a84f  ;   {runtime_call}
  0x000000010f81a854: nop
  0x000000010f81a855: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a85f: jmpq   0x000000010f81a85f  ;   {runtime_call}
  0x000000010f81a864: nop
  0x000000010f81a865: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a86f: jmpq   0x000000010f81a86f  ;   {runtime_call}
  0x000000010f81a874: nop
  0x000000010f81a875: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a87f: jmpq   0x000000010f81a87f  ;   {runtime_call}
  0x000000010f81a884: nop
  0x000000010f81a885: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a88f: jmpq   0x000000010f81a88f  ;   {runtime_call}
  0x000000010f81a894: nop
  0x000000010f81a895: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a89f: jmpq   0x000000010f81a89f  ;   {runtime_call}
  0x000000010f81a8a4: nop
  0x000000010f81a8a5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a8af: jmpq   0x000000010f81a8af  ;   {runtime_call}
  0x000000010f81a8b4: nop
  0x000000010f81a8b5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a8bf: jmpq   0x000000010f81a8bf  ;   {runtime_call}
  0x000000010f81a8c4: nop
  0x000000010f81a8c5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a8cf: jmpq   0x000000010f81a8cf  ;   {runtime_call}
  0x000000010f81a8d4: nop
  0x000000010f81a8d5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a8df: jmpq   0x000000010f81a8df  ;   {runtime_call}
  0x000000010f81a8e4: nop
  0x000000010f81a8e5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a8ef: jmpq   0x000000010f81a8ef  ;   {runtime_call}
  0x000000010f81a8f4: nop
  0x000000010f81a8f5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a8ff: jmpq   0x000000010f81a8ff  ;   {runtime_call}
  0x000000010f81a904: nop
  0x000000010f81a905: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a90f: jmpq   0x000000010f81a90f  ;   {runtime_call}
  0x000000010f81a914: nop
  0x000000010f81a915: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a91f: jmpq   0x000000010f81a91f  ;   {runtime_call}
  0x000000010f81a924: nop
  0x000000010f81a925: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a92f: jmpq   0x000000010f81a92f  ;   {runtime_call}
  0x000000010f81a934: nop
  0x000000010f81a935: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a93f: jmpq   0x000000010f81a93f  ;   {runtime_call}
  0x000000010f81a944: nop
  0x000000010f81a945: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a94f: jmpq   0x000000010f81a94f  ;   {runtime_call}
  0x000000010f81a954: nop
  0x000000010f81a955: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a95f: jmpq   0x000000010f81a95f  ;   {runtime_call}
  0x000000010f81a964: nop
  0x000000010f81a965: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a96f: jmpq   0x000000010f81a96f  ;   {runtime_call}
  0x000000010f81a974: nop
  0x000000010f81a975: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a97f: jmpq   0x000000010f81a97f  ;   {runtime_call}
  0x000000010f81a984: nop
  0x000000010f81a985: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a98f: jmpq   0x000000010f81a98f  ;   {runtime_call}
  0x000000010f81a994: nop
  0x000000010f81a995: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a99f: jmpq   0x000000010f81a99f  ;   {runtime_call}
  0x000000010f81a9a4: nop
  0x000000010f81a9a5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a9af: jmpq   0x000000010f81a9af  ;   {runtime_call}
  0x000000010f81a9b4: nop
  0x000000010f81a9b5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a9bf: jmpq   0x000000010f81a9bf  ;   {runtime_call}
  0x000000010f81a9c4: nop
  0x000000010f81a9c5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a9cf: jmpq   0x000000010f81a9cf  ;   {runtime_call}
  0x000000010f81a9d4: nop
  0x000000010f81a9d5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a9df: jmpq   0x000000010f81a9df  ;   {runtime_call}
  0x000000010f81a9e4: nop
  0x000000010f81a9e5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a9ef: jmpq   0x000000010f81a9ef  ;   {runtime_call}
  0x000000010f81a9f4: nop
  0x000000010f81a9f5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81a9ff: jmpq   0x000000010f81a9ff  ;   {runtime_call}
  0x000000010f81aa04: nop
  0x000000010f81aa05: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81aa0f: jmpq   0x000000010f81aa0f  ;   {runtime_call}
  0x000000010f81aa14: nop
  0x000000010f81aa15: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81aa1f: jmpq   0x000000010f81aa1f  ;   {runtime_call}
  0x000000010f81aa24: nop
  0x000000010f81aa25: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81aa2f: jmpq   0x000000010f81aa2f  ;   {runtime_call}
  0x000000010f81aa34: nop
  0x000000010f81aa35: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81aa3f: jmpq   0x000000010f81aa3f  ;   {runtime_call}
  0x000000010f81aa44: nop
  0x000000010f81aa45: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81aa4f: jmpq   0x000000010f81aa4f  ;   {runtime_call}
  0x000000010f81aa54: nop
  0x000000010f81aa55: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81aa5f: jmpq   0x000000010f81aa5f  ;   {runtime_call}
  0x000000010f81aa64: nop
  0x000000010f81aa65: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81aa6f: jmpq   0x000000010f81aa6f  ;   {runtime_call}
  0x000000010f81aa74: nop
  0x000000010f81aa75: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81aa7f: jmpq   0x000000010f81aa7f  ;   {runtime_call}
  0x000000010f81aa84: nop
  0x000000010f81aa85: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81aa8f: jmpq   0x000000010f81aa8f  ;   {runtime_call}
  0x000000010f81aa94: nop
  0x000000010f81aa95: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81aa9f: jmpq   0x000000010f81aa9f  ;   {runtime_call}
  0x000000010f81aaa4: nop
  0x000000010f81aaa5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81aaaf: jmpq   0x000000010f81aaaf  ;   {runtime_call}
  0x000000010f81aab4: nop
  0x000000010f81aab5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81aabf: jmpq   0x000000010f81aabf  ;   {runtime_call}
  0x000000010f81aac4: nop
  0x000000010f81aac5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81aacf: jmpq   0x000000010f81aacf  ;   {runtime_call}
  0x000000010f81aad4: nop
  0x000000010f81aad5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81aadf: jmpq   0x000000010f81aadf  ;   {runtime_call}
  0x000000010f81aae4: nop
  0x000000010f81aae5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81aaef: jmpq   0x000000010f81aaef  ;   {runtime_call}
  0x000000010f81aaf4: nop
  0x000000010f81aaf5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81aaff: jmpq   0x000000010f81aaff  ;   {runtime_call}
  0x000000010f81ab04: nop
  0x000000010f81ab05: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81ab0f: jmpq   0x000000010f81ab0f  ;   {runtime_call}
  0x000000010f81ab14: nop
  0x000000010f81ab15: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81ab1f: jmpq   0x000000010f81ab1f  ;   {runtime_call}
  0x000000010f81ab24: nop
  0x000000010f81ab25: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81ab2f: jmpq   0x000000010f81ab2f  ;   {runtime_call}
  0x000000010f81ab34: nop
  0x000000010f81ab35: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81ab3f: jmpq   0x000000010f81ab3f  ;   {runtime_call}
  0x000000010f81ab44: nop
  0x000000010f81ab45: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81ab4f: jmpq   0x000000010f81ab4f  ;   {runtime_call}
  0x000000010f81ab54: nop
  0x000000010f81ab55: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81ab5f: jmpq   0x000000010f81ab5f  ;   {runtime_call}
  0x000000010f81ab64: nop
  0x000000010f81ab65: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81ab6f: jmpq   0x000000010f81ab6f  ;   {runtime_call}
  0x000000010f81ab74: nop
  0x000000010f81ab75: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81ab7f: jmpq   0x000000010f81ab7f  ;   {runtime_call}
  0x000000010f81ab84: nop
  0x000000010f81ab85: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81ab8f: jmpq   0x000000010f81ab8f  ;   {runtime_call}
  0x000000010f81ab94: nop
  0x000000010f81ab95: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81ab9f: jmpq   0x000000010f81ab9f  ;   {runtime_call}
  0x000000010f81aba4: nop
  0x000000010f81aba5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81abaf: jmpq   0x000000010f81abaf  ;   {runtime_call}
  0x000000010f81abb4: nop
  0x000000010f81abb5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81abbf: jmpq   0x000000010f81abbf  ;   {runtime_call}
  0x000000010f81abc4: nop
  0x000000010f81abc5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81abcf: jmpq   0x000000010f81abcf  ;   {runtime_call}
  0x000000010f81abd4: nop
  0x000000010f81abd5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81abdf: jmpq   0x000000010f81abdf  ;   {runtime_call}
  0x000000010f81abe4: nop
  0x000000010f81abe5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81abef: jmpq   0x000000010f81abef  ;   {runtime_call}
  0x000000010f81abf4: nop
  0x000000010f81abf5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81abff: jmpq   0x000000010f81abff  ;   {runtime_call}
  0x000000010f81ac04: nop
  0x000000010f81ac05: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81ac0f: jmpq   0x000000010f81ac0f  ;   {runtime_call}
  0x000000010f81ac14: nop
  0x000000010f81ac15: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81ac1f: jmpq   0x000000010f81ac1f  ;   {runtime_call}
  0x000000010f81ac24: nop
  0x000000010f81ac25: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81ac2f: jmpq   0x000000010f81ac2f  ;   {runtime_call}
  0x000000010f81ac34: nop
  0x000000010f81ac35: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81ac3f: jmpq   0x000000010f81ac3f  ;   {runtime_call}
  0x000000010f81ac44: nop
  0x000000010f81ac45: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81ac4f: jmpq   0x000000010f81ac4f  ;   {runtime_call}
  0x000000010f81ac54: nop
  0x000000010f81ac55: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81ac5f: jmpq   0x000000010f81ac5f  ;   {runtime_call}
  0x000000010f81ac64: nop
  0x000000010f81ac65: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81ac6f: jmpq   0x000000010f81ac6f  ;   {runtime_call}
  0x000000010f81ac74: nop
  0x000000010f81ac75: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81ac7f: jmpq   0x000000010f81ac7f  ;   {runtime_call}
  0x000000010f81ac84: nop
  0x000000010f81ac85: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81ac8f: jmpq   0x000000010f81ac8f  ;   {runtime_call}
  0x000000010f81ac94: nop
  0x000000010f81ac95: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81ac9f: jmpq   0x000000010f81ac9f  ;   {runtime_call}
  0x000000010f81aca4: nop
  0x000000010f81aca5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81acaf: jmpq   0x000000010f81acaf  ;   {runtime_call}
  0x000000010f81acb4: nop
  0x000000010f81acb5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81acbf: jmpq   0x000000010f81acbf  ;   {runtime_call}
  0x000000010f81acc4: nop
  0x000000010f81acc5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81accf: jmpq   0x000000010f81accf  ;   {runtime_call}
  0x000000010f81acd4: nop
  0x000000010f81acd5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81acdf: jmpq   0x000000010f81acdf  ;   {runtime_call}
  0x000000010f81ace4: nop
  0x000000010f81ace5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81acef: jmpq   0x000000010f81acef  ;   {runtime_call}
  0x000000010f81acf4: nop
  0x000000010f81acf5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81acff: jmpq   0x000000010f81acff  ;   {runtime_call}
  0x000000010f81ad04: nop
  0x000000010f81ad05: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81ad0f: jmpq   0x000000010f81ad0f  ;   {runtime_call}
  0x000000010f81ad14: nop
  0x000000010f81ad15: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81ad1f: jmpq   0x000000010f81ad1f  ;   {runtime_call}
  0x000000010f81ad24: nop
  0x000000010f81ad25: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81ad2f: jmpq   0x000000010f81ad2f  ;   {runtime_call}
  0x000000010f81ad34: nop
  0x000000010f81ad35: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81ad3f: jmpq   0x000000010f81ad3f  ;   {runtime_call}
  0x000000010f81ad44: nop
  0x000000010f81ad45: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81ad4f: jmpq   0x000000010f81ad4f  ;   {runtime_call}
  0x000000010f81ad54: nop
  0x000000010f81ad55: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81ad5f: jmpq   0x000000010f81ad5f  ;   {runtime_call}
  0x000000010f81ad64: nop
  0x000000010f81ad65: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81ad6f: jmpq   0x000000010f81ad6f  ;   {runtime_call}
  0x000000010f81ad74: nop
  0x000000010f81ad75: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f81ad7f: jmpq   0x000000010f81ad7f  ;   {runtime_call}
[Exception Handler]
  0x000000010f81ad84: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f81ad89: mov    %rsp,-0x28(%rsp)
  0x000000010f81ad8e: sub    $0x80,%rsp
  0x000000010f81ad95: mov    %rax,0x78(%rsp)
  0x000000010f81ad9a: mov    %rcx,0x70(%rsp)
  0x000000010f81ad9f: mov    %rdx,0x68(%rsp)
  0x000000010f81ada4: mov    %rbx,0x60(%rsp)
  0x000000010f81ada9: mov    %rbp,0x50(%rsp)
  0x000000010f81adae: mov    %rsi,0x48(%rsp)
  0x000000010f81adb3: mov    %rdi,0x40(%rsp)
  0x000000010f81adb8: mov    %r8,0x38(%rsp)
  0x000000010f81adbd: mov    %r9,0x30(%rsp)
  0x000000010f81adc2: mov    %r10,0x28(%rsp)
  0x000000010f81adc7: mov    %r11,0x20(%rsp)
  0x000000010f81adcc: mov    %r12,0x18(%rsp)
  0x000000010f81add1: mov    %r13,0x10(%rsp)
  0x000000010f81add6: mov    %r14,0x8(%rsp)
  0x000000010f81addb: mov    %r15,(%rsp)
  0x000000010f81addf: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f81ade9: movabs $0x10f81ad89,%rsi  ;   {internal_word}
  0x000000010f81adf3: mov    %rsp,%rdx
  0x000000010f81adf6: and    $0xfffffffffffffff0,%rsp
  0x000000010f81adfa: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f81adff: hlt    
[Deopt Handler Code]
  0x000000010f81ae00: movabs $0x10f81ae00,%r10  ;   {section_word}
  0x000000010f81ae0a: push   %r10
  0x000000010f81ae0c: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f81ae11: hlt    
  0x000000010f81ae12: hlt    
  0x000000010f81ae13: hlt    
  0x000000010f81ae14: hlt    
  0x000000010f81ae15: hlt    
  0x000000010f81ae16: hlt    
  0x000000010f81ae17: hlt    
Decoding compiled method 0x000000010f81eb90:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000010edaecc0} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8:r8     = 'java/lang/Object'
  # parm4:    r9:r9     = 'java/lang/Object'
  # parm5:    rdi:rdi   = 'java/lang/Object'
  # parm6:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm7:    [sp+0x8]   = 'java/lang/Object'
  # parm8:    [sp+0x10]   = 'java/lang/Object'
  # parm9:    [sp+0x18]   = 'java/lang/Object'
  # parm10:   [sp+0x20]   = 'java/lang/Object'
  # parm11:   [sp+0x28]   = 'java/lang/invoke/MemberName'
  0x000000010f81ecc0: mov    0x30(%rsp),%rbx
  0x000000010f81ecc5: mov    0x18(%rbx),%rbx
  0x000000010f81ecc9: test   %rbx,%rbx
  0x000000010f81eccc: je     0x000000010f81ecd5
  0x000000010f81ecd2: jmpq   *0x40(%rbx)
  0x000000010f81ecd5: jmpq   0x000000010f6d61a0  ;   {runtime_call}
  0x000000010f81ecda: hlt    
  0x000000010f81ecdb: hlt    
  0x000000010f81ecdc: hlt    
  0x000000010f81ecdd: hlt    
  0x000000010f81ecde: hlt    
  0x000000010f81ecdf: hlt    
Decoding compiled method 0x000000010f81ed10:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010ed84a20} 'getType' '([CI)Ljdk/internal/org/objectweb/asm/Type;' in 'jdk/internal/org/objectweb/asm/Type'
  # parm0:    rsi:rsi   = '[C'
  # parm1:    rdx       = int
  #           [sp+0x80]  (sp of caller)
  0x000000010f81ef00: mov    %eax,-0x14000(%rsp)
  0x000000010f81ef07: push   %rbp
  0x000000010f81ef08: sub    $0x70,%rsp
  0x000000010f81ef0c: mov    %rsi,%rbx
  0x000000010f81ef0f: mov    %rdx,%r8
  0x000000010f81ef12: movabs $0x10edadfa8,%rdx  ;   {metadata(method data for {method} {0x000000010ed84a20} 'getType' '([CI)Ljdk/internal/org/objectweb/asm/Type;' in 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f81ef1c: mov    0xdc(%rdx),%esi
  0x000000010f81ef22: add    $0x8,%esi
  0x000000010f81ef25: mov    %esi,0xdc(%rdx)
  0x000000010f81ef2b: movabs $0x10ed84a20,%rdx  ;   {metadata({method} {0x000000010ed84a20} 'getType' '([CI)Ljdk/internal/org/objectweb/asm/Type;' in 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f81ef35: and    $0x1ff8,%esi
  0x000000010f81ef3b: cmp    $0x0,%esi
  0x000000010f81ef3e: je     0x000000010f81f5f4  ;*aload_0
                                                ; - jdk.internal.org.objectweb.asm.Type::getType@0 (line 477)

  0x000000010f81ef44: movslq %r8d,%rdx
  0x000000010f81ef47: cmp    0xc(%rbx),%r8d     ; implicit exception: dispatches to 0x000000010f81f60b
  0x000000010f81ef4b: jae    0x000000010f81f615
  0x000000010f81ef51: movzwl 0x10(%rbx,%rdx,2),%edx  ;*caload
                                                ; - jdk.internal.org.objectweb.asm.Type::getType@2 (line 477)

  0x000000010f81ef56: cmp    $0x42,%edx
  0x000000010f81ef59: je     0x000000010f81f5de
  0x000000010f81ef5f: cmp    $0x43,%edx
  0x000000010f81ef62: je     0x000000010f81f5c8
  0x000000010f81ef68: cmp    $0x44,%edx
  0x000000010f81ef6b: je     0x000000010f81f5b2
  0x000000010f81ef71: cmp    $0x46,%edx
  0x000000010f81ef74: je     0x000000010f81f59c
  0x000000010f81ef7a: cmp    $0x49,%edx
  0x000000010f81ef7d: je     0x000000010f81f586
  0x000000010f81ef83: cmp    $0x4a,%edx
  0x000000010f81ef86: je     0x000000010f81f570
  0x000000010f81ef8c: cmp    $0x4c,%edx
  0x000000010f81ef8f: je     0x000000010f81f147
  0x000000010f81ef95: cmp    $0x53,%edx
  0x000000010f81ef98: je     0x000000010f81f55a
  0x000000010f81ef9e: cmp    $0x56,%edx
  0x000000010f81efa1: je     0x000000010f81f544
  0x000000010f81efa7: cmp    $0x5a,%edx
  0x000000010f81efaa: je     0x000000010f81f52e
  0x000000010f81efb0: cmp    $0x5b,%edx
  0x000000010f81efb3: jne    0x000000010f81f41b  ;*tableswitch
                                                ; - jdk.internal.org.objectweb.asm.Type::getType@3 (line 477)

  0x000000010f81efb9: mov    $0x1,%edx
  0x000000010f81efbe: jmpq   0x000000010f81f012  ;*aload_0
                                                ; - jdk.internal.org.objectweb.asm.Type::getType@158 (line 498)

  0x000000010f81efc3: nopl   0x0(%rax,%rax,1)
  0x000000010f81efc8: inc    %edx
  0x000000010f81efca: movabs $0x10edadfa8,%rsi  ;   {metadata(method data for {method} {0x000000010ed84a20} 'getType' '([CI)Ljdk/internal/org/objectweb/asm/Type;' in 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f81efd4: mov    0xe0(%rsi),%edi
  0x000000010f81efda: add    $0x8,%edi
  0x000000010f81efdd: mov    %edi,0xe0(%rsi)
  0x000000010f81efe3: movabs $0x10ed84a20,%rsi  ;   {metadata({method} {0x000000010ed84a20} 'getType' '([CI)Ljdk/internal/org/objectweb/asm/Type;' in 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f81efed: and    $0xfff8,%edi
  0x000000010f81eff3: cmp    $0x0,%edi
  0x000000010f81eff6: je     0x000000010f81f61e  ; OopMap{rbx=Oop off=252}
                                                ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Type::getType@171 (line 499)

  0x000000010f81effc: test   %eax,-0x8d83f02(%rip)        # 0x0000000106a9b100
                                                ;   {poll}
  0x000000010f81f002: movabs $0x10edadfa8,%rsi  ;   {metadata(method data for {method} {0x000000010ed84a20} 'getType' '([CI)Ljdk/internal/org/objectweb/asm/Type;' in 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f81f00c: incl   0x2e8(%rsi)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Type::getType@171 (line 499)

  0x000000010f81f012: mov    %rdx,%rsi
  0x000000010f81f015: add    %r8d,%esi
  0x000000010f81f018: movslq %esi,%rdi
  0x000000010f81f01b: cmp    0xc(%rbx),%esi
  0x000000010f81f01e: jae    0x000000010f81f635
  0x000000010f81f024: movzwl 0x10(%rbx,%rdi,2),%esi  ;*caload
                                                ; - jdk.internal.org.objectweb.asm.Type::getType@162 (line 498)

  0x000000010f81f029: cmp    $0x5b,%esi
  0x000000010f81f02c: movabs $0x10edadfa8,%rdi  ;   {metadata(method data for {method} {0x000000010ed84a20} 'getType' '([CI)Ljdk/internal/org/objectweb/asm/Type;' in 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f81f036: movabs $0x2c8,%rax
  0x000000010f81f040: jne    0x000000010f81f050
  0x000000010f81f046: movabs $0x2d8,%rax
  0x000000010f81f050: mov    (%rdi,%rax,1),%rcx
  0x000000010f81f054: lea    0x1(%rcx),%rcx
  0x000000010f81f058: mov    %rcx,(%rdi,%rax,1)
  0x000000010f81f05c: je     0x000000010f81efc8  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Type::getType@165 (line 498)

  0x000000010f81f062: cmp    $0x4c,%esi
  0x000000010f81f065: movabs $0x10edadfa8,%rsi  ;   {metadata(method data for {method} {0x000000010ed84a20} 'getType' '([CI)Ljdk/internal/org/objectweb/asm/Type;' in 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f81f06f: movabs $0x300,%rdi
  0x000000010f81f079: jne    0x000000010f81f089
  0x000000010f81f07f: movabs $0x310,%rdi
  0x000000010f81f089: mov    (%rsi,%rdi,1),%rax
  0x000000010f81f08d: lea    0x1(%rax),%rax
  0x000000010f81f091: mov    %rax,(%rsi,%rdi,1)
  0x000000010f81f095: jne    0x000000010f81f307  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Type::getType@181 (line 501)

  0x000000010f81f09b: inc    %edx
  0x000000010f81f09d: jmpq   0x000000010f81f0f2  ;*aload_0
                                                ; - jdk.internal.org.objectweb.asm.Type::getType@187 (line 503)

  0x000000010f81f0a2: nopw   0x0(%rax,%rax,1)
  0x000000010f81f0a8: inc    %edx
  0x000000010f81f0aa: movabs $0x10edadfa8,%rsi  ;   {metadata(method data for {method} {0x000000010ed84a20} 'getType' '([CI)Ljdk/internal/org/objectweb/asm/Type;' in 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f81f0b4: mov    0xe0(%rsi),%edi
  0x000000010f81f0ba: add    $0x8,%edi
  0x000000010f81f0bd: mov    %edi,0xe0(%rsi)
  0x000000010f81f0c3: movabs $0x10ed84a20,%rsi  ;   {metadata({method} {0x000000010ed84a20} 'getType' '([CI)Ljdk/internal/org/objectweb/asm/Type;' in 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f81f0cd: and    $0xfff8,%edi
  0x000000010f81f0d3: cmp    $0x0,%edi
  0x000000010f81f0d6: je     0x000000010f81f63e  ; OopMap{rbx=Oop off=476}
                                                ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Type::getType@200 (line 504)

  0x000000010f81f0dc: test   %eax,-0x8d83fe2(%rip)        # 0x0000000106a9b100
                                                ;   {poll}
  0x000000010f81f0e2: movabs $0x10edadfa8,%rsi  ;   {metadata(method data for {method} {0x000000010ed84a20} 'getType' '([CI)Ljdk/internal/org/objectweb/asm/Type;' in 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f81f0ec: incl   0x340(%rsi)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Type::getType@200 (line 504)

  0x000000010f81f0f2: mov    %rdx,%rsi
  0x000000010f81f0f5: add    %r8d,%esi
  0x000000010f81f0f8: movslq %esi,%rdi
  0x000000010f81f0fb: cmp    0xc(%rbx),%esi
  0x000000010f81f0fe: jae    0x000000010f81f655
  0x000000010f81f104: movzwl 0x10(%rbx,%rdi,2),%esi  ;*caload
                                                ; - jdk.internal.org.objectweb.asm.Type::getType@191 (line 503)

  0x000000010f81f109: cmp    $0x3b,%esi
  0x000000010f81f10c: movabs $0x10edadfa8,%rsi  ;   {metadata(method data for {method} {0x000000010ed84a20} 'getType' '([CI)Ljdk/internal/org/objectweb/asm/Type;' in 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f81f116: movabs $0x320,%rdi
  0x000000010f81f120: je     0x000000010f81f130
  0x000000010f81f126: movabs $0x330,%rdi
  0x000000010f81f130: mov    (%rsi,%rdi,1),%rax
  0x000000010f81f134: lea    0x1(%rax),%rax
  0x000000010f81f138: mov    %rax,(%rsi,%rdi,1)
  0x000000010f81f13c: je     0x000000010f81f307
  0x000000010f81f142: jmpq   0x000000010f81f0a8  ;*if_icmpeq
                                                ; - jdk.internal.org.objectweb.asm.Type::getType@194 (line 503)

  0x000000010f81f147: mov    $0x1,%r9d
  0x000000010f81f14d: jmpq   0x000000010f81f1a3  ;*aload_0
                                                ; - jdk.internal.org.objectweb.asm.Type::getType@220 (line 510)

  0x000000010f81f152: nopw   0x0(%rax,%rax,1)
  0x000000010f81f158: inc    %r9d
  0x000000010f81f15b: movabs $0x10edadfa8,%rdx  ;   {metadata(method data for {method} {0x000000010ed84a20} 'getType' '([CI)Ljdk/internal/org/objectweb/asm/Type;' in 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f81f165: mov    0xe0(%rdx),%esi
  0x000000010f81f16b: add    $0x8,%esi
  0x000000010f81f16e: mov    %esi,0xe0(%rdx)
  0x000000010f81f174: movabs $0x10ed84a20,%rdx  ;   {metadata({method} {0x000000010ed84a20} 'getType' '([CI)Ljdk/internal/org/objectweb/asm/Type;' in 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f81f17e: and    $0xfff8,%esi
  0x000000010f81f184: cmp    $0x0,%esi
  0x000000010f81f187: je     0x000000010f81f65e  ; OopMap{rbx=Oop off=653}
                                                ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Type::getType@233 (line 511)

  0x000000010f81f18d: test   %eax,-0x8d84093(%rip)        # 0x0000000106a9b100
                                                ;   {poll}
  0x000000010f81f193: movabs $0x10edadfa8,%rdx  ;   {metadata(method data for {method} {0x000000010ed84a20} 'getType' '([CI)Ljdk/internal/org/objectweb/asm/Type;' in 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f81f19d: incl   0x388(%rdx)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Type::getType@233 (line 511)

  0x000000010f81f1a3: mov    %r9,%rdx
  0x000000010f81f1a6: add    %r8d,%edx
  0x000000010f81f1a9: movslq %edx,%rsi
  0x000000010f81f1ac: cmp    0xc(%rbx),%edx
  0x000000010f81f1af: jae    0x000000010f81f675
  0x000000010f81f1b5: movzwl 0x10(%rbx,%rsi,2),%edx  ;*caload
                                                ; - jdk.internal.org.objectweb.asm.Type::getType@224 (line 510)

  0x000000010f81f1ba: cmp    $0x3b,%edx
  0x000000010f81f1bd: movabs $0x10edadfa8,%rdx  ;   {metadata(method data for {method} {0x000000010ed84a20} 'getType' '([CI)Ljdk/internal/org/objectweb/asm/Type;' in 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f81f1c7: movabs $0x368,%rsi
  0x000000010f81f1d1: je     0x000000010f81f1e1
  0x000000010f81f1d7: movabs $0x378,%rsi
  0x000000010f81f1e1: mov    (%rdx,%rsi,1),%rdi
  0x000000010f81f1e5: lea    0x1(%rdi),%rdi
  0x000000010f81f1e9: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f81f1ed: jne    0x000000010f81f158  ;*if_icmpeq
                                                ; - jdk.internal.org.objectweb.asm.Type::getType@227 (line 510)

  0x000000010f81f1f3: movabs $0x7c005e608,%rdx  ;   {metadata('jdk/internal/org/objectweb/asm/Type')}
  0x000000010f81f1fd: mov    0x60(%r15),%rax
  0x000000010f81f201: lea    0x20(%rax),%rdi
  0x000000010f81f205: cmp    0x70(%r15),%rdi
  0x000000010f81f209: ja     0x000000010f81f67e
  0x000000010f81f20f: mov    %rdi,0x60(%r15)
  0x000000010f81f213: mov    0xa8(%rdx),%rcx
  0x000000010f81f21a: mov    %rcx,(%rax)
  0x000000010f81f21d: mov    %rdx,%rcx
  0x000000010f81f220: shr    $0x3,%rcx
  0x000000010f81f224: mov    %ecx,0x8(%rax)
  0x000000010f81f227: xor    %rcx,%rcx
  0x000000010f81f22a: mov    %ecx,0xc(%rax)
  0x000000010f81f22d: xor    %rcx,%rcx
  0x000000010f81f230: mov    %rcx,0x10(%rax)
  0x000000010f81f234: mov    %rcx,0x18(%rax)    ;*new  ; - jdk.internal.org.objectweb.asm.Type::getType@236 (line 513)

  0x000000010f81f238: mov    %rax,%rdx
  0x000000010f81f23b: movabs $0x10edadfa8,%rsi  ;   {metadata(method data for {method} {0x000000010ed84a20} 'getType' '([CI)Ljdk/internal/org/objectweb/asm/Type;' in 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f81f245: addq   $0x1,0x3a0(%rsi)
  0x000000010f81f24d: inc    %r8d
  0x000000010f81f250: dec    %r9d
  0x000000010f81f253: movabs $0x10edae390,%rdx  ;   {metadata(method data for {method} {0x000000010ed83f58} '<init>' '(I[CII)V' in 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f81f25d: mov    0xdc(%rdx),%esi
  0x000000010f81f263: add    $0x8,%esi
  0x000000010f81f266: mov    %esi,0xdc(%rdx)
  0x000000010f81f26c: movabs $0x10ed83f58,%rdx  ;   {metadata({method} {0x000000010ed83f58} '<init>' '(I[CII)V' in 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f81f276: and    $0x7ffff8,%esi
  0x000000010f81f27c: cmp    $0x0,%esi
  0x000000010f81f27f: je     0x000000010f81f68b
  0x000000010f81f285: mov    %rax,%rdx
  0x000000010f81f288: movabs $0x10edae390,%rsi  ;   {metadata(method data for {method} {0x000000010ed83f58} '<init>' '(I[CII)V' in 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f81f292: addq   $0x1,0x108(%rsi)
  0x000000010f81f29a: movabs $0x10ebdca10,%rdx  ;   {metadata(method data for {method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f81f2a4: mov    0xdc(%rdx),%esi
  0x000000010f81f2aa: add    $0x8,%esi
  0x000000010f81f2ad: mov    %esi,0xdc(%rdx)
  0x000000010f81f2b3: movabs $0x10ea65480,%rdx  ;   {metadata({method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f81f2bd: and    $0x7ffff8,%esi
  0x000000010f81f2c3: cmp    $0x0,%esi
  0x000000010f81f2c6: je     0x000000010f81f6a2
  0x000000010f81f2cc: movl   $0xa,0xc(%rax)     ;*putfield sort
                                                ; - jdk.internal.org.objectweb.asm.Type::<init>@6 (line 232)
                                                ; - jdk.internal.org.objectweb.asm.Type::getType@249 (line 513)

  0x000000010f81f2d3: mov    %rbx,%r10
  0x000000010f81f2d6: shr    $0x3,%r10
  0x000000010f81f2da: mov    %r10d,0x18(%rax)
  0x000000010f81f2de: mov    %rax,%rdx
  0x000000010f81f2e1: shr    $0x9,%rdx
  0x000000010f81f2e5: movabs $0x1065b9000,%rsi
  0x000000010f81f2ef: movb   $0x0,(%rdx,%rsi,1)  ;*putfield buf
                                                ; - jdk.internal.org.objectweb.asm.Type::<init>@11 (line 233)
                                                ; - jdk.internal.org.objectweb.asm.Type::getType@249 (line 513)

  0x000000010f81f2f3: mov    %r8d,0x10(%rax)    ;*putfield off
                                                ; - jdk.internal.org.objectweb.asm.Type::<init>@16 (line 234)
                                                ; - jdk.internal.org.objectweb.asm.Type::getType@249 (line 513)

  0x000000010f81f2f7: mov    %r9d,0x14(%rax)    ;*putfield len
                                                ; - jdk.internal.org.objectweb.asm.Type::<init>@22 (line 235)
                                                ; - jdk.internal.org.objectweb.asm.Type::getType@249 (line 513)

  0x000000010f81f2fb: add    $0x70,%rsp
  0x000000010f81f2ff: pop    %rbp
  0x000000010f81f300: test   %eax,-0x8d84206(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f81f306: retq                      ;*areturn
                                                ; - jdk.internal.org.objectweb.asm.Type::getType@252 (line 513)

  0x000000010f81f307: mov    %rdx,%r9
  0x000000010f81f30a: movabs $0x7c005e608,%rdx  ;   {metadata('jdk/internal/org/objectweb/asm/Type')}
  0x000000010f81f314: mov    0x60(%r15),%rax
  0x000000010f81f318: lea    0x20(%rax),%rdi
  0x000000010f81f31c: cmp    0x70(%r15),%rdi
  0x000000010f81f320: ja     0x000000010f81f6b9
  0x000000010f81f326: mov    %rdi,0x60(%r15)
  0x000000010f81f32a: mov    0xa8(%rdx),%rcx
  0x000000010f81f331: mov    %rcx,(%rax)
  0x000000010f81f334: mov    %rdx,%rcx
  0x000000010f81f337: shr    $0x3,%rcx
  0x000000010f81f33b: mov    %ecx,0x8(%rax)
  0x000000010f81f33e: xor    %rcx,%rcx
  0x000000010f81f341: mov    %ecx,0xc(%rax)
  0x000000010f81f344: xor    %rcx,%rcx
  0x000000010f81f347: mov    %rcx,0x10(%rax)
  0x000000010f81f34b: mov    %rcx,0x18(%rax)    ;*new  ; - jdk.internal.org.objectweb.asm.Type::getType@203 (line 507)

  0x000000010f81f34f: mov    %rax,%rdx
  0x000000010f81f352: movabs $0x10edadfa8,%rsi  ;   {metadata(method data for {method} {0x000000010ed84a20} 'getType' '([CI)Ljdk/internal/org/objectweb/asm/Type;' in 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f81f35c: addq   $0x1,0x358(%rsi)
  0x000000010f81f364: inc    %r9d
  0x000000010f81f367: movabs $0x10edae390,%rdx  ;   {metadata(method data for {method} {0x000000010ed83f58} '<init>' '(I[CII)V' in 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f81f371: mov    0xdc(%rdx),%esi
  0x000000010f81f377: add    $0x8,%esi
  0x000000010f81f37a: mov    %esi,0xdc(%rdx)
  0x000000010f81f380: movabs $0x10ed83f58,%rdx  ;   {metadata({method} {0x000000010ed83f58} '<init>' '(I[CII)V' in 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f81f38a: and    $0x7ffff8,%esi
  0x000000010f81f390: cmp    $0x0,%esi
  0x000000010f81f393: je     0x000000010f81f6c6
  0x000000010f81f399: mov    %rax,%rdx
  0x000000010f81f39c: movabs $0x10edae390,%rsi  ;   {metadata(method data for {method} {0x000000010ed83f58} '<init>' '(I[CII)V' in 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f81f3a6: addq   $0x1,0x108(%rsi)
  0x000000010f81f3ae: movabs $0x10ebdca10,%rdx  ;   {metadata(method data for {method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f81f3b8: mov    0xdc(%rdx),%esi
  0x000000010f81f3be: add    $0x8,%esi
  0x000000010f81f3c1: mov    %esi,0xdc(%rdx)
  0x000000010f81f3c7: movabs $0x10ea65480,%rdx  ;   {metadata({method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f81f3d1: and    $0x7ffff8,%esi
  0x000000010f81f3d7: cmp    $0x0,%esi
  0x000000010f81f3da: je     0x000000010f81f6dd
  0x000000010f81f3e0: movl   $0x9,0xc(%rax)     ;*putfield sort
                                                ; - jdk.internal.org.objectweb.asm.Type::<init>@6 (line 232)
                                                ; - jdk.internal.org.objectweb.asm.Type::getType@214 (line 507)

  0x000000010f81f3e7: mov    %rbx,%r10
  0x000000010f81f3ea: shr    $0x3,%r10
  0x000000010f81f3ee: mov    %r10d,0x18(%rax)
  0x000000010f81f3f2: mov    %rax,%rdx
  0x000000010f81f3f5: shr    $0x9,%rdx
  0x000000010f81f3f9: movabs $0x1065b9000,%rsi
  0x000000010f81f403: movb   $0x0,(%rdx,%rsi,1)  ;*putfield buf
                                                ; - jdk.internal.org.objectweb.asm.Type::<init>@11 (line 233)
                                                ; - jdk.internal.org.objectweb.asm.Type::getType@214 (line 507)

  0x000000010f81f407: mov    %r8d,0x10(%rax)    ;*putfield off
                                                ; - jdk.internal.org.objectweb.asm.Type::<init>@16 (line 234)
                                                ; - jdk.internal.org.objectweb.asm.Type::getType@214 (line 507)

  0x000000010f81f40b: mov    %r9d,0x14(%rax)    ;*putfield len
                                                ; - jdk.internal.org.objectweb.asm.Type::<init>@22 (line 235)
                                                ; - jdk.internal.org.objectweb.asm.Type::getType@214 (line 507)

  0x000000010f81f40f: add    $0x70,%rsp
  0x000000010f81f413: pop    %rbp
  0x000000010f81f414: test   %eax,-0x8d8431a(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f81f41a: retq                      ;*areturn
                                                ; - jdk.internal.org.objectweb.asm.Type::getType@217 (line 507)

  0x000000010f81f41b: movabs $0x7c005e608,%rdx  ;   {metadata('jdk/internal/org/objectweb/asm/Type')}
  0x000000010f81f425: mov    0x60(%r15),%rax
  0x000000010f81f429: lea    0x20(%rax),%rdi
  0x000000010f81f42d: cmp    0x70(%r15),%rdi
  0x000000010f81f431: ja     0x000000010f81f6f4
  0x000000010f81f437: mov    %rdi,0x60(%r15)
  0x000000010f81f43b: mov    0xa8(%rdx),%rcx
  0x000000010f81f442: mov    %rcx,(%rax)
  0x000000010f81f445: mov    %rdx,%rcx
  0x000000010f81f448: shr    $0x3,%rcx
  0x000000010f81f44c: mov    %ecx,0x8(%rax)
  0x000000010f81f44f: xor    %rcx,%rcx
  0x000000010f81f452: mov    %ecx,0xc(%rax)
  0x000000010f81f455: xor    %rcx,%rcx
  0x000000010f81f458: mov    %rcx,0x10(%rax)
  0x000000010f81f45c: mov    %rcx,0x18(%rax)    ;*new  ; - jdk.internal.org.objectweb.asm.Type::getType@253 (line 516)

  0x000000010f81f460: mov    0xc(%rbx),%esi     ;*arraylength
                                                ; - jdk.internal.org.objectweb.asm.Type::getType@262 (line 516)

  0x000000010f81f463: mov    %rax,%rdi
  0x000000010f81f466: movabs $0x10edadfa8,%rdx  ;   {metadata(method data for {method} {0x000000010ed84a20} 'getType' '([CI)Ljdk/internal/org/objectweb/asm/Type;' in 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f81f470: addq   $0x1,0x3b0(%rdx)
  0x000000010f81f478: sub    %r8d,%esi
  0x000000010f81f47b: movabs $0x10edae390,%rdi  ;   {metadata(method data for {method} {0x000000010ed83f58} '<init>' '(I[CII)V' in 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f81f485: mov    0xdc(%rdi),%edx
  0x000000010f81f48b: add    $0x8,%edx
  0x000000010f81f48e: mov    %edx,0xdc(%rdi)
  0x000000010f81f494: movabs $0x10ed83f58,%rdi  ;   {metadata({method} {0x000000010ed83f58} '<init>' '(I[CII)V' in 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f81f49e: and    $0x7ffff8,%edx
  0x000000010f81f4a4: cmp    $0x0,%edx
  0x000000010f81f4a7: je     0x000000010f81f701
  0x000000010f81f4ad: mov    %rax,%rdi
  0x000000010f81f4b0: movabs $0x10edae390,%rdx  ;   {metadata(method data for {method} {0x000000010ed83f58} '<init>' '(I[CII)V' in 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f81f4ba: addq   $0x1,0x108(%rdx)
  0x000000010f81f4c2: movabs $0x10ebdca10,%rdi  ;   {metadata(method data for {method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f81f4cc: mov    0xdc(%rdi),%edx
  0x000000010f81f4d2: add    $0x8,%edx
  0x000000010f81f4d5: mov    %edx,0xdc(%rdi)
  0x000000010f81f4db: movabs $0x10ea65480,%rdi  ;   {metadata({method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f81f4e5: and    $0x7ffff8,%edx
  0x000000010f81f4eb: cmp    $0x0,%edx
  0x000000010f81f4ee: je     0x000000010f81f718
  0x000000010f81f4f4: movl   $0xb,0xc(%rax)     ;*putfield sort
                                                ; - jdk.internal.org.objectweb.asm.Type::<init>@6 (line 232)
                                                ; - jdk.internal.org.objectweb.asm.Type::getType@265 (line 516)

  0x000000010f81f4fb: mov    %rbx,%r10
  0x000000010f81f4fe: shr    $0x3,%r10
  0x000000010f81f502: mov    %r10d,0x18(%rax)
  0x000000010f81f506: mov    %rax,%rdi
  0x000000010f81f509: shr    $0x9,%rdi
  0x000000010f81f50d: movabs $0x1065b9000,%rbx
  0x000000010f81f517: movb   $0x0,(%rdi,%rbx,1)  ;*putfield buf
                                                ; - jdk.internal.org.objectweb.asm.Type::<init>@11 (line 233)
                                                ; - jdk.internal.org.objectweb.asm.Type::getType@265 (line 516)

  0x000000010f81f51b: mov    %r8d,0x10(%rax)    ;*putfield off
                                                ; - jdk.internal.org.objectweb.asm.Type::<init>@16 (line 234)
                                                ; - jdk.internal.org.objectweb.asm.Type::getType@265 (line 516)

  0x000000010f81f51f: mov    %esi,0x14(%rax)    ;*putfield len
                                                ; - jdk.internal.org.objectweb.asm.Type::<init>@22 (line 235)
                                                ; - jdk.internal.org.objectweb.asm.Type::getType@265 (line 516)

  0x000000010f81f522: add    $0x70,%rsp
  0x000000010f81f526: pop    %rbp
  0x000000010f81f527: test   %eax,-0x8d8442d(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f81f52d: retq                      ;*areturn
                                                ; - jdk.internal.org.objectweb.asm.Type::getType@268 (line 516)

  0x000000010f81f52e: movabs $0x795a11618,%rax  ;   {oop(a 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f81f538: add    $0x70,%rsp
  0x000000010f81f53c: pop    %rbp
  0x000000010f81f53d: test   %eax,-0x8d84443(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f81f543: retq                      ;*areturn
                                                ; - jdk.internal.org.objectweb.asm.Type::getType@127 (line 481)

  0x000000010f81f544: movabs $0x795a115f8,%rax  ;   {oop(a 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f81f54e: add    $0x70,%rsp
  0x000000010f81f552: pop    %rbp
  0x000000010f81f553: test   %eax,-0x8d84459(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f81f559: retq                      ;*areturn
                                                ; - jdk.internal.org.objectweb.asm.Type::getType@123 (line 479)

  0x000000010f81f55a: movabs $0x795a11678,%rax  ;   {oop(a 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f81f564: add    $0x70,%rsp
  0x000000010f81f568: pop    %rbp
  0x000000010f81f569: test   %eax,-0x8d8446f(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f81f56f: retq                      ;*areturn
                                                ; - jdk.internal.org.objectweb.asm.Type::getType@139 (line 487)

  0x000000010f81f570: movabs $0x795a116d8,%rax  ;   {oop(a 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f81f57a: add    $0x70,%rsp
  0x000000010f81f57e: pop    %rbp
  0x000000010f81f57f: test   %eax,-0x8d84485(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f81f585: retq                      ;*areturn
                                                ; - jdk.internal.org.objectweb.asm.Type::getType@151 (line 493)

  0x000000010f81f586: movabs $0x795a11698,%rax  ;   {oop(a 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f81f590: add    $0x70,%rsp
  0x000000010f81f594: pop    %rbp
  0x000000010f81f595: test   %eax,-0x8d8449b(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f81f59b: retq                      ;*areturn
                                                ; - jdk.internal.org.objectweb.asm.Type::getType@143 (line 489)

  0x000000010f81f59c: movabs $0x795a116b8,%rax  ;   {oop(a 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f81f5a6: add    $0x70,%rsp
  0x000000010f81f5aa: pop    %rbp
  0x000000010f81f5ab: test   %eax,-0x8d844b1(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f81f5b1: retq                      ;*areturn
                                                ; - jdk.internal.org.objectweb.asm.Type::getType@147 (line 491)

  0x000000010f81f5b2: movabs $0x795a116f8,%rax  ;   {oop(a 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f81f5bc: add    $0x70,%rsp
  0x000000010f81f5c0: pop    %rbp
  0x000000010f81f5c1: test   %eax,-0x8d844c7(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f81f5c7: retq                      ;*areturn
                                                ; - jdk.internal.org.objectweb.asm.Type::getType@155 (line 495)

  0x000000010f81f5c8: movabs $0x795a11638,%rax  ;   {oop(a 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f81f5d2: add    $0x70,%rsp
  0x000000010f81f5d6: pop    %rbp
  0x000000010f81f5d7: test   %eax,-0x8d844dd(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f81f5dd: retq                      ;*areturn
                                                ; - jdk.internal.org.objectweb.asm.Type::getType@131 (line 483)

  0x000000010f81f5de: movabs $0x795a11658,%rax  ;   {oop(a 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f81f5e8: add    $0x70,%rsp
  0x000000010f81f5ec: pop    %rbp
  0x000000010f81f5ed: test   %eax,-0x8d844f3(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f81f5f3: retq   
  0x000000010f81f5f4: mov    %rdx,0x8(%rsp)
  0x000000010f81f5f9: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f81f601: callq  0x000000010f7d1a20  ; OopMap{rbx=Oop off=1798}
                                                ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.Type::getType@-1 (line 477)
                                                ;   {runtime_call}
  0x000000010f81f606: jmpq   0x000000010f81ef44
  0x000000010f81f60b: callq  0x000000010f7cd0c0  ; OopMap{rbx=Oop off=1808}
                                                ;*caload
                                                ; - jdk.internal.org.objectweb.asm.Type::getType@2 (line 477)
                                                ;   {runtime_call}
  0x000000010f81f610: callq  0x000000010f7cd0c0  ; OopMap{rbx=Oop off=1813}
                                                ;*caload
                                                ; - jdk.internal.org.objectweb.asm.Type::getType@2 (line 477)
                                                ;   {runtime_call}
  0x000000010f81f615: mov    %r8,(%rsp)
  0x000000010f81f619: callq  0x000000010f7cca00  ; OopMap{rbx=Oop off=1822}
                                                ;*caload
                                                ; - jdk.internal.org.objectweb.asm.Type::getType@2 (line 477)
                                                ;   {runtime_call}
  0x000000010f81f61e: mov    %rsi,0x8(%rsp)
  0x000000010f81f623: movq   $0xab,(%rsp)
  0x000000010f81f62b: callq  0x000000010f7d1a20  ; OopMap{rbx=Oop off=1840}
                                                ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Type::getType@171 (line 499)
                                                ;   {runtime_call}
  0x000000010f81f630: jmpq   0x000000010f81effc
  0x000000010f81f635: mov    %rsi,(%rsp)
  0x000000010f81f639: callq  0x000000010f7cca00  ; OopMap{rbx=Oop off=1854}
                                                ;*caload
                                                ; - jdk.internal.org.objectweb.asm.Type::getType@162 (line 498)
                                                ;   {runtime_call}
  0x000000010f81f63e: mov    %rsi,0x8(%rsp)
  0x000000010f81f643: movq   $0xc8,(%rsp)
  0x000000010f81f64b: callq  0x000000010f7d1a20  ; OopMap{rbx=Oop off=1872}
                                                ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Type::getType@200 (line 504)
                                                ;   {runtime_call}
  0x000000010f81f650: jmpq   0x000000010f81f0dc
  0x000000010f81f655: mov    %rsi,(%rsp)
  0x000000010f81f659: callq  0x000000010f7cca00  ; OopMap{rbx=Oop off=1886}
                                                ;*caload
                                                ; - jdk.internal.org.objectweb.asm.Type::getType@191 (line 503)
                                                ;   {runtime_call}
  0x000000010f81f65e: mov    %rdx,0x8(%rsp)
  0x000000010f81f663: movq   $0xe9,(%rsp)
  0x000000010f81f66b: callq  0x000000010f7d1a20  ; OopMap{rbx=Oop off=1904}
                                                ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Type::getType@233 (line 511)
                                                ;   {runtime_call}
  0x000000010f81f670: jmpq   0x000000010f81f18d
  0x000000010f81f675: mov    %rdx,(%rsp)
  0x000000010f81f679: callq  0x000000010f7cca00  ; OopMap{rbx=Oop off=1918}
                                                ;*caload
                                                ; - jdk.internal.org.objectweb.asm.Type::getType@224 (line 510)
                                                ;   {runtime_call}
  0x000000010f81f67e: mov    %rdx,%rdx
  0x000000010f81f681: callq  0x000000010f7cd820  ; OopMap{rbx=Oop off=1926}
                                                ;*new  ; - jdk.internal.org.objectweb.asm.Type::getType@236 (line 513)
                                                ;   {runtime_call}
  0x000000010f81f686: jmpq   0x000000010f81f238
  0x000000010f81f68b: mov    %rdx,0x8(%rsp)
  0x000000010f81f690: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f81f698: callq  0x000000010f7d1a20  ; OopMap{rbx=Oop rax=Oop off=1949}
                                                ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.Type::<init>@-1 (line 231)
                                                ; - jdk.internal.org.objectweb.asm.Type::getType@249 (line 513)
                                                ;   {runtime_call}
  0x000000010f81f69d: jmpq   0x000000010f81f285
  0x000000010f81f6a2: mov    %rdx,0x8(%rsp)
  0x000000010f81f6a7: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f81f6af: callq  0x000000010f7d1a20  ; OopMap{rbx=Oop rax=Oop off=1972}
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 37)
                                                ; - jdk.internal.org.objectweb.asm.Type::<init>@1 (line 231)
                                                ; - jdk.internal.org.objectweb.asm.Type::getType@249 (line 513)
                                                ;   {runtime_call}
  0x000000010f81f6b4: jmpq   0x000000010f81f2cc
  0x000000010f81f6b9: mov    %rdx,%rdx
  0x000000010f81f6bc: callq  0x000000010f7cd820  ; OopMap{rbx=Oop off=1985}
                                                ;*new  ; - jdk.internal.org.objectweb.asm.Type::getType@203 (line 507)
                                                ;   {runtime_call}
  0x000000010f81f6c1: jmpq   0x000000010f81f34f
  0x000000010f81f6c6: mov    %rdx,0x8(%rsp)
  0x000000010f81f6cb: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f81f6d3: callq  0x000000010f7d1a20  ; OopMap{rbx=Oop rax=Oop off=2008}
                                                ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.Type::<init>@-1 (line 231)
                                                ; - jdk.internal.org.objectweb.asm.Type::getType@214 (line 507)
                                                ;   {runtime_call}
  0x000000010f81f6d8: jmpq   0x000000010f81f399
  0x000000010f81f6dd: mov    %rdx,0x8(%rsp)
  0x000000010f81f6e2: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f81f6ea: callq  0x000000010f7d1a20  ; OopMap{rbx=Oop rax=Oop off=2031}
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 37)
                                                ; - jdk.internal.org.objectweb.asm.Type::<init>@1 (line 231)
                                                ; - jdk.internal.org.objectweb.asm.Type::getType@214 (line 507)
                                                ;   {runtime_call}
  0x000000010f81f6ef: jmpq   0x000000010f81f3e0
  0x000000010f81f6f4: mov    %rdx,%rdx
  0x000000010f81f6f7: callq  0x000000010f7cd820  ; OopMap{rbx=Oop off=2044}
                                                ;*new  ; - jdk.internal.org.objectweb.asm.Type::getType@253 (line 516)
                                                ;   {runtime_call}
  0x000000010f81f6fc: jmpq   0x000000010f81f460
  0x000000010f81f701: mov    %rdi,0x8(%rsp)
  0x000000010f81f706: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f81f70e: callq  0x000000010f7d1a20  ; OopMap{rbx=Oop rax=Oop off=2067}
                                                ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.Type::<init>@-1 (line 231)
                                                ; - jdk.internal.org.objectweb.asm.Type::getType@265 (line 516)
                                                ;   {runtime_call}
  0x000000010f81f713: jmpq   0x000000010f81f4ad
  0x000000010f81f718: mov    %rdi,0x8(%rsp)
  0x000000010f81f71d: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f81f725: callq  0x000000010f7d1a20  ; OopMap{rbx=Oop rax=Oop off=2090}
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 37)
                                                ; - jdk.internal.org.objectweb.asm.Type::<init>@1 (line 231)
                                                ; - jdk.internal.org.objectweb.asm.Type::getType@265 (line 516)
                                                ;   {runtime_call}
  0x000000010f81f72a: jmpq   0x000000010f81f4f4
  0x000000010f81f72f: nop
  0x000000010f81f730: nop
  0x000000010f81f731: mov    0x2a8(%r15),%rax
  0x000000010f81f738: movabs $0x0,%r10
  0x000000010f81f742: mov    %r10,0x2a8(%r15)
  0x000000010f81f749: movabs $0x0,%r10
  0x000000010f81f753: mov    %r10,0x2b0(%r15)
  0x000000010f81f75a: add    $0x70,%rsp
  0x000000010f81f75e: pop    %rbp
  0x000000010f81f75f: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f81f764: hlt    
  0x000000010f81f765: hlt    
  0x000000010f81f766: hlt    
  0x000000010f81f767: hlt    
  0x000000010f81f768: hlt    
  0x000000010f81f769: hlt    
  0x000000010f81f76a: hlt    
  0x000000010f81f76b: hlt    
  0x000000010f81f76c: hlt    
  0x000000010f81f76d: hlt    
  0x000000010f81f76e: hlt    
  0x000000010f81f76f: hlt    
  0x000000010f81f770: hlt    
  0x000000010f81f771: hlt    
  0x000000010f81f772: hlt    
  0x000000010f81f773: hlt    
  0x000000010f81f774: hlt    
  0x000000010f81f775: hlt    
  0x000000010f81f776: hlt    
  0x000000010f81f777: hlt    
  0x000000010f81f778: hlt    
  0x000000010f81f779: hlt    
  0x000000010f81f77a: hlt    
  0x000000010f81f77b: hlt    
  0x000000010f81f77c: hlt    
  0x000000010f81f77d: hlt    
  0x000000010f81f77e: hlt    
  0x000000010f81f77f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f81f780: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f81f785: mov    %rsp,-0x28(%rsp)
  0x000000010f81f78a: sub    $0x80,%rsp
  0x000000010f81f791: mov    %rax,0x78(%rsp)
  0x000000010f81f796: mov    %rcx,0x70(%rsp)
  0x000000010f81f79b: mov    %rdx,0x68(%rsp)
  0x000000010f81f7a0: mov    %rbx,0x60(%rsp)
  0x000000010f81f7a5: mov    %rbp,0x50(%rsp)
  0x000000010f81f7aa: mov    %rsi,0x48(%rsp)
  0x000000010f81f7af: mov    %rdi,0x40(%rsp)
  0x000000010f81f7b4: mov    %r8,0x38(%rsp)
  0x000000010f81f7b9: mov    %r9,0x30(%rsp)
  0x000000010f81f7be: mov    %r10,0x28(%rsp)
  0x000000010f81f7c3: mov    %r11,0x20(%rsp)
  0x000000010f81f7c8: mov    %r12,0x18(%rsp)
  0x000000010f81f7cd: mov    %r13,0x10(%rsp)
  0x000000010f81f7d2: mov    %r14,0x8(%rsp)
  0x000000010f81f7d7: mov    %r15,(%rsp)
  0x000000010f81f7db: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f81f7e5: movabs $0x10f81f785,%rsi  ;   {internal_word}
  0x000000010f81f7ef: mov    %rsp,%rdx
  0x000000010f81f7f2: and    $0xfffffffffffffff0,%rsp
  0x000000010f81f7f6: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f81f7fb: hlt    
[Deopt Handler Code]
  0x000000010f81f7fc: movabs $0x10f81f7fc,%r10  ;   {section_word}
  0x000000010f81f806: push   %r10
  0x000000010f81f808: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f81f80d: hlt    
  0x000000010f81f80e: hlt    
  0x000000010f81f80f: hlt    
Decoding compiled method 0x000000010f820150:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000010edafae0} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8:r8     = 'java/lang/Object'
  # parm4:    r9:r9     = 'java/lang/Object'
  # parm5:    rdi:rdi   = 'java/lang/Object'
  # parm6:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm7:    [sp+0x8]   = 'java/lang/Object'
  # parm8:    [sp+0x10]   = 'java/lang/Object'
  # parm9:    [sp+0x18]   = 'java/lang/Object'
  # parm10:   [sp+0x20]   = 'java/lang/Object'
  # parm11:   [sp+0x28]   = 'java/lang/Object'
  # parm12:   [sp+0x30]   = 'java/lang/invoke/MemberName'
  0x000000010f820280: mov    0x38(%rsp),%rbx
  0x000000010f820285: mov    0x18(%rbx),%rbx
  0x000000010f820289: test   %rbx,%rbx
  0x000000010f82028c: je     0x000000010f820295
  0x000000010f820292: jmpq   *0x40(%rbx)
  0x000000010f820295: jmpq   0x000000010f6d61a0  ;   {runtime_call}
  0x000000010f82029a: hlt    
  0x000000010f82029b: hlt    
  0x000000010f82029c: hlt    
  0x000000010f82029d: hlt    
  0x000000010f82029e: hlt    
  0x000000010f82029f: hlt    
Decoding compiled method 0x000000010f8202d0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010ed6b808} 'isStaticallyNameable' '(Ljava/lang/Class;)Z' in 'java/lang/invoke/InvokerBytecodeGenerator'
  # parm0:    rsi:rsi   = 'java/lang/Class'
  #           [sp+0xe0]  (sp of caller)
  0x000000010f820640: mov    %eax,-0x14000(%rsp)
  0x000000010f820647: push   %rbp
  0x000000010f820648: sub    $0xd0,%rsp
  0x000000010f82064f: movabs $0x10edaed28,%rdi  ;   {metadata(method data for {method} {0x000000010ed6b808} 'isStaticallyNameable' '(Ljava/lang/Class;)Z' in 'java/lang/invoke/InvokerBytecodeGenerator')}
  0x000000010f820659: mov    0xdc(%rdi),%ebx
  0x000000010f82065f: add    $0x8,%ebx
  0x000000010f820662: mov    %ebx,0xdc(%rdi)
  0x000000010f820668: movabs $0x10ed6b808,%rdi  ;   {metadata({method} {0x000000010ed6b808} 'isStaticallyNameable' '(Ljava/lang/Class;)Z' in 'java/lang/invoke/InvokerBytecodeGenerator')}
  0x000000010f820672: and    $0x1ff8,%ebx
  0x000000010f820678: cmp    $0x0,%ebx
  0x000000010f82067b: je     0x000000010f822202  ;*aload_0
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@0 (line 813)

  0x000000010f820681: movabs $0x7955806f8,%rdi  ;   {oop(a 'java/lang/Class' = 'java/lang/Object')}
  0x000000010f82068b: cmp    %rdi,%rsi
  0x000000010f82068e: movabs $0x10edaed28,%rdi  ;   {metadata(method data for {method} {0x000000010ed6b808} 'isStaticallyNameable' '(Ljava/lang/Class;)Z' in 'java/lang/invoke/InvokerBytecodeGenerator')}
  0x000000010f820698: movabs $0x108,%rbx
  0x000000010f8206a2: jne    0x000000010f8206b2
  0x000000010f8206a8: movabs $0x118,%rbx
  0x000000010f8206b2: mov    (%rdi,%rbx,1),%rax
  0x000000010f8206b6: lea    0x1(%rax),%rax
  0x000000010f8206ba: mov    %rax,(%rdi,%rbx,1)
  0x000000010f8206be: jne    0x000000010f8207b7
  0x000000010f8206c4: jmpq   0x000000010f8221ee  ;*if_acmpne
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@3 (line 813)

  0x000000010f8206c9: nopl   0x0(%rax)
  0x000000010f8206d0: movabs $0x10edaed28,%rdi  ;   {metadata(method data for {method} {0x000000010ed6b808} 'isStaticallyNameable' '(Ljava/lang/Class;)Z' in 'java/lang/invoke/InvokerBytecodeGenerator')}
  0x000000010f8206da: mov    0x8(%rsi),%esi
  0x000000010f8206dd: shl    $0x3,%rsi
  0x000000010f8206e1: cmp    0x180(%rdi),%rsi
  0x000000010f8206e8: jne    0x000000010f8206f7
  0x000000010f8206ea: addq   $0x1,0x188(%rdi)
  0x000000010f8206f2: jmpq   0x000000010f82075d
  0x000000010f8206f7: cmp    0x190(%rdi),%rsi
  0x000000010f8206fe: jne    0x000000010f82070d
  0x000000010f820700: addq   $0x1,0x198(%rdi)
  0x000000010f820708: jmpq   0x000000010f82075d
  0x000000010f82070d: cmpq   $0x0,0x180(%rdi)
  0x000000010f820718: jne    0x000000010f820731
  0x000000010f82071a: mov    %rsi,0x180(%rdi)
  0x000000010f820721: movq   $0x1,0x188(%rdi)
  0x000000010f82072c: jmpq   0x000000010f82075d
  0x000000010f820731: cmpq   $0x0,0x190(%rdi)
  0x000000010f82073c: jne    0x000000010f820755
  0x000000010f82073e: mov    %rsi,0x190(%rdi)
  0x000000010f820745: movq   $0x1,0x198(%rdi)
  0x000000010f820750: jmpq   0x000000010f82075d
  0x000000010f820755: addq   $0x1,0x178(%rdi)
  0x000000010f82075d: mov    0x90(%rsp),%rsi    ;*invokevirtual getComponentType
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@16 (line 816)

  0x000000010f820765: nop
  0x000000010f820766: nop
  0x000000010f820767: callq  0x000000010f7170a0  ; OopMap{off=300}
                                                ;*invokevirtual getComponentType
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@16 (line 816)
                                                ;   {optimized virtual_call}
  0x000000010f82076c: movabs $0x10edaed28,%rsi  ;   {metadata(method data for {method} {0x000000010ed6b808} 'isStaticallyNameable' '(Ljava/lang/Class;)Z' in 'java/lang/invoke/InvokerBytecodeGenerator')}
  0x000000010f820776: mov    0xe0(%rsi),%edi
  0x000000010f82077c: add    $0x8,%edi
  0x000000010f82077f: mov    %edi,0xe0(%rsi)
  0x000000010f820785: movabs $0x10ed6b808,%rsi  ;   {metadata({method} {0x000000010ed6b808} 'isStaticallyNameable' '(Ljava/lang/Class;)Z' in 'java/lang/invoke/InvokerBytecodeGenerator')}
  0x000000010f82078f: and    $0xfff8,%edi
  0x000000010f820795: cmp    $0x0,%edi
  0x000000010f820798: je     0x000000010f822219  ; OopMap{rax=Oop off=350}
                                                ;*goto
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@20 (line 816)

  0x000000010f82079e: test   %eax,-0x8d856a4(%rip)        # 0x0000000106a9b100
                                                ;   {poll}
  0x000000010f8207a4: movabs $0x10edaed28,%rsi  ;   {metadata(method data for {method} {0x000000010ed6b808} 'isStaticallyNameable' '(Ljava/lang/Class;)Z' in 'java/lang/invoke/InvokerBytecodeGenerator')}
  0x000000010f8207ae: incl   0x1a8(%rsi)
  0x000000010f8207b4: mov    %rax,%rsi          ;*goto
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@20 (line 816)

  0x000000010f8207b7: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x000000010f822230
  0x000000010f8207ba: mov    %rsi,%rdi
  0x000000010f8207bd: movabs $0x10edaed28,%rbx  ;   {metadata(method data for {method} {0x000000010ed6b808} 'isStaticallyNameable' '(Ljava/lang/Class;)Z' in 'java/lang/invoke/InvokerBytecodeGenerator')}
  0x000000010f8207c7: mov    0x8(%rdi),%edi
  0x000000010f8207ca: shl    $0x3,%rdi
  0x000000010f8207ce: cmp    0x130(%rbx),%rdi
  0x000000010f8207d5: jne    0x000000010f8207e4
  0x000000010f8207d7: addq   $0x1,0x138(%rbx)
  0x000000010f8207df: jmpq   0x000000010f82084a
  0x000000010f8207e4: cmp    0x140(%rbx),%rdi
  0x000000010f8207eb: jne    0x000000010f8207fa
  0x000000010f8207ed: addq   $0x1,0x148(%rbx)
  0x000000010f8207f5: jmpq   0x000000010f82084a
  0x000000010f8207fa: cmpq   $0x0,0x130(%rbx)
  0x000000010f820805: jne    0x000000010f82081e
  0x000000010f820807: mov    %rdi,0x130(%rbx)
  0x000000010f82080e: movq   $0x1,0x138(%rbx)
  0x000000010f820819: jmpq   0x000000010f82084a
  0x000000010f82081e: cmpq   $0x0,0x140(%rbx)
  0x000000010f820829: jne    0x000000010f820842
  0x000000010f82082b: mov    %rdi,0x140(%rbx)
  0x000000010f820832: movq   $0x1,0x148(%rbx)
  0x000000010f82083d: jmpq   0x000000010f82084a
  0x000000010f820842: addq   $0x1,0x128(%rbx)
  0x000000010f82084a: mov    %rsi,%rdi
  0x000000010f82084d: mov    %rdi,%rsi          ;*invokevirtual isArray
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@9 (line 815)

  0x000000010f820850: mov    %rdi,0x90(%rsp)
  0x000000010f820858: nop
  0x000000010f820859: nop
  0x000000010f82085a: nop
  0x000000010f82085b: nop
  0x000000010f82085c: nop
  0x000000010f82085d: nop
  0x000000010f82085e: nop
  0x000000010f82085f: callq  0x000000010f7170a0  ; OopMap{[144]=Oop off=548}
                                                ;*invokevirtual isArray
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@9 (line 815)
                                                ;   {optimized virtual_call}
  0x000000010f820864: cmp    $0x0,%eax
  0x000000010f820867: movabs $0x10edaed28,%rsi  ;   {metadata(method data for {method} {0x000000010ed6b808} 'isStaticallyNameable' '(Ljava/lang/Class;)Z' in 'java/lang/invoke/InvokerBytecodeGenerator')}
  0x000000010f820871: movabs $0x158,%rdi
  0x000000010f82087b: je     0x000000010f82088b
  0x000000010f820881: movabs $0x168,%rdi
  0x000000010f82088b: mov    (%rsi,%rdi,1),%rbx
  0x000000010f82088f: lea    0x1(%rbx),%rbx
  0x000000010f820893: mov    %rbx,(%rsi,%rdi,1)
  0x000000010f820897: mov    0x90(%rsp),%rsi
  0x000000010f82089f: jne    0x000000010f8206d0  ;*ifeq
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@12 (line 815)

  0x000000010f8208a5: mov    %rsi,%rdi
  0x000000010f8208a8: movabs $0x10edaed28,%rbx  ;   {metadata(method data for {method} {0x000000010ed6b808} 'isStaticallyNameable' '(Ljava/lang/Class;)Z' in 'java/lang/invoke/InvokerBytecodeGenerator')}
  0x000000010f8208b2: mov    0x8(%rdi),%edi
  0x000000010f8208b5: shl    $0x3,%rdi
  0x000000010f8208b9: cmp    0x1c8(%rbx),%rdi
  0x000000010f8208c0: jne    0x000000010f8208cf
  0x000000010f8208c2: addq   $0x1,0x1d0(%rbx)
  0x000000010f8208ca: jmpq   0x000000010f820935
  0x000000010f8208cf: cmp    0x1d8(%rbx),%rdi
  0x000000010f8208d6: jne    0x000000010f8208e5
  0x000000010f8208d8: addq   $0x1,0x1e0(%rbx)
  0x000000010f8208e0: jmpq   0x000000010f820935
  0x000000010f8208e5: cmpq   $0x0,0x1c8(%rbx)
  0x000000010f8208f0: jne    0x000000010f820909
  0x000000010f8208f2: mov    %rdi,0x1c8(%rbx)
  0x000000010f8208f9: movq   $0x1,0x1d0(%rbx)
  0x000000010f820904: jmpq   0x000000010f820935
  0x000000010f820909: cmpq   $0x0,0x1d8(%rbx)
  0x000000010f820914: jne    0x000000010f82092d
  0x000000010f820916: mov    %rdi,0x1d8(%rbx)
  0x000000010f82091d: movq   $0x1,0x1e0(%rbx)
  0x000000010f820928: jmpq   0x000000010f820935
  0x000000010f82092d: addq   $0x1,0x1c0(%rbx)
  0x000000010f820935: mov    %rsi,%rdi
  0x000000010f820938: mov    %rdi,%rsi          ;*invokevirtual isPrimitive
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@24 (line 817)

  0x000000010f82093b: mov    %rdi,0x90(%rsp)
  0x000000010f820943: nop
  0x000000010f820944: nop
  0x000000010f820945: nop
  0x000000010f820946: nop
  0x000000010f820947: callq  0x000000010f7170a0  ; OopMap{[144]=Oop off=780}
                                                ;*invokevirtual isPrimitive
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@24 (line 817)
                                                ;   {optimized virtual_call}
  0x000000010f82094c: cmp    $0x0,%eax
  0x000000010f82094f: movabs $0x10edaed28,%rsi  ;   {metadata(method data for {method} {0x000000010ed6b808} 'isStaticallyNameable' '(Ljava/lang/Class;)Z' in 'java/lang/invoke/InvokerBytecodeGenerator')}
  0x000000010f820959: movabs $0x1f0,%rdi
  0x000000010f820963: je     0x000000010f820973
  0x000000010f820969: movabs $0x200,%rdi
  0x000000010f820973: mov    (%rsi,%rdi,1),%rbx
  0x000000010f820977: lea    0x1(%rbx),%rbx
  0x000000010f82097b: mov    %rbx,(%rsi,%rdi,1)
  0x000000010f82097f: jne    0x000000010f8221da  ;*ifeq
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@27 (line 817)

  0x000000010f820985: mov    0x90(%rsp),%rsi
  0x000000010f82098d: movabs $0x10edaed28,%rdi  ;   {metadata(method data for {method} {0x000000010ed6b808} 'isStaticallyNameable' '(Ljava/lang/Class;)Z' in 'java/lang/invoke/InvokerBytecodeGenerator')}
  0x000000010f820997: addq   $0x1,0x210(%rdi)
  0x000000010f82099f: movabs $0x10edaf120,%rdi  ;   {metadata(method data for {method} {0x000000010eba97c8} 'isVMAnonymousClass' '(Ljava/lang/Class;)Z' in 'sun/reflect/misc/ReflectUtil')}
  0x000000010f8209a9: mov    0xdc(%rdi),%ebx
  0x000000010f8209af: add    $0x8,%ebx
  0x000000010f8209b2: mov    %ebx,0xdc(%rdi)
  0x000000010f8209b8: movabs $0x10eba97c8,%rdi  ;   {metadata({method} {0x000000010eba97c8} 'isVMAnonymousClass' '(Ljava/lang/Class;)Z' in 'sun/reflect/misc/ReflectUtil')}
  0x000000010f8209c2: and    $0x7ffff8,%ebx
  0x000000010f8209c8: cmp    $0x0,%ebx
  0x000000010f8209cb: je     0x000000010f822235
  0x000000010f8209d1: mov    %rsi,%rdi
  0x000000010f8209d4: movabs $0x10edaf120,%rbx  ;   {metadata(method data for {method} {0x000000010eba97c8} 'isVMAnonymousClass' '(Ljava/lang/Class;)Z' in 'sun/reflect/misc/ReflectUtil')}
  0x000000010f8209de: mov    0x8(%rdi),%edi
  0x000000010f8209e1: shl    $0x3,%rdi
  0x000000010f8209e5: cmp    0x110(%rbx),%rdi
  0x000000010f8209ec: jne    0x000000010f8209fb
  0x000000010f8209ee: addq   $0x1,0x118(%rbx)
  0x000000010f8209f6: jmpq   0x000000010f820a61
  0x000000010f8209fb: cmp    0x120(%rbx),%rdi
  0x000000010f820a02: jne    0x000000010f820a11
  0x000000010f820a04: addq   $0x1,0x128(%rbx)
  0x000000010f820a0c: jmpq   0x000000010f820a61
  0x000000010f820a11: cmpq   $0x0,0x110(%rbx)
  0x000000010f820a1c: jne    0x000000010f820a35
  0x000000010f820a1e: mov    %rdi,0x110(%rbx)
  0x000000010f820a25: movq   $0x1,0x118(%rbx)
  0x000000010f820a30: jmpq   0x000000010f820a61
  0x000000010f820a35: cmpq   $0x0,0x120(%rbx)
  0x000000010f820a40: jne    0x000000010f820a59
  0x000000010f820a42: mov    %rdi,0x120(%rbx)
  0x000000010f820a49: movq   $0x1,0x128(%rbx)
  0x000000010f820a54: jmpq   0x000000010f820a61
  0x000000010f820a59: addq   $0x1,0x108(%rbx)
  0x000000010f820a61: movabs $0x10ed91e68,%rdi  ;   {metadata(method data for {method} {0x000000010ea71870} 'getName' '()Ljava/lang/String;' in 'java/lang/Class')}
  0x000000010f820a6b: mov    0xdc(%rdi),%ebx
  0x000000010f820a71: add    $0x8,%ebx
  0x000000010f820a74: mov    %ebx,0xdc(%rdi)
  0x000000010f820a7a: movabs $0x10ea71870,%rdi  ;   {metadata({method} {0x000000010ea71870} 'getName' '()Ljava/lang/String;' in 'java/lang/Class')}
  0x000000010f820a84: and    $0x7ffff8,%ebx
  0x000000010f820a8a: cmp    $0x0,%ebx
  0x000000010f820a8d: je     0x000000010f82224c
  0x000000010f820a93: mov    0x14(%rsi),%edi
  0x000000010f820a96: shl    $0x3,%rdi          ;*getfield name
                                                ; - java.lang.Class::getName@1 (line 640)
                                                ; - sun.reflect.misc.ReflectUtil::isVMAnonymousClass@1 (line 344)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@33 (line 819)

  0x000000010f820a9a: cmp    $0x0,%rdi
  0x000000010f820a9e: movabs $0x10ed91e68,%rbx  ;   {metadata(method data for {method} {0x000000010ea71870} 'getName' '()Ljava/lang/String;' in 'java/lang/Class')}
  0x000000010f820aa8: movabs $0x108,%rax
  0x000000010f820ab2: jne    0x000000010f820ac2
  0x000000010f820ab8: movabs $0x118,%rax
  0x000000010f820ac2: mov    (%rbx,%rax,1),%rdx
  0x000000010f820ac6: lea    0x1(%rdx),%rdx
  0x000000010f820aca: mov    %rdx,(%rbx,%rax,1)
  0x000000010f820ace: jne    0x000000010f820b27  ;*ifnonnull
                                                ; - java.lang.Class::getName@6 (line 641)
                                                ; - sun.reflect.misc.ReflectUtil::isVMAnonymousClass@1 (line 344)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@33 (line 819)

  0x000000010f820ad4: mov    %rsi,%rdi
  0x000000010f820ad7: movabs $0x10ed91e68,%rbx  ;   {metadata(method data for {method} {0x000000010ea71870} 'getName' '()Ljava/lang/String;' in 'java/lang/Class')}
  0x000000010f820ae1: addq   $0x1,0x128(%rbx)
  0x000000010f820ae9: mov    %rsi,%rdi
  0x000000010f820aec: mov    %rdi,%rsi          ;*invokespecial getName0
                                                ; - java.lang.Class::getName@11 (line 642)
                                                ; - sun.reflect.misc.ReflectUtil::isVMAnonymousClass@1 (line 344)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@33 (line 819)

  0x000000010f820aef: mov    %rdi,0x90(%rsp)
  0x000000010f820af7: callq  0x000000010f7170a0  ; OopMap{[144]=Oop off=1212}
                                                ;*invokespecial getName0
                                                ; - java.lang.Class::getName@11 (line 642)
                                                ; - sun.reflect.misc.ReflectUtil::isVMAnonymousClass@1 (line 344)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@33 (line 819)
                                                ;   {optimized virtual_call}
  0x000000010f820afc: mov    0x90(%rsp),%rsi
  0x000000010f820b04: mov    %rax,%r10
  0x000000010f820b07: shr    $0x3,%r10
  0x000000010f820b0b: mov    %r10d,0x14(%rsi)
  0x000000010f820b0f: mov    %rsi,%rdx
  0x000000010f820b12: shr    $0x9,%rdx
  0x000000010f820b16: movabs $0x1065b9000,%rcx
  0x000000010f820b20: movb   $0x0,(%rdx,%rcx,1)  ;*putfield name
                                                ; - java.lang.Class::getName@16 (line 642)
                                                ; - sun.reflect.misc.ReflectUtil::isVMAnonymousClass@1 (line 344)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@33 (line 819)

  0x000000010f820b24: mov    %rax,%rdi          ;*aload_1
                                                ; - java.lang.Class::getName@19 (line 643)
                                                ; - sun.reflect.misc.ReflectUtil::isVMAnonymousClass@1 (line 344)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@33 (line 819)

  0x000000010f820b27: mov    %rsi,0x90(%rsp)
  0x000000010f820b2f: cmp    (%rdi),%rax        ;*invokevirtual indexOf
                                                ; - sun.reflect.misc.ReflectUtil::isVMAnonymousClass@6 (line 344)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@33 (line 819)
                                                ; implicit exception: dispatches to 0x000000010f822263
  0x000000010f820b32: mov    %rdi,%rdx
  0x000000010f820b35: movabs $0x10edaf120,%rcx  ;   {metadata(method data for {method} {0x000000010eba97c8} 'isVMAnonymousClass' '(Ljava/lang/Class;)Z' in 'sun/reflect/misc/ReflectUtil')}
  0x000000010f820b3f: mov    0x8(%rdx),%edx
  0x000000010f820b42: shl    $0x3,%rdx
  0x000000010f820b46: cmp    0x140(%rcx),%rdx
  0x000000010f820b4d: jne    0x000000010f820b5c
  0x000000010f820b4f: addq   $0x1,0x148(%rcx)
  0x000000010f820b57: jmpq   0x000000010f820bc2
  0x000000010f820b5c: cmp    0x150(%rcx),%rdx
  0x000000010f820b63: jne    0x000000010f820b72
  0x000000010f820b65: addq   $0x1,0x158(%rcx)
  0x000000010f820b6d: jmpq   0x000000010f820bc2
  0x000000010f820b72: cmpq   $0x0,0x140(%rcx)
  0x000000010f820b7d: jne    0x000000010f820b96
  0x000000010f820b7f: mov    %rdx,0x140(%rcx)
  0x000000010f820b86: movq   $0x1,0x148(%rcx)
  0x000000010f820b91: jmpq   0x000000010f820bc2
  0x000000010f820b96: cmpq   $0x0,0x150(%rcx)
  0x000000010f820ba1: jne    0x000000010f820bba
  0x000000010f820ba3: mov    %rdx,0x150(%rcx)
  0x000000010f820baa: movq   $0x1,0x158(%rcx)
  0x000000010f820bb5: jmpq   0x000000010f820bc2
  0x000000010f820bba: addq   $0x1,0x138(%rcx)
  0x000000010f820bc2: movabs $0x10edaf300,%rdx  ;   {metadata(method data for {method} {0x000000010ea6a548} 'indexOf' '(Ljava/lang/String;)I' in 'java/lang/String')}
  0x000000010f820bcc: mov    0xdc(%rdx),%ecx
  0x000000010f820bd2: add    $0x8,%ecx
  0x000000010f820bd5: mov    %ecx,0xdc(%rdx)
  0x000000010f820bdb: movabs $0x10ea6a548,%rdx  ;   {metadata({method} {0x000000010ea6a548} 'indexOf' '(Ljava/lang/String;)I' in 'java/lang/String')}
  0x000000010f820be5: and    $0x7ffff8,%ecx
  0x000000010f820beb: cmp    $0x0,%ecx
  0x000000010f820bee: je     0x000000010f822268
  0x000000010f820bf4: mov    %rdi,%rdx
  0x000000010f820bf7: movabs $0x10edaf300,%rcx  ;   {metadata(method data for {method} {0x000000010ea6a548} 'indexOf' '(Ljava/lang/String;)I' in 'java/lang/String')}
  0x000000010f820c01: mov    0x8(%rdx),%edx
  0x000000010f820c04: shl    $0x3,%rdx
  0x000000010f820c08: cmp    0x110(%rcx),%rdx
  0x000000010f820c0f: jne    0x000000010f820c1e
  0x000000010f820c11: addq   $0x1,0x118(%rcx)
  0x000000010f820c19: jmpq   0x000000010f820c84
  0x000000010f820c1e: cmp    0x120(%rcx),%rdx
  0x000000010f820c25: jne    0x000000010f820c34
  0x000000010f820c27: addq   $0x1,0x128(%rcx)
  0x000000010f820c2f: jmpq   0x000000010f820c84
  0x000000010f820c34: cmpq   $0x0,0x110(%rcx)
  0x000000010f820c3f: jne    0x000000010f820c58
  0x000000010f820c41: mov    %rdx,0x110(%rcx)
  0x000000010f820c48: movq   $0x1,0x118(%rcx)
  0x000000010f820c53: jmpq   0x000000010f820c84
  0x000000010f820c58: cmpq   $0x0,0x120(%rcx)
  0x000000010f820c63: jne    0x000000010f820c7c
  0x000000010f820c65: mov    %rdx,0x120(%rcx)
  0x000000010f820c6c: movq   $0x1,0x128(%rcx)
  0x000000010f820c77: jmpq   0x000000010f820c84
  0x000000010f820c7c: addq   $0x1,0x108(%rcx)
  0x000000010f820c84: movabs $0x10ed92370,%rdx  ;   {metadata(method data for {method} {0x000000010ea6a5f0} 'indexOf' '(Ljava/lang/String;I)I' in 'java/lang/String')}
  0x000000010f820c8e: mov    0xdc(%rdx),%ecx
  0x000000010f820c94: add    $0x8,%ecx
  0x000000010f820c97: mov    %ecx,0xdc(%rdx)
  0x000000010f820c9d: movabs $0x10ea6a5f0,%rdx  ;   {metadata({method} {0x000000010ea6a5f0} 'indexOf' '(Ljava/lang/String;I)I' in 'java/lang/String')}
  0x000000010f820ca7: and    $0x7ffff8,%ecx
  0x000000010f820cad: cmp    $0x0,%ecx
  0x000000010f820cb0: je     0x000000010f82227f
  0x000000010f820cb6: mov    0xc(%rdi),%edx
  0x000000010f820cb9: shl    $0x3,%rdx          ;*getfield value
                                                ; - java.lang.String::indexOf@1 (line 1718)
                                                ; - java.lang.String::indexOf@3 (line 1698)
                                                ; - sun.reflect.misc.ReflectUtil::isVMAnonymousClass@6 (line 344)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@33 (line 819)

  0x000000010f820cbd: mov    0xc(%rdx),%ecx     ;*arraylength
                                                ; - java.lang.String::indexOf@9 (line 1718)
                                                ; - java.lang.String::indexOf@3 (line 1698)
                                                ; - sun.reflect.misc.ReflectUtil::isVMAnonymousClass@6 (line 344)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@33 (line 819)
                                                ; implicit exception: dispatches to 0x000000010f822296
  0x000000010f820cc0: movabs $0x7955b5968,%r8   ;   {oop("/")}
  0x000000010f820cca: mov    0xc(%r8),%r8d      ; implicit exception: dispatches to 0x000000010f82229b
  0x000000010f820cce: shl    $0x3,%r8           ;*getfield value
                                                ; - java.lang.String::indexOf@11 (line 1718)
                                                ; - java.lang.String::indexOf@3 (line 1698)
                                                ; - sun.reflect.misc.ReflectUtil::isVMAnonymousClass@6 (line 344)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@33 (line 819)

  0x000000010f820cd2: mov    0xc(%r8),%edi      ;*arraylength
                                                ; - java.lang.String::indexOf@19 (line 1718)
                                                ; - java.lang.String::indexOf@3 (line 1698)
                                                ; - sun.reflect.misc.ReflectUtil::isVMAnonymousClass@6 (line 344)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@33 (line 819)
                                                ; implicit exception: dispatches to 0x000000010f8222a0
  0x000000010f820cd6: movabs $0x10ed92370,%r9   ;   {metadata(method data for {method} {0x000000010ea6a5f0} 'indexOf' '(Ljava/lang/String;I)I' in 'java/lang/String')}
  0x000000010f820ce0: addq   $0x1,0x108(%r9)
  0x000000010f820ce8: mov    %rdx,%rsi
  0x000000010f820ceb: mov    $0x0,%edx
  0x000000010f820cf0: mov    $0x0,%r9d
  0x000000010f820cf6: movl   $0x0,(%rsp)        ;*invokestatic indexOf
                                                ; - java.lang.String::indexOf@21 (line 1718)
                                                ; - java.lang.String::indexOf@3 (line 1698)
                                                ; - sun.reflect.misc.ReflectUtil::isVMAnonymousClass@6 (line 344)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@33 (line 819)

  0x000000010f820cfd: nop
  0x000000010f820cfe: nop
  0x000000010f820cff: callq  0x000000010f717520  ; OopMap{[144]=Oop off=1732}
                                                ;*invokestatic indexOf
                                                ; - java.lang.String::indexOf@21 (line 1718)
                                                ; - java.lang.String::indexOf@3 (line 1698)
                                                ; - sun.reflect.misc.ReflectUtil::isVMAnonymousClass@6 (line 344)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@33 (line 819)
                                                ;   {static_call}
  0x000000010f820d04: cmp    $0xffffffff,%eax
  0x000000010f820d07: movabs $0x10edaf120,%rsi  ;   {metadata(method data for {method} {0x000000010eba97c8} 'isVMAnonymousClass' '(Ljava/lang/Class;)Z' in 'sun/reflect/misc/ReflectUtil')}
  0x000000010f820d11: movabs $0x168,%rdi
  0x000000010f820d1b: jle    0x000000010f820d2b
  0x000000010f820d21: movabs $0x178,%rdi
  0x000000010f820d2b: mov    (%rsi,%rdi,1),%rbx
  0x000000010f820d2f: lea    0x1(%rbx),%rbx
  0x000000010f820d33: mov    %rbx,(%rsi,%rdi,1)
  0x000000010f820d37: jle    0x000000010f820d57  ;*if_icmple
                                                ; - sun.reflect.misc.ReflectUtil::isVMAnonymousClass@10 (line 344)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@33 (line 819)

  0x000000010f820d3d: movabs $0x10edaf120,%rsi  ;   {metadata(method data for {method} {0x000000010eba97c8} 'isVMAnonymousClass' '(Ljava/lang/Class;)Z' in 'sun/reflect/misc/ReflectUtil')}
  0x000000010f820d47: incl   0x188(%rsi)
  0x000000010f820d4d: mov    $0x1,%esi
  0x000000010f820d52: jmpq   0x000000010f820d5c  ;*goto
                                                ; - sun.reflect.misc.ReflectUtil::isVMAnonymousClass@14 (line 344)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@33 (line 819)

  0x000000010f820d57: mov    $0x0,%esi          ;*ireturn
                                                ; - sun.reflect.misc.ReflectUtil::isVMAnonymousClass@18 (line 344)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@33 (line 819)

  0x000000010f820d5c: and    $0x1,%esi
  0x000000010f820d5f: cmp    $0x0,%esi
  0x000000010f820d62: movabs $0x10edaed28,%rsi  ;   {metadata(method data for {method} {0x000000010ed6b808} 'isStaticallyNameable' '(Ljava/lang/Class;)Z' in 'java/lang/invoke/InvokerBytecodeGenerator')}
  0x000000010f820d6c: movabs $0x220,%rdi
  0x000000010f820d76: je     0x000000010f820d86
  0x000000010f820d7c: movabs $0x230,%rdi
  0x000000010f820d86: mov    (%rsi,%rdi,1),%rbx
  0x000000010f820d8a: lea    0x1(%rbx),%rbx
  0x000000010f820d8e: mov    %rbx,(%rsi,%rdi,1)
  0x000000010f820d92: jne    0x000000010f8221c6  ;*ifeq
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@36 (line 819)

  0x000000010f820d98: mov    0x90(%rsp),%rsi
  0x000000010f820da0: mov    %rsi,%rdi
  0x000000010f820da3: movabs $0x10edaed28,%rbx  ;   {metadata(method data for {method} {0x000000010ed6b808} 'isStaticallyNameable' '(Ljava/lang/Class;)Z' in 'java/lang/invoke/InvokerBytecodeGenerator')}
  0x000000010f820dad: mov    0x8(%rdi),%edi
  0x000000010f820db0: shl    $0x3,%rdi
  0x000000010f820db4: cmp    0x248(%rbx),%rdi
  0x000000010f820dbb: jne    0x000000010f820dca
  0x000000010f820dbd: addq   $0x1,0x250(%rbx)
  0x000000010f820dc5: jmpq   0x000000010f820e30
  0x000000010f820dca: cmp    0x258(%rbx),%rdi
  0x000000010f820dd1: jne    0x000000010f820de0
  0x000000010f820dd3: addq   $0x1,0x260(%rbx)
  0x000000010f820ddb: jmpq   0x000000010f820e30
  0x000000010f820de0: cmpq   $0x0,0x248(%rbx)
  0x000000010f820deb: jne    0x000000010f820e04
  0x000000010f820ded: mov    %rdi,0x248(%rbx)
  0x000000010f820df4: movq   $0x1,0x250(%rbx)
  0x000000010f820dff: jmpq   0x000000010f820e30
  0x000000010f820e04: cmpq   $0x0,0x258(%rbx)
  0x000000010f820e0f: jne    0x000000010f820e28
  0x000000010f820e11: mov    %rdi,0x258(%rbx)
  0x000000010f820e18: movq   $0x1,0x260(%rbx)
  0x000000010f820e23: jmpq   0x000000010f820e30
  0x000000010f820e28: addq   $0x1,0x240(%rbx)
  0x000000010f820e30: movabs $0x10ed9a680,%rdi  ;   {metadata(method data for {method} {0x000000010ea719c0} 'getClassLoader' '()Ljava/lang/ClassLoader;' in 'java/lang/Class')}
  0x000000010f820e3a: mov    0xdc(%rdi),%ebx
  0x000000010f820e40: add    $0x8,%ebx
  0x000000010f820e43: mov    %ebx,0xdc(%rdi)
  0x000000010f820e49: movabs $0x10ea719c0,%rdi  ;   {metadata({method} {0x000000010ea719c0} 'getClassLoader' '()Ljava/lang/ClassLoader;' in 'java/lang/Class')}
  0x000000010f820e53: and    $0x7ffff8,%ebx
  0x000000010f820e59: cmp    $0x0,%ebx
  0x000000010f820e5c: je     0x000000010f8222a5
  0x000000010f820e62: mov    %rsi,%rdi
  0x000000010f820e65: movabs $0x10ed9a680,%rbx  ;   {metadata(method data for {method} {0x000000010ea719c0} 'getClassLoader' '()Ljava/lang/ClassLoader;' in 'java/lang/Class')}
  0x000000010f820e6f: mov    0x8(%rdi),%edi
  0x000000010f820e72: shl    $0x3,%rdi
  0x000000010f820e76: cmp    0x110(%rbx),%rdi
  0x000000010f820e7d: jne    0x000000010f820e8c
  0x000000010f820e7f: addq   $0x1,0x118(%rbx)
  0x000000010f820e87: jmpq   0x000000010f820ef2
  0x000000010f820e8c: cmp    0x120(%rbx),%rdi
  0x000000010f820e93: jne    0x000000010f820ea2
  0x000000010f820e95: addq   $0x1,0x128(%rbx)
  0x000000010f820e9d: jmpq   0x000000010f820ef2
  0x000000010f820ea2: cmpq   $0x0,0x110(%rbx)
  0x000000010f820ead: jne    0x000000010f820ec6
  0x000000010f820eaf: mov    %rdi,0x110(%rbx)
  0x000000010f820eb6: movq   $0x1,0x118(%rbx)
  0x000000010f820ec1: jmpq   0x000000010f820ef2
  0x000000010f820ec6: cmpq   $0x0,0x120(%rbx)
  0x000000010f820ed1: jne    0x000000010f820eea
  0x000000010f820ed3: mov    %rdi,0x120(%rbx)
  0x000000010f820eda: movq   $0x1,0x128(%rbx)
  0x000000010f820ee5: jmpq   0x000000010f820ef2
  0x000000010f820eea: addq   $0x1,0x108(%rbx)
  0x000000010f820ef2: mov    0x18(%rsi),%edi
  0x000000010f820ef5: shl    $0x3,%rdi          ;*getfield classLoader
                                                ; - java.lang.Class::getClassLoader0@1 (line 689)
                                                ; - java.lang.Class::getClassLoader@1 (line 678)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@42 (line 822)

  0x000000010f820ef9: mov    %rdi,0x98(%rsp)
  0x000000010f820f01: cmp    $0x0,%rdi
  0x000000010f820f05: movabs $0x10ed9a680,%rbx  ;   {metadata(method data for {method} {0x000000010ea719c0} 'getClassLoader' '()Ljava/lang/ClassLoader;' in 'java/lang/Class')}
  0x000000010f820f0f: movabs $0x138,%rax
  0x000000010f820f19: jne    0x000000010f820f29
  0x000000010f820f1f: movabs $0x148,%rax
  0x000000010f820f29: mov    (%rbx,%rax,1),%rdx
  0x000000010f820f2d: lea    0x1(%rdx),%rdx
  0x000000010f820f31: mov    %rdx,(%rbx,%rax,1)
  0x000000010f820f35: jne    0x000000010f820f52  ;*ifnonnull
                                                ; - java.lang.Class::getClassLoader@6 (line 679)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@42 (line 822)

  0x000000010f820f3b: movabs $0x0,%rdi          ;   {oop(NULL)}
  0x000000010f820f45: mov    %rsi,0x90(%rsp)
  0x000000010f820f4d: jmpq   0x000000010f8215c4  ;*ldc
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@45 (line 822)

  0x000000010f820f52: movabs $0x10ed9a680,%rbx  ;   {metadata(method data for {method} {0x000000010ea719c0} 'getClassLoader' '()Ljava/lang/ClassLoader;' in 'java/lang/Class')}
  0x000000010f820f5c: addq   $0x1,0x158(%rbx)
  0x000000010f820f64: movabs $0x10ec81848,%rbx  ;   {metadata(method data for {method} {0x000000010ea7e778} 'getSecurityManager' '()Ljava/lang/SecurityManager;' in 'java/lang/System')}
  0x000000010f820f6e: mov    0xdc(%rbx),%eax
  0x000000010f820f74: add    $0x8,%eax
  0x000000010f820f77: mov    %eax,0xdc(%rbx)
  0x000000010f820f7d: movabs $0x10ea7e778,%rbx  ;   {metadata({method} {0x000000010ea7e778} 'getSecurityManager' '()Ljava/lang/SecurityManager;' in 'java/lang/System')}
  0x000000010f820f87: and    $0x7ffff8,%eax
  0x000000010f820f8d: cmp    $0x0,%eax
  0x000000010f820f90: je     0x000000010f8222bc
  0x000000010f820f96: movabs $0x795580c78,%rbx  ;   {oop(a 'java/lang/Class' = 'java/lang/System')}
  0x000000010f820fa0: mov    0x74(%rbx),%ebx
  0x000000010f820fa3: shl    $0x3,%rbx          ;*getstatic security
                                                ; - java.lang.System::getSecurityManager@0 (line 334)
                                                ; - java.lang.Class::getClassLoader@11 (line 681)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@42 (line 822)

  0x000000010f820fa7: cmp    $0x0,%rbx
  0x000000010f820fab: movabs $0x10ed9a680,%rbx  ;   {metadata(method data for {method} {0x000000010ea719c0} 'getClassLoader' '()Ljava/lang/ClassLoader;' in 'java/lang/Class')}
  0x000000010f820fb5: movabs $0x168,%rax
  0x000000010f820fbf: je     0x000000010f820fcf
  0x000000010f820fc5: movabs $0x178,%rax
  0x000000010f820fcf: mov    (%rbx,%rax,1),%rdx
  0x000000010f820fd3: lea    0x1(%rdx),%rdx
  0x000000010f820fd7: mov    %rdx,(%rbx,%rax,1)
  0x000000010f820fdb: mov    %rsi,0x90(%rsp)
  0x000000010f820fe3: je     0x000000010f8215c4  ;*ifnull
                                                ; - java.lang.Class::getClassLoader@16 (line 682)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@42 (line 822)

  0x000000010f820fe9: movabs $0x10ed9a680,%rbx  ;   {metadata(method data for {method} {0x000000010ea719c0} 'getClassLoader' '()Ljava/lang/ClassLoader;' in 'java/lang/Class')}
  0x000000010f820ff3: addq   $0x1,0x188(%rbx)
  0x000000010f820ffb: nop
  0x000000010f820ffc: nop
  0x000000010f820ffd: nop
  0x000000010f820ffe: nop
  0x000000010f820fff: callq  0x000000010f717520  ; OopMap{[152]=Oop [144]=Oop off=2500}
                                                ;*invokestatic getCallerClass
                                                ; - java.lang.Class::getClassLoader@20 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@42 (line 822)
                                                ;   {static_call}
  0x000000010f821004: movabs $0x10ed9a680,%rdx  ;   {metadata(method data for {method} {0x000000010ea719c0} 'getClassLoader' '()Ljava/lang/ClassLoader;' in 'java/lang/Class')}
  0x000000010f82100e: addq   $0x1,0x198(%rdx)
  0x000000010f821016: movabs $0x10ed9a868,%rdx  ;   {metadata(method data for {method} {0x000000010ea7bb30} 'checkClassLoaderPermission' '(Ljava/lang/ClassLoader;Ljava/lang/Class;)V' in 'java/lang/ClassLoader')}
  0x000000010f821020: mov    0xdc(%rdx),%esi
  0x000000010f821026: add    $0x8,%esi
  0x000000010f821029: mov    %esi,0xdc(%rdx)
  0x000000010f82102f: movabs $0x10ea7bb30,%rdx  ;   {metadata({method} {0x000000010ea7bb30} 'checkClassLoaderPermission' '(Ljava/lang/ClassLoader;Ljava/lang/Class;)V' in 'java/lang/ClassLoader')}
  0x000000010f821039: and    $0x7ffff8,%esi
  0x000000010f82103f: cmp    $0x0,%esi
  0x000000010f821042: je     0x000000010f8222d3
  0x000000010f821048: movabs $0x10ed9a868,%rdx  ;   {metadata(method data for {method} {0x000000010ea7bb30} 'checkClassLoaderPermission' '(Ljava/lang/ClassLoader;Ljava/lang/Class;)V' in 'java/lang/ClassLoader')}
  0x000000010f821052: addq   $0x1,0x108(%rdx)
  0x000000010f82105a: movabs $0x10ec81848,%rdx  ;   {metadata(method data for {method} {0x000000010ea7e778} 'getSecurityManager' '()Ljava/lang/SecurityManager;' in 'java/lang/System')}
  0x000000010f821064: mov    0xdc(%rdx),%esi
  0x000000010f82106a: add    $0x8,%esi
  0x000000010f82106d: mov    %esi,0xdc(%rdx)
  0x000000010f821073: movabs $0x10ea7e778,%rdx  ;   {metadata({method} {0x000000010ea7e778} 'getSecurityManager' '()Ljava/lang/SecurityManager;' in 'java/lang/System')}
  0x000000010f82107d: and    $0x7ffff8,%esi
  0x000000010f821083: cmp    $0x0,%esi
  0x000000010f821086: je     0x000000010f8222ea
  0x000000010f82108c: movabs $0x795580c78,%rdx  ;   {oop(a 'java/lang/Class' = 'java/lang/System')}
  0x000000010f821096: mov    0x74(%rdx),%esi
  0x000000010f821099: shl    $0x3,%rsi          ;*getstatic security
                                                ; - java.lang.System::getSecurityManager@0 (line 334)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@0 (line 1523)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@42 (line 822)

  0x000000010f82109d: cmp    $0x0,%rsi
  0x000000010f8210a1: movabs $0x10ed9a868,%rdx  ;   {metadata(method data for {method} {0x000000010ea7bb30} 'checkClassLoaderPermission' '(Ljava/lang/ClassLoader;Ljava/lang/Class;)V' in 'java/lang/ClassLoader')}
  0x000000010f8210ab: movabs $0x118,%rdi
  0x000000010f8210b5: je     0x000000010f8210c5
  0x000000010f8210bb: movabs $0x128,%rdi
  0x000000010f8210c5: mov    (%rdx,%rdi,1),%rbx
  0x000000010f8210c9: lea    0x1(%rbx),%rbx
  0x000000010f8210cd: mov    %rbx,(%rdx,%rdi,1)
  0x000000010f8210d1: je     0x000000010f8215bc  ;*ifnull
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@5 (line 1524)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@42 (line 822)

  0x000000010f8210d7: movabs $0x10ed9a868,%rdx  ;   {metadata(method data for {method} {0x000000010ea7bb30} 'checkClassLoaderPermission' '(Ljava/lang/ClassLoader;Ljava/lang/Class;)V' in 'java/lang/ClassLoader')}
  0x000000010f8210e1: addq   $0x1,0x138(%rdx)
  0x000000010f8210e9: movabs $0x10ed9aa58,%rdx  ;   {metadata(method data for {method} {0x000000010ea7ba78} 'getClassLoader' '(Ljava/lang/Class;)Ljava/lang/ClassLoader;' in 'java/lang/ClassLoader')}
  0x000000010f8210f3: mov    0xdc(%rdx),%edi
  0x000000010f8210f9: add    $0x8,%edi
  0x000000010f8210fc: mov    %edi,0xdc(%rdx)
  0x000000010f821102: movabs $0x10ea7ba78,%rdx  ;   {metadata({method} {0x000000010ea7ba78} 'getClassLoader' '(Ljava/lang/Class;)Ljava/lang/ClassLoader;' in 'java/lang/ClassLoader')}
  0x000000010f82110c: and    $0x7ffff8,%edi
  0x000000010f821112: cmp    $0x0,%edi
  0x000000010f821115: je     0x000000010f822301
  0x000000010f82111b: cmp    $0x0,%rax
  0x000000010f82111f: movabs $0x10ed9aa58,%rdx  ;   {metadata(method data for {method} {0x000000010ea7ba78} 'getClassLoader' '(Ljava/lang/Class;)Ljava/lang/ClassLoader;' in 'java/lang/ClassLoader')}
  0x000000010f821129: movabs $0x108,%rdi
  0x000000010f821133: jne    0x000000010f821143
  0x000000010f821139: movabs $0x118,%rdi
  0x000000010f821143: mov    (%rdx,%rdi,1),%rbx
  0x000000010f821147: lea    0x1(%rbx),%rbx
  0x000000010f82114b: mov    %rbx,(%rdx,%rdi,1)
  0x000000010f82114f: jne    0x000000010f821164  ;*ifnonnull
                                                ; - java.lang.ClassLoader::getClassLoader@1 (line 1510)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@9 (line 1526)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@42 (line 822)

  0x000000010f821155: movabs $0x0,%rdx          ;   {oop(NULL)}
  0x000000010f82115f: jmpq   0x000000010f8211fe  ;*astore_3
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@12 (line 1526)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@42 (line 822)

  0x000000010f821164: cmp    (%rax),%rax        ;*invokevirtual getClassLoader0
                                                ; - java.lang.ClassLoader::getClassLoader@7 (line 1514)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@9 (line 1526)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@42 (line 822)
                                                ; implicit exception: dispatches to 0x000000010f822318
  0x000000010f821167: mov    %rax,%rdx
  0x000000010f82116a: movabs $0x10ed9aa58,%rdi  ;   {metadata(method data for {method} {0x000000010ea7ba78} 'getClassLoader' '(Ljava/lang/Class;)Ljava/lang/ClassLoader;' in 'java/lang/ClassLoader')}
  0x000000010f821174: mov    0x8(%rdx),%edx
  0x000000010f821177: shl    $0x3,%rdx
  0x000000010f82117b: cmp    0x130(%rdi),%rdx
  0x000000010f821182: jne    0x000000010f821191
  0x000000010f821184: addq   $0x1,0x138(%rdi)
  0x000000010f82118c: jmpq   0x000000010f8211f7
  0x000000010f821191: cmp    0x140(%rdi),%rdx
  0x000000010f821198: jne    0x000000010f8211a7
  0x000000010f82119a: addq   $0x1,0x148(%rdi)
  0x000000010f8211a2: jmpq   0x000000010f8211f7
  0x000000010f8211a7: cmpq   $0x0,0x130(%rdi)
  0x000000010f8211b2: jne    0x000000010f8211cb
  0x000000010f8211b4: mov    %rdx,0x130(%rdi)
  0x000000010f8211bb: movq   $0x1,0x138(%rdi)
  0x000000010f8211c6: jmpq   0x000000010f8211f7
  0x000000010f8211cb: cmpq   $0x0,0x140(%rdi)
  0x000000010f8211d6: jne    0x000000010f8211ef
  0x000000010f8211d8: mov    %rdx,0x140(%rdi)
  0x000000010f8211df: movq   $0x1,0x148(%rdi)
  0x000000010f8211ea: jmpq   0x000000010f8211f7
  0x000000010f8211ef: addq   $0x1,0x128(%rdi)
  0x000000010f8211f7: mov    0x18(%rax),%edx
  0x000000010f8211fa: shl    $0x3,%rdx          ;*getfield classLoader
                                                ; - java.lang.Class::getClassLoader0@1 (line 689)
                                                ; - java.lang.ClassLoader::getClassLoader@7 (line 1514)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@9 (line 1526)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@42 (line 822)

  0x000000010f8211fe: mov    0x98(%rsp),%rdi
  0x000000010f821206: movabs $0x10ed9a868,%rbx  ;   {metadata(method data for {method} {0x000000010ea7bb30} 'checkClassLoaderPermission' '(Ljava/lang/ClassLoader;Ljava/lang/Class;)V' in 'java/lang/ClassLoader')}
  0x000000010f821210: addq   $0x1,0x148(%rbx)
  0x000000010f821218: movabs $0x10ed9ad18,%rbx  ;   {metadata(method data for {method} {0x000000010ea7b9d8} 'needsClassLoaderPermissionCheck' '(Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;)Z' in 'java/lang/ClassLoader')}
  0x000000010f821222: mov    0xdc(%rbx),%eax
  0x000000010f821228: add    $0x8,%eax
  0x000000010f82122b: mov    %eax,0xdc(%rbx)
  0x000000010f821231: movabs $0x10ea7b9d8,%rbx  ;   {metadata({method} {0x000000010ea7b9d8} 'needsClassLoaderPermissionCheck' '(Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;)Z' in 'java/lang/ClassLoader')}
  0x000000010f82123b: and    $0x7ffff8,%eax
  0x000000010f821241: cmp    $0x0,%eax
  0x000000010f821244: je     0x000000010f82231d
  0x000000010f82124a: cmp    %rdi,%rdx
  0x000000010f82124d: movabs $0x10ed9ad18,%rbx  ;   {metadata(method data for {method} {0x000000010ea7b9d8} 'needsClassLoaderPermissionCheck' '(Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;)Z' in 'java/lang/ClassLoader')}
  0x000000010f821257: movabs $0x108,%rax
  0x000000010f821261: jne    0x000000010f821271
  0x000000010f821267: movabs $0x118,%rax
  0x000000010f821271: mov    (%rbx,%rax,1),%rcx
  0x000000010f821275: lea    0x1(%rcx),%rcx
  0x000000010f821279: mov    %rcx,(%rbx,%rax,1)
  0x000000010f82127d: jne    0x000000010f82128d  ;*if_acmpne
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@2 (line 1498)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1527)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@42 (line 822)

  0x000000010f821283: mov    $0x0,%edx
  0x000000010f821288: jmpq   0x000000010f8214c1  ;*ifeq
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@18 (line 1527)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@42 (line 822)

  0x000000010f82128d: cmp    $0x0,%rdx
  0x000000010f821291: movabs $0x10ed9ad18,%rbx  ;   {metadata(method data for {method} {0x000000010ea7b9d8} 'needsClassLoaderPermissionCheck' '(Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;)Z' in 'java/lang/ClassLoader')}
  0x000000010f82129b: movabs $0x128,%rax
  0x000000010f8212a5: jne    0x000000010f8212b5
  0x000000010f8212ab: movabs $0x138,%rax
  0x000000010f8212b5: mov    (%rbx,%rax,1),%rcx
  0x000000010f8212b9: lea    0x1(%rcx),%rcx
  0x000000010f8212bd: mov    %rcx,(%rbx,%rax,1)
  0x000000010f8212c1: jne    0x000000010f8212d1  ;*ifnonnull
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@8 (line 1501)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1527)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@42 (line 822)

  0x000000010f8212c7: mov    $0x0,%edx
  0x000000010f8212cc: jmpq   0x000000010f8214c1  ;*ifeq
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@18 (line 1527)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@42 (line 822)

  0x000000010f8212d1: cmp    (%rdi),%rax        ;*invokevirtual isAncestor
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@15 (line 1504)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1527)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@42 (line 822)
                                                ; implicit exception: dispatches to 0x000000010f822334
  0x000000010f8212d4: mov    %rdi,%rbx
  0x000000010f8212d7: movabs $0x10ed9ad18,%rax  ;   {metadata(method data for {method} {0x000000010ea7b9d8} 'needsClassLoaderPermissionCheck' '(Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;)Z' in 'java/lang/ClassLoader')}
  0x000000010f8212e1: mov    0x8(%rbx),%ebx
  0x000000010f8212e4: shl    $0x3,%rbx
  0x000000010f8212e8: cmp    0x150(%rax),%rbx
  0x000000010f8212ef: jne    0x000000010f8212fe
  0x000000010f8212f1: addq   $0x1,0x158(%rax)
  0x000000010f8212f9: jmpq   0x000000010f821364
  0x000000010f8212fe: cmp    0x160(%rax),%rbx
  0x000000010f821305: jne    0x000000010f821314
  0x000000010f821307: addq   $0x1,0x168(%rax)
  0x000000010f82130f: jmpq   0x000000010f821364
  0x000000010f821314: cmpq   $0x0,0x150(%rax)
  0x000000010f82131f: jne    0x000000010f821338
  0x000000010f821321: mov    %rbx,0x150(%rax)
  0x000000010f821328: movq   $0x1,0x158(%rax)
  0x000000010f821333: jmpq   0x000000010f821364
  0x000000010f821338: cmpq   $0x0,0x160(%rax)
  0x000000010f821343: jne    0x000000010f82135c
  0x000000010f821345: mov    %rbx,0x160(%rax)
  0x000000010f82134c: movq   $0x1,0x168(%rax)
  0x000000010f821357: jmpq   0x000000010f821364
  0x000000010f82135c: addq   $0x1,0x148(%rax)
  0x000000010f821364: movabs $0x10ed9af10,%rbx  ;   {metadata(method data for {method} {0x000000010ea7b928} 'isAncestor' '(Ljava/lang/ClassLoader;)Z' in 'java/lang/ClassLoader')}
  0x000000010f82136e: mov    0xdc(%rbx),%eax
  0x000000010f821374: add    $0x8,%eax
  0x000000010f821377: mov    %eax,0xdc(%rbx)
  0x000000010f82137d: movabs $0x10ea7b928,%rbx  ;   {metadata({method} {0x000000010ea7b928} 'isAncestor' '(Ljava/lang/ClassLoader;)Z' in 'java/lang/ClassLoader')}
  0x000000010f821387: and    $0x7ffff8,%eax
  0x000000010f82138d: cmp    $0x0,%eax
  0x000000010f821390: je     0x000000010f822339
  0x000000010f821396: mov    %rdi,%rbx
  0x000000010f821399: jmpq   0x000000010f821412  ;*aload_2
                                                ; - java.lang.ClassLoader::isAncestor@2 (line 1482)
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@15 (line 1504)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1527)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@42 (line 822)

  0x000000010f82139e: xchg   %ax,%ax
  0x000000010f8213a0: movabs $0x10ed9af10,%rax  ;   {metadata(method data for {method} {0x000000010ea7b928} 'isAncestor' '(Ljava/lang/ClassLoader;)Z' in 'java/lang/ClassLoader')}
  0x000000010f8213aa: mov    0xe0(%rax),%ecx
  0x000000010f8213b0: add    $0x8,%ecx
  0x000000010f8213b3: mov    %ecx,0xe0(%rax)
  0x000000010f8213b9: movabs $0x10ea7b928,%rax  ;   {metadata({method} {0x000000010ea7b928} 'isAncestor' '(Ljava/lang/ClassLoader;)Z' in 'java/lang/ClassLoader')}
  0x000000010f8213c3: and    $0xfff8,%ecx
  0x000000010f8213c9: cmp    $0x0,%ecx
  0x000000010f8213cc: je     0x000000010f822350  ; OopMap{[144]=Oop rsi=Oop rdi=Oop [152]=Oop rdx=Oop rbx=Oop off=3474}
                                                ;*ifnonnull
                                                ; - java.lang.ClassLoader::isAncestor@15 (line 1486)
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@15 (line 1504)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1527)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@42 (line 822)

  0x000000010f8213d2: test   %eax,-0x8d862d8(%rip)        # 0x0000000106a9b100
                                                ;   {poll}
  0x000000010f8213d8: cmp    $0x0,%rbx
  0x000000010f8213dc: movabs $0x10ed9af10,%rax  ;   {metadata(method data for {method} {0x000000010ea7b928} 'isAncestor' '(Ljava/lang/ClassLoader;)Z' in 'java/lang/ClassLoader')}
  0x000000010f8213e6: movabs $0x128,%rcx
  0x000000010f8213f0: jne    0x000000010f821400
  0x000000010f8213f6: movabs $0x138,%rcx
  0x000000010f821400: mov    (%rax,%rcx,1),%r8
  0x000000010f821404: lea    0x1(%r8),%r8
  0x000000010f821408: mov    %r8,(%rax,%rcx,1)
  0x000000010f82140c: je     0x000000010f821457  ;*ifnonnull
                                                ; - java.lang.ClassLoader::isAncestor@15 (line 1486)
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@15 (line 1504)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1527)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@42 (line 822)

  0x000000010f821412: mov    0xc(%rbx),%ebx     ; implicit exception: dispatches to 0x000000010f822367
  0x000000010f821415: shl    $0x3,%rbx          ;*getfield parent
                                                ; - java.lang.ClassLoader::isAncestor@3 (line 1482)
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@15 (line 1504)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1527)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@42 (line 822)

  0x000000010f821419: cmp    %rbx,%rdx
  0x000000010f82141c: movabs $0x10ed9af10,%rax  ;   {metadata(method data for {method} {0x000000010ea7b928} 'isAncestor' '(Ljava/lang/ClassLoader;)Z' in 'java/lang/ClassLoader')}
  0x000000010f821426: movabs $0x108,%rcx
  0x000000010f821430: jne    0x000000010f821440
  0x000000010f821436: movabs $0x118,%rcx
  0x000000010f821440: mov    (%rax,%rcx,1),%r8
  0x000000010f821444: lea    0x1(%r8),%r8
  0x000000010f821448: mov    %r8,(%rax,%rcx,1)
  0x000000010f82144c: jne    0x000000010f8213a0
  0x000000010f821452: jmpq   0x000000010f821461  ;*if_acmpne
                                                ; - java.lang.ClassLoader::isAncestor@9 (line 1483)
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@15 (line 1504)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1527)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@42 (line 822)

  0x000000010f821457: mov    $0x0,%edx
  0x000000010f82145c: jmpq   0x000000010f821466
  0x000000010f821461: mov    $0x1,%edx
  0x000000010f821466: cmp    $0x0,%edx
  0x000000010f821469: movabs $0x10ed9ad18,%rdx  ;   {metadata(method data for {method} {0x000000010ea7b9d8} 'needsClassLoaderPermissionCheck' '(Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;)Z' in 'java/lang/ClassLoader')}
  0x000000010f821473: movabs $0x178,%rbx
  0x000000010f82147d: jne    0x000000010f82148d
  0x000000010f821483: movabs $0x188,%rbx
  0x000000010f82148d: mov    (%rdx,%rbx,1),%rax
  0x000000010f821491: lea    0x1(%rax),%rax
  0x000000010f821495: mov    %rax,(%rdx,%rbx,1)
  0x000000010f821499: jne    0x000000010f8214b9  ;*ifne
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@18 (line 1504)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1527)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@42 (line 822)

  0x000000010f82149f: movabs $0x10ed9ad18,%rdx  ;   {metadata(method data for {method} {0x000000010ea7b9d8} 'needsClassLoaderPermissionCheck' '(Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;)Z' in 'java/lang/ClassLoader')}
  0x000000010f8214a9: incl   0x198(%rdx)
  0x000000010f8214af: mov    $0x1,%edx
  0x000000010f8214b4: jmpq   0x000000010f8214be  ;*goto
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@22 (line 1504)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1527)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@42 (line 822)

  0x000000010f8214b9: mov    $0x0,%edx          ;*ireturn
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@26 (line 1504)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1527)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@42 (line 822)

  0x000000010f8214be: and    $0x1,%edx
  0x000000010f8214c1: cmp    $0x0,%edx
  0x000000010f8214c4: movabs $0x10ed9a868,%rdx  ;   {metadata(method data for {method} {0x000000010ea7bb30} 'checkClassLoaderPermission' '(Ljava/lang/ClassLoader;Ljava/lang/Class;)V' in 'java/lang/ClassLoader')}
  0x000000010f8214ce: movabs $0x158,%rbx
  0x000000010f8214d8: je     0x000000010f8214e8
  0x000000010f8214de: movabs $0x168,%rbx
  0x000000010f8214e8: mov    (%rdx,%rbx,1),%rax
  0x000000010f8214ec: lea    0x1(%rax),%rax
  0x000000010f8214f0: mov    %rax,(%rdx,%rbx,1)
  0x000000010f8214f4: je     0x000000010f8215bc  ;*ifeq
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@18 (line 1527)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@42 (line 822)

  0x000000010f8214fa: nopw   0x0(%rax,%rax,1)
  0x000000010f821500: jmpq   0x000000010f8223c9  ;   {no_reloc}
  0x000000010f821505: add    %al,(%rax)
  0x000000010f821507: add    %al,(%rax)
  0x000000010f821509: add    %ah,0xf(%rsi)
  0x000000010f82150c: (bad)  
  0x000000010f82150d: add    %r8b,(%rax)
  0x000000010f821510: jmpq   0x000000010f8223e3  ; implicit exception: dispatches to 0x000000010f8223d3
  0x000000010f821515: nop
  0x000000010f821516: shl    $0x3,%rdx          ;*getstatic GET_CLASSLOADER_PERMISSION
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@22 (line 1528)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@42 (line 822)

  0x000000010f82151a: cmp    (%rsi),%rax        ;*invokevirtual checkPermission
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@25 (line 1528)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@42 (line 822)
                                                ; implicit exception: dispatches to 0x000000010f8223ed
  0x000000010f82151d: mov    %rsi,%rbx
  0x000000010f821520: movabs $0x10ed9a868,%rax  ;   {metadata(method data for {method} {0x000000010ea7bb30} 'checkClassLoaderPermission' '(Ljava/lang/ClassLoader;Ljava/lang/Class;)V' in 'java/lang/ClassLoader')}
  0x000000010f82152a: mov    0x8(%rbx),%ebx
  0x000000010f82152d: shl    $0x3,%rbx
  0x000000010f821531: cmp    0x180(%rax),%rbx
  0x000000010f821538: jne    0x000000010f821547
  0x000000010f82153a: addq   $0x1,0x188(%rax)
  0x000000010f821542: jmpq   0x000000010f8215ad
  0x000000010f821547: cmp    0x190(%rax),%rbx
  0x000000010f82154e: jne    0x000000010f82155d
  0x000000010f821550: addq   $0x1,0x198(%rax)
  0x000000010f821558: jmpq   0x000000010f8215ad
  0x000000010f82155d: cmpq   $0x0,0x180(%rax)
  0x000000010f821568: jne    0x000000010f821581
  0x000000010f82156a: mov    %rbx,0x180(%rax)
  0x000000010f821571: movq   $0x1,0x188(%rax)
  0x000000010f82157c: jmpq   0x000000010f8215ad
  0x000000010f821581: cmpq   $0x0,0x190(%rax)
  0x000000010f82158c: jne    0x000000010f8215a5
  0x000000010f82158e: mov    %rbx,0x190(%rax)
  0x000000010f821595: movq   $0x1,0x198(%rax)
  0x000000010f8215a0: jmpq   0x000000010f8215ad
  0x000000010f8215a5: addq   $0x1,0x178(%rax)
  0x000000010f8215ad: movabs $0xffffffffffffffff,%rax
  0x000000010f8215b7: callq  0x000000010f7172e0  ; OopMap{[144]=Oop [152]=Oop off=3964}
                                                ;*invokevirtual checkPermission
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@25 (line 1528)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@42 (line 822)
                                                ;   {virtual_call}
  0x000000010f8215bc: mov    0x98(%rsp),%rdi
  0x000000010f8215c4: movabs $0x7955806f8,%rsi  ;   {oop(a 'java/lang/Class' = 'java/lang/Object')}
  0x000000010f8215ce: mov    %rsi,%rbx
  0x000000010f8215d1: movabs $0x10edaed28,%rax  ;   {metadata(method data for {method} {0x000000010ed6b808} 'isStaticallyNameable' '(Ljava/lang/Class;)Z' in 'java/lang/invoke/InvokerBytecodeGenerator')}
  0x000000010f8215db: mov    0x8(%rbx),%ebx
  0x000000010f8215de: shl    $0x3,%rbx
  0x000000010f8215e2: cmp    0x278(%rax),%rbx
  0x000000010f8215e9: jne    0x000000010f8215f8
  0x000000010f8215eb: addq   $0x1,0x280(%rax)
  0x000000010f8215f3: jmpq   0x000000010f82165e
  0x000000010f8215f8: cmp    0x288(%rax),%rbx
  0x000000010f8215ff: jne    0x000000010f82160e
  0x000000010f821601: addq   $0x1,0x290(%rax)
  0x000000010f821609: jmpq   0x000000010f82165e
  0x000000010f82160e: cmpq   $0x0,0x278(%rax)
  0x000000010f821619: jne    0x000000010f821632
  0x000000010f82161b: mov    %rbx,0x278(%rax)
  0x000000010f821622: movq   $0x1,0x280(%rax)
  0x000000010f82162d: jmpq   0x000000010f82165e
  0x000000010f821632: cmpq   $0x0,0x288(%rax)
  0x000000010f82163d: jne    0x000000010f821656
  0x000000010f82163f: mov    %rbx,0x288(%rax)
  0x000000010f821646: movq   $0x1,0x290(%rax)
  0x000000010f821651: jmpq   0x000000010f82165e
  0x000000010f821656: addq   $0x1,0x270(%rax)
  0x000000010f82165e: movabs $0x10ed9a680,%rbx  ;   {metadata(method data for {method} {0x000000010ea719c0} 'getClassLoader' '()Ljava/lang/ClassLoader;' in 'java/lang/Class')}
  0x000000010f821668: mov    0xdc(%rbx),%eax
  0x000000010f82166e: add    $0x8,%eax
  0x000000010f821671: mov    %eax,0xdc(%rbx)
  0x000000010f821677: movabs $0x10ea719c0,%rbx  ;   {metadata({method} {0x000000010ea719c0} 'getClassLoader' '()Ljava/lang/ClassLoader;' in 'java/lang/Class')}
  0x000000010f821681: and    $0x7ffff8,%eax
  0x000000010f821687: cmp    $0x0,%eax
  0x000000010f82168a: je     0x000000010f8223f2
  0x000000010f821690: mov    %rsi,%rbx
  0x000000010f821693: movabs $0x10ed9a680,%rax  ;   {metadata(method data for {method} {0x000000010ea719c0} 'getClassLoader' '()Ljava/lang/ClassLoader;' in 'java/lang/Class')}
  0x000000010f82169d: mov    0x8(%rbx),%ebx
  0x000000010f8216a0: shl    $0x3,%rbx
  0x000000010f8216a4: cmp    0x110(%rax),%rbx
  0x000000010f8216ab: jne    0x000000010f8216ba
  0x000000010f8216ad: addq   $0x1,0x118(%rax)
  0x000000010f8216b5: jmpq   0x000000010f821720
  0x000000010f8216ba: cmp    0x120(%rax),%rbx
  0x000000010f8216c1: jne    0x000000010f8216d0
  0x000000010f8216c3: addq   $0x1,0x128(%rax)
  0x000000010f8216cb: jmpq   0x000000010f821720
  0x000000010f8216d0: cmpq   $0x0,0x110(%rax)
  0x000000010f8216db: jne    0x000000010f8216f4
  0x000000010f8216dd: mov    %rbx,0x110(%rax)
  0x000000010f8216e4: movq   $0x1,0x118(%rax)
  0x000000010f8216ef: jmpq   0x000000010f821720
  0x000000010f8216f4: cmpq   $0x0,0x120(%rax)
  0x000000010f8216ff: jne    0x000000010f821718
  0x000000010f821701: mov    %rbx,0x120(%rax)
  0x000000010f821708: movq   $0x1,0x128(%rax)
  0x000000010f821713: jmpq   0x000000010f821720
  0x000000010f821718: addq   $0x1,0x108(%rax)
  0x000000010f821720: mov    0x18(%rsi),%esi    ; implicit exception: dispatches to 0x000000010f822409
  0x000000010f821723: shl    $0x3,%rsi          ;*getfield classLoader
                                                ; - java.lang.Class::getClassLoader0@1 (line 689)
                                                ; - java.lang.Class::getClassLoader@1 (line 678)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@47 (line 822)

  0x000000010f821727: mov    %rsi,0xa0(%rsp)
  0x000000010f82172f: cmp    $0x0,%rsi
  0x000000010f821733: movabs $0x10ed9a680,%rbx  ;   {metadata(method data for {method} {0x000000010ea719c0} 'getClassLoader' '()Ljava/lang/ClassLoader;' in 'java/lang/Class')}
  0x000000010f82173d: movabs $0x138,%rax
  0x000000010f821747: jne    0x000000010f821757
  0x000000010f82174d: movabs $0x148,%rax
  0x000000010f821757: mov    (%rbx,%rax,1),%rdx
  0x000000010f82175b: lea    0x1(%rdx),%rdx
  0x000000010f82175f: mov    %rdx,(%rbx,%rax,1)
  0x000000010f821763: jne    0x000000010f821778  ;*ifnonnull
                                                ; - java.lang.Class::getClassLoader@6 (line 679)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@47 (line 822)

  0x000000010f821769: movabs $0x0,%rsi          ;   {oop(NULL)}
  0x000000010f821773: jmpq   0x000000010f821df4  ;*if_acmpeq
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@50 (line 822)

  0x000000010f821778: movabs $0x10ed9a680,%rbx  ;   {metadata(method data for {method} {0x000000010ea719c0} 'getClassLoader' '()Ljava/lang/ClassLoader;' in 'java/lang/Class')}
  0x000000010f821782: addq   $0x1,0x158(%rbx)
  0x000000010f82178a: movabs $0x10ec81848,%rbx  ;   {metadata(method data for {method} {0x000000010ea7e778} 'getSecurityManager' '()Ljava/lang/SecurityManager;' in 'java/lang/System')}
  0x000000010f821794: mov    0xdc(%rbx),%eax
  0x000000010f82179a: add    $0x8,%eax
  0x000000010f82179d: mov    %eax,0xdc(%rbx)
  0x000000010f8217a3: movabs $0x10ea7e778,%rbx  ;   {metadata({method} {0x000000010ea7e778} 'getSecurityManager' '()Ljava/lang/SecurityManager;' in 'java/lang/System')}
  0x000000010f8217ad: and    $0x7ffff8,%eax
  0x000000010f8217b3: cmp    $0x0,%eax
  0x000000010f8217b6: je     0x000000010f82240e
  0x000000010f8217bc: movabs $0x795580c78,%rbx  ;   {oop(a 'java/lang/Class' = 'java/lang/System')}
  0x000000010f8217c6: mov    0x74(%rbx),%ebx
  0x000000010f8217c9: shl    $0x3,%rbx          ;*getstatic security
                                                ; - java.lang.System::getSecurityManager@0 (line 334)
                                                ; - java.lang.Class::getClassLoader@11 (line 681)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@47 (line 822)

  0x000000010f8217cd: cmp    $0x0,%rbx
  0x000000010f8217d1: movabs $0x10ed9a680,%rbx  ;   {metadata(method data for {method} {0x000000010ea719c0} 'getClassLoader' '()Ljava/lang/ClassLoader;' in 'java/lang/Class')}
  0x000000010f8217db: movabs $0x168,%rax
  0x000000010f8217e5: je     0x000000010f8217f5
  0x000000010f8217eb: movabs $0x178,%rax
  0x000000010f8217f5: mov    (%rbx,%rax,1),%rdx
  0x000000010f8217f9: lea    0x1(%rdx),%rdx
  0x000000010f8217fd: mov    %rdx,(%rbx,%rax,1)
  0x000000010f821801: mov    %rdi,0xa8(%rsp)
  0x000000010f821809: je     0x000000010f821dec  ;*ifnull
                                                ; - java.lang.Class::getClassLoader@16 (line 682)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@47 (line 822)

  0x000000010f82180f: movabs $0x10ed9a680,%rbx  ;   {metadata(method data for {method} {0x000000010ea719c0} 'getClassLoader' '()Ljava/lang/ClassLoader;' in 'java/lang/Class')}
  0x000000010f821819: addq   $0x1,0x188(%rbx)
  0x000000010f821821: nop
  0x000000010f821822: nop
  0x000000010f821823: nop
  0x000000010f821824: nop
  0x000000010f821825: nop
  0x000000010f821826: nop
  0x000000010f821827: callq  0x000000010f717520  ; OopMap{[144]=Oop [168]=Oop [160]=Oop off=4588}
                                                ;*invokestatic getCallerClass
                                                ; - java.lang.Class::getClassLoader@20 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@47 (line 822)
                                                ;   {static_call}
  0x000000010f82182c: movabs $0x10ed9a680,%rdx  ;   {metadata(method data for {method} {0x000000010ea719c0} 'getClassLoader' '()Ljava/lang/ClassLoader;' in 'java/lang/Class')}
  0x000000010f821836: addq   $0x1,0x198(%rdx)
  0x000000010f82183e: movabs $0x10ed9a868,%rdx  ;   {metadata(method data for {method} {0x000000010ea7bb30} 'checkClassLoaderPermission' '(Ljava/lang/ClassLoader;Ljava/lang/Class;)V' in 'java/lang/ClassLoader')}
  0x000000010f821848: mov    0xdc(%rdx),%esi
  0x000000010f82184e: add    $0x8,%esi
  0x000000010f821851: mov    %esi,0xdc(%rdx)
  0x000000010f821857: movabs $0x10ea7bb30,%rdx  ;   {metadata({method} {0x000000010ea7bb30} 'checkClassLoaderPermission' '(Ljava/lang/ClassLoader;Ljava/lang/Class;)V' in 'java/lang/ClassLoader')}
  0x000000010f821861: and    $0x7ffff8,%esi
  0x000000010f821867: cmp    $0x0,%esi
  0x000000010f82186a: je     0x000000010f822425
  0x000000010f821870: movabs $0x10ed9a868,%rdx  ;   {metadata(method data for {method} {0x000000010ea7bb30} 'checkClassLoaderPermission' '(Ljava/lang/ClassLoader;Ljava/lang/Class;)V' in 'java/lang/ClassLoader')}
  0x000000010f82187a: addq   $0x1,0x108(%rdx)
  0x000000010f821882: movabs $0x10ec81848,%rdx  ;   {metadata(method data for {method} {0x000000010ea7e778} 'getSecurityManager' '()Ljava/lang/SecurityManager;' in 'java/lang/System')}
  0x000000010f82188c: mov    0xdc(%rdx),%esi
  0x000000010f821892: add    $0x8,%esi
  0x000000010f821895: mov    %esi,0xdc(%rdx)
  0x000000010f82189b: movabs $0x10ea7e778,%rdx  ;   {metadata({method} {0x000000010ea7e778} 'getSecurityManager' '()Ljava/lang/SecurityManager;' in 'java/lang/System')}
  0x000000010f8218a5: and    $0x7ffff8,%esi
  0x000000010f8218ab: cmp    $0x0,%esi
  0x000000010f8218ae: je     0x000000010f82243c
  0x000000010f8218b4: movabs $0x795580c78,%rdx  ;   {oop(a 'java/lang/Class' = 'java/lang/System')}
  0x000000010f8218be: mov    0x74(%rdx),%esi
  0x000000010f8218c1: shl    $0x3,%rsi          ;*getstatic security
                                                ; - java.lang.System::getSecurityManager@0 (line 334)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@0 (line 1523)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@47 (line 822)

  0x000000010f8218c5: cmp    $0x0,%rsi
  0x000000010f8218c9: movabs $0x10ed9a868,%rdx  ;   {metadata(method data for {method} {0x000000010ea7bb30} 'checkClassLoaderPermission' '(Ljava/lang/ClassLoader;Ljava/lang/Class;)V' in 'java/lang/ClassLoader')}
  0x000000010f8218d3: movabs $0x118,%rdi
  0x000000010f8218dd: je     0x000000010f8218ed
  0x000000010f8218e3: movabs $0x128,%rdi
  0x000000010f8218ed: mov    (%rdx,%rdi,1),%rbx
  0x000000010f8218f1: lea    0x1(%rbx),%rbx
  0x000000010f8218f5: mov    %rbx,(%rdx,%rdi,1)
  0x000000010f8218f9: je     0x000000010f821de4  ;*ifnull
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@5 (line 1524)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@47 (line 822)

  0x000000010f8218ff: movabs $0x10ed9a868,%rdx  ;   {metadata(method data for {method} {0x000000010ea7bb30} 'checkClassLoaderPermission' '(Ljava/lang/ClassLoader;Ljava/lang/Class;)V' in 'java/lang/ClassLoader')}
  0x000000010f821909: addq   $0x1,0x138(%rdx)
  0x000000010f821911: movabs $0x10ed9aa58,%rdx  ;   {metadata(method data for {method} {0x000000010ea7ba78} 'getClassLoader' '(Ljava/lang/Class;)Ljava/lang/ClassLoader;' in 'java/lang/ClassLoader')}
  0x000000010f82191b: mov    0xdc(%rdx),%edi
  0x000000010f821921: add    $0x8,%edi
  0x000000010f821924: mov    %edi,0xdc(%rdx)
  0x000000010f82192a: movabs $0x10ea7ba78,%rdx  ;   {metadata({method} {0x000000010ea7ba78} 'getClassLoader' '(Ljava/lang/Class;)Ljava/lang/ClassLoader;' in 'java/lang/ClassLoader')}
  0x000000010f821934: and    $0x7ffff8,%edi
  0x000000010f82193a: cmp    $0x0,%edi
  0x000000010f82193d: je     0x000000010f822453
  0x000000010f821943: cmp    $0x0,%rax
  0x000000010f821947: movabs $0x10ed9aa58,%rdx  ;   {metadata(method data for {method} {0x000000010ea7ba78} 'getClassLoader' '(Ljava/lang/Class;)Ljava/lang/ClassLoader;' in 'java/lang/ClassLoader')}
  0x000000010f821951: movabs $0x108,%rdi
  0x000000010f82195b: jne    0x000000010f82196b
  0x000000010f821961: movabs $0x118,%rdi
  0x000000010f82196b: mov    (%rdx,%rdi,1),%rbx
  0x000000010f82196f: lea    0x1(%rbx),%rbx
  0x000000010f821973: mov    %rbx,(%rdx,%rdi,1)
  0x000000010f821977: jne    0x000000010f82198c  ;*ifnonnull
                                                ; - java.lang.ClassLoader::getClassLoader@1 (line 1510)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@9 (line 1526)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@47 (line 822)

  0x000000010f82197d: movabs $0x0,%rdx          ;   {oop(NULL)}
  0x000000010f821987: jmpq   0x000000010f821a26  ;*astore_3
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@12 (line 1526)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@47 (line 822)

  0x000000010f82198c: cmp    (%rax),%rax        ;*invokevirtual getClassLoader0
                                                ; - java.lang.ClassLoader::getClassLoader@7 (line 1514)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@9 (line 1526)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@47 (line 822)
                                                ; implicit exception: dispatches to 0x000000010f82246a
  0x000000010f82198f: mov    %rax,%rdx
  0x000000010f821992: movabs $0x10ed9aa58,%rdi  ;   {metadata(method data for {method} {0x000000010ea7ba78} 'getClassLoader' '(Ljava/lang/Class;)Ljava/lang/ClassLoader;' in 'java/lang/ClassLoader')}
  0x000000010f82199c: mov    0x8(%rdx),%edx
  0x000000010f82199f: shl    $0x3,%rdx
  0x000000010f8219a3: cmp    0x130(%rdi),%rdx
  0x000000010f8219aa: jne    0x000000010f8219b9
  0x000000010f8219ac: addq   $0x1,0x138(%rdi)
  0x000000010f8219b4: jmpq   0x000000010f821a1f
  0x000000010f8219b9: cmp    0x140(%rdi),%rdx
  0x000000010f8219c0: jne    0x000000010f8219cf
  0x000000010f8219c2: addq   $0x1,0x148(%rdi)
  0x000000010f8219ca: jmpq   0x000000010f821a1f
  0x000000010f8219cf: cmpq   $0x0,0x130(%rdi)
  0x000000010f8219da: jne    0x000000010f8219f3
  0x000000010f8219dc: mov    %rdx,0x130(%rdi)
  0x000000010f8219e3: movq   $0x1,0x138(%rdi)
  0x000000010f8219ee: jmpq   0x000000010f821a1f
  0x000000010f8219f3: cmpq   $0x0,0x140(%rdi)
  0x000000010f8219fe: jne    0x000000010f821a17
  0x000000010f821a00: mov    %rdx,0x140(%rdi)
  0x000000010f821a07: movq   $0x1,0x148(%rdi)
  0x000000010f821a12: jmpq   0x000000010f821a1f
  0x000000010f821a17: addq   $0x1,0x128(%rdi)
  0x000000010f821a1f: mov    0x18(%rax),%edx
  0x000000010f821a22: shl    $0x3,%rdx          ;*getfield classLoader
                                                ; - java.lang.Class::getClassLoader0@1 (line 689)
                                                ; - java.lang.ClassLoader::getClassLoader@7 (line 1514)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@9 (line 1526)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@47 (line 822)

  0x000000010f821a26: mov    0xa0(%rsp),%rdi
  0x000000010f821a2e: movabs $0x10ed9a868,%rbx  ;   {metadata(method data for {method} {0x000000010ea7bb30} 'checkClassLoaderPermission' '(Ljava/lang/ClassLoader;Ljava/lang/Class;)V' in 'java/lang/ClassLoader')}
  0x000000010f821a38: addq   $0x1,0x148(%rbx)
  0x000000010f821a40: movabs $0x10ed9ad18,%rbx  ;   {metadata(method data for {method} {0x000000010ea7b9d8} 'needsClassLoaderPermissionCheck' '(Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;)Z' in 'java/lang/ClassLoader')}
  0x000000010f821a4a: mov    0xdc(%rbx),%eax
  0x000000010f821a50: add    $0x8,%eax
  0x000000010f821a53: mov    %eax,0xdc(%rbx)
  0x000000010f821a59: movabs $0x10ea7b9d8,%rbx  ;   {metadata({method} {0x000000010ea7b9d8} 'needsClassLoaderPermissionCheck' '(Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;)Z' in 'java/lang/ClassLoader')}
  0x000000010f821a63: and    $0x7ffff8,%eax
  0x000000010f821a69: cmp    $0x0,%eax
  0x000000010f821a6c: je     0x000000010f82246f
  0x000000010f821a72: cmp    %rdi,%rdx
  0x000000010f821a75: movabs $0x10ed9ad18,%rbx  ;   {metadata(method data for {method} {0x000000010ea7b9d8} 'needsClassLoaderPermissionCheck' '(Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;)Z' in 'java/lang/ClassLoader')}
  0x000000010f821a7f: movabs $0x108,%rax
  0x000000010f821a89: jne    0x000000010f821a99
  0x000000010f821a8f: movabs $0x118,%rax
  0x000000010f821a99: mov    (%rbx,%rax,1),%rcx
  0x000000010f821a9d: lea    0x1(%rcx),%rcx
  0x000000010f821aa1: mov    %rcx,(%rbx,%rax,1)
  0x000000010f821aa5: jne    0x000000010f821ab5  ;*if_acmpne
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@2 (line 1498)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1527)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@47 (line 822)

  0x000000010f821aab: mov    $0x0,%edx
  0x000000010f821ab0: jmpq   0x000000010f821ce9  ;*ifeq
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@18 (line 1527)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@47 (line 822)

  0x000000010f821ab5: cmp    $0x0,%rdx
  0x000000010f821ab9: movabs $0x10ed9ad18,%rbx  ;   {metadata(method data for {method} {0x000000010ea7b9d8} 'needsClassLoaderPermissionCheck' '(Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;)Z' in 'java/lang/ClassLoader')}
  0x000000010f821ac3: movabs $0x128,%rax
  0x000000010f821acd: jne    0x000000010f821add
  0x000000010f821ad3: movabs $0x138,%rax
  0x000000010f821add: mov    (%rbx,%rax,1),%rcx
  0x000000010f821ae1: lea    0x1(%rcx),%rcx
  0x000000010f821ae5: mov    %rcx,(%rbx,%rax,1)
  0x000000010f821ae9: jne    0x000000010f821af9  ;*ifnonnull
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@8 (line 1501)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1527)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@47 (line 822)

  0x000000010f821aef: mov    $0x0,%edx
  0x000000010f821af4: jmpq   0x000000010f821ce9  ;*ifeq
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@18 (line 1527)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@47 (line 822)

  0x000000010f821af9: cmp    (%rdi),%rax        ;*invokevirtual isAncestor
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@15 (line 1504)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1527)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@47 (line 822)
                                                ; implicit exception: dispatches to 0x000000010f822486
  0x000000010f821afc: mov    %rdi,%rbx
  0x000000010f821aff: movabs $0x10ed9ad18,%rax  ;   {metadata(method data for {method} {0x000000010ea7b9d8} 'needsClassLoaderPermissionCheck' '(Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;)Z' in 'java/lang/ClassLoader')}
  0x000000010f821b09: mov    0x8(%rbx),%ebx
  0x000000010f821b0c: shl    $0x3,%rbx
  0x000000010f821b10: cmp    0x150(%rax),%rbx
  0x000000010f821b17: jne    0x000000010f821b26
  0x000000010f821b19: addq   $0x1,0x158(%rax)
  0x000000010f821b21: jmpq   0x000000010f821b8c
  0x000000010f821b26: cmp    0x160(%rax),%rbx
  0x000000010f821b2d: jne    0x000000010f821b3c
  0x000000010f821b2f: addq   $0x1,0x168(%rax)
  0x000000010f821b37: jmpq   0x000000010f821b8c
  0x000000010f821b3c: cmpq   $0x0,0x150(%rax)
  0x000000010f821b47: jne    0x000000010f821b60
  0x000000010f821b49: mov    %rbx,0x150(%rax)
  0x000000010f821b50: movq   $0x1,0x158(%rax)
  0x000000010f821b5b: jmpq   0x000000010f821b8c
  0x000000010f821b60: cmpq   $0x0,0x160(%rax)
  0x000000010f821b6b: jne    0x000000010f821b84
  0x000000010f821b6d: mov    %rbx,0x160(%rax)
  0x000000010f821b74: movq   $0x1,0x168(%rax)
  0x000000010f821b7f: jmpq   0x000000010f821b8c
  0x000000010f821b84: addq   $0x1,0x148(%rax)
  0x000000010f821b8c: movabs $0x10ed9af10,%rbx  ;   {metadata(method data for {method} {0x000000010ea7b928} 'isAncestor' '(Ljava/lang/ClassLoader;)Z' in 'java/lang/ClassLoader')}
  0x000000010f821b96: mov    0xdc(%rbx),%eax
  0x000000010f821b9c: add    $0x8,%eax
  0x000000010f821b9f: mov    %eax,0xdc(%rbx)
  0x000000010f821ba5: movabs $0x10ea7b928,%rbx  ;   {metadata({method} {0x000000010ea7b928} 'isAncestor' '(Ljava/lang/ClassLoader;)Z' in 'java/lang/ClassLoader')}
  0x000000010f821baf: and    $0x7ffff8,%eax
  0x000000010f821bb5: cmp    $0x0,%eax
  0x000000010f821bb8: je     0x000000010f82248b
  0x000000010f821bbe: mov    %rdi,%rbx
  0x000000010f821bc1: jmpq   0x000000010f821c3a  ;*aload_2
                                                ; - java.lang.ClassLoader::isAncestor@2 (line 1482)
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@15 (line 1504)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1527)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@47 (line 822)

  0x000000010f821bc6: xchg   %ax,%ax
  0x000000010f821bc8: movabs $0x10ed9af10,%rax  ;   {metadata(method data for {method} {0x000000010ea7b928} 'isAncestor' '(Ljava/lang/ClassLoader;)Z' in 'java/lang/ClassLoader')}
  0x000000010f821bd2: mov    0xe0(%rax),%ecx
  0x000000010f821bd8: add    $0x8,%ecx
  0x000000010f821bdb: mov    %ecx,0xe0(%rax)
  0x000000010f821be1: movabs $0x10ea7b928,%rax  ;   {metadata({method} {0x000000010ea7b928} 'isAncestor' '(Ljava/lang/ClassLoader;)Z' in 'java/lang/ClassLoader')}
  0x000000010f821beb: and    $0xfff8,%ecx
  0x000000010f821bf1: cmp    $0x0,%ecx
  0x000000010f821bf4: je     0x000000010f8224a2  ; OopMap{[144]=Oop [168]=Oop rsi=Oop rdi=Oop [160]=Oop rdx=Oop rbx=Oop off=5562}
                                                ;*ifnonnull
                                                ; - java.lang.ClassLoader::isAncestor@15 (line 1486)
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@15 (line 1504)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1527)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@47 (line 822)

  0x000000010f821bfa: test   %eax,-0x8d86b00(%rip)        # 0x0000000106a9b100
                                                ;   {poll}
  0x000000010f821c00: cmp    $0x0,%rbx
  0x000000010f821c04: movabs $0x10ed9af10,%rax  ;   {metadata(method data for {method} {0x000000010ea7b928} 'isAncestor' '(Ljava/lang/ClassLoader;)Z' in 'java/lang/ClassLoader')}
  0x000000010f821c0e: movabs $0x128,%rcx
  0x000000010f821c18: jne    0x000000010f821c28
  0x000000010f821c1e: movabs $0x138,%rcx
  0x000000010f821c28: mov    (%rax,%rcx,1),%r8
  0x000000010f821c2c: lea    0x1(%r8),%r8
  0x000000010f821c30: mov    %r8,(%rax,%rcx,1)
  0x000000010f821c34: je     0x000000010f821c7f  ;*ifnonnull
                                                ; - java.lang.ClassLoader::isAncestor@15 (line 1486)
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@15 (line 1504)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1527)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@47 (line 822)

  0x000000010f821c3a: mov    0xc(%rbx),%ebx     ; implicit exception: dispatches to 0x000000010f8224b9
  0x000000010f821c3d: shl    $0x3,%rbx          ;*getfield parent
                                                ; - java.lang.ClassLoader::isAncestor@3 (line 1482)
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@15 (line 1504)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1527)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@47 (line 822)

  0x000000010f821c41: cmp    %rbx,%rdx
  0x000000010f821c44: movabs $0x10ed9af10,%rax  ;   {metadata(method data for {method} {0x000000010ea7b928} 'isAncestor' '(Ljava/lang/ClassLoader;)Z' in 'java/lang/ClassLoader')}
  0x000000010f821c4e: movabs $0x108,%rcx
  0x000000010f821c58: jne    0x000000010f821c68
  0x000000010f821c5e: movabs $0x118,%rcx
  0x000000010f821c68: mov    (%rax,%rcx,1),%r8
  0x000000010f821c6c: lea    0x1(%r8),%r8
  0x000000010f821c70: mov    %r8,(%rax,%rcx,1)
  0x000000010f821c74: jne    0x000000010f821bc8
  0x000000010f821c7a: jmpq   0x000000010f821c89  ;*if_acmpne
                                                ; - java.lang.ClassLoader::isAncestor@9 (line 1483)
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@15 (line 1504)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1527)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@47 (line 822)

  0x000000010f821c7f: mov    $0x0,%edx
  0x000000010f821c84: jmpq   0x000000010f821c8e
  0x000000010f821c89: mov    $0x1,%edx
  0x000000010f821c8e: cmp    $0x0,%edx
  0x000000010f821c91: movabs $0x10ed9ad18,%rdx  ;   {metadata(method data for {method} {0x000000010ea7b9d8} 'needsClassLoaderPermissionCheck' '(Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;)Z' in 'java/lang/ClassLoader')}
  0x000000010f821c9b: movabs $0x178,%rbx
  0x000000010f821ca5: jne    0x000000010f821cb5
  0x000000010f821cab: movabs $0x188,%rbx
  0x000000010f821cb5: mov    (%rdx,%rbx,1),%rax
  0x000000010f821cb9: lea    0x1(%rax),%rax
  0x000000010f821cbd: mov    %rax,(%rdx,%rbx,1)
  0x000000010f821cc1: jne    0x000000010f821ce1  ;*ifne
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@18 (line 1504)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1527)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@47 (line 822)

  0x000000010f821cc7: movabs $0x10ed9ad18,%rdx  ;   {metadata(method data for {method} {0x000000010ea7b9d8} 'needsClassLoaderPermissionCheck' '(Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;)Z' in 'java/lang/ClassLoader')}
  0x000000010f821cd1: incl   0x198(%rdx)
  0x000000010f821cd7: mov    $0x1,%edx
  0x000000010f821cdc: jmpq   0x000000010f821ce6  ;*goto
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@22 (line 1504)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1527)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@47 (line 822)

  0x000000010f821ce1: mov    $0x0,%edx          ;*ireturn
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@26 (line 1504)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1527)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@47 (line 822)

  0x000000010f821ce6: and    $0x1,%edx
  0x000000010f821ce9: cmp    $0x0,%edx
  0x000000010f821cec: movabs $0x10ed9a868,%rdx  ;   {metadata(method data for {method} {0x000000010ea7bb30} 'checkClassLoaderPermission' '(Ljava/lang/ClassLoader;Ljava/lang/Class;)V' in 'java/lang/ClassLoader')}
  0x000000010f821cf6: movabs $0x158,%rbx
  0x000000010f821d00: je     0x000000010f821d10
  0x000000010f821d06: movabs $0x168,%rbx
  0x000000010f821d10: mov    (%rdx,%rbx,1),%rax
  0x000000010f821d14: lea    0x1(%rax),%rax
  0x000000010f821d18: mov    %rax,(%rdx,%rbx,1)
  0x000000010f821d1c: je     0x000000010f821de4  ;*ifeq
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@18 (line 1527)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@47 (line 822)

  0x000000010f821d22: nopw   0x0(%rax,%rax,1)
  0x000000010f821d28: jmpq   0x000000010f82251b  ;   {no_reloc}
  0x000000010f821d2d: add    %al,(%rax)
  0x000000010f821d2f: add    %al,(%rax)
  0x000000010f821d31: add    %ah,0xf(%rsi)
  0x000000010f821d34: (bad)  
  0x000000010f821d35: add    %r8b,(%rax)
  0x000000010f821d38: jmpq   0x000000010f822535  ; implicit exception: dispatches to 0x000000010f822525
  0x000000010f821d3d: nop
  0x000000010f821d3e: shl    $0x3,%rdx          ;*getstatic GET_CLASSLOADER_PERMISSION
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@22 (line 1528)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@47 (line 822)

  0x000000010f821d42: cmp    (%rsi),%rax        ;*invokevirtual checkPermission
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@25 (line 1528)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@47 (line 822)
                                                ; implicit exception: dispatches to 0x000000010f82253f
  0x000000010f821d45: mov    %rsi,%rbx
  0x000000010f821d48: movabs $0x10ed9a868,%rax  ;   {metadata(method data for {method} {0x000000010ea7bb30} 'checkClassLoaderPermission' '(Ljava/lang/ClassLoader;Ljava/lang/Class;)V' in 'java/lang/ClassLoader')}
  0x000000010f821d52: mov    0x8(%rbx),%ebx
  0x000000010f821d55: shl    $0x3,%rbx
  0x000000010f821d59: cmp    0x180(%rax),%rbx
  0x000000010f821d60: jne    0x000000010f821d6f
  0x000000010f821d62: addq   $0x1,0x188(%rax)
  0x000000010f821d6a: jmpq   0x000000010f821dd5
  0x000000010f821d6f: cmp    0x190(%rax),%rbx
  0x000000010f821d76: jne    0x000000010f821d85
  0x000000010f821d78: addq   $0x1,0x198(%rax)
  0x000000010f821d80: jmpq   0x000000010f821dd5
  0x000000010f821d85: cmpq   $0x0,0x180(%rax)
  0x000000010f821d90: jne    0x000000010f821da9
  0x000000010f821d92: mov    %rbx,0x180(%rax)
  0x000000010f821d99: movq   $0x1,0x188(%rax)
  0x000000010f821da4: jmpq   0x000000010f821dd5
  0x000000010f821da9: cmpq   $0x0,0x190(%rax)
  0x000000010f821db4: jne    0x000000010f821dcd
  0x000000010f821db6: mov    %rbx,0x190(%rax)
  0x000000010f821dbd: movq   $0x1,0x198(%rax)
  0x000000010f821dc8: jmpq   0x000000010f821dd5
  0x000000010f821dcd: addq   $0x1,0x178(%rax)
  0x000000010f821dd5: movabs $0xffffffffffffffff,%rax
  0x000000010f821ddf: callq  0x000000010f7172e0  ; OopMap{[144]=Oop [168]=Oop [160]=Oop off=6052}
                                                ;*invokevirtual checkPermission
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@25 (line 1528)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@47 (line 822)
                                                ;   {virtual_call}
  0x000000010f821de4: mov    0xa0(%rsp),%rsi
  0x000000010f821dec: mov    0xa8(%rsp),%rdi
  0x000000010f821df4: cmp    %rsi,%rdi
  0x000000010f821df7: movabs $0x10edaed28,%rsi  ;   {metadata(method data for {method} {0x000000010ed6b808} 'isStaticallyNameable' '(Ljava/lang/Class;)Z' in 'java/lang/invoke/InvokerBytecodeGenerator')}
  0x000000010f821e01: movabs $0x2a0,%rdx
  0x000000010f821e0b: je     0x000000010f821e1b
  0x000000010f821e11: movabs $0x2b0,%rdx
  0x000000010f821e1b: mov    (%rsi,%rdx,1),%rdi
  0x000000010f821e1f: lea    0x1(%rdi),%rdi
  0x000000010f821e23: mov    %rdi,(%rsi,%rdx,1)
  0x000000010f821e27: jne    0x000000010f8221b2  ;*if_acmpeq
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@50 (line 822)

  0x000000010f821e2d: movabs $0x10edaed28,%rsi  ;   {metadata(method data for {method} {0x000000010ed6b808} 'isStaticallyNameable' '(Ljava/lang/Class;)Z' in 'java/lang/invoke/InvokerBytecodeGenerator')}
  0x000000010f821e37: addq   $0x1,0x2c0(%rsi)
  0x000000010f821e3f: movabs $0x7955829a0,%rsi  ;   {oop(a 'java/lang/Class' = 'java/lang/invoke/MethodHandle')}
  0x000000010f821e49: mov    0x90(%rsp),%rdx    ;*invokestatic isSamePackage
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@58 (line 824)

  0x000000010f821e51: nop
  0x000000010f821e52: nop
  0x000000010f821e53: nop
  0x000000010f821e54: nop
  0x000000010f821e55: nop
  0x000000010f821e56: nop
  0x000000010f821e57: callq  0x000000010f717520  ; OopMap{[144]=Oop off=6172}
                                                ;*invokestatic isSamePackage
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@58 (line 824)
                                                ;   {static_call}
  0x000000010f821e5c: cmp    $0x0,%eax
  0x000000010f821e5f: movabs $0x10edaed28,%rsi  ;   {metadata(method data for {method} {0x000000010ed6b808} 'isStaticallyNameable' '(Ljava/lang/Class;)Z' in 'java/lang/invoke/InvokerBytecodeGenerator')}
  0x000000010f821e69: movabs $0x2d0,%rdi
  0x000000010f821e73: je     0x000000010f821e83
  0x000000010f821e79: movabs $0x2e0,%rdi
  0x000000010f821e83: mov    (%rsi,%rdi,1),%rbx
  0x000000010f821e87: lea    0x1(%rbx),%rbx
  0x000000010f821e8b: mov    %rbx,(%rsi,%rdi,1)
  0x000000010f821e8f: jne    0x000000010f82219e  ;*ifeq
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@61 (line 824)

  0x000000010f821e95: mov    0x90(%rsp),%rsi
  0x000000010f821e9d: movabs $0x10edaed28,%rdi  ;   {metadata(method data for {method} {0x000000010ed6b808} 'isStaticallyNameable' '(Ljava/lang/Class;)Z' in 'java/lang/invoke/InvokerBytecodeGenerator')}
  0x000000010f821ea7: mov    0x8(%rsi),%esi
  0x000000010f821eaa: shl    $0x3,%rsi
  0x000000010f821eae: cmp    0x2f8(%rdi),%rsi
  0x000000010f821eb5: jne    0x000000010f821ec4
  0x000000010f821eb7: addq   $0x1,0x300(%rdi)
  0x000000010f821ebf: jmpq   0x000000010f821f2a
  0x000000010f821ec4: cmp    0x308(%rdi),%rsi
  0x000000010f821ecb: jne    0x000000010f821eda
  0x000000010f821ecd: addq   $0x1,0x310(%rdi)
  0x000000010f821ed5: jmpq   0x000000010f821f2a
  0x000000010f821eda: cmpq   $0x0,0x2f8(%rdi)
  0x000000010f821ee5: jne    0x000000010f821efe
  0x000000010f821ee7: mov    %rsi,0x2f8(%rdi)
  0x000000010f821eee: movq   $0x1,0x300(%rdi)
  0x000000010f821ef9: jmpq   0x000000010f821f2a
  0x000000010f821efe: cmpq   $0x0,0x308(%rdi)
  0x000000010f821f09: jne    0x000000010f821f22
  0x000000010f821f0b: mov    %rsi,0x308(%rdi)
  0x000000010f821f12: movq   $0x1,0x310(%rdi)
  0x000000010f821f1d: jmpq   0x000000010f821f2a
  0x000000010f821f22: addq   $0x1,0x2f0(%rdi)
  0x000000010f821f2a: mov    0x90(%rsp),%rsi    ;*invokevirtual getModifiers
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@67 (line 826)

  0x000000010f821f32: nop
  0x000000010f821f33: nop
  0x000000010f821f34: nop
  0x000000010f821f35: nop
  0x000000010f821f36: nop
  0x000000010f821f37: callq  0x000000010f7170a0  ; OopMap{[144]=Oop off=6396}
                                                ;*invokevirtual getModifiers
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@67 (line 826)
                                                ;   {optimized virtual_call}
  0x000000010f821f3c: movabs $0x10edaed28,%rsi  ;   {metadata(method data for {method} {0x000000010ed6b808} 'isStaticallyNameable' '(Ljava/lang/Class;)Z' in 'java/lang/invoke/InvokerBytecodeGenerator')}
  0x000000010f821f46: addq   $0x1,0x320(%rsi)
  0x000000010f821f4e: movabs $0x10edaf8d8,%rsi  ;   {metadata(method data for {method} {0x000000010eb757c0} 'isPublic' '(I)Z' in 'java/lang/reflect/Modifier')}
  0x000000010f821f58: mov    0xdc(%rsi),%edx
  0x000000010f821f5e: add    $0x8,%edx
  0x000000010f821f61: mov    %edx,0xdc(%rsi)
  0x000000010f821f67: movabs $0x10eb757c0,%rsi  ;   {metadata({method} {0x000000010eb757c0} 'isPublic' '(I)Z' in 'java/lang/reflect/Modifier')}
  0x000000010f821f71: and    $0x7ffff8,%edx
  0x000000010f821f77: cmp    $0x0,%edx
  0x000000010f821f7a: je     0x000000010f822544
  0x000000010f821f80: and    $0x1,%eax
  0x000000010f821f83: cmp    $0x0,%eax
  0x000000010f821f86: movabs $0x10edaf8d8,%rsi  ;   {metadata(method data for {method} {0x000000010eb757c0} 'isPublic' '(I)Z' in 'java/lang/reflect/Modifier')}
  0x000000010f821f90: movabs $0x108,%rdx
  0x000000010f821f9a: je     0x000000010f821faa
  0x000000010f821fa0: movabs $0x118,%rdx
  0x000000010f821faa: mov    (%rsi,%rdx,1),%rdi
  0x000000010f821fae: lea    0x1(%rdi),%rdi
  0x000000010f821fb2: mov    %rdi,(%rsi,%rdx,1)
  0x000000010f821fb6: je     0x000000010f821fd6  ;*ifeq
                                                ; - java.lang.reflect.Modifier::isPublic@3 (line 68)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@70 (line 826)

  0x000000010f821fbc: movabs $0x10edaf8d8,%rsi  ;   {metadata(method data for {method} {0x000000010eb757c0} 'isPublic' '(I)Z' in 'java/lang/reflect/Modifier')}
  0x000000010f821fc6: incl   0x128(%rsi)
  0x000000010f821fcc: mov    $0x1,%esi
  0x000000010f821fd1: jmpq   0x000000010f821fdb  ;*goto
                                                ; - java.lang.reflect.Modifier::isPublic@7 (line 68)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@70 (line 826)

  0x000000010f821fd6: mov    $0x0,%esi          ;*ireturn
                                                ; - java.lang.reflect.Modifier::isPublic@11 (line 68)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@70 (line 826)

  0x000000010f821fdb: and    $0x1,%esi
  0x000000010f821fde: cmp    $0x0,%esi
  0x000000010f821fe1: movabs $0x10edaed28,%rsi  ;   {metadata(method data for {method} {0x000000010ed6b808} 'isStaticallyNameable' '(Ljava/lang/Class;)Z' in 'java/lang/invoke/InvokerBytecodeGenerator')}
  0x000000010f821feb: movabs $0x330,%rdx
  0x000000010f821ff5: jne    0x000000010f822005
  0x000000010f821ffb: movabs $0x340,%rdx
  0x000000010f822005: mov    (%rsi,%rdx,1),%rdi
  0x000000010f822009: lea    0x1(%rdi),%rdi
  0x000000010f82200d: mov    %rdi,(%rsi,%rdx,1)
  0x000000010f822011: je     0x000000010f82218a  ;*ifne
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@73 (line 826)

  0x000000010f822017: movabs $0x7958ae918,%rsi  ;   {oop(a 'java/lang/Class' = 'java/lang/invoke/InvokerBytecodeGenerator')}
  0x000000010f822021: mov    0xb0(%rsi),%edi
  0x000000010f822027: shl    $0x3,%rdi          ;*getstatic STATICALLY_INVOCABLE_PACKAGES
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@78 (line 828)

  0x000000010f82202b: mov    %rdi,0xb8(%rsp)
  0x000000010f822033: mov    0xc(%rdi),%ebx     ;*arraylength
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@83 (line 828)
                                                ; implicit exception: dispatches to 0x000000010f82255b
  0x000000010f822036: mov    %ebx,0xb4(%rsp)
  0x000000010f82203d: mov    $0x0,%eax
  0x000000010f822042: jmpq   0x000000010f82211d  ;*iload_3
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@87 (line 828)

  0x000000010f822047: nop
  0x000000010f822048: movslq %eax,%rdx
  0x000000010f82204b: mov    0x10(%rdi,%rdx,4),%edx
  0x000000010f82204f: shl    $0x3,%rdx          ;*aaload
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@94 (line 828)

  0x000000010f822053: movabs $0x10edaed28,%rcx  ;   {metadata(method data for {method} {0x000000010ed6b808} 'isStaticallyNameable' '(Ljava/lang/Class;)Z' in 'java/lang/invoke/InvokerBytecodeGenerator')}
  0x000000010f82205d: addq   $0x1,0x370(%rcx)
  0x000000010f822065: mov    %rsi,%rcx
  0x000000010f822068: mov    %rdx,%rsi
  0x000000010f82206b: mov    %rcx,%rdx          ;*invokestatic isSamePackage
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@100 (line 829)

  0x000000010f82206e: mov    %rcx,0x90(%rsp)
  0x000000010f822076: mov    %eax,0xb0(%rsp)
  0x000000010f82207d: nop
  0x000000010f82207e: nop
  0x000000010f82207f: callq  0x000000010f717520  ; OopMap{[184]=Oop [144]=Oop off=6724}
                                                ;*invokestatic isSamePackage
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@100 (line 829)
                                                ;   {static_call}
  0x000000010f822084: cmp    $0x0,%eax
  0x000000010f822087: movabs $0x10edaed28,%rax  ;   {metadata(method data for {method} {0x000000010ed6b808} 'isStaticallyNameable' '(Ljava/lang/Class;)Z' in 'java/lang/invoke/InvokerBytecodeGenerator')}
  0x000000010f822091: movabs $0x380,%rsi
  0x000000010f82209b: je     0x000000010f8220ab
  0x000000010f8220a1: movabs $0x390,%rsi
  0x000000010f8220ab: mov    (%rax,%rsi,1),%rdi
  0x000000010f8220af: lea    0x1(%rdi),%rdi
  0x000000010f8220b3: mov    %rdi,(%rax,%rsi,1)
  0x000000010f8220b7: jne    0x000000010f822162  ;*ifeq
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@103 (line 829)

  0x000000010f8220bd: mov    0xb0(%rsp),%eax
  0x000000010f8220c4: inc    %eax
  0x000000010f8220c6: movabs $0x10edaed28,%rsi  ;   {metadata(method data for {method} {0x000000010ed6b808} 'isStaticallyNameable' '(Ljava/lang/Class;)Z' in 'java/lang/invoke/InvokerBytecodeGenerator')}
  0x000000010f8220d0: mov    0xe0(%rsi),%edi
  0x000000010f8220d6: add    $0x8,%edi
  0x000000010f8220d9: mov    %edi,0xe0(%rsi)
  0x000000010f8220df: movabs $0x10ed6b808,%rsi  ;   {metadata({method} {0x000000010ed6b808} 'isStaticallyNameable' '(Ljava/lang/Class;)Z' in 'java/lang/invoke/InvokerBytecodeGenerator')}
  0x000000010f8220e9: and    $0xfff8,%edi
  0x000000010f8220ef: cmp    $0x0,%edi
  0x000000010f8220f2: je     0x000000010f822560  ; OopMap{[184]=Oop [144]=Oop off=6840}
                                                ;*goto
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@111 (line 828)

  0x000000010f8220f8: test   %eax,-0x8d86ffe(%rip)        # 0x0000000106a9b100
                                                ;   {poll}
  0x000000010f8220fe: movabs $0x10edaed28,%rsi  ;   {metadata(method data for {method} {0x000000010ed6b808} 'isStaticallyNameable' '(Ljava/lang/Class;)Z' in 'java/lang/invoke/InvokerBytecodeGenerator')}
  0x000000010f822108: incl   0x3a0(%rsi)        ;*goto
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@111 (line 828)

  0x000000010f82210e: mov    0xb4(%rsp),%ebx
  0x000000010f822115: mov    0xb8(%rsp),%rdi
  0x000000010f82211d: mov    0x90(%rsp),%rsi
  0x000000010f822125: cmp    %ebx,%eax
  0x000000010f822127: movabs $0x10edaed28,%rdx  ;   {metadata(method data for {method} {0x000000010ed6b808} 'isStaticallyNameable' '(Ljava/lang/Class;)Z' in 'java/lang/invoke/InvokerBytecodeGenerator')}
  0x000000010f822131: movabs $0x350,%rcx
  0x000000010f82213b: jge    0x000000010f82214b
  0x000000010f822141: movabs $0x360,%rcx
  0x000000010f82214b: mov    (%rdx,%rcx,1),%r8
  0x000000010f82214f: lea    0x1(%r8),%r8
  0x000000010f822153: mov    %r8,(%rdx,%rcx,1)
  0x000000010f822157: jge    0x000000010f822176
  0x000000010f82215d: jmpq   0x000000010f822048  ;*if_icmpge
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@89 (line 828)

  0x000000010f822162: mov    $0x1,%eax
  0x000000010f822167: add    $0xd0,%rsp
  0x000000010f82216e: pop    %rbp
  0x000000010f82216f: test   %eax,-0x8d87075(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f822175: retq                      ;*ireturn
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@107 (line 830)

  0x000000010f822176: mov    $0x0,%eax
  0x000000010f82217b: add    $0xd0,%rsp
  0x000000010f822182: pop    %rbp
  0x000000010f822183: test   %eax,-0x8d87089(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f822189: retq                      ;*ireturn
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@115 (line 832)

  0x000000010f82218a: mov    $0x0,%eax
  0x000000010f82218f: add    $0xd0,%rsp
  0x000000010f822196: pop    %rbp
  0x000000010f822197: test   %eax,-0x8d8709d(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f82219d: retq                      ;*ireturn
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@77 (line 827)

  0x000000010f82219e: mov    $0x1,%eax
  0x000000010f8221a3: add    $0xd0,%rsp
  0x000000010f8221aa: pop    %rbp
  0x000000010f8221ab: test   %eax,-0x8d870b1(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f8221b1: retq                      ;*ireturn
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@65 (line 825)

  0x000000010f8221b2: mov    $0x0,%eax
  0x000000010f8221b7: add    $0xd0,%rsp
  0x000000010f8221be: pop    %rbp
  0x000000010f8221bf: test   %eax,-0x8d870c5(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f8221c5: retq                      ;*ireturn
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@54 (line 823)

  0x000000010f8221c6: mov    $0x0,%eax
  0x000000010f8221cb: add    $0xd0,%rsp
  0x000000010f8221d2: pop    %rbp
  0x000000010f8221d3: test   %eax,-0x8d870d9(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f8221d9: retq                      ;*ireturn
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@40 (line 820)

  0x000000010f8221da: mov    $0x1,%eax
  0x000000010f8221df: add    $0xd0,%rsp
  0x000000010f8221e6: pop    %rbp
  0x000000010f8221e7: test   %eax,-0x8d870ed(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f8221ed: retq                      ;*ireturn
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@31 (line 818)

  0x000000010f8221ee: mov    $0x1,%eax
  0x000000010f8221f3: add    $0xd0,%rsp
  0x000000010f8221fa: pop    %rbp
  0x000000010f8221fb: test   %eax,-0x8d87101(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f822201: retq   
  0x000000010f822202: mov    %rdi,0x8(%rsp)
  0x000000010f822207: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f82220f: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=7124}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@-1 (line 813)
                                                ;   {runtime_call}
  0x000000010f822214: jmpq   0x000000010f820681
  0x000000010f822219: mov    %rsi,0x8(%rsp)
  0x000000010f82221e: movq   $0x14,(%rsp)
  0x000000010f822226: callq  0x000000010f7d1a20  ; OopMap{rax=Oop off=7147}
                                                ;*goto
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@20 (line 816)
                                                ;   {runtime_call}
  0x000000010f82222b: jmpq   0x000000010f82079e
  0x000000010f822230: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop off=7157}
                                                ;*invokevirtual isArray
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@9 (line 815)
                                                ;   {runtime_call}
  0x000000010f822235: mov    %rdi,0x8(%rsp)
  0x000000010f82223a: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f822242: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=7175}
                                                ;*synchronization entry
                                                ; - sun.reflect.misc.ReflectUtil::isVMAnonymousClass@-1 (line 344)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@33 (line 819)
                                                ;   {runtime_call}
  0x000000010f822247: jmpq   0x000000010f8209d1
  0x000000010f82224c: mov    %rdi,0x8(%rsp)
  0x000000010f822251: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f822259: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=7198}
                                                ;*synchronization entry
                                                ; - java.lang.Class::getName@-1 (line 640)
                                                ; - sun.reflect.misc.ReflectUtil::isVMAnonymousClass@1 (line 344)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@33 (line 819)
                                                ;   {runtime_call}
  0x000000010f82225e: jmpq   0x000000010f820a93
  0x000000010f822263: callq  0x000000010f7cd0c0  ; OopMap{rdi=Oop [144]=Oop off=7208}
                                                ;*invokevirtual indexOf
                                                ; - sun.reflect.misc.ReflectUtil::isVMAnonymousClass@6 (line 344)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@33 (line 819)
                                                ;   {runtime_call}
  0x000000010f822268: mov    %rdx,0x8(%rsp)
  0x000000010f82226d: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f822275: callq  0x000000010f7d1a20  ; OopMap{rdi=Oop [144]=Oop off=7226}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1698)
                                                ; - sun.reflect.misc.ReflectUtil::isVMAnonymousClass@6 (line 344)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@33 (line 819)
                                                ;   {runtime_call}
  0x000000010f82227a: jmpq   0x000000010f820bf4
  0x000000010f82227f: mov    %rdx,0x8(%rsp)
  0x000000010f822284: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f82228c: callq  0x000000010f7d1a20  ; OopMap{rdi=Oop [144]=Oop off=7249}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1718)
                                                ; - java.lang.String::indexOf@3 (line 1698)
                                                ; - sun.reflect.misc.ReflectUtil::isVMAnonymousClass@6 (line 344)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@33 (line 819)
                                                ;   {runtime_call}
  0x000000010f822291: jmpq   0x000000010f820cb6
  0x000000010f822296: callq  0x000000010f7cd0c0  ; OopMap{[144]=Oop rdx=Oop off=7259}
                                                ;*arraylength
                                                ; - java.lang.String::indexOf@9 (line 1718)
                                                ; - java.lang.String::indexOf@3 (line 1698)
                                                ; - sun.reflect.misc.ReflectUtil::isVMAnonymousClass@6 (line 344)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@33 (line 819)
                                                ;   {runtime_call}
  0x000000010f82229b: callq  0x000000010f7cd0c0  ; OopMap{[144]=Oop rdx=Oop off=7264}
                                                ;*getfield value
                                                ; - java.lang.String::indexOf@11 (line 1718)
                                                ; - java.lang.String::indexOf@3 (line 1698)
                                                ; - sun.reflect.misc.ReflectUtil::isVMAnonymousClass@6 (line 344)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@33 (line 819)
                                                ;   {runtime_call}
  0x000000010f8222a0: callq  0x000000010f7cd0c0  ; OopMap{[144]=Oop rdx=Oop r8=Oop off=7269}
                                                ;*arraylength
                                                ; - java.lang.String::indexOf@19 (line 1718)
                                                ; - java.lang.String::indexOf@3 (line 1698)
                                                ; - sun.reflect.misc.ReflectUtil::isVMAnonymousClass@6 (line 344)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@33 (line 819)
                                                ;   {runtime_call}
  0x000000010f8222a5: mov    %rdi,0x8(%rsp)
  0x000000010f8222aa: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f8222b2: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=7287}
                                                ;*synchronization entry
                                                ; - java.lang.Class::getClassLoader@-1 (line 678)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@42 (line 822)
                                                ;   {runtime_call}
  0x000000010f8222b7: jmpq   0x000000010f820e62
  0x000000010f8222bc: mov    %rbx,0x8(%rsp)
  0x000000010f8222c1: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f8222c9: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop rdi=Oop [152]=Oop off=7310}
                                                ;*synchronization entry
                                                ; - java.lang.System::getSecurityManager@-1 (line 334)
                                                ; - java.lang.Class::getClassLoader@11 (line 681)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@42 (line 822)
                                                ;   {runtime_call}
  0x000000010f8222ce: jmpq   0x000000010f820f96
  0x000000010f8222d3: mov    %rdx,0x8(%rsp)
  0x000000010f8222d8: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f8222e0: callq  0x000000010f7d1a20  ; OopMap{[152]=Oop [144]=Oop rax=Oop off=7333}
                                                ;*synchronization entry
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@-1 (line 1523)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@42 (line 822)
                                                ;   {runtime_call}
  0x000000010f8222e5: jmpq   0x000000010f821048
  0x000000010f8222ea: mov    %rdx,0x8(%rsp)
  0x000000010f8222ef: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f8222f7: callq  0x000000010f7d1a20  ; OopMap{[152]=Oop [144]=Oop rax=Oop off=7356}
                                                ;*synchronization entry
                                                ; - java.lang.System::getSecurityManager@-1 (line 334)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@0 (line 1523)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@42 (line 822)
                                                ;   {runtime_call}
  0x000000010f8222fc: jmpq   0x000000010f82108c
  0x000000010f822301: mov    %rdx,0x8(%rsp)
  0x000000010f822306: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f82230e: callq  0x000000010f7d1a20  ; OopMap{[152]=Oop [144]=Oop rsi=Oop rax=Oop off=7379}
                                                ;*synchronization entry
                                                ; - java.lang.ClassLoader::getClassLoader@-1 (line 1510)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@9 (line 1526)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@42 (line 822)
                                                ;   {runtime_call}
  0x000000010f822313: jmpq   0x000000010f82111b
  0x000000010f822318: callq  0x000000010f7cd0c0  ; OopMap{[152]=Oop [144]=Oop rsi=Oop rax=Oop off=7389}
                                                ;*invokevirtual getClassLoader0
                                                ; - java.lang.ClassLoader::getClassLoader@7 (line 1514)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@9 (line 1526)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@42 (line 822)
                                                ;   {runtime_call}
  0x000000010f82231d: mov    %rbx,0x8(%rsp)
  0x000000010f822322: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f82232a: callq  0x000000010f7d1a20  ; OopMap{[144]=Oop rsi=Oop rdx=Oop rdi=Oop [152]=Oop off=7407}
                                                ;*synchronization entry
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@-1 (line 1498)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1527)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@42 (line 822)
                                                ;   {runtime_call}
  0x000000010f82232f: jmpq   0x000000010f82124a
  0x000000010f822334: callq  0x000000010f7cd0c0  ; OopMap{[144]=Oop rsi=Oop rdi=Oop [152]=Oop rdx=Oop off=7417}
                                                ;*invokevirtual isAncestor
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@15 (line 1504)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1527)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@42 (line 822)
                                                ;   {runtime_call}
  0x000000010f822339: mov    %rbx,0x8(%rsp)
  0x000000010f82233e: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f822346: callq  0x000000010f7d1a20  ; OopMap{[144]=Oop rsi=Oop rdi=Oop [152]=Oop rdx=Oop off=7435}
                                                ;*synchronization entry
                                                ; - java.lang.ClassLoader::isAncestor@-1 (line 1480)
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@15 (line 1504)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1527)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@42 (line 822)
                                                ;   {runtime_call}
  0x000000010f82234b: jmpq   0x000000010f821396
  0x000000010f822350: mov    %rax,0x8(%rsp)
  0x000000010f822355: movq   $0xf,(%rsp)
  0x000000010f82235d: callq  0x000000010f7d1a20  ; OopMap{[144]=Oop rsi=Oop rdi=Oop [152]=Oop rdx=Oop rbx=Oop off=7458}
                                                ;*ifnonnull
                                                ; - java.lang.ClassLoader::isAncestor@15 (line 1486)
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@15 (line 1504)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1527)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@42 (line 822)
                                                ;   {runtime_call}
  0x000000010f822362: jmpq   0x000000010f8213d2
  0x000000010f822367: callq  0x000000010f7cd0c0  ; OopMap{[144]=Oop rsi=Oop rdi=Oop [152]=Oop rdx=Oop off=7468}
                                                ;*getfield parent
                                                ; - java.lang.ClassLoader::isAncestor@3 (line 1482)
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@15 (line 1504)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1527)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@42 (line 822)
                                                ;   {runtime_call}
  0x000000010f82236c: movabs $0x0,%rdx          ;   {oop(NULL)}
  0x000000010f822376: push   %rax
  0x000000010f822377: push   %rbx
  0x000000010f822378: mov    0x48(%rdx),%rbx
  0x000000010f82237c: push   %rdi
  0x000000010f82237d: push   %rsi
  0x000000010f82237e: push   %rdx
  0x000000010f82237f: push   %rcx
  0x000000010f822380: push   %r8
  0x000000010f822382: push   %r9
  0x000000010f822384: push   %r10
  0x000000010f822386: mov    %rsp,%r10
  0x000000010f822389: and    $0xfffffffffffffff0,%rsp
  0x000000010f82238d: push   %r10
  0x000000010f82238f: push   %r11
  0x000000010f822391: mov    $0x10d,%edi
  0x000000010f822396: movabs $0x7fff203204e5,%r10  ;   {runtime_call}
  0x000000010f8223a0: callq  *%r10
  0x000000010f8223a3: pop    %r11
  0x000000010f8223a5: pop    %rsp
  0x000000010f8223a6: pop    %r10
  0x000000010f8223a8: pop    %r9
  0x000000010f8223aa: pop    %r8
  0x000000010f8223ac: pop    %rcx
  0x000000010f8223ad: pop    %rdx
  0x000000010f8223ae: pop    %rsi
  0x000000010f8223af: pop    %rdi
  0x000000010f8223b0: cmp    0x118(%rbx),%rax
  0x000000010f8223b7: pop    %rbx
  0x000000010f8223b8: pop    %rax
  0x000000010f8223b9: jne    0x000000010f8223c9
  0x000000010f8223bf: jmpq   0x000000010f82150a
  0x000000010f8223c4: mov    $0xa535d00,%eax
  0x000000010f8223c9: callq  0x000000010f7d0ce0  ; OopMap{[144]=Oop [152]=Oop rsi=Oop off=7566}
                                                ;*getstatic GET_CLASSLOADER_PERMISSION
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@22 (line 1528)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@42 (line 822)
                                                ;   {runtime_call}
  0x000000010f8223ce: jmpq   0x000000010f821500
  0x000000010f8223d3: callq  0x000000010f7cd0c0  ; OopMap{[144]=Oop [152]=Oop rsi=Oop rdx=Oop off=7576}
                                                ;*getstatic GET_CLASSLOADER_PERMISSION
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@22 (line 1528)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@42 (line 822)
                                                ;   {runtime_call}
  0x000000010f8223d8: mov    0x0(%rdx),%edx
  0x000000010f8223de: mov    $0x6050b00,%eax
  0x000000010f8223e3: callq  0x000000010f7d04e0  ; OopMap{[144]=Oop [152]=Oop rsi=Oop rdx=Oop off=7592}
                                                ;*getstatic GET_CLASSLOADER_PERMISSION
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@22 (line 1528)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@42 (line 822)
                                                ;   {runtime_call}
  0x000000010f8223e8: jmpq   0x000000010f821510
  0x000000010f8223ed: callq  0x000000010f7cd0c0  ; OopMap{[144]=Oop [152]=Oop rsi=Oop rdx=Oop off=7602}
                                                ;*invokevirtual checkPermission
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@25 (line 1528)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@42 (line 822)
                                                ;   {runtime_call}
  0x000000010f8223f2: mov    %rbx,0x8(%rsp)
  0x000000010f8223f7: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f8223ff: callq  0x000000010f7d1a20  ; OopMap{[144]=Oop rdi=Oop rsi=Oop off=7620}
                                                ;*synchronization entry
                                                ; - java.lang.Class::getClassLoader@-1 (line 678)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@47 (line 822)
                                                ;   {runtime_call}
  0x000000010f822404: jmpq   0x000000010f821690
  0x000000010f822409: callq  0x000000010f7cd0c0  ; OopMap{[144]=Oop rdi=Oop off=7630}
                                                ;*getfield classLoader
                                                ; - java.lang.Class::getClassLoader0@1 (line 689)
                                                ; - java.lang.Class::getClassLoader@1 (line 678)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@47 (line 822)
                                                ;   {runtime_call}
  0x000000010f82240e: mov    %rbx,0x8(%rsp)
  0x000000010f822413: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f82241b: callq  0x000000010f7d1a20  ; OopMap{[144]=Oop rdi=Oop rsi=Oop [160]=Oop off=7648}
                                                ;*synchronization entry
                                                ; - java.lang.System::getSecurityManager@-1 (line 334)
                                                ; - java.lang.Class::getClassLoader@11 (line 681)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@47 (line 822)
                                                ;   {runtime_call}
  0x000000010f822420: jmpq   0x000000010f8217bc
  0x000000010f822425: mov    %rdx,0x8(%rsp)
  0x000000010f82242a: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f822432: callq  0x000000010f7d1a20  ; OopMap{[144]=Oop [168]=Oop [160]=Oop rax=Oop off=7671}
                                                ;*synchronization entry
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@-1 (line 1523)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@47 (line 822)
                                                ;   {runtime_call}
  0x000000010f822437: jmpq   0x000000010f821870
  0x000000010f82243c: mov    %rdx,0x8(%rsp)
  0x000000010f822441: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f822449: callq  0x000000010f7d1a20  ; OopMap{[144]=Oop [168]=Oop [160]=Oop rax=Oop off=7694}
                                                ;*synchronization entry
                                                ; - java.lang.System::getSecurityManager@-1 (line 334)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@0 (line 1523)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@47 (line 822)
                                                ;   {runtime_call}
  0x000000010f82244e: jmpq   0x000000010f8218b4
  0x000000010f822453: mov    %rdx,0x8(%rsp)
  0x000000010f822458: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f822460: callq  0x000000010f7d1a20  ; OopMap{[144]=Oop [168]=Oop [160]=Oop rsi=Oop rax=Oop off=7717}
                                                ;*synchronization entry
                                                ; - java.lang.ClassLoader::getClassLoader@-1 (line 1510)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@9 (line 1526)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@47 (line 822)
                                                ;   {runtime_call}
  0x000000010f822465: jmpq   0x000000010f821943
  0x000000010f82246a: callq  0x000000010f7cd0c0  ; OopMap{[144]=Oop [168]=Oop [160]=Oop rsi=Oop rax=Oop off=7727}
                                                ;*invokevirtual getClassLoader0
                                                ; - java.lang.ClassLoader::getClassLoader@7 (line 1514)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@9 (line 1526)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@47 (line 822)
                                                ;   {runtime_call}
  0x000000010f82246f: mov    %rbx,0x8(%rsp)
  0x000000010f822474: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f82247c: callq  0x000000010f7d1a20  ; OopMap{[144]=Oop [168]=Oop rsi=Oop rdx=Oop rdi=Oop [160]=Oop off=7745}
                                                ;*synchronization entry
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@-1 (line 1498)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1527)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@47 (line 822)
                                                ;   {runtime_call}
  0x000000010f822481: jmpq   0x000000010f821a72
  0x000000010f822486: callq  0x000000010f7cd0c0  ; OopMap{[144]=Oop [168]=Oop rsi=Oop rdi=Oop [160]=Oop rdx=Oop off=7755}
                                                ;*invokevirtual isAncestor
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@15 (line 1504)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1527)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@47 (line 822)
                                                ;   {runtime_call}
  0x000000010f82248b: mov    %rbx,0x8(%rsp)
  0x000000010f822490: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f822498: callq  0x000000010f7d1a20  ; OopMap{[144]=Oop [168]=Oop rsi=Oop rdi=Oop [160]=Oop rdx=Oop off=7773}
                                                ;*synchronization entry
                                                ; - java.lang.ClassLoader::isAncestor@-1 (line 1480)
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@15 (line 1504)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1527)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@47 (line 822)
                                                ;   {runtime_call}
  0x000000010f82249d: jmpq   0x000000010f821bbe
  0x000000010f8224a2: mov    %rax,0x8(%rsp)
  0x000000010f8224a7: movq   $0xf,(%rsp)
  0x000000010f8224af: callq  0x000000010f7d1a20  ; OopMap{[144]=Oop [168]=Oop rsi=Oop rdi=Oop [160]=Oop rdx=Oop rbx=Oop off=7796}
                                                ;*ifnonnull
                                                ; - java.lang.ClassLoader::isAncestor@15 (line 1486)
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@15 (line 1504)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1527)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@47 (line 822)
                                                ;   {runtime_call}
  0x000000010f8224b4: jmpq   0x000000010f821bfa
  0x000000010f8224b9: callq  0x000000010f7cd0c0  ; OopMap{[144]=Oop [168]=Oop rsi=Oop rdi=Oop [160]=Oop rdx=Oop off=7806}
                                                ;*getfield parent
                                                ; - java.lang.ClassLoader::isAncestor@3 (line 1482)
                                                ; - java.lang.ClassLoader::needsClassLoaderPermissionCheck@15 (line 1504)
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@15 (line 1527)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@47 (line 822)
                                                ;   {runtime_call}
  0x000000010f8224be: movabs $0x0,%rdx          ;   {oop(NULL)}
  0x000000010f8224c8: push   %rax
  0x000000010f8224c9: push   %rbx
  0x000000010f8224ca: mov    0x48(%rdx),%rbx
  0x000000010f8224ce: push   %rdi
  0x000000010f8224cf: push   %rsi
  0x000000010f8224d0: push   %rdx
  0x000000010f8224d1: push   %rcx
  0x000000010f8224d2: push   %r8
  0x000000010f8224d4: push   %r9
  0x000000010f8224d6: push   %r10
  0x000000010f8224d8: mov    %rsp,%r10
  0x000000010f8224db: and    $0xfffffffffffffff0,%rsp
  0x000000010f8224df: push   %r10
  0x000000010f8224e1: push   %r11
  0x000000010f8224e3: mov    $0x10d,%edi
  0x000000010f8224e8: movabs $0x7fff203204e5,%r10  ;   {runtime_call}
  0x000000010f8224f2: callq  *%r10
  0x000000010f8224f5: pop    %r11
  0x000000010f8224f7: pop    %rsp
  0x000000010f8224f8: pop    %r10
  0x000000010f8224fa: pop    %r9
  0x000000010f8224fc: pop    %r8
  0x000000010f8224fe: pop    %rcx
  0x000000010f8224ff: pop    %rdx
  0x000000010f822500: pop    %rsi
  0x000000010f822501: pop    %rdi
  0x000000010f822502: cmp    0x118(%rbx),%rax
  0x000000010f822509: pop    %rbx
  0x000000010f82250a: pop    %rax
  0x000000010f82250b: jne    0x000000010f82251b
  0x000000010f822511: jmpq   0x000000010f821d32
  0x000000010f822516: mov    $0xa535d00,%eax
  0x000000010f82251b: callq  0x000000010f7d0ce0  ; OopMap{[144]=Oop [168]=Oop [160]=Oop rsi=Oop off=7904}
                                                ;*getstatic GET_CLASSLOADER_PERMISSION
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@22 (line 1528)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@47 (line 822)
                                                ;   {runtime_call}
  0x000000010f822520: jmpq   0x000000010f821d28
  0x000000010f822525: callq  0x000000010f7cd0c0  ; OopMap{[144]=Oop [168]=Oop [160]=Oop rsi=Oop rdx=Oop off=7914}
                                                ;*getstatic GET_CLASSLOADER_PERMISSION
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@22 (line 1528)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@47 (line 822)
                                                ;   {runtime_call}
  0x000000010f82252a: mov    0x0(%rdx),%edx
  0x000000010f822530: mov    $0x6050b00,%eax
  0x000000010f822535: callq  0x000000010f7d04e0  ; OopMap{[144]=Oop [168]=Oop [160]=Oop rsi=Oop rdx=Oop off=7930}
                                                ;*getstatic GET_CLASSLOADER_PERMISSION
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@22 (line 1528)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@47 (line 822)
                                                ;   {runtime_call}
  0x000000010f82253a: jmpq   0x000000010f821d38
  0x000000010f82253f: callq  0x000000010f7cd0c0  ; OopMap{[144]=Oop [168]=Oop [160]=Oop rsi=Oop rdx=Oop off=7940}
                                                ;*invokevirtual checkPermission
                                                ; - java.lang.ClassLoader::checkClassLoaderPermission@25 (line 1528)
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@47 (line 822)
                                                ;   {runtime_call}
  0x000000010f822544: mov    %rsi,0x8(%rsp)
  0x000000010f822549: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f822551: callq  0x000000010f7d1a20  ; OopMap{[144]=Oop off=7958}
                                                ;*synchronization entry
                                                ; - java.lang.reflect.Modifier::isPublic@-1 (line 68)
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@70 (line 826)
                                                ;   {runtime_call}
  0x000000010f822556: jmpq   0x000000010f821f80
  0x000000010f82255b: callq  0x000000010f7cd0c0  ; OopMap{[144]=Oop rdi=Oop [184]=Oop off=7968}
                                                ;*arraylength
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@83 (line 828)
                                                ;   {runtime_call}
  0x000000010f822560: mov    %rsi,0x8(%rsp)
  0x000000010f822565: movq   $0x6f,(%rsp)
  0x000000010f82256d: callq  0x000000010f7d1a20  ; OopMap{[184]=Oop [144]=Oop off=7986}
                                                ;*goto
                                                ; - java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable@111 (line 828)
                                                ;   {runtime_call}
  0x000000010f822572: jmpq   0x000000010f8220f8
  0x000000010f822577: nop
  0x000000010f822578: nop
  0x000000010f822579: mov    0x2a8(%r15),%rax
  0x000000010f822580: movabs $0x0,%r10
  0x000000010f82258a: mov    %r10,0x2a8(%r15)
  0x000000010f822591: movabs $0x0,%r10
  0x000000010f82259b: mov    %r10,0x2b0(%r15)
  0x000000010f8225a2: add    $0xd0,%rsp
  0x000000010f8225a9: pop    %rbp
  0x000000010f8225aa: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f8225af: hlt    
  0x000000010f8225b0: hlt    
  0x000000010f8225b1: hlt    
  0x000000010f8225b2: hlt    
  0x000000010f8225b3: hlt    
  0x000000010f8225b4: hlt    
  0x000000010f8225b5: hlt    
  0x000000010f8225b6: hlt    
  0x000000010f8225b7: hlt    
  0x000000010f8225b8: hlt    
  0x000000010f8225b9: hlt    
  0x000000010f8225ba: hlt    
  0x000000010f8225bb: hlt    
  0x000000010f8225bc: hlt    
  0x000000010f8225bd: hlt    
  0x000000010f8225be: hlt    
  0x000000010f8225bf: hlt    
[Stub Code]
  0x000000010f8225c0: nop                       ;   {no_reloc}
  0x000000010f8225c1: nop
  0x000000010f8225c2: nop
  0x000000010f8225c3: nop
  0x000000010f8225c4: nop
  0x000000010f8225c5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f8225cf: jmpq   0x000000010f8225cf  ;   {runtime_call}
  0x000000010f8225d4: nop
  0x000000010f8225d5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f8225df: jmpq   0x000000010f8225df  ;   {runtime_call}
  0x000000010f8225e4: nop
  0x000000010f8225e5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f8225ef: jmpq   0x000000010f8225ef  ;   {runtime_call}
  0x000000010f8225f4: nop
  0x000000010f8225f5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f8225ff: jmpq   0x000000010f8225ff  ;   {runtime_call}
  0x000000010f822604: nop
  0x000000010f822605: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f82260f: jmpq   0x000000010f82260f  ;   {runtime_call}
  0x000000010f822614: nop
  0x000000010f822615: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f82261f: jmpq   0x000000010f82261f  ;   {runtime_call}
  0x000000010f822624: nop
  0x000000010f822625: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f82262f: jmpq   0x000000010f82262f  ;   {runtime_call}
  0x000000010f822634: nop
  0x000000010f822635: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f82263f: jmpq   0x000000010f82263f  ;   {runtime_call}
  0x000000010f822644: nop
  0x000000010f822645: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f82264f: jmpq   0x000000010f82264f  ;   {runtime_call}
  0x000000010f822654: nop
  0x000000010f822655: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f82265f: jmpq   0x000000010f82265f  ;   {runtime_call}
  0x000000010f822664: nop
  0x000000010f822665: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f82266f: jmpq   0x000000010f82266f  ;   {runtime_call}
  0x000000010f822674: nop
  0x000000010f822675: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f82267f: jmpq   0x000000010f82267f  ;   {runtime_call}
[Exception Handler]
  0x000000010f822684: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f822689: mov    %rsp,-0x28(%rsp)
  0x000000010f82268e: sub    $0x80,%rsp
  0x000000010f822695: mov    %rax,0x78(%rsp)
  0x000000010f82269a: mov    %rcx,0x70(%rsp)
  0x000000010f82269f: mov    %rdx,0x68(%rsp)
  0x000000010f8226a4: mov    %rbx,0x60(%rsp)
  0x000000010f8226a9: mov    %rbp,0x50(%rsp)
  0x000000010f8226ae: mov    %rsi,0x48(%rsp)
  0x000000010f8226b3: mov    %rdi,0x40(%rsp)
  0x000000010f8226b8: mov    %r8,0x38(%rsp)
  0x000000010f8226bd: mov    %r9,0x30(%rsp)
  0x000000010f8226c2: mov    %r10,0x28(%rsp)
  0x000000010f8226c7: mov    %r11,0x20(%rsp)
  0x000000010f8226cc: mov    %r12,0x18(%rsp)
  0x000000010f8226d1: mov    %r13,0x10(%rsp)
  0x000000010f8226d6: mov    %r14,0x8(%rsp)
  0x000000010f8226db: mov    %r15,(%rsp)
  0x000000010f8226df: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f8226e9: movabs $0x10f822689,%rsi  ;   {internal_word}
  0x000000010f8226f3: mov    %rsp,%rdx
  0x000000010f8226f6: and    $0xfffffffffffffff0,%rsp
  0x000000010f8226fa: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f8226ff: hlt    
[Deopt Handler Code]
  0x000000010f822700: movabs $0x10f822700,%r10  ;   {section_word}
  0x000000010f82270a: push   %r10
  0x000000010f82270c: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f822711: hlt    
  0x000000010f822712: hlt    
  0x000000010f822713: hlt    
  0x000000010f822714: hlt    
  0x000000010f822715: hlt    
  0x000000010f822716: hlt    
  0x000000010f822717: hlt    
Decoding compiled method 0x000000010f826a50:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ed77218} 'putUTF8' '(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;' in 'jdk/internal/org/objectweb/asm/ByteVector'
  # this:     rsi:rsi   = 'jdk/internal/org/objectweb/asm/ByteVector'
  # parm0:    rdx:rdx   = 'java/lang/String'
  #           [sp+0x50]  (sp of caller)
  0x000000010f826bc0: mov    0x8(%rsi),%r10d
  0x000000010f826bc4: shl    $0x3,%r10
  0x000000010f826bc8: cmp    %r10,%rax
  0x000000010f826bcb: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f826bd1: data16 xchg %ax,%ax
  0x000000010f826bd4: nopl   0x0(%rax,%rax,1)
  0x000000010f826bdc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f826be0: mov    %eax,-0x14000(%rsp)
  0x000000010f826be7: push   %rbp
  0x000000010f826be8: sub    $0x40,%rsp         ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@-1 (line 240)

  0x000000010f826bec: mov    %rsi,%r9
  0x000000010f826bef: mov    %rdx,%r11
  0x000000010f826bf2: mov    0xc(%rdx),%r10d    ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 240)
                                                ; implicit exception: dispatches to 0x000000010f82707a
  0x000000010f826bf6: mov    0xc(%r12,%r10,8),%r8d  ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 240)
                                                ; implicit exception: dispatches to 0x000000010f827089
  0x000000010f826bfb: cmp    $0xffff,%r8d
  0x000000010f826c02: jg     0x000000010f82703c  ;*if_icmple
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@8 (line 241)

  0x000000010f826c08: mov    %rsi,%rcx
  0x000000010f826c0b: mov    0x10(%rsi),%r9d    ;*getfield data
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@30 (line 245)

  0x000000010f826c0f: mov    0xc(%r12,%r9,8),%edi  ; implicit exception: dispatches to 0x000000010f827099
  0x000000010f826c14: mov    0xc(%rsi),%eax     ;*getfield length
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@20 (line 244)

  0x000000010f826c17: mov    %r8d,%ebx
  0x000000010f826c1a: add    %eax,%ebx
  0x000000010f826c1c: mov    %r8d,%edx
  0x000000010f826c1f: shr    $0x8,%edx          ;*iushr
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@59 (line 255)

  0x000000010f826c22: add    $0x2,%ebx
  0x000000010f826c25: movsbl %dl,%ebp           ;*i2b  ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@60 (line 255)

  0x000000010f826c28: cmp    %edi,%ebx
  0x000000010f826c2a: jle    0x000000010f826c79  ;*if_icmple
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@34 (line 245)

  0x000000010f826c2c: mov    %ebp,0x14(%rsp)
  0x000000010f826c30: mov    %edx,0x10(%rsp)
  0x000000010f826c34: mov    %eax,0xc(%rsp)
  0x000000010f826c38: mov    %rsi,(%rsp)
  0x000000010f826c3c: mov    %r11,%rbp
  0x000000010f826c3f: mov    %r8d,%edx
  0x000000010f826c42: mov    %r8d,0x8(%rsp)
  0x000000010f826c47: add    $0x2,%edx          ;*iadd
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@40 (line 246)

  0x000000010f826c4a: nop
  0x000000010f826c4b: callq  0x000000010f7170a0  ; OopMap{rbp=Oop [0]=Oop off=144}
                                                ;*invokespecial enlarge
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@41 (line 246)
                                                ;   {optimized virtual_call}
  0x000000010f826c50: mov    (%rsp),%rcx
  0x000000010f826c54: mov    0x10(%rcx),%r9d    ;*getfield data
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@45 (line 248)

  0x000000010f826c58: test   %r9d,%r9d
  0x000000010f826c5b: je     0x000000010f827059  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@61 (line 255)

  0x000000010f826c61: mov    %rbp,%r11
  0x000000010f826c64: mov    0xc(%r11),%r10d
  0x000000010f826c68: mov    0x8(%rsp),%r8d
  0x000000010f826c6d: mov    0xc(%rsp),%eax
  0x000000010f826c71: mov    0x10(%rsp),%edx
  0x000000010f826c75: mov    0x14(%rsp),%ebp    ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x000000010f826c79: mov    0xc(%r12,%r9,8),%esi  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@61 (line 255)

  0x000000010f826c7e: mov    %eax,%ebx
  0x000000010f826c80: inc    %ebx               ;*iinc
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@53 (line 255)

  0x000000010f826c82: cmp    %esi,%eax
  0x000000010f826c84: jae    0x000000010f826f51  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@61 (line 255)

  0x000000010f826c8a: lea    (%r12,%r9,8),%r14
  0x000000010f826c8e: mov    %eax,%edi
  0x000000010f826c90: add    $0x2,%edi          ;*iadd
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@26 (line 245)

  0x000000010f826c93: movslq %eax,%rbp
  0x000000010f826c96: mov    %dl,0x10(%r14,%rbp,1)  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@61 (line 255)

  0x000000010f826c9b: cmp    %esi,%ebx
  0x000000010f826c9d: jae    0x000000010f826f7d
  0x000000010f826ca3: movslq %eax,%rbx
  0x000000010f826ca6: mov    %r8b,0x11(%r14,%rbx,1)  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@70 (line 256)

  0x000000010f826cab: test   %r8d,%r8d
  0x000000010f826cae: jle    0x000000010f826ea1  ;*if_icmpge
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@77 (line 257)

  0x000000010f826cb4: mov    0xc(%r12,%r10,8),%edx  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)
                                                ; implicit exception: dispatches to 0x000000010f826fad
  0x000000010f826cb9: mov    %edx,0x24(%rsp)
  0x000000010f826cbd: test   %edx,%edx
  0x000000010f826cbf: jbe    0x000000010f826fad
  0x000000010f826cc5: mov    %r8d,%edx
  0x000000010f826cc8: dec    %edx
  0x000000010f826cca: cmp    0x24(%rsp),%edx
  0x000000010f826cce: jae    0x000000010f826fad
  0x000000010f826cd4: cmp    %esi,%edi
  0x000000010f826cd6: jae    0x000000010f826fad
  0x000000010f826cdc: movslq %esi,%rbx
  0x000000010f826cdf: movslq %edi,%rdx
  0x000000010f826ce2: movslq %r8d,%rsi
  0x000000010f826ce5: add    %rsi,%rdx
  0x000000010f826ce8: dec    %rdx
  0x000000010f826ceb: cmp    %rbx,%rdx
  0x000000010f826cee: jae    0x000000010f826fad
  0x000000010f826cf4: lea    (%r12,%r10,8),%r13
  0x000000010f826cf8: xor    %ebx,%ebx
  0x000000010f826cfa: mov    $0x1,%esi
  0x000000010f826cff: cmp    %esi,%r8d
  0x000000010f826d02: mov    %r8d,%r10d
  0x000000010f826d05: cmovg  %esi,%r10d         ;*aload_1
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@80 (line 258)

  0x000000010f826d09: mov    %ebx,%edi
  0x000000010f826d0b: add    %eax,%edi          ;*iadd
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@26 (line 245)

  0x000000010f826d0d: mov    %edi,%edx
  0x000000010f826d0f: add    $0x2,%edx          ;*aload_1
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@80 (line 258)

  0x000000010f826d12: test   %ebx,%ebx
  0x000000010f826d14: jl     0x000000010f826fd1  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x000000010f826d1a: cmp    0x24(%rsp),%ebx
  0x000000010f826d1e: jge    0x000000010f827008  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x000000010f826d24: movzwl 0x10(%r13,%rbx,2),%ebp  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x000000010f826d2a: cmp    $0x1,%ebp
  0x000000010f826d2d: jl     0x000000010f827001  ;*if_icmplt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@91 (line 259)

  0x000000010f826d33: cmp    $0x7f,%ebp
  0x000000010f826d36: jg     0x000000010f827035  ;*if_icmpgt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@98 (line 259)

  0x000000010f826d3c: movslq %edi,%rdx
  0x000000010f826d3f: mov    %bpl,0x12(%r14,%rdx,1)  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@110 (line 260)

  0x000000010f826d44: inc    %ebx               ;*iinc
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@129 (line 257)

  0x000000010f826d46: cmp    %r10d,%ebx
  0x000000010f826d49: jl     0x000000010f826d09  ;*if_icmpge
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@77 (line 257)

  0x000000010f826d4b: cmp    0x24(%rsp),%r8d
  0x000000010f826d50: mov    %r8d,%esi
  0x000000010f826d53: mov    0x24(%rsp),%r10d
  0x000000010f826d58: cmovg  %r10d,%esi
  0x000000010f826d5c: mov    %esi,%r10d
  0x000000010f826d5f: add    $0xfffffffd,%r10d
  0x000000010f826d63: mov    %r10d,%ebp
  0x000000010f826d66: mov    $0x80000000,%r10d
  0x000000010f826d6c: cmp    %ebp,%esi
  0x000000010f826d6e: mov    %ebp,%esi
  0x000000010f826d70: cmovl  %r10d,%esi
  0x000000010f826d74: mov    %esi,(%rsp)
  0x000000010f826d77: cmp    %esi,%ebx
  0x000000010f826d79: jge    0x000000010f826e59
  0x000000010f826d7f: jmp    0x000000010f826d8f
  0x000000010f826d81: vmovd  %xmm1,%r8d
  0x000000010f826d86: vmovd  %xmm0,%r9d
  0x000000010f826d8b: vmovd  %xmm3,%eax         ;*aload_1
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@80 (line 258)

  0x000000010f826d8f: movzwl 0x10(%r13,%rbx,2),%r10d  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x000000010f826d95: mov    %ebx,%edx
  0x000000010f826d97: add    %eax,%edx          ;*iadd
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@26 (line 245)

  0x000000010f826d99: mov    %edx,%esi
  0x000000010f826d9b: add    $0x2,%esi          ;*aload_1
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@80 (line 258)

  0x000000010f826d9e: cmp    $0x1,%r10d
  0x000000010f826da2: jl     0x000000010f826eb3  ;*if_icmplt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@91 (line 259)

  0x000000010f826da8: cmp    $0x7f,%r10d
  0x000000010f826dac: jg     0x000000010f826f01  ;*if_icmpgt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@98 (line 259)

  0x000000010f826db2: vmovd  %eax,%xmm3
  0x000000010f826db6: vmovd  %r9d,%xmm0
  0x000000010f826dbb: vmovd  %r8d,%xmm1
  0x000000010f826dc0: movslq %ebx,%r8
  0x000000010f826dc3: movzwl 0x12(%r13,%r8,2),%ebp  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x000000010f826dc9: mov    %ebx,%eax
  0x000000010f826dcb: inc    %eax               ;*iinc
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@129 (line 257)

  0x000000010f826dcd: movslq %edx,%r9
  0x000000010f826dd0: mov    %r10b,0x12(%r14,%r9,1)  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@110 (line 260)

  0x000000010f826dd5: mov    %edx,%edi
  0x000000010f826dd7: add    $0x3,%edi          ;*aload_1
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@80 (line 258)

  0x000000010f826dda: cmp    $0x1,%ebp
  0x000000010f826ddd: jl     0x000000010f826ec8  ;*if_icmplt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@91 (line 259)

  0x000000010f826de3: cmp    $0x7f,%ebp
  0x000000010f826de6: jg     0x000000010f826f16  ;*if_icmpgt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@98 (line 259)

  0x000000010f826dec: mov    %bpl,0x13(%r14,%r9,1)  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@110 (line 260)

  0x000000010f826df1: movzwl 0x14(%r13,%r8,2),%r10d  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x000000010f826df7: mov    %ebx,%eax
  0x000000010f826df9: add    $0x2,%eax          ;*iinc
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@129 (line 257)

  0x000000010f826dfc: mov    %edx,%esi
  0x000000010f826dfe: add    $0x4,%esi          ;*aload_1
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@80 (line 258)

  0x000000010f826e01: cmp    $0x1,%r10d
  0x000000010f826e05: jl     0x000000010f826eb7  ;*if_icmplt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@91 (line 259)

  0x000000010f826e0b: cmp    $0x7f,%r10d
  0x000000010f826e0f: jg     0x000000010f826f05  ;*if_icmpgt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@98 (line 259)

  0x000000010f826e15: mov    %r10b,0x14(%r14,%r9,1)  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@110 (line 260)

  0x000000010f826e1a: movzwl 0x16(%r13,%r8,2),%ebp  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x000000010f826e20: mov    %ebx,%eax
  0x000000010f826e22: add    $0x3,%eax          ;*iinc
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@129 (line 257)

  0x000000010f826e25: add    $0x5,%edx          ;*aload_1
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@80 (line 258)

  0x000000010f826e28: cmp    $0x1,%ebp
  0x000000010f826e2b: jl     0x000000010f826eca  ;*if_icmplt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@91 (line 259)

  0x000000010f826e31: cmp    $0x7f,%ebp
  0x000000010f826e34: jg     0x000000010f826f18  ;*if_icmpgt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@98 (line 259)

  0x000000010f826e3a: mov    %bpl,0x15(%r14,%r9,1)  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@110 (line 260)

  0x000000010f826e3f: add    $0x4,%ebx          ;*iinc
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@129 (line 257)

  0x000000010f826e42: cmp    (%rsp),%ebx
  0x000000010f826e45: jl     0x000000010f826d81  ;*if_icmpge
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@77 (line 257)

  0x000000010f826e4b: vmovd  %xmm1,%r8d
  0x000000010f826e50: vmovd  %xmm0,%r9d
  0x000000010f826e55: vmovd  %xmm3,%eax
  0x000000010f826e59: cmp    %r8d,%ebx
  0x000000010f826e5c: jge    0x000000010f826e9e
  0x000000010f826e5e: xchg   %ax,%ax            ;*aload_1
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@80 (line 258)

  0x000000010f826e60: mov    %ebx,%edi
  0x000000010f826e62: add    %eax,%edi          ;*iadd
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@26 (line 245)

  0x000000010f826e64: mov    %edi,%edx
  0x000000010f826e66: add    $0x2,%edx          ;*aload_1
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@80 (line 258)

  0x000000010f826e69: test   %ebx,%ebx
  0x000000010f826e6b: jl     0x000000010f826fd1  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x000000010f826e71: cmp    0x24(%rsp),%ebx
  0x000000010f826e75: jge    0x000000010f827008  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x000000010f826e7b: movzwl 0x10(%r13,%rbx,2),%ebp  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x000000010f826e81: cmp    $0x1,%ebp
  0x000000010f826e84: jl     0x000000010f826ed6  ;*if_icmplt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@91 (line 259)

  0x000000010f826e86: cmp    $0x7f,%ebp
  0x000000010f826e89: jg     0x000000010f826f24  ;*if_icmpgt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@98 (line 259)

  0x000000010f826e8f: movslq %edi,%r10
  0x000000010f826e92: mov    %bpl,0x12(%r14,%r10,1)  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@110 (line 260)

  0x000000010f826e97: inc    %ebx               ;*iinc
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@129 (line 257)

  0x000000010f826e99: cmp    %r8d,%ebx
  0x000000010f826e9c: jl     0x000000010f826e60
  0x000000010f826e9e: add    $0x3,%edi          ;*if_icmpge
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@77 (line 257)

  0x000000010f826ea1: mov    %edi,0xc(%rcx)     ;*putfield length
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@137 (line 266)

  0x000000010f826ea4: mov    %rcx,%rax
  0x000000010f826ea7: add    $0x40,%rsp
  0x000000010f826eab: pop    %rbp
  0x000000010f826eac: test   %eax,-0x8d8beb2(%rip)        # 0x0000000106a9b000
                                                ;   {poll_return}
  0x000000010f826eb2: retq   
  0x000000010f826eb3: mov    %ebx,%eax
  0x000000010f826eb5: jmp    0x000000010f826ec1
  0x000000010f826eb7: vmovd  %xmm1,%r8d
  0x000000010f826ebc: vmovd  %xmm0,%r9d
  0x000000010f826ec1: mov    %r10d,%ebp
  0x000000010f826ec4: mov    %esi,%edx
  0x000000010f826ec6: jmp    0x000000010f826ed4
  0x000000010f826ec8: mov    %edi,%edx
  0x000000010f826eca: vmovd  %xmm1,%r8d
  0x000000010f826ecf: vmovd  %xmm0,%r9d
  0x000000010f826ed4: mov    %eax,%ebx          ;*if_icmplt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@91 (line 259)

  0x000000010f826ed6: mov    $0xffffff65,%esi
  0x000000010f826edb: mov    %edx,(%rsp)
  0x000000010f826ede: mov    %ebx,0x4(%rsp)
  0x000000010f826ee2: mov    %rcx,0x10(%rsp)
  0x000000010f826ee7: mov    %r11,0x18(%rsp)
  0x000000010f826eec: mov    %r8d,0xc(%rsp)
  0x000000010f826ef1: mov    %r9d,0x20(%rsp)
  0x000000010f826ef6: nop
  0x000000010f826ef7: callq  0x000000010f7166a0  ; OopMap{[16]=Oop [24]=Oop [32]=NarrowOop off=828}
                                                ;*if_icmplt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@91 (line 259)
                                                ;   {runtime_call}
  0x000000010f826efc: callq  0x000000010948a904  ;*if_icmplt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@91 (line 259)
                                                ;   {runtime_call}
  0x000000010f826f01: mov    %ebx,%eax
  0x000000010f826f03: jmp    0x000000010f826f0f
  0x000000010f826f05: vmovd  %xmm1,%r8d
  0x000000010f826f0a: vmovd  %xmm0,%r9d
  0x000000010f826f0f: mov    %r10d,%ebp
  0x000000010f826f12: mov    %esi,%edx
  0x000000010f826f14: jmp    0x000000010f826f22
  0x000000010f826f16: mov    %edi,%edx
  0x000000010f826f18: vmovd  %xmm1,%r8d
  0x000000010f826f1d: vmovd  %xmm0,%r9d
  0x000000010f826f22: mov    %eax,%ebx          ;*if_icmpgt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@98 (line 259)

  0x000000010f826f24: mov    $0xffffff65,%esi
  0x000000010f826f29: mov    %edx,(%rsp)
  0x000000010f826f2c: mov    %ebx,0x4(%rsp)
  0x000000010f826f30: mov    %rcx,0x10(%rsp)
  0x000000010f826f35: mov    %r11,0x18(%rsp)
  0x000000010f826f3a: mov    %r8d,0xc(%rsp)
  0x000000010f826f3f: mov    %r9d,0x20(%rsp)
  0x000000010f826f44: data16 xchg %ax,%ax
  0x000000010f826f47: callq  0x000000010f7166a0  ; OopMap{[16]=Oop [24]=Oop [32]=NarrowOop off=908}
                                                ;*if_icmpgt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@98 (line 259)
                                                ;   {runtime_call}
  0x000000010f826f4c: callq  0x000000010948a904  ;*if_icmpgt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@98 (line 259)
                                                ;   {runtime_call}
  0x000000010f826f51: mov    $0xffffffe4,%esi
  0x000000010f826f56: mov    %eax,(%rsp)
  0x000000010f826f59: mov    %rcx,0x8(%rsp)
  0x000000010f826f5e: mov    %r11,0x10(%rsp)
  0x000000010f826f63: mov    %r8d,0x4(%rsp)
  0x000000010f826f68: mov    %ebx,0x18(%rsp)
  0x000000010f826f6c: mov    %r9d,0x20(%rsp)
  0x000000010f826f71: xchg   %ax,%ax
  0x000000010f826f73: callq  0x000000010f7166a0  ; OopMap{[8]=Oop [16]=Oop [32]=NarrowOop off=952}
                                                ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@61 (line 255)
                                                ;   {runtime_call}
  0x000000010f826f78: callq  0x000000010948a904  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@70 (line 256)
                                                ;   {runtime_call}
  0x000000010f826f7d: movsbl %r8b,%ebp          ;*i2b  ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@69 (line 256)

  0x000000010f826f81: mov    $0xffffffe4,%esi
  0x000000010f826f86: mov    %edi,(%rsp)
  0x000000010f826f89: mov    %rcx,0x8(%rsp)
  0x000000010f826f8e: mov    %r11,0x10(%rsp)
  0x000000010f826f93: mov    %r8d,0x4(%rsp)
  0x000000010f826f98: mov    %r9d,0x1c(%rsp)
  0x000000010f826f9d: mov    %ebx,0x20(%rsp)
  0x000000010f826fa1: xchg   %ax,%ax
  0x000000010f826fa3: callq  0x000000010f7166a0  ; OopMap{[8]=Oop [16]=Oop [28]=NarrowOop off=1000}
                                                ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@70 (line 256)
                                                ;   {runtime_call}
  0x000000010f826fa8: callq  0x000000010948a904  ;   {runtime_call}
  0x000000010f826fad: mov    $0xffffff86,%esi
  0x000000010f826fb2: mov    %edi,%ebp
  0x000000010f826fb4: mov    %rcx,(%rsp)
  0x000000010f826fb8: mov    %r11,0x8(%rsp)
  0x000000010f826fbd: mov    %r8d,0x10(%rsp)
  0x000000010f826fc2: mov    %r9d,0x14(%rsp)
  0x000000010f826fc7: callq  0x000000010f7166a0  ; OopMap{[0]=Oop [8]=Oop [20]=NarrowOop off=1036}
                                                ;*aload_1
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@80 (line 258)
                                                ;   {runtime_call}
  0x000000010f826fcc: callq  0x000000010948a904  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)
                                                ;   {runtime_call}
  0x000000010f826fd1: mov    $0xffffff65,%esi
  0x000000010f826fd6: mov    %edx,%ebp
  0x000000010f826fd8: mov    %ebx,0x4(%rsp)
  0x000000010f826fdc: mov    %ebx,0x8(%rsp)
  0x000000010f826fe0: mov    %rcx,0x10(%rsp)
  0x000000010f826fe5: mov    %r8d,0xc(%rsp)
  0x000000010f826fea: mov    %r9d,0x20(%rsp)
  0x000000010f826fef: mov    %r11,0x28(%rsp)
  0x000000010f826ff4: data16 xchg %ax,%ax
  0x000000010f826ff7: callq  0x000000010f7166a0  ; OopMap{[16]=Oop [32]=NarrowOop [40]=Oop off=1084}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)
                                                ;   {runtime_call}
  0x000000010f826ffc: callq  0x000000010948a904  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)
                                                ;   {runtime_call}
  0x000000010f827001: mov    %ebx,%eax
  0x000000010f827003: jmpq   0x000000010f826ed4  ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x000000010f827008: mov    $0xffffff65,%esi
  0x000000010f82700d: mov    %edx,%ebp
  0x000000010f82700f: mov    %ebx,0x4(%rsp)
  0x000000010f827013: mov    %ebx,0x8(%rsp)
  0x000000010f827017: mov    %rcx,0x10(%rsp)
  0x000000010f82701c: mov    %r8d,0xc(%rsp)
  0x000000010f827021: mov    %r9d,0x20(%rsp)
  0x000000010f827026: mov    %r11,0x28(%rsp)
  0x000000010f82702b: callq  0x000000010f7166a0  ; OopMap{[16]=Oop [32]=NarrowOop [40]=Oop off=1136}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)
                                                ;   {runtime_call}
  0x000000010f827030: callq  0x000000010948a904  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)
                                                ;   {runtime_call}
  0x000000010f827035: mov    %ebx,%eax
  0x000000010f827037: jmpq   0x000000010f826f22
  0x000000010f82703c: mov    $0xffffff65,%esi
  0x000000010f827041: mov    %r9,%rbp
  0x000000010f827044: mov    %rdx,(%rsp)
  0x000000010f827048: mov    %r8d,0xc(%rsp)
  0x000000010f82704d: xchg   %ax,%ax
  0x000000010f82704f: callq  0x000000010f7166a0  ; OopMap{rbp=Oop [0]=Oop off=1172}
                                                ;*if_icmple
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@8 (line 241)
                                                ;   {runtime_call}
  0x000000010f827054: callq  0x000000010948a904  ;*if_icmple
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@8 (line 241)
                                                ;   {runtime_call}
  0x000000010f827059: mov    $0xfffffff6,%esi
  0x000000010f82705e: mov    0xc(%rsp),%ebp
  0x000000010f827062: nop
  0x000000010f827063: callq  0x000000010f7166a0  ; OopMap{off=1192}
                                                ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@61 (line 255)
                                                ;   {runtime_call}
  0x000000010f827068: callq  0x000000010948a904  ;*invokespecial enlarge
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@41 (line 246)
                                                ;   {runtime_call}
  0x000000010f82706d: mov    %rax,%rsi
  0x000000010f827070: add    $0x40,%rsp
  0x000000010f827074: pop    %rbp
  0x000000010f827075: jmpq   0x000000010f7d2b60  ;   {runtime_call}
  0x000000010f82707a: mov    $0xfffffff6,%esi
  0x000000010f82707f: callq  0x000000010f7166a0  ; OopMap{off=1220}
                                                ;*invokevirtual length
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 240)
                                                ;   {runtime_call}
  0x000000010f827084: callq  0x000000010948a904  ;*invokevirtual length
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 240)
                                                ;   {runtime_call}
  0x000000010f827089: mov    $0xfffffff6,%esi
  0x000000010f82708e: nop
  0x000000010f82708f: callq  0x000000010f7166a0  ; OopMap{off=1236}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 240)
                                                ;   {runtime_call}
  0x000000010f827094: callq  0x000000010948a904  ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 240)
                                                ;   {runtime_call}
  0x000000010f827099: mov    $0xfffffff6,%esi
  0x000000010f82709e: nop
  0x000000010f82709f: callq  0x000000010f7166a0  ; OopMap{off=1252}
                                                ;*arraylength
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@33 (line 245)
                                                ;   {runtime_call}
  0x000000010f8270a4: callq  0x000000010948a904  ;*arraylength
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@33 (line 245)
                                                ;   {runtime_call}
  0x000000010f8270a9: hlt    
  0x000000010f8270aa: hlt    
  0x000000010f8270ab: hlt    
  0x000000010f8270ac: hlt    
  0x000000010f8270ad: hlt    
  0x000000010f8270ae: hlt    
  0x000000010f8270af: hlt    
  0x000000010f8270b0: hlt    
  0x000000010f8270b1: hlt    
  0x000000010f8270b2: hlt    
  0x000000010f8270b3: hlt    
  0x000000010f8270b4: hlt    
  0x000000010f8270b5: hlt    
  0x000000010f8270b6: hlt    
  0x000000010f8270b7: hlt    
  0x000000010f8270b8: hlt    
  0x000000010f8270b9: hlt    
  0x000000010f8270ba: hlt    
  0x000000010f8270bb: hlt    
  0x000000010f8270bc: hlt    
  0x000000010f8270bd: hlt    
  0x000000010f8270be: hlt    
  0x000000010f8270bf: hlt    
[Stub Code]
  0x000000010f8270c0: movabs $0x0,%rbx          ;   {no_reloc}
  0x000000010f8270ca: jmpq   0x000000010f8270ca  ;   {runtime_call}
[Exception Handler]
  0x000000010f8270cf: jmpq   0x000000010f73fba0  ;   {runtime_call}
[Deopt Handler Code]
  0x000000010f8270d4: callq  0x000000010f8270d9
  0x000000010f8270d9: subq   $0x5,(%rsp)
  0x000000010f8270de: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f8270e3: hlt    
  0x000000010f8270e4: hlt    
  0x000000010f8270e5: hlt    
  0x000000010f8270e6: hlt    
  0x000000010f8270e7: hlt    
Decoding compiled method 0x000000010f824450:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010eabdf98} 'getMethodType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName'
  #           [sp+0xc0]  (sp of caller)
  0x000000010f824700: mov    0x8(%rsi),%r10d
  0x000000010f824704: shl    $0x3,%r10
  0x000000010f824708: cmp    %rax,%r10
  0x000000010f82470b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f824711: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f82471c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f824720: mov    %eax,-0x14000(%rsp)
  0x000000010f824727: push   %rbp
  0x000000010f824728: sub    $0xb0,%rsp
  0x000000010f82472f: mov    %rsi,0x78(%rsp)
  0x000000010f824734: movabs $0x10eda7270,%rdi  ;   {metadata(method data for {method} {0x000000010eabdf98} 'getMethodType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f82473e: mov    0xdc(%rdi),%ebx
  0x000000010f824744: add    $0x8,%ebx
  0x000000010f824747: mov    %ebx,0xdc(%rdi)
  0x000000010f82474d: movabs $0x10eabdf98,%rdi  ;   {metadata({method} {0x000000010eabdf98} 'getMethodType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f824757: and    $0x1ff8,%ebx
  0x000000010f82475d: cmp    $0x0,%ebx
  0x000000010f824760: je     0x000000010f825beb  ;*aload_0
                                                ; - java.lang.invoke.MemberName::getMethodType@0 (line 122)

  0x000000010f824766: mov    0x28(%rsi),%edi
  0x000000010f824769: shl    $0x3,%rdi          ;*getfield type
                                                ; - java.lang.invoke.MemberName::getMethodType@1 (line 122)

  0x000000010f82476d: cmp    $0x0,%rdi
  0x000000010f824771: movabs $0x10eda7270,%rbx  ;   {metadata(method data for {method} {0x000000010eabdf98} 'getMethodType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f82477b: movabs $0x108,%rax
  0x000000010f824785: jne    0x000000010f824795
  0x000000010f82478b: movabs $0x118,%rax
  0x000000010f824795: mov    (%rbx,%rax,1),%rdx
  0x000000010f824799: lea    0x1(%rdx),%rdx
  0x000000010f82479d: mov    %rdx,(%rbx,%rax,1)
  0x000000010f8247a1: jne    0x000000010f8249ea  ;*ifnonnull
                                                ; - java.lang.invoke.MemberName::getMethodType@4 (line 122)

  0x000000010f8247a7: mov    %rsi,%rbx
  0x000000010f8247aa: movabs $0x10eda7270,%rax  ;   {metadata(method data for {method} {0x000000010eabdf98} 'getMethodType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f8247b4: addq   $0x1,0x128(%rax)
  0x000000010f8247bc: movabs $0x10edafb48,%rbx  ;   {metadata(method data for {method} {0x000000010eabfe18} 'expandFromVM' '()V' in 'java/lang/invoke/MemberName')}
  0x000000010f8247c6: mov    0xdc(%rbx),%eax
  0x000000010f8247cc: add    $0x8,%eax
  0x000000010f8247cf: mov    %eax,0xdc(%rbx)
  0x000000010f8247d5: movabs $0x10eabfe18,%rbx  ;   {metadata({method} {0x000000010eabfe18} 'expandFromVM' '()V' in 'java/lang/invoke/MemberName')}
  0x000000010f8247df: and    $0x7ffff8,%eax
  0x000000010f8247e5: cmp    $0x0,%eax
  0x000000010f8247e8: je     0x000000010f825c02
  0x000000010f8247ee: cmp    $0x0,%rdi
  0x000000010f8247f2: movabs $0x10edafb48,%rdi  ;   {metadata(method data for {method} {0x000000010eabfe18} 'expandFromVM' '()V' in 'java/lang/invoke/MemberName')}
  0x000000010f8247fc: movabs $0x108,%rbx
  0x000000010f824806: je     0x000000010f824816
  0x000000010f82480c: movabs $0x118,%rbx
  0x000000010f824816: mov    (%rdi,%rbx,1),%rax
  0x000000010f82481a: lea    0x1(%rax),%rax
  0x000000010f82481e: mov    %rax,(%rdi,%rbx,1)
  0x000000010f824822: jne    0x000000010f8249a9  ;*ifnull
                                                ; - java.lang.invoke.MemberName::expandFromVM@4 (line 500)
                                                ; - java.lang.invoke.MemberName::getMethodType@8 (line 123)

  0x000000010f824828: mov    %rsi,%rdi
  0x000000010f82482b: movabs $0x10edafb48,%rbx  ;   {metadata(method data for {method} {0x000000010eabfe18} 'expandFromVM' '()V' in 'java/lang/invoke/MemberName')}
  0x000000010f824835: mov    0x8(%rdi),%edi
  0x000000010f824838: shl    $0x3,%rdi
  0x000000010f82483c: cmp    0x130(%rbx),%rdi
  0x000000010f824843: jne    0x000000010f824852
  0x000000010f824845: addq   $0x1,0x138(%rbx)
  0x000000010f82484d: jmpq   0x000000010f8248b8
  0x000000010f824852: cmp    0x140(%rbx),%rdi
  0x000000010f824859: jne    0x000000010f824868
  0x000000010f82485b: addq   $0x1,0x148(%rbx)
  0x000000010f824863: jmpq   0x000000010f8248b8
  0x000000010f824868: cmpq   $0x0,0x130(%rbx)
  0x000000010f824873: jne    0x000000010f82488c
  0x000000010f824875: mov    %rdi,0x130(%rbx)
  0x000000010f82487c: movq   $0x1,0x138(%rbx)
  0x000000010f824887: jmpq   0x000000010f8248b8
  0x000000010f82488c: cmpq   $0x0,0x140(%rbx)
  0x000000010f824897: jne    0x000000010f8248b0
  0x000000010f824899: mov    %rdi,0x140(%rbx)
  0x000000010f8248a0: movq   $0x1,0x148(%rbx)
  0x000000010f8248ab: jmpq   0x000000010f8248b8
  0x000000010f8248b0: addq   $0x1,0x128(%rbx)
  0x000000010f8248b8: movabs $0x10edafd10,%rdi  ;   {metadata(method data for {method} {0x000000010eac12c0} 'isResolved' '()Z' in 'java/lang/invoke/MemberName')}
  0x000000010f8248c2: mov    0xdc(%rdi),%ebx
  0x000000010f8248c8: add    $0x8,%ebx
  0x000000010f8248cb: mov    %ebx,0xdc(%rdi)
  0x000000010f8248d1: movabs $0x10eac12c0,%rdi  ;   {metadata({method} {0x000000010eac12c0} 'isResolved' '()Z' in 'java/lang/invoke/MemberName')}
  0x000000010f8248db: and    $0x7ffff8,%ebx
  0x000000010f8248e1: cmp    $0x0,%ebx
  0x000000010f8248e4: je     0x000000010f825c19
  0x000000010f8248ea: mov    0x2c(%rsi),%edi
  0x000000010f8248ed: shl    $0x3,%rdi          ;*getfield resolution
                                                ; - java.lang.invoke.MemberName::isResolved@1 (line 774)
                                                ; - java.lang.invoke.MemberName::expandFromVM@9 (line 503)
                                                ; - java.lang.invoke.MemberName::getMethodType@8 (line 123)

  0x000000010f8248f1: cmp    $0x0,%rdi
  0x000000010f8248f5: movabs $0x10edafd10,%rdi  ;   {metadata(method data for {method} {0x000000010eac12c0} 'isResolved' '()Z' in 'java/lang/invoke/MemberName')}
  0x000000010f8248ff: movabs $0x108,%rbx
  0x000000010f824909: jne    0x000000010f824919
  0x000000010f82490f: movabs $0x118,%rbx
  0x000000010f824919: mov    (%rdi,%rbx,1),%rax
  0x000000010f82491d: lea    0x1(%rax),%rax
  0x000000010f824921: mov    %rax,(%rdi,%rbx,1)
  0x000000010f824925: jne    0x000000010f824945  ;*ifnonnull
                                                ; - java.lang.invoke.MemberName::isResolved@4 (line 774)
                                                ; - java.lang.invoke.MemberName::expandFromVM@9 (line 503)
                                                ; - java.lang.invoke.MemberName::getMethodType@8 (line 123)

  0x000000010f82492b: movabs $0x10edafd10,%rdi  ;   {metadata(method data for {method} {0x000000010eac12c0} 'isResolved' '()Z' in 'java/lang/invoke/MemberName')}
  0x000000010f824935: incl   0x128(%rdi)
  0x000000010f82493b: mov    $0x1,%edi
  0x000000010f824940: jmpq   0x000000010f82494a  ;*goto
                                                ; - java.lang.invoke.MemberName::isResolved@8 (line 774)
                                                ; - java.lang.invoke.MemberName::expandFromVM@9 (line 503)
                                                ; - java.lang.invoke.MemberName::getMethodType@8 (line 123)

  0x000000010f824945: mov    $0x0,%edi          ;*ireturn
                                                ; - java.lang.invoke.MemberName::isResolved@12 (line 774)
                                                ; - java.lang.invoke.MemberName::expandFromVM@9 (line 503)
                                                ; - java.lang.invoke.MemberName::getMethodType@8 (line 123)

  0x000000010f82494a: and    $0x1,%edi
  0x000000010f82494d: cmp    $0x0,%edi
  0x000000010f824950: movabs $0x10edafb48,%rdi  ;   {metadata(method data for {method} {0x000000010eabfe18} 'expandFromVM' '()V' in 'java/lang/invoke/MemberName')}
  0x000000010f82495a: movabs $0x158,%rbx
  0x000000010f824964: jne    0x000000010f824974
  0x000000010f82496a: movabs $0x168,%rbx
  0x000000010f824974: mov    (%rdi,%rbx,1),%rax
  0x000000010f824978: lea    0x1(%rax),%rax
  0x000000010f82497c: mov    %rax,(%rdi,%rbx,1)
  0x000000010f824980: je     0x000000010f8249a9  ;*ifne
                                                ; - java.lang.invoke.MemberName::expandFromVM@12 (line 503)
                                                ; - java.lang.invoke.MemberName::getMethodType@8 (line 123)

  0x000000010f824986: movabs $0x10edafb48,%rdi  ;   {metadata(method data for {method} {0x000000010eabfe18} 'expandFromVM' '()V' in 'java/lang/invoke/MemberName')}
  0x000000010f824990: addq   $0x1,0x178(%rdi)
  0x000000010f824998: mov    %rsi,%rdi
  0x000000010f82499b: mov    %rdi,%rsi          ;*invokestatic expand
                                                ; - java.lang.invoke.MemberName::expandFromVM@17 (line 506)
                                                ; - java.lang.invoke.MemberName::getMethodType@8 (line 123)

  0x000000010f82499e: nop
  0x000000010f82499f: callq  0x000000010f717520  ; OopMap{[120]=Oop off=676}
                                                ;*invokestatic expand
                                                ; - java.lang.invoke.MemberName::expandFromVM@17 (line 506)
                                                ; - java.lang.invoke.MemberName::getMethodType@8 (line 123)
                                                ;   {static_call}
  0x000000010f8249a4: mov    0x78(%rsp),%rsi
  0x000000010f8249a9: mov    0x28(%rsi),%eax
  0x000000010f8249ac: shl    $0x3,%rax          ;*getfield type
                                                ; - java.lang.invoke.MemberName::getMethodType@12 (line 124)

  0x000000010f8249b0: cmp    $0x0,%rax
  0x000000010f8249b4: movabs $0x10eda7270,%rax  ;   {metadata(method data for {method} {0x000000010eabdf98} 'getMethodType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f8249be: movabs $0x138,%rdi
  0x000000010f8249c8: jne    0x000000010f8249d8
  0x000000010f8249ce: movabs $0x148,%rdi
  0x000000010f8249d8: mov    (%rax,%rdi,1),%rbx
  0x000000010f8249dc: lea    0x1(%rbx),%rbx
  0x000000010f8249e0: mov    %rbx,(%rax,%rdi,1)
  0x000000010f8249e4: je     0x000000010f825ab3  ;*ifnonnull
                                                ; - java.lang.invoke.MemberName::getMethodType@15 (line 124)

  0x000000010f8249ea: mov    %rsi,%rax
  0x000000010f8249ed: movabs $0x10eda7270,%rdi  ;   {metadata(method data for {method} {0x000000010eabdf98} 'getMethodType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f8249f7: mov    0x8(%rax),%eax
  0x000000010f8249fa: shl    $0x3,%rax
  0x000000010f8249fe: cmp    0x160(%rdi),%rax
  0x000000010f824a05: jne    0x000000010f824a14
  0x000000010f824a07: addq   $0x1,0x168(%rdi)
  0x000000010f824a0f: jmpq   0x000000010f824a7a
  0x000000010f824a14: cmp    0x170(%rdi),%rax
  0x000000010f824a1b: jne    0x000000010f824a2a
  0x000000010f824a1d: addq   $0x1,0x178(%rdi)
  0x000000010f824a25: jmpq   0x000000010f824a7a
  0x000000010f824a2a: cmpq   $0x0,0x160(%rdi)
  0x000000010f824a35: jne    0x000000010f824a4e
  0x000000010f824a37: mov    %rax,0x160(%rdi)
  0x000000010f824a3e: movq   $0x1,0x168(%rdi)
  0x000000010f824a49: jmpq   0x000000010f824a7a
  0x000000010f824a4e: cmpq   $0x0,0x170(%rdi)
  0x000000010f824a59: jne    0x000000010f824a72
  0x000000010f824a5b: mov    %rax,0x170(%rdi)
  0x000000010f824a62: movq   $0x1,0x178(%rdi)
  0x000000010f824a6d: jmpq   0x000000010f824a7a
  0x000000010f824a72: addq   $0x1,0x158(%rdi)
  0x000000010f824a7a: movabs $0x10ed9b4e8,%rax  ;   {metadata(method data for {method} {0x000000010eabf7c0} 'isInvocable' '()Z' in 'java/lang/invoke/MemberName')}
  0x000000010f824a84: mov    0xdc(%rax),%edi
  0x000000010f824a8a: add    $0x8,%edi
  0x000000010f824a8d: mov    %edi,0xdc(%rax)
  0x000000010f824a93: movabs $0x10eabf7c0,%rax  ;   {metadata({method} {0x000000010eabf7c0} 'isInvocable' '()Z' in 'java/lang/invoke/MemberName')}
  0x000000010f824a9d: and    $0x7ffff8,%edi
  0x000000010f824aa3: cmp    $0x0,%edi
  0x000000010f824aa6: je     0x000000010f825c30
  0x000000010f824aac: mov    %rsi,%rax
  0x000000010f824aaf: movabs $0x10ed9b4e8,%rdi  ;   {metadata(method data for {method} {0x000000010eabf7c0} 'isInvocable' '()Z' in 'java/lang/invoke/MemberName')}
  0x000000010f824ab9: addq   $0x1,0x108(%rdi)
  0x000000010f824ac1: movabs $0x10ed9a510,%rax  ;   {metadata(method data for {method} {0x000000010eabee50} 'testAnyFlags' '(I)Z' in 'java/lang/invoke/MemberName')}
  0x000000010f824acb: mov    0xdc(%rax),%edi
  0x000000010f824ad1: add    $0x8,%edi
  0x000000010f824ad4: mov    %edi,0xdc(%rax)
  0x000000010f824ada: movabs $0x10eabee50,%rax  ;   {metadata({method} {0x000000010eabee50} 'testAnyFlags' '(I)Z' in 'java/lang/invoke/MemberName')}
  0x000000010f824ae4: and    $0x7ffff8,%edi
  0x000000010f824aea: cmp    $0x0,%edi
  0x000000010f824aed: je     0x000000010f825c47
  0x000000010f824af3: mov    %rsi,%rax
  0x000000010f824af6: movabs $0x10ed9a510,%rdi  ;   {metadata(method data for {method} {0x000000010eabee50} 'testAnyFlags' '(I)Z' in 'java/lang/invoke/MemberName')}
  0x000000010f824b00: addq   $0x1,0x108(%rdi)
  0x000000010f824b08: movabs $0x10ed91b60,%rax  ;   {metadata(method data for {method} {0x000000010eabed18} 'testFlags' '(II)Z' in 'java/lang/invoke/MemberName')}
  0x000000010f824b12: mov    0xdc(%rax),%edi
  0x000000010f824b18: add    $0x8,%edi
  0x000000010f824b1b: mov    %edi,0xdc(%rax)
  0x000000010f824b21: movabs $0x10eabed18,%rax  ;   {metadata({method} {0x000000010eabed18} 'testFlags' '(II)Z' in 'java/lang/invoke/MemberName')}
  0x000000010f824b2b: and    $0x7ffff8,%edi
  0x000000010f824b31: cmp    $0x0,%edi
  0x000000010f824b34: je     0x000000010f825c5e
  0x000000010f824b3a: mov    0xc(%rsi),%eax     ;*getfield flags
                                                ; - java.lang.invoke.MemberName::testFlags@1 (line 334)
                                                ; - java.lang.invoke.MemberName::testAnyFlags@3 (line 340)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 443)
                                                ; - java.lang.invoke.MemberName::getMethodType@21 (line 128)

  0x000000010f824b3d: and    $0x30000,%eax
  0x000000010f824b43: cmp    $0x0,%eax
  0x000000010f824b46: movabs $0x10ed91b60,%rax  ;   {metadata(method data for {method} {0x000000010eabed18} 'testFlags' '(II)Z' in 'java/lang/invoke/MemberName')}
  0x000000010f824b50: movabs $0x108,%rdi
  0x000000010f824b5a: jne    0x000000010f824b6a
  0x000000010f824b60: movabs $0x118,%rdi
  0x000000010f824b6a: mov    (%rax,%rdi,1),%rbx
  0x000000010f824b6e: lea    0x1(%rbx),%rbx
  0x000000010f824b72: mov    %rbx,(%rax,%rdi,1)
  0x000000010f824b76: jne    0x000000010f824b96  ;*if_icmpne
                                                ; - java.lang.invoke.MemberName::testFlags@7 (line 334)
                                                ; - java.lang.invoke.MemberName::testAnyFlags@3 (line 340)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 443)
                                                ; - java.lang.invoke.MemberName::getMethodType@21 (line 128)

  0x000000010f824b7c: movabs $0x10ed91b60,%rax  ;   {metadata(method data for {method} {0x000000010eabed18} 'testFlags' '(II)Z' in 'java/lang/invoke/MemberName')}
  0x000000010f824b86: incl   0x128(%rax)
  0x000000010f824b8c: mov    $0x1,%eax
  0x000000010f824b91: jmpq   0x000000010f824b9b  ;*goto
                                                ; - java.lang.invoke.MemberName::testFlags@11 (line 334)
                                                ; - java.lang.invoke.MemberName::testAnyFlags@3 (line 340)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 443)
                                                ; - java.lang.invoke.MemberName::getMethodType@21 (line 128)

  0x000000010f824b96: mov    $0x0,%eax          ;*ireturn
                                                ; - java.lang.invoke.MemberName::testFlags@15 (line 334)
                                                ; - java.lang.invoke.MemberName::testAnyFlags@3 (line 340)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 443)
                                                ; - java.lang.invoke.MemberName::getMethodType@21 (line 128)

  0x000000010f824b9b: and    $0x1,%eax
  0x000000010f824b9e: cmp    $0x0,%eax
  0x000000010f824ba1: movabs $0x10ed9a510,%rax  ;   {metadata(method data for {method} {0x000000010eabee50} 'testAnyFlags' '(I)Z' in 'java/lang/invoke/MemberName')}
  0x000000010f824bab: movabs $0x118,%rdi
  0x000000010f824bb5: jne    0x000000010f824bc5
  0x000000010f824bbb: movabs $0x128,%rdi
  0x000000010f824bc5: mov    (%rax,%rdi,1),%rbx
  0x000000010f824bc9: lea    0x1(%rbx),%rbx
  0x000000010f824bcd: mov    %rbx,(%rax,%rdi,1)
  0x000000010f824bd1: jne    0x000000010f824bf1  ;*ifne
                                                ; - java.lang.invoke.MemberName::testAnyFlags@6 (line 340)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 443)
                                                ; - java.lang.invoke.MemberName::getMethodType@21 (line 128)

  0x000000010f824bd7: movabs $0x10ed9a510,%rax  ;   {metadata(method data for {method} {0x000000010eabee50} 'testAnyFlags' '(I)Z' in 'java/lang/invoke/MemberName')}
  0x000000010f824be1: incl   0x138(%rax)
  0x000000010f824be7: mov    $0x1,%eax
  0x000000010f824bec: jmpq   0x000000010f824bf6  ;*goto
                                                ; - java.lang.invoke.MemberName::testAnyFlags@10 (line 340)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 443)
                                                ; - java.lang.invoke.MemberName::getMethodType@21 (line 128)

  0x000000010f824bf1: mov    $0x0,%eax          ;*ireturn
                                                ; - java.lang.invoke.MemberName::testAnyFlags@14 (line 340)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 443)
                                                ; - java.lang.invoke.MemberName::getMethodType@21 (line 128)

  0x000000010f824bf6: and    $0x1,%eax
  0x000000010f824bf9: and    $0x1,%eax
  0x000000010f824bfc: cmp    $0x0,%eax
  0x000000010f824bff: movabs $0x10eda7270,%rax  ;   {metadata(method data for {method} {0x000000010eabdf98} 'getMethodType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f824c09: movabs $0x188,%rdi
  0x000000010f824c13: jne    0x000000010f824c23
  0x000000010f824c19: movabs $0x198,%rdi
  0x000000010f824c23: mov    (%rax,%rdi,1),%rbx
  0x000000010f824c27: lea    0x1(%rbx),%rbx
  0x000000010f824c2b: mov    %rbx,(%rax,%rdi,1)
  0x000000010f824c2f: je     0x000000010f825acc  ;*ifne
                                                ; - java.lang.invoke.MemberName::getMethodType@24 (line 128)

  0x000000010f824c35: mov    0x28(%rsi),%edi
  0x000000010f824c38: shl    $0x3,%rdi          ;*getfield type
                                                ; - java.lang.invoke.MemberName::getMethodType@34 (line 134)

  0x000000010f824c3c: cmp    $0x0,%rdi
  0x000000010f824c40: jne    0x000000010f824c5b
  0x000000010f824c42: movabs $0x10eda7270,%rdx  ;   {metadata(method data for {method} {0x000000010eabdf98} 'getMethodType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f824c4c: orl    $0x100,0x1b0(%rdx)
  0x000000010f824c56: jmpq   0x000000010f824d1b
  0x000000010f824c5b: movabs $0x7c000c460,%rcx  ;   {metadata('java/lang/invoke/MethodType')}
  0x000000010f824c65: mov    0x8(%rdi),%ebx
  0x000000010f824c68: shl    $0x3,%rbx
  0x000000010f824c6c: cmp    %rbx,%rcx
  0x000000010f824c6f: jne    0x000000010f824cff
  0x000000010f824c75: movabs $0x10eda7270,%rdx  ;   {metadata(method data for {method} {0x000000010eabdf98} 'getMethodType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f824c7f: mov    0x8(%rdi),%ecx
  0x000000010f824c82: shl    $0x3,%rcx
  0x000000010f824c86: cmp    0x1c0(%rdx),%rcx
  0x000000010f824c8d: jne    0x000000010f824c9c
  0x000000010f824c8f: addq   $0x1,0x1c8(%rdx)
  0x000000010f824c97: jmpq   0x000000010f824d20
  0x000000010f824c9c: cmp    0x1d0(%rdx),%rcx
  0x000000010f824ca3: jne    0x000000010f824cb2
  0x000000010f824ca5: addq   $0x1,0x1d8(%rdx)
  0x000000010f824cad: jmpq   0x000000010f824d20
  0x000000010f824cb2: cmpq   $0x0,0x1c0(%rdx)
  0x000000010f824cbd: jne    0x000000010f824cd6
  0x000000010f824cbf: mov    %rcx,0x1c0(%rdx)
  0x000000010f824cc6: movq   $0x1,0x1c8(%rdx)
  0x000000010f824cd1: jmpq   0x000000010f824d20
  0x000000010f824cd6: cmpq   $0x0,0x1d0(%rdx)
  0x000000010f824ce1: jne    0x000000010f824cfa
  0x000000010f824ce3: mov    %rcx,0x1d0(%rdx)
  0x000000010f824cea: movq   $0x1,0x1d8(%rdx)
  0x000000010f824cf5: jmpq   0x000000010f824d20
  0x000000010f824cfa: jmpq   0x000000010f824d20
  0x000000010f824cff: movabs $0x10eda7270,%rdx  ;   {metadata(method data for {method} {0x000000010eabdf98} 'getMethodType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f824d09: subq   $0x1,0x1b8(%rdx)
  0x000000010f824d11: jmpq   0x000000010f824d1b
  0x000000010f824d16: jmpq   0x000000010f824d20
  0x000000010f824d1b: xor    %rax,%rax
  0x000000010f824d1e: jmp    0x000000010f824d2a
  0x000000010f824d20: movabs $0x1,%rax          ;*instanceof
                                                ; - java.lang.invoke.MemberName::getMethodType@39 (line 135)

  0x000000010f824d2a: cmp    $0x0,%eax
  0x000000010f824d2d: movabs $0x10eda7270,%rax  ;   {metadata(method data for {method} {0x000000010eabdf98} 'getMethodType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f824d37: movabs $0x1e8,%rbx
  0x000000010f824d41: je     0x000000010f824d51
  0x000000010f824d47: movabs $0x1f8,%rbx
  0x000000010f824d51: mov    (%rax,%rbx,1),%rdx
  0x000000010f824d55: lea    0x1(%rdx),%rdx
  0x000000010f824d59: mov    %rdx,(%rax,%rbx,1)
  0x000000010f824d5d: jne    0x000000010f8259c2  ;*ifeq
                                                ; - java.lang.invoke.MemberName::getMethodType@42 (line 135)

  0x000000010f824d63: lea    0x98(%rsp),%rdi
  0x000000010f824d6b: mov    %rsi,0x8(%rdi)
  0x000000010f824d6f: mov    (%rsi),%rax
  0x000000010f824d72: mov    %rax,%rbx
  0x000000010f824d75: and    $0x7,%rbx
  0x000000010f824d79: cmp    $0x5,%rbx
  0x000000010f824d7d: jne    0x000000010f824e04
  0x000000010f824d83: mov    0x8(%rsi),%ebx
  0x000000010f824d86: shl    $0x3,%rbx
  0x000000010f824d8a: mov    0xa8(%rbx),%rbx
  0x000000010f824d91: or     %r15,%rbx
  0x000000010f824d94: xor    %rax,%rbx
  0x000000010f824d97: and    $0xffffffffffffff87,%rbx
  0x000000010f824d9b: je     0x000000010f824e2c
  0x000000010f824da1: test   $0x7,%rbx
  0x000000010f824da8: jne    0x000000010f824df1
  0x000000010f824daa: test   $0x300,%rbx
  0x000000010f824db1: jne    0x000000010f824dd0
  0x000000010f824db3: and    $0x37f,%rax
  0x000000010f824dba: mov    %rax,%rbx
  0x000000010f824dbd: or     %r15,%rbx
  0x000000010f824dc0: lock cmpxchg %rbx,(%rsi)
  0x000000010f824dc5: jne    0x000000010f825c75
  0x000000010f824dcb: jmpq   0x000000010f824e2c
  0x000000010f824dd0: mov    0x8(%rsi),%ebx
  0x000000010f824dd3: shl    $0x3,%rbx
  0x000000010f824dd7: mov    0xa8(%rbx),%rbx
  0x000000010f824dde: or     %r15,%rbx
  0x000000010f824de1: lock cmpxchg %rbx,(%rsi)
  0x000000010f824de6: jne    0x000000010f825c75
  0x000000010f824dec: jmpq   0x000000010f824e2c
  0x000000010f824df1: mov    0x8(%rsi),%ebx
  0x000000010f824df4: shl    $0x3,%rbx
  0x000000010f824df8: mov    0xa8(%rbx),%rbx
  0x000000010f824dff: lock cmpxchg %rbx,(%rsi)
  0x000000010f824e04: mov    (%rsi),%rax
  0x000000010f824e07: or     $0x1,%rax
  0x000000010f824e0b: mov    %rax,(%rdi)
  0x000000010f824e0e: lock cmpxchg %rdi,(%rsi)
  0x000000010f824e13: je     0x000000010f824e2c
  0x000000010f824e19: sub    %rsp,%rax
  0x000000010f824e1c: and    $0xfffffffffffff007,%rax
  0x000000010f824e23: mov    %rax,(%rdi)
  0x000000010f824e26: jne    0x000000010f825c75  ;*monitorenter
                                                ; - java.lang.invoke.MemberName::getMethodType@53 (line 141)

  0x000000010f824e2c: mov    0x28(%rsi),%edi
  0x000000010f824e2f: shl    $0x3,%rdi          ;*getfield type
                                                ; - java.lang.invoke.MemberName::getMethodType@55 (line 142)

  0x000000010f824e33: cmp    $0x0,%rdi
  0x000000010f824e37: jne    0x000000010f824e52
  0x000000010f824e39: movabs $0x10eda7270,%rdx  ;   {metadata(method data for {method} {0x000000010eabdf98} 'getMethodType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f824e43: orl    $0x100,0x230(%rdx)
  0x000000010f824e4d: jmpq   0x000000010f824f12
  0x000000010f824e52: movabs $0x7c00016d0,%rcx  ;   {metadata('java/lang/String')}
  0x000000010f824e5c: mov    0x8(%rdi),%eax
  0x000000010f824e5f: shl    $0x3,%rax
  0x000000010f824e63: cmp    %rax,%rcx
  0x000000010f824e66: jne    0x000000010f824ef6
  0x000000010f824e6c: movabs $0x10eda7270,%rdx  ;   {metadata(method data for {method} {0x000000010eabdf98} 'getMethodType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f824e76: mov    0x8(%rdi),%ecx
  0x000000010f824e79: shl    $0x3,%rcx
  0x000000010f824e7d: cmp    0x240(%rdx),%rcx
  0x000000010f824e84: jne    0x000000010f824e93
  0x000000010f824e86: addq   $0x1,0x248(%rdx)
  0x000000010f824e8e: jmpq   0x000000010f824f17
  0x000000010f824e93: cmp    0x250(%rdx),%rcx
  0x000000010f824e9a: jne    0x000000010f824ea9
  0x000000010f824e9c: addq   $0x1,0x258(%rdx)
  0x000000010f824ea4: jmpq   0x000000010f824f17
  0x000000010f824ea9: cmpq   $0x0,0x240(%rdx)
  0x000000010f824eb4: jne    0x000000010f824ecd
  0x000000010f824eb6: mov    %rcx,0x240(%rdx)
  0x000000010f824ebd: movq   $0x1,0x248(%rdx)
  0x000000010f824ec8: jmpq   0x000000010f824f17
  0x000000010f824ecd: cmpq   $0x0,0x250(%rdx)
  0x000000010f824ed8: jne    0x000000010f824ef1
  0x000000010f824eda: mov    %rcx,0x250(%rdx)
  0x000000010f824ee1: movq   $0x1,0x258(%rdx)
  0x000000010f824eec: jmpq   0x000000010f824f17
  0x000000010f824ef1: jmpq   0x000000010f824f17
  0x000000010f824ef6: movabs $0x10eda7270,%rdx  ;   {metadata(method data for {method} {0x000000010eabdf98} 'getMethodType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f824f00: subq   $0x1,0x238(%rdx)
  0x000000010f824f08: jmpq   0x000000010f824f12
  0x000000010f824f0d: jmpq   0x000000010f824f17
  0x000000010f824f12: xor    %rbx,%rbx
  0x000000010f824f15: jmp    0x000000010f824f21
  0x000000010f824f17: movabs $0x1,%rbx          ;*instanceof
                                                ; - java.lang.invoke.MemberName::getMethodType@58 (line 142)

  0x000000010f824f21: cmp    $0x0,%ebx
  0x000000010f824f24: movabs $0x10eda7270,%rbx  ;   {metadata(method data for {method} {0x000000010eabdf98} 'getMethodType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f824f2e: movabs $0x268,%rax
  0x000000010f824f38: je     0x000000010f824f48
  0x000000010f824f3e: movabs $0x278,%rax
  0x000000010f824f48: mov    (%rbx,%rax,1),%rdx
  0x000000010f824f4c: lea    0x1(%rdx),%rdx
  0x000000010f824f50: mov    %rdx,(%rbx,%rax,1)
  0x000000010f824f54: je     0x000000010f825406  ;*ifeq
                                                ; - java.lang.invoke.MemberName::getMethodType@61 (line 142)

  0x000000010f824f5a: cmp    $0x0,%rdi
  0x000000010f824f5e: jne    0x000000010f824f79
  0x000000010f824f60: movabs $0x10eda7270,%rax  ;   {metadata(method data for {method} {0x000000010eabdf98} 'getMethodType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f824f6a: orl    $0x100,0x280(%rax)
  0x000000010f824f74: jmpq   0x000000010f825039
  0x000000010f824f79: movabs $0x7c00016d0,%rdx  ;   {metadata('java/lang/String')}
  0x000000010f824f83: mov    0x8(%rdi),%ebx
  0x000000010f824f86: shl    $0x3,%rbx
  0x000000010f824f8a: cmp    %rbx,%rdx
  0x000000010f824f8d: jne    0x000000010f82501d
  0x000000010f824f93: movabs $0x10eda7270,%rax  ;   {metadata(method data for {method} {0x000000010eabdf98} 'getMethodType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f824f9d: mov    0x8(%rdi),%edx
  0x000000010f824fa0: shl    $0x3,%rdx
  0x000000010f824fa4: cmp    0x290(%rax),%rdx
  0x000000010f824fab: jne    0x000000010f824fba
  0x000000010f824fad: addq   $0x1,0x298(%rax)
  0x000000010f824fb5: jmpq   0x000000010f825039
  0x000000010f824fba: cmp    0x2a0(%rax),%rdx
  0x000000010f824fc1: jne    0x000000010f824fd0
  0x000000010f824fc3: addq   $0x1,0x2a8(%rax)
  0x000000010f824fcb: jmpq   0x000000010f825039
  0x000000010f824fd0: cmpq   $0x0,0x290(%rax)
  0x000000010f824fdb: jne    0x000000010f824ff4
  0x000000010f824fdd: mov    %rdx,0x290(%rax)
  0x000000010f824fe4: movq   $0x1,0x298(%rax)
  0x000000010f824fef: jmpq   0x000000010f825039
  0x000000010f824ff4: cmpq   $0x0,0x2a0(%rax)
  0x000000010f824fff: jne    0x000000010f825018
  0x000000010f825001: mov    %rdx,0x2a0(%rax)
  0x000000010f825008: movq   $0x1,0x2a8(%rax)
  0x000000010f825013: jmpq   0x000000010f825039
  0x000000010f825018: jmpq   0x000000010f825039
  0x000000010f82501d: movabs $0x10eda7270,%rax  ;   {metadata(method data for {method} {0x000000010eabdf98} 'getMethodType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f825027: subq   $0x1,0x288(%rax)
  0x000000010f82502f: jmpq   0x000000010f825c88
  0x000000010f825034: jmpq   0x000000010f825039  ;*checkcast
                                                ; - java.lang.invoke.MemberName::getMethodType@68 (line 143)

  0x000000010f825039: mov    %rsi,%rbx
  0x000000010f82503c: movabs $0x10eda7270,%rax  ;   {metadata(method data for {method} {0x000000010eabdf98} 'getMethodType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f825046: mov    0x8(%rbx),%ebx
  0x000000010f825049: shl    $0x3,%rbx
  0x000000010f82504d: cmp    0x2c0(%rax),%rbx
  0x000000010f825054: jne    0x000000010f825063
  0x000000010f825056: addq   $0x1,0x2c8(%rax)
  0x000000010f82505e: jmpq   0x000000010f8250c9
  0x000000010f825063: cmp    0x2d0(%rax),%rbx
  0x000000010f82506a: jne    0x000000010f825079
  0x000000010f82506c: addq   $0x1,0x2d8(%rax)
  0x000000010f825074: jmpq   0x000000010f8250c9
  0x000000010f825079: cmpq   $0x0,0x2c0(%rax)
  0x000000010f825084: jne    0x000000010f82509d
  0x000000010f825086: mov    %rbx,0x2c0(%rax)
  0x000000010f82508d: movq   $0x1,0x2c8(%rax)
  0x000000010f825098: jmpq   0x000000010f8250c9
  0x000000010f82509d: cmpq   $0x0,0x2d0(%rax)
  0x000000010f8250a8: jne    0x000000010f8250c1
  0x000000010f8250aa: mov    %rbx,0x2d0(%rax)
  0x000000010f8250b1: movq   $0x1,0x2d8(%rax)
  0x000000010f8250bc: jmpq   0x000000010f8250c9
  0x000000010f8250c1: addq   $0x1,0x2b8(%rax)
  0x000000010f8250c9: movabs $0x10edaffa0,%rbx  ;   {metadata(method data for {method} {0x000000010eabdc80} 'getClassLoader' '()Ljava/lang/ClassLoader;' in 'java/lang/invoke/MemberName')}
  0x000000010f8250d3: mov    0xdc(%rbx),%eax
  0x000000010f8250d9: add    $0x8,%eax
  0x000000010f8250dc: mov    %eax,0xdc(%rbx)
  0x000000010f8250e2: movabs $0x10eabdc80,%rbx  ;   {metadata({method} {0x000000010eabdc80} 'getClassLoader' '()Ljava/lang/ClassLoader;' in 'java/lang/invoke/MemberName')}
  0x000000010f8250ec: and    $0x7ffff8,%eax
  0x000000010f8250f2: cmp    $0x0,%eax
  0x000000010f8250f5: je     0x000000010f825c91
  0x000000010f8250fb: mov    0x20(%rsi),%ebx
  0x000000010f8250fe: shl    $0x3,%rbx          ;*getfield clazz
                                                ; - java.lang.invoke.MemberName::getClassLoader@1 (line 90)
                                                ; - java.lang.invoke.MemberName::getMethodType@74 (line 144)

  0x000000010f825102: cmp    (%rbx),%rax        ;*invokevirtual getClassLoader
                                                ; - java.lang.invoke.MemberName::getClassLoader@4 (line 90)
                                                ; - java.lang.invoke.MemberName::getMethodType@74 (line 144)
                                                ; implicit exception: dispatches to 0x000000010f825ca8
  0x000000010f825105: mov    %rbx,%rax
  0x000000010f825108: movabs $0x10edaffa0,%rdx  ;   {metadata(method data for {method} {0x000000010eabdc80} 'getClassLoader' '()Ljava/lang/ClassLoader;' in 'java/lang/invoke/MemberName')}
  0x000000010f825112: mov    0x8(%rax),%eax
  0x000000010f825115: shl    $0x3,%rax
  0x000000010f825119: cmp    0x110(%rdx),%rax
  0x000000010f825120: jne    0x000000010f82512f
  0x000000010f825122: addq   $0x1,0x118(%rdx)
  0x000000010f82512a: jmpq   0x000000010f825195
  0x000000010f82512f: cmp    0x120(%rdx),%rax
  0x000000010f825136: jne    0x000000010f825145
  0x000000010f825138: addq   $0x1,0x128(%rdx)
  0x000000010f825140: jmpq   0x000000010f825195
  0x000000010f825145: cmpq   $0x0,0x110(%rdx)
  0x000000010f825150: jne    0x000000010f825169
  0x000000010f825152: mov    %rax,0x110(%rdx)
  0x000000010f825159: movq   $0x1,0x118(%rdx)
  0x000000010f825164: jmpq   0x000000010f825195
  0x000000010f825169: cmpq   $0x0,0x120(%rdx)
  0x000000010f825174: jne    0x000000010f82518d
  0x000000010f825176: mov    %rax,0x120(%rdx)
  0x000000010f82517d: movq   $0x1,0x128(%rdx)
  0x000000010f825188: jmpq   0x000000010f825195
  0x000000010f82518d: addq   $0x1,0x108(%rdx)
  0x000000010f825195: movabs $0x10ed9a680,%rax  ;   {metadata(method data for {method} {0x000000010ea719c0} 'getClassLoader' '()Ljava/lang/ClassLoader;' in 'java/lang/Class')}
  0x000000010f82519f: mov    0xdc(%rax),%edx
  0x000000010f8251a5: add    $0x8,%edx
  0x000000010f8251a8: mov    %edx,0xdc(%rax)
  0x000000010f8251ae: movabs $0x10ea719c0,%rax  ;   {metadata({method} {0x000000010ea719c0} 'getClassLoader' '()Ljava/lang/ClassLoader;' in 'java/lang/Class')}
  0x000000010f8251b8: and    $0x7ffff8,%edx
  0x000000010f8251be: cmp    $0x0,%edx
  0x000000010f8251c1: je     0x000000010f825cad
  0x000000010f8251c7: mov    %rbx,%rax
  0x000000010f8251ca: movabs $0x10ed9a680,%rdx  ;   {metadata(method data for {method} {0x000000010ea719c0} 'getClassLoader' '()Ljava/lang/ClassLoader;' in 'java/lang/Class')}
  0x000000010f8251d4: mov    0x8(%rax),%eax
  0x000000010f8251d7: shl    $0x3,%rax
  0x000000010f8251db: cmp    0x110(%rdx),%rax
  0x000000010f8251e2: jne    0x000000010f8251f1
  0x000000010f8251e4: addq   $0x1,0x118(%rdx)
  0x000000010f8251ec: jmpq   0x000000010f825257
  0x000000010f8251f1: cmp    0x120(%rdx),%rax
  0x000000010f8251f8: jne    0x000000010f825207
  0x000000010f8251fa: addq   $0x1,0x128(%rdx)
  0x000000010f825202: jmpq   0x000000010f825257
  0x000000010f825207: cmpq   $0x0,0x110(%rdx)
  0x000000010f825212: jne    0x000000010f82522b
  0x000000010f825214: mov    %rax,0x110(%rdx)
  0x000000010f82521b: movq   $0x1,0x118(%rdx)
  0x000000010f825226: jmpq   0x000000010f825257
  0x000000010f82522b: cmpq   $0x0,0x120(%rdx)
  0x000000010f825236: jne    0x000000010f82524f
  0x000000010f825238: mov    %rax,0x120(%rdx)
  0x000000010f82523f: movq   $0x1,0x128(%rdx)
  0x000000010f82524a: jmpq   0x000000010f825257
  0x000000010f82524f: addq   $0x1,0x108(%rdx)
  0x000000010f825257: mov    0x18(%rbx),%ebx
  0x000000010f82525a: shl    $0x3,%rbx          ;*getfield classLoader
                                                ; - java.lang.Class::getClassLoader0@1 (line 689)
                                                ; - java.lang.Class::getClassLoader@1 (line 678)
                                                ; - java.lang.invoke.MemberName::getClassLoader@4 (line 90)
                                                ; - java.lang.invoke.MemberName::getMethodType@74 (line 144)

  0x000000010f82525e: cmp    $0x0,%rbx
  0x000000010f825262: movabs $0x10ed9a680,%rax  ;   {metadata(method data for {method} {0x000000010ea719c0} 'getClassLoader' '()Ljava/lang/ClassLoader;' in 'java/lang/Class')}
  0x000000010f82526c: movabs $0x138,%rdx
  0x000000010f825276: jne    0x000000010f825286
  0x000000010f82527c: movabs $0x148,%rdx
  0x000000010f825286: mov    (%rax,%rdx,1),%rcx
  0x000000010f82528a: lea    0x1(%rcx),%rcx
  0x000000010f82528e: mov    %rcx,(%rax,%rdx,1)
  0x000000010f825292: jne    0x000000010f8252af  ;*ifnonnull
                                                ; - java.lang.Class::getClassLoader@6 (line 679)
                                                ; - java.lang.invoke.MemberName::getClassLoader@4 (line 90)
                                                ; - java.lang.invoke.MemberName::getMethodType@74 (line 144)

  0x000000010f825298: movabs $0x0,%rbx          ;   {oop(NULL)}
  0x000000010f8252a2: mov    %rdi,0x88(%rsp)
  0x000000010f8252aa: jmpq   0x000000010f8253a4  ;*areturn
                                                ; - java.lang.invoke.MemberName::getClassLoader@7 (line 90)
                                                ; - java.lang.invoke.MemberName::getMethodType@74 (line 144)

  0x000000010f8252af: movabs $0x10ed9a680,%rax  ;   {metadata(method data for {method} {0x000000010ea719c0} 'getClassLoader' '()Ljava/lang/ClassLoader;' in 'java/lang/Class')}
  0x000000010f8252b9: addq   $0x1,0x158(%rax)
  0x000000010f8252c1: movabs $0x10ec81848,%rax  ;   {metadata(method data for {method} {0x000000010ea7e778} 'getSecurityManager' '()Ljava/lang/SecurityManager;' in 'java/lang/System')}
  0x000000010f8252cb: mov    0xdc(%rax),%edx
  0x000000010f8252d1: add    $0x8,%edx
  0x000000010f8252d4: mov    %edx,0xdc(%rax)
  0x000000010f8252da: movabs $0x10ea7e778,%rax  ;   {metadata({method} {0x000000010ea7e778} 'getSecurityManager' '()Ljava/lang/SecurityManager;' in 'java/lang/System')}
  0x000000010f8252e4: and    $0x7ffff8,%edx
  0x000000010f8252ea: cmp    $0x0,%edx
  0x000000010f8252ed: je     0x000000010f825cc4
  0x000000010f8252f3: movabs $0x795580c78,%rax  ;   {oop(a 'java/lang/Class' = 'java/lang/System')}
  0x000000010f8252fd: mov    0x74(%rax),%eax
  0x000000010f825300: shl    $0x3,%rax          ;*getstatic security
                                                ; - java.lang.System::getSecurityManager@0 (line 334)
                                                ; - java.lang.Class::getClassLoader@11 (line 681)
                                                ; - java.lang.invoke.MemberName::getClassLoader@4 (line 90)
                                                ; - java.lang.invoke.MemberName::getMethodType@74 (line 144)

  0x000000010f825304: cmp    $0x0,%rax
  0x000000010f825308: movabs $0x10ed9a680,%rax  ;   {metadata(method data for {method} {0x000000010ea719c0} 'getClassLoader' '()Ljava/lang/ClassLoader;' in 'java/lang/Class')}
  0x000000010f825312: movabs $0x168,%rdx
  0x000000010f82531c: je     0x000000010f82532c
  0x000000010f825322: movabs $0x178,%rdx
  0x000000010f82532c: mov    (%rax,%rdx,1),%rcx
  0x000000010f825330: lea    0x1(%rcx),%rcx
  0x000000010f825334: mov    %rcx,(%rax,%rdx,1)
  0x000000010f825338: jne    0x000000010f82534b  ;*ifnull
                                                ; - java.lang.Class::getClassLoader@16 (line 682)
                                                ; - java.lang.invoke.MemberName::getClassLoader@4 (line 90)
                                                ; - java.lang.invoke.MemberName::getMethodType@74 (line 144)

  0x000000010f82533e: mov    %rdi,0x88(%rsp)
  0x000000010f825346: jmpq   0x000000010f8253a4  ;*aload_1
                                                ; - java.lang.Class::getClassLoader@26 (line 685)
                                                ; - java.lang.invoke.MemberName::getClassLoader@4 (line 90)
                                                ; - java.lang.invoke.MemberName::getMethodType@74 (line 144)

  0x000000010f82534b: mov    %rbx,0x80(%rsp)
  0x000000010f825353: mov    %rdi,0x88(%rsp)
  0x000000010f82535b: movabs $0x10ed9a680,%rax  ;   {metadata(method data for {method} {0x000000010ea719c0} 'getClassLoader' '()Ljava/lang/ClassLoader;' in 'java/lang/Class')}
  0x000000010f825365: addq   $0x1,0x188(%rax)
  0x000000010f82536d: nop
  0x000000010f82536e: nop
  0x000000010f82536f: callq  0x000000010f717520  ; OopMap{[120]=Oop [136]=Oop [128]=Oop [160]=Oop off=3188}
                                                ;*invokestatic getCallerClass
                                                ; - java.lang.Class::getClassLoader@20 (line 683)
                                                ; - java.lang.invoke.MemberName::getClassLoader@4 (line 90)
                                                ; - java.lang.invoke.MemberName::getMethodType@74 (line 144)
                                                ;   {static_call}
  0x000000010f825374: movabs $0x10ed9a680,%rsi  ;   {metadata(method data for {method} {0x000000010ea719c0} 'getClassLoader' '()Ljava/lang/ClassLoader;' in 'java/lang/Class')}
  0x000000010f82537e: addq   $0x1,0x198(%rsi)
  0x000000010f825386: mov    0x80(%rsp),%rsi
  0x000000010f82538e: mov    %rax,%rdx          ;*invokestatic checkClassLoaderPermission
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.MemberName::getClassLoader@4 (line 90)
                                                ; - java.lang.invoke.MemberName::getMethodType@74 (line 144)

  0x000000010f825391: nop
  0x000000010f825392: nop
  0x000000010f825393: nop
  0x000000010f825394: nop
  0x000000010f825395: nop
  0x000000010f825396: nop
  0x000000010f825397: callq  0x000000010f717520  ; OopMap{[120]=Oop [136]=Oop [128]=Oop [160]=Oop off=3228}
                                                ;*invokestatic checkClassLoaderPermission
                                                ; - java.lang.Class::getClassLoader@23 (line 683)
                                                ; - java.lang.invoke.MemberName::getClassLoader@4 (line 90)
                                                ; - java.lang.invoke.MemberName::getMethodType@74 (line 144)
                                                ;   {static_call}
  0x000000010f82539c: mov    0x80(%rsp),%rbx
  0x000000010f8253a4: mov    0x88(%rsp),%rdi
  0x000000010f8253ac: movabs $0x10eda7270,%rdx  ;   {metadata(method data for {method} {0x000000010eabdf98} 'getMethodType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f8253b6: addq   $0x1,0x2e8(%rdx)
  0x000000010f8253be: mov    %rdi,%rsi
  0x000000010f8253c1: mov    %rbx,%rdx          ;*invokestatic fromMethodDescriptorString
                                                ; - java.lang.invoke.MemberName::getMethodType@77 (line 144)

  0x000000010f8253c4: nop
  0x000000010f8253c5: nop
  0x000000010f8253c6: nop
  0x000000010f8253c7: callq  0x000000010f717520  ; OopMap{[120]=Oop [160]=Oop off=3276}
                                                ;*invokestatic fromMethodDescriptorString
                                                ; - java.lang.invoke.MemberName::getMethodType@77 (line 144)
                                                ;   {static_call}
  0x000000010f8253cc: mov    0x78(%rsp),%rsi
  0x000000010f8253d1: mov    %rax,%r10
  0x000000010f8253d4: shr    $0x3,%r10
  0x000000010f8253d8: mov    %r10d,0x28(%rsi)
  0x000000010f8253dc: mov    %rsi,%rdx
  0x000000010f8253df: shr    $0x9,%rdx
  0x000000010f8253e3: movabs $0x1065b9000,%rcx
  0x000000010f8253ed: movb   $0x0,(%rdx,%rcx,1)  ;*putfield type
                                                ; - java.lang.invoke.MemberName::getMethodType@83 (line 145)

  0x000000010f8253f1: movabs $0x10eda7270,%rdx  ;   {metadata(method data for {method} {0x000000010eabdf98} 'getMethodType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f8253fb: incl   0x2f8(%rdx)
  0x000000010f825401: jmpq   0x000000010f825879  ;*goto
                                                ; - java.lang.invoke.MemberName::getMethodType@86 (line 146)

  0x000000010f825406: cmp    $0x0,%rdi
  0x000000010f82540a: jne    0x000000010f825425
  0x000000010f82540c: movabs $0x10eda7270,%rbx  ;   {metadata(method data for {method} {0x000000010eabdf98} 'getMethodType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f825416: orl    $0x100,0x308(%rbx)
  0x000000010f825420: jmpq   0x000000010f8254e6
  0x000000010f825425: movabs $0x7c00119e0,%rax  ;   {metadata('java/lang/Object'[])}
  0x000000010f82542f: mov    0x8(%rdi),%ebx
  0x000000010f825432: shl    $0x3,%rbx
  0x000000010f825436: cmp    0x30(%rbx),%rax
  0x000000010f82543a: jne    0x000000010f8254ca
  0x000000010f825440: movabs $0x10eda7270,%rbx  ;   {metadata(method data for {method} {0x000000010eabdf98} 'getMethodType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f82544a: mov    0x8(%rdi),%eax
  0x000000010f82544d: shl    $0x3,%rax
  0x000000010f825451: cmp    0x318(%rbx),%rax
  0x000000010f825458: jne    0x000000010f825467
  0x000000010f82545a: addq   $0x1,0x320(%rbx)
  0x000000010f825462: jmpq   0x000000010f8254eb
  0x000000010f825467: cmp    0x328(%rbx),%rax
  0x000000010f82546e: jne    0x000000010f82547d
  0x000000010f825470: addq   $0x1,0x330(%rbx)
  0x000000010f825478: jmpq   0x000000010f8254eb
  0x000000010f82547d: cmpq   $0x0,0x318(%rbx)
  0x000000010f825488: jne    0x000000010f8254a1
  0x000000010f82548a: mov    %rax,0x318(%rbx)
  0x000000010f825491: movq   $0x1,0x320(%rbx)
  0x000000010f82549c: jmpq   0x000000010f8254eb
  0x000000010f8254a1: cmpq   $0x0,0x328(%rbx)
  0x000000010f8254ac: jne    0x000000010f8254c5
  0x000000010f8254ae: mov    %rax,0x328(%rbx)
  0x000000010f8254b5: movq   $0x1,0x330(%rbx)
  0x000000010f8254c0: jmpq   0x000000010f8254eb
  0x000000010f8254c5: jmpq   0x000000010f8254eb
  0x000000010f8254ca: movabs $0x10eda7270,%rbx  ;   {metadata(method data for {method} {0x000000010eabdf98} 'getMethodType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f8254d4: subq   $0x1,0x310(%rbx)
  0x000000010f8254dc: jmpq   0x000000010f8254e6
  0x000000010f8254e1: jmpq   0x000000010f8254eb
  0x000000010f8254e6: xor    %rdx,%rdx
  0x000000010f8254e9: jmp    0x000000010f8254f5
  0x000000010f8254eb: movabs $0x1,%rdx          ;*instanceof
                                                ; - java.lang.invoke.MemberName::getMethodType@93 (line 146)

  0x000000010f8254f5: cmp    $0x0,%edx
  0x000000010f8254f8: movabs $0x10eda7270,%rdx  ;   {metadata(method data for {method} {0x000000010eabdf98} 'getMethodType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f825502: movabs $0x340,%rcx
  0x000000010f82550c: je     0x000000010f82551c
  0x000000010f825512: movabs $0x350,%rcx
  0x000000010f82551c: mov    (%rdx,%rcx,1),%rbx
  0x000000010f825520: lea    0x1(%rbx),%rbx
  0x000000010f825524: mov    %rbx,(%rdx,%rcx,1)
  0x000000010f825528: je     0x000000010f825879  ;*ifeq
                                                ; - java.lang.invoke.MemberName::getMethodType@96 (line 146)

  0x000000010f82552e: cmp    $0x0,%rdi
  0x000000010f825532: jne    0x000000010f82554d
  0x000000010f825534: movabs $0x10eda7270,%rdx  ;   {metadata(method data for {method} {0x000000010eabdf98} 'getMethodType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f82553e: orl    $0x100,0x358(%rdx)
  0x000000010f825548: jmpq   0x000000010f82560e
  0x000000010f82554d: movabs $0x7c00119e0,%rbx  ;   {metadata('java/lang/Object'[])}
  0x000000010f825557: mov    0x8(%rdi),%edx
  0x000000010f82555a: shl    $0x3,%rdx
  0x000000010f82555e: cmp    0x30(%rdx),%rbx
  0x000000010f825562: jne    0x000000010f8255f2
  0x000000010f825568: movabs $0x10eda7270,%rdx  ;   {metadata(method data for {method} {0x000000010eabdf98} 'getMethodType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f825572: mov    0x8(%rdi),%ebx
  0x000000010f825575: shl    $0x3,%rbx
  0x000000010f825579: cmp    0x368(%rdx),%rbx
  0x000000010f825580: jne    0x000000010f82558f
  0x000000010f825582: addq   $0x1,0x370(%rdx)
  0x000000010f82558a: jmpq   0x000000010f82560e
  0x000000010f82558f: cmp    0x378(%rdx),%rbx
  0x000000010f825596: jne    0x000000010f8255a5
  0x000000010f825598: addq   $0x1,0x380(%rdx)
  0x000000010f8255a0: jmpq   0x000000010f82560e
  0x000000010f8255a5: cmpq   $0x0,0x368(%rdx)
  0x000000010f8255b0: jne    0x000000010f8255c9
  0x000000010f8255b2: mov    %rbx,0x368(%rdx)
  0x000000010f8255b9: movq   $0x1,0x370(%rdx)
  0x000000010f8255c4: jmpq   0x000000010f82560e
  0x000000010f8255c9: cmpq   $0x0,0x378(%rdx)
  0x000000010f8255d4: jne    0x000000010f8255ed
  0x000000010f8255d6: mov    %rbx,0x378(%rdx)
  0x000000010f8255dd: movq   $0x1,0x380(%rdx)
  0x000000010f8255e8: jmpq   0x000000010f82560e
  0x000000010f8255ed: jmpq   0x000000010f82560e
  0x000000010f8255f2: movabs $0x10eda7270,%rdx  ;   {metadata(method data for {method} {0x000000010eabdf98} 'getMethodType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f8255fc: subq   $0x1,0x360(%rdx)
  0x000000010f825604: jmpq   0x000000010f825cdb
  0x000000010f825609: jmpq   0x000000010f82560e
  0x000000010f82560e: mov    %rdi,%rdx          ;*checkcast
                                                ; - java.lang.invoke.MemberName::getMethodType@103 (line 147)

  0x000000010f825611: cmpl   $0x1,0xc(%rdx)     ; implicit exception: dispatches to 0x000000010f825ce4
  0x000000010f825618: jbe    0x000000010f825cee
  0x000000010f82561e: mov    0x14(%rdx),%ecx
  0x000000010f825621: shl    $0x3,%rcx          ;*aaload
                                                ; - java.lang.invoke.MemberName::getMethodType@112 (line 148)

  0x000000010f825625: cmp    $0x0,%rcx
  0x000000010f825629: jne    0x000000010f825644
  0x000000010f82562b: movabs $0x10eda7270,%rbx  ;   {metadata(method data for {method} {0x000000010eabdf98} 'getMethodType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f825635: orl    $0x100,0x3b8(%rbx)
  0x000000010f82563f: jmpq   0x000000010f825705
  0x000000010f825644: movabs $0x7c0012340,%rax  ;   {metadata('java/lang/Class'[])}
  0x000000010f82564e: mov    0x8(%rcx),%ebx
  0x000000010f825651: shl    $0x3,%rbx
  0x000000010f825655: cmp    0x38(%rbx),%rax
  0x000000010f825659: jne    0x000000010f8256e9
  0x000000010f82565f: movabs $0x10eda7270,%rbx  ;   {metadata(method data for {method} {0x000000010eabdf98} 'getMethodType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f825669: mov    0x8(%rcx),%eax
  0x000000010f82566c: shl    $0x3,%rax
  0x000000010f825670: cmp    0x3c8(%rbx),%rax
  0x000000010f825677: jne    0x000000010f825686
  0x000000010f825679: addq   $0x1,0x3d0(%rbx)
  0x000000010f825681: jmpq   0x000000010f825705
  0x000000010f825686: cmp    0x3d8(%rbx),%rax
  0x000000010f82568d: jne    0x000000010f82569c
  0x000000010f82568f: addq   $0x1,0x3e0(%rbx)
  0x000000010f825697: jmpq   0x000000010f825705
  0x000000010f82569c: cmpq   $0x0,0x3c8(%rbx)
  0x000000010f8256a7: jne    0x000000010f8256c0
  0x000000010f8256a9: mov    %rax,0x3c8(%rbx)
  0x000000010f8256b0: movq   $0x1,0x3d0(%rbx)
  0x000000010f8256bb: jmpq   0x000000010f825705
  0x000000010f8256c0: cmpq   $0x0,0x3d8(%rbx)
  0x000000010f8256cb: jne    0x000000010f8256e4
  0x000000010f8256cd: mov    %rax,0x3d8(%rbx)
  0x000000010f8256d4: movq   $0x1,0x3e0(%rbx)
  0x000000010f8256df: jmpq   0x000000010f825705
  0x000000010f8256e4: jmpq   0x000000010f825705
  0x000000010f8256e9: movabs $0x10eda7270,%rbx  ;   {metadata(method data for {method} {0x000000010eabdf98} 'getMethodType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f8256f3: subq   $0x1,0x3c0(%rbx)
  0x000000010f8256fb: jmpq   0x000000010f825cfb
  0x000000010f825700: jmpq   0x000000010f825705  ;*checkcast
                                                ; - java.lang.invoke.MemberName::getMethodType@113 (line 148)

  0x000000010f825705: mov    0x10(%rdx),%edx
  0x000000010f825708: shl    $0x3,%rdx          ;*aaload
                                                ; - java.lang.invoke.MemberName::getMethodType@122 (line 149)

  0x000000010f82570c: cmp    $0x0,%rdx
  0x000000010f825710: jne    0x000000010f82572b
  0x000000010f825712: movabs $0x10eda7270,%rbx  ;   {metadata(method data for {method} {0x000000010eabdf98} 'getMethodType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f82571c: orl    $0x100,0x418(%rbx)
  0x000000010f825726: jmpq   0x000000010f8257eb
  0x000000010f82572b: movabs $0x7c0001ef8,%rax  ;   {metadata('java/lang/Class')}
  0x000000010f825735: mov    0x8(%rdx),%edi
  0x000000010f825738: shl    $0x3,%rdi
  0x000000010f82573c: cmp    %rdi,%rax
  0x000000010f82573f: jne    0x000000010f8257cf
  0x000000010f825745: movabs $0x10eda7270,%rbx  ;   {metadata(method data for {method} {0x000000010eabdf98} 'getMethodType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f82574f: mov    0x8(%rdx),%eax
  0x000000010f825752: shl    $0x3,%rax
  0x000000010f825756: cmp    0x428(%rbx),%rax
  0x000000010f82575d: jne    0x000000010f82576c
  0x000000010f82575f: addq   $0x1,0x430(%rbx)
  0x000000010f825767: jmpq   0x000000010f8257eb
  0x000000010f82576c: cmp    0x438(%rbx),%rax
  0x000000010f825773: jne    0x000000010f825782
  0x000000010f825775: addq   $0x1,0x440(%rbx)
  0x000000010f82577d: jmpq   0x000000010f8257eb
  0x000000010f825782: cmpq   $0x0,0x428(%rbx)
  0x000000010f82578d: jne    0x000000010f8257a6
  0x000000010f82578f: mov    %rax,0x428(%rbx)
  0x000000010f825796: movq   $0x1,0x430(%rbx)
  0x000000010f8257a1: jmpq   0x000000010f8257eb
  0x000000010f8257a6: cmpq   $0x0,0x438(%rbx)
  0x000000010f8257b1: jne    0x000000010f8257ca
  0x000000010f8257b3: mov    %rax,0x438(%rbx)
  0x000000010f8257ba: movq   $0x1,0x440(%rbx)
  0x000000010f8257c5: jmpq   0x000000010f8257eb
  0x000000010f8257ca: jmpq   0x000000010f8257eb
  0x000000010f8257cf: movabs $0x10eda7270,%rbx  ;   {metadata(method data for {method} {0x000000010eabdf98} 'getMethodType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f8257d9: subq   $0x1,0x420(%rbx)
  0x000000010f8257e1: jmpq   0x000000010f825d04
  0x000000010f8257e6: jmpq   0x000000010f8257eb  ;*checkcast
                                                ; - java.lang.invoke.MemberName::getMethodType@123 (line 149)

  0x000000010f8257eb: movabs $0x10eda7270,%rdi  ;   {metadata(method data for {method} {0x000000010eabdf98} 'getMethodType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f8257f5: addq   $0x1,0x450(%rdi)
  0x000000010f8257fd: movabs $0x10edb0508,%rdi  ;   {metadata(method data for {method} {0x000000010eace970} 'methodType' '(Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MethodType')}
  0x000000010f825807: mov    0xdc(%rdi),%ebx
  0x000000010f82580d: add    $0x8,%ebx
  0x000000010f825810: mov    %ebx,0xdc(%rdi)
  0x000000010f825816: movabs $0x10eace970,%rdi  ;   {metadata({method} {0x000000010eace970} 'methodType' '(Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MethodType')}
  0x000000010f825820: and    $0x7ffff8,%ebx
  0x000000010f825826: cmp    $0x0,%ebx
  0x000000010f825829: je     0x000000010f825d0d
  0x000000010f82582f: movabs $0x10edb0508,%rdi  ;   {metadata(method data for {method} {0x000000010eace970} 'methodType' '(Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MethodType')}
  0x000000010f825839: addq   $0x1,0x108(%rdi)
  0x000000010f825841: mov    %rdx,%rsi
  0x000000010f825844: mov    %rcx,%rdx
  0x000000010f825847: mov    $0x0,%ecx          ;*invokestatic makeImpl
                                                ; - java.lang.invoke.MethodType::methodType@3 (line 206)
                                                ; - java.lang.invoke.MemberName::getMethodType@131 (line 150)

  0x000000010f82584c: nop
  0x000000010f82584d: nop
  0x000000010f82584e: nop
  0x000000010f82584f: callq  0x000000010f717520  ; OopMap{[120]=Oop [160]=Oop off=4436}
                                                ;*invokestatic makeImpl
                                                ; - java.lang.invoke.MethodType::methodType@3 (line 206)
                                                ; - java.lang.invoke.MemberName::getMethodType@131 (line 150)
                                                ;   {static_call}
  0x000000010f825854: mov    0x78(%rsp),%rsi
  0x000000010f825859: mov    %rax,%r10
  0x000000010f82585c: shr    $0x3,%r10
  0x000000010f825860: mov    %r10d,0x28(%rsi)
  0x000000010f825864: mov    %rsi,%rax
  0x000000010f825867: shr    $0x9,%rax
  0x000000010f82586b: movabs $0x1065b9000,%rdx
  0x000000010f825875: movb   $0x0,(%rax,%rdx,1)  ;*putfield type
                                                ; - java.lang.invoke.MemberName::getMethodType@139 (line 151)

  0x000000010f825879: movabs $0x10eda7270,%rax  ;   {metadata(method data for {method} {0x000000010eabdf98} 'getMethodType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f825883: incl   0x460(%rax)        ;*ifne
                                                ; - java.lang.invoke.MemberName::getMethodType@145 (line 154)

  0x000000010f825889: lea    0x98(%rsp),%rax
  0x000000010f825891: mov    0x8(%rax),%rdi
  0x000000010f825895: mov    (%rdi),%rdx
  0x000000010f825898: and    $0x7,%rdx
  0x000000010f82589c: cmp    $0x5,%rdx
  0x000000010f8258a0: je     0x000000010f8258bd
  0x000000010f8258a6: mov    (%rax),%rdx
  0x000000010f8258a9: test   %rdx,%rdx
  0x000000010f8258ac: je     0x000000010f8258bd
  0x000000010f8258b2: lock cmpxchg %rdx,(%rdi)
  0x000000010f8258b7: jne    0x000000010f825d24  ;*monitorexit
                                                ; - java.lang.invoke.MemberName::getMethodType@189 (line 155)

  0x000000010f8258bd: movabs $0x10eda7270,%rax  ;   {metadata(method data for {method} {0x000000010eabdf98} 'getMethodType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f8258c7: incl   0x580(%rax)        ;*goto
                                                ; - java.lang.invoke.MemberName::getMethodType@190 (line 155)

  0x000000010f8258cd: mov    0x28(%rsi),%eax
  0x000000010f8258d0: shl    $0x3,%rax          ;*getfield type
                                                ; - java.lang.invoke.MemberName::getMethodType@201 (line 156)

  0x000000010f8258d4: cmp    $0x0,%rax
  0x000000010f8258d8: jne    0x000000010f8258f3
  0x000000010f8258da: movabs $0x10eda7270,%rsi  ;   {metadata(method data for {method} {0x000000010eabdf98} 'getMethodType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f8258e4: orl    $0x100,0x590(%rsi)
  0x000000010f8258ee: jmpq   0x000000010f8259b3
  0x000000010f8258f3: movabs $0x7c000c460,%rdi  ;   {metadata('java/lang/invoke/MethodType')}
  0x000000010f8258fd: mov    0x8(%rax),%edx
  0x000000010f825900: shl    $0x3,%rdx
  0x000000010f825904: cmp    %rdx,%rdi
  0x000000010f825907: jne    0x000000010f825997
  0x000000010f82590d: movabs $0x10eda7270,%rsi  ;   {metadata(method data for {method} {0x000000010eabdf98} 'getMethodType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f825917: mov    0x8(%rax),%edi
  0x000000010f82591a: shl    $0x3,%rdi
  0x000000010f82591e: cmp    0x5a0(%rsi),%rdi
  0x000000010f825925: jne    0x000000010f825934
  0x000000010f825927: addq   $0x1,0x5a8(%rsi)
  0x000000010f82592f: jmpq   0x000000010f8259b3
  0x000000010f825934: cmp    0x5b0(%rsi),%rdi
  0x000000010f82593b: jne    0x000000010f82594a
  0x000000010f82593d: addq   $0x1,0x5b8(%rsi)
  0x000000010f825945: jmpq   0x000000010f8259b3
  0x000000010f82594a: cmpq   $0x0,0x5a0(%rsi)
  0x000000010f825955: jne    0x000000010f82596e
  0x000000010f825957: mov    %rdi,0x5a0(%rsi)
  0x000000010f82595e: movq   $0x1,0x5a8(%rsi)
  0x000000010f825969: jmpq   0x000000010f8259b3
  0x000000010f82596e: cmpq   $0x0,0x5b0(%rsi)
  0x000000010f825979: jne    0x000000010f825992
  0x000000010f82597b: mov    %rdi,0x5b0(%rsi)
  0x000000010f825982: movq   $0x1,0x5b8(%rsi)
  0x000000010f82598d: jmpq   0x000000010f8259b3
  0x000000010f825992: jmpq   0x000000010f8259b3
  0x000000010f825997: movabs $0x10eda7270,%rsi  ;   {metadata(method data for {method} {0x000000010eabdf98} 'getMethodType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f8259a1: subq   $0x1,0x598(%rsi)
  0x000000010f8259a9: jmpq   0x000000010f825d3a
  0x000000010f8259ae: jmpq   0x000000010f8259b3  ;*checkcast
                                                ; - java.lang.invoke.MemberName::getMethodType@204 (line 156)

  0x000000010f8259b3: add    $0xb0,%rsp
  0x000000010f8259ba: pop    %rbp
  0x000000010f8259bb: test   %eax,-0x8d8a8c1(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f8259c1: retq                      ;*areturn
                                                ; - java.lang.invoke.MemberName::getMethodType@207 (line 156)

  0x000000010f8259c2: cmp    $0x0,%rdi
  0x000000010f8259c6: jne    0x000000010f8259e1
  0x000000010f8259c8: movabs $0x10eda7270,%rsi  ;   {metadata(method data for {method} {0x000000010eabdf98} 'getMethodType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f8259d2: orl    $0x100,0x200(%rsi)
  0x000000010f8259dc: jmpq   0x000000010f825aa1
  0x000000010f8259e1: movabs $0x7c000c460,%rax  ;   {metadata('java/lang/invoke/MethodType')}
  0x000000010f8259eb: mov    0x8(%rdi),%edx
  0x000000010f8259ee: shl    $0x3,%rdx
  0x000000010f8259f2: cmp    %rdx,%rax
  0x000000010f8259f5: jne    0x000000010f825a85
  0x000000010f8259fb: movabs $0x10eda7270,%rsi  ;   {metadata(method data for {method} {0x000000010eabdf98} 'getMethodType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f825a05: mov    0x8(%rdi),%eax
  0x000000010f825a08: shl    $0x3,%rax
  0x000000010f825a0c: cmp    0x210(%rsi),%rax
  0x000000010f825a13: jne    0x000000010f825a22
  0x000000010f825a15: addq   $0x1,0x218(%rsi)
  0x000000010f825a1d: jmpq   0x000000010f825aa1
  0x000000010f825a22: cmp    0x220(%rsi),%rax
  0x000000010f825a29: jne    0x000000010f825a38
  0x000000010f825a2b: addq   $0x1,0x228(%rsi)
  0x000000010f825a33: jmpq   0x000000010f825aa1
  0x000000010f825a38: cmpq   $0x0,0x210(%rsi)
  0x000000010f825a43: jne    0x000000010f825a5c
  0x000000010f825a45: mov    %rax,0x210(%rsi)
  0x000000010f825a4c: movq   $0x1,0x218(%rsi)
  0x000000010f825a57: jmpq   0x000000010f825aa1
  0x000000010f825a5c: cmpq   $0x0,0x220(%rsi)
  0x000000010f825a67: jne    0x000000010f825a80
  0x000000010f825a69: mov    %rax,0x220(%rsi)
  0x000000010f825a70: movq   $0x1,0x228(%rsi)
  0x000000010f825a7b: jmpq   0x000000010f825aa1
  0x000000010f825a80: jmpq   0x000000010f825aa1
  0x000000010f825a85: movabs $0x10eda7270,%rsi  ;   {metadata(method data for {method} {0x000000010eabdf98} 'getMethodType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f825a8f: subq   $0x1,0x208(%rsi)
  0x000000010f825a97: jmpq   0x000000010f825d43
  0x000000010f825a9c: jmpq   0x000000010f825aa1
  0x000000010f825aa1: mov    %rdi,%rax          ;*checkcast
                                                ; - java.lang.invoke.MemberName::getMethodType@46 (line 136)

  0x000000010f825aa4: add    $0xb0,%rsp
  0x000000010f825aab: pop    %rbp
  0x000000010f825aac: test   %eax,-0x8d8a9b2(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f825ab2: retq                      ;*areturn
                                                ; - java.lang.invoke.MemberName::getMethodType@49 (line 136)

  0x000000010f825ab3: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000010f825abd: add    $0xb0,%rsp
  0x000000010f825ac4: pop    %rbp
  0x000000010f825ac5: test   %eax,-0x8d8a9cb(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f825acb: retq                      ;*areturn
                                                ; - java.lang.invoke.MemberName::getMethodType@19 (line 125)

  0x000000010f825acc: movabs $0x10eda7270,%rdx  ;   {metadata(method data for {method} {0x000000010eabdf98} 'getMethodType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MemberName')}
  0x000000010f825ad6: addq   $0x1,0x1a8(%rdx)
  0x000000010f825ade: movabs $0x10eda56f0,%rdx  ;   {metadata(method data for {method} {0x000000010ecd9338} 'newIllegalArgumentException' '(Ljava/lang/String;)Ljava/lang/RuntimeException;' in 'java/lang/invoke/MethodHandleStatics')}
  0x000000010f825ae8: mov    0xdc(%rdx),%esi
  0x000000010f825aee: add    $0x8,%esi
  0x000000010f825af1: mov    %esi,0xdc(%rdx)
  0x000000010f825af7: movabs $0x10ecd9338,%rdx  ;   {metadata({method} {0x000000010ecd9338} 'newIllegalArgumentException' '(Ljava/lang/String;)Ljava/lang/RuntimeException;' in 'java/lang/invoke/MethodHandleStatics')}
  0x000000010f825b01: and    $0x7ffff8,%esi
  0x000000010f825b07: cmp    $0x0,%esi
  0x000000010f825b0a: je     0x000000010f825d4c
  0x000000010f825b10: jmpq   0x000000010f825d72  ;   {no_reloc}
  0x000000010f825b15: add    %al,(%rax)
  0x000000010f825b17: add    %al,(%rax)
  0x000000010f825b19: add    %cl,-0x75(%rcx)
  0x000000010f825b1c: rex.RXB (bad) 
  0x000000010f825b1e: lea    0x20(%rax),%rdi
  0x000000010f825b22: cmp    0x70(%r15),%rdi
  0x000000010f825b26: ja     0x000000010f825d7c
  0x000000010f825b2c: mov    %rdi,0x60(%r15)
  0x000000010f825b30: mov    0xa8(%rdx),%rcx
  0x000000010f825b37: mov    %rcx,(%rax)
  0x000000010f825b3a: mov    %rdx,%rcx
  0x000000010f825b3d: shr    $0x3,%rcx
  0x000000010f825b41: mov    %ecx,0x8(%rax)
  0x000000010f825b44: xor    %rcx,%rcx
  0x000000010f825b47: mov    %ecx,0xc(%rax)
  0x000000010f825b4a: xor    %rcx,%rcx
  0x000000010f825b4d: mov    %rcx,0x10(%rax)
  0x000000010f825b51: mov    %rcx,0x18(%rax)    ;*new  ; - java.lang.invoke.MethodHandleStatics::newIllegalArgumentException@0 (line 139)
                                                ; - java.lang.invoke.MemberName::getMethodType@29 (line 129)

  0x000000010f825b55: mov    %rax,%rdx
  0x000000010f825b58: movabs $0x10eda56f0,%rsi  ;   {metadata(method data for {method} {0x000000010ecd9338} 'newIllegalArgumentException' '(Ljava/lang/String;)Ljava/lang/RuntimeException;' in 'java/lang/invoke/MethodHandleStatics')}
  0x000000010f825b62: addq   $0x1,0x108(%rsi)
  0x000000010f825b6a: movabs $0x795968df8,%rdx  ;   {oop("not invocable, no method type")}
  0x000000010f825b74: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.invoke.MethodHandleStatics::newIllegalArgumentException@5 (line 139)
                                                ; - java.lang.invoke.MemberName::getMethodType@29 (line 129)

  0x000000010f825b77: mov    %rax,0x90(%rsp)
  0x000000010f825b7f: callq  0x000000010f7170a0  ; OopMap{[144]=Oop off=5252}
                                                ;*invokespecial <init>
                                                ; - java.lang.invoke.MethodHandleStatics::newIllegalArgumentException@5 (line 139)
                                                ; - java.lang.invoke.MemberName::getMethodType@29 (line 129)
                                                ;   {optimized virtual_call}
  0x000000010f825b84: mov    0x90(%rsp),%rax
  0x000000010f825b8c: jmpq   0x000000010f825dca  ;*athrow
                                                ; - java.lang.invoke.MemberName::getMethodType@32 (line 129)

  0x000000010f825b91: mov    0x2a8(%r15),%rax
  0x000000010f825b98: xor    %r10,%r10
  0x000000010f825b9b: mov    %r10,0x2a8(%r15)
  0x000000010f825ba2: xor    %r10,%r10
  0x000000010f825ba5: mov    %r10,0x2b0(%r15)
  0x000000010f825bac: mov    %rax,%rsi
  0x000000010f825baf: lea    0x98(%rsp),%rax
  0x000000010f825bb7: mov    0x8(%rax),%rbx
  0x000000010f825bbb: mov    (%rbx),%rdi
  0x000000010f825bbe: and    $0x7,%rdi
  0x000000010f825bc2: cmp    $0x5,%rdi
  0x000000010f825bc6: je     0x000000010f825be3
  0x000000010f825bcc: mov    (%rax),%rdi
  0x000000010f825bcf: test   %rdi,%rdi
  0x000000010f825bd2: je     0x000000010f825be3
  0x000000010f825bd8: lock cmpxchg %rdi,(%rbx)
  0x000000010f825bdd: jne    0x000000010f825d89  ;*monitorexit
                                                ; - java.lang.invoke.MemberName::getMethodType@196 (line 155)

  0x000000010f825be3: mov    %rsi,%rax
  0x000000010f825be6: jmpq   0x000000010f825dca
  0x000000010f825beb: mov    %rdi,0x8(%rsp)
  0x000000010f825bf0: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f825bf8: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [120]=Oop off=5373}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MemberName::getMethodType@-1 (line 122)
                                                ;   {runtime_call}
  0x000000010f825bfd: jmpq   0x000000010f824766
  0x000000010f825c02: mov    %rbx,0x8(%rsp)
  0x000000010f825c07: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f825c0f: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [120]=Oop rdi=Oop off=5396}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MemberName::expandFromVM@-1 (line 500)
                                                ; - java.lang.invoke.MemberName::getMethodType@8 (line 123)
                                                ;   {runtime_call}
  0x000000010f825c14: jmpq   0x000000010f8247ee
  0x000000010f825c19: mov    %rdi,0x8(%rsp)
  0x000000010f825c1e: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f825c26: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [120]=Oop off=5419}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MemberName::isResolved@-1 (line 774)
                                                ; - java.lang.invoke.MemberName::expandFromVM@9 (line 503)
                                                ; - java.lang.invoke.MemberName::getMethodType@8 (line 123)
                                                ;   {runtime_call}
  0x000000010f825c2b: jmpq   0x000000010f8248ea
  0x000000010f825c30: mov    %rax,0x8(%rsp)
  0x000000010f825c35: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f825c3d: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [120]=Oop off=5442}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MemberName::isInvocable@-1 (line 443)
                                                ; - java.lang.invoke.MemberName::getMethodType@21 (line 128)
                                                ;   {runtime_call}
  0x000000010f825c42: jmpq   0x000000010f824aac
  0x000000010f825c47: mov    %rax,0x8(%rsp)
  0x000000010f825c4c: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f825c54: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [120]=Oop off=5465}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MemberName::testAnyFlags@-1 (line 340)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 443)
                                                ; - java.lang.invoke.MemberName::getMethodType@21 (line 128)
                                                ;   {runtime_call}
  0x000000010f825c59: jmpq   0x000000010f824af3
  0x000000010f825c5e: mov    %rax,0x8(%rsp)
  0x000000010f825c63: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f825c6b: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [120]=Oop off=5488}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MemberName::testFlags@-1 (line 334)
                                                ; - java.lang.invoke.MemberName::testAnyFlags@3 (line 340)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 443)
                                                ; - java.lang.invoke.MemberName::getMethodType@21 (line 128)
                                                ;   {runtime_call}
  0x000000010f825c70: jmpq   0x000000010f824b3a
  0x000000010f825c75: mov    %rsi,0x8(%rsp)
  0x000000010f825c7a: mov    %rdi,(%rsp)
  0x000000010f825c7e: callq  0x000000010f7cfc60  ; OopMap{rsi=Oop [120]=Oop [160]=Oop off=5507}
                                                ;*monitorenter
                                                ; - java.lang.invoke.MemberName::getMethodType@53 (line 141)
                                                ;   {runtime_call}
  0x000000010f825c83: jmpq   0x000000010f824e2c
  0x000000010f825c88: mov    %rdi,(%rsp)
  0x000000010f825c8c: callq  0x000000010f7cf480  ; OopMap{rsi=Oop [120]=Oop [160]=Oop off=5521}
                                                ;*checkcast
                                                ; - java.lang.invoke.MemberName::getMethodType@68 (line 143)
                                                ;   {runtime_call}
  0x000000010f825c91: mov    %rbx,0x8(%rsp)
  0x000000010f825c96: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f825c9e: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [120]=Oop rdi=Oop [160]=Oop off=5539}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MemberName::getClassLoader@-1 (line 90)
                                                ; - java.lang.invoke.MemberName::getMethodType@74 (line 144)
                                                ;   {runtime_call}
  0x000000010f825ca3: jmpq   0x000000010f8250fb
  0x000000010f825ca8: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop [120]=Oop rdi=Oop rbx=Oop [160]=Oop off=5549}
                                                ;*invokevirtual getClassLoader
                                                ; - java.lang.invoke.MemberName::getClassLoader@4 (line 90)
                                                ; - java.lang.invoke.MemberName::getMethodType@74 (line 144)
                                                ;   {runtime_call}
  0x000000010f825cad: mov    %rax,0x8(%rsp)
  0x000000010f825cb2: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f825cba: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [120]=Oop rdi=Oop rbx=Oop [160]=Oop off=5567}
                                                ;*synchronization entry
                                                ; - java.lang.Class::getClassLoader@-1 (line 678)
                                                ; - java.lang.invoke.MemberName::getClassLoader@4 (line 90)
                                                ; - java.lang.invoke.MemberName::getMethodType@74 (line 144)
                                                ;   {runtime_call}
  0x000000010f825cbf: jmpq   0x000000010f8251c7
  0x000000010f825cc4: mov    %rax,0x8(%rsp)
  0x000000010f825cc9: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f825cd1: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [120]=Oop rdi=Oop rbx=Oop [160]=Oop off=5590}
                                                ;*synchronization entry
                                                ; - java.lang.System::getSecurityManager@-1 (line 334)
                                                ; - java.lang.Class::getClassLoader@11 (line 681)
                                                ; - java.lang.invoke.MemberName::getClassLoader@4 (line 90)
                                                ; - java.lang.invoke.MemberName::getMethodType@74 (line 144)
                                                ;   {runtime_call}
  0x000000010f825cd6: jmpq   0x000000010f8252f3
  0x000000010f825cdb: mov    %rdi,(%rsp)
  0x000000010f825cdf: callq  0x000000010f7cf480  ; OopMap{[120]=Oop [160]=Oop off=5604}
                                                ;*checkcast
                                                ; - java.lang.invoke.MemberName::getMethodType@103 (line 147)
                                                ;   {runtime_call}
  0x000000010f825ce4: callq  0x000000010f7cd0c0  ; OopMap{[120]=Oop rdx=Oop [160]=Oop off=5609}
                                                ;*aaload
                                                ; - java.lang.invoke.MemberName::getMethodType@112 (line 148)
                                                ;   {runtime_call}
  0x000000010f825ce9: callq  0x000000010f7cd0c0  ; OopMap{[120]=Oop rdx=Oop [160]=Oop off=5614}
                                                ;*aaload
                                                ; - java.lang.invoke.MemberName::getMethodType@112 (line 148)
                                                ;   {runtime_call}
  0x000000010f825cee: movq   $0x1,(%rsp)
  0x000000010f825cf6: callq  0x000000010f7cca00  ; OopMap{[120]=Oop rdx=Oop [160]=Oop off=5627}
                                                ;*aaload
                                                ; - java.lang.invoke.MemberName::getMethodType@112 (line 148)
                                                ;   {runtime_call}
  0x000000010f825cfb: mov    %rcx,(%rsp)
  0x000000010f825cff: callq  0x000000010f7cf480  ; OopMap{[120]=Oop rdx=Oop [160]=Oop off=5636}
                                                ;*checkcast
                                                ; - java.lang.invoke.MemberName::getMethodType@113 (line 148)
                                                ;   {runtime_call}
  0x000000010f825d04: mov    %rdx,(%rsp)
  0x000000010f825d08: callq  0x000000010f7cf480  ; OopMap{[120]=Oop rcx=Oop [160]=Oop off=5645}
                                                ;*checkcast
                                                ; - java.lang.invoke.MemberName::getMethodType@123 (line 149)
                                                ;   {runtime_call}
  0x000000010f825d0d: mov    %rdi,0x8(%rsp)
  0x000000010f825d12: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f825d1a: callq  0x000000010f7d1a20  ; OopMap{[120]=Oop rcx=Oop rdx=Oop [160]=Oop off=5663}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MethodType::methodType@-1 (line 206)
                                                ; - java.lang.invoke.MemberName::getMethodType@131 (line 150)
                                                ;   {runtime_call}
  0x000000010f825d1f: jmpq   0x000000010f82582f
  0x000000010f825d24: lea    0x98(%rsp),%rax
  0x000000010f825d2c: mov    %rax,(%rsp)
  0x000000010f825d30: callq  0x000000010f7d00a0  ;   {runtime_call}
  0x000000010f825d35: jmpq   0x000000010f8258bd
  0x000000010f825d3a: mov    %rax,(%rsp)
  0x000000010f825d3e: callq  0x000000010f7cf480  ; OopMap{off=5699}
                                                ;*checkcast
                                                ; - java.lang.invoke.MemberName::getMethodType@204 (line 156)
                                                ;   {runtime_call}
  0x000000010f825d43: mov    %rdi,(%rsp)
  0x000000010f825d47: callq  0x000000010f7cf480  ; OopMap{off=5708}
                                                ;*checkcast
                                                ; - java.lang.invoke.MemberName::getMethodType@46 (line 136)
                                                ;   {runtime_call}
  0x000000010f825d4c: mov    %rdx,0x8(%rsp)
  0x000000010f825d51: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f825d59: callq  0x000000010f7d1a20  ; OopMap{off=5726}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MethodHandleStatics::newIllegalArgumentException@-1 (line 139)
                                                ; - java.lang.invoke.MemberName::getMethodType@29 (line 129)
                                                ;   {runtime_call}
  0x000000010f825d5e: jmpq   0x000000010f825b10
  0x000000010f825d63: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f825d6d: mov    $0xa050f00,%eax
  0x000000010f825d72: callq  0x000000010f7d08e0  ; OopMap{off=5751}
                                                ;*new  ; - java.lang.invoke.MethodHandleStatics::newIllegalArgumentException@0 (line 139)
                                                ; - java.lang.invoke.MemberName::getMethodType@29 (line 129)
                                                ;   {runtime_call}
  0x000000010f825d77: jmpq   0x000000010f825b10
  0x000000010f825d7c: mov    %rdx,%rdx
  0x000000010f825d7f: callq  0x000000010f7cd820  ; OopMap{off=5764}
                                                ;*new  ; - java.lang.invoke.MethodHandleStatics::newIllegalArgumentException@0 (line 139)
                                                ; - java.lang.invoke.MemberName::getMethodType@29 (line 129)
                                                ;   {runtime_call}
  0x000000010f825d84: jmpq   0x000000010f825b55
  0x000000010f825d89: lea    0x98(%rsp),%rax
  0x000000010f825d91: mov    %rax,(%rsp)
  0x000000010f825d95: callq  0x000000010f7d00a0  ;   {runtime_call}
  0x000000010f825d9a: jmpq   0x000000010f825be3
  0x000000010f825d9f: nop
  0x000000010f825da0: nop
  0x000000010f825da1: mov    0x2a8(%r15),%rax
  0x000000010f825da8: movabs $0x0,%r10
  0x000000010f825db2: mov    %r10,0x2a8(%r15)
  0x000000010f825db9: movabs $0x0,%r10
  0x000000010f825dc3: mov    %r10,0x2b0(%r15)
  0x000000010f825dca: add    $0xb0,%rsp
  0x000000010f825dd1: pop    %rbp
  0x000000010f825dd2: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f825dd7: hlt    
  0x000000010f825dd8: hlt    
  0x000000010f825dd9: hlt    
  0x000000010f825dda: hlt    
  0x000000010f825ddb: hlt    
  0x000000010f825ddc: hlt    
  0x000000010f825ddd: hlt    
  0x000000010f825dde: hlt    
  0x000000010f825ddf: hlt    
[Stub Code]
  0x000000010f825de0: nop                       ;   {no_reloc}
  0x000000010f825de1: nop
  0x000000010f825de2: nop
  0x000000010f825de3: nop
  0x000000010f825de4: nop
  0x000000010f825de5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f825def: jmpq   0x000000010f825def  ;   {runtime_call}
  0x000000010f825df4: nop
  0x000000010f825df5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f825dff: jmpq   0x000000010f825dff  ;   {runtime_call}
  0x000000010f825e04: nop
  0x000000010f825e05: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f825e0f: jmpq   0x000000010f825e0f  ;   {runtime_call}
  0x000000010f825e14: nop
  0x000000010f825e15: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f825e1f: jmpq   0x000000010f825e1f  ;   {runtime_call}
  0x000000010f825e24: nop
  0x000000010f825e25: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f825e2f: jmpq   0x000000010f825e2f  ;   {runtime_call}
  0x000000010f825e34: nop
  0x000000010f825e35: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f825e3f: jmpq   0x000000010f825e3f  ;   {runtime_call}
[Exception Handler]
  0x000000010f825e44: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f825e49: mov    %rsp,-0x28(%rsp)
  0x000000010f825e4e: sub    $0x80,%rsp
  0x000000010f825e55: mov    %rax,0x78(%rsp)
  0x000000010f825e5a: mov    %rcx,0x70(%rsp)
  0x000000010f825e5f: mov    %rdx,0x68(%rsp)
  0x000000010f825e64: mov    %rbx,0x60(%rsp)
  0x000000010f825e69: mov    %rbp,0x50(%rsp)
  0x000000010f825e6e: mov    %rsi,0x48(%rsp)
  0x000000010f825e73: mov    %rdi,0x40(%rsp)
  0x000000010f825e78: mov    %r8,0x38(%rsp)
  0x000000010f825e7d: mov    %r9,0x30(%rsp)
  0x000000010f825e82: mov    %r10,0x28(%rsp)
  0x000000010f825e87: mov    %r11,0x20(%rsp)
  0x000000010f825e8c: mov    %r12,0x18(%rsp)
  0x000000010f825e91: mov    %r13,0x10(%rsp)
  0x000000010f825e96: mov    %r14,0x8(%rsp)
  0x000000010f825e9b: mov    %r15,(%rsp)
  0x000000010f825e9f: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f825ea9: movabs $0x10f825e49,%rsi  ;   {internal_word}
  0x000000010f825eb3: mov    %rsp,%rdx
  0x000000010f825eb6: and    $0xfffffffffffffff0,%rsp
  0x000000010f825eba: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f825ebf: hlt    
[Deopt Handler Code]
  0x000000010f825ec0: movabs $0x10f825ec0,%r10  ;   {section_word}
  0x000000010f825eca: push   %r10
  0x000000010f825ecc: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f825ed1: hlt    
  0x000000010f825ed2: hlt    
  0x000000010f825ed3: hlt    
  0x000000010f825ed4: hlt    
  0x000000010f825ed5: hlt    
  0x000000010f825ed6: hlt    
  0x000000010f825ed7: hlt    
Decoding compiled method 0x000000010f8279d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ead6838} 'append' '(C)Ljava/lang/StringBuffer;' in 'java/lang/StringBuffer'
  # this:     rsi:rsi   = 'java/lang/StringBuffer'
  # parm0:    rdx       = char
  #           [sp+0x110]  (sp of caller)
  0x000000010f827b80: mov    0x8(%rsi),%r10d
  0x000000010f827b84: shl    $0x3,%r10
  0x000000010f827b88: cmp    %rax,%r10
  0x000000010f827b8b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f827b91: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f827b9c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f827ba0: mov    %eax,-0x14000(%rsp)
  0x000000010f827ba7: push   %rbp
  0x000000010f827ba8: sub    $0x100,%rsp
  0x000000010f827baf: lea    0xe0(%rsp),%rdi
  0x000000010f827bb7: mov    %rsi,0x8(%rdi)
  0x000000010f827bbb: mov    (%rsi),%rax
  0x000000010f827bbe: mov    %rax,%rbx
  0x000000010f827bc1: and    $0x7,%rbx
  0x000000010f827bc5: cmp    $0x5,%rbx
  0x000000010f827bc9: jne    0x000000010f827c50
  0x000000010f827bcf: mov    0x8(%rsi),%ebx
  0x000000010f827bd2: shl    $0x3,%rbx
  0x000000010f827bd6: mov    0xa8(%rbx),%rbx
  0x000000010f827bdd: or     %r15,%rbx
  0x000000010f827be0: xor    %rax,%rbx
  0x000000010f827be3: and    $0xffffffffffffff87,%rbx
  0x000000010f827be7: je     0x000000010f827c78
  0x000000010f827bed: test   $0x7,%rbx
  0x000000010f827bf4: jne    0x000000010f827c3d
  0x000000010f827bf6: test   $0x300,%rbx
  0x000000010f827bfd: jne    0x000000010f827c1c
  0x000000010f827bff: and    $0x37f,%rax
  0x000000010f827c06: mov    %rax,%rbx
  0x000000010f827c09: or     %r15,%rbx
  0x000000010f827c0c: lock cmpxchg %rbx,(%rsi)
  0x000000010f827c11: jne    0x000000010f828086
  0x000000010f827c17: jmpq   0x000000010f827c78
  0x000000010f827c1c: mov    0x8(%rsi),%ebx
  0x000000010f827c1f: shl    $0x3,%rbx
  0x000000010f827c23: mov    0xa8(%rbx),%rbx
  0x000000010f827c2a: or     %r15,%rbx
  0x000000010f827c2d: lock cmpxchg %rbx,(%rsi)
  0x000000010f827c32: jne    0x000000010f828086
  0x000000010f827c38: jmpq   0x000000010f827c78
  0x000000010f827c3d: mov    0x8(%rsi),%ebx
  0x000000010f827c40: shl    $0x3,%rbx
  0x000000010f827c44: mov    0xa8(%rbx),%rbx
  0x000000010f827c4b: lock cmpxchg %rbx,(%rsi)
  0x000000010f827c50: mov    (%rsi),%rax
  0x000000010f827c53: or     $0x1,%rax
  0x000000010f827c57: mov    %rax,(%rdi)
  0x000000010f827c5a: lock cmpxchg %rdi,(%rsi)
  0x000000010f827c5f: je     0x000000010f827c78
  0x000000010f827c65: sub    %rsp,%rax
  0x000000010f827c68: and    $0xfffffffffffff007,%rax
  0x000000010f827c6f: mov    %rax,(%rdi)
  0x000000010f827c72: jne    0x000000010f828086
  0x000000010f827c78: movabs $0x10edafe68,%rdi  ;   {metadata(method data for {method} {0x000000010ead6838} 'append' '(C)Ljava/lang/StringBuffer;' in 'java/lang/StringBuffer')}
  0x000000010f827c82: mov    0xdc(%rdi),%ebx
  0x000000010f827c88: add    $0x8,%ebx
  0x000000010f827c8b: mov    %ebx,0xdc(%rdi)
  0x000000010f827c91: movabs $0x10ead6838,%rdi  ;   {metadata({method} {0x000000010ead6838} 'append' '(C)Ljava/lang/StringBuffer;' in 'java/lang/StringBuffer')}
  0x000000010f827c9b: and    $0x1ff8,%ebx
  0x000000010f827ca1: cmp    $0x0,%ebx
  0x000000010f827ca4: je     0x000000010f828099  ;*aload_0
                                                ; - java.lang.StringBuffer::append@0 (line 380)

  0x000000010f827caa: movl   $0x0,0x14(%rsi)
  0x000000010f827cb1: mov    %rsi,%rdi
  0x000000010f827cb4: shr    $0x9,%rdi
  0x000000010f827cb8: movabs $0x1065b9000,%rbx
  0x000000010f827cc2: movb   $0x0,(%rdi,%rbx,1)  ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::append@2 (line 380)

  0x000000010f827cc6: mov    %rsi,%rdi
  0x000000010f827cc9: movabs $0x10edafe68,%rbx  ;   {metadata(method data for {method} {0x000000010ead6838} 'append' '(C)Ljava/lang/StringBuffer;' in 'java/lang/StringBuffer')}
  0x000000010f827cd3: addq   $0x1,0x108(%rbx)
  0x000000010f827cdb: movabs $0x10ed56898,%rdi  ;   {metadata(method data for {method} {0x000000010eadb618} 'append' '(C)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x000000010f827ce5: mov    0xdc(%rdi),%ebx
  0x000000010f827ceb: add    $0x8,%ebx
  0x000000010f827cee: mov    %ebx,0xdc(%rdi)
  0x000000010f827cf4: movabs $0x10eadb618,%rdi  ;   {metadata({method} {0x000000010eadb618} 'append' '(C)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x000000010f827cfe: and    $0x7ffff8,%ebx
  0x000000010f827d04: cmp    $0x0,%ebx
  0x000000010f827d07: je     0x000000010f8280b0
  0x000000010f827d0d: mov    0xc(%rsi),%edi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000010f827d10: inc    %edi
  0x000000010f827d12: mov    %rsi,%rbx
  0x000000010f827d15: movabs $0x10ed56898,%rax  ;   {metadata(method data for {method} {0x000000010eadb618} 'append' '(C)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x000000010f827d1f: addq   $0x1,0x108(%rax)
  0x000000010f827d27: movabs $0x10ec7a878,%rbx  ;   {metadata(method data for {method} {0x000000010eada4e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f827d31: mov    0xdc(%rbx),%eax
  0x000000010f827d37: add    $0x8,%eax
  0x000000010f827d3a: mov    %eax,0xdc(%rbx)
  0x000000010f827d40: movabs $0x10eada4e0,%rbx  ;   {metadata({method} {0x000000010eada4e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f827d4a: and    $0x7ffff8,%eax
  0x000000010f827d50: cmp    $0x0,%eax
  0x000000010f827d53: je     0x000000010f8280c7
  0x000000010f827d59: mov    0x10(%rsi),%ebx
  0x000000010f827d5c: shl    $0x3,%rbx          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000010f827d60: mov    0xc(%rbx),%eax     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; implicit exception: dispatches to 0x000000010f8280de
  0x000000010f827d63: mov    %rdi,%rcx
  0x000000010f827d66: sub    %eax,%ecx
  0x000000010f827d68: cmp    $0x0,%ecx
  0x000000010f827d6b: movabs $0x10ec7a878,%rcx  ;   {metadata(method data for {method} {0x000000010eada4e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f827d75: movabs $0x108,%r8
  0x000000010f827d7f: jle    0x000000010f827d8f
  0x000000010f827d85: movabs $0x118,%r8
  0x000000010f827d8f: mov    (%rcx,%r8,1),%r9
  0x000000010f827d93: lea    0x1(%r9),%r9
  0x000000010f827d97: mov    %r9,(%rcx,%r8,1)
  0x000000010f827d9b: jg     0x000000010f827dad  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000010f827da1: mov    %edx,0xc4(%rsp)
  0x000000010f827da8: jmpq   0x000000010f828016  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000010f827dad: mov    %eax,0xc0(%rsp)
  0x000000010f827db4: mov    %rbx,0xc8(%rsp)
  0x000000010f827dbc: mov    %edx,0xc4(%rsp)
  0x000000010f827dc3: mov    %rsi,%rcx
  0x000000010f827dc6: movabs $0x10ec7a878,%r8   ;   {metadata(method data for {method} {0x000000010eada4e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f827dd0: addq   $0x1,0x128(%r8)
  0x000000010f827dd8: mov    %rdi,%rdx
  0x000000010f827ddb: mov    %rsi,%rdi
  0x000000010f827dde: mov    %rdi,%rsi          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000010f827de1: mov    %rdi,0xd0(%rsp)
  0x000000010f827de9: nop
  0x000000010f827dea: nop
  0x000000010f827deb: nop
  0x000000010f827dec: nop
  0x000000010f827ded: nop
  0x000000010f827dee: nop
  0x000000010f827def: callq  0x000000010f7170a0  ; OopMap{[208]=Oop [200]=Oop [232]=Oop off=628}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {optimized virtual_call}
  0x000000010f827df4: mov    %rax,%r8           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000010f827df7: movabs $0x10ec7a878,%rbx  ;   {metadata(method data for {method} {0x000000010eada4e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f827e01: addq   $0x1,0x138(%rbx)
  0x000000010f827e09: movabs $0x10ec8c690,%rbx  ;   {metadata(method data for {method} {0x000000010eb7ff20} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x000000010f827e13: mov    0xdc(%rbx),%edx
  0x000000010f827e19: add    $0x8,%edx
  0x000000010f827e1c: mov    %edx,0xdc(%rbx)
  0x000000010f827e22: movabs $0x10eb7ff20,%rbx  ;   {metadata({method} {0x000000010eb7ff20} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x000000010f827e2c: and    $0x7ffff8,%edx
  0x000000010f827e32: cmp    $0x0,%edx
  0x000000010f827e35: je     0x000000010f8280e3
  0x000000010f827e3b: mov    %r8,%rbx
  0x000000010f827e3e: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000000010f827e48: movslq %ebx,%rbx
  0x000000010f827e4b: mov    %rbx,%rdi
  0x000000010f827e4e: cmp    $0xffffff,%rbx
  0x000000010f827e55: ja     0x000000010f8280fa
  0x000000010f827e5b: movabs $0x17,%rsi
  0x000000010f827e65: lea    (%rsi,%rbx,2),%rsi
  0x000000010f827e69: and    $0xfffffffffffffff8,%rsi
  0x000000010f827e6d: mov    0x60(%r15),%rax
  0x000000010f827e71: lea    (%rax,%rsi,1),%rsi
  0x000000010f827e75: cmp    0x70(%r15),%rsi
  0x000000010f827e79: ja     0x000000010f8280fa
  0x000000010f827e7f: mov    %rsi,0x60(%r15)
  0x000000010f827e83: sub    %rax,%rsi
  0x000000010f827e86: movq   $0x1,(%rax)
  0x000000010f827e8d: mov    %rdx,%rcx
  0x000000010f827e90: shr    $0x3,%rcx
  0x000000010f827e94: mov    %ecx,0x8(%rax)
  0x000000010f827e97: mov    %ebx,0xc(%rax)
  0x000000010f827e9a: sub    $0x10,%rsi
  0x000000010f827e9e: je     0x000000010f827eb5
  0x000000010f827ea4: xor    %rbx,%rbx
  0x000000010f827ea7: shr    $0x3,%rsi
  0x000000010f827eab: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000010f827eb0: dec    %rsi
  0x000000010f827eb3: jne    0x000000010f827eab  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000010f827eb5: movabs $0x10ec8c690,%rsi  ;   {metadata(method data for {method} {0x000000010eb7ff20} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x000000010f827ebf: addq   $0x1,0x108(%rsi)
  0x000000010f827ec7: movabs $0x10ec2f708,%rsi  ;   {metadata(method data for {method} {0x000000010eb5b7d8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010f827ed1: mov    0xdc(%rsi),%edx
  0x000000010f827ed7: add    $0x8,%edx
  0x000000010f827eda: mov    %edx,0xdc(%rsi)
  0x000000010f827ee0: movabs $0x10eb5b7d8,%rsi  ;   {metadata({method} {0x000000010eb5b7d8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010f827eea: and    $0x7ffff8,%edx
  0x000000010f827ef0: cmp    $0x0,%edx
  0x000000010f827ef3: je     0x000000010f828104
  0x000000010f827ef9: mov    0xc0(%rsp),%esi
  0x000000010f827f00: cmp    %r8d,%esi
  0x000000010f827f03: movabs $0x10ec2f708,%rdx  ;   {metadata(method data for {method} {0x000000010eb5b7d8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010f827f0d: movabs $0x108,%rcx
  0x000000010f827f17: jg     0x000000010f827f27
  0x000000010f827f1d: movabs $0x118,%rcx
  0x000000010f827f27: mov    (%rdx,%rcx,1),%r9
  0x000000010f827f2b: lea    0x1(%r9),%r9
  0x000000010f827f2f: mov    %r9,(%rdx,%rcx,1)
  0x000000010f827f33: jg     0x000000010f827f51  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000010f827f39: movabs $0x10ec2f708,%rdx  ;   {metadata(method data for {method} {0x000000010eb5b7d8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010f827f43: incl   0x128(%rdx)
  0x000000010f827f49: mov    %rsi,%r9
  0x000000010f827f4c: jmpq   0x000000010f827f54  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000010f827f51: mov    %r8,%r9            ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000010f827f54: mov    0xc8(%rsp),%rbx
  0x000000010f827f5c: movabs $0x10ec8c690,%rsi  ;   {metadata(method data for {method} {0x000000010eb7ff20} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x000000010f827f66: addq   $0x1,0x118(%rsi)
  0x000000010f827f6e: mov    %rbx,%rsi
  0x000000010f827f71: mov    $0x0,%edx
  0x000000010f827f76: mov    %rax,%rcx
  0x000000010f827f79: mov    $0x0,%r8d
  0x000000010f827f7f: mov    %rax,0xd8(%rsp)
  0x000000010f827f87: lea    (%rdx,%r9,1),%rdi
  0x000000010f827f8b: cmp    0xc(%rsi),%edi
  0x000000010f827f8e: ja     0x000000010f82811b
  0x000000010f827f94: lea    (%r8,%r9,1),%rdi
  0x000000010f827f98: cmp    0xc(%rcx),%edi
  0x000000010f827f9b: ja     0x000000010f82811b
  0x000000010f827fa1: test   %r9d,%r9d
  0x000000010f827fa4: jl     0x000000010f82811b
  0x000000010f827faa: je     0x000000010f827fe6
  0x000000010f827fb0: movslq %edx,%rdx
  0x000000010f827fb3: movslq %r8d,%r8
  0x000000010f827fb6: lea    0x10(%rsi,%rdx,2),%rdi
  0x000000010f827fbb: lea    0x10(%rcx,%r8,2),%rsi
  0x000000010f827fc0: mov    %r9,%rdx
  0x000000010f827fc3: test   $0xf,%esp
  0x000000010f827fc9: je     0x000000010f827fe1
  0x000000010f827fcf: sub    $0x8,%rsp
  0x000000010f827fd3: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x000000010f827fd8: add    $0x8,%rsp
  0x000000010f827fdc: jmpq   0x000000010f827fe6
  0x000000010f827fe1: callq  Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x000000010f827fe6: mov    0xd8(%rsp),%rax
  0x000000010f827fee: mov    0xd0(%rsp),%rsi
  0x000000010f827ff6: mov    %rax,%r10
  0x000000010f827ff9: shr    $0x3,%r10
  0x000000010f827ffd: mov    %r10d,0x10(%rsi)
  0x000000010f828001: mov    %rsi,%rax
  0x000000010f828004: shr    $0x9,%rax
  0x000000010f828008: movabs $0x1065b9000,%rdi
  0x000000010f828012: movb   $0x0,(%rax,%rdi,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000010f828016: mov    0xc4(%rsp),%edx
  0x000000010f82801d: mov    0x10(%rsi),%eax
  0x000000010f828020: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000010f828024: mov    0xc(%rsi),%edi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000010f828027: mov    %rdi,%rbx
  0x000000010f82802a: inc    %ebx
  0x000000010f82802c: mov    %ebx,0xc(%rsi)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000010f82802f: movslq %edi,%rbx
  0x000000010f828032: cmp    0xc(%rax),%edi     ; implicit exception: dispatches to 0x000000010f828129
  0x000000010f828035: jae    0x000000010f828133
  0x000000010f82803b: mov    %dx,0x10(%rax,%rbx,2)  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000010f828040: lea    0xe0(%rsp),%rax
  0x000000010f828048: mov    0x8(%rax),%rbx
  0x000000010f82804c: mov    (%rbx),%rdi
  0x000000010f82804f: and    $0x7,%rdi
  0x000000010f828053: cmp    $0x5,%rdi
  0x000000010f828057: je     0x000000010f828074
  0x000000010f82805d: mov    (%rax),%rdi
  0x000000010f828060: test   %rdi,%rdi
  0x000000010f828063: je     0x000000010f828074
  0x000000010f828069: lock cmpxchg %rdi,(%rbx)
  0x000000010f82806e: jne    0x000000010f82813c  ;*areturn
                                                ; - java.lang.StringBuffer::append@12 (line 382)

  0x000000010f828074: mov    %rsi,%rax
  0x000000010f828077: add    $0x100,%rsp
  0x000000010f82807e: pop    %rbp
  0x000000010f82807f: test   %eax,-0x8d8cf85(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f828085: retq   
  0x000000010f828086: mov    %rsi,0x8(%rsp)
  0x000000010f82808b: mov    %rdi,(%rsp)
  0x000000010f82808f: callq  0x000000010f7cfc60  ; OopMap{rsi=Oop [232]=Oop off=1300}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ;   {runtime_call}
  0x000000010f828094: jmpq   0x000000010f827c78
  0x000000010f828099: mov    %rdi,0x8(%rsp)
  0x000000010f82809e: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f8280a6: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [232]=Oop off=1323}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ;   {runtime_call}
  0x000000010f8280ab: jmpq   0x000000010f827caa
  0x000000010f8280b0: mov    %rdi,0x8(%rsp)
  0x000000010f8280b5: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f8280bd: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [232]=Oop off=1346}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x000000010f8280c2: jmpq   0x000000010f827d0d
  0x000000010f8280c7: mov    %rbx,0x8(%rsp)
  0x000000010f8280cc: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f8280d4: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [232]=Oop off=1369}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x000000010f8280d9: jmpq   0x000000010f827d59
  0x000000010f8280de: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop rbx=Oop [232]=Oop off=1379}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x000000010f8280e3: mov    %rbx,0x8(%rsp)
  0x000000010f8280e8: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f8280f0: callq  0x000000010f7d1a20  ; OopMap{[208]=Oop [200]=Oop [232]=Oop off=1397}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x000000010f8280f5: jmpq   0x000000010f827e3b
  0x000000010f8280fa: callq  0x000000010f7ce120  ; OopMap{[208]=Oop [200]=Oop [232]=Oop off=1407}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x000000010f8280ff: jmpq   0x000000010f827eb5
  0x000000010f828104: mov    %rsi,0x8(%rsp)
  0x000000010f828109: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f828111: callq  0x000000010f7d1a20  ; OopMap{[208]=Oop [200]=Oop rax=Oop [232]=Oop off=1430}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x000000010f828116: jmpq   0x000000010f827ef9
  0x000000010f82811b: nop
  0x000000010f82811c: nop
  0x000000010f82811d: nop
  0x000000010f82811e: nop
  0x000000010f82811f: callq  0x000000010f717520  ; OopMap{[208]=Oop [216]=Oop [232]=Oop off=1444}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {static_call}
  0x000000010f828124: jmpq   0x000000010f827fe6
  0x000000010f828129: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop rax=Oop [232]=Oop off=1454}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x000000010f82812e: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop rax=Oop [232]=Oop off=1459}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x000000010f828133: mov    %rdi,(%rsp)
  0x000000010f828137: callq  0x000000010f7cca00  ; OopMap{rsi=Oop rax=Oop [232]=Oop off=1468}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x000000010f82813c: lea    0xe0(%rsp),%rax
  0x000000010f828144: mov    %rax,(%rsp)
  0x000000010f828148: callq  0x000000010f7d00a0  ;   {runtime_call}
  0x000000010f82814d: jmpq   0x000000010f828074
  0x000000010f828152: nop
  0x000000010f828153: nop
  0x000000010f828154: mov    0x2a8(%r15),%rax
  0x000000010f82815b: movabs $0x0,%r10
  0x000000010f828165: mov    %r10,0x2a8(%r15)
  0x000000010f82816c: movabs $0x0,%r10
  0x000000010f828176: mov    %r10,0x2b0(%r15)
  0x000000010f82817d: mov    %rax,%rbx
  0x000000010f828180: lea    0xe0(%rsp),%rax
  0x000000010f828188: mov    0x8(%rax),%rsi
  0x000000010f82818c: mov    (%rsi),%rdi
  0x000000010f82818f: and    $0x7,%rdi
  0x000000010f828193: cmp    $0x5,%rdi
  0x000000010f828197: je     0x000000010f8281b4
  0x000000010f82819d: mov    (%rax),%rdi
  0x000000010f8281a0: test   %rdi,%rdi
  0x000000010f8281a3: je     0x000000010f8281b4
  0x000000010f8281a9: lock cmpxchg %rdi,(%rsi)
  0x000000010f8281ae: jne    0x000000010f8281c4
  0x000000010f8281b4: mov    %rbx,%rax
  0x000000010f8281b7: add    $0x100,%rsp
  0x000000010f8281be: pop    %rbp
  0x000000010f8281bf: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f8281c4: lea    0xe0(%rsp),%rax
  0x000000010f8281cc: mov    %rax,(%rsp)
  0x000000010f8281d0: callq  0x000000010f7d00a0  ;   {runtime_call}
  0x000000010f8281d5: jmp    0x000000010f8281b4
  0x000000010f8281d7: hlt    
  0x000000010f8281d8: hlt    
  0x000000010f8281d9: hlt    
  0x000000010f8281da: hlt    
  0x000000010f8281db: hlt    
  0x000000010f8281dc: hlt    
  0x000000010f8281dd: hlt    
  0x000000010f8281de: hlt    
  0x000000010f8281df: hlt    
[Stub Code]
  0x000000010f8281e0: nop                       ;   {no_reloc}
  0x000000010f8281e1: nop
  0x000000010f8281e2: nop
  0x000000010f8281e3: nop
  0x000000010f8281e4: nop
  0x000000010f8281e5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f8281ef: jmpq   0x000000010f8281ef  ;   {runtime_call}
  0x000000010f8281f4: nop
  0x000000010f8281f5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f8281ff: jmpq   0x000000010f8281ff  ;   {runtime_call}
[Exception Handler]
  0x000000010f828204: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f828209: mov    %rsp,-0x28(%rsp)
  0x000000010f82820e: sub    $0x80,%rsp
  0x000000010f828215: mov    %rax,0x78(%rsp)
  0x000000010f82821a: mov    %rcx,0x70(%rsp)
  0x000000010f82821f: mov    %rdx,0x68(%rsp)
  0x000000010f828224: mov    %rbx,0x60(%rsp)
  0x000000010f828229: mov    %rbp,0x50(%rsp)
  0x000000010f82822e: mov    %rsi,0x48(%rsp)
  0x000000010f828233: mov    %rdi,0x40(%rsp)
  0x000000010f828238: mov    %r8,0x38(%rsp)
  0x000000010f82823d: mov    %r9,0x30(%rsp)
  0x000000010f828242: mov    %r10,0x28(%rsp)
  0x000000010f828247: mov    %r11,0x20(%rsp)
  0x000000010f82824c: mov    %r12,0x18(%rsp)
  0x000000010f828251: mov    %r13,0x10(%rsp)
  0x000000010f828256: mov    %r14,0x8(%rsp)
  0x000000010f82825b: mov    %r15,(%rsp)
  0x000000010f82825f: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f828269: movabs $0x10f828209,%rsi  ;   {internal_word}
  0x000000010f828273: mov    %rsp,%rdx
  0x000000010f828276: and    $0xfffffffffffffff0,%rsp
  0x000000010f82827a: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f82827f: hlt    
[Deopt Handler Code]
  0x000000010f828280: movabs $0x10f828280,%r10  ;   {section_word}
  0x000000010f82828a: push   %r10
  0x000000010f82828c: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f828291: hlt    
  0x000000010f828292: hlt    
  0x000000010f828293: hlt    
  0x000000010f828294: hlt    
  0x000000010f828295: hlt    
  0x000000010f828296: hlt    
  0x000000010f828297: hlt    
Decoding compiled method 0x000000010f828690:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ed78468} 'isEqualTo' '(Ljdk/internal/org/objectweb/asm/Item;)Z' in 'jdk/internal/org/objectweb/asm/Item'
  # this:     rsi:rsi   = 'jdk/internal/org/objectweb/asm/Item'
  # parm0:    rdx:rdx   = 'jdk/internal/org/objectweb/asm/Item'
  #           [sp+0x50]  (sp of caller)
  0x000000010f8288c0: mov    0x8(%rsi),%r10d
  0x000000010f8288c4: shl    $0x3,%r10
  0x000000010f8288c8: cmp    %rax,%r10
  0x000000010f8288cb: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f8288d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f8288dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f8288e0: mov    %eax,-0x14000(%rsp)
  0x000000010f8288e7: push   %rbp
  0x000000010f8288e8: sub    $0x40,%rsp
  0x000000010f8288ec: mov    %rsi,0x30(%rsp)
  0x000000010f8288f1: mov    %rdx,0x28(%rsp)
  0x000000010f8288f6: movabs $0x10ed94c08,%rdi  ;   {metadata(method data for {method} {0x000000010ed78468} 'isEqualTo' '(Ljdk/internal/org/objectweb/asm/Item;)Z' in 'jdk/internal/org/objectweb/asm/Item')}
  0x000000010f828900: mov    0xdc(%rdi),%ebx
  0x000000010f828906: add    $0x8,%ebx
  0x000000010f828909: mov    %ebx,0xdc(%rdi)
  0x000000010f82890f: movabs $0x10ed78468,%rdi  ;   {metadata({method} {0x000000010ed78468} 'isEqualTo' '(Ljdk/internal/org/objectweb/asm/Item;)Z' in 'jdk/internal/org/objectweb/asm/Item')}
  0x000000010f828919: and    $0x1ff8,%ebx
  0x000000010f82891f: cmp    $0x0,%ebx
  0x000000010f828922: je     0x000000010f8293eb  ;*aload_0
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@0 (line 309)

  0x000000010f828928: mov    0x18(%rsi),%edi    ;*getfield type
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@1 (line 309)

  0x000000010f82892b: cmp    $0x1,%edi
  0x000000010f82892e: je     0x000000010f829331
  0x000000010f828934: cmp    $0x3,%edi
  0x000000010f828937: je     0x000000010f8289a5
  0x000000010f82893d: cmp    $0x4,%edi
  0x000000010f828940: je     0x000000010f8289a5
  0x000000010f828946: cmp    $0x5,%edi
  0x000000010f828949: je     0x000000010f8289e8
  0x000000010f82894f: cmp    $0x6,%edi
  0x000000010f828952: je     0x000000010f8289e8
  0x000000010f828958: cmp    $0x7,%edi
  0x000000010f82895b: je     0x000000010f829331
  0x000000010f828961: cmp    $0x8,%edi
  0x000000010f828964: je     0x000000010f829331
  0x000000010f82896a: cmp    $0xc,%edi
  0x000000010f82896d: je     0x000000010f829042
  0x000000010f828973: cmp    $0x10,%edi
  0x000000010f828976: je     0x000000010f829331
  0x000000010f82897c: cmp    $0x12,%edi
  0x000000010f82897f: je     0x000000010f828e22
  0x000000010f828985: cmp    $0x1e,%edi
  0x000000010f828988: je     0x000000010f829331
  0x000000010f82898e: cmp    $0x1f,%edi
  0x000000010f828991: je     0x000000010f828cfa
  0x000000010f828997: cmp    $0x20,%edi
  0x000000010f82899a: je     0x000000010f8289e8
  0x000000010f8289a0: jmpq   0x000000010f828a2e  ;*tableswitch
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@4 (line 309)

  0x000000010f8289a5: mov    0x1c(%rdx),%edx    ;*getfield intVal
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@179 (line 322)
                                                ; implicit exception: dispatches to 0x000000010f829402
  0x000000010f8289a8: mov    0x1c(%rsi),%esi    ;*getfield intVal
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@183 (line 322)

  0x000000010f8289ab: cmp    %esi,%edx
  0x000000010f8289ad: movabs $0x10ed94c08,%rdx  ;   {metadata(method data for {method} {0x000000010ed78468} 'isEqualTo' '(Ljdk/internal/org/objectweb/asm/Item;)Z' in 'jdk/internal/org/objectweb/asm/Item')}
  0x000000010f8289b7: movabs $0x390,%rsi
  0x000000010f8289c1: jne    0x000000010f8289d1
  0x000000010f8289c7: movabs $0x3a0,%rsi
  0x000000010f8289d1: mov    (%rdx,%rsi,1),%rdi
  0x000000010f8289d5: lea    0x1(%rdi),%rdi
  0x000000010f8289d9: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f8289dd: jne    0x000000010f82931d
  0x000000010f8289e3: jmpq   0x000000010f829303  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@186 (line 322)

  0x000000010f8289e8: mov    0x10(%rdx),%rdi    ;*getfield longVal
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@161 (line 319)
                                                ; implicit exception: dispatches to 0x000000010f829407
  0x000000010f8289ec: mov    0x10(%rsi),%rdx    ;*getfield longVal
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@165 (line 319)

  0x000000010f8289f0: cmp    %rdx,%rdi
  0x000000010f8289f3: movabs $0x10ed94c08,%rdx  ;   {metadata(method data for {method} {0x000000010ed78468} 'isEqualTo' '(Ljdk/internal/org/objectweb/asm/Item;)Z' in 'jdk/internal/org/objectweb/asm/Item')}
  0x000000010f8289fd: movabs $0x358,%rsi
  0x000000010f828a07: jne    0x000000010f828a17
  0x000000010f828a0d: movabs $0x368,%rsi
  0x000000010f828a17: mov    (%rdx,%rsi,1),%rdi
  0x000000010f828a1b: lea    0x1(%rdi),%rdi
  0x000000010f828a1f: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f828a23: jne    0x000000010f8292ef
  0x000000010f828a29: jmpq   0x000000010f8292d5  ;*lcmp
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@168 (line 319)

  0x000000010f828a2e: mov    0x24(%rdx),%edi    ; implicit exception: dispatches to 0x000000010f82940c
  0x000000010f828a31: shl    $0x3,%rdi          ;*getfield strVal1
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@307 (line 336)

  0x000000010f828a35: mov    0x24(%rsi),%ebx
  0x000000010f828a38: shl    $0x3,%rbx          ;*getfield strVal1
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@311 (line 336)

  0x000000010f828a3c: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x000000010f829411
  0x000000010f828a3f: mov    %rdi,%rax
  0x000000010f828a42: movabs $0x10ed94c08,%rcx  ;   {metadata(method data for {method} {0x000000010ed78468} 'isEqualTo' '(Ljdk/internal/org/objectweb/asm/Item;)Z' in 'jdk/internal/org/objectweb/asm/Item')}
  0x000000010f828a4c: mov    0x8(%rax),%eax
  0x000000010f828a4f: shl    $0x3,%rax
  0x000000010f828a53: cmp    0x5e8(%rcx),%rax
  0x000000010f828a5a: jne    0x000000010f828a69
  0x000000010f828a5c: addq   $0x1,0x5f0(%rcx)
  0x000000010f828a64: jmpq   0x000000010f828acf
  0x000000010f828a69: cmp    0x5f8(%rcx),%rax
  0x000000010f828a70: jne    0x000000010f828a7f
  0x000000010f828a72: addq   $0x1,0x600(%rcx)
  0x000000010f828a7a: jmpq   0x000000010f828acf
  0x000000010f828a7f: cmpq   $0x0,0x5e8(%rcx)
  0x000000010f828a8a: jne    0x000000010f828aa3
  0x000000010f828a8c: mov    %rax,0x5e8(%rcx)
  0x000000010f828a93: movq   $0x1,0x5f0(%rcx)
  0x000000010f828a9e: jmpq   0x000000010f828acf
  0x000000010f828aa3: cmpq   $0x0,0x5f8(%rcx)
  0x000000010f828aae: jne    0x000000010f828ac7
  0x000000010f828ab0: mov    %rax,0x5f8(%rcx)
  0x000000010f828ab7: movq   $0x1,0x600(%rcx)
  0x000000010f828ac2: jmpq   0x000000010f828acf
  0x000000010f828ac7: addq   $0x1,0x5e0(%rcx)
  0x000000010f828acf: mov    %rbx,%rdx
  0x000000010f828ad2: mov    %rdi,%rsi          ;*invokevirtual equals
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@314 (line 336)

  0x000000010f828ad5: nop
  0x000000010f828ad6: nop
  0x000000010f828ad7: callq  0x000000010f7170a0  ; OopMap{[48]=Oop [40]=Oop off=540}
                                                ;*invokevirtual equals
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@314 (line 336)
                                                ;   {optimized virtual_call}
  0x000000010f828adc: cmp    $0x0,%eax
  0x000000010f828adf: movabs $0x10ed94c08,%rdx  ;   {metadata(method data for {method} {0x000000010ed78468} 'isEqualTo' '(Ljdk/internal/org/objectweb/asm/Item;)Z' in 'jdk/internal/org/objectweb/asm/Item')}
  0x000000010f828ae9: movabs $0x610,%rsi
  0x000000010f828af3: je     0x000000010f828b03
  0x000000010f828af9: movabs $0x620,%rsi
  0x000000010f828b03: mov    (%rdx,%rsi,1),%rdi
  0x000000010f828b07: lea    0x1(%rdi),%rdi
  0x000000010f828b0b: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f828b0f: je     0x000000010f8292a7  ;*ifeq
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@317 (line 336)

  0x000000010f828b15: mov    0x28(%rsp),%rdx
  0x000000010f828b1a: mov    0x30(%rsp),%rsi
  0x000000010f828b1f: mov    0x28(%rdx),%edi
  0x000000010f828b22: shl    $0x3,%rdi          ;*getfield strVal2
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@321 (line 336)

  0x000000010f828b26: mov    0x28(%rsi),%ebx
  0x000000010f828b29: shl    $0x3,%rbx          ;*getfield strVal2
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@325 (line 336)

  0x000000010f828b2d: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x000000010f829416
  0x000000010f828b30: mov    %rdi,%rax
  0x000000010f828b33: movabs $0x10ed94c08,%rcx  ;   {metadata(method data for {method} {0x000000010ed78468} 'isEqualTo' '(Ljdk/internal/org/objectweb/asm/Item;)Z' in 'jdk/internal/org/objectweb/asm/Item')}
  0x000000010f828b3d: mov    0x8(%rax),%eax
  0x000000010f828b40: shl    $0x3,%rax
  0x000000010f828b44: cmp    0x638(%rcx),%rax
  0x000000010f828b4b: jne    0x000000010f828b5a
  0x000000010f828b4d: addq   $0x1,0x640(%rcx)
  0x000000010f828b55: jmpq   0x000000010f828bc0
  0x000000010f828b5a: cmp    0x648(%rcx),%rax
  0x000000010f828b61: jne    0x000000010f828b70
  0x000000010f828b63: addq   $0x1,0x650(%rcx)
  0x000000010f828b6b: jmpq   0x000000010f828bc0
  0x000000010f828b70: cmpq   $0x0,0x638(%rcx)
  0x000000010f828b7b: jne    0x000000010f828b94
  0x000000010f828b7d: mov    %rax,0x638(%rcx)
  0x000000010f828b84: movq   $0x1,0x640(%rcx)
  0x000000010f828b8f: jmpq   0x000000010f828bc0
  0x000000010f828b94: cmpq   $0x0,0x648(%rcx)
  0x000000010f828b9f: jne    0x000000010f828bb8
  0x000000010f828ba1: mov    %rax,0x648(%rcx)
  0x000000010f828ba8: movq   $0x1,0x650(%rcx)
  0x000000010f828bb3: jmpq   0x000000010f828bc0
  0x000000010f828bb8: addq   $0x1,0x630(%rcx)
  0x000000010f828bc0: mov    %rbx,%rdx
  0x000000010f828bc3: mov    %rdi,%rsi          ;*invokevirtual equals
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@328 (line 336)

  0x000000010f828bc6: nop
  0x000000010f828bc7: callq  0x000000010f7170a0  ; OopMap{[48]=Oop [40]=Oop off=780}
                                                ;*invokevirtual equals
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@328 (line 336)
                                                ;   {optimized virtual_call}
  0x000000010f828bcc: cmp    $0x0,%eax
  0x000000010f828bcf: movabs $0x10ed94c08,%rdx  ;   {metadata(method data for {method} {0x000000010ed78468} 'isEqualTo' '(Ljdk/internal/org/objectweb/asm/Item;)Z' in 'jdk/internal/org/objectweb/asm/Item')}
  0x000000010f828bd9: movabs $0x660,%rsi
  0x000000010f828be3: je     0x000000010f828bf3
  0x000000010f828be9: movabs $0x670,%rsi
  0x000000010f828bf3: mov    (%rdx,%rsi,1),%rdi
  0x000000010f828bf7: lea    0x1(%rdi),%rdi
  0x000000010f828bfb: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f828bff: je     0x000000010f8292a7  ;*ifeq
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@331 (line 336)

  0x000000010f828c05: mov    0x28(%rsp),%rdx
  0x000000010f828c0a: mov    0x30(%rsp),%rsi
  0x000000010f828c0f: mov    0x2c(%rdx),%edi
  0x000000010f828c12: shl    $0x3,%rdi          ;*getfield strVal3
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@335 (line 336)

  0x000000010f828c16: mov    0x2c(%rsi),%edx
  0x000000010f828c19: shl    $0x3,%rdx          ;*getfield strVal3
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@339 (line 336)

  0x000000010f828c1d: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x000000010f82941b
  0x000000010f828c20: mov    %rdi,%rsi
  0x000000010f828c23: movabs $0x10ed94c08,%rbx  ;   {metadata(method data for {method} {0x000000010ed78468} 'isEqualTo' '(Ljdk/internal/org/objectweb/asm/Item;)Z' in 'jdk/internal/org/objectweb/asm/Item')}
  0x000000010f828c2d: mov    0x8(%rsi),%esi
  0x000000010f828c30: shl    $0x3,%rsi
  0x000000010f828c34: cmp    0x688(%rbx),%rsi
  0x000000010f828c3b: jne    0x000000010f828c4a
  0x000000010f828c3d: addq   $0x1,0x690(%rbx)
  0x000000010f828c45: jmpq   0x000000010f828cb0
  0x000000010f828c4a: cmp    0x698(%rbx),%rsi
  0x000000010f828c51: jne    0x000000010f828c60
  0x000000010f828c53: addq   $0x1,0x6a0(%rbx)
  0x000000010f828c5b: jmpq   0x000000010f828cb0
  0x000000010f828c60: cmpq   $0x0,0x688(%rbx)
  0x000000010f828c6b: jne    0x000000010f828c84
  0x000000010f828c6d: mov    %rsi,0x688(%rbx)
  0x000000010f828c74: movq   $0x1,0x690(%rbx)
  0x000000010f828c7f: jmpq   0x000000010f828cb0
  0x000000010f828c84: cmpq   $0x0,0x698(%rbx)
  0x000000010f828c8f: jne    0x000000010f828ca8
  0x000000010f828c91: mov    %rsi,0x698(%rbx)
  0x000000010f828c98: movq   $0x1,0x6a0(%rbx)
  0x000000010f828ca3: jmpq   0x000000010f828cb0
  0x000000010f828ca8: addq   $0x1,0x680(%rbx)
  0x000000010f828cb0: mov    %rdi,%rsi          ;*invokevirtual equals
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@342 (line 337)

  0x000000010f828cb3: nop
  0x000000010f828cb4: nop
  0x000000010f828cb5: nop
  0x000000010f828cb6: nop
  0x000000010f828cb7: callq  0x000000010f7170a0  ; OopMap{off=1020}
                                                ;*invokevirtual equals
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@342 (line 337)
                                                ;   {optimized virtual_call}
  0x000000010f828cbc: cmp    $0x0,%eax
  0x000000010f828cbf: movabs $0x10ed94c08,%rdx  ;   {metadata(method data for {method} {0x000000010ed78468} 'isEqualTo' '(Ljdk/internal/org/objectweb/asm/Item;)Z' in 'jdk/internal/org/objectweb/asm/Item')}
  0x000000010f828cc9: movabs $0x6b0,%rsi
  0x000000010f828cd3: je     0x000000010f828ce3
  0x000000010f828cd9: movabs $0x6c0,%rsi
  0x000000010f828ce3: mov    (%rdx,%rsi,1),%rdi
  0x000000010f828ce7: lea    0x1(%rdi),%rdi
  0x000000010f828ceb: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f828cef: je     0x000000010f8292a7
  0x000000010f828cf5: jmpq   0x000000010f8292b1  ;*ifeq
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@345 (line 337)

  0x000000010f828cfa: mov    0x1c(%rdx),%edi    ;*getfield intVal
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@196 (line 324)
                                                ; implicit exception: dispatches to 0x000000010f829420
  0x000000010f828cfd: mov    0x1c(%rsi),%ebx    ;*getfield intVal
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@200 (line 324)

  0x000000010f828d00: cmp    %ebx,%edi
  0x000000010f828d02: movabs $0x10ed94c08,%rdi  ;   {metadata(method data for {method} {0x000000010ed78468} 'isEqualTo' '(Ljdk/internal/org/objectweb/asm/Item;)Z' in 'jdk/internal/org/objectweb/asm/Item')}
  0x000000010f828d0c: movabs $0x3c8,%rbx
  0x000000010f828d16: jne    0x000000010f828d26
  0x000000010f828d1c: movabs $0x3d8,%rbx
  0x000000010f828d26: mov    (%rdi,%rbx,1),%rax
  0x000000010f828d2a: lea    0x1(%rax),%rax
  0x000000010f828d2e: mov    %rax,(%rdi,%rbx,1)
  0x000000010f828d32: jne    0x000000010f829279  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@203 (line 324)

  0x000000010f828d38: mov    0x24(%rdx),%edi
  0x000000010f828d3b: shl    $0x3,%rdi          ;*getfield strVal1
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@207 (line 324)

  0x000000010f828d3f: mov    0x24(%rsi),%edx
  0x000000010f828d42: shl    $0x3,%rdx          ;*getfield strVal1
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@211 (line 324)

  0x000000010f828d46: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x000000010f829425
  0x000000010f828d49: mov    %rdi,%rsi
  0x000000010f828d4c: movabs $0x10ed94c08,%rbx  ;   {metadata(method data for {method} {0x000000010ed78468} 'isEqualTo' '(Ljdk/internal/org/objectweb/asm/Item;)Z' in 'jdk/internal/org/objectweb/asm/Item')}
  0x000000010f828d56: mov    0x8(%rsi),%esi
  0x000000010f828d59: shl    $0x3,%rsi
  0x000000010f828d5d: cmp    0x3f0(%rbx),%rsi
  0x000000010f828d64: jne    0x000000010f828d73
  0x000000010f828d66: addq   $0x1,0x3f8(%rbx)
  0x000000010f828d6e: jmpq   0x000000010f828dd9
  0x000000010f828d73: cmp    0x400(%rbx),%rsi
  0x000000010f828d7a: jne    0x000000010f828d89
  0x000000010f828d7c: addq   $0x1,0x408(%rbx)
  0x000000010f828d84: jmpq   0x000000010f828dd9
  0x000000010f828d89: cmpq   $0x0,0x3f0(%rbx)
  0x000000010f828d94: jne    0x000000010f828dad
  0x000000010f828d96: mov    %rsi,0x3f0(%rbx)
  0x000000010f828d9d: movq   $0x1,0x3f8(%rbx)
  0x000000010f828da8: jmpq   0x000000010f828dd9
  0x000000010f828dad: cmpq   $0x0,0x400(%rbx)
  0x000000010f828db8: jne    0x000000010f828dd1
  0x000000010f828dba: mov    %rsi,0x400(%rbx)
  0x000000010f828dc1: movq   $0x1,0x408(%rbx)
  0x000000010f828dcc: jmpq   0x000000010f828dd9
  0x000000010f828dd1: addq   $0x1,0x3e8(%rbx)
  0x000000010f828dd9: mov    %rdi,%rsi          ;*invokevirtual equals
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@214 (line 324)

  0x000000010f828ddc: nop
  0x000000010f828ddd: nop
  0x000000010f828dde: nop
  0x000000010f828ddf: callq  0x000000010f7170a0  ; OopMap{off=1316}
                                                ;*invokevirtual equals
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@214 (line 324)
                                                ;   {optimized virtual_call}
  0x000000010f828de4: cmp    $0x0,%eax
  0x000000010f828de7: movabs $0x10ed94c08,%rdx  ;   {metadata(method data for {method} {0x000000010ed78468} 'isEqualTo' '(Ljdk/internal/org/objectweb/asm/Item;)Z' in 'jdk/internal/org/objectweb/asm/Item')}
  0x000000010f828df1: movabs $0x418,%rsi
  0x000000010f828dfb: je     0x000000010f828e0b
  0x000000010f828e01: movabs $0x428,%rsi
  0x000000010f828e0b: mov    (%rdx,%rsi,1),%rdi
  0x000000010f828e0f: lea    0x1(%rdi),%rdi
  0x000000010f828e13: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f828e17: je     0x000000010f829279
  0x000000010f828e1d: jmpq   0x000000010f829283  ;*ifeq
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@217 (line 324)

  0x000000010f828e22: mov    0x10(%rdx),%rdi    ;*getfield longVal
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@261 (line 328)
                                                ; implicit exception: dispatches to 0x000000010f82942a
  0x000000010f828e26: mov    0x10(%rsi),%rbx    ;*getfield longVal
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@265 (line 328)

  0x000000010f828e2a: cmp    %rbx,%rdi
  0x000000010f828e2d: movabs $0x10ed94c08,%rdi  ;   {metadata(method data for {method} {0x000000010ed78468} 'isEqualTo' '(Ljdk/internal/org/objectweb/asm/Item;)Z' in 'jdk/internal/org/objectweb/asm/Item')}
  0x000000010f828e37: movabs $0x508,%rbx
  0x000000010f828e41: jne    0x000000010f828e51
  0x000000010f828e47: movabs $0x518,%rbx
  0x000000010f828e51: mov    (%rdi,%rbx,1),%rax
  0x000000010f828e55: lea    0x1(%rax),%rax
  0x000000010f828e59: mov    %rax,(%rdi,%rbx,1)
  0x000000010f828e5d: jne    0x000000010f82924b  ;*lcmp
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@268 (line 328)

  0x000000010f828e63: mov    0x24(%rdx),%edi
  0x000000010f828e66: shl    $0x3,%rdi          ;*getfield strVal1
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@273 (line 328)

  0x000000010f828e6a: mov    0x24(%rsi),%ebx
  0x000000010f828e6d: shl    $0x3,%rbx          ;*getfield strVal1
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@277 (line 328)

  0x000000010f828e71: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x000000010f82942f
  0x000000010f828e74: mov    %rdi,%rax
  0x000000010f828e77: movabs $0x10ed94c08,%rcx  ;   {metadata(method data for {method} {0x000000010ed78468} 'isEqualTo' '(Ljdk/internal/org/objectweb/asm/Item;)Z' in 'jdk/internal/org/objectweb/asm/Item')}
  0x000000010f828e81: mov    0x8(%rax),%eax
  0x000000010f828e84: shl    $0x3,%rax
  0x000000010f828e88: cmp    0x530(%rcx),%rax
  0x000000010f828e8f: jne    0x000000010f828e9e
  0x000000010f828e91: addq   $0x1,0x538(%rcx)
  0x000000010f828e99: jmpq   0x000000010f828f04
  0x000000010f828e9e: cmp    0x540(%rcx),%rax
  0x000000010f828ea5: jne    0x000000010f828eb4
  0x000000010f828ea7: addq   $0x1,0x548(%rcx)
  0x000000010f828eaf: jmpq   0x000000010f828f04
  0x000000010f828eb4: cmpq   $0x0,0x530(%rcx)
  0x000000010f828ebf: jne    0x000000010f828ed8
  0x000000010f828ec1: mov    %rax,0x530(%rcx)
  0x000000010f828ec8: movq   $0x1,0x538(%rcx)
  0x000000010f828ed3: jmpq   0x000000010f828f04
  0x000000010f828ed8: cmpq   $0x0,0x540(%rcx)
  0x000000010f828ee3: jne    0x000000010f828efc
  0x000000010f828ee5: mov    %rax,0x540(%rcx)
  0x000000010f828eec: movq   $0x1,0x548(%rcx)
  0x000000010f828ef7: jmpq   0x000000010f828f04
  0x000000010f828efc: addq   $0x1,0x528(%rcx)
  0x000000010f828f04: mov    %rbx,%rdx
  0x000000010f828f07: mov    %rdi,%rsi          ;*invokevirtual equals
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@280 (line 328)

  0x000000010f828f0a: nop
  0x000000010f828f0b: nop
  0x000000010f828f0c: nop
  0x000000010f828f0d: nop
  0x000000010f828f0e: nop
  0x000000010f828f0f: callq  0x000000010f7170a0  ; OopMap{[48]=Oop [40]=Oop off=1620}
                                                ;*invokevirtual equals
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@280 (line 328)
                                                ;   {optimized virtual_call}
  0x000000010f828f14: cmp    $0x0,%eax
  0x000000010f828f17: movabs $0x10ed94c08,%rdx  ;   {metadata(method data for {method} {0x000000010ed78468} 'isEqualTo' '(Ljdk/internal/org/objectweb/asm/Item;)Z' in 'jdk/internal/org/objectweb/asm/Item')}
  0x000000010f828f21: movabs $0x558,%rsi
  0x000000010f828f2b: je     0x000000010f828f3b
  0x000000010f828f31: movabs $0x568,%rsi
  0x000000010f828f3b: mov    (%rdx,%rsi,1),%rdi
  0x000000010f828f3f: lea    0x1(%rdi),%rdi
  0x000000010f828f43: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f828f47: je     0x000000010f82924b  ;*ifeq
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@283 (line 328)

  0x000000010f828f4d: mov    0x28(%rsp),%rdx
  0x000000010f828f52: mov    0x30(%rsp),%rsi
  0x000000010f828f57: mov    0x28(%rdx),%edi
  0x000000010f828f5a: shl    $0x3,%rdi          ;*getfield strVal2
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@287 (line 328)

  0x000000010f828f5e: mov    0x28(%rsi),%edx
  0x000000010f828f61: shl    $0x3,%rdx          ;*getfield strVal2
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@291 (line 328)

  0x000000010f828f65: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x000000010f829434
  0x000000010f828f68: mov    %rdi,%rsi
  0x000000010f828f6b: movabs $0x10ed94c08,%rbx  ;   {metadata(method data for {method} {0x000000010ed78468} 'isEqualTo' '(Ljdk/internal/org/objectweb/asm/Item;)Z' in 'jdk/internal/org/objectweb/asm/Item')}
  0x000000010f828f75: mov    0x8(%rsi),%esi
  0x000000010f828f78: shl    $0x3,%rsi
  0x000000010f828f7c: cmp    0x580(%rbx),%rsi
  0x000000010f828f83: jne    0x000000010f828f92
  0x000000010f828f85: addq   $0x1,0x588(%rbx)
  0x000000010f828f8d: jmpq   0x000000010f828ff8
  0x000000010f828f92: cmp    0x590(%rbx),%rsi
  0x000000010f828f99: jne    0x000000010f828fa8
  0x000000010f828f9b: addq   $0x1,0x598(%rbx)
  0x000000010f828fa3: jmpq   0x000000010f828ff8
  0x000000010f828fa8: cmpq   $0x0,0x580(%rbx)
  0x000000010f828fb3: jne    0x000000010f828fcc
  0x000000010f828fb5: mov    %rsi,0x580(%rbx)
  0x000000010f828fbc: movq   $0x1,0x588(%rbx)
  0x000000010f828fc7: jmpq   0x000000010f828ff8
  0x000000010f828fcc: cmpq   $0x0,0x590(%rbx)
  0x000000010f828fd7: jne    0x000000010f828ff0
  0x000000010f828fd9: mov    %rsi,0x590(%rbx)
  0x000000010f828fe0: movq   $0x1,0x598(%rbx)
  0x000000010f828feb: jmpq   0x000000010f828ff8
  0x000000010f828ff0: addq   $0x1,0x578(%rbx)
  0x000000010f828ff8: mov    %rdi,%rsi          ;*invokevirtual equals
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@294 (line 329)

  0x000000010f828ffb: nop
  0x000000010f828ffc: nop
  0x000000010f828ffd: nop
  0x000000010f828ffe: nop
  0x000000010f828fff: callq  0x000000010f7170a0  ; OopMap{off=1860}
                                                ;*invokevirtual equals
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@294 (line 329)
                                                ;   {optimized virtual_call}
  0x000000010f829004: cmp    $0x0,%eax
  0x000000010f829007: movabs $0x10ed94c08,%rdx  ;   {metadata(method data for {method} {0x000000010ed78468} 'isEqualTo' '(Ljdk/internal/org/objectweb/asm/Item;)Z' in 'jdk/internal/org/objectweb/asm/Item')}
  0x000000010f829011: movabs $0x5a8,%rsi
  0x000000010f82901b: je     0x000000010f82902b
  0x000000010f829021: movabs $0x5b8,%rsi
  0x000000010f82902b: mov    (%rdx,%rsi,1),%rdi
  0x000000010f82902f: lea    0x1(%rdi),%rdi
  0x000000010f829033: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f829037: je     0x000000010f82924b
  0x000000010f82903d: jmpq   0x000000010f829255  ;*ifeq
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@297 (line 329)

  0x000000010f829042: mov    0x24(%rdx),%edi    ; implicit exception: dispatches to 0x000000010f829439
  0x000000010f829045: shl    $0x3,%rdi          ;*getfield strVal1
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@227 (line 326)

  0x000000010f829049: mov    0x24(%rsi),%ebx
  0x000000010f82904c: shl    $0x3,%rbx          ;*getfield strVal1
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@231 (line 326)

  0x000000010f829050: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x000000010f82943e
  0x000000010f829053: mov    %rdi,%rax
  0x000000010f829056: movabs $0x10ed94c08,%rcx  ;   {metadata(method data for {method} {0x000000010ed78468} 'isEqualTo' '(Ljdk/internal/org/objectweb/asm/Item;)Z' in 'jdk/internal/org/objectweb/asm/Item')}
  0x000000010f829060: mov    0x8(%rax),%eax
  0x000000010f829063: shl    $0x3,%rax
  0x000000010f829067: cmp    0x458(%rcx),%rax
  0x000000010f82906e: jne    0x000000010f82907d
  0x000000010f829070: addq   $0x1,0x460(%rcx)
  0x000000010f829078: jmpq   0x000000010f8290e3
  0x000000010f82907d: cmp    0x468(%rcx),%rax
  0x000000010f829084: jne    0x000000010f829093
  0x000000010f829086: addq   $0x1,0x470(%rcx)
  0x000000010f82908e: jmpq   0x000000010f8290e3
  0x000000010f829093: cmpq   $0x0,0x458(%rcx)
  0x000000010f82909e: jne    0x000000010f8290b7
  0x000000010f8290a0: mov    %rax,0x458(%rcx)
  0x000000010f8290a7: movq   $0x1,0x460(%rcx)
  0x000000010f8290b2: jmpq   0x000000010f8290e3
  0x000000010f8290b7: cmpq   $0x0,0x468(%rcx)
  0x000000010f8290c2: jne    0x000000010f8290db
  0x000000010f8290c4: mov    %rax,0x468(%rcx)
  0x000000010f8290cb: movq   $0x1,0x470(%rcx)
  0x000000010f8290d6: jmpq   0x000000010f8290e3
  0x000000010f8290db: addq   $0x1,0x450(%rcx)
  0x000000010f8290e3: mov    %rbx,%rdx
  0x000000010f8290e6: mov    %rdi,%rsi          ;*invokevirtual equals
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@234 (line 326)

  0x000000010f8290e9: nop
  0x000000010f8290ea: nop
  0x000000010f8290eb: nop
  0x000000010f8290ec: nop
  0x000000010f8290ed: nop
  0x000000010f8290ee: nop
  0x000000010f8290ef: callq  0x000000010f7170a0  ; OopMap{[48]=Oop [40]=Oop off=2100}
                                                ;*invokevirtual equals
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@234 (line 326)
                                                ;   {optimized virtual_call}
  0x000000010f8290f4: cmp    $0x0,%eax
  0x000000010f8290f7: movabs $0x10ed94c08,%rdx  ;   {metadata(method data for {method} {0x000000010ed78468} 'isEqualTo' '(Ljdk/internal/org/objectweb/asm/Item;)Z' in 'jdk/internal/org/objectweb/asm/Item')}
  0x000000010f829101: movabs $0x480,%rsi
  0x000000010f82910b: je     0x000000010f82911b
  0x000000010f829111: movabs $0x490,%rsi
  0x000000010f82911b: mov    (%rdx,%rsi,1),%rdi
  0x000000010f82911f: lea    0x1(%rdi),%rdi
  0x000000010f829123: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f829127: je     0x000000010f82921d  ;*ifeq
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@237 (line 326)

  0x000000010f82912d: mov    0x28(%rsp),%rdx
  0x000000010f829132: mov    0x30(%rsp),%rsi
  0x000000010f829137: mov    0x28(%rdx),%edi
  0x000000010f82913a: shl    $0x3,%rdi          ;*getfield strVal2
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@241 (line 326)

  0x000000010f82913e: mov    0x28(%rsi),%edx
  0x000000010f829141: shl    $0x3,%rdx          ;*getfield strVal2
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@245 (line 326)

  0x000000010f829145: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x000000010f829443
  0x000000010f829148: mov    %rdi,%rsi
  0x000000010f82914b: movabs $0x10ed94c08,%rbx  ;   {metadata(method data for {method} {0x000000010ed78468} 'isEqualTo' '(Ljdk/internal/org/objectweb/asm/Item;)Z' in 'jdk/internal/org/objectweb/asm/Item')}
  0x000000010f829155: mov    0x8(%rsi),%esi
  0x000000010f829158: shl    $0x3,%rsi
  0x000000010f82915c: cmp    0x4a8(%rbx),%rsi
  0x000000010f829163: jne    0x000000010f829172
  0x000000010f829165: addq   $0x1,0x4b0(%rbx)
  0x000000010f82916d: jmpq   0x000000010f8291d8
  0x000000010f829172: cmp    0x4b8(%rbx),%rsi
  0x000000010f829179: jne    0x000000010f829188
  0x000000010f82917b: addq   $0x1,0x4c0(%rbx)
  0x000000010f829183: jmpq   0x000000010f8291d8
  0x000000010f829188: cmpq   $0x0,0x4a8(%rbx)
  0x000000010f829193: jne    0x000000010f8291ac
  0x000000010f829195: mov    %rsi,0x4a8(%rbx)
  0x000000010f82919c: movq   $0x1,0x4b0(%rbx)
  0x000000010f8291a7: jmpq   0x000000010f8291d8
  0x000000010f8291ac: cmpq   $0x0,0x4b8(%rbx)
  0x000000010f8291b7: jne    0x000000010f8291d0
  0x000000010f8291b9: mov    %rsi,0x4b8(%rbx)
  0x000000010f8291c0: movq   $0x1,0x4c0(%rbx)
  0x000000010f8291cb: jmpq   0x000000010f8291d8
  0x000000010f8291d0: addq   $0x1,0x4a0(%rbx)
  0x000000010f8291d8: mov    %rdi,%rsi          ;*invokevirtual equals
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@248 (line 326)

  0x000000010f8291db: nop
  0x000000010f8291dc: nop
  0x000000010f8291dd: nop
  0x000000010f8291de: nop
  0x000000010f8291df: callq  0x000000010f7170a0  ; OopMap{off=2340}
                                                ;*invokevirtual equals
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@248 (line 326)
                                                ;   {optimized virtual_call}
  0x000000010f8291e4: cmp    $0x0,%eax
  0x000000010f8291e7: movabs $0x10ed94c08,%rax  ;   {metadata(method data for {method} {0x000000010ed78468} 'isEqualTo' '(Ljdk/internal/org/objectweb/asm/Item;)Z' in 'jdk/internal/org/objectweb/asm/Item')}
  0x000000010f8291f1: movabs $0x4d0,%rdx
  0x000000010f8291fb: je     0x000000010f82920b
  0x000000010f829201: movabs $0x4e0,%rdx
  0x000000010f82920b: mov    (%rax,%rdx,1),%rsi
  0x000000010f82920f: lea    0x1(%rsi),%rsi
  0x000000010f829213: mov    %rsi,(%rax,%rdx,1)
  0x000000010f829217: jne    0x000000010f829227  ;*ifeq
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@251 (line 326)

  0x000000010f82921d: mov    $0x0,%eax
  0x000000010f829222: jmpq   0x000000010f82923c  ;*ireturn
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@259 (line 326)

  0x000000010f829227: movabs $0x10ed94c08,%rax  ;   {metadata(method data for {method} {0x000000010ed78468} 'isEqualTo' '(Ljdk/internal/org/objectweb/asm/Item;)Z' in 'jdk/internal/org/objectweb/asm/Item')}
  0x000000010f829231: incl   0x4f0(%rax)
  0x000000010f829237: mov    $0x1,%eax          ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@255 (line 326)

  0x000000010f82923c: and    $0x1,%eax
  0x000000010f82923f: add    $0x40,%rsp
  0x000000010f829243: pop    %rbp
  0x000000010f829244: test   %eax,-0x8d8e14a(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f82924a: retq                      ;*ireturn
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@259 (line 326)

  0x000000010f82924b: mov    $0x0,%eax
  0x000000010f829250: jmpq   0x000000010f82926a  ;*ireturn
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@305 (line 328)

  0x000000010f829255: movabs $0x10ed94c08,%rax  ;   {metadata(method data for {method} {0x000000010ed78468} 'isEqualTo' '(Ljdk/internal/org/objectweb/asm/Item;)Z' in 'jdk/internal/org/objectweb/asm/Item')}
  0x000000010f82925f: incl   0x5c8(%rax)
  0x000000010f829265: mov    $0x1,%eax          ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@301 (line 329)

  0x000000010f82926a: and    $0x1,%eax
  0x000000010f82926d: add    $0x40,%rsp
  0x000000010f829271: pop    %rbp
  0x000000010f829272: test   %eax,-0x8d8e178(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f829278: retq                      ;*ireturn
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@305 (line 328)

  0x000000010f829279: mov    $0x0,%eax
  0x000000010f82927e: jmpq   0x000000010f829298  ;*ireturn
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@225 (line 324)

  0x000000010f829283: movabs $0x10ed94c08,%rax  ;   {metadata(method data for {method} {0x000000010ed78468} 'isEqualTo' '(Ljdk/internal/org/objectweb/asm/Item;)Z' in 'jdk/internal/org/objectweb/asm/Item')}
  0x000000010f82928d: incl   0x438(%rax)
  0x000000010f829293: mov    $0x1,%eax          ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@221 (line 324)

  0x000000010f829298: and    $0x1,%eax
  0x000000010f82929b: add    $0x40,%rsp
  0x000000010f82929f: pop    %rbp
  0x000000010f8292a0: test   %eax,-0x8d8e1a6(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f8292a6: retq                      ;*ireturn
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@225 (line 324)

  0x000000010f8292a7: mov    $0x0,%eax
  0x000000010f8292ac: jmpq   0x000000010f8292c6  ;*ireturn
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@353 (line 336)

  0x000000010f8292b1: movabs $0x10ed94c08,%rax  ;   {metadata(method data for {method} {0x000000010ed78468} 'isEqualTo' '(Ljdk/internal/org/objectweb/asm/Item;)Z' in 'jdk/internal/org/objectweb/asm/Item')}
  0x000000010f8292bb: incl   0x6d0(%rax)
  0x000000010f8292c1: mov    $0x1,%eax          ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@349 (line 337)

  0x000000010f8292c6: and    $0x1,%eax
  0x000000010f8292c9: add    $0x40,%rsp
  0x000000010f8292cd: pop    %rbp
  0x000000010f8292ce: test   %eax,-0x8d8e1d4(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f8292d4: retq                      ;*ireturn
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@353 (line 336)

  0x000000010f8292d5: movabs $0x10ed94c08,%rax  ;   {metadata(method data for {method} {0x000000010ed78468} 'isEqualTo' '(Ljdk/internal/org/objectweb/asm/Item;)Z' in 'jdk/internal/org/objectweb/asm/Item')}
  0x000000010f8292df: incl   0x378(%rax)
  0x000000010f8292e5: mov    $0x1,%eax
  0x000000010f8292ea: jmpq   0x000000010f8292f4  ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@173 (line 319)

  0x000000010f8292ef: mov    $0x0,%eax
  0x000000010f8292f4: and    $0x1,%eax
  0x000000010f8292f7: add    $0x40,%rsp
  0x000000010f8292fb: pop    %rbp
  0x000000010f8292fc: test   %eax,-0x8d8e202(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f829302: retq                      ;*ireturn
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@177 (line 319)

  0x000000010f829303: movabs $0x10ed94c08,%rax  ;   {metadata(method data for {method} {0x000000010ed78468} 'isEqualTo' '(Ljdk/internal/org/objectweb/asm/Item;)Z' in 'jdk/internal/org/objectweb/asm/Item')}
  0x000000010f82930d: incl   0x3b0(%rax)
  0x000000010f829313: mov    $0x1,%eax
  0x000000010f829318: jmpq   0x000000010f829322  ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@190 (line 322)

  0x000000010f82931d: mov    $0x0,%eax
  0x000000010f829322: and    $0x1,%eax
  0x000000010f829325: add    $0x40,%rsp
  0x000000010f829329: pop    %rbp
  0x000000010f82932a: test   %eax,-0x8d8e230(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f829330: retq                      ;*ireturn
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@194 (line 322)

  0x000000010f829331: mov    0x24(%rdx),%edi    ; implicit exception: dispatches to 0x000000010f829448
  0x000000010f829334: shl    $0x3,%rdi          ;*getfield strVal1
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@149 (line 315)

  0x000000010f829338: mov    0x24(%rsi),%edx
  0x000000010f82933b: shl    $0x3,%rdx          ;*getfield strVal1
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@153 (line 315)

  0x000000010f82933f: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x000000010f82944d
  0x000000010f829342: mov    %rdi,%rsi
  0x000000010f829345: movabs $0x10ed94c08,%rbx  ;   {metadata(method data for {method} {0x000000010ed78468} 'isEqualTo' '(Ljdk/internal/org/objectweb/asm/Item;)Z' in 'jdk/internal/org/objectweb/asm/Item')}
  0x000000010f82934f: mov    0x8(%rsi),%esi
  0x000000010f829352: shl    $0x3,%rsi
  0x000000010f829356: cmp    0x330(%rbx),%rsi
  0x000000010f82935d: jne    0x000000010f82936c
  0x000000010f82935f: addq   $0x1,0x338(%rbx)
  0x000000010f829367: jmpq   0x000000010f8293d2
  0x000000010f82936c: cmp    0x340(%rbx),%rsi
  0x000000010f829373: jne    0x000000010f829382
  0x000000010f829375: addq   $0x1,0x348(%rbx)
  0x000000010f82937d: jmpq   0x000000010f8293d2
  0x000000010f829382: cmpq   $0x0,0x330(%rbx)
  0x000000010f82938d: jne    0x000000010f8293a6
  0x000000010f82938f: mov    %rsi,0x330(%rbx)
  0x000000010f829396: movq   $0x1,0x338(%rbx)
  0x000000010f8293a1: jmpq   0x000000010f8293d2
  0x000000010f8293a6: cmpq   $0x0,0x340(%rbx)
  0x000000010f8293b1: jne    0x000000010f8293ca
  0x000000010f8293b3: mov    %rsi,0x340(%rbx)
  0x000000010f8293ba: movq   $0x1,0x348(%rbx)
  0x000000010f8293c5: jmpq   0x000000010f8293d2
  0x000000010f8293ca: addq   $0x1,0x328(%rbx)
  0x000000010f8293d2: mov    %rdi,%rsi          ;*invokevirtual equals
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@156 (line 315)

  0x000000010f8293d5: nop
  0x000000010f8293d6: nop
  0x000000010f8293d7: callq  0x000000010f7170a0  ; OopMap{off=2844}
                                                ;*invokevirtual equals
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@156 (line 315)
                                                ;   {optimized virtual_call}
  0x000000010f8293dc: and    $0x1,%eax
  0x000000010f8293df: add    $0x40,%rsp
  0x000000010f8293e3: pop    %rbp
  0x000000010f8293e4: test   %eax,-0x8d8e2ea(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f8293ea: retq   
  0x000000010f8293eb: mov    %rdi,0x8(%rsp)
  0x000000010f8293f0: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f8293f8: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [48]=Oop rdx=Oop [40]=Oop off=2877}
                                                ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@-1 (line 309)
                                                ;   {runtime_call}
  0x000000010f8293fd: jmpq   0x000000010f828928
  0x000000010f829402: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop [48]=Oop off=2887}
                                                ;*getfield intVal
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@179 (line 322)
                                                ;   {runtime_call}
  0x000000010f829407: callq  0x000000010f7cd0c0  ; OopMap{rdx=Oop [40]=Oop rsi=Oop [48]=Oop off=2892}
                                                ;*getfield longVal
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@161 (line 319)
                                                ;   {runtime_call}
  0x000000010f82940c: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop [48]=Oop rdx=Oop [40]=Oop off=2897}
                                                ;*getfield strVal1
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@307 (line 336)
                                                ;   {runtime_call}
  0x000000010f829411: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop [48]=Oop rdx=Oop [40]=Oop rdi=Oop rbx=Oop off=2902}
                                                ;*invokevirtual equals
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@314 (line 336)
                                                ;   {runtime_call}
  0x000000010f829416: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop [48]=Oop rdx=Oop [40]=Oop rdi=Oop rbx=Oop off=2907}
                                                ;*invokevirtual equals
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@328 (line 336)
                                                ;   {runtime_call}
  0x000000010f82941b: callq  0x000000010f7cd0c0  ; OopMap{rdi=Oop rdx=Oop off=2912}
                                                ;*invokevirtual equals
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@342 (line 337)
                                                ;   {runtime_call}
  0x000000010f829420: callq  0x000000010f7cd0c0  ; OopMap{rdx=Oop [40]=Oop rsi=Oop [48]=Oop off=2917}
                                                ;*getfield intVal
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@196 (line 324)
                                                ;   {runtime_call}
  0x000000010f829425: callq  0x000000010f7cd0c0  ; OopMap{rdi=Oop rdx=Oop off=2922}
                                                ;*invokevirtual equals
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@214 (line 324)
                                                ;   {runtime_call}
  0x000000010f82942a: callq  0x000000010f7cd0c0  ; OopMap{rdx=Oop [40]=Oop rsi=Oop [48]=Oop off=2927}
                                                ;*getfield longVal
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@261 (line 328)
                                                ;   {runtime_call}
  0x000000010f82942f: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop [48]=Oop rdx=Oop [40]=Oop rdi=Oop rbx=Oop off=2932}
                                                ;*invokevirtual equals
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@280 (line 328)
                                                ;   {runtime_call}
  0x000000010f829434: callq  0x000000010f7cd0c0  ; OopMap{rdi=Oop rdx=Oop off=2937}
                                                ;*invokevirtual equals
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@294 (line 329)
                                                ;   {runtime_call}
  0x000000010f829439: callq  0x000000010f7cd0c0  ; OopMap{rdx=Oop [40]=Oop rsi=Oop [48]=Oop off=2942}
                                                ;*getfield strVal1
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@227 (line 326)
                                                ;   {runtime_call}
  0x000000010f82943e: callq  0x000000010f7cd0c0  ; OopMap{rdx=Oop [40]=Oop rsi=Oop [48]=Oop rdi=Oop rbx=Oop off=2947}
                                                ;*invokevirtual equals
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@234 (line 326)
                                                ;   {runtime_call}
  0x000000010f829443: callq  0x000000010f7cd0c0  ; OopMap{rdi=Oop rdx=Oop off=2952}
                                                ;*invokevirtual equals
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@248 (line 326)
                                                ;   {runtime_call}
  0x000000010f829448: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop [48]=Oop off=2957}
                                                ;*getfield strVal1
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@149 (line 315)
                                                ;   {runtime_call}
  0x000000010f82944d: callq  0x000000010f7cd0c0  ; OopMap{rdi=Oop rdx=Oop off=2962}
                                                ;*invokevirtual equals
                                                ; - jdk.internal.org.objectweb.asm.Item::isEqualTo@156 (line 315)
                                                ;   {runtime_call}
  0x000000010f829452: nop
  0x000000010f829453: nop
  0x000000010f829454: mov    0x2a8(%r15),%rax
  0x000000010f82945b: movabs $0x0,%r10
  0x000000010f829465: mov    %r10,0x2a8(%r15)
  0x000000010f82946c: movabs $0x0,%r10
  0x000000010f829476: mov    %r10,0x2b0(%r15)
  0x000000010f82947d: add    $0x40,%rsp
  0x000000010f829481: pop    %rbp
  0x000000010f829482: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f829487: hlt    
  0x000000010f829488: hlt    
  0x000000010f829489: hlt    
  0x000000010f82948a: hlt    
  0x000000010f82948b: hlt    
  0x000000010f82948c: hlt    
  0x000000010f82948d: hlt    
  0x000000010f82948e: hlt    
  0x000000010f82948f: hlt    
  0x000000010f829490: hlt    
  0x000000010f829491: hlt    
  0x000000010f829492: hlt    
  0x000000010f829493: hlt    
  0x000000010f829494: hlt    
  0x000000010f829495: hlt    
  0x000000010f829496: hlt    
  0x000000010f829497: hlt    
  0x000000010f829498: hlt    
  0x000000010f829499: hlt    
  0x000000010f82949a: hlt    
  0x000000010f82949b: hlt    
  0x000000010f82949c: hlt    
  0x000000010f82949d: hlt    
  0x000000010f82949e: hlt    
  0x000000010f82949f: hlt    
[Stub Code]
  0x000000010f8294a0: nop                       ;   {no_reloc}
  0x000000010f8294a1: nop
  0x000000010f8294a2: nop
  0x000000010f8294a3: nop
  0x000000010f8294a4: nop
  0x000000010f8294a5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f8294af: jmpq   0x000000010f8294af  ;   {runtime_call}
  0x000000010f8294b4: nop
  0x000000010f8294b5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f8294bf: jmpq   0x000000010f8294bf  ;   {runtime_call}
  0x000000010f8294c4: nop
  0x000000010f8294c5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f8294cf: jmpq   0x000000010f8294cf  ;   {runtime_call}
  0x000000010f8294d4: nop
  0x000000010f8294d5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f8294df: jmpq   0x000000010f8294df  ;   {runtime_call}
  0x000000010f8294e4: nop
  0x000000010f8294e5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f8294ef: jmpq   0x000000010f8294ef  ;   {runtime_call}
  0x000000010f8294f4: nop
  0x000000010f8294f5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f8294ff: jmpq   0x000000010f8294ff  ;   {runtime_call}
  0x000000010f829504: nop
  0x000000010f829505: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f82950f: jmpq   0x000000010f82950f  ;   {runtime_call}
  0x000000010f829514: nop
  0x000000010f829515: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f82951f: jmpq   0x000000010f82951f  ;   {runtime_call}
  0x000000010f829524: nop
  0x000000010f829525: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f82952f: jmpq   0x000000010f82952f  ;   {runtime_call}
[Exception Handler]
  0x000000010f829534: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f829539: mov    %rsp,-0x28(%rsp)
  0x000000010f82953e: sub    $0x80,%rsp
  0x000000010f829545: mov    %rax,0x78(%rsp)
  0x000000010f82954a: mov    %rcx,0x70(%rsp)
  0x000000010f82954f: mov    %rdx,0x68(%rsp)
  0x000000010f829554: mov    %rbx,0x60(%rsp)
  0x000000010f829559: mov    %rbp,0x50(%rsp)
  0x000000010f82955e: mov    %rsi,0x48(%rsp)
  0x000000010f829563: mov    %rdi,0x40(%rsp)
  0x000000010f829568: mov    %r8,0x38(%rsp)
  0x000000010f82956d: mov    %r9,0x30(%rsp)
  0x000000010f829572: mov    %r10,0x28(%rsp)
  0x000000010f829577: mov    %r11,0x20(%rsp)
  0x000000010f82957c: mov    %r12,0x18(%rsp)
  0x000000010f829581: mov    %r13,0x10(%rsp)
  0x000000010f829586: mov    %r14,0x8(%rsp)
  0x000000010f82958b: mov    %r15,(%rsp)
  0x000000010f82958f: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f829599: movabs $0x10f829539,%rsi  ;   {internal_word}
  0x000000010f8295a3: mov    %rsp,%rdx
  0x000000010f8295a6: and    $0xfffffffffffffff0,%rsp
  0x000000010f8295aa: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f8295af: hlt    
[Deopt Handler Code]
  0x000000010f8295b0: movabs $0x10f8295b0,%r10  ;   {section_word}
  0x000000010f8295ba: push   %r10
  0x000000010f8295bc: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f8295c1: hlt    
  0x000000010f8295c2: hlt    
  0x000000010f8295c3: hlt    
  0x000000010f8295c4: hlt    
  0x000000010f8295c5: hlt    
  0x000000010f8295c6: hlt    
  0x000000010f8295c7: hlt    
Decoding compiled method 0x000000010f829ed0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010eace820} 'checkSlotCount' '(I)V' in 'java/lang/invoke/MethodType'
  # parm0:    rsi       = int
  #           [sp+0x90]  (sp of caller)
  0x000000010f82a0c0: mov    %eax,-0x14000(%rsp)
  0x000000010f82a0c7: push   %rbp
  0x000000010f82a0c8: sub    $0x80,%rsp
  0x000000010f82a0cf: movabs $0x10edada48,%rdx  ;   {metadata(method data for {method} {0x000000010eace820} 'checkSlotCount' '(I)V' in 'java/lang/invoke/MethodType')}
  0x000000010f82a0d9: mov    0xdc(%rdx),%edi
  0x000000010f82a0df: add    $0x8,%edi
  0x000000010f82a0e2: mov    %edi,0xdc(%rdx)
  0x000000010f82a0e8: movabs $0x10eace820,%rdx  ;   {metadata({method} {0x000000010eace820} 'checkSlotCount' '(I)V' in 'java/lang/invoke/MethodType')}
  0x000000010f82a0f2: and    $0x1ff8,%edi
  0x000000010f82a0f8: cmp    $0x0,%edi
  0x000000010f82a0fb: je     0x000000010f82a6e6  ;*iload_0
                                                ; - java.lang.invoke.MethodType::checkSlotCount@0 (line 184)

  0x000000010f82a101: mov    %rsi,%rdx
  0x000000010f82a104: and    $0xff,%edx
  0x000000010f82a10a: cmp    %esi,%edx
  0x000000010f82a10c: movabs $0x10edada48,%rdx  ;   {metadata(method data for {method} {0x000000010eace820} 'checkSlotCount' '(I)V' in 'java/lang/invoke/MethodType')}
  0x000000010f82a116: movabs $0x108,%rdi
  0x000000010f82a120: je     0x000000010f82a130
  0x000000010f82a126: movabs $0x118,%rdi
  0x000000010f82a130: mov    (%rdx,%rdi,1),%rax
  0x000000010f82a134: lea    0x1(%rax),%rax
  0x000000010f82a138: mov    %rax,(%rdx,%rdi,1)
  0x000000010f82a13c: jne    0x000000010f82a151  ;*if_icmpeq
                                                ; - java.lang.invoke.MethodType::checkSlotCount@6 (line 184)

  0x000000010f82a142: add    $0x80,%rsp
  0x000000010f82a149: pop    %rbp
  0x000000010f82a14a: test   %eax,-0x8d8f050(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f82a150: retq                      ;*return
                                                ; - java.lang.invoke.MethodType::checkSlotCount@32 (line 186)

  0x000000010f82a151: mov    %esi,0x58(%rsp)
  0x000000010f82a155: movabs $0x7c000dc88,%rdx  ;   {metadata('java/lang/StringBuilder')}
  0x000000010f82a15f: mov    0x60(%r15),%rax
  0x000000010f82a163: lea    0x18(%rax),%rdi
  0x000000010f82a167: cmp    0x70(%r15),%rdi
  0x000000010f82a16b: ja     0x000000010f82a6fd
  0x000000010f82a171: mov    %rdi,0x60(%r15)
  0x000000010f82a175: mov    0xa8(%rdx),%rcx
  0x000000010f82a17c: mov    %rcx,(%rax)
  0x000000010f82a17f: mov    %rdx,%rcx
  0x000000010f82a182: shr    $0x3,%rcx
  0x000000010f82a186: mov    %ecx,0x8(%rax)
  0x000000010f82a189: xor    %rcx,%rcx
  0x000000010f82a18c: mov    %ecx,0xc(%rax)
  0x000000010f82a18f: xor    %rcx,%rcx
  0x000000010f82a192: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.invoke.MethodType::checkSlotCount@9 (line 185)

  0x000000010f82a196: mov    %rax,%rbx
  0x000000010f82a199: movabs $0x10edada48,%rdx  ;   {metadata(method data for {method} {0x000000010eace820} 'checkSlotCount' '(I)V' in 'java/lang/invoke/MethodType')}
  0x000000010f82a1a3: addq   $0x1,0x128(%rdx)
  0x000000010f82a1ab: movabs $0x10ed0ae70,%rbx  ;   {metadata(method data for {method} {0x000000010eaddf30} '<init>' '()V' in 'java/lang/StringBuilder')}
  0x000000010f82a1b5: mov    0xdc(%rbx),%edx
  0x000000010f82a1bb: add    $0x8,%edx
  0x000000010f82a1be: mov    %edx,0xdc(%rbx)
  0x000000010f82a1c4: movabs $0x10eaddf30,%rbx  ;   {metadata({method} {0x000000010eaddf30} '<init>' '()V' in 'java/lang/StringBuilder')}
  0x000000010f82a1ce: and    $0x7ffff8,%edx
  0x000000010f82a1d4: cmp    $0x0,%edx
  0x000000010f82a1d7: je     0x000000010f82a70a
  0x000000010f82a1dd: mov    %rax,%rbx
  0x000000010f82a1e0: movabs $0x10ed0ae70,%rdx  ;   {metadata(method data for {method} {0x000000010eaddf30} '<init>' '()V' in 'java/lang/StringBuilder')}
  0x000000010f82a1ea: addq   $0x1,0x108(%rdx)
  0x000000010f82a1f2: movabs $0x10ec9a3e8,%rbx  ;   {metadata(method data for {method} {0x000000010eada260} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f82a1fc: mov    0xdc(%rbx),%edx
  0x000000010f82a202: add    $0x8,%edx
  0x000000010f82a205: mov    %edx,0xdc(%rbx)
  0x000000010f82a20b: movabs $0x10eada260,%rbx  ;   {metadata({method} {0x000000010eada260} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f82a215: and    $0x7ffff8,%edx
  0x000000010f82a21b: cmp    $0x0,%edx
  0x000000010f82a21e: je     0x000000010f82a721
  0x000000010f82a224: mov    %rax,%rbx
  0x000000010f82a227: movabs $0x10ec9a3e8,%rdx  ;   {metadata(method data for {method} {0x000000010eada260} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f82a231: addq   $0x1,0x108(%rdx)
  0x000000010f82a239: movabs $0x10ebdca10,%rbx  ;   {metadata(method data for {method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f82a243: mov    0xdc(%rbx),%edx
  0x000000010f82a249: add    $0x8,%edx
  0x000000010f82a24c: mov    %edx,0xdc(%rbx)
  0x000000010f82a252: movabs $0x10ea65480,%rbx  ;   {metadata({method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f82a25c: and    $0x7ffff8,%edx
  0x000000010f82a262: cmp    $0x0,%edx
  0x000000010f82a265: je     0x000000010f82a738
  0x000000010f82a26b: mov    $0x10,%ebx
  0x000000010f82a270: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000000010f82a27a: mov    %rax,%r9
  0x000000010f82a27d: movslq %ebx,%rbx
  0x000000010f82a280: mov    %rbx,%rdi
  0x000000010f82a283: cmp    $0xffffff,%rbx
  0x000000010f82a28a: ja     0x000000010f82a74f
  0x000000010f82a290: movabs $0x17,%rsi
  0x000000010f82a29a: lea    (%rsi,%rbx,2),%rsi
  0x000000010f82a29e: and    $0xfffffffffffffff8,%rsi
  0x000000010f82a2a2: mov    0x60(%r15),%rax
  0x000000010f82a2a6: lea    (%rax,%rsi,1),%rsi
  0x000000010f82a2aa: cmp    0x70(%r15),%rsi
  0x000000010f82a2ae: ja     0x000000010f82a74f
  0x000000010f82a2b4: mov    %rsi,0x60(%r15)
  0x000000010f82a2b8: sub    %rax,%rsi
  0x000000010f82a2bb: movq   $0x1,(%rax)
  0x000000010f82a2c2: mov    %rdx,%rcx
  0x000000010f82a2c5: shr    $0x3,%rcx
  0x000000010f82a2c9: mov    %ecx,0x8(%rax)
  0x000000010f82a2cc: mov    %ebx,0xc(%rax)
  0x000000010f82a2cf: sub    $0x10,%rsi
  0x000000010f82a2d3: je     0x000000010f82a2ea
  0x000000010f82a2d9: xor    %rbx,%rbx
  0x000000010f82a2dc: shr    $0x3,%rsi
  0x000000010f82a2e0: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000010f82a2e5: dec    %rsi
  0x000000010f82a2e8: jne    0x000000010f82a2e0  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::<init>@6 (line 68)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@13 (line 185)

  0x000000010f82a2ea: mov    %rax,%r10
  0x000000010f82a2ed: shr    $0x3,%r10
  0x000000010f82a2f1: mov    %r10d,0x10(%r9)
  0x000000010f82a2f5: mov    %r9,%rax
  0x000000010f82a2f8: shr    $0x9,%rax
  0x000000010f82a2fc: movabs $0x1065b9000,%rdx
  0x000000010f82a306: movb   $0x0,(%rax,%rdx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::<init>@8 (line 68)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@13 (line 185)

  0x000000010f82a30a: mov    %r9,%rax
  0x000000010f82a30d: movabs $0x10edada48,%rdx  ;   {metadata(method data for {method} {0x000000010eace820} 'checkSlotCount' '(I)V' in 'java/lang/invoke/MethodType')}
  0x000000010f82a317: mov    0x8(%rax),%eax
  0x000000010f82a31a: shl    $0x3,%rax
  0x000000010f82a31e: cmp    0x140(%rdx),%rax
  0x000000010f82a325: jne    0x000000010f82a334
  0x000000010f82a327: addq   $0x1,0x148(%rdx)
  0x000000010f82a32f: jmpq   0x000000010f82a39a
  0x000000010f82a334: cmp    0x150(%rdx),%rax
  0x000000010f82a33b: jne    0x000000010f82a34a
  0x000000010f82a33d: addq   $0x1,0x158(%rdx)
  0x000000010f82a345: jmpq   0x000000010f82a39a
  0x000000010f82a34a: cmpq   $0x0,0x140(%rdx)
  0x000000010f82a355: jne    0x000000010f82a36e
  0x000000010f82a357: mov    %rax,0x140(%rdx)
  0x000000010f82a35e: movq   $0x1,0x148(%rdx)
  0x000000010f82a369: jmpq   0x000000010f82a39a
  0x000000010f82a36e: cmpq   $0x0,0x150(%rdx)
  0x000000010f82a379: jne    0x000000010f82a392
  0x000000010f82a37b: mov    %rax,0x150(%rdx)
  0x000000010f82a382: movq   $0x1,0x158(%rdx)
  0x000000010f82a38d: jmpq   0x000000010f82a39a
  0x000000010f82a392: addq   $0x1,0x138(%rdx)
  0x000000010f82a39a: movabs $0x10ec81440,%rdx  ;   {metadata(method data for {method} {0x000000010eade248} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f82a3a4: mov    0xdc(%rdx),%esi
  0x000000010f82a3aa: add    $0x8,%esi
  0x000000010f82a3ad: mov    %esi,0xdc(%rdx)
  0x000000010f82a3b3: movabs $0x10eade248,%rdx  ;   {metadata({method} {0x000000010eade248} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f82a3bd: and    $0x7ffff8,%esi
  0x000000010f82a3c3: cmp    $0x0,%esi
  0x000000010f82a3c6: je     0x000000010f82a759
  0x000000010f82a3cc: mov    %r9,%rax
  0x000000010f82a3cf: movabs $0x10ec81440,%rdx  ;   {metadata(method data for {method} {0x000000010eade248} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f82a3d9: addq   $0x1,0x108(%rdx)
  0x000000010f82a3e1: movabs $0x795968e60,%rdx  ;   {oop("bad parameter count ")}
  0x000000010f82a3eb: mov    %r9,%rsi           ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@18 (line 185)

  0x000000010f82a3ee: mov    %r9,0x50(%rsp)
  0x000000010f82a3f3: nop
  0x000000010f82a3f4: nop
  0x000000010f82a3f5: nop
  0x000000010f82a3f6: nop
  0x000000010f82a3f7: callq  0x000000010f7170a0  ; OopMap{[80]=Oop off=828}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@18 (line 185)
                                                ;   {optimized virtual_call}
  0x000000010f82a3fc: mov    0x50(%rsp),%rax
  0x000000010f82a401: movabs $0x10edada48,%rdx  ;   {metadata(method data for {method} {0x000000010eace820} 'checkSlotCount' '(I)V' in 'java/lang/invoke/MethodType')}
  0x000000010f82a40b: mov    0x8(%rax),%eax
  0x000000010f82a40e: shl    $0x3,%rax
  0x000000010f82a412: cmp    0x170(%rdx),%rax
  0x000000010f82a419: jne    0x000000010f82a428
  0x000000010f82a41b: addq   $0x1,0x178(%rdx)
  0x000000010f82a423: jmpq   0x000000010f82a48e
  0x000000010f82a428: cmp    0x180(%rdx),%rax
  0x000000010f82a42f: jne    0x000000010f82a43e
  0x000000010f82a431: addq   $0x1,0x188(%rdx)
  0x000000010f82a439: jmpq   0x000000010f82a48e
  0x000000010f82a43e: cmpq   $0x0,0x170(%rdx)
  0x000000010f82a449: jne    0x000000010f82a462
  0x000000010f82a44b: mov    %rax,0x170(%rdx)
  0x000000010f82a452: movq   $0x1,0x178(%rdx)
  0x000000010f82a45d: jmpq   0x000000010f82a48e
  0x000000010f82a462: cmpq   $0x0,0x180(%rdx)
  0x000000010f82a46d: jne    0x000000010f82a486
  0x000000010f82a46f: mov    %rax,0x180(%rdx)
  0x000000010f82a476: movq   $0x1,0x188(%rdx)
  0x000000010f82a481: jmpq   0x000000010f82a48e
  0x000000010f82a486: addq   $0x1,0x168(%rdx)
  0x000000010f82a48e: movabs $0x10ed0b000,%rdx  ;   {metadata(method data for {method} {0x000000010eade708} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f82a498: mov    0xdc(%rdx),%esi
  0x000000010f82a49e: add    $0x8,%esi
  0x000000010f82a4a1: mov    %esi,0xdc(%rdx)
  0x000000010f82a4a7: movabs $0x10eade708,%rdx  ;   {metadata({method} {0x000000010eade708} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f82a4b1: and    $0x7ffff8,%esi
  0x000000010f82a4b7: cmp    $0x0,%esi
  0x000000010f82a4ba: je     0x000000010f82a770
  0x000000010f82a4c0: mov    0x50(%rsp),%rax
  0x000000010f82a4c5: movabs $0x10ed0b000,%rdx  ;   {metadata(method data for {method} {0x000000010eade708} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f82a4cf: addq   $0x1,0x108(%rdx)
  0x000000010f82a4d7: mov    0x58(%rsp),%edx
  0x000000010f82a4db: mov    0x50(%rsp),%rsi    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@22 (line 185)

  0x000000010f82a4e0: nop
  0x000000010f82a4e1: nop
  0x000000010f82a4e2: nop
  0x000000010f82a4e3: nop
  0x000000010f82a4e4: nop
  0x000000010f82a4e5: nop
  0x000000010f82a4e6: nop
  0x000000010f82a4e7: callq  0x000000010f7170a0  ; OopMap{[80]=Oop off=1068}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@22 (line 185)
                                                ;   {optimized virtual_call}
  0x000000010f82a4ec: mov    0x50(%rsp),%rax
  0x000000010f82a4f1: movabs $0x10edada48,%rdx  ;   {metadata(method data for {method} {0x000000010eace820} 'checkSlotCount' '(I)V' in 'java/lang/invoke/MethodType')}
  0x000000010f82a4fb: mov    0x8(%rax),%eax
  0x000000010f82a4fe: shl    $0x3,%rax
  0x000000010f82a502: cmp    0x1a0(%rdx),%rax
  0x000000010f82a509: jne    0x000000010f82a518
  0x000000010f82a50b: addq   $0x1,0x1a8(%rdx)
  0x000000010f82a513: jmpq   0x000000010f82a57e
  0x000000010f82a518: cmp    0x1b0(%rdx),%rax
  0x000000010f82a51f: jne    0x000000010f82a52e
  0x000000010f82a521: addq   $0x1,0x1b8(%rdx)
  0x000000010f82a529: jmpq   0x000000010f82a57e
  0x000000010f82a52e: cmpq   $0x0,0x1a0(%rdx)
  0x000000010f82a539: jne    0x000000010f82a552
  0x000000010f82a53b: mov    %rax,0x1a0(%rdx)
  0x000000010f82a542: movq   $0x1,0x1a8(%rdx)
  0x000000010f82a54d: jmpq   0x000000010f82a57e
  0x000000010f82a552: cmpq   $0x0,0x1b0(%rdx)
  0x000000010f82a55d: jne    0x000000010f82a576
  0x000000010f82a55f: mov    %rax,0x1b0(%rdx)
  0x000000010f82a566: movq   $0x1,0x1b8(%rdx)
  0x000000010f82a571: jmpq   0x000000010f82a57e
  0x000000010f82a576: addq   $0x1,0x198(%rdx)
  0x000000010f82a57e: movabs $0x10ed00b80,%rdx  ;   {metadata(method data for {method} {0x000000010eadf5f8} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder')}
  0x000000010f82a588: mov    0xdc(%rdx),%esi
  0x000000010f82a58e: add    $0x8,%esi
  0x000000010f82a591: mov    %esi,0xdc(%rdx)
  0x000000010f82a597: movabs $0x10eadf5f8,%rdx  ;   {metadata({method} {0x000000010eadf5f8} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder')}
  0x000000010f82a5a1: and    $0x7ffff8,%esi
  0x000000010f82a5a7: cmp    $0x0,%esi
  0x000000010f82a5aa: je     0x000000010f82a787
  0x000000010f82a5b0: movabs $0x7c00016d0,%rdx  ;   {metadata('java/lang/String')}
  0x000000010f82a5ba: mov    0x60(%r15),%rax
  0x000000010f82a5be: lea    0x18(%rax),%rdi
  0x000000010f82a5c2: cmp    0x70(%r15),%rdi
  0x000000010f82a5c6: ja     0x000000010f82a79e
  0x000000010f82a5cc: mov    %rdi,0x60(%r15)
  0x000000010f82a5d0: mov    0xa8(%rdx),%rcx
  0x000000010f82a5d7: mov    %rcx,(%rax)
  0x000000010f82a5da: mov    %rdx,%rcx
  0x000000010f82a5dd: shr    $0x3,%rcx
  0x000000010f82a5e1: mov    %ecx,0x8(%rax)
  0x000000010f82a5e4: xor    %rcx,%rcx
  0x000000010f82a5e7: mov    %ecx,0xc(%rax)
  0x000000010f82a5ea: xor    %rcx,%rcx
  0x000000010f82a5ed: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@25 (line 185)

  0x000000010f82a5f1: mov    0x50(%rsp),%rdx
  0x000000010f82a5f6: mov    0x10(%rdx),%ecx
  0x000000010f82a5f9: shl    $0x3,%rcx          ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 407)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@25 (line 185)

  0x000000010f82a5fd: mov    0xc(%rdx),%r8d     ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 407)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@25 (line 185)

  0x000000010f82a601: mov    %rax,%rdx
  0x000000010f82a604: movabs $0x10ed00b80,%rsi  ;   {metadata(method data for {method} {0x000000010eadf5f8} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder')}
  0x000000010f82a60e: addq   $0x1,0x108(%rsi)
  0x000000010f82a616: mov    %rcx,%rdx
  0x000000010f82a619: mov    $0x0,%ecx
  0x000000010f82a61e: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@25 (line 185)

  0x000000010f82a621: mov    %rax,0x60(%rsp)
  0x000000010f82a626: nop
  0x000000010f82a627: callq  0x000000010f7170a0  ; OopMap{[96]=Oop off=1388}
                                                ;*invokespecial <init>
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@25 (line 185)
                                                ;   {optimized virtual_call}
  0x000000010f82a62c: movabs $0x10edada48,%rdx  ;   {metadata(method data for {method} {0x000000010eace820} 'checkSlotCount' '(I)V' in 'java/lang/invoke/MethodType')}
  0x000000010f82a636: addq   $0x1,0x1c8(%rdx)
  0x000000010f82a63e: movabs $0x10eda56f0,%rdx  ;   {metadata(method data for {method} {0x000000010ecd9338} 'newIllegalArgumentException' '(Ljava/lang/String;)Ljava/lang/RuntimeException;' in 'java/lang/invoke/MethodHandleStatics')}
  0x000000010f82a648: mov    0xdc(%rdx),%esi
  0x000000010f82a64e: add    $0x8,%esi
  0x000000010f82a651: mov    %esi,0xdc(%rdx)
  0x000000010f82a657: movabs $0x10ecd9338,%rdx  ;   {metadata({method} {0x000000010ecd9338} 'newIllegalArgumentException' '(Ljava/lang/String;)Ljava/lang/RuntimeException;' in 'java/lang/invoke/MethodHandleStatics')}
  0x000000010f82a661: and    $0x7ffff8,%esi
  0x000000010f82a667: cmp    $0x0,%esi
  0x000000010f82a66a: je     0x000000010f82a7ab
  0x000000010f82a670: jmpq   0x000000010f82a7d1  ;   {no_reloc}
  0x000000010f82a675: add    %al,(%rax)
  0x000000010f82a677: add    %al,(%rax)
  0x000000010f82a679: add    %cl,-0x75(%rcx)
  0x000000010f82a67c: rex.RXB (bad) 
  0x000000010f82a67e: lea    0x20(%rax),%rdi
  0x000000010f82a682: cmp    0x70(%r15),%rdi
  0x000000010f82a686: ja     0x000000010f82a7db
  0x000000010f82a68c: mov    %rdi,0x60(%r15)
  0x000000010f82a690: mov    0xa8(%rdx),%rcx
  0x000000010f82a697: mov    %rcx,(%rax)
  0x000000010f82a69a: mov    %rdx,%rcx
  0x000000010f82a69d: shr    $0x3,%rcx
  0x000000010f82a6a1: mov    %ecx,0x8(%rax)
  0x000000010f82a6a4: xor    %rcx,%rcx
  0x000000010f82a6a7: mov    %ecx,0xc(%rax)
  0x000000010f82a6aa: xor    %rcx,%rcx
  0x000000010f82a6ad: mov    %rcx,0x10(%rax)
  0x000000010f82a6b1: mov    %rcx,0x18(%rax)    ;*new  ; - java.lang.invoke.MethodHandleStatics::newIllegalArgumentException@0 (line 139)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@28 (line 185)

  0x000000010f82a6b5: mov    %rax,%rdx
  0x000000010f82a6b8: movabs $0x10eda56f0,%rsi  ;   {metadata(method data for {method} {0x000000010ecd9338} 'newIllegalArgumentException' '(Ljava/lang/String;)Ljava/lang/RuntimeException;' in 'java/lang/invoke/MethodHandleStatics')}
  0x000000010f82a6c2: addq   $0x1,0x108(%rsi)
  0x000000010f82a6ca: mov    0x60(%rsp),%rdx
  0x000000010f82a6cf: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.invoke.MethodHandleStatics::newIllegalArgumentException@5 (line 139)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@28 (line 185)

  0x000000010f82a6d2: mov    %rax,0x68(%rsp)
  0x000000010f82a6d7: callq  0x000000010f7170a0  ; OopMap{[104]=Oop off=1564}
                                                ;*invokespecial <init>
                                                ; - java.lang.invoke.MethodHandleStatics::newIllegalArgumentException@5 (line 139)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@28 (line 185)
                                                ;   {optimized virtual_call}
  0x000000010f82a6dc: mov    0x68(%rsp),%rax
  0x000000010f82a6e1: jmpq   0x000000010f82a813
  0x000000010f82a6e6: mov    %rdx,0x8(%rsp)
  0x000000010f82a6eb: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f82a6f3: callq  0x000000010f7d1a20  ; OopMap{off=1592}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MethodType::checkSlotCount@-1 (line 184)
                                                ;   {runtime_call}
  0x000000010f82a6f8: jmpq   0x000000010f82a101
  0x000000010f82a6fd: mov    %rdx,%rdx
  0x000000010f82a700: callq  0x000000010f7cd820  ; OopMap{off=1605}
                                                ;*new  ; - java.lang.invoke.MethodType::checkSlotCount@9 (line 185)
                                                ;   {runtime_call}
  0x000000010f82a705: jmpq   0x000000010f82a196
  0x000000010f82a70a: mov    %rbx,0x8(%rsp)
  0x000000010f82a70f: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f82a717: callq  0x000000010f7d1a20  ; OopMap{rax=Oop off=1628}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::<init>@-1 (line 89)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@13 (line 185)
                                                ;   {runtime_call}
  0x000000010f82a71c: jmpq   0x000000010f82a1dd
  0x000000010f82a721: mov    %rbx,0x8(%rsp)
  0x000000010f82a726: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f82a72e: callq  0x000000010f7d1a20  ; OopMap{rax=Oop off=1651}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::<init>@-1 (line 67)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@13 (line 185)
                                                ;   {runtime_call}
  0x000000010f82a733: jmpq   0x000000010f82a224
  0x000000010f82a738: mov    %rbx,0x8(%rsp)
  0x000000010f82a73d: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f82a745: callq  0x000000010f7d1a20  ; OopMap{rax=Oop off=1674}
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::<init>@1 (line 67)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@13 (line 185)
                                                ;   {runtime_call}
  0x000000010f82a74a: jmpq   0x000000010f82a26b
  0x000000010f82a74f: callq  0x000000010f7ce120  ; OopMap{r9=Oop off=1684}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::<init>@6 (line 68)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@13 (line 185)
                                                ;   {runtime_call}
  0x000000010f82a754: jmpq   0x000000010f82a2ea
  0x000000010f82a759: mov    %rdx,0x8(%rsp)
  0x000000010f82a75e: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f82a766: callq  0x000000010f7d1a20  ; OopMap{r9=Oop off=1707}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@18 (line 185)
                                                ;   {runtime_call}
  0x000000010f82a76b: jmpq   0x000000010f82a3cc
  0x000000010f82a770: mov    %rdx,0x8(%rsp)
  0x000000010f82a775: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f82a77d: callq  0x000000010f7d1a20  ; OopMap{[80]=Oop off=1730}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@22 (line 185)
                                                ;   {runtime_call}
  0x000000010f82a782: jmpq   0x000000010f82a4c0
  0x000000010f82a787: mov    %rdx,0x8(%rsp)
  0x000000010f82a78c: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f82a794: callq  0x000000010f7d1a20  ; OopMap{[80]=Oop off=1753}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@25 (line 185)
                                                ;   {runtime_call}
  0x000000010f82a799: jmpq   0x000000010f82a5b0
  0x000000010f82a79e: mov    %rdx,%rdx
  0x000000010f82a7a1: callq  0x000000010f7cd820  ; OopMap{[80]=Oop off=1766}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@25 (line 185)
                                                ;   {runtime_call}
  0x000000010f82a7a6: jmpq   0x000000010f82a5f1
  0x000000010f82a7ab: mov    %rdx,0x8(%rsp)
  0x000000010f82a7b0: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f82a7b8: callq  0x000000010f7d1a20  ; OopMap{[96]=Oop off=1789}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MethodHandleStatics::newIllegalArgumentException@-1 (line 139)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@28 (line 185)
                                                ;   {runtime_call}
  0x000000010f82a7bd: jmpq   0x000000010f82a670
  0x000000010f82a7c2: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f82a7cc: mov    $0xa050f00,%eax
  0x000000010f82a7d1: callq  0x000000010f7d08e0  ; OopMap{[96]=Oop off=1814}
                                                ;*new  ; - java.lang.invoke.MethodHandleStatics::newIllegalArgumentException@0 (line 139)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@28 (line 185)
                                                ;   {runtime_call}
  0x000000010f82a7d6: jmpq   0x000000010f82a670
  0x000000010f82a7db: mov    %rdx,%rdx
  0x000000010f82a7de: callq  0x000000010f7cd820  ; OopMap{[96]=Oop off=1827}
                                                ;*new  ; - java.lang.invoke.MethodHandleStatics::newIllegalArgumentException@0 (line 139)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@28 (line 185)
                                                ;   {runtime_call}
  0x000000010f82a7e3: jmpq   0x000000010f82a6b5
  0x000000010f82a7e8: nop
  0x000000010f82a7e9: nop
  0x000000010f82a7ea: mov    0x2a8(%r15),%rax
  0x000000010f82a7f1: movabs $0x0,%r10
  0x000000010f82a7fb: mov    %r10,0x2a8(%r15)
  0x000000010f82a802: movabs $0x0,%r10
  0x000000010f82a80c: mov    %r10,0x2b0(%r15)
  0x000000010f82a813: add    $0x80,%rsp
  0x000000010f82a81a: pop    %rbp
  0x000000010f82a81b: jmpq   0x000000010f73f560  ;   {runtime_call}
[Stub Code]
  0x000000010f82a820: nop                       ;   {no_reloc}
  0x000000010f82a821: nop
  0x000000010f82a822: nop
  0x000000010f82a823: nop
  0x000000010f82a824: nop
  0x000000010f82a825: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f82a82f: jmpq   0x000000010f82a82f  ;   {runtime_call}
  0x000000010f82a834: nop
  0x000000010f82a835: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f82a83f: jmpq   0x000000010f82a83f  ;   {runtime_call}
  0x000000010f82a844: nop
  0x000000010f82a845: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f82a84f: jmpq   0x000000010f82a84f  ;   {runtime_call}
  0x000000010f82a854: nop
  0x000000010f82a855: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f82a85f: jmpq   0x000000010f82a85f  ;   {runtime_call}
[Exception Handler]
  0x000000010f82a864: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f82a869: mov    %rsp,-0x28(%rsp)
  0x000000010f82a86e: sub    $0x80,%rsp
  0x000000010f82a875: mov    %rax,0x78(%rsp)
  0x000000010f82a87a: mov    %rcx,0x70(%rsp)
  0x000000010f82a87f: mov    %rdx,0x68(%rsp)
  0x000000010f82a884: mov    %rbx,0x60(%rsp)
  0x000000010f82a889: mov    %rbp,0x50(%rsp)
  0x000000010f82a88e: mov    %rsi,0x48(%rsp)
  0x000000010f82a893: mov    %rdi,0x40(%rsp)
  0x000000010f82a898: mov    %r8,0x38(%rsp)
  0x000000010f82a89d: mov    %r9,0x30(%rsp)
  0x000000010f82a8a2: mov    %r10,0x28(%rsp)
  0x000000010f82a8a7: mov    %r11,0x20(%rsp)
  0x000000010f82a8ac: mov    %r12,0x18(%rsp)
  0x000000010f82a8b1: mov    %r13,0x10(%rsp)
  0x000000010f82a8b6: mov    %r14,0x8(%rsp)
  0x000000010f82a8bb: mov    %r15,(%rsp)
  0x000000010f82a8bf: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f82a8c9: movabs $0x10f82a869,%rsi  ;   {internal_word}
  0x000000010f82a8d3: mov    %rsp,%rdx
  0x000000010f82a8d6: and    $0xfffffffffffffff0,%rsp
  0x000000010f82a8da: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f82a8df: hlt    
[Deopt Handler Code]
  0x000000010f82a8e0: movabs $0x10f82a8e0,%r10  ;   {section_word}
  0x000000010f82a8ea: push   %r10
  0x000000010f82a8ec: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f82a8f1: hlt    
  0x000000010f82a8f2: hlt    
  0x000000010f82a8f3: hlt    
  0x000000010f82a8f4: hlt    
  0x000000010f82a8f5: hlt    
  0x000000010f82a8f6: hlt    
  0x000000010f82a8f7: hlt    
Decoding compiled method 0x000000010f823910:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ed88860} 'push' '(I)V' in 'jdk/internal/org/objectweb/asm/Frame'
  # this:     rsi:rsi   = 'jdk/internal/org/objectweb/asm/Frame'
  # parm0:    rdx       = int
  #           [sp+0x80]  (sp of caller)
  0x000000010f823aa0: mov    0x8(%rsi),%r10d
  0x000000010f823aa4: shl    $0x3,%r10
  0x000000010f823aa8: cmp    %rax,%r10
  0x000000010f823aab: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f823ab1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f823abc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f823ac0: mov    %eax,-0x14000(%rsp)
  0x000000010f823ac7: push   %rbp
  0x000000010f823ac8: sub    $0x70,%rsp
  0x000000010f823acc: movabs $0x10edabcb8,%rbx  ;   {metadata(method data for {method} {0x000000010ed88860} 'push' '(I)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f823ad6: mov    0xdc(%rbx),%edi
  0x000000010f823adc: add    $0x8,%edi
  0x000000010f823adf: mov    %edi,0xdc(%rbx)
  0x000000010f823ae5: movabs $0x10ed88860,%rbx  ;   {metadata({method} {0x000000010ed88860} 'push' '(I)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f823aef: and    $0x1ff8,%edi
  0x000000010f823af5: cmp    $0x0,%edi
  0x000000010f823af8: je     0x000000010f823e67  ;*aload_0
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@0 (line 606)

  0x000000010f823afe: mov    0x24(%rsi),%ebx
  0x000000010f823b01: shl    $0x3,%rbx          ;*getfield outputStack
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@1 (line 606)

  0x000000010f823b05: cmp    $0x0,%rbx
  0x000000010f823b09: movabs $0x10edabcb8,%rbx  ;   {metadata(method data for {method} {0x000000010ed88860} 'push' '(I)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f823b13: movabs $0x108,%rdi
  0x000000010f823b1d: jne    0x000000010f823b2d
  0x000000010f823b23: movabs $0x118,%rdi
  0x000000010f823b2d: mov    (%rbx,%rdi,1),%rax
  0x000000010f823b31: lea    0x1(%rax),%rax
  0x000000010f823b35: mov    %rax,(%rbx,%rdi,1)
  0x000000010f823b39: mov    %edx,0x58(%rsp)
  0x000000010f823b3d: je     0x000000010f823b4b  ;*ifnonnull
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@4 (line 606)

  0x000000010f823b43: mov    %rsi,%r13
  0x000000010f823b46: jmpq   0x000000010f823bea  ;*aload_0
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@15 (line 609)

  0x000000010f823b4b: mov    $0xa,%ebx
  0x000000010f823b50: movabs $0x7c0000b68,%rdx  ;   {metadata({type array int})}
  0x000000010f823b5a: mov    %rsi,%r13
  0x000000010f823b5d: movslq %ebx,%rbx
  0x000000010f823b60: mov    %rbx,%rdi
  0x000000010f823b63: cmp    $0xffffff,%rbx
  0x000000010f823b6a: ja     0x000000010f823e7e
  0x000000010f823b70: movabs $0x17,%rsi
  0x000000010f823b7a: lea    (%rsi,%rbx,4),%rsi
  0x000000010f823b7e: and    $0xfffffffffffffff8,%rsi
  0x000000010f823b82: mov    0x60(%r15),%rax
  0x000000010f823b86: lea    (%rax,%rsi,1),%rsi
  0x000000010f823b8a: cmp    0x70(%r15),%rsi
  0x000000010f823b8e: ja     0x000000010f823e7e
  0x000000010f823b94: mov    %rsi,0x60(%r15)
  0x000000010f823b98: sub    %rax,%rsi
  0x000000010f823b9b: movq   $0x1,(%rax)
  0x000000010f823ba2: mov    %rdx,%rcx
  0x000000010f823ba5: shr    $0x3,%rcx
  0x000000010f823ba9: mov    %ecx,0x8(%rax)
  0x000000010f823bac: mov    %ebx,0xc(%rax)
  0x000000010f823baf: sub    $0x10,%rsi
  0x000000010f823bb3: je     0x000000010f823bca
  0x000000010f823bb9: xor    %rbx,%rbx
  0x000000010f823bbc: shr    $0x3,%rsi
  0x000000010f823bc0: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000010f823bc5: dec    %rsi
  0x000000010f823bc8: jne    0x000000010f823bc0  ;*newarray
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@10 (line 607)

  0x000000010f823bca: mov    %rax,%r10
  0x000000010f823bcd: shr    $0x3,%r10
  0x000000010f823bd1: mov    %r10d,0x24(%r13)
  0x000000010f823bd5: mov    %r13,%rsi
  0x000000010f823bd8: shr    $0x9,%rsi
  0x000000010f823bdc: movabs $0x1065b9000,%rbx
  0x000000010f823be6: movb   $0x0,(%rsi,%rbx,1)  ;*putfield outputStack
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@12 (line 607)

  0x000000010f823bea: mov    0x24(%r13),%r8d
  0x000000010f823bee: shl    $0x3,%r8           ;*getfield outputStack
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@16 (line 609)

  0x000000010f823bf2: mov    0xc(%r8),%r9d      ;*arraylength
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@19 (line 609)
                                                ; implicit exception: dispatches to 0x000000010f823e88
  0x000000010f823bf6: mov    0xc(%r13),%ebx     ;*getfield outputStackTop
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@22 (line 610)

  0x000000010f823bfa: cmp    %r9d,%ebx
  0x000000010f823bfd: movabs $0x10edabcb8,%rdx  ;   {metadata(method data for {method} {0x000000010ed88860} 'push' '(I)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f823c07: movabs $0x128,%rsi
  0x000000010f823c11: jl     0x000000010f823c21
  0x000000010f823c17: movabs $0x138,%rsi
  0x000000010f823c21: mov    (%rdx,%rsi,1),%rdi
  0x000000010f823c25: lea    0x1(%rdi),%rdi
  0x000000010f823c29: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f823c2d: jge    0x000000010f823c3f  ;*if_icmplt
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@26 (line 610)

  0x000000010f823c33: mov    0x58(%rsp),%edx
  0x000000010f823c37: mov    %r13,%rsi
  0x000000010f823c3a: jmpq   0x000000010f823def  ;*aload_0
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@60 (line 616)

  0x000000010f823c3f: inc    %ebx
  0x000000010f823c41: mov    %r9,%rdx
  0x000000010f823c44: shl    %edx
  0x000000010f823c46: movabs $0x10edabcb8,%rsi  ;   {metadata(method data for {method} {0x000000010ed88860} 'push' '(I)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f823c50: addq   $0x1,0x148(%rsi)
  0x000000010f823c58: movabs $0x10ec812e0,%rsi  ;   {metadata(method data for {method} {0x000000010eb5b520} 'max' '(II)I' in 'java/lang/Math')}
  0x000000010f823c62: mov    0xdc(%rsi),%edi
  0x000000010f823c68: add    $0x8,%edi
  0x000000010f823c6b: mov    %edi,0xdc(%rsi)
  0x000000010f823c71: movabs $0x10eb5b520,%rsi  ;   {metadata({method} {0x000000010eb5b520} 'max' '(II)I' in 'java/lang/Math')}
  0x000000010f823c7b: and    $0x7ffff8,%edi
  0x000000010f823c81: cmp    $0x0,%edi
  0x000000010f823c84: je     0x000000010f823e8d
  0x000000010f823c8a: cmp    %edx,%ebx
  0x000000010f823c8c: movabs $0x10ec812e0,%rsi  ;   {metadata(method data for {method} {0x000000010eb5b520} 'max' '(II)I' in 'java/lang/Math')}
  0x000000010f823c96: movabs $0x108,%rdi
  0x000000010f823ca0: jl     0x000000010f823cb0
  0x000000010f823ca6: movabs $0x118,%rdi
  0x000000010f823cb0: mov    (%rsi,%rdi,1),%rax
  0x000000010f823cb4: lea    0x1(%rax),%rax
  0x000000010f823cb8: mov    %rax,(%rsi,%rdi,1)
  0x000000010f823cbc: jl     0x000000010f823cd7  ;*if_icmplt
                                                ; - java.lang.Math::max@2 (line 1252)
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@38 (line 611)

  0x000000010f823cc2: movabs $0x10ec812e0,%rdx  ;   {metadata(method data for {method} {0x000000010eb5b520} 'max' '(II)I' in 'java/lang/Math')}
  0x000000010f823ccc: incl   0x128(%rdx)
  0x000000010f823cd2: jmpq   0x000000010f823cda  ;*goto
                                                ; - java.lang.Math::max@6 (line 1252)
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@38 (line 611)

  0x000000010f823cd7: mov    %rdx,%rbx          ;*ireturn
                                                ; - java.lang.Math::max@10 (line 1252)
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@38 (line 611)

  0x000000010f823cda: mov    %r13,0x50(%rsp)
  0x000000010f823cdf: movabs $0x7c0000b68,%rdx  ;   {metadata({type array int})}
  0x000000010f823ce9: movslq %ebx,%rbx
  0x000000010f823cec: mov    %rbx,%rdi
  0x000000010f823cef: cmp    $0xffffff,%rbx
  0x000000010f823cf6: ja     0x000000010f823ea4
  0x000000010f823cfc: movabs $0x17,%rsi
  0x000000010f823d06: lea    (%rsi,%rbx,4),%rsi
  0x000000010f823d0a: and    $0xfffffffffffffff8,%rsi
  0x000000010f823d0e: mov    0x60(%r15),%rax
  0x000000010f823d12: lea    (%rax,%rsi,1),%rsi
  0x000000010f823d16: cmp    0x70(%r15),%rsi
  0x000000010f823d1a: ja     0x000000010f823ea4
  0x000000010f823d20: mov    %rsi,0x60(%r15)
  0x000000010f823d24: sub    %rax,%rsi
  0x000000010f823d27: movq   $0x1,(%rax)
  0x000000010f823d2e: mov    %rdx,%rcx
  0x000000010f823d31: shr    $0x3,%rcx
  0x000000010f823d35: mov    %ecx,0x8(%rax)
  0x000000010f823d38: mov    %ebx,0xc(%rax)
  0x000000010f823d3b: sub    $0x10,%rsi
  0x000000010f823d3f: je     0x000000010f823d56
  0x000000010f823d45: xor    %rbx,%rbx
  0x000000010f823d48: shr    $0x3,%rsi
  0x000000010f823d4c: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000010f823d51: dec    %rsi
  0x000000010f823d54: jne    0x000000010f823d4c  ;*newarray
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@41 (line 611)

  0x000000010f823d56: movabs $0x10edabcb8,%rsi  ;   {metadata(method data for {method} {0x000000010ed88860} 'push' '(I)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f823d60: addq   $0x1,0x158(%rsi)
  0x000000010f823d68: mov    %r8,%rsi
  0x000000010f823d6b: mov    $0x0,%edx
  0x000000010f823d70: mov    %rax,%rcx
  0x000000010f823d73: mov    $0x0,%r8d
  0x000000010f823d79: mov    %rax,0x48(%rsp)
  0x000000010f823d7e: lea    (%r8,%r9,1),%rdi
  0x000000010f823d82: cmp    0xc(%rcx),%edi
  0x000000010f823d85: ja     0x000000010f823eae
  0x000000010f823d8b: movslq %edx,%rdx
  0x000000010f823d8e: movslq %r8d,%r8
  0x000000010f823d91: lea    0x10(%rsi,%rdx,4),%rdi
  0x000000010f823d96: lea    0x10(%rcx,%r8,4),%rsi
  0x000000010f823d9b: mov    %r9,%rdx
  0x000000010f823d9e: test   $0xf,%esp
  0x000000010f823da4: je     0x000000010f823dbc
  0x000000010f823daa: sub    $0x8,%rsp
  0x000000010f823dae: callq  Stub::jint_disjoint_arraycopy
                                                ;   {runtime_call}
  0x000000010f823db3: add    $0x8,%rsp
  0x000000010f823db7: jmpq   0x000000010f823dc1
  0x000000010f823dbc: callq  Stub::jint_disjoint_arraycopy
                                                ;*invokestatic arraycopy
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@52 (line 612)
                                                ;   {runtime_call}
  0x000000010f823dc1: mov    0x48(%rsp),%rax
  0x000000010f823dc6: mov    0x50(%rsp),%rsi
  0x000000010f823dcb: mov    %rax,%r10
  0x000000010f823dce: shr    $0x3,%r10
  0x000000010f823dd2: mov    %r10d,0x24(%rsi)
  0x000000010f823dd6: mov    %rsi,%rdi
  0x000000010f823dd9: shr    $0x9,%rdi
  0x000000010f823ddd: movabs $0x1065b9000,%rbx
  0x000000010f823de7: movb   $0x0,(%rdi,%rbx,1)  ;*putfield outputStack
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@57 (line 613)

  0x000000010f823deb: mov    0x58(%rsp),%edx
  0x000000010f823def: mov    0x24(%rsi),%edi
  0x000000010f823df2: shl    $0x3,%rdi          ;*getfield outputStack
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@61 (line 616)

  0x000000010f823df6: mov    0xc(%rsi),%ebx     ;*getfield outputStackTop
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@66 (line 616)

  0x000000010f823df9: mov    %rbx,%rax
  0x000000010f823dfc: inc    %eax
  0x000000010f823dfe: mov    %eax,0xc(%rsi)     ;*putfield outputStackTop
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@72 (line 616)

  0x000000010f823e01: movslq %ebx,%rcx
  0x000000010f823e04: cmp    0xc(%rdi),%ebx     ; implicit exception: dispatches to 0x000000010f823eb9
  0x000000010f823e07: jae    0x000000010f823ec3
  0x000000010f823e0d: mov    %edx,0x10(%rdi,%rcx,4)  ;*iastore
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@76 (line 616)

  0x000000010f823e11: mov    0x14(%rsi),%esi
  0x000000010f823e14: shl    $0x3,%rsi          ;*getfield owner
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@78 (line 618)

  0x000000010f823e18: mov    0x1c(%rsi),%edi    ;*getfield inputStackTop
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@81 (line 618)
                                                ; implicit exception: dispatches to 0x000000010f823ecc
  0x000000010f823e1b: add    %eax,%edi
  0x000000010f823e1d: mov    0x20(%rsi),%ebx    ;*getfield outputStackMax
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@95 (line 619)

  0x000000010f823e20: cmp    %ebx,%edi
  0x000000010f823e22: movabs $0x10edabcb8,%rbx  ;   {metadata(method data for {method} {0x000000010ed88860} 'push' '(I)V' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f823e2c: movabs $0x168,%rax
  0x000000010f823e36: jle    0x000000010f823e46
  0x000000010f823e3c: movabs $0x178,%rax
  0x000000010f823e46: mov    (%rbx,%rax,1),%rdx
  0x000000010f823e4a: lea    0x1(%rdx),%rdx
  0x000000010f823e4e: mov    %rdx,(%rbx,%rax,1)
  0x000000010f823e52: jle    0x000000010f823e5b  ;*if_icmple
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@98 (line 619)

  0x000000010f823e58: mov    %edi,0x20(%rsi)    ;*putfield outputStackMax
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@106 (line 620)

  0x000000010f823e5b: add    $0x70,%rsp
  0x000000010f823e5f: pop    %rbp
  0x000000010f823e60: test   %eax,-0x8d88d66(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f823e66: retq   
  0x000000010f823e67: mov    %rbx,0x8(%rsp)
  0x000000010f823e6c: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f823e74: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=985}
                                                ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@-1 (line 606)
                                                ;   {runtime_call}
  0x000000010f823e79: jmpq   0x000000010f823afe
  0x000000010f823e7e: callq  0x000000010f7ce120  ; OopMap{r13=Oop off=995}
                                                ;*newarray
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@10 (line 607)
                                                ;   {runtime_call}
  0x000000010f823e83: jmpq   0x000000010f823bca
  0x000000010f823e88: callq  0x000000010f7cd0c0  ; OopMap{r13=Oop r8=Oop off=1005}
                                                ;*arraylength
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@19 (line 609)
                                                ;   {runtime_call}
  0x000000010f823e8d: mov    %rsi,0x8(%rsp)
  0x000000010f823e92: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f823e9a: callq  0x000000010f7d1a20  ; OopMap{r13=Oop r8=Oop off=1023}
                                                ;*synchronization entry
                                                ; - java.lang.Math::max@-1 (line 1252)
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@38 (line 611)
                                                ;   {runtime_call}
  0x000000010f823e9f: jmpq   0x000000010f823c8a
  0x000000010f823ea4: callq  0x000000010f7ce120  ; OopMap{r8=Oop [80]=Oop off=1033}
                                                ;*newarray
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@41 (line 611)
                                                ;   {runtime_call}
  0x000000010f823ea9: jmpq   0x000000010f823d56
  0x000000010f823eae: nop
  0x000000010f823eaf: callq  0x000000010f717520  ; OopMap{[72]=Oop [80]=Oop off=1044}
                                                ;*invokestatic arraycopy
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@52 (line 612)
                                                ;   {static_call}
  0x000000010f823eb4: jmpq   0x000000010f823dc1
  0x000000010f823eb9: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop rdi=Oop off=1054}
                                                ;*iastore
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@76 (line 616)
                                                ;   {runtime_call}
  0x000000010f823ebe: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop rdi=Oop off=1059}
                                                ;*iastore
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@76 (line 616)
                                                ;   {runtime_call}
  0x000000010f823ec3: mov    %rbx,(%rsp)
  0x000000010f823ec7: callq  0x000000010f7cca00  ; OopMap{rsi=Oop rdi=Oop off=1068}
                                                ;*iastore
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@76 (line 616)
                                                ;   {runtime_call}
  0x000000010f823ecc: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop off=1073}
                                                ;*getfield inputStackTop
                                                ; - jdk.internal.org.objectweb.asm.Frame::push@81 (line 618)
                                                ;   {runtime_call}
  0x000000010f823ed1: nop
  0x000000010f823ed2: nop
  0x000000010f823ed3: mov    0x2a8(%r15),%rax
  0x000000010f823eda: movabs $0x0,%r10
  0x000000010f823ee4: mov    %r10,0x2a8(%r15)
  0x000000010f823eeb: movabs $0x0,%r10
  0x000000010f823ef5: mov    %r10,0x2b0(%r15)
  0x000000010f823efc: add    $0x70,%rsp
  0x000000010f823f00: pop    %rbp
  0x000000010f823f01: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f823f06: hlt    
  0x000000010f823f07: hlt    
  0x000000010f823f08: hlt    
  0x000000010f823f09: hlt    
  0x000000010f823f0a: hlt    
  0x000000010f823f0b: hlt    
  0x000000010f823f0c: hlt    
  0x000000010f823f0d: hlt    
  0x000000010f823f0e: hlt    
  0x000000010f823f0f: hlt    
  0x000000010f823f10: hlt    
  0x000000010f823f11: hlt    
  0x000000010f823f12: hlt    
  0x000000010f823f13: hlt    
  0x000000010f823f14: hlt    
  0x000000010f823f15: hlt    
  0x000000010f823f16: hlt    
  0x000000010f823f17: hlt    
  0x000000010f823f18: hlt    
  0x000000010f823f19: hlt    
  0x000000010f823f1a: hlt    
  0x000000010f823f1b: hlt    
  0x000000010f823f1c: hlt    
  0x000000010f823f1d: hlt    
  0x000000010f823f1e: hlt    
  0x000000010f823f1f: hlt    
[Stub Code]
  0x000000010f823f20: nop                       ;   {no_reloc}
  0x000000010f823f21: nop
  0x000000010f823f22: nop
  0x000000010f823f23: nop
  0x000000010f823f24: nop
  0x000000010f823f25: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f823f2f: jmpq   0x000000010f823f2f  ;   {runtime_call}
[Exception Handler]
  0x000000010f823f34: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f823f39: mov    %rsp,-0x28(%rsp)
  0x000000010f823f3e: sub    $0x80,%rsp
  0x000000010f823f45: mov    %rax,0x78(%rsp)
  0x000000010f823f4a: mov    %rcx,0x70(%rsp)
  0x000000010f823f4f: mov    %rdx,0x68(%rsp)
  0x000000010f823f54: mov    %rbx,0x60(%rsp)
  0x000000010f823f59: mov    %rbp,0x50(%rsp)
  0x000000010f823f5e: mov    %rsi,0x48(%rsp)
  0x000000010f823f63: mov    %rdi,0x40(%rsp)
  0x000000010f823f68: mov    %r8,0x38(%rsp)
  0x000000010f823f6d: mov    %r9,0x30(%rsp)
  0x000000010f823f72: mov    %r10,0x28(%rsp)
  0x000000010f823f77: mov    %r11,0x20(%rsp)
  0x000000010f823f7c: mov    %r12,0x18(%rsp)
  0x000000010f823f81: mov    %r13,0x10(%rsp)
  0x000000010f823f86: mov    %r14,0x8(%rsp)
  0x000000010f823f8b: mov    %r15,(%rsp)
  0x000000010f823f8f: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f823f99: movabs $0x10f823f39,%rsi  ;   {internal_word}
  0x000000010f823fa3: mov    %rsp,%rdx
  0x000000010f823fa6: and    $0xfffffffffffffff0,%rsp
  0x000000010f823faa: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f823faf: hlt    
[Deopt Handler Code]
  0x000000010f823fb0: movabs $0x10f823fb0,%r10  ;   {section_word}
  0x000000010f823fba: push   %r10
  0x000000010f823fbc: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f823fc1: hlt    
  0x000000010f823fc2: hlt    
  0x000000010f823fc3: hlt    
  0x000000010f823fc4: hlt    
  0x000000010f823fc5: hlt    
  0x000000010f823fc6: hlt    
  0x000000010f823fc7: hlt    
Decoding compiled method 0x000000010f82acd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010eaba148} 'type' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MethodHandle'
  #           [sp+0x40]  (sp of caller)
  0x000000010f82ae20: mov    0x8(%rsi),%r10d
  0x000000010f82ae24: shl    $0x3,%r10
  0x000000010f82ae28: cmp    %rax,%r10
  0x000000010f82ae2b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f82ae31: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f82ae3c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f82ae40: mov    %eax,-0x14000(%rsp)
  0x000000010f82ae47: push   %rbp
  0x000000010f82ae48: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.lang.invoke.MethodHandle::type@0 (line 446)

  0x000000010f82ae4c: mov    0x10(%rsi),%eax
  0x000000010f82ae4f: shl    $0x3,%rax          ;*getfield type
                                                ; - java.lang.invoke.MethodHandle::type@1 (line 446)

  0x000000010f82ae53: add    $0x30,%rsp
  0x000000010f82ae57: pop    %rbp
  0x000000010f82ae58: test   %eax,-0x8d8fd5e(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f82ae5e: retq   
  0x000000010f82ae5f: nop
  0x000000010f82ae60: nop
  0x000000010f82ae61: mov    0x2a8(%r15),%rax
  0x000000010f82ae68: movabs $0x0,%r10
  0x000000010f82ae72: mov    %r10,0x2a8(%r15)
  0x000000010f82ae79: movabs $0x0,%r10
  0x000000010f82ae83: mov    %r10,0x2b0(%r15)
  0x000000010f82ae8a: add    $0x30,%rsp
  0x000000010f82ae8e: pop    %rbp
  0x000000010f82ae8f: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f82ae94: hlt    
  0x000000010f82ae95: hlt    
  0x000000010f82ae96: hlt    
  0x000000010f82ae97: hlt    
  0x000000010f82ae98: hlt    
  0x000000010f82ae99: hlt    
  0x000000010f82ae9a: hlt    
  0x000000010f82ae9b: hlt    
  0x000000010f82ae9c: hlt    
  0x000000010f82ae9d: hlt    
  0x000000010f82ae9e: hlt    
  0x000000010f82ae9f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f82aea0: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f82aea5: mov    %rsp,-0x28(%rsp)
  0x000000010f82aeaa: sub    $0x80,%rsp
  0x000000010f82aeb1: mov    %rax,0x78(%rsp)
  0x000000010f82aeb6: mov    %rcx,0x70(%rsp)
  0x000000010f82aebb: mov    %rdx,0x68(%rsp)
  0x000000010f82aec0: mov    %rbx,0x60(%rsp)
  0x000000010f82aec5: mov    %rbp,0x50(%rsp)
  0x000000010f82aeca: mov    %rsi,0x48(%rsp)
  0x000000010f82aecf: mov    %rdi,0x40(%rsp)
  0x000000010f82aed4: mov    %r8,0x38(%rsp)
  0x000000010f82aed9: mov    %r9,0x30(%rsp)
  0x000000010f82aede: mov    %r10,0x28(%rsp)
  0x000000010f82aee3: mov    %r11,0x20(%rsp)
  0x000000010f82aee8: mov    %r12,0x18(%rsp)
  0x000000010f82aeed: mov    %r13,0x10(%rsp)
  0x000000010f82aef2: mov    %r14,0x8(%rsp)
  0x000000010f82aef7: mov    %r15,(%rsp)
  0x000000010f82aefb: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f82af05: movabs $0x10f82aea5,%rsi  ;   {internal_word}
  0x000000010f82af0f: mov    %rsp,%rdx
  0x000000010f82af12: and    $0xfffffffffffffff0,%rsp
  0x000000010f82af16: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f82af1b: hlt    
[Deopt Handler Code]
  0x000000010f82af1c: movabs $0x10f82af1c,%r10  ;   {section_word}
  0x000000010f82af26: push   %r10
  0x000000010f82af28: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f82af2d: hlt    
  0x000000010f82af2e: hlt    
  0x000000010f82af2f: hlt    
Decoding compiled method 0x000000010f82afd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ed2ed00} 'erasedType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MethodTypeForm'
  #           [sp+0x40]  (sp of caller)
  0x000000010f82b120: mov    0x8(%rsi),%r10d
  0x000000010f82b124: shl    $0x3,%r10
  0x000000010f82b128: cmp    %rax,%r10
  0x000000010f82b12b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f82b131: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f82b13c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f82b140: mov    %eax,-0x14000(%rsp)
  0x000000010f82b147: push   %rbp
  0x000000010f82b148: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.lang.invoke.MethodTypeForm::erasedType@0 (line 89)

  0x000000010f82b14c: mov    0x24(%rsi),%eax
  0x000000010f82b14f: shl    $0x3,%rax          ;*getfield erasedType
                                                ; - java.lang.invoke.MethodTypeForm::erasedType@1 (line 89)

  0x000000010f82b153: add    $0x30,%rsp
  0x000000010f82b157: pop    %rbp
  0x000000010f82b158: test   %eax,-0x8d9005e(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f82b15e: retq   
  0x000000010f82b15f: nop
  0x000000010f82b160: nop
  0x000000010f82b161: mov    0x2a8(%r15),%rax
  0x000000010f82b168: movabs $0x0,%r10
  0x000000010f82b172: mov    %r10,0x2a8(%r15)
  0x000000010f82b179: movabs $0x0,%r10
  0x000000010f82b183: mov    %r10,0x2b0(%r15)
  0x000000010f82b18a: add    $0x30,%rsp
  0x000000010f82b18e: pop    %rbp
  0x000000010f82b18f: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f82b194: hlt    
  0x000000010f82b195: hlt    
  0x000000010f82b196: hlt    
  0x000000010f82b197: hlt    
  0x000000010f82b198: hlt    
  0x000000010f82b199: hlt    
  0x000000010f82b19a: hlt    
  0x000000010f82b19b: hlt    
  0x000000010f82b19c: hlt    
  0x000000010f82b19d: hlt    
  0x000000010f82b19e: hlt    
  0x000000010f82b19f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f82b1a0: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f82b1a5: mov    %rsp,-0x28(%rsp)
  0x000000010f82b1aa: sub    $0x80,%rsp
  0x000000010f82b1b1: mov    %rax,0x78(%rsp)
  0x000000010f82b1b6: mov    %rcx,0x70(%rsp)
  0x000000010f82b1bb: mov    %rdx,0x68(%rsp)
  0x000000010f82b1c0: mov    %rbx,0x60(%rsp)
  0x000000010f82b1c5: mov    %rbp,0x50(%rsp)
  0x000000010f82b1ca: mov    %rsi,0x48(%rsp)
  0x000000010f82b1cf: mov    %rdi,0x40(%rsp)
  0x000000010f82b1d4: mov    %r8,0x38(%rsp)
  0x000000010f82b1d9: mov    %r9,0x30(%rsp)
  0x000000010f82b1de: mov    %r10,0x28(%rsp)
  0x000000010f82b1e3: mov    %r11,0x20(%rsp)
  0x000000010f82b1e8: mov    %r12,0x18(%rsp)
  0x000000010f82b1ed: mov    %r13,0x10(%rsp)
  0x000000010f82b1f2: mov    %r14,0x8(%rsp)
  0x000000010f82b1f7: mov    %r15,(%rsp)
  0x000000010f82b1fb: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f82b205: movabs $0x10f82b1a5,%rsi  ;   {internal_word}
  0x000000010f82b20f: mov    %rsp,%rdx
  0x000000010f82b212: and    $0xfffffffffffffff0,%rsp
  0x000000010f82b216: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f82b21b: hlt    
[Deopt Handler Code]
  0x000000010f82b21c: movabs $0x10f82b21c,%r10  ;   {section_word}
  0x000000010f82b226: push   %r10
  0x000000010f82b228: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f82b22d: hlt    
  0x000000010f82b22e: hlt    
  0x000000010f82b22f: hlt    
Decoding compiled method 0x000000010f82b2d0:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000010edb0718} 'linkToStatic' '(Ljava/lang/Object;ILjava/lang/invoke/MemberName;)V' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx       = int
  # parm2:    rcx:rcx   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x000000010f82b400: mov    0x18(%rcx),%rbx
  0x000000010f82b404: test   %rbx,%rbx
  0x000000010f82b407: je     0x000000010f82b410
  0x000000010f82b40d: jmpq   *0x40(%rbx)
  0x000000010f82b410: jmpq   0x000000010f6d61a0  ;   {runtime_call}
  0x000000010f82b415: hlt    
  0x000000010f82b416: hlt    
  0x000000010f82b417: hlt    
Decoding compiled method 0x000000010f82b450:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000010edb0830} 'linkToStatic' '(ILjava/lang/Object;Ljava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi       = int
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x000000010f82b580: mov    0x18(%rcx),%rbx
  0x000000010f82b584: test   %rbx,%rbx
  0x000000010f82b587: je     0x000000010f82b590
  0x000000010f82b58d: jmpq   *0x40(%rbx)
  0x000000010f82b590: jmpq   0x000000010f6d61a0  ;   {runtime_call}
  0x000000010f82b595: hlt    
  0x000000010f82b596: hlt    
  0x000000010f82b597: hlt    
Decoding compiled method 0x000000010f82b5d0:
Code:
[Entry Point]
  # {method} {0x000000010ea71548} 'isInterface' '()Z' in 'java/lang/Class'
  #           [sp+0x50]  (sp of caller)
  0x000000010f82b740: mov    0x8(%rsi),%r10d
  0x000000010f82b744: shl    $0x3,%r10
  0x000000010f82b748: cmp    %r10,%rax
  0x000000010f82b74b: je     0x000000010f82b758
  0x000000010f82b751: jmpq   0x000000010f716e60  ;   {runtime_call}
  0x000000010f82b756: xchg   %ax,%ax
[Verified Entry Point]
  0x000000010f82b758: mov    %eax,-0x14000(%rsp)
  0x000000010f82b75f: push   %rbp
  0x000000010f82b760: mov    %rsp,%rbp
  0x000000010f82b763: sub    $0x40,%rsp
  0x000000010f82b767: mov    %rsi,(%rsp)
  0x000000010f82b76b: cmp    $0x0,%rsi
  0x000000010f82b76f: lea    (%rsp),%rsi
  0x000000010f82b773: cmove  (%rsp),%rsi        ; OopMap{[0]=Oop off=56}
  0x000000010f82b778: movabs $0x10f82b778,%r10  ;   {section_word}
  0x000000010f82b782: mov    %r10,0x1e0(%r15)
  0x000000010f82b789: mov    %rsp,0x1d8(%r15)
  0x000000010f82b790: cmpb   $0x0,-0x5f393dd(%rip)        # 0x00000001098f23ba
                                                ;   {external_word}
  0x000000010f82b797: je     0x000000010f82b7cf
  0x000000010f82b79d: push   %rsi
  0x000000010f82b79e: movabs $0x10ea71548,%rsi  ;   {metadata({method} {0x000000010ea71548} 'isInterface' '()Z' in 'java/lang/Class')}
  0x000000010f82b7a8: mov    %r15,%rdi
  0x000000010f82b7ab: test   $0xf,%esp
  0x000000010f82b7b1: je     0x000000010f82b7c9
  0x000000010f82b7b7: sub    $0x8,%rsp
  0x000000010f82b7bb: callq  0x00000001094ed064  ;   {runtime_call}
  0x000000010f82b7c0: add    $0x8,%rsp
  0x000000010f82b7c4: jmpq   0x000000010f82b7ce
  0x000000010f82b7c9: callq  0x00000001094ed064  ;   {runtime_call}
  0x000000010f82b7ce: pop    %rsi
  0x000000010f82b7cf: lea    0x1f8(%r15),%rdi
  0x000000010f82b7d6: movl   $0x4,0x270(%r15)
  0x000000010f82b7e1: callq  0x0000000109348186  ;   {runtime_call}
  0x000000010f82b7e6: vzeroupper 
  0x000000010f82b7e9: and    $0xff,%eax
  0x000000010f82b7ef: setne  %al
  0x000000010f82b7f2: movl   $0x5,0x270(%r15)
  0x000000010f82b7fd: lock addl $0x0,(%rsp)
  0x000000010f82b802: cmpl   $0x0,-0x5f2ea9c(%rip)        # 0x00000001098fcd70
                                                ;   {external_word}
  0x000000010f82b80c: jne    0x000000010f82b820
  0x000000010f82b812: cmpl   $0x0,0x30(%r15)
  0x000000010f82b81a: je     0x000000010f82b841
  0x000000010f82b820: mov    %rax,-0x8(%rbp)
  0x000000010f82b824: mov    %r15,%rdi
  0x000000010f82b827: mov    %rsp,%r12
  0x000000010f82b82a: sub    $0x0,%rsp
  0x000000010f82b82e: and    $0xfffffffffffffff0,%rsp
  0x000000010f82b832: callq  0x000000010956fe1e  ;   {runtime_call}
  0x000000010f82b837: mov    %r12,%rsp
  0x000000010f82b83a: xor    %r12,%r12
  0x000000010f82b83d: mov    -0x8(%rbp),%rax
  0x000000010f82b841: movl   $0x8,0x270(%r15)
  0x000000010f82b84c: cmpl   $0x1,0x29c(%r15)
  0x000000010f82b857: je     0x000000010f82b8e7
  0x000000010f82b85d: cmpb   $0x0,-0x5f394aa(%rip)        # 0x00000001098f23ba
                                                ;   {external_word}
  0x000000010f82b864: je     0x000000010f82b8a2
  0x000000010f82b86a: mov    %rax,-0x8(%rbp)
  0x000000010f82b86e: movabs $0x10ea71548,%rsi  ;   {metadata({method} {0x000000010ea71548} 'isInterface' '()Z' in 'java/lang/Class')}
  0x000000010f82b878: mov    %r15,%rdi
  0x000000010f82b87b: test   $0xf,%esp
  0x000000010f82b881: je     0x000000010f82b899
  0x000000010f82b887: sub    $0x8,%rsp
  0x000000010f82b88b: callq  0x00000001094ecfd6  ;   {runtime_call}
  0x000000010f82b890: add    $0x8,%rsp
  0x000000010f82b894: jmpq   0x000000010f82b89e
  0x000000010f82b899: callq  0x00000001094ecfd6  ;   {runtime_call}
  0x000000010f82b89e: mov    -0x8(%rbp),%rax
  0x000000010f82b8a2: movabs $0x0,%r10
  0x000000010f82b8ac: mov    %r10,0x1d8(%r15)
  0x000000010f82b8b3: movabs $0x0,%r10
  0x000000010f82b8bd: mov    %r10,0x1e0(%r15)
  0x000000010f82b8c4: mov    0x38(%r15),%rcx
  0x000000010f82b8c8: movl   $0x0,0x100(%rcx)
  0x000000010f82b8d2: leaveq 
  0x000000010f82b8d3: cmpq   $0x0,0x8(%r15)
  0x000000010f82b8db: jne    0x000000010f82b8e2
  0x000000010f82b8e1: retq   
  0x000000010f82b8e2: jmpq   Stub::forward exception  ;   {runtime_call}
  0x000000010f82b8e7: mov    %rax,-0x8(%rbp)
  0x000000010f82b8eb: mov    %rsp,%r12
  0x000000010f82b8ee: sub    $0x0,%rsp
  0x000000010f82b8f2: and    $0xfffffffffffffff0,%rsp
  0x000000010f82b8f6: callq  0x00000001094ead1c  ;   {runtime_call}
  0x000000010f82b8fb: mov    %r12,%rsp
  0x000000010f82b8fe: xor    %r12,%r12
  0x000000010f82b901: mov    -0x8(%rbp),%rax
  0x000000010f82b905: jmpq   0x000000010f82b85d
  0x000000010f82b90a: hlt    
  0x000000010f82b90b: hlt    
  0x000000010f82b90c: hlt    
  0x000000010f82b90d: hlt    
  0x000000010f82b90e: hlt    
  0x000000010f82b90f: hlt    
Decoding compiled method 0x000000010f82b950:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000010edbb878} 'linkToStatic' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi       = int
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8:r8     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x000000010f82ba80: mov    0x18(%r8),%rbx
  0x000000010f82ba84: test   %rbx,%rbx
  0x000000010f82ba87: je     0x000000010f82ba90
  0x000000010f82ba8d: jmpq   *0x40(%rbx)
  0x000000010f82ba90: jmpq   0x000000010f6d61a0  ;   {runtime_call}
  0x000000010f82ba95: hlt    
  0x000000010f82ba96: hlt    
  0x000000010f82ba97: hlt    
Decoding compiled method 0x000000010f82bad0:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000010edbb990} 'invokeBasic' '(ILjava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rsi:rsi   = 'java/lang/invoke/MethodHandle'
  # parm0:    rdx       = int
  # parm1:    rcx:rcx   = 'java/lang/Object'
  # parm2:    r8:r8     = 'java/lang/Object'
  #           [sp+0x0]  (sp of caller)
  0x000000010f82bc00: mov    0x14(%rsi),%ebx
  0x000000010f82bc03: shl    $0x3,%rbx
  0x000000010f82bc07: mov    0x28(%rbx),%ebx
  0x000000010f82bc0a: shl    $0x3,%rbx
  0x000000010f82bc0e: mov    0x18(%rbx),%rbx
  0x000000010f82bc12: test   %rbx,%rbx
  0x000000010f82bc15: je     0x000000010f82bc1e
  0x000000010f82bc1b: jmpq   *0x40(%rbx)
  0x000000010f82bc1e: jmpq   0x000000010f6d61a0  ;   {runtime_call}
  0x000000010f82bc23: hlt    
  0x000000010f82bc24: hlt    
  0x000000010f82bc25: hlt    
  0x000000010f82bc26: hlt    
  0x000000010f82bc27: hlt    
Decoding compiled method 0x000000010f82bc50:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000010edbd3d0} 'linkToSpecial' '(Ljava/lang/Object;ILjava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx       = int
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8:r8     = 'java/lang/Object'
  # parm4:    r9:r9     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x000000010f82bd80: cmp    (%rsi),%rax
  0x000000010f82bd83: mov    0x18(%r9),%rbx
  0x000000010f82bd87: test   %rbx,%rbx
  0x000000010f82bd8a: je     0x000000010f82bd93
  0x000000010f82bd90: jmpq   *0x40(%rbx)
  0x000000010f82bd93: jmpq   0x000000010f6d61a0  ;   {runtime_call}
Decoding compiled method 0x000000010f82eb50:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010eacee18} 'makeImpl' '(Ljava/lang/Class;[Ljava/lang/Class;Z)Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MethodType'
  # parm0:    rsi:rsi   = 'java/lang/Class'
  # parm1:    rdx:rdx   = '[Ljava/lang/Class;'
  # parm2:    rcx       = boolean
  #           [sp+0xa0]  (sp of caller)
  0x000000010f82ed40: mov    %eax,-0x14000(%rsp)
  0x000000010f82ed47: push   %rbp
  0x000000010f82ed48: sub    $0x90,%rsp
  0x000000010f82ed4f: movabs $0x10eda84e0,%rdi  ;   {metadata(method data for {method} {0x000000010eacee18} 'makeImpl' '(Ljava/lang/Class;[Ljava/lang/Class;Z)Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MethodType')}
  0x000000010f82ed59: mov    0xdc(%rdi),%eax
  0x000000010f82ed5f: add    $0x8,%eax
  0x000000010f82ed62: mov    %eax,0xdc(%rdi)
  0x000000010f82ed68: movabs $0x10eacee18,%rdi  ;   {metadata({method} {0x000000010eacee18} 'makeImpl' '(Ljava/lang/Class;[Ljava/lang/Class;Z)Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MethodType')}
  0x000000010f82ed72: and    $0x1ff8,%eax
  0x000000010f82ed78: cmp    $0x0,%eax
  0x000000010f82ed7b: je     0x000000010f82f3e4  ;*getstatic internTable
                                                ; - java.lang.invoke.MethodType::makeImpl@0 (line 301)

  0x000000010f82ed81: mov    %ecx,0x68(%rsp)
  0x000000010f82ed85: mov    %rdx,%rbx
  0x000000010f82ed88: movabs $0x7c000c460,%rdx  ;   {metadata('java/lang/invoke/MethodType')}
  0x000000010f82ed92: mov    %rsi,%r8
  0x000000010f82ed95: mov    0x60(%r15),%rax
  0x000000010f82ed99: lea    0x28(%rax),%rdi
  0x000000010f82ed9d: cmp    0x70(%r15),%rdi
  0x000000010f82eda1: ja     0x000000010f82f3fb
  0x000000010f82eda7: mov    %rdi,0x60(%r15)
  0x000000010f82edab: mov    0xa8(%rdx),%rcx
  0x000000010f82edb2: mov    %rcx,(%rax)
  0x000000010f82edb5: mov    %rdx,%rcx
  0x000000010f82edb8: shr    $0x3,%rcx
  0x000000010f82edbc: mov    %ecx,0x8(%rax)
  0x000000010f82edbf: xor    %rcx,%rcx
  0x000000010f82edc2: mov    %ecx,0xc(%rax)
  0x000000010f82edc5: xor    %rcx,%rcx
  0x000000010f82edc8: mov    %rcx,0x10(%rax)
  0x000000010f82edcc: mov    %rcx,0x18(%rax)
  0x000000010f82edd0: mov    %rcx,0x20(%rax)    ;*new  ; - java.lang.invoke.MethodType::makeImpl@3 (line 301)

  0x000000010f82edd4: mov    %rax,%rdx
  0x000000010f82edd7: movabs $0x10eda84e0,%rsi  ;   {metadata(method data for {method} {0x000000010eacee18} 'makeImpl' '(Ljava/lang/Class;[Ljava/lang/Class;Z)Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MethodType')}
  0x000000010f82ede1: addq   $0x1,0x108(%rsi)
  0x000000010f82ede9: movabs $0x10edbb9f8,%rdx  ;   {metadata(method data for {method} {0x000000010eace2f8} '<init>' '([Ljava/lang/Class;Ljava/lang/Class;)V' in 'java/lang/invoke/MethodType')}
  0x000000010f82edf3: mov    0xdc(%rdx),%esi
  0x000000010f82edf9: add    $0x8,%esi
  0x000000010f82edfc: mov    %esi,0xdc(%rdx)
  0x000000010f82ee02: movabs $0x10eace2f8,%rdx  ;   {metadata({method} {0x000000010eace2f8} '<init>' '([Ljava/lang/Class;Ljava/lang/Class;)V' in 'java/lang/invoke/MethodType')}
  0x000000010f82ee0c: and    $0x7ffff8,%esi
  0x000000010f82ee12: cmp    $0x0,%esi
  0x000000010f82ee15: je     0x000000010f82f408
  0x000000010f82ee1b: mov    %rax,%rdx
  0x000000010f82ee1e: movabs $0x10edbb9f8,%rsi  ;   {metadata(method data for {method} {0x000000010eace2f8} '<init>' '([Ljava/lang/Class;Ljava/lang/Class;)V' in 'java/lang/invoke/MethodType')}
  0x000000010f82ee28: addq   $0x1,0x108(%rsi)
  0x000000010f82ee30: movabs $0x10ebdca10,%rdx  ;   {metadata(method data for {method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f82ee3a: mov    0xdc(%rdx),%esi
  0x000000010f82ee40: add    $0x8,%esi
  0x000000010f82ee43: mov    %esi,0xdc(%rdx)
  0x000000010f82ee49: movabs $0x10ea65480,%rdx  ;   {metadata({method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f82ee53: and    $0x7ffff8,%esi
  0x000000010f82ee59: cmp    $0x0,%esi
  0x000000010f82ee5c: je     0x000000010f82f41f
  0x000000010f82ee62: mov    %r8,%r10
  0x000000010f82ee65: shr    $0x3,%r10
  0x000000010f82ee69: mov    %r10d,0xc(%rax)
  0x000000010f82ee6d: mov    %rax,%rdx
  0x000000010f82ee70: shr    $0x9,%rdx
  0x000000010f82ee74: movabs $0x1065b9000,%rsi
  0x000000010f82ee7e: movb   $0x0,(%rdx,%rsi,1)  ;*putfield rtype
                                                ; - java.lang.invoke.MethodType::<init>@6 (line 121)
                                                ; - java.lang.invoke.MethodType::makeImpl@9 (line 301)

  0x000000010f82ee82: mov    %rbx,%r10
  0x000000010f82ee85: shr    $0x3,%r10
  0x000000010f82ee89: mov    %r10d,0x10(%rax)
  0x000000010f82ee8d: mov    %rax,%rdx
  0x000000010f82ee90: shr    $0x9,%rdx
  0x000000010f82ee94: movb   $0x0,(%rdx,%rsi,1)  ;*putfield ptypes
                                                ; - java.lang.invoke.MethodType::<init>@11 (line 122)
                                                ; - java.lang.invoke.MethodType::makeImpl@9 (line 301)

  0x000000010f82ee98: movabs $0x79586f458,%rsi  ;   {oop(a 'java/lang/invoke/MethodType$ConcurrentWeakInternSet')}
  0x000000010f82eea2: mov    %rsi,%rdx
  0x000000010f82eea5: movabs $0x10eda84e0,%rdi  ;   {metadata(method data for {method} {0x000000010eacee18} 'makeImpl' '(Ljava/lang/Class;[Ljava/lang/Class;Z)Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MethodType')}
  0x000000010f82eeaf: addq   $0x1,0x128(%rdi)
  0x000000010f82eeb7: mov    %rax,%rdx          ;*invokevirtual get
                                                ; - java.lang.invoke.MethodType::makeImpl@12 (line 301)

  0x000000010f82eeba: mov    %r8,0x70(%rsp)
  0x000000010f82eebf: mov    %rbx,0x60(%rsp)
  0x000000010f82eec4: nop
  0x000000010f82eec5: nop
  0x000000010f82eec6: nop
  0x000000010f82eec7: callq  0x000000010f7170a0  ; OopMap{[96]=Oop [112]=Oop off=396}
                                                ;*invokevirtual get
                                                ; - java.lang.invoke.MethodType::makeImpl@12 (line 301)
                                                ;   {optimized virtual_call}
  0x000000010f82eecc: cmp    $0x0,%rax
  0x000000010f82eed0: jne    0x000000010f82eeeb
  0x000000010f82eed2: movabs $0x10eda84e0,%rdi  ;   {metadata(method data for {method} {0x000000010eacee18} 'makeImpl' '(Ljava/lang/Class;[Ljava/lang/Class;Z)Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MethodType')}
  0x000000010f82eedc: orl    $0x100,0x140(%rdi)
  0x000000010f82eee6: jmpq   0x000000010f82efab
  0x000000010f82eeeb: movabs $0x7c000c460,%rsi  ;   {metadata('java/lang/invoke/MethodType')}
  0x000000010f82eef5: mov    0x8(%rax),%edx
  0x000000010f82eef8: shl    $0x3,%rdx
  0x000000010f82eefc: cmp    %rdx,%rsi
  0x000000010f82eeff: jne    0x000000010f82ef8f
  0x000000010f82ef05: movabs $0x10eda84e0,%rdi  ;   {metadata(method data for {method} {0x000000010eacee18} 'makeImpl' '(Ljava/lang/Class;[Ljava/lang/Class;Z)Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MethodType')}
  0x000000010f82ef0f: mov    0x8(%rax),%esi
  0x000000010f82ef12: shl    $0x3,%rsi
  0x000000010f82ef16: cmp    0x150(%rdi),%rsi
  0x000000010f82ef1d: jne    0x000000010f82ef2c
  0x000000010f82ef1f: addq   $0x1,0x158(%rdi)
  0x000000010f82ef27: jmpq   0x000000010f82efab
  0x000000010f82ef2c: cmp    0x160(%rdi),%rsi
  0x000000010f82ef33: jne    0x000000010f82ef42
  0x000000010f82ef35: addq   $0x1,0x168(%rdi)
  0x000000010f82ef3d: jmpq   0x000000010f82efab
  0x000000010f82ef42: cmpq   $0x0,0x150(%rdi)
  0x000000010f82ef4d: jne    0x000000010f82ef66
  0x000000010f82ef4f: mov    %rsi,0x150(%rdi)
  0x000000010f82ef56: movq   $0x1,0x158(%rdi)
  0x000000010f82ef61: jmpq   0x000000010f82efab
  0x000000010f82ef66: cmpq   $0x0,0x160(%rdi)
  0x000000010f82ef71: jne    0x000000010f82ef8a
  0x000000010f82ef73: mov    %rsi,0x160(%rdi)
  0x000000010f82ef7a: movq   $0x1,0x168(%rdi)
  0x000000010f82ef85: jmpq   0x000000010f82efab
  0x000000010f82ef8a: jmpq   0x000000010f82efab
  0x000000010f82ef8f: movabs $0x10eda84e0,%rdi  ;   {metadata(method data for {method} {0x000000010eacee18} 'makeImpl' '(Ljava/lang/Class;[Ljava/lang/Class;Z)Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MethodType')}
  0x000000010f82ef99: subq   $0x1,0x148(%rdi)
  0x000000010f82efa1: jmpq   0x000000010f82f436
  0x000000010f82efa6: jmpq   0x000000010f82efab
  0x000000010f82efab: mov    %rax,%rsi          ;*checkcast
                                                ; - java.lang.invoke.MethodType::makeImpl@15 (line 301)

  0x000000010f82efae: cmp    $0x0,%rsi
  0x000000010f82efb2: movabs $0x10eda84e0,%rdx  ;   {metadata(method data for {method} {0x000000010eacee18} 'makeImpl' '(Ljava/lang/Class;[Ljava/lang/Class;Z)Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MethodType')}
  0x000000010f82efbc: movabs $0x178,%rdi
  0x000000010f82efc6: je     0x000000010f82efd6
  0x000000010f82efcc: movabs $0x188,%rdi
  0x000000010f82efd6: mov    (%rdx,%rdi,1),%rax
  0x000000010f82efda: lea    0x1(%rax),%rax
  0x000000010f82efde: mov    %rax,(%rdx,%rdi,1)
  0x000000010f82efe2: jne    0x000000010f82f3d2  ;*ifnull
                                                ; - java.lang.invoke.MethodType::makeImpl@20 (line 302)

  0x000000010f82efe8: mov    0x60(%rsp),%rdx
  0x000000010f82efed: mov    0xc(%rdx),%esi     ;*arraylength
                                                ; - java.lang.invoke.MethodType::makeImpl@26 (line 304)
                                                ; implicit exception: dispatches to 0x000000010f82f43f
  0x000000010f82eff0: cmp    $0x0,%esi
  0x000000010f82eff3: movabs $0x10eda84e0,%rsi  ;   {metadata(method data for {method} {0x000000010eacee18} 'makeImpl' '(Ljava/lang/Class;[Ljava/lang/Class;Z)Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MethodType')}
  0x000000010f82effd: movabs $0x198,%rdi
  0x000000010f82f007: jne    0x000000010f82f017
  0x000000010f82f00d: movabs $0x1a8,%rdi
  0x000000010f82f017: mov    (%rsi,%rdi,1),%rax
  0x000000010f82f01b: lea    0x1(%rax),%rax
  0x000000010f82f01f: mov    %rax,(%rsi,%rdi,1)
  0x000000010f82f023: je     0x000000010f82f038  ;*ifne
                                                ; - java.lang.invoke.MethodType::makeImpl@27 (line 304)

  0x000000010f82f029: mov    0x68(%rsp),%ecx
  0x000000010f82f02d: mov    %rcx,%r8
  0x000000010f82f030: mov    %rdx,%rbx
  0x000000010f82f033: jmpq   0x000000010f82f048
  0x000000010f82f038: mov    $0x1,%r8d
  0x000000010f82f03e: movabs $0x79586f4e0,%rbx  ;   {oop(a 'java/lang/Class'[0] )}
  0x000000010f82f048: mov    0x70(%rsp),%r9
  0x000000010f82f04d: movabs $0x7c000c460,%rdx  ;   {metadata('java/lang/invoke/MethodType')}
  0x000000010f82f057: mov    0x60(%r15),%rax
  0x000000010f82f05b: lea    0x28(%rax),%rdi
  0x000000010f82f05f: cmp    0x70(%r15),%rdi
  0x000000010f82f063: ja     0x000000010f82f444
  0x000000010f82f069: mov    %rdi,0x60(%r15)
  0x000000010f82f06d: mov    0xa8(%rdx),%rcx
  0x000000010f82f074: mov    %rcx,(%rax)
  0x000000010f82f077: mov    %rdx,%rcx
  0x000000010f82f07a: shr    $0x3,%rcx
  0x000000010f82f07e: mov    %ecx,0x8(%rax)
  0x000000010f82f081: xor    %rcx,%rcx
  0x000000010f82f084: mov    %ecx,0xc(%rax)
  0x000000010f82f087: xor    %rcx,%rcx
  0x000000010f82f08a: mov    %rcx,0x10(%rax)
  0x000000010f82f08e: mov    %rcx,0x18(%rax)
  0x000000010f82f092: mov    %rcx,0x20(%rax)    ;*new  ; - java.lang.invoke.MethodType::makeImpl@36 (line 307)

  0x000000010f82f096: mov    %rax,%rdx
  0x000000010f82f099: movabs $0x10eda84e0,%rcx  ;   {metadata(method data for {method} {0x000000010eacee18} 'makeImpl' '(Ljava/lang/Class;[Ljava/lang/Class;Z)Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MethodType')}
  0x000000010f82f0a3: addq   $0x1,0x1b8(%rcx)
  0x000000010f82f0ab: mov    %r9,%rdx
  0x000000010f82f0ae: mov    %rbx,%rcx
  0x000000010f82f0b1: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.invoke.MethodType::makeImpl@43 (line 307)

  0x000000010f82f0b4: mov    %rax,0x78(%rsp)
  0x000000010f82f0b9: nop
  0x000000010f82f0ba: nop
  0x000000010f82f0bb: nop
  0x000000010f82f0bc: nop
  0x000000010f82f0bd: nop
  0x000000010f82f0be: nop
  0x000000010f82f0bf: callq  0x000000010f7170a0  ; OopMap{[120]=Oop off=900}
                                                ;*invokespecial <init>
                                                ; - java.lang.invoke.MethodType::makeImpl@43 (line 307)
                                                ;   {optimized virtual_call}
  0x000000010f82f0c4: movabs $0x10eda84e0,%rsi  ;   {metadata(method data for {method} {0x000000010eacee18} 'makeImpl' '(Ljava/lang/Class;[Ljava/lang/Class;Z)Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MethodType')}
  0x000000010f82f0ce: addq   $0x1,0x1c8(%rsi)
  0x000000010f82f0d6: movabs $0x10edbbfb0,%rsi  ;   {metadata(method data for {method} {0x000000010ed2ff18} 'findForm' '(Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MethodTypeForm;' in 'java/lang/invoke/MethodTypeForm')}
  0x000000010f82f0e0: mov    0xdc(%rsi),%edx
  0x000000010f82f0e6: add    $0x8,%edx
  0x000000010f82f0e9: mov    %edx,0xdc(%rsi)
  0x000000010f82f0ef: movabs $0x10ed2ff18,%rsi  ;   {metadata({method} {0x000000010ed2ff18} 'findForm' '(Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MethodTypeForm;' in 'java/lang/invoke/MethodTypeForm')}
  0x000000010f82f0f9: and    $0x7ffff8,%edx
  0x000000010f82f0ff: cmp    $0x0,%edx
  0x000000010f82f102: je     0x000000010f82f451
  0x000000010f82f108: movabs $0x10edbbfb0,%rsi  ;   {metadata(method data for {method} {0x000000010ed2ff18} 'findForm' '(Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MethodTypeForm;' in 'java/lang/invoke/MethodTypeForm')}
  0x000000010f82f112: addq   $0x1,0x108(%rsi)
  0x000000010f82f11a: mov    0x78(%rsp),%rsi
  0x000000010f82f11f: mov    $0x1,%edx
  0x000000010f82f124: mov    $0x1,%ecx          ;*invokestatic canonicalize
                                                ; - java.lang.invoke.MethodTypeForm::findForm@3 (line 311)
                                                ; - java.lang.invoke.MethodType::makeImpl@49 (line 309)

  0x000000010f82f129: nop
  0x000000010f82f12a: nop
  0x000000010f82f12b: nop
  0x000000010f82f12c: nop
  0x000000010f82f12d: nop
  0x000000010f82f12e: nop
  0x000000010f82f12f: callq  0x000000010f717520  ; OopMap{[120]=Oop off=1012}
                                                ;*invokestatic canonicalize
                                                ; - java.lang.invoke.MethodTypeForm::findForm@3 (line 311)
                                                ; - java.lang.invoke.MethodType::makeImpl@49 (line 309)
                                                ;   {static_call}
  0x000000010f82f134: cmp    $0x0,%rax
  0x000000010f82f138: movabs $0x10edbbfb0,%rdx  ;   {metadata(method data for {method} {0x000000010ed2ff18} 'findForm' '(Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MethodTypeForm;' in 'java/lang/invoke/MethodTypeForm')}
  0x000000010f82f142: movabs $0x118,%rsi
  0x000000010f82f14c: jne    0x000000010f82f15c
  0x000000010f82f152: movabs $0x128,%rsi
  0x000000010f82f15c: mov    (%rdx,%rsi,1),%rdi
  0x000000010f82f160: lea    0x1(%rdi),%rdi
  0x000000010f82f164: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f82f168: jne    0x000000010f82f1f9  ;*ifnonnull
                                                ; - java.lang.invoke.MethodTypeForm::findForm@8 (line 312)
                                                ; - java.lang.invoke.MethodType::makeImpl@49 (line 309)

  0x000000010f82f16e: movabs $0x7c0057948,%rdx  ;   {metadata('java/lang/invoke/MethodTypeForm')}
  0x000000010f82f178: mov    0x60(%r15),%rax
  0x000000010f82f17c: lea    0x38(%rax),%rdi
  0x000000010f82f180: cmp    0x70(%r15),%rdi
  0x000000010f82f184: ja     0x000000010f82f468
  0x000000010f82f18a: mov    %rdi,0x60(%r15)
  0x000000010f82f18e: mov    0xa8(%rdx),%rcx
  0x000000010f82f195: mov    %rcx,(%rax)
  0x000000010f82f198: mov    %rdx,%rcx
  0x000000010f82f19b: shr    $0x3,%rcx
  0x000000010f82f19f: mov    %ecx,0x8(%rax)
  0x000000010f82f1a2: xor    %rcx,%rcx
  0x000000010f82f1a5: mov    %ecx,0xc(%rax)
  0x000000010f82f1a8: xor    %rcx,%rcx
  0x000000010f82f1ab: movabs $0x5,%rdi
  0x000000010f82f1b5: mov    %rcx,0x8(%rax,%rdi,8)
  0x000000010f82f1ba: dec    %rdi
  0x000000010f82f1bd: jne    0x000000010f82f1b5  ;*new
                                                ; - java.lang.invoke.MethodTypeForm::findForm@11 (line 314)
                                                ; - java.lang.invoke.MethodType::makeImpl@49 (line 309)

  0x000000010f82f1bf: mov    %rax,%rdx
  0x000000010f82f1c2: movabs $0x10edbbfb0,%rsi  ;   {metadata(method data for {method} {0x000000010ed2ff18} 'findForm' '(Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MethodTypeForm;' in 'java/lang/invoke/MethodTypeForm')}
  0x000000010f82f1cc: addq   $0x1,0x138(%rsi)
  0x000000010f82f1d4: mov    0x78(%rsp),%rdx
  0x000000010f82f1d9: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.invoke.MethodTypeForm::findForm@16 (line 314)
                                                ; - java.lang.invoke.MethodType::makeImpl@49 (line 309)

  0x000000010f82f1dc: mov    %rax,0x80(%rsp)
  0x000000010f82f1e4: nop
  0x000000010f82f1e5: nop
  0x000000010f82f1e6: nop
  0x000000010f82f1e7: callq  0x000000010f7170a0  ; OopMap{[120]=Oop [128]=Oop off=1196}
                                                ;*invokespecial <init>
                                                ; - java.lang.invoke.MethodTypeForm::findForm@16 (line 314)
                                                ; - java.lang.invoke.MethodType::makeImpl@49 (line 309)
                                                ;   {optimized virtual_call}
  0x000000010f82f1ec: mov    0x80(%rsp),%rax
  0x000000010f82f1f4: jmpq   0x000000010f82f296  ;*putfield form
                                                ; - java.lang.invoke.MethodType::makeImpl@52 (line 309)

  0x000000010f82f1f9: cmp    (%rax),%rax        ;*invokevirtual form
                                                ; - java.lang.invoke.MethodTypeForm::findForm@21 (line 317)
                                                ; - java.lang.invoke.MethodType::makeImpl@49 (line 309)
                                                ; implicit exception: dispatches to 0x000000010f82f475
  0x000000010f82f1fc: mov    %rax,%rdx
  0x000000010f82f1ff: movabs $0x10edbbfb0,%rsi  ;   {metadata(method data for {method} {0x000000010ed2ff18} 'findForm' '(Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MethodTypeForm;' in 'java/lang/invoke/MethodTypeForm')}
  0x000000010f82f209: mov    0x8(%rdx),%edx
  0x000000010f82f20c: shl    $0x3,%rdx
  0x000000010f82f210: cmp    0x150(%rsi),%rdx
  0x000000010f82f217: jne    0x000000010f82f226
  0x000000010f82f219: addq   $0x1,0x158(%rsi)
  0x000000010f82f221: jmpq   0x000000010f82f28c
  0x000000010f82f226: cmp    0x160(%rsi),%rdx
  0x000000010f82f22d: jne    0x000000010f82f23c
  0x000000010f82f22f: addq   $0x1,0x168(%rsi)
  0x000000010f82f237: jmpq   0x000000010f82f28c
  0x000000010f82f23c: cmpq   $0x0,0x150(%rsi)
  0x000000010f82f247: jne    0x000000010f82f260
  0x000000010f82f249: mov    %rdx,0x150(%rsi)
  0x000000010f82f250: movq   $0x1,0x158(%rsi)
  0x000000010f82f25b: jmpq   0x000000010f82f28c
  0x000000010f82f260: cmpq   $0x0,0x160(%rsi)
  0x000000010f82f26b: jne    0x000000010f82f284
  0x000000010f82f26d: mov    %rdx,0x160(%rsi)
  0x000000010f82f274: movq   $0x1,0x168(%rsi)
  0x000000010f82f27f: jmpq   0x000000010f82f28c
  0x000000010f82f284: addq   $0x1,0x148(%rsi)
  0x000000010f82f28c: mov    0x14(%rax),%edx
  0x000000010f82f28f: shl    $0x3,%rdx          ;*getfield form
                                                ; - java.lang.invoke.MethodType::form@1 (line 125)
                                                ; - java.lang.invoke.MethodTypeForm::findForm@21 (line 317)
                                                ; - java.lang.invoke.MethodType::makeImpl@49 (line 309)

  0x000000010f82f293: mov    %rdx,%rax
  0x000000010f82f296: mov    0x78(%rsp),%rdx
  0x000000010f82f29b: mov    %rax,%r10
  0x000000010f82f29e: shr    $0x3,%r10
  0x000000010f82f2a2: mov    %r10d,0x14(%rdx)
  0x000000010f82f2a6: mov    %rdx,%rax
  0x000000010f82f2a9: shr    $0x9,%rax
  0x000000010f82f2ad: movabs $0x1065b9000,%rsi
  0x000000010f82f2b7: movb   $0x0,(%rax,%rsi,1)  ;*putfield form
                                                ; - java.lang.invoke.MethodType::makeImpl@52 (line 309)

  0x000000010f82f2bb: movabs $0x79586f458,%rsi  ;   {oop(a 'java/lang/invoke/MethodType$ConcurrentWeakInternSet')}
  0x000000010f82f2c5: mov    %rsi,%rdi
  0x000000010f82f2c8: movabs $0x10eda84e0,%rbx  ;   {metadata(method data for {method} {0x000000010eacee18} 'makeImpl' '(Ljava/lang/Class;[Ljava/lang/Class;Z)Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MethodType')}
  0x000000010f82f2d2: addq   $0x1,0x1e8(%rbx)
  0x000000010f82f2da: nop
  0x000000010f82f2db: nop
  0x000000010f82f2dc: nop
  0x000000010f82f2dd: nop
  0x000000010f82f2de: nop
  0x000000010f82f2df: callq  0x000000010f7170a0  ; OopMap{off=1444}
                                                ;*invokevirtual add
                                                ; - java.lang.invoke.MethodType::makeImpl@59 (line 310)
                                                ;   {optimized virtual_call}
  0x000000010f82f2e4: cmp    $0x0,%rax
  0x000000010f82f2e8: jne    0x000000010f82f303
  0x000000010f82f2ea: movabs $0x10eda84e0,%rdi  ;   {metadata(method data for {method} {0x000000010eacee18} 'makeImpl' '(Ljava/lang/Class;[Ljava/lang/Class;Z)Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MethodType')}
  0x000000010f82f2f4: orl    $0x100,0x200(%rdi)
  0x000000010f82f2fe: jmpq   0x000000010f82f3c3
  0x000000010f82f303: movabs $0x7c000c460,%rbx  ;   {metadata('java/lang/invoke/MethodType')}
  0x000000010f82f30d: mov    0x8(%rax),%esi
  0x000000010f82f310: shl    $0x3,%rsi
  0x000000010f82f314: cmp    %rsi,%rbx
  0x000000010f82f317: jne    0x000000010f82f3a7
  0x000000010f82f31d: movabs $0x10eda84e0,%rdi  ;   {metadata(method data for {method} {0x000000010eacee18} 'makeImpl' '(Ljava/lang/Class;[Ljava/lang/Class;Z)Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MethodType')}
  0x000000010f82f327: mov    0x8(%rax),%ebx
  0x000000010f82f32a: shl    $0x3,%rbx
  0x000000010f82f32e: cmp    0x210(%rdi),%rbx
  0x000000010f82f335: jne    0x000000010f82f344
  0x000000010f82f337: addq   $0x1,0x218(%rdi)
  0x000000010f82f33f: jmpq   0x000000010f82f3c3
  0x000000010f82f344: cmp    0x220(%rdi),%rbx
  0x000000010f82f34b: jne    0x000000010f82f35a
  0x000000010f82f34d: addq   $0x1,0x228(%rdi)
  0x000000010f82f355: jmpq   0x000000010f82f3c3
  0x000000010f82f35a: cmpq   $0x0,0x210(%rdi)
  0x000000010f82f365: jne    0x000000010f82f37e
  0x000000010f82f367: mov    %rbx,0x210(%rdi)
  0x000000010f82f36e: movq   $0x1,0x218(%rdi)
  0x000000010f82f379: jmpq   0x000000010f82f3c3
  0x000000010f82f37e: cmpq   $0x0,0x220(%rdi)
  0x000000010f82f389: jne    0x000000010f82f3a2
  0x000000010f82f38b: mov    %rbx,0x220(%rdi)
  0x000000010f82f392: movq   $0x1,0x228(%rdi)
  0x000000010f82f39d: jmpq   0x000000010f82f3c3
  0x000000010f82f3a2: jmpq   0x000000010f82f3c3
  0x000000010f82f3a7: movabs $0x10eda84e0,%rdi  ;   {metadata(method data for {method} {0x000000010eacee18} 'makeImpl' '(Ljava/lang/Class;[Ljava/lang/Class;Z)Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/MethodType')}
  0x000000010f82f3b1: subq   $0x1,0x208(%rdi)
  0x000000010f82f3b9: jmpq   0x000000010f82f47a
  0x000000010f82f3be: jmpq   0x000000010f82f3c3  ;*checkcast
                                                ; - java.lang.invoke.MethodType::makeImpl@62 (line 310)

  0x000000010f82f3c3: add    $0x90,%rsp
  0x000000010f82f3ca: pop    %rbp
  0x000000010f82f3cb: test   %eax,-0x8d942d1(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f82f3d1: retq                      ;*areturn
                                                ; - java.lang.invoke.MethodType::makeImpl@65 (line 310)

  0x000000010f82f3d2: mov    %rsi,%rax
  0x000000010f82f3d5: add    $0x90,%rsp
  0x000000010f82f3dc: pop    %rbp
  0x000000010f82f3dd: test   %eax,-0x8d942e3(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f82f3e3: retq   
  0x000000010f82f3e4: mov    %rdi,0x8(%rsp)
  0x000000010f82f3e9: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f82f3f1: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop rdx=Oop off=1718}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MethodType::makeImpl@-1 (line 301)
                                                ;   {runtime_call}
  0x000000010f82f3f6: jmpq   0x000000010f82ed81
  0x000000010f82f3fb: mov    %rdx,%rdx
  0x000000010f82f3fe: callq  0x000000010f7cd820  ; OopMap{rbx=Oop r8=Oop off=1731}
                                                ;*new  ; - java.lang.invoke.MethodType::makeImpl@3 (line 301)
                                                ;   {runtime_call}
  0x000000010f82f403: jmpq   0x000000010f82edd4
  0x000000010f82f408: mov    %rdx,0x8(%rsp)
  0x000000010f82f40d: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f82f415: callq  0x000000010f7d1a20  ; OopMap{rbx=Oop r8=Oop rax=Oop off=1754}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MethodType::<init>@-1 (line 120)
                                                ; - java.lang.invoke.MethodType::makeImpl@9 (line 301)
                                                ;   {runtime_call}
  0x000000010f82f41a: jmpq   0x000000010f82ee1b
  0x000000010f82f41f: mov    %rdx,0x8(%rsp)
  0x000000010f82f424: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f82f42c: callq  0x000000010f7d1a20  ; OopMap{rbx=Oop r8=Oop rax=Oop off=1777}
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 37)
                                                ; - java.lang.invoke.MethodType::<init>@1 (line 120)
                                                ; - java.lang.invoke.MethodType::makeImpl@9 (line 301)
                                                ;   {runtime_call}
  0x000000010f82f431: jmpq   0x000000010f82ee62
  0x000000010f82f436: mov    %rax,(%rsp)
  0x000000010f82f43a: callq  0x000000010f7cf480  ; OopMap{[96]=Oop [112]=Oop off=1791}
                                                ;*checkcast
                                                ; - java.lang.invoke.MethodType::makeImpl@15 (line 301)
                                                ;   {runtime_call}
  0x000000010f82f43f: callq  0x000000010f7cd0c0  ; OopMap{[112]=Oop rdx=Oop off=1796}
                                                ;*arraylength
                                                ; - java.lang.invoke.MethodType::makeImpl@26 (line 304)
                                                ;   {runtime_call}
  0x000000010f82f444: mov    %rdx,%rdx
  0x000000010f82f447: callq  0x000000010f7cd820  ; OopMap{rbx=Oop r9=Oop off=1804}
                                                ;*new  ; - java.lang.invoke.MethodType::makeImpl@36 (line 307)
                                                ;   {runtime_call}
  0x000000010f82f44c: jmpq   0x000000010f82f096
  0x000000010f82f451: mov    %rsi,0x8(%rsp)
  0x000000010f82f456: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f82f45e: callq  0x000000010f7d1a20  ; OopMap{[120]=Oop off=1827}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MethodTypeForm::findForm@-1 (line 311)
                                                ; - java.lang.invoke.MethodType::makeImpl@49 (line 309)
                                                ;   {runtime_call}
  0x000000010f82f463: jmpq   0x000000010f82f108
  0x000000010f82f468: mov    %rdx,%rdx
  0x000000010f82f46b: callq  0x000000010f7cd820  ; OopMap{[120]=Oop off=1840}
                                                ;*new  ; - java.lang.invoke.MethodTypeForm::findForm@11 (line 314)
                                                ; - java.lang.invoke.MethodType::makeImpl@49 (line 309)
                                                ;   {runtime_call}
  0x000000010f82f470: jmpq   0x000000010f82f1bf
  0x000000010f82f475: callq  0x000000010f7cd0c0  ; OopMap{[120]=Oop rax=Oop off=1850}
                                                ;*invokevirtual form
                                                ; - java.lang.invoke.MethodTypeForm::findForm@21 (line 317)
                                                ; - java.lang.invoke.MethodType::makeImpl@49 (line 309)
                                                ;   {runtime_call}
  0x000000010f82f47a: mov    %rax,(%rsp)
  0x000000010f82f47e: callq  0x000000010f7cf480  ; OopMap{off=1859}
                                                ;*checkcast
                                                ; - java.lang.invoke.MethodType::makeImpl@62 (line 310)
                                                ;   {runtime_call}
  0x000000010f82f483: nop
  0x000000010f82f484: nop
  0x000000010f82f485: mov    0x2a8(%r15),%rax
  0x000000010f82f48c: movabs $0x0,%r10
  0x000000010f82f496: mov    %r10,0x2a8(%r15)
  0x000000010f82f49d: movabs $0x0,%r10
  0x000000010f82f4a7: mov    %r10,0x2b0(%r15)
  0x000000010f82f4ae: add    $0x90,%rsp
  0x000000010f82f4b5: pop    %rbp
  0x000000010f82f4b6: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f82f4bb: hlt    
  0x000000010f82f4bc: hlt    
  0x000000010f82f4bd: hlt    
  0x000000010f82f4be: hlt    
  0x000000010f82f4bf: hlt    
[Stub Code]
  0x000000010f82f4c0: nop                       ;   {no_reloc}
  0x000000010f82f4c1: nop
  0x000000010f82f4c2: nop
  0x000000010f82f4c3: nop
  0x000000010f82f4c4: nop
  0x000000010f82f4c5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f82f4cf: jmpq   0x000000010f82f4cf  ;   {runtime_call}
  0x000000010f82f4d4: nop
  0x000000010f82f4d5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f82f4df: jmpq   0x000000010f82f4df  ;   {runtime_call}
  0x000000010f82f4e4: nop
  0x000000010f82f4e5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f82f4ef: jmpq   0x000000010f82f4ef  ;   {runtime_call}
  0x000000010f82f4f4: nop
  0x000000010f82f4f5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f82f4ff: jmpq   0x000000010f82f4ff  ;   {runtime_call}
  0x000000010f82f504: nop
  0x000000010f82f505: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f82f50f: jmpq   0x000000010f82f50f  ;   {runtime_call}
[Exception Handler]
  0x000000010f82f514: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f82f519: mov    %rsp,-0x28(%rsp)
  0x000000010f82f51e: sub    $0x80,%rsp
  0x000000010f82f525: mov    %rax,0x78(%rsp)
  0x000000010f82f52a: mov    %rcx,0x70(%rsp)
  0x000000010f82f52f: mov    %rdx,0x68(%rsp)
  0x000000010f82f534: mov    %rbx,0x60(%rsp)
  0x000000010f82f539: mov    %rbp,0x50(%rsp)
  0x000000010f82f53e: mov    %rsi,0x48(%rsp)
  0x000000010f82f543: mov    %rdi,0x40(%rsp)
  0x000000010f82f548: mov    %r8,0x38(%rsp)
  0x000000010f82f54d: mov    %r9,0x30(%rsp)
  0x000000010f82f552: mov    %r10,0x28(%rsp)
  0x000000010f82f557: mov    %r11,0x20(%rsp)
  0x000000010f82f55c: mov    %r12,0x18(%rsp)
  0x000000010f82f561: mov    %r13,0x10(%rsp)
  0x000000010f82f566: mov    %r14,0x8(%rsp)
  0x000000010f82f56b: mov    %r15,(%rsp)
  0x000000010f82f56f: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f82f579: movabs $0x10f82f519,%rsi  ;   {internal_word}
  0x000000010f82f583: mov    %rsp,%rdx
  0x000000010f82f586: and    $0xfffffffffffffff0,%rsp
  0x000000010f82f58a: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f82f58f: hlt    
[Deopt Handler Code]
  0x000000010f82f590: movabs $0x10f82f590,%r10  ;   {section_word}
  0x000000010f82f59a: push   %r10
  0x000000010f82f59c: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f82f5a1: hlt    
  0x000000010f82f5a2: hlt    
  0x000000010f82f5a3: hlt    
  0x000000010f82f5a4: hlt    
  0x000000010f82f5a5: hlt    
  0x000000010f82f5a6: hlt    
  0x000000010f82f5a7: hlt    
Decoding compiled method 0x000000010f82fa10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ea6a3d0} 'lastIndexOf' '(II)I' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  #           [sp+0x30]  (sp of caller)
  0x000000010f82fb60: mov    0x8(%rsi),%r10d
  0x000000010f82fb64: shl    $0x3,%r10
  0x000000010f82fb68: cmp    %r10,%rax
  0x000000010f82fb6b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f82fb71: data16 xchg %ax,%ax
  0x000000010f82fb74: nopl   0x0(%rax,%rax,1)
  0x000000010f82fb7c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f82fb80: mov    %eax,-0x14000(%rsp)
  0x000000010f82fb87: push   %rbp
  0x000000010f82fb88: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.String::lastIndexOf@-1 (line 1649)

  0x000000010f82fb8c: mov    %rsi,%r10
  0x000000010f82fb8f: cmp    $0x10000,%edx
  0x000000010f82fb95: jge    0x000000010f82fc75  ;*if_icmpge
                                                ; - java.lang.String::lastIndexOf@3 (line 1649)

  0x000000010f82fb9b: mov    0xc(%rsi),%ebp     ;*getfield value
                                                ; - java.lang.String::lastIndexOf@7 (line 1652)

  0x000000010f82fb9e: mov    0xc(%r12,%rbp,8),%r11d  ;*arraylength
                                                ; - java.lang.String::lastIndexOf@13 (line 1653)
                                                ; implicit exception: dispatches to 0x000000010f82fc91
  0x000000010f82fba3: mov    %r11d,%eax
  0x000000010f82fba6: dec    %eax               ;*isub
                                                ; - java.lang.String::lastIndexOf@15 (line 1653)

  0x000000010f82fba8: cmp    %eax,%ecx
  0x000000010f82fbaa: cmovl  %ecx,%eax          ;*invokestatic min
                                                ; - java.lang.String::lastIndexOf@16 (line 1653)

  0x000000010f82fbad: test   %eax,%eax
  0x000000010f82fbaf: jl     0x000000010f82fc3e  ;*iflt
                                                ; - java.lang.String::lastIndexOf@23 (line 1654)

  0x000000010f82fbb5: test   %r11d,%r11d
  0x000000010f82fbb8: jbe    0x000000010f82fc5d
  0x000000010f82fbbe: cmp    %r11d,%eax
  0x000000010f82fbc1: jae    0x000000010f82fc5d
  0x000000010f82fbc7: mov    %eax,%r10d
  0x000000010f82fbca: dec    %r10d
  0x000000010f82fbcd: lea    (%r12,%rbp,8),%r11  ;*aload_3
                                                ; - java.lang.String::lastIndexOf@26 (line 1655)

  0x000000010f82fbd1: movzwl 0x10(%r11,%rax,2),%r9d  ;*caload
                                                ; - java.lang.String::lastIndexOf@29 (line 1655)

  0x000000010f82fbd7: cmp    %edx,%r9d
  0x000000010f82fbda: je     0x000000010f82fc51  ;*if_icmpne
                                                ; - java.lang.String::lastIndexOf@31 (line 1655)

  0x000000010f82fbdc: dec    %eax               ;*iinc
                                                ; - java.lang.String::lastIndexOf@37 (line 1654)

  0x000000010f82fbde: cmp    %r10d,%eax
  0x000000010f82fbe1: jg     0x000000010f82fbd1  ;*iflt
                                                ; - java.lang.String::lastIndexOf@23 (line 1654)

  0x000000010f82fbe3: cmp    $0x2,%eax
  0x000000010f82fbe6: jle    0x000000010f82fc24
  0x000000010f82fbe8: nopl   0x0(%rax,%rax,1)   ;*aload_3
                                                ; - java.lang.String::lastIndexOf@26 (line 1655)

  0x000000010f82fbf0: movzwl 0x10(%r11,%rax,2),%r10d  ;*caload
                                                ; - java.lang.String::lastIndexOf@29 (line 1655)

  0x000000010f82fbf6: cmp    %edx,%r10d
  0x000000010f82fbf9: je     0x000000010f82fc51  ;*if_icmpne
                                                ; - java.lang.String::lastIndexOf@31 (line 1655)

  0x000000010f82fbfb: movzwl 0xe(%r11,%rax,2),%r10d  ;*caload
                                                ; - java.lang.String::lastIndexOf@29 (line 1655)

  0x000000010f82fc01: cmp    %edx,%r10d
  0x000000010f82fc04: je     0x000000010f82fc45  ;*if_icmpne
                                                ; - java.lang.String::lastIndexOf@31 (line 1655)

  0x000000010f82fc06: movzwl 0xc(%r11,%rax,2),%r10d  ;*caload
                                                ; - java.lang.String::lastIndexOf@29 (line 1655)

  0x000000010f82fc0c: cmp    %edx,%r10d
  0x000000010f82fc0f: je     0x000000010f82fc49  ;*if_icmpne
                                                ; - java.lang.String::lastIndexOf@31 (line 1655)

  0x000000010f82fc11: movzwl 0xa(%r11,%rax,2),%r10d  ;*caload
                                                ; - java.lang.String::lastIndexOf@29 (line 1655)

  0x000000010f82fc17: cmp    %edx,%r10d
  0x000000010f82fc1a: je     0x000000010f82fc4e  ;*if_icmpne
                                                ; - java.lang.String::lastIndexOf@31 (line 1655)

  0x000000010f82fc1c: add    $0xfffffffc,%eax   ;*iinc
                                                ; - java.lang.String::lastIndexOf@37 (line 1654)

  0x000000010f82fc1f: cmp    $0x2,%eax
  0x000000010f82fc22: jg     0x000000010f82fbf0  ;*iflt
                                                ; - java.lang.String::lastIndexOf@23 (line 1654)

  0x000000010f82fc24: cmp    $0xffffffff,%eax
  0x000000010f82fc27: jle    0x000000010f82fc3e
  0x000000010f82fc29: data16 xchg %ax,%ax       ;*aload_3
                                                ; - java.lang.String::lastIndexOf@26 (line 1655)

  0x000000010f82fc2c: movzwl 0x10(%r11,%rax,2),%r10d  ;*caload
                                                ; - java.lang.String::lastIndexOf@29 (line 1655)

  0x000000010f82fc32: cmp    %edx,%r10d
  0x000000010f82fc35: je     0x000000010f82fc51  ;*if_icmpne
                                                ; - java.lang.String::lastIndexOf@31 (line 1655)

  0x000000010f82fc37: dec    %eax               ;*iinc
                                                ; - java.lang.String::lastIndexOf@37 (line 1654)

  0x000000010f82fc39: cmp    $0xffffffff,%eax
  0x000000010f82fc3c: jg     0x000000010f82fc2c  ;*iconst_m1
                                                ; - java.lang.String::lastIndexOf@43 (line 1659)

  0x000000010f82fc3e: mov    $0xffffffff,%eax
  0x000000010f82fc43: jmp    0x000000010f82fc51
  0x000000010f82fc45: dec    %eax
  0x000000010f82fc47: jmp    0x000000010f82fc51
  0x000000010f82fc49: add    $0xfffffffe,%eax
  0x000000010f82fc4c: jmp    0x000000010f82fc51
  0x000000010f82fc4e: add    $0xfffffffd,%eax   ;*synchronization entry
                                                ; - java.lang.String::lastIndexOf@-1 (line 1649)

  0x000000010f82fc51: add    $0x20,%rsp
  0x000000010f82fc55: pop    %rbp
  0x000000010f82fc56: test   %eax,-0x8d94c5c(%rip)        # 0x0000000106a9b000
                                                ;   {poll_return}
  0x000000010f82fc5c: retq   
  0x000000010f82fc5d: mov    $0xffffff86,%esi
  0x000000010f82fc62: mov    %edx,(%rsp)
  0x000000010f82fc65: mov    %eax,0x4(%rsp)
  0x000000010f82fc69: xchg   %ax,%ax
  0x000000010f82fc6b: callq  0x000000010f7166a0  ; OopMap{rbp=NarrowOop off=272}
                                                ;*aload_3
                                                ; - java.lang.String::lastIndexOf@26 (line 1655)
                                                ;   {runtime_call}
  0x000000010f82fc70: callq  0x000000010948a904  ;*aload_3
                                                ; - java.lang.String::lastIndexOf@26 (line 1655)
                                                ;   {runtime_call}
  0x000000010f82fc75: mov    $0xffffff65,%esi
  0x000000010f82fc7a: mov    %edx,(%rsp)
  0x000000010f82fc7d: mov    %r10,0x8(%rsp)
  0x000000010f82fc82: mov    %ecx,0x4(%rsp)
  0x000000010f82fc86: nop
  0x000000010f82fc87: callq  0x000000010f7166a0  ; OopMap{[8]=Oop off=300}
                                                ;*if_icmpge
                                                ; - java.lang.String::lastIndexOf@3 (line 1649)
                                                ;   {runtime_call}
  0x000000010f82fc8c: callq  0x000000010948a904  ;*if_icmpge
                                                ; - java.lang.String::lastIndexOf@3 (line 1649)
                                                ;   {runtime_call}
  0x000000010f82fc91: mov    $0xfffffff6,%esi
  0x000000010f82fc96: nop
  0x000000010f82fc97: callq  0x000000010f7166a0  ; OopMap{off=316}
                                                ;*arraylength
                                                ; - java.lang.String::lastIndexOf@13 (line 1653)
                                                ;   {runtime_call}
  0x000000010f82fc9c: callq  0x000000010948a904  ;*arraylength
                                                ; - java.lang.String::lastIndexOf@13 (line 1653)
                                                ;   {runtime_call}
  0x000000010f82fca1: hlt    
  0x000000010f82fca2: hlt    
  0x000000010f82fca3: hlt    
  0x000000010f82fca4: hlt    
  0x000000010f82fca5: hlt    
  0x000000010f82fca6: hlt    
  0x000000010f82fca7: hlt    
  0x000000010f82fca8: hlt    
  0x000000010f82fca9: hlt    
  0x000000010f82fcaa: hlt    
  0x000000010f82fcab: hlt    
  0x000000010f82fcac: hlt    
  0x000000010f82fcad: hlt    
  0x000000010f82fcae: hlt    
  0x000000010f82fcaf: hlt    
  0x000000010f82fcb0: hlt    
  0x000000010f82fcb1: hlt    
  0x000000010f82fcb2: hlt    
  0x000000010f82fcb3: hlt    
  0x000000010f82fcb4: hlt    
  0x000000010f82fcb5: hlt    
  0x000000010f82fcb6: hlt    
  0x000000010f82fcb7: hlt    
  0x000000010f82fcb8: hlt    
  0x000000010f82fcb9: hlt    
  0x000000010f82fcba: hlt    
  0x000000010f82fcbb: hlt    
  0x000000010f82fcbc: hlt    
  0x000000010f82fcbd: hlt    
  0x000000010f82fcbe: hlt    
  0x000000010f82fcbf: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f82fcc0: jmpq   0x000000010f73fba0  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010f82fcc5: callq  0x000000010f82fcca
  0x000000010f82fcca: subq   $0x5,(%rsp)
  0x000000010f82fccf: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f82fcd4: hlt    
  0x000000010f82fcd5: hlt    
  0x000000010f82fcd6: hlt    
  0x000000010f82fcd7: hlt    
Decoding compiled method 0x000000010f82d6d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ec15cc0} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap'
  # this:     rsi:rsi   = 'java/util/concurrent/ConcurrentHashMap'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  #           [sp+0xa0]  (sp of caller)
  0x000000010f82d8e0: mov    0x8(%rsi),%r10d
  0x000000010f82d8e4: shl    $0x3,%r10
  0x000000010f82d8e8: cmp    %rax,%r10
  0x000000010f82d8eb: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f82d8f1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f82d8fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f82d900: mov    %eax,-0x14000(%rsp)
  0x000000010f82d907: push   %rbp
  0x000000010f82d908: sub    $0x90,%rsp
  0x000000010f82d90f: mov    %rdx,0x60(%rsp)
  0x000000010f82d914: movabs $0x10edbcf18,%rdi  ;   {metadata(method data for {method} {0x000000010ec15cc0} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f82d91e: mov    0xdc(%rdi),%ebx
  0x000000010f82d924: add    $0x8,%ebx
  0x000000010f82d927: mov    %ebx,0xdc(%rdi)
  0x000000010f82d92d: movabs $0x10ec15cc0,%rdi  ;   {metadata({method} {0x000000010ec15cc0} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f82d937: and    $0x1ff8,%ebx
  0x000000010f82d93d: cmp    $0x0,%ebx
  0x000000010f82d940: je     0x000000010f82e2a2  ;*aload_1
                                                ; - java.util.concurrent.ConcurrentHashMap::get@0 (line 936)

  0x000000010f82d946: mov    %rsi,0x58(%rsp)
  0x000000010f82d94b: cmp    (%rdx),%rax        ; implicit exception: dispatches to 0x000000010f82e2b9
  0x000000010f82d94e: mov    %rdx,%rdi
  0x000000010f82d951: movabs $0x10edbcf18,%rbx  ;   {metadata(method data for {method} {0x000000010ec15cc0} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f82d95b: mov    0x8(%rdi),%edi
  0x000000010f82d95e: shl    $0x3,%rdi
  0x000000010f82d962: cmp    0x110(%rbx),%rdi
  0x000000010f82d969: jne    0x000000010f82d978
  0x000000010f82d96b: addq   $0x1,0x118(%rbx)
  0x000000010f82d973: jmpq   0x000000010f82d9de
  0x000000010f82d978: cmp    0x120(%rbx),%rdi
  0x000000010f82d97f: jne    0x000000010f82d98e
  0x000000010f82d981: addq   $0x1,0x128(%rbx)
  0x000000010f82d989: jmpq   0x000000010f82d9de
  0x000000010f82d98e: cmpq   $0x0,0x110(%rbx)
  0x000000010f82d999: jne    0x000000010f82d9b2
  0x000000010f82d99b: mov    %rdi,0x110(%rbx)
  0x000000010f82d9a2: movq   $0x1,0x118(%rbx)
  0x000000010f82d9ad: jmpq   0x000000010f82d9de
  0x000000010f82d9b2: cmpq   $0x0,0x120(%rbx)
  0x000000010f82d9bd: jne    0x000000010f82d9d6
  0x000000010f82d9bf: mov    %rdi,0x120(%rbx)
  0x000000010f82d9c6: movq   $0x1,0x128(%rbx)
  0x000000010f82d9d1: jmpq   0x000000010f82d9de
  0x000000010f82d9d6: addq   $0x1,0x108(%rbx)
  0x000000010f82d9de: mov    %rdx,%rsi          ;*invokevirtual hashCode
                                                ; - java.util.concurrent.ConcurrentHashMap::get@1 (line 936)

  0x000000010f82d9e1: nop
  0x000000010f82d9e2: nop
  0x000000010f82d9e3: nop
  0x000000010f82d9e4: nop
  0x000000010f82d9e5: movabs $0xffffffffffffffff,%rax
  0x000000010f82d9ef: callq  0x000000010f7172e0  ; OopMap{[96]=Oop [88]=Oop off=276}
                                                ;*invokevirtual hashCode
                                                ; - java.util.concurrent.ConcurrentHashMap::get@1 (line 936)
                                                ;   {virtual_call}
  0x000000010f82d9f4: movabs $0x10edbcf18,%rcx  ;   {metadata(method data for {method} {0x000000010ec15cc0} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f82d9fe: addq   $0x1,0x138(%rcx)
  0x000000010f82da06: movabs $0x10ed9a268,%rcx  ;   {metadata(method data for {method} {0x000000010ec15238} 'spread' '(I)I' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f82da10: mov    0xdc(%rcx),%edx
  0x000000010f82da16: add    $0x8,%edx
  0x000000010f82da19: mov    %edx,0xdc(%rcx)
  0x000000010f82da1f: movabs $0x10ec15238,%rcx  ;   {metadata({method} {0x000000010ec15238} 'spread' '(I)I' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f82da29: and    $0x7ffff8,%edx
  0x000000010f82da2f: cmp    $0x0,%edx
  0x000000010f82da32: je     0x000000010f82e2be
  0x000000010f82da38: mov    %rax,%rcx
  0x000000010f82da3b: shr    $0x10,%ecx
  0x000000010f82da3e: xor    %rax,%rcx
  0x000000010f82da41: and    $0x7fffffff,%ecx
  0x000000010f82da47: mov    %ecx,0x70(%rsp)
  0x000000010f82da4b: mov    0x58(%rsp),%rsi
  0x000000010f82da50: mov    0x28(%rsi),%edx
  0x000000010f82da53: shl    $0x3,%rdx          ;*getfield table
                                                ; - java.util.concurrent.ConcurrentHashMap::get@10 (line 937)

  0x000000010f82da57: cmp    $0x0,%rdx
  0x000000010f82da5b: movabs $0x10edbcf18,%rsi  ;   {metadata(method data for {method} {0x000000010ec15cc0} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f82da65: movabs $0x148,%rdi
  0x000000010f82da6f: je     0x000000010f82da7f
  0x000000010f82da75: movabs $0x158,%rdi
  0x000000010f82da7f: mov    (%rsi,%rdi,1),%rbx
  0x000000010f82da83: lea    0x1(%rbx),%rbx
  0x000000010f82da87: mov    %rbx,(%rsi,%rdi,1)
  0x000000010f82da8b: je     0x000000010f82e25d  ;*ifnull
                                                ; - java.util.concurrent.ConcurrentHashMap::get@15 (line 937)

  0x000000010f82da91: mov    0xc(%rdx),%esi     ;*arraylength
                                                ; - java.util.concurrent.ConcurrentHashMap::get@19 (line 937)
                                                ; implicit exception: dispatches to 0x000000010f82e2d5
  0x000000010f82da94: cmp    $0x0,%esi
  0x000000010f82da97: movabs $0x10edbcf18,%rdi  ;   {metadata(method data for {method} {0x000000010ec15cc0} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f82daa1: movabs $0x168,%rbx
  0x000000010f82daab: jle    0x000000010f82dabb
  0x000000010f82dab1: movabs $0x178,%rbx
  0x000000010f82dabb: mov    (%rdi,%rbx,1),%rax
  0x000000010f82dabf: lea    0x1(%rax),%rax
  0x000000010f82dac3: mov    %rax,(%rdi,%rbx,1)
  0x000000010f82dac7: jle    0x000000010f82e25d  ;*ifle
                                                ; - java.util.concurrent.ConcurrentHashMap::get@23 (line 937)

  0x000000010f82dacd: movabs $0x10edbcf18,%rdi  ;   {metadata(method data for {method} {0x000000010ec15cc0} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f82dad7: addq   $0x1,0x188(%rdi)
  0x000000010f82dadf: dec    %esi
  0x000000010f82dae1: and    %rcx,%rsi
  0x000000010f82dae4: movabs $0x10ed56590,%rdi  ;   {metadata(method data for {method} {0x000000010ec15568} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f82daee: mov    0xdc(%rdi),%ebx
  0x000000010f82daf4: add    $0x8,%ebx
  0x000000010f82daf7: mov    %ebx,0xdc(%rdi)
  0x000000010f82dafd: movabs $0x10ec15568,%rdi  ;   {metadata({method} {0x000000010ec15568} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f82db07: and    $0x7ffff8,%ebx
  0x000000010f82db0d: cmp    $0x0,%ebx
  0x000000010f82db10: je     0x000000010f82e2da
  0x000000010f82db16: movslq %esi,%rsi
  0x000000010f82db19: mov    %rcx,%rdi
  0x000000010f82db1c: mov    $0x2,%ecx
  0x000000010f82db21: shl    %cl,%rsi
  0x000000010f82db24: movabs $0x10,%r10
  0x000000010f82db2e: add    %r10,%rsi
  0x000000010f82db31: mov    (%rdx,%rsi,1),%edx
  0x000000010f82db34: shl    $0x3,%rdx
  0x000000010f82db38: cmp    $0x0,%rdx
  0x000000010f82db3c: jne    0x000000010f82db57
  0x000000010f82db3e: movabs $0x10ed56590,%rsi  ;   {metadata(method data for {method} {0x000000010ec15568} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f82db48: orl    $0x100,0x130(%rsi)
  0x000000010f82db52: jmpq   0x000000010f82dc18
  0x000000010f82db57: movabs $0x7c0035040,%rax  ;   {metadata('java/util/concurrent/ConcurrentHashMap$Node')}
  0x000000010f82db61: mov    0x8(%rdx),%esi
  0x000000010f82db64: shl    $0x3,%rsi
  0x000000010f82db68: cmp    0x30(%rsi),%rax
  0x000000010f82db6c: jne    0x000000010f82dbfc
  0x000000010f82db72: movabs $0x10ed56590,%rsi  ;   {metadata(method data for {method} {0x000000010ec15568} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f82db7c: mov    0x8(%rdx),%eax
  0x000000010f82db7f: shl    $0x3,%rax
  0x000000010f82db83: cmp    0x140(%rsi),%rax
  0x000000010f82db8a: jne    0x000000010f82db99
  0x000000010f82db8c: addq   $0x1,0x148(%rsi)
  0x000000010f82db94: jmpq   0x000000010f82dc18
  0x000000010f82db99: cmp    0x150(%rsi),%rax
  0x000000010f82dba0: jne    0x000000010f82dbaf
  0x000000010f82dba2: addq   $0x1,0x158(%rsi)
  0x000000010f82dbaa: jmpq   0x000000010f82dc18
  0x000000010f82dbaf: cmpq   $0x0,0x140(%rsi)
  0x000000010f82dbba: jne    0x000000010f82dbd3
  0x000000010f82dbbc: mov    %rax,0x140(%rsi)
  0x000000010f82dbc3: movq   $0x1,0x148(%rsi)
  0x000000010f82dbce: jmpq   0x000000010f82dc18
  0x000000010f82dbd3: cmpq   $0x0,0x150(%rsi)
  0x000000010f82dbde: jne    0x000000010f82dbf7
  0x000000010f82dbe0: mov    %rax,0x150(%rsi)
  0x000000010f82dbe7: movq   $0x1,0x158(%rsi)
  0x000000010f82dbf2: jmpq   0x000000010f82dc18
  0x000000010f82dbf7: jmpq   0x000000010f82dc18
  0x000000010f82dbfc: movabs $0x10ed56590,%rsi  ;   {metadata(method data for {method} {0x000000010ec15568} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f82dc06: subq   $0x1,0x138(%rsi)
  0x000000010f82dc0e: jmpq   0x000000010f82e2f1
  0x000000010f82dc13: jmpq   0x000000010f82dc18
  0x000000010f82dc18: mov    %rdx,%rbx          ;*checkcast
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@17 (line 755)
                                                ; - java.util.concurrent.ConcurrentHashMap::get@34 (line 938)

  0x000000010f82dc1b: cmp    $0x0,%rbx
  0x000000010f82dc1f: movabs $0x10edbcf18,%rdx  ;   {metadata(method data for {method} {0x000000010ec15cc0} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f82dc29: movabs $0x198,%rsi
  0x000000010f82dc33: je     0x000000010f82dc43
  0x000000010f82dc39: movabs $0x1a8,%rsi
  0x000000010f82dc43: mov    (%rdx,%rsi,1),%rax
  0x000000010f82dc47: lea    0x1(%rax),%rax
  0x000000010f82dc4b: mov    %rax,(%rdx,%rsi,1)
  0x000000010f82dc4f: je     0x000000010f82e25d  ;*ifnull
                                                ; - java.util.concurrent.ConcurrentHashMap::get@39 (line 938)

  0x000000010f82dc55: mov    0xc(%rbx),%esi     ;*getfield hash
                                                ; - java.util.concurrent.ConcurrentHashMap::get@43 (line 939)
                                                ; implicit exception: dispatches to 0x000000010f82e2fa
  0x000000010f82dc58: cmp    %edi,%esi
  0x000000010f82dc5a: movabs $0x10edbcf18,%rdx  ;   {metadata(method data for {method} {0x000000010ec15cc0} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f82dc64: movabs $0x1b8,%rax
  0x000000010f82dc6e: jne    0x000000010f82dc7e
  0x000000010f82dc74: movabs $0x1c8,%rax
  0x000000010f82dc7e: mov    (%rdx,%rax,1),%rcx
  0x000000010f82dc82: lea    0x1(%rcx),%rcx
  0x000000010f82dc86: mov    %rcx,(%rdx,%rax,1)
  0x000000010f82dc8a: jne    0x000000010f82de10  ;*if_icmpne
                                                ; - java.util.concurrent.ConcurrentHashMap::get@51 (line 939)

  0x000000010f82dc90: mov    0x60(%rsp),%rdx
  0x000000010f82dc95: mov    0x10(%rbx),%esi
  0x000000010f82dc98: shl    $0x3,%rsi          ;*getfield key
                                                ; - java.util.concurrent.ConcurrentHashMap::get@55 (line 940)

  0x000000010f82dc9c: cmp    %rdx,%rsi
  0x000000010f82dc9f: movabs $0x10edbcf18,%rax  ;   {metadata(method data for {method} {0x000000010ec15cc0} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f82dca9: movabs $0x1d8,%rcx
  0x000000010f82dcb3: je     0x000000010f82dcc3
  0x000000010f82dcb9: movabs $0x1e8,%rcx
  0x000000010f82dcc3: mov    (%rax,%rcx,1),%r8
  0x000000010f82dcc7: lea    0x1(%r8),%r8
  0x000000010f82dccb: mov    %r8,(%rax,%rcx,1)
  0x000000010f82dccf: je     0x000000010f82e28c  ;*if_acmpeq
                                                ; - java.util.concurrent.ConcurrentHashMap::get@62 (line 940)

  0x000000010f82dcd5: cmp    $0x0,%rsi
  0x000000010f82dcd9: movabs $0x10edbcf18,%rax  ;   {metadata(method data for {method} {0x000000010ec15cc0} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f82dce3: movabs $0x1f8,%rcx
  0x000000010f82dced: je     0x000000010f82dcfd
  0x000000010f82dcf3: movabs $0x208,%rcx
  0x000000010f82dcfd: mov    (%rax,%rcx,1),%r8
  0x000000010f82dd01: lea    0x1(%r8),%r8
  0x000000010f82dd05: mov    %r8,(%rax,%rcx,1)
  0x000000010f82dd09: jne    0x000000010f82dd17  ;*ifnull
                                                ; - java.util.concurrent.ConcurrentHashMap::get@67 (line 940)

  0x000000010f82dd0f: mov    %rdi,%rcx
  0x000000010f82dd12: jmpq   0x000000010f82de60  ;*aload_3
                                                ; - java.util.concurrent.ConcurrentHashMap::get@112 (line 945)

  0x000000010f82dd17: mov    %rbx,0x68(%rsp)
  0x000000010f82dd1c: mov    %rdx,%rdi
  0x000000010f82dd1f: movabs $0x10edbcf18,%rax  ;   {metadata(method data for {method} {0x000000010ec15cc0} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f82dd29: mov    0x8(%rdi),%edi
  0x000000010f82dd2c: shl    $0x3,%rdi
  0x000000010f82dd30: cmp    0x220(%rax),%rdi
  0x000000010f82dd37: jne    0x000000010f82dd46
  0x000000010f82dd39: addq   $0x1,0x228(%rax)
  0x000000010f82dd41: jmpq   0x000000010f82ddac
  0x000000010f82dd46: cmp    0x230(%rax),%rdi
  0x000000010f82dd4d: jne    0x000000010f82dd5c
  0x000000010f82dd4f: addq   $0x1,0x238(%rax)
  0x000000010f82dd57: jmpq   0x000000010f82ddac
  0x000000010f82dd5c: cmpq   $0x0,0x220(%rax)
  0x000000010f82dd67: jne    0x000000010f82dd80
  0x000000010f82dd69: mov    %rdi,0x220(%rax)
  0x000000010f82dd70: movq   $0x1,0x228(%rax)
  0x000000010f82dd7b: jmpq   0x000000010f82ddac
  0x000000010f82dd80: cmpq   $0x0,0x230(%rax)
  0x000000010f82dd8b: jne    0x000000010f82dda4
  0x000000010f82dd8d: mov    %rdi,0x230(%rax)
  0x000000010f82dd94: movq   $0x1,0x238(%rax)
  0x000000010f82dd9f: jmpq   0x000000010f82ddac
  0x000000010f82dda4: addq   $0x1,0x218(%rax)
  0x000000010f82ddac: mov    %rdx,%rdi
  0x000000010f82ddaf: mov    %rsi,%rdx
  0x000000010f82ddb2: mov    %rdi,%rsi          ;*invokevirtual equals
                                                ; - java.util.concurrent.ConcurrentHashMap::get@73 (line 940)

  0x000000010f82ddb5: movabs $0xffffffffffffffff,%rax
  0x000000010f82ddbf: callq  0x000000010f7172e0  ; OopMap{[104]=Oop [96]=Oop off=1252}
                                                ;*invokevirtual equals
                                                ; - java.util.concurrent.ConcurrentHashMap::get@73 (line 940)
                                                ;   {virtual_call}
  0x000000010f82ddc4: cmp    $0x0,%eax
  0x000000010f82ddc7: movabs $0x10edbcf18,%rdx  ;   {metadata(method data for {method} {0x000000010ec15cc0} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f82ddd1: movabs $0x248,%rsi
  0x000000010f82dddb: je     0x000000010f82ddeb
  0x000000010f82dde1: movabs $0x258,%rsi
  0x000000010f82ddeb: mov    (%rdx,%rsi,1),%rdi
  0x000000010f82ddef: lea    0x1(%rdi),%rdi
  0x000000010f82ddf3: mov    %rdi,(%rdx,%rsi,1)  ;*ifeq
                                                ; - java.util.concurrent.ConcurrentHashMap::get@76 (line 940)

  0x000000010f82ddf7: mov    0x68(%rsp),%rbx    ;*aload_3
                                                ; - java.util.concurrent.ConcurrentHashMap::get@112 (line 945)

  0x000000010f82ddfc: jne    0x000000010f82e28c  ;*ifeq
                                                ; - java.util.concurrent.ConcurrentHashMap::get@76 (line 940)

  0x000000010f82de02: mov    0x70(%rsp),%ecx
  0x000000010f82de06: mov    0x60(%rsp),%rdx
  0x000000010f82de0b: jmpq   0x000000010f82de60  ;*aload_3
                                                ; - java.util.concurrent.ConcurrentHashMap::get@112 (line 945)

  0x000000010f82de10: mov    %rbx,0x68(%rsp)
  0x000000010f82de15: cmp    $0x0,%esi
  0x000000010f82de18: movabs $0x10edbcf18,%rdx  ;   {metadata(method data for {method} {0x000000010ec15cc0} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f82de22: movabs $0x268,%rsi
  0x000000010f82de2c: jge    0x000000010f82de3c
  0x000000010f82de32: movabs $0x278,%rsi
  0x000000010f82de3c: mov    (%rdx,%rsi,1),%rdi
  0x000000010f82de40: lea    0x1(%rdi),%rdi
  0x000000010f82de44: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f82de48: jl     0x000000010f82e12d  ;*ifge
                                                ; - java.util.concurrent.ConcurrentHashMap::get@86 (line 943)

  0x000000010f82de4e: mov    0x68(%rsp),%rbx    ;*aload_3
                                                ; - java.util.concurrent.ConcurrentHashMap::get@112 (line 945)

  0x000000010f82de53: mov    0x70(%rsp),%ecx
  0x000000010f82de57: mov    0x60(%rsp),%rdx
  0x000000010f82de5c: nopl   0x0(%rax)
  0x000000010f82de60: mov    0x18(%rbx),%edi    ; implicit exception: dispatches to 0x000000010f82e2ff
  0x000000010f82de63: shl    $0x3,%rdi          ;*getfield next
                                                ; - java.util.concurrent.ConcurrentHashMap::get@113 (line 945)

  0x000000010f82de67: cmp    $0x0,%rdi
  0x000000010f82de6b: movabs $0x10edbcf18,%rsi  ;   {metadata(method data for {method} {0x000000010ec15cc0} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f82de75: movabs $0x2f0,%rbx
  0x000000010f82de7f: je     0x000000010f82de8f
  0x000000010f82de85: movabs $0x300,%rbx
  0x000000010f82de8f: mov    (%rsi,%rbx,1),%rax
  0x000000010f82de93: lea    0x1(%rax),%rax
  0x000000010f82de97: mov    %rax,(%rsi,%rbx,1)
  0x000000010f82de9b: je     0x000000010f82e25d  ;*ifnull
                                                ; - java.util.concurrent.ConcurrentHashMap::get@118 (line 945)

  0x000000010f82dea1: mov    0xc(%rdi),%esi     ;*getfield hash
                                                ; - java.util.concurrent.ConcurrentHashMap::get@122 (line 946)
                                                ; implicit exception: dispatches to 0x000000010f82e304
  0x000000010f82dea4: movabs $0x10edbcf18,%rbx  ;   {metadata(method data for {method} {0x000000010ec15cc0} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f82deae: mov    0xe0(%rbx),%eax
  0x000000010f82deb4: add    $0x8,%eax
  0x000000010f82deb7: mov    %eax,0xe0(%rbx)
  0x000000010f82debd: movabs $0x10ec15cc0,%rbx  ;   {metadata({method} {0x000000010ec15cc0} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f82dec7: and    $0xfff8,%eax
  0x000000010f82decd: cmp    $0x0,%eax
  0x000000010f82ded0: je     0x000000010f82e309  ; OopMap{rdx=Oop [96]=Oop rdi=Oop off=1526}
                                                ;*if_icmpne
                                                ; - java.util.concurrent.ConcurrentHashMap::get@127 (line 946)

  0x000000010f82ded6: test   %eax,-0x8d92ddc(%rip)        # 0x0000000106a9b100
                                                ;   {poll}
  0x000000010f82dedc: cmp    %ecx,%esi
  0x000000010f82dede: movabs $0x10edbcf18,%rsi  ;   {metadata(method data for {method} {0x000000010ec15cc0} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f82dee8: movabs $0x310,%rbx
  0x000000010f82def2: jne    0x000000010f82df02
  0x000000010f82def8: movabs $0x320,%rbx
  0x000000010f82df02: mov    (%rsi,%rbx,1),%rax
  0x000000010f82df06: lea    0x1(%rax),%rax
  0x000000010f82df0a: mov    %rax,(%rsi,%rbx,1)
  0x000000010f82df0e: jne    0x000000010f82e10b  ;*if_icmpne
                                                ; - java.util.concurrent.ConcurrentHashMap::get@127 (line 946)

  0x000000010f82df14: mov    0x10(%rdi),%esi
  0x000000010f82df17: shl    $0x3,%rsi          ;*getfield key
                                                ; - java.util.concurrent.ConcurrentHashMap::get@131 (line 946)

  0x000000010f82df1b: cmp    %rdx,%rsi
  0x000000010f82df1e: movabs $0x10edbcf18,%rbx  ;   {metadata(method data for {method} {0x000000010ec15cc0} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f82df28: movabs $0x330,%rax
  0x000000010f82df32: je     0x000000010f82df42
  0x000000010f82df38: movabs $0x340,%rax
  0x000000010f82df42: mov    (%rbx,%rax,1),%r8
  0x000000010f82df46: lea    0x1(%r8),%r8
  0x000000010f82df4a: mov    %r8,(%rbx,%rax,1)
  0x000000010f82df4e: je     0x000000010f82e276  ;*if_acmpeq
                                                ; - java.util.concurrent.ConcurrentHashMap::get@138 (line 946)

  0x000000010f82df54: movabs $0x10edbcf18,%rbx  ;   {metadata(method data for {method} {0x000000010ec15cc0} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f82df5e: mov    0xe0(%rbx),%eax
  0x000000010f82df64: add    $0x8,%eax
  0x000000010f82df67: mov    %eax,0xe0(%rbx)
  0x000000010f82df6d: movabs $0x10ec15cc0,%rbx  ;   {metadata({method} {0x000000010ec15cc0} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f82df77: and    $0xfff8,%eax
  0x000000010f82df7d: cmp    $0x0,%eax
  0x000000010f82df80: je     0x000000010f82e320  ; OopMap{rdx=Oop [96]=Oop rdi=Oop rsi=Oop off=1702}
                                                ;*ifnull
                                                ; - java.util.concurrent.ConcurrentHashMap::get@143 (line 946)

  0x000000010f82df86: test   %eax,-0x8d92e8c(%rip)        # 0x0000000106a9b100
                                                ;   {poll}
  0x000000010f82df8c: cmp    $0x0,%rsi
  0x000000010f82df90: movabs $0x10edbcf18,%rbx  ;   {metadata(method data for {method} {0x000000010ec15cc0} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f82df9a: movabs $0x350,%rax
  0x000000010f82dfa4: je     0x000000010f82dfb4
  0x000000010f82dfaa: movabs $0x360,%rax
  0x000000010f82dfb4: mov    (%rbx,%rax,1),%r8
  0x000000010f82dfb8: lea    0x1(%r8),%r8
  0x000000010f82dfbc: mov    %r8,(%rbx,%rax,1)
  0x000000010f82dfc0: mov    %rdi,0x78(%rsp)
  0x000000010f82dfc5: je     0x000000010f82e0f8  ;*ifnull
                                                ; - java.util.concurrent.ConcurrentHashMap::get@143 (line 946)

  0x000000010f82dfcb: mov    %rdx,%rbx
  0x000000010f82dfce: movabs $0x10edbcf18,%rax  ;   {metadata(method data for {method} {0x000000010ec15cc0} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f82dfd8: mov    0x8(%rbx),%ebx
  0x000000010f82dfdb: shl    $0x3,%rbx
  0x000000010f82dfdf: cmp    0x378(%rax),%rbx
  0x000000010f82dfe6: jne    0x000000010f82dff5
  0x000000010f82dfe8: addq   $0x1,0x380(%rax)
  0x000000010f82dff0: jmpq   0x000000010f82e05b
  0x000000010f82dff5: cmp    0x388(%rax),%rbx
  0x000000010f82dffc: jne    0x000000010f82e00b
  0x000000010f82dffe: addq   $0x1,0x390(%rax)
  0x000000010f82e006: jmpq   0x000000010f82e05b
  0x000000010f82e00b: cmpq   $0x0,0x378(%rax)
  0x000000010f82e016: jne    0x000000010f82e02f
  0x000000010f82e018: mov    %rbx,0x378(%rax)
  0x000000010f82e01f: movq   $0x1,0x380(%rax)
  0x000000010f82e02a: jmpq   0x000000010f82e05b
  0x000000010f82e02f: cmpq   $0x0,0x388(%rax)
  0x000000010f82e03a: jne    0x000000010f82e053
  0x000000010f82e03c: mov    %rbx,0x388(%rax)
  0x000000010f82e043: movq   $0x1,0x390(%rax)
  0x000000010f82e04e: jmpq   0x000000010f82e05b
  0x000000010f82e053: addq   $0x1,0x370(%rax)
  0x000000010f82e05b: mov    %rdx,%rbx
  0x000000010f82e05e: mov    %rsi,%rdx
  0x000000010f82e061: mov    %rbx,%rsi          ;*invokevirtual equals
                                                ; - java.util.concurrent.ConcurrentHashMap::get@149 (line 947)

  0x000000010f82e064: nop
  0x000000010f82e065: movabs $0xffffffffffffffff,%rax
  0x000000010f82e06f: callq  0x000000010f7172e0  ; OopMap{[96]=Oop [120]=Oop off=1940}
                                                ;*invokevirtual equals
                                                ; - java.util.concurrent.ConcurrentHashMap::get@149 (line 947)
                                                ;   {virtual_call}
  0x000000010f82e074: movabs $0x10edbcf18,%rdx  ;   {metadata(method data for {method} {0x000000010ec15cc0} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f82e07e: mov    0xe0(%rdx),%ecx
  0x000000010f82e084: add    $0x8,%ecx
  0x000000010f82e087: mov    %ecx,0xe0(%rdx)
  0x000000010f82e08d: movabs $0x10ec15cc0,%rdx  ;   {metadata({method} {0x000000010ec15cc0} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f82e097: and    $0xfff8,%ecx
  0x000000010f82e09d: cmp    $0x0,%ecx
  0x000000010f82e0a0: je     0x000000010f82e337  ; OopMap{[96]=Oop [120]=Oop off=1990}
                                                ;*ifeq
                                                ; - java.util.concurrent.ConcurrentHashMap::get@152 (line 947)

  0x000000010f82e0a6: test   %eax,-0x8d92fac(%rip)        # 0x0000000106a9b100
                                                ;   {poll}
  0x000000010f82e0ac: cmp    $0x0,%eax
  0x000000010f82e0af: movabs $0x10edbcf18,%rdx  ;   {metadata(method data for {method} {0x000000010ec15cc0} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f82e0b9: movabs $0x3a0,%rcx
  0x000000010f82e0c3: je     0x000000010f82e0d3
  0x000000010f82e0c9: movabs $0x3b0,%rcx
  0x000000010f82e0d3: mov    (%rdx,%rcx,1),%rsi
  0x000000010f82e0d7: lea    0x1(%rsi),%rsi
  0x000000010f82e0db: mov    %rsi,(%rdx,%rcx,1)
  0x000000010f82e0df: jne    0x000000010f82e123  ;*ifeq
                                                ; - java.util.concurrent.ConcurrentHashMap::get@152 (line 947)

  0x000000010f82e0e5: mov    0x78(%rsp),%rbx
  0x000000010f82e0ea: mov    0x70(%rsp),%ecx
  0x000000010f82e0ee: mov    0x60(%rsp),%rdx
  0x000000010f82e0f3: jmpq   0x000000010f82de60
  0x000000010f82e0f8: mov    0x78(%rsp),%rbx
  0x000000010f82e0fd: mov    0x70(%rsp),%ecx
  0x000000010f82e101: mov    0x60(%rsp),%rdx
  0x000000010f82e106: jmpq   0x000000010f82de60
  0x000000010f82e10b: mov    %rdi,0x78(%rsp)
  0x000000010f82e110: mov    0x78(%rsp),%rbx
  0x000000010f82e115: mov    0x70(%rsp),%ecx
  0x000000010f82e119: mov    0x60(%rsp),%rdx
  0x000000010f82e11e: jmpq   0x000000010f82de60  ;*aload_3
                                                ; - java.util.concurrent.ConcurrentHashMap::get@112 (line 945)

  0x000000010f82e123: mov    0x78(%rsp),%rdi
  0x000000010f82e128: jmpq   0x000000010f82e276  ;*aload_3
                                                ; - java.util.concurrent.ConcurrentHashMap::get@155 (line 948)

  0x000000010f82e12d: mov    0x70(%rsp),%ecx
  0x000000010f82e131: mov    0x60(%rsp),%rsi
  0x000000010f82e136: mov    0x68(%rsp),%rbx
  0x000000010f82e13b: movabs $0x10edbcf18,%rdx  ;   {metadata(method data for {method} {0x000000010ec15cc0} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f82e145: mov    0x8(%rbx),%ebx
  0x000000010f82e148: shl    $0x3,%rbx
  0x000000010f82e14c: cmp    0x290(%rdx),%rbx
  0x000000010f82e153: jne    0x000000010f82e162
  0x000000010f82e155: addq   $0x1,0x298(%rdx)
  0x000000010f82e15d: jmpq   0x000000010f82e1c8
  0x000000010f82e162: cmp    0x2a0(%rdx),%rbx
  0x000000010f82e169: jne    0x000000010f82e178
  0x000000010f82e16b: addq   $0x1,0x2a8(%rdx)
  0x000000010f82e173: jmpq   0x000000010f82e1c8
  0x000000010f82e178: cmpq   $0x0,0x290(%rdx)
  0x000000010f82e183: jne    0x000000010f82e19c
  0x000000010f82e185: mov    %rbx,0x290(%rdx)
  0x000000010f82e18c: movq   $0x1,0x298(%rdx)
  0x000000010f82e197: jmpq   0x000000010f82e1c8
  0x000000010f82e19c: cmpq   $0x0,0x2a0(%rdx)
  0x000000010f82e1a7: jne    0x000000010f82e1c0
  0x000000010f82e1a9: mov    %rbx,0x2a0(%rdx)
  0x000000010f82e1b0: movq   $0x1,0x2a8(%rdx)
  0x000000010f82e1bb: jmpq   0x000000010f82e1c8
  0x000000010f82e1c0: addq   $0x1,0x288(%rdx)
  0x000000010f82e1c8: mov    %rcx,%rdx
  0x000000010f82e1cb: mov    %rsi,%rcx
  0x000000010f82e1ce: mov    0x68(%rsp),%rsi    ;*invokevirtual find
                                                ; - java.util.concurrent.ConcurrentHashMap::get@93 (line 944)

  0x000000010f82e1d3: nop
  0x000000010f82e1d4: nop
  0x000000010f82e1d5: movabs $0xffffffffffffffff,%rax
  0x000000010f82e1df: callq  0x000000010f7172e0  ; OopMap{off=2308}
                                                ;*invokevirtual find
                                                ; - java.util.concurrent.ConcurrentHashMap::get@93 (line 944)
                                                ;   {virtual_call}
  0x000000010f82e1e4: cmp    $0x0,%rax
  0x000000010f82e1e8: movabs $0x10edbcf18,%rsi  ;   {metadata(method data for {method} {0x000000010ec15cc0} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f82e1f2: movabs $0x2b8,%rdi
  0x000000010f82e1fc: je     0x000000010f82e20c
  0x000000010f82e202: movabs $0x2c8,%rdi
  0x000000010f82e20c: mov    (%rsi,%rdi,1),%rbx
  0x000000010f82e210: lea    0x1(%rbx),%rbx
  0x000000010f82e214: mov    %rbx,(%rsi,%rdi,1)
  0x000000010f82e218: je     0x000000010f82e244  ;*ifnull
                                                ; - java.util.concurrent.ConcurrentHashMap::get@99 (line 944)

  0x000000010f82e21e: mov    0x14(%rax),%eax    ; implicit exception: dispatches to 0x000000010f82e34e
  0x000000010f82e221: shl    $0x3,%rax          ;*getfield val
                                                ; - java.util.concurrent.ConcurrentHashMap::get@104 (line 944)

  0x000000010f82e225: movabs $0x10edbcf18,%rsi  ;   {metadata(method data for {method} {0x000000010ec15cc0} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f82e22f: incl   0x2d8(%rsi)        ;*goto
                                                ; - java.util.concurrent.ConcurrentHashMap::get@107 (line 944)

  0x000000010f82e235: add    $0x90,%rsp
  0x000000010f82e23c: pop    %rbp
  0x000000010f82e23d: test   %eax,-0x8d93143(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f82e243: retq   
  0x000000010f82e244: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000010f82e24e: add    $0x90,%rsp
  0x000000010f82e255: pop    %rbp
  0x000000010f82e256: test   %eax,-0x8d9315c(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f82e25c: retq                      ;*areturn
                                                ; - java.util.concurrent.ConcurrentHashMap::get@111 (line 944)

  0x000000010f82e25d: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000010f82e267: add    $0x90,%rsp
  0x000000010f82e26e: pop    %rbp
  0x000000010f82e26f: test   %eax,-0x8d93175(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f82e275: retq                      ;*areturn
                                                ; - java.util.concurrent.ConcurrentHashMap::get@161 (line 951)

  0x000000010f82e276: mov    0x14(%rdi),%eax
  0x000000010f82e279: shl    $0x3,%rax          ;*getfield val
                                                ; - java.util.concurrent.ConcurrentHashMap::get@156 (line 948)

  0x000000010f82e27d: add    $0x90,%rsp
  0x000000010f82e284: pop    %rbp
  0x000000010f82e285: test   %eax,-0x8d9318b(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f82e28b: retq                      ;*areturn
                                                ; - java.util.concurrent.ConcurrentHashMap::get@159 (line 948)

  0x000000010f82e28c: mov    0x14(%rbx),%eax
  0x000000010f82e28f: shl    $0x3,%rax          ;*getfield val
                                                ; - java.util.concurrent.ConcurrentHashMap::get@80 (line 941)

  0x000000010f82e293: add    $0x90,%rsp
  0x000000010f82e29a: pop    %rbp
  0x000000010f82e29b: test   %eax,-0x8d931a1(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f82e2a1: retq   
  0x000000010f82e2a2: mov    %rdi,0x8(%rsp)
  0x000000010f82e2a7: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f82e2af: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop rdx=Oop [96]=Oop off=2516}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::get@-1 (line 936)
                                                ;   {runtime_call}
  0x000000010f82e2b4: jmpq   0x000000010f82d946
  0x000000010f82e2b9: callq  0x000000010f7cd0c0  ; OopMap{rdx=Oop [96]=Oop [88]=Oop off=2526}
                                                ;*invokevirtual hashCode
                                                ; - java.util.concurrent.ConcurrentHashMap::get@1 (line 936)
                                                ;   {runtime_call}
  0x000000010f82e2be: mov    %rcx,0x8(%rsp)
  0x000000010f82e2c3: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f82e2cb: callq  0x000000010f7d1a20  ; OopMap{[96]=Oop [88]=Oop off=2544}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::spread@-1 (line 685)
                                                ; - java.util.concurrent.ConcurrentHashMap::get@4 (line 936)
                                                ;   {runtime_call}
  0x000000010f82e2d0: jmpq   0x000000010f82da38
  0x000000010f82e2d5: callq  0x000000010f7cd0c0  ; OopMap{rdx=Oop [96]=Oop off=2554}
                                                ;*arraylength
                                                ; - java.util.concurrent.ConcurrentHashMap::get@19 (line 937)
                                                ;   {runtime_call}
  0x000000010f82e2da: mov    %rdi,0x8(%rsp)
  0x000000010f82e2df: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f82e2e7: callq  0x000000010f7d1a20  ; OopMap{[96]=Oop rdx=Oop off=2572}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@-1 (line 755)
                                                ; - java.util.concurrent.ConcurrentHashMap::get@34 (line 938)
                                                ;   {runtime_call}
  0x000000010f82e2ec: jmpq   0x000000010f82db16
  0x000000010f82e2f1: mov    %rdx,(%rsp)
  0x000000010f82e2f5: callq  0x000000010f7cf480  ; OopMap{[96]=Oop off=2586}
                                                ;*checkcast
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@17 (line 755)
                                                ; - java.util.concurrent.ConcurrentHashMap::get@34 (line 938)
                                                ;   {runtime_call}
  0x000000010f82e2fa: callq  0x000000010f7cd0c0  ; OopMap{rbx=Oop [96]=Oop off=2591}
                                                ;*getfield hash
                                                ; - java.util.concurrent.ConcurrentHashMap::get@43 (line 939)
                                                ;   {runtime_call}
  0x000000010f82e2ff: callq  0x000000010f7cd0c0  ; OopMap{rdx=Oop [96]=Oop off=2596}
                                                ;*getfield next
                                                ; - java.util.concurrent.ConcurrentHashMap::get@113 (line 945)
                                                ;   {runtime_call}
  0x000000010f82e304: callq  0x000000010f7cd0c0  ; OopMap{rdx=Oop [96]=Oop rdi=Oop off=2601}
                                                ;*getfield hash
                                                ; - java.util.concurrent.ConcurrentHashMap::get@122 (line 946)
                                                ;   {runtime_call}
  0x000000010f82e309: mov    %rbx,0x8(%rsp)
  0x000000010f82e30e: movq   $0x7f,(%rsp)
  0x000000010f82e316: callq  0x000000010f7d1a20  ; OopMap{rdx=Oop [96]=Oop rdi=Oop off=2619}
                                                ;*if_icmpne
                                                ; - java.util.concurrent.ConcurrentHashMap::get@127 (line 946)
                                                ;   {runtime_call}
  0x000000010f82e31b: jmpq   0x000000010f82ded6
  0x000000010f82e320: mov    %rbx,0x8(%rsp)
  0x000000010f82e325: movq   $0x8f,(%rsp)
  0x000000010f82e32d: callq  0x000000010f7d1a20  ; OopMap{rdx=Oop [96]=Oop rdi=Oop rsi=Oop off=2642}
                                                ;*ifnull
                                                ; - java.util.concurrent.ConcurrentHashMap::get@143 (line 946)
                                                ;   {runtime_call}
  0x000000010f82e332: jmpq   0x000000010f82df86
  0x000000010f82e337: mov    %rdx,0x8(%rsp)
  0x000000010f82e33c: movq   $0x98,(%rsp)
  0x000000010f82e344: callq  0x000000010f7d1a20  ; OopMap{[96]=Oop [120]=Oop off=2665}
                                                ;*ifeq
                                                ; - java.util.concurrent.ConcurrentHashMap::get@152 (line 947)
                                                ;   {runtime_call}
  0x000000010f82e349: jmpq   0x000000010f82e0a6
  0x000000010f82e34e: callq  0x000000010f7cd0c0  ; OopMap{off=2675}
                                                ;*getfield val
                                                ; - java.util.concurrent.ConcurrentHashMap::get@104 (line 944)
                                                ;   {runtime_call}
  0x000000010f82e353: nop
  0x000000010f82e354: nop
  0x000000010f82e355: mov    0x2a8(%r15),%rax
  0x000000010f82e35c: movabs $0x0,%r10
  0x000000010f82e366: mov    %r10,0x2a8(%r15)
  0x000000010f82e36d: movabs $0x0,%r10
  0x000000010f82e377: mov    %r10,0x2b0(%r15)
  0x000000010f82e37e: add    $0x90,%rsp
  0x000000010f82e385: pop    %rbp
  0x000000010f82e386: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f82e38b: hlt    
  0x000000010f82e38c: hlt    
  0x000000010f82e38d: hlt    
  0x000000010f82e38e: hlt    
  0x000000010f82e38f: hlt    
  0x000000010f82e390: hlt    
  0x000000010f82e391: hlt    
  0x000000010f82e392: hlt    
  0x000000010f82e393: hlt    
  0x000000010f82e394: hlt    
  0x000000010f82e395: hlt    
  0x000000010f82e396: hlt    
  0x000000010f82e397: hlt    
  0x000000010f82e398: hlt    
  0x000000010f82e399: hlt    
  0x000000010f82e39a: hlt    
  0x000000010f82e39b: hlt    
  0x000000010f82e39c: hlt    
  0x000000010f82e39d: hlt    
  0x000000010f82e39e: hlt    
  0x000000010f82e39f: hlt    
[Stub Code]
  0x000000010f82e3a0: nop                       ;   {no_reloc}
  0x000000010f82e3a1: nop
  0x000000010f82e3a2: nop
  0x000000010f82e3a3: nop
  0x000000010f82e3a4: nop
  0x000000010f82e3a5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f82e3af: jmpq   0x000000010f82e3af  ;   {runtime_call}
  0x000000010f82e3b4: nop
  0x000000010f82e3b5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f82e3bf: jmpq   0x000000010f82e3bf  ;   {runtime_call}
  0x000000010f82e3c4: nop
  0x000000010f82e3c5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f82e3cf: jmpq   0x000000010f82e3cf  ;   {runtime_call}
  0x000000010f82e3d4: nop
  0x000000010f82e3d5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f82e3df: jmpq   0x000000010f82e3df  ;   {runtime_call}
[Exception Handler]
  0x000000010f82e3e4: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f82e3e9: mov    %rsp,-0x28(%rsp)
  0x000000010f82e3ee: sub    $0x80,%rsp
  0x000000010f82e3f5: mov    %rax,0x78(%rsp)
  0x000000010f82e3fa: mov    %rcx,0x70(%rsp)
  0x000000010f82e3ff: mov    %rdx,0x68(%rsp)
  0x000000010f82e404: mov    %rbx,0x60(%rsp)
  0x000000010f82e409: mov    %rbp,0x50(%rsp)
  0x000000010f82e40e: mov    %rsi,0x48(%rsp)
  0x000000010f82e413: mov    %rdi,0x40(%rsp)
  0x000000010f82e418: mov    %r8,0x38(%rsp)
  0x000000010f82e41d: mov    %r9,0x30(%rsp)
  0x000000010f82e422: mov    %r10,0x28(%rsp)
  0x000000010f82e427: mov    %r11,0x20(%rsp)
  0x000000010f82e42c: mov    %r12,0x18(%rsp)
  0x000000010f82e431: mov    %r13,0x10(%rsp)
  0x000000010f82e436: mov    %r14,0x8(%rsp)
  0x000000010f82e43b: mov    %r15,(%rsp)
  0x000000010f82e43f: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f82e449: movabs $0x10f82e3e9,%rsi  ;   {internal_word}
  0x000000010f82e453: mov    %rsp,%rdx
  0x000000010f82e456: and    $0xfffffffffffffff0,%rsp
  0x000000010f82e45a: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f82e45f: hlt    
[Deopt Handler Code]
  0x000000010f82e460: movabs $0x10f82e460,%r10  ;   {section_word}
  0x000000010f82e46a: push   %r10
  0x000000010f82e46c: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f82e471: hlt    
  0x000000010f82e472: hlt    
  0x000000010f82e473: hlt    
  0x000000010f82e474: hlt    
  0x000000010f82e475: hlt    
  0x000000010f82e476: hlt    
  0x000000010f82e477: hlt    
Decoding compiled method 0x000000010f82d050:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ed73d78} 'addType' '(Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/ClassWriter'
  # this:     rsi:rsi   = 'jdk/internal/org/objectweb/asm/ClassWriter'
  # parm0:    rdx:rdx   = 'java/lang/String'
  #           [sp+0x50]  (sp of caller)
  0x000000010f82d1e0: mov    0x8(%rsi),%r10d
  0x000000010f82d1e4: shl    $0x3,%r10
  0x000000010f82d1e8: cmp    %rax,%r10
  0x000000010f82d1eb: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f82d1f1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f82d1fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f82d200: mov    %eax,-0x14000(%rsp)
  0x000000010f82d207: push   %rbp
  0x000000010f82d208: sub    $0x40,%rsp
  0x000000010f82d20c: mov    %rsi,0x30(%rsp)
  0x000000010f82d211: mov    %rdx,%rcx
  0x000000010f82d214: movabs $0x10edabe88,%rdx  ;   {metadata(method data for {method} {0x000000010ed73d78} 'addType' '(Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000000010f82d21e: mov    0xdc(%rdx),%r8d
  0x000000010f82d225: add    $0x8,%r8d
  0x000000010f82d229: mov    %r8d,0xdc(%rdx)
  0x000000010f82d230: movabs $0x10ed73d78,%rdx  ;   {metadata({method} {0x000000010ed73d78} 'addType' '(Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000000010f82d23a: and    $0x1ff8,%r8d
  0x000000010f82d241: cmp    $0x0,%r8d
  0x000000010f82d245: je     0x000000010f82d3ab  ;*aload_0
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::addType@0 (line 1607)

  0x000000010f82d24b: mov    0x5c(%rsi),%edi
  0x000000010f82d24e: shl    $0x3,%rdi          ;*getfield key
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::addType@1 (line 1607)

  0x000000010f82d252: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x000000010f82d3c2
  0x000000010f82d255: mov    %rdi,%rdx
  0x000000010f82d258: movabs $0x10edabe88,%r8   ;   {metadata(method data for {method} {0x000000010ed73d78} 'addType' '(Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000000010f82d262: mov    0x8(%rdx),%edx
  0x000000010f82d265: shl    $0x3,%rdx
  0x000000010f82d269: cmp    0x110(%r8),%rdx
  0x000000010f82d270: jne    0x000000010f82d27f
  0x000000010f82d272: addq   $0x1,0x118(%r8)
  0x000000010f82d27a: jmpq   0x000000010f82d2e5
  0x000000010f82d27f: cmp    0x120(%r8),%rdx
  0x000000010f82d286: jne    0x000000010f82d295
  0x000000010f82d288: addq   $0x1,0x128(%r8)
  0x000000010f82d290: jmpq   0x000000010f82d2e5
  0x000000010f82d295: cmpq   $0x0,0x110(%r8)
  0x000000010f82d2a0: jne    0x000000010f82d2b9
  0x000000010f82d2a2: mov    %rdx,0x110(%r8)
  0x000000010f82d2a9: movq   $0x1,0x118(%r8)
  0x000000010f82d2b4: jmpq   0x000000010f82d2e5
  0x000000010f82d2b9: cmpq   $0x0,0x120(%r8)
  0x000000010f82d2c4: jne    0x000000010f82d2dd
  0x000000010f82d2c6: mov    %rdx,0x120(%r8)
  0x000000010f82d2cd: movq   $0x1,0x128(%r8)
  0x000000010f82d2d8: jmpq   0x000000010f82d2e5
  0x000000010f82d2dd: addq   $0x1,0x108(%r8)
  0x000000010f82d2e5: mov    $0x1e,%edx
  0x000000010f82d2ea: movabs $0x0,%r8           ;   {oop(NULL)}
  0x000000010f82d2f4: movabs $0x0,%r9           ;   {oop(NULL)}
  0x000000010f82d2fe: mov    %rdi,%rsi          ;*invokevirtual set
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::addType@9 (line 1607)

  0x000000010f82d301: nop
  0x000000010f82d302: nop
  0x000000010f82d303: nop
  0x000000010f82d304: nop
  0x000000010f82d305: nop
  0x000000010f82d306: nop
  0x000000010f82d307: callq  0x000000010f7170a0  ; OopMap{[48]=Oop off=300}
                                                ;*invokevirtual set
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::addType@9 (line 1607)
                                                ;   {optimized virtual_call}
  0x000000010f82d30c: mov    0x30(%rsp),%rsi
  0x000000010f82d311: mov    0x5c(%rsi),%edx
  0x000000010f82d314: shl    $0x3,%rdx          ;*getfield key
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::addType@14 (line 1608)

  0x000000010f82d318: mov    %rsi,%rdi
  0x000000010f82d31b: movabs $0x10edabe88,%rbx  ;   {metadata(method data for {method} {0x000000010ed73d78} 'addType' '(Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000000010f82d325: addq   $0x1,0x138(%rbx)
  0x000000010f82d32d: mov    %rsi,%rdi
  0x000000010f82d330: mov    %rdi,%rsi          ;*invokespecial get
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::addType@17 (line 1608)

  0x000000010f82d333: nop
  0x000000010f82d334: nop
  0x000000010f82d335: nop
  0x000000010f82d336: nop
  0x000000010f82d337: callq  0x000000010f7170a0  ; OopMap{[48]=Oop off=348}
                                                ;*invokespecial get
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::addType@17 (line 1608)
                                                ;   {optimized virtual_call}
  0x000000010f82d33c: cmp    $0x0,%rax
  0x000000010f82d340: movabs $0x10edabe88,%rdx  ;   {metadata(method data for {method} {0x000000010ed73d78} 'addType' '(Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000000010f82d34a: movabs $0x148,%rsi
  0x000000010f82d354: jne    0x000000010f82d364
  0x000000010f82d35a: movabs $0x158,%rsi
  0x000000010f82d364: mov    (%rdx,%rsi,1),%rdi
  0x000000010f82d368: lea    0x1(%rdi),%rdi
  0x000000010f82d36c: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f82d370: jne    0x000000010f82d39c  ;*ifnonnull
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::addType@22 (line 1609)

  0x000000010f82d376: mov    0x30(%rsp),%rsi
  0x000000010f82d37b: mov    0x5c(%rsi),%edx
  0x000000010f82d37e: shl    $0x3,%rdx          ;*getfield key
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::addType@27 (line 1610)

  0x000000010f82d382: mov    %rsi,%rdi
  0x000000010f82d385: movabs $0x10edabe88,%rbx  ;   {metadata(method data for {method} {0x000000010ed73d78} 'addType' '(Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000000010f82d38f: addq   $0x1,0x168(%rbx)
  0x000000010f82d397: callq  0x000000010f7170a0  ; OopMap{off=444}
                                                ;*invokespecial addType
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::addType@30 (line 1610)
                                                ;   {optimized virtual_call}
  0x000000010f82d39c: mov    0xc(%rax),%eax     ;*getfield index
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::addType@35 (line 1612)
                                                ; implicit exception: dispatches to 0x000000010f82d3c7
  0x000000010f82d39f: add    $0x40,%rsp
  0x000000010f82d3a3: pop    %rbp
  0x000000010f82d3a4: test   %eax,-0x8d922aa(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f82d3aa: retq   
  0x000000010f82d3ab: mov    %rdx,0x8(%rsp)
  0x000000010f82d3b0: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f82d3b8: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [48]=Oop rcx=Oop off=477}
                                                ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::addType@-1 (line 1607)
                                                ;   {runtime_call}
  0x000000010f82d3bd: jmpq   0x000000010f82d24b
  0x000000010f82d3c2: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop [48]=Oop rcx=Oop rdi=Oop off=487}
                                                ;*invokevirtual set
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::addType@9 (line 1607)
                                                ;   {runtime_call}
  0x000000010f82d3c7: callq  0x000000010f7cd0c0  ; OopMap{off=492}
                                                ;*getfield index
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::addType@35 (line 1612)
                                                ;   {runtime_call}
  0x000000010f82d3cc: nop
  0x000000010f82d3cd: nop
  0x000000010f82d3ce: mov    0x2a8(%r15),%rax
  0x000000010f82d3d5: movabs $0x0,%r10
  0x000000010f82d3df: mov    %r10,0x2a8(%r15)
  0x000000010f82d3e6: movabs $0x0,%r10
  0x000000010f82d3f0: mov    %r10,0x2b0(%r15)
  0x000000010f82d3f7: add    $0x40,%rsp
  0x000000010f82d3fb: pop    %rbp
  0x000000010f82d3fc: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f82d401: hlt    
  0x000000010f82d402: hlt    
  0x000000010f82d403: hlt    
  0x000000010f82d404: hlt    
  0x000000010f82d405: hlt    
  0x000000010f82d406: hlt    
  0x000000010f82d407: hlt    
  0x000000010f82d408: hlt    
  0x000000010f82d409: hlt    
  0x000000010f82d40a: hlt    
  0x000000010f82d40b: hlt    
  0x000000010f82d40c: hlt    
  0x000000010f82d40d: hlt    
  0x000000010f82d40e: hlt    
  0x000000010f82d40f: hlt    
  0x000000010f82d410: hlt    
  0x000000010f82d411: hlt    
  0x000000010f82d412: hlt    
  0x000000010f82d413: hlt    
  0x000000010f82d414: hlt    
  0x000000010f82d415: hlt    
  0x000000010f82d416: hlt    
  0x000000010f82d417: hlt    
  0x000000010f82d418: hlt    
  0x000000010f82d419: hlt    
  0x000000010f82d41a: hlt    
  0x000000010f82d41b: hlt    
  0x000000010f82d41c: hlt    
  0x000000010f82d41d: hlt    
  0x000000010f82d41e: hlt    
  0x000000010f82d41f: hlt    
[Stub Code]
  0x000000010f82d420: nop                       ;   {no_reloc}
  0x000000010f82d421: nop
  0x000000010f82d422: nop
  0x000000010f82d423: nop
  0x000000010f82d424: nop
  0x000000010f82d425: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f82d42f: jmpq   0x000000010f82d42f  ;   {runtime_call}
  0x000000010f82d434: nop
  0x000000010f82d435: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f82d43f: jmpq   0x000000010f82d43f  ;   {runtime_call}
  0x000000010f82d444: nop
  0x000000010f82d445: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f82d44f: jmpq   0x000000010f82d44f  ;   {runtime_call}
[Exception Handler]
  0x000000010f82d454: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f82d459: mov    %rsp,-0x28(%rsp)
  0x000000010f82d45e: sub    $0x80,%rsp
  0x000000010f82d465: mov    %rax,0x78(%rsp)
  0x000000010f82d46a: mov    %rcx,0x70(%rsp)
  0x000000010f82d46f: mov    %rdx,0x68(%rsp)
  0x000000010f82d474: mov    %rbx,0x60(%rsp)
  0x000000010f82d479: mov    %rbp,0x50(%rsp)
  0x000000010f82d47e: mov    %rsi,0x48(%rsp)
  0x000000010f82d483: mov    %rdi,0x40(%rsp)
  0x000000010f82d488: mov    %r8,0x38(%rsp)
  0x000000010f82d48d: mov    %r9,0x30(%rsp)
  0x000000010f82d492: mov    %r10,0x28(%rsp)
  0x000000010f82d497: mov    %r11,0x20(%rsp)
  0x000000010f82d49c: mov    %r12,0x18(%rsp)
  0x000000010f82d4a1: mov    %r13,0x10(%rsp)
  0x000000010f82d4a6: mov    %r14,0x8(%rsp)
  0x000000010f82d4ab: mov    %r15,(%rsp)
  0x000000010f82d4af: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f82d4b9: movabs $0x10f82d459,%rsi  ;   {internal_word}
  0x000000010f82d4c3: mov    %rsp,%rdx
  0x000000010f82d4c6: and    $0xfffffffffffffff0,%rsp
  0x000000010f82d4ca: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f82d4cf: hlt    
[Deopt Handler Code]
  0x000000010f82d4d0: movabs $0x10f82d4d0,%r10  ;   {section_word}
  0x000000010f82d4da: push   %r10
  0x000000010f82d4dc: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f82d4e1: hlt    
  0x000000010f82d4e2: hlt    
  0x000000010f82d4e3: hlt    
  0x000000010f82d4e4: hlt    
  0x000000010f82d4e5: hlt    
  0x000000010f82d4e6: hlt    
  0x000000010f82d4e7: hlt    
Decoding compiled method 0x000000010f82cbd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ed650a0} 'next' '()Ljava/lang/Object;' in 'java/util/Collections$UnmodifiableCollection$1'
  #           [sp+0x40]  (sp of caller)
  0x000000010f82cd40: mov    0x8(%rsi),%r10d
  0x000000010f82cd44: shl    $0x3,%r10
  0x000000010f82cd48: cmp    %rax,%r10
  0x000000010f82cd4b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f82cd51: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f82cd5c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f82cd60: mov    %eax,-0x14000(%rsp)
  0x000000010f82cd67: push   %rbp
  0x000000010f82cd68: sub    $0x30,%rsp
  0x000000010f82cd6c: movabs $0x10edbe788,%rdi  ;   {metadata(method data for {method} {0x000000010ed650a0} 'next' '()Ljava/lang/Object;' in 'java/util/Collections$UnmodifiableCollection$1')}
  0x000000010f82cd76: mov    0xdc(%rdi),%ebx
  0x000000010f82cd7c: add    $0x8,%ebx
  0x000000010f82cd7f: mov    %ebx,0xdc(%rdi)
  0x000000010f82cd85: movabs $0x10ed650a0,%rdi  ;   {metadata({method} {0x000000010ed650a0} 'next' '()Ljava/lang/Object;' in 'java/util/Collections$UnmodifiableCollection$1')}
  0x000000010f82cd8f: and    $0x1ff8,%ebx
  0x000000010f82cd95: cmp    $0x0,%ebx
  0x000000010f82cd98: je     0x000000010f82ce58  ;*aload_0
                                                ; - java.util.Collections$UnmodifiableCollection$1::next@0 (line 1042)

  0x000000010f82cd9e: mov    0xc(%rsi),%esi
  0x000000010f82cda1: shl    $0x3,%rsi          ;*getfield i
                                                ; - java.util.Collections$UnmodifiableCollection$1::next@1 (line 1042)

  0x000000010f82cda5: cmp    (%rsi),%rax        ;*invokeinterface next
                                                ; - java.util.Collections$UnmodifiableCollection$1::next@4 (line 1042)
                                                ; implicit exception: dispatches to 0x000000010f82ce6f
  0x000000010f82cda8: mov    %rsi,%rdi
  0x000000010f82cdab: movabs $0x10edbe788,%rbx  ;   {metadata(method data for {method} {0x000000010ed650a0} 'next' '()Ljava/lang/Object;' in 'java/util/Collections$UnmodifiableCollection$1')}
  0x000000010f82cdb5: mov    0x8(%rdi),%edi
  0x000000010f82cdb8: shl    $0x3,%rdi
  0x000000010f82cdbc: cmp    0x110(%rbx),%rdi
  0x000000010f82cdc3: jne    0x000000010f82cdd2
  0x000000010f82cdc5: addq   $0x1,0x118(%rbx)
  0x000000010f82cdcd: jmpq   0x000000010f82ce38
  0x000000010f82cdd2: cmp    0x120(%rbx),%rdi
  0x000000010f82cdd9: jne    0x000000010f82cde8
  0x000000010f82cddb: addq   $0x1,0x128(%rbx)
  0x000000010f82cde3: jmpq   0x000000010f82ce38
  0x000000010f82cde8: cmpq   $0x0,0x110(%rbx)
  0x000000010f82cdf3: jne    0x000000010f82ce0c
  0x000000010f82cdf5: mov    %rdi,0x110(%rbx)
  0x000000010f82cdfc: movq   $0x1,0x118(%rbx)
  0x000000010f82ce07: jmpq   0x000000010f82ce38
  0x000000010f82ce0c: cmpq   $0x0,0x120(%rbx)
  0x000000010f82ce17: jne    0x000000010f82ce30
  0x000000010f82ce19: mov    %rdi,0x120(%rbx)
  0x000000010f82ce20: movq   $0x1,0x128(%rbx)
  0x000000010f82ce2b: jmpq   0x000000010f82ce38
  0x000000010f82ce30: addq   $0x1,0x108(%rbx)
  0x000000010f82ce38: nop
  0x000000010f82ce39: nop
  0x000000010f82ce3a: nop
  0x000000010f82ce3b: nop
  0x000000010f82ce3c: nop
  0x000000010f82ce3d: movabs $0xffffffffffffffff,%rax
  0x000000010f82ce47: callq  0x000000010f7172e0  ; OopMap{off=268}
                                                ;*invokeinterface next
                                                ; - java.util.Collections$UnmodifiableCollection$1::next@4 (line 1042)
                                                ;   {virtual_call}
  0x000000010f82ce4c: add    $0x30,%rsp
  0x000000010f82ce50: pop    %rbp
  0x000000010f82ce51: test   %eax,-0x8d91d57(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f82ce57: retq   
  0x000000010f82ce58: mov    %rdi,0x8(%rsp)
  0x000000010f82ce5d: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f82ce65: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=298}
                                                ;*synchronization entry
                                                ; - java.util.Collections$UnmodifiableCollection$1::next@-1 (line 1042)
                                                ;   {runtime_call}
  0x000000010f82ce6a: jmpq   0x000000010f82cd9e
  0x000000010f82ce6f: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop off=308}
                                                ;*invokeinterface next
                                                ; - java.util.Collections$UnmodifiableCollection$1::next@4 (line 1042)
                                                ;   {runtime_call}
  0x000000010f82ce74: nop
  0x000000010f82ce75: nop
  0x000000010f82ce76: mov    0x2a8(%r15),%rax
  0x000000010f82ce7d: movabs $0x0,%r10
  0x000000010f82ce87: mov    %r10,0x2a8(%r15)
  0x000000010f82ce8e: movabs $0x0,%r10
  0x000000010f82ce98: mov    %r10,0x2b0(%r15)
  0x000000010f82ce9f: add    $0x30,%rsp
  0x000000010f82cea3: pop    %rbp
  0x000000010f82cea4: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f82cea9: hlt    
  0x000000010f82ceaa: hlt    
  0x000000010f82ceab: hlt    
  0x000000010f82ceac: hlt    
  0x000000010f82cead: hlt    
  0x000000010f82ceae: hlt    
  0x000000010f82ceaf: hlt    
  0x000000010f82ceb0: hlt    
  0x000000010f82ceb1: hlt    
  0x000000010f82ceb2: hlt    
  0x000000010f82ceb3: hlt    
  0x000000010f82ceb4: hlt    
  0x000000010f82ceb5: hlt    
  0x000000010f82ceb6: hlt    
  0x000000010f82ceb7: hlt    
  0x000000010f82ceb8: hlt    
  0x000000010f82ceb9: hlt    
  0x000000010f82ceba: hlt    
  0x000000010f82cebb: hlt    
  0x000000010f82cebc: hlt    
  0x000000010f82cebd: hlt    
  0x000000010f82cebe: hlt    
  0x000000010f82cebf: hlt    
[Stub Code]
  0x000000010f82cec0: nop                       ;   {no_reloc}
  0x000000010f82cec1: nop
  0x000000010f82cec2: nop
  0x000000010f82cec3: nop
  0x000000010f82cec4: nop
  0x000000010f82cec5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f82cecf: jmpq   0x000000010f82cecf  ;   {runtime_call}
[Exception Handler]
  0x000000010f82ced4: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f82ced9: mov    %rsp,-0x28(%rsp)
  0x000000010f82cede: sub    $0x80,%rsp
  0x000000010f82cee5: mov    %rax,0x78(%rsp)
  0x000000010f82ceea: mov    %rcx,0x70(%rsp)
  0x000000010f82ceef: mov    %rdx,0x68(%rsp)
  0x000000010f82cef4: mov    %rbx,0x60(%rsp)
  0x000000010f82cef9: mov    %rbp,0x50(%rsp)
  0x000000010f82cefe: mov    %rsi,0x48(%rsp)
  0x000000010f82cf03: mov    %rdi,0x40(%rsp)
  0x000000010f82cf08: mov    %r8,0x38(%rsp)
  0x000000010f82cf0d: mov    %r9,0x30(%rsp)
  0x000000010f82cf12: mov    %r10,0x28(%rsp)
  0x000000010f82cf17: mov    %r11,0x20(%rsp)
  0x000000010f82cf1c: mov    %r12,0x18(%rsp)
  0x000000010f82cf21: mov    %r13,0x10(%rsp)
  0x000000010f82cf26: mov    %r14,0x8(%rsp)
  0x000000010f82cf2b: mov    %r15,(%rsp)
  0x000000010f82cf2f: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f82cf39: movabs $0x10f82ced9,%rsi  ;   {internal_word}
  0x000000010f82cf43: mov    %rsp,%rdx
  0x000000010f82cf46: and    $0xfffffffffffffff0,%rsp
  0x000000010f82cf4a: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f82cf4f: hlt    
[Deopt Handler Code]
  0x000000010f82cf50: movabs $0x10f82cf50,%r10  ;   {section_word}
  0x000000010f82cf5a: push   %r10
  0x000000010f82cf5c: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f82cf61: hlt    
  0x000000010f82cf62: hlt    
  0x000000010f82cf63: hlt    
  0x000000010f82cf64: hlt    
  0x000000010f82cf65: hlt    
  0x000000010f82cf66: hlt    
  0x000000010f82cf67: hlt    
Decoding compiled method 0x000000010f82c690:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ed88680} 'get' '(I)I' in 'jdk/internal/org/objectweb/asm/Frame'
  # this:     rsi:rsi   = 'jdk/internal/org/objectweb/asm/Frame'
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x000000010f82c800: mov    0x8(%rsi),%r10d
  0x000000010f82c804: shl    $0x3,%r10
  0x000000010f82c808: cmp    %rax,%r10
  0x000000010f82c80b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f82c811: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f82c81c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f82c820: mov    %eax,-0x14000(%rsp)
  0x000000010f82c827: push   %rbp
  0x000000010f82c828: sub    $0x30,%rsp
  0x000000010f82c82c: movabs $0x10edac048,%rax  ;   {metadata(method data for {method} {0x000000010ed88680} 'get' '(I)I' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f82c836: mov    0xdc(%rax),%edi
  0x000000010f82c83c: add    $0x8,%edi
  0x000000010f82c83f: mov    %edi,0xdc(%rax)
  0x000000010f82c845: movabs $0x10ed88680,%rax  ;   {metadata({method} {0x000000010ed88680} 'get' '(I)I' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f82c84f: and    $0x1ff8,%edi
  0x000000010f82c855: cmp    $0x0,%edi
  0x000000010f82c858: je     0x000000010f82c957  ;*aload_0
                                                ; - jdk.internal.org.objectweb.asm.Frame::get@0 (line 560)

  0x000000010f82c85e: mov    0x20(%rsi),%eax
  0x000000010f82c861: shl    $0x3,%rax          ;*getfield outputLocals
                                                ; - jdk.internal.org.objectweb.asm.Frame::get@1 (line 560)

  0x000000010f82c865: cmp    $0x0,%rax
  0x000000010f82c869: movabs $0x10edac048,%rsi  ;   {metadata(method data for {method} {0x000000010ed88680} 'get' '(I)I' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f82c873: movabs $0x108,%rdi
  0x000000010f82c87d: je     0x000000010f82c88d
  0x000000010f82c883: movabs $0x118,%rdi
  0x000000010f82c88d: mov    (%rsi,%rdi,1),%rbx
  0x000000010f82c891: lea    0x1(%rbx),%rbx
  0x000000010f82c895: mov    %rbx,(%rsi,%rdi,1)
  0x000000010f82c899: je     0x000000010f82c942  ;*ifnull
                                                ; - jdk.internal.org.objectweb.asm.Frame::get@4 (line 560)

  0x000000010f82c89f: mov    0xc(%rax),%esi     ;*arraylength
                                                ; - jdk.internal.org.objectweb.asm.Frame::get@12 (line 560)
                                                ; implicit exception: dispatches to 0x000000010f82c96e
  0x000000010f82c8a2: cmp    %esi,%edx
  0x000000010f82c8a4: movabs $0x10edac048,%rsi  ;   {metadata(method data for {method} {0x000000010ed88680} 'get' '(I)I' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f82c8ae: movabs $0x128,%rdi
  0x000000010f82c8b8: jl     0x000000010f82c8c8
  0x000000010f82c8be: movabs $0x138,%rdi
  0x000000010f82c8c8: mov    (%rsi,%rdi,1),%rbx
  0x000000010f82c8cc: lea    0x1(%rbx),%rbx
  0x000000010f82c8d0: mov    %rbx,(%rsi,%rdi,1)
  0x000000010f82c8d4: jge    0x000000010f82c942  ;*if_icmplt
                                                ; - jdk.internal.org.objectweb.asm.Frame::get@13 (line 560)

  0x000000010f82c8da: movslq %edx,%rsi
  0x000000010f82c8dd: cmp    0xc(%rax),%edx
  0x000000010f82c8e0: jae    0x000000010f82c973
  0x000000010f82c8e6: mov    0x10(%rax,%rsi,4),%esi  ;*iaload
                                                ; - jdk.internal.org.objectweb.asm.Frame::get@26 (line 565)

  0x000000010f82c8ea: cmp    $0x0,%esi
  0x000000010f82c8ed: movabs $0x10edac048,%rdi  ;   {metadata(method data for {method} {0x000000010ed88680} 'get' '(I)I' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f82c8f7: movabs $0x148,%rbx
  0x000000010f82c901: jne    0x000000010f82c911
  0x000000010f82c907: movabs $0x158,%rbx
  0x000000010f82c911: mov    (%rdi,%rbx,1),%rcx
  0x000000010f82c915: lea    0x1(%rcx),%rcx
  0x000000010f82c919: mov    %rcx,(%rdi,%rbx,1)
  0x000000010f82c91d: jne    0x000000010f82c933  ;*ifne
                                                ; - jdk.internal.org.objectweb.asm.Frame::get@29 (line 566)

  0x000000010f82c923: mov    %rdx,%rsi
  0x000000010f82c926: or     $0x2000000,%esi
  0x000000010f82c92c: movslq %edx,%rdx
  0x000000010f82c92f: mov    %esi,0x10(%rax,%rdx,4)  ;*iastore
                                                ; - jdk.internal.org.objectweb.asm.Frame::get@42 (line 569)

  0x000000010f82c933: mov    %rsi,%rax
  0x000000010f82c936: add    $0x30,%rsp
  0x000000010f82c93a: pop    %rbp
  0x000000010f82c93b: test   %eax,-0x8d91841(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f82c941: retq                      ;*ireturn
                                                ; - jdk.internal.org.objectweb.asm.Frame::get@45 (line 571)

  0x000000010f82c942: or     $0x2000000,%edx
  0x000000010f82c948: mov    %rdx,%rax
  0x000000010f82c94b: add    $0x30,%rsp
  0x000000010f82c94f: pop    %rbp
  0x000000010f82c950: test   %eax,-0x8d91856(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f82c956: retq   
  0x000000010f82c957: mov    %rax,0x8(%rsp)
  0x000000010f82c95c: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f82c964: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=361}
                                                ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.Frame::get@-1 (line 560)
                                                ;   {runtime_call}
  0x000000010f82c969: jmpq   0x000000010f82c85e
  0x000000010f82c96e: callq  0x000000010f7cd0c0  ; OopMap{rax=Oop off=371}
                                                ;*arraylength
                                                ; - jdk.internal.org.objectweb.asm.Frame::get@12 (line 560)
                                                ;   {runtime_call}
  0x000000010f82c973: mov    %rdx,(%rsp)
  0x000000010f82c977: callq  0x000000010f7cca00  ; OopMap{rax=Oop off=380}
                                                ;*iaload
                                                ; - jdk.internal.org.objectweb.asm.Frame::get@26 (line 565)
                                                ;   {runtime_call}
  0x000000010f82c97c: nop
  0x000000010f82c97d: nop
  0x000000010f82c97e: mov    0x2a8(%r15),%rax
  0x000000010f82c985: movabs $0x0,%r10
  0x000000010f82c98f: mov    %r10,0x2a8(%r15)
  0x000000010f82c996: movabs $0x0,%r10
  0x000000010f82c9a0: mov    %r10,0x2b0(%r15)
  0x000000010f82c9a7: add    $0x30,%rsp
  0x000000010f82c9ab: pop    %rbp
  0x000000010f82c9ac: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f82c9b1: hlt    
  0x000000010f82c9b2: hlt    
  0x000000010f82c9b3: hlt    
  0x000000010f82c9b4: hlt    
  0x000000010f82c9b5: hlt    
  0x000000010f82c9b6: hlt    
  0x000000010f82c9b7: hlt    
  0x000000010f82c9b8: hlt    
  0x000000010f82c9b9: hlt    
  0x000000010f82c9ba: hlt    
  0x000000010f82c9bb: hlt    
  0x000000010f82c9bc: hlt    
  0x000000010f82c9bd: hlt    
  0x000000010f82c9be: hlt    
  0x000000010f82c9bf: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f82c9c0: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f82c9c5: mov    %rsp,-0x28(%rsp)
  0x000000010f82c9ca: sub    $0x80,%rsp
  0x000000010f82c9d1: mov    %rax,0x78(%rsp)
  0x000000010f82c9d6: mov    %rcx,0x70(%rsp)
  0x000000010f82c9db: mov    %rdx,0x68(%rsp)
  0x000000010f82c9e0: mov    %rbx,0x60(%rsp)
  0x000000010f82c9e5: mov    %rbp,0x50(%rsp)
  0x000000010f82c9ea: mov    %rsi,0x48(%rsp)
  0x000000010f82c9ef: mov    %rdi,0x40(%rsp)
  0x000000010f82c9f4: mov    %r8,0x38(%rsp)
  0x000000010f82c9f9: mov    %r9,0x30(%rsp)
  0x000000010f82c9fe: mov    %r10,0x28(%rsp)
  0x000000010f82ca03: mov    %r11,0x20(%rsp)
  0x000000010f82ca08: mov    %r12,0x18(%rsp)
  0x000000010f82ca0d: mov    %r13,0x10(%rsp)
  0x000000010f82ca12: mov    %r14,0x8(%rsp)
  0x000000010f82ca17: mov    %r15,(%rsp)
  0x000000010f82ca1b: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f82ca25: movabs $0x10f82c9c5,%rsi  ;   {internal_word}
  0x000000010f82ca2f: mov    %rsp,%rdx
  0x000000010f82ca32: and    $0xfffffffffffffff0,%rsp
  0x000000010f82ca36: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f82ca3b: hlt    
[Deopt Handler Code]
  0x000000010f82ca3c: movabs $0x10f82ca3c,%r10  ;   {section_word}
  0x000000010f82ca46: push   %r10
  0x000000010f82ca48: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f82ca4d: hlt    
  0x000000010f82ca4e: hlt    
  0x000000010f82ca4f: hlt    
Decoding compiled method 0x000000010f82c2d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ed64260} 'size' '()I' in 'java/util/Arrays$ArrayList'
  #           [sp+0x40]  (sp of caller)
  0x000000010f82c440: mov    0x8(%rsi),%r10d
  0x000000010f82c444: shl    $0x3,%r10
  0x000000010f82c448: cmp    %rax,%r10
  0x000000010f82c44b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f82c451: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f82c45c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f82c460: mov    %eax,-0x14000(%rsp)
  0x000000010f82c467: push   %rbp
  0x000000010f82c468: sub    $0x30,%rsp
  0x000000010f82c46c: movabs $0x10edbd438,%rax  ;   {metadata(method data for {method} {0x000000010ed64260} 'size' '()I' in 'java/util/Arrays$ArrayList')}
  0x000000010f82c476: mov    0xdc(%rax),%edi
  0x000000010f82c47c: add    $0x8,%edi
  0x000000010f82c47f: mov    %edi,0xdc(%rax)
  0x000000010f82c485: movabs $0x10ed64260,%rax  ;   {metadata({method} {0x000000010ed64260} 'size' '()I' in 'java/util/Arrays$ArrayList')}
  0x000000010f82c48f: and    $0x1ff8,%edi
  0x000000010f82c495: cmp    $0x0,%edi
  0x000000010f82c498: je     0x000000010f82c4b4  ;*aload_0
                                                ; - java.util.Arrays$ArrayList::size@0 (line 3818)

  0x000000010f82c49e: mov    0x10(%rsi),%eax
  0x000000010f82c4a1: shl    $0x3,%rax          ;*getfield a
                                                ; - java.util.Arrays$ArrayList::size@1 (line 3818)

  0x000000010f82c4a5: mov    0xc(%rax),%eax     ;*arraylength
                                                ; - java.util.Arrays$ArrayList::size@4 (line 3818)
                                                ; implicit exception: dispatches to 0x000000010f82c4c8
  0x000000010f82c4a8: add    $0x30,%rsp
  0x000000010f82c4ac: pop    %rbp
  0x000000010f82c4ad: test   %eax,-0x8d913b3(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f82c4b3: retq   
  0x000000010f82c4b4: mov    %rax,0x8(%rsp)
  0x000000010f82c4b9: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f82c4c1: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=134}
                                                ;*synchronization entry
                                                ; - java.util.Arrays$ArrayList::size@-1 (line 3818)
                                                ;   {runtime_call}
  0x000000010f82c4c6: jmp    0x000000010f82c49e
  0x000000010f82c4c8: callq  0x000000010f7cd0c0  ; OopMap{off=141}
                                                ;*arraylength
                                                ; - java.util.Arrays$ArrayList::size@4 (line 3818)
                                                ;   {runtime_call}
  0x000000010f82c4cd: nop
  0x000000010f82c4ce: nop
  0x000000010f82c4cf: mov    0x2a8(%r15),%rax
  0x000000010f82c4d6: movabs $0x0,%r10
  0x000000010f82c4e0: mov    %r10,0x2a8(%r15)
  0x000000010f82c4e7: movabs $0x0,%r10
  0x000000010f82c4f1: mov    %r10,0x2b0(%r15)
  0x000000010f82c4f8: add    $0x30,%rsp
  0x000000010f82c4fc: pop    %rbp
  0x000000010f82c4fd: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f82c502: hlt    
  0x000000010f82c503: hlt    
  0x000000010f82c504: hlt    
  0x000000010f82c505: hlt    
  0x000000010f82c506: hlt    
  0x000000010f82c507: hlt    
  0x000000010f82c508: hlt    
  0x000000010f82c509: hlt    
  0x000000010f82c50a: hlt    
  0x000000010f82c50b: hlt    
  0x000000010f82c50c: hlt    
  0x000000010f82c50d: hlt    
  0x000000010f82c50e: hlt    
  0x000000010f82c50f: hlt    
  0x000000010f82c510: hlt    
  0x000000010f82c511: hlt    
  0x000000010f82c512: hlt    
  0x000000010f82c513: hlt    
  0x000000010f82c514: hlt    
  0x000000010f82c515: hlt    
  0x000000010f82c516: hlt    
  0x000000010f82c517: hlt    
  0x000000010f82c518: hlt    
  0x000000010f82c519: hlt    
  0x000000010f82c51a: hlt    
  0x000000010f82c51b: hlt    
  0x000000010f82c51c: hlt    
  0x000000010f82c51d: hlt    
  0x000000010f82c51e: hlt    
  0x000000010f82c51f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f82c520: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f82c525: mov    %rsp,-0x28(%rsp)
  0x000000010f82c52a: sub    $0x80,%rsp
  0x000000010f82c531: mov    %rax,0x78(%rsp)
  0x000000010f82c536: mov    %rcx,0x70(%rsp)
  0x000000010f82c53b: mov    %rdx,0x68(%rsp)
  0x000000010f82c540: mov    %rbx,0x60(%rsp)
  0x000000010f82c545: mov    %rbp,0x50(%rsp)
  0x000000010f82c54a: mov    %rsi,0x48(%rsp)
  0x000000010f82c54f: mov    %rdi,0x40(%rsp)
  0x000000010f82c554: mov    %r8,0x38(%rsp)
  0x000000010f82c559: mov    %r9,0x30(%rsp)
  0x000000010f82c55e: mov    %r10,0x28(%rsp)
  0x000000010f82c563: mov    %r11,0x20(%rsp)
  0x000000010f82c568: mov    %r12,0x18(%rsp)
  0x000000010f82c56d: mov    %r13,0x10(%rsp)
  0x000000010f82c572: mov    %r14,0x8(%rsp)
  0x000000010f82c577: mov    %r15,(%rsp)
  0x000000010f82c57b: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f82c585: movabs $0x10f82c525,%rsi  ;   {internal_word}
  0x000000010f82c58f: mov    %rsp,%rdx
  0x000000010f82c592: and    $0xfffffffffffffff0,%rsp
  0x000000010f82c596: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f82c59b: hlt    
[Deopt Handler Code]
  0x000000010f82c59c: movabs $0x10f82c59c,%r10  ;   {section_word}
  0x000000010f82c5a6: push   %r10
  0x000000010f82c5a8: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f82c5ad: hlt    
  0x000000010f82c5ae: hlt    
  0x000000010f82c5af: hlt    
Decoding compiled method 0x000000010f830010:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ed72d50} 'newClassItem' '(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/Item;' in 'jdk/internal/org/objectweb/asm/ClassWriter'
  # this:     rsi:rsi   = 'jdk/internal/org/objectweb/asm/ClassWriter'
  # parm0:    rdx:rdx   = 'java/lang/String'
  #           [sp+0x70]  (sp of caller)
  0x000000010f8301e0: mov    0x8(%rsi),%r10d
  0x000000010f8301e4: shl    $0x3,%r10
  0x000000010f8301e8: cmp    %rax,%r10
  0x000000010f8301eb: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f8301f1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f8301fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f830200: mov    %eax,-0x14000(%rsp)
  0x000000010f830207: push   %rbp
  0x000000010f830208: sub    $0x60,%rsp
  0x000000010f83020c: mov    %rsi,0x38(%rsp)
  0x000000010f830211: movabs $0x10edbee60,%rcx  ;   {metadata(method data for {method} {0x000000010ed72d50} 'newClassItem' '(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/Item;' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000000010f83021b: mov    0xdc(%rcx),%r8d
  0x000000010f830222: add    $0x8,%r8d
  0x000000010f830226: mov    %r8d,0xdc(%rcx)
  0x000000010f83022d: movabs $0x10ed72d50,%rcx  ;   {metadata({method} {0x000000010ed72d50} 'newClassItem' '(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/Item;' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000000010f830237: and    $0x1ff8,%r8d
  0x000000010f83023e: cmp    $0x0,%r8d
  0x000000010f830242: je     0x000000010f8304d5  ;*aload_0
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newClassItem@0 (line 1139)

  0x000000010f830248: mov    0x60(%rsi),%edi
  0x000000010f83024b: shl    $0x3,%rdi          ;*getfield key2
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newClassItem@1 (line 1139)

  0x000000010f83024f: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x000000010f8304ec
  0x000000010f830252: mov    %rdi,%rcx
  0x000000010f830255: movabs $0x10edbee60,%r8   ;   {metadata(method data for {method} {0x000000010ed72d50} 'newClassItem' '(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/Item;' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000000010f83025f: mov    0x8(%rcx),%ecx
  0x000000010f830262: shl    $0x3,%rcx
  0x000000010f830266: cmp    0x110(%r8),%rcx
  0x000000010f83026d: jne    0x000000010f83027c
  0x000000010f83026f: addq   $0x1,0x118(%r8)
  0x000000010f830277: jmpq   0x000000010f8302e2
  0x000000010f83027c: cmp    0x120(%r8),%rcx
  0x000000010f830283: jne    0x000000010f830292
  0x000000010f830285: addq   $0x1,0x128(%r8)
  0x000000010f83028d: jmpq   0x000000010f8302e2
  0x000000010f830292: cmpq   $0x0,0x110(%r8)
  0x000000010f83029d: jne    0x000000010f8302b6
  0x000000010f83029f: mov    %rcx,0x110(%r8)
  0x000000010f8302a6: movq   $0x1,0x118(%r8)
  0x000000010f8302b1: jmpq   0x000000010f8302e2
  0x000000010f8302b6: cmpq   $0x0,0x120(%r8)
  0x000000010f8302c1: jne    0x000000010f8302da
  0x000000010f8302c3: mov    %rcx,0x120(%r8)
  0x000000010f8302ca: movq   $0x1,0x128(%r8)
  0x000000010f8302d5: jmpq   0x000000010f8302e2
  0x000000010f8302da: addq   $0x1,0x108(%r8)
  0x000000010f8302e2: mov    %rdx,%rbx
  0x000000010f8302e5: mov    $0x7,%edx
  0x000000010f8302ea: mov    %rbx,%rcx
  0x000000010f8302ed: movabs $0x0,%r8           ;   {oop(NULL)}
  0x000000010f8302f7: movabs $0x0,%r9           ;   {oop(NULL)}
  0x000000010f830301: mov    %rdi,%rsi          ;*invokevirtual set
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newClassItem@9 (line 1139)

  0x000000010f830304: mov    %rbx,0x40(%rsp)
  0x000000010f830309: nop
  0x000000010f83030a: nop
  0x000000010f83030b: nop
  0x000000010f83030c: nop
  0x000000010f83030d: nop
  0x000000010f83030e: nop
  0x000000010f83030f: callq  0x000000010f7170a0  ; OopMap{[56]=Oop [64]=Oop off=308}
                                                ;*invokevirtual set
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newClassItem@9 (line 1139)
                                                ;   {optimized virtual_call}
  0x000000010f830314: mov    0x38(%rsp),%rsi
  0x000000010f830319: mov    0x60(%rsi),%edx
  0x000000010f83031c: shl    $0x3,%rdx          ;*getfield key2
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newClassItem@14 (line 1140)

  0x000000010f830320: mov    %rsi,%rdi
  0x000000010f830323: movabs $0x10edbee60,%rbx  ;   {metadata(method data for {method} {0x000000010ed72d50} 'newClassItem' '(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/Item;' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000000010f83032d: addq   $0x1,0x138(%rbx)
  0x000000010f830335: mov    %rsi,%rdi
  0x000000010f830338: mov    %rdi,%rsi          ;*invokespecial get
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newClassItem@17 (line 1140)

  0x000000010f83033b: nop
  0x000000010f83033c: nop
  0x000000010f83033d: nop
  0x000000010f83033e: nop
  0x000000010f83033f: callq  0x000000010f7170a0  ; OopMap{[64]=Oop [56]=Oop off=356}
                                                ;*invokespecial get
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newClassItem@17 (line 1140)
                                                ;   {optimized virtual_call}
  0x000000010f830344: cmp    $0x0,%rax
  0x000000010f830348: movabs $0x10edbee60,%rdx  ;   {metadata(method data for {method} {0x000000010ed72d50} 'newClassItem' '(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/Item;' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000000010f830352: movabs $0x148,%rsi
  0x000000010f83035c: jne    0x000000010f83036c
  0x000000010f830362: movabs $0x158,%rsi
  0x000000010f83036c: mov    (%rdx,%rsi,1),%rdi
  0x000000010f830370: lea    0x1(%rdi),%rdi
  0x000000010f830374: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f830378: jne    0x000000010f8304c9  ;*ifnonnull
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newClassItem@22 (line 1141)

  0x000000010f83037e: mov    0x40(%rsp),%rdx
  0x000000010f830383: mov    0x38(%rsp),%rsi
  0x000000010f830388: mov    0x54(%rsi),%edi
  0x000000010f83038b: shl    $0x3,%rdi          ;*getfield pool
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newClassItem@26 (line 1142)

  0x000000010f83038f: mov    %rsi,%rbx
  0x000000010f830392: movabs $0x10edbee60,%rax  ;   {metadata(method data for {method} {0x000000010ed72d50} 'newClassItem' '(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/Item;' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000000010f83039c: movabs $0x7c005d658,%r10  ;   {metadata('jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000000010f8303a6: mov    %r10,0x170(%rax)
  0x000000010f8303ad: addq   $0x1,0x178(%rax)
  0x000000010f8303b5: mov    %rsi,%rbx
  0x000000010f8303b8: mov    %rbx,%rsi          ;*invokevirtual newUTF8
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newClassItem@33 (line 1142)

  0x000000010f8303bb: mov    %rdi,0x48(%rsp)
  0x000000010f8303c0: nop
  0x000000010f8303c1: nop
  0x000000010f8303c2: nop
  0x000000010f8303c3: nop
  0x000000010f8303c4: nop
  0x000000010f8303c5: nop
  0x000000010f8303c6: nop
  0x000000010f8303c7: callq  0x000000010f7170a0  ; OopMap{[56]=Oop [72]=Oop off=492}
                                                ;*invokevirtual newUTF8
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newClassItem@33 (line 1142)
                                                ;   {optimized virtual_call}
  0x000000010f8303cc: mov    0x48(%rsp),%rdi
  0x000000010f8303d1: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x000000010f8304f1
  0x000000010f8303d4: mov    %rdi,%rdx
  0x000000010f8303d7: movabs $0x10edbee60,%rcx  ;   {metadata(method data for {method} {0x000000010ed72d50} 'newClassItem' '(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/Item;' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000000010f8303e1: movabs $0x7c005d9a8,%r10  ;   {metadata('jdk/internal/org/objectweb/asm/ByteVector')}
  0x000000010f8303eb: mov    %r10,0x1a0(%rcx)
  0x000000010f8303f2: addq   $0x1,0x1a8(%rcx)
  0x000000010f8303fa: mov    $0x7,%edx
  0x000000010f8303ff: mov    %rax,%rcx
  0x000000010f830402: mov    %rdi,%rsi          ;*invokevirtual put12
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newClassItem@36 (line 1142)

  0x000000010f830405: nop
  0x000000010f830406: nop
  0x000000010f830407: callq  0x000000010f7170a0  ; OopMap{[56]=Oop off=556}
                                                ;*invokevirtual put12
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newClassItem@36 (line 1142)
                                                ;   {optimized virtual_call}
  0x000000010f83040c: movabs $0x7c005dbf0,%rdx  ;   {metadata('jdk/internal/org/objectweb/asm/Item')}
  0x000000010f830416: mov    0x60(%r15),%rax
  0x000000010f83041a: lea    0x38(%rax),%rdi
  0x000000010f83041e: cmp    0x70(%r15),%rdi
  0x000000010f830422: ja     0x000000010f8304f6
  0x000000010f830428: mov    %rdi,0x60(%r15)
  0x000000010f83042c: mov    0xa8(%rdx),%rcx
  0x000000010f830433: mov    %rcx,(%rax)
  0x000000010f830436: mov    %rdx,%rcx
  0x000000010f830439: shr    $0x3,%rcx
  0x000000010f83043d: mov    %ecx,0x8(%rax)
  0x000000010f830440: xor    %rcx,%rcx
  0x000000010f830443: mov    %ecx,0xc(%rax)
  0x000000010f830446: xor    %rcx,%rcx
  0x000000010f830449: movabs $0x5,%rdi
  0x000000010f830453: mov    %rcx,0x8(%rax,%rdi,8)
  0x000000010f830458: dec    %rdi
  0x000000010f83045b: jne    0x000000010f830453  ;*new
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newClassItem@40 (line 1143)

  0x000000010f83045d: mov    0x38(%rsp),%rsi
  0x000000010f830462: mov    0x18(%rsi),%edx    ;*getfield index
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newClassItem@46 (line 1143)

  0x000000010f830465: mov    %rdx,%rcx
  0x000000010f830468: inc    %ecx
  0x000000010f83046a: mov    %ecx,0x18(%rsi)    ;*putfield index
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newClassItem@52 (line 1143)

  0x000000010f83046d: mov    0x60(%rsi),%ecx
  0x000000010f830470: shl    $0x3,%rcx          ;*getfield key2
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newClassItem@56 (line 1143)

  0x000000010f830474: mov    %rax,%rdi
  0x000000010f830477: movabs $0x10edbee60,%rbx  ;   {metadata(method data for {method} {0x000000010ed72d50} 'newClassItem' '(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/Item;' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000000010f830481: addq   $0x1,0x1c8(%rbx)
  0x000000010f830489: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newClassItem@59 (line 1143)

  0x000000010f83048c: mov    %rax,0x50(%rsp)
  0x000000010f830491: nop
  0x000000010f830492: nop
  0x000000010f830493: nop
  0x000000010f830494: nop
  0x000000010f830495: nop
  0x000000010f830496: nop
  0x000000010f830497: callq  0x000000010f7170a0  ; OopMap{[56]=Oop [80]=Oop off=700}
                                                ;*invokespecial <init>
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newClassItem@59 (line 1143)
                                                ;   {optimized virtual_call}
  0x000000010f83049c: mov    0x38(%rsp),%rsi
  0x000000010f8304a1: movabs $0x10edbee60,%rdx  ;   {metadata(method data for {method} {0x000000010ed72d50} 'newClassItem' '(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/Item;' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000000010f8304ab: addq   $0x1,0x1d8(%rdx)
  0x000000010f8304b3: mov    0x50(%rsp),%rdx
  0x000000010f8304b8: mov    0x38(%rsp),%rsi    ;*invokespecial put
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newClassItem@65 (line 1144)

  0x000000010f8304bd: nop
  0x000000010f8304be: nop
  0x000000010f8304bf: callq  0x000000010f7170a0  ; OopMap{[80]=Oop off=740}
                                                ;*invokespecial put
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newClassItem@65 (line 1144)
                                                ;   {optimized virtual_call}
  0x000000010f8304c4: mov    0x50(%rsp),%rax    ;*aload_2
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newClassItem@68 (line 1146)

  0x000000010f8304c9: add    $0x60,%rsp
  0x000000010f8304cd: pop    %rbp
  0x000000010f8304ce: test   %eax,-0x8d953d4(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f8304d4: retq   
  0x000000010f8304d5: mov    %rcx,0x8(%rsp)
  0x000000010f8304da: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f8304e2: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [56]=Oop rdx=Oop off=775}
                                                ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newClassItem@-1 (line 1139)
                                                ;   {runtime_call}
  0x000000010f8304e7: jmpq   0x000000010f830248
  0x000000010f8304ec: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop [56]=Oop rdx=Oop rdi=Oop off=785}
                                                ;*invokevirtual set
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newClassItem@9 (line 1139)
                                                ;   {runtime_call}
  0x000000010f8304f1: callq  0x000000010f7cd0c0  ; OopMap{[56]=Oop rdi=Oop off=790}
                                                ;*invokevirtual put12
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::newClassItem@36 (line 1142)
                                                ;   {runtime_call}
  0x000000010f8304f6: mov    %rdx,%rdx
  0x000000010f8304f9: callq  0x000000010f7cd820  ; OopMap{[56]=Oop off=798}
                                                ;*new  ; - jdk.internal.org.objectweb.asm.ClassWriter::newClassItem@40 (line 1143)
                                                ;   {runtime_call}
  0x000000010f8304fe: jmpq   0x000000010f83045d
  0x000000010f830503: nop
  0x000000010f830504: nop
  0x000000010f830505: mov    0x2a8(%r15),%rax
  0x000000010f83050c: movabs $0x0,%r10
  0x000000010f830516: mov    %r10,0x2a8(%r15)
  0x000000010f83051d: movabs $0x0,%r10
  0x000000010f830527: mov    %r10,0x2b0(%r15)
  0x000000010f83052e: add    $0x60,%rsp
  0x000000010f830532: pop    %rbp
  0x000000010f830533: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f830538: hlt    
  0x000000010f830539: hlt    
  0x000000010f83053a: hlt    
  0x000000010f83053b: hlt    
  0x000000010f83053c: hlt    
  0x000000010f83053d: hlt    
  0x000000010f83053e: hlt    
  0x000000010f83053f: hlt    
[Stub Code]
  0x000000010f830540: nop                       ;   {no_reloc}
  0x000000010f830541: nop
  0x000000010f830542: nop
  0x000000010f830543: nop
  0x000000010f830544: nop
  0x000000010f830545: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f83054f: jmpq   0x000000010f83054f  ;   {runtime_call}
  0x000000010f830554: nop
  0x000000010f830555: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f83055f: jmpq   0x000000010f83055f  ;   {runtime_call}
  0x000000010f830564: nop
  0x000000010f830565: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f83056f: jmpq   0x000000010f83056f  ;   {runtime_call}
  0x000000010f830574: nop
  0x000000010f830575: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f83057f: jmpq   0x000000010f83057f  ;   {runtime_call}
  0x000000010f830584: nop
  0x000000010f830585: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f83058f: jmpq   0x000000010f83058f  ;   {runtime_call}
  0x000000010f830594: nop
  0x000000010f830595: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f83059f: jmpq   0x000000010f83059f  ;   {runtime_call}
[Exception Handler]
  0x000000010f8305a4: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f8305a9: mov    %rsp,-0x28(%rsp)
  0x000000010f8305ae: sub    $0x80,%rsp
  0x000000010f8305b5: mov    %rax,0x78(%rsp)
  0x000000010f8305ba: mov    %rcx,0x70(%rsp)
  0x000000010f8305bf: mov    %rdx,0x68(%rsp)
  0x000000010f8305c4: mov    %rbx,0x60(%rsp)
  0x000000010f8305c9: mov    %rbp,0x50(%rsp)
  0x000000010f8305ce: mov    %rsi,0x48(%rsp)
  0x000000010f8305d3: mov    %rdi,0x40(%rsp)
  0x000000010f8305d8: mov    %r8,0x38(%rsp)
  0x000000010f8305dd: mov    %r9,0x30(%rsp)
  0x000000010f8305e2: mov    %r10,0x28(%rsp)
  0x000000010f8305e7: mov    %r11,0x20(%rsp)
  0x000000010f8305ec: mov    %r12,0x18(%rsp)
  0x000000010f8305f1: mov    %r13,0x10(%rsp)
  0x000000010f8305f6: mov    %r14,0x8(%rsp)
  0x000000010f8305fb: mov    %r15,(%rsp)
  0x000000010f8305ff: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f830609: movabs $0x10f8305a9,%rsi  ;   {internal_word}
  0x000000010f830613: mov    %rsp,%rdx
  0x000000010f830616: and    $0xfffffffffffffff0,%rsp
  0x000000010f83061a: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f83061f: hlt    
[Deopt Handler Code]
  0x000000010f830620: movabs $0x10f830620,%r10  ;   {section_word}
  0x000000010f83062a: push   %r10
  0x000000010f83062c: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f830631: hlt    
  0x000000010f830632: hlt    
  0x000000010f830633: hlt    
  0x000000010f830634: hlt    
  0x000000010f830635: hlt    
  0x000000010f830636: hlt    
  0x000000010f830637: hlt    
Decoding compiled method 0x000000010f830910:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ed65920} 'next' '()Ljava/lang/Object;' in 'java/util/AbstractList$Itr'
  #           [sp+0x80]  (sp of caller)
  0x000000010f830ae0: mov    0x8(%rsi),%r10d
  0x000000010f830ae4: shl    $0x3,%r10
  0x000000010f830ae8: cmp    %rax,%r10
  0x000000010f830aeb: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f830af1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f830afc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f830b00: mov    %eax,-0x14000(%rsp)
  0x000000010f830b07: push   %rbp
  0x000000010f830b08: sub    $0x70,%rsp
  0x000000010f830b0c: mov    %rsi,0x38(%rsp)
  0x000000010f830b11: movabs $0x10edbd558,%rdx  ;   {metadata(method data for {method} {0x000000010ed65920} 'next' '()Ljava/lang/Object;' in 'java/util/AbstractList$Itr')}
  0x000000010f830b1b: mov    0xdc(%rdx),%edi
  0x000000010f830b21: add    $0x8,%edi
  0x000000010f830b24: mov    %edi,0xdc(%rdx)
  0x000000010f830b2a: movabs $0x10ed65920,%rdx  ;   {metadata({method} {0x000000010ed65920} 'next' '()Ljava/lang/Object;' in 'java/util/AbstractList$Itr')}
  0x000000010f830b34: and    $0x1ff8,%edi
  0x000000010f830b3a: cmp    $0x0,%edi
  0x000000010f830b3d: je     0x000000010f830f16  ;*aload_0
                                                ; - java.util.AbstractList$Itr::next@0 (line 355)

  0x000000010f830b43: mov    %rsi,%rdx
  0x000000010f830b46: movabs $0x10edbd558,%rdi  ;   {metadata(method data for {method} {0x000000010ed65920} 'next' '()Ljava/lang/Object;' in 'java/util/AbstractList$Itr')}
  0x000000010f830b50: mov    0x8(%rdx),%edx
  0x000000010f830b53: shl    $0x3,%rdx
  0x000000010f830b57: cmp    0x110(%rdi),%rdx
  0x000000010f830b5e: jne    0x000000010f830b6d
  0x000000010f830b60: addq   $0x1,0x118(%rdi)
  0x000000010f830b68: jmpq   0x000000010f830bd3
  0x000000010f830b6d: cmp    0x120(%rdi),%rdx
  0x000000010f830b74: jne    0x000000010f830b83
  0x000000010f830b76: addq   $0x1,0x128(%rdi)
  0x000000010f830b7e: jmpq   0x000000010f830bd3
  0x000000010f830b83: cmpq   $0x0,0x110(%rdi)
  0x000000010f830b8e: jne    0x000000010f830ba7
  0x000000010f830b90: mov    %rdx,0x110(%rdi)
  0x000000010f830b97: movq   $0x1,0x118(%rdi)
  0x000000010f830ba2: jmpq   0x000000010f830bd3
  0x000000010f830ba7: cmpq   $0x0,0x120(%rdi)
  0x000000010f830bb2: jne    0x000000010f830bcb
  0x000000010f830bb4: mov    %rdx,0x120(%rdi)
  0x000000010f830bbb: movq   $0x1,0x128(%rdi)
  0x000000010f830bc6: jmpq   0x000000010f830bd3
  0x000000010f830bcb: addq   $0x1,0x108(%rdi)
  0x000000010f830bd3: movabs $0x10edbd740,%rdx  ;   {metadata(method data for {method} {0x000000010ed65ac0} 'checkForComodification' '()V' in 'java/util/AbstractList$Itr')}
  0x000000010f830bdd: mov    0xdc(%rdx),%edi
  0x000000010f830be3: add    $0x8,%edi
  0x000000010f830be6: mov    %edi,0xdc(%rdx)
  0x000000010f830bec: movabs $0x10ed65ac0,%rdx  ;   {metadata({method} {0x000000010ed65ac0} 'checkForComodification' '()V' in 'java/util/AbstractList$Itr')}
  0x000000010f830bf6: and    $0x7ffff8,%edi
  0x000000010f830bfc: cmp    $0x0,%edi
  0x000000010f830bff: je     0x000000010f830f2d
  0x000000010f830c05: mov    0x18(%rsi),%edi
  0x000000010f830c08: shl    $0x3,%rdi          ;*getfield this$0
                                                ; - java.util.AbstractList$Itr::checkForComodification@1 (line 385)
                                                ; - java.util.AbstractList$Itr::next@1 (line 355)

  0x000000010f830c0c: mov    0xc(%rdi),%edx     ;*getfield modCount
                                                ; - java.util.AbstractList$Itr::checkForComodification@4 (line 385)
                                                ; - java.util.AbstractList$Itr::next@1 (line 355)
                                                ; implicit exception: dispatches to 0x000000010f830f44
  0x000000010f830c0f: mov    0x14(%rsi),%ebx    ;*getfield expectedModCount
                                                ; - java.util.AbstractList$Itr::checkForComodification@8 (line 385)
                                                ; - java.util.AbstractList$Itr::next@1 (line 355)

  0x000000010f830c12: cmp    %ebx,%edx
  0x000000010f830c14: movabs $0x10edbd740,%rdx  ;   {metadata(method data for {method} {0x000000010ed65ac0} 'checkForComodification' '()V' in 'java/util/AbstractList$Itr')}
  0x000000010f830c1e: movabs $0x108,%rbx
  0x000000010f830c28: je     0x000000010f830c38
  0x000000010f830c2e: movabs $0x118,%rbx
  0x000000010f830c38: mov    (%rdx,%rbx,1),%rax
  0x000000010f830c3c: lea    0x1(%rax),%rax
  0x000000010f830c40: mov    %rax,(%rdx,%rbx,1)
  0x000000010f830c44: jne    0x000000010f830ed6  ;*if_icmpeq
                                                ; - java.util.AbstractList$Itr::checkForComodification@11 (line 385)
                                                ; - java.util.AbstractList$Itr::next@1 (line 355)

  0x000000010f830c4a: mov    0xc(%rsi),%ebx     ;*getfield cursor
                                                ; - java.util.AbstractList$Itr::next@5 (line 357)

  0x000000010f830c4d: mov    %rdi,%rdx
  0x000000010f830c50: movabs $0x10edbd558,%rax  ;   {metadata(method data for {method} {0x000000010ed65920} 'next' '()Ljava/lang/Object;' in 'java/util/AbstractList$Itr')}
  0x000000010f830c5a: mov    0x8(%rdx),%edx
  0x000000010f830c5d: shl    $0x3,%rdx
  0x000000010f830c61: cmp    0x140(%rax),%rdx
  0x000000010f830c68: jne    0x000000010f830c77
  0x000000010f830c6a: addq   $0x1,0x148(%rax)
  0x000000010f830c72: jmpq   0x000000010f830cdd
  0x000000010f830c77: cmp    0x150(%rax),%rdx
  0x000000010f830c7e: jne    0x000000010f830c8d
  0x000000010f830c80: addq   $0x1,0x158(%rax)
  0x000000010f830c88: jmpq   0x000000010f830cdd
  0x000000010f830c8d: cmpq   $0x0,0x140(%rax)
  0x000000010f830c98: jne    0x000000010f830cb1
  0x000000010f830c9a: mov    %rdx,0x140(%rax)
  0x000000010f830ca1: movq   $0x1,0x148(%rax)
  0x000000010f830cac: jmpq   0x000000010f830cdd
  0x000000010f830cb1: cmpq   $0x0,0x150(%rax)
  0x000000010f830cbc: jne    0x000000010f830cd5
  0x000000010f830cbe: mov    %rdx,0x150(%rax)
  0x000000010f830cc5: movq   $0x1,0x158(%rax)
  0x000000010f830cd0: jmpq   0x000000010f830cdd
  0x000000010f830cd5: addq   $0x1,0x138(%rax)
  0x000000010f830cdd: mov    %rbx,%rdx
  0x000000010f830ce0: mov    %rdi,%rsi          ;*invokevirtual get
                                                ; - java.util.AbstractList$Itr::next@14 (line 358)

  0x000000010f830ce3: mov    %ebx,0x40(%rsp)
  0x000000010f830ce7: nop
  0x000000010f830ce8: nop
  0x000000010f830ce9: nop
  0x000000010f830cea: nop
  0x000000010f830ceb: nop
  0x000000010f830cec: nop
  0x000000010f830ced: movabs $0xffffffffffffffff,%rax
  0x000000010f830cf7: callq  0x000000010f7172e0  ; OopMap{[56]=Oop off=540}
                                                ;*invokevirtual get
                                                ; - java.util.AbstractList$Itr::next@14 (line 358)
                                                ;   {virtual_call}
  0x000000010f830cfc: mov    0x38(%rsp),%rsi
  0x000000010f830d01: mov    0x40(%rsp),%ebx
  0x000000010f830d05: mov    %ebx,0x10(%rsi)    ;*putfield lastRet
                                                ; - java.util.AbstractList$Itr::next@20 (line 359)

  0x000000010f830d08: inc    %ebx
  0x000000010f830d0a: mov    %ebx,0xc(%rsi)     ;*putfield cursor
                                                ; - java.util.AbstractList$Itr::next@27 (line 360)

  0x000000010f830d0d: add    $0x70,%rsp
  0x000000010f830d11: pop    %rbp
  0x000000010f830d12: test   %eax,-0x8d95c18(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f830d18: retq   
  0x000000010f830d19: mov    0x38(%rsp),%rsi
  0x000000010f830d1e: mov    0x2a8(%r15),%rax
  0x000000010f830d25: xor    %r10,%r10
  0x000000010f830d28: mov    %r10,0x2a8(%r15)
  0x000000010f830d2f: xor    %r10,%r10
  0x000000010f830d32: mov    %r10,0x2b0(%r15)
  0x000000010f830d39: mov    %rsi,%rax
  0x000000010f830d3c: movabs $0x10edbd558,%rdx  ;   {metadata(method data for {method} {0x000000010ed65920} 'next' '()Ljava/lang/Object;' in 'java/util/AbstractList$Itr')}
  0x000000010f830d46: mov    0x8(%rax),%eax
  0x000000010f830d49: shl    $0x3,%rax
  0x000000010f830d4d: cmp    0x170(%rdx),%rax
  0x000000010f830d54: jne    0x000000010f830d63
  0x000000010f830d56: addq   $0x1,0x178(%rdx)
  0x000000010f830d5e: jmpq   0x000000010f830dc9
  0x000000010f830d63: cmp    0x180(%rdx),%rax
  0x000000010f830d6a: jne    0x000000010f830d79
  0x000000010f830d6c: addq   $0x1,0x188(%rdx)
  0x000000010f830d74: jmpq   0x000000010f830dc9
  0x000000010f830d79: cmpq   $0x0,0x170(%rdx)
  0x000000010f830d84: jne    0x000000010f830d9d
  0x000000010f830d86: mov    %rax,0x170(%rdx)
  0x000000010f830d8d: movq   $0x1,0x178(%rdx)
  0x000000010f830d98: jmpq   0x000000010f830dc9
  0x000000010f830d9d: cmpq   $0x0,0x180(%rdx)
  0x000000010f830da8: jne    0x000000010f830dc1
  0x000000010f830daa: mov    %rax,0x180(%rdx)
  0x000000010f830db1: movq   $0x1,0x188(%rdx)
  0x000000010f830dbc: jmpq   0x000000010f830dc9
  0x000000010f830dc1: addq   $0x1,0x168(%rdx)
  0x000000010f830dc9: movabs $0x10edbd740,%rax  ;   {metadata(method data for {method} {0x000000010ed65ac0} 'checkForComodification' '()V' in 'java/util/AbstractList$Itr')}
  0x000000010f830dd3: mov    0xdc(%rax),%edx
  0x000000010f830dd9: add    $0x8,%edx
  0x000000010f830ddc: mov    %edx,0xdc(%rax)
  0x000000010f830de2: movabs $0x10ed65ac0,%rax  ;   {metadata({method} {0x000000010ed65ac0} 'checkForComodification' '()V' in 'java/util/AbstractList$Itr')}
  0x000000010f830dec: and    $0x7ffff8,%edx
  0x000000010f830df2: cmp    $0x0,%edx
  0x000000010f830df5: je     0x000000010f830f49
  0x000000010f830dfb: mov    0x18(%rsi),%eax
  0x000000010f830dfe: shl    $0x3,%rax          ;*getfield this$0
                                                ; - java.util.AbstractList$Itr::checkForComodification@1 (line 385)
                                                ; - java.util.AbstractList$Itr::next@34 (line 363)

  0x000000010f830e02: mov    0xc(%rax),%eax     ;*getfield modCount
                                                ; - java.util.AbstractList$Itr::checkForComodification@4 (line 385)
                                                ; - java.util.AbstractList$Itr::next@34 (line 363)
                                                ; implicit exception: dispatches to 0x000000010f830f60
  0x000000010f830e05: mov    0x14(%rsi),%edx    ;*getfield expectedModCount
                                                ; - java.util.AbstractList$Itr::checkForComodification@8 (line 385)
                                                ; - java.util.AbstractList$Itr::next@34 (line 363)

  0x000000010f830e08: cmp    %edx,%eax
  0x000000010f830e0a: movabs $0x10edbd740,%rax  ;   {metadata(method data for {method} {0x000000010ed65ac0} 'checkForComodification' '()V' in 'java/util/AbstractList$Itr')}
  0x000000010f830e14: movabs $0x108,%rdx
  0x000000010f830e1e: je     0x000000010f830e2e
  0x000000010f830e24: movabs $0x118,%rdx
  0x000000010f830e2e: mov    (%rax,%rdx,1),%rsi
  0x000000010f830e32: lea    0x1(%rsi),%rsi
  0x000000010f830e36: mov    %rsi,(%rax,%rdx,1)
  0x000000010f830e3a: je     0x000000010f830e96
  0x000000010f830e40: jmpq   0x000000010f830e51  ;*if_icmpeq
                                                ; - java.util.AbstractList$Itr::checkForComodification@11 (line 385)
                                                ; - java.util.AbstractList$Itr::next@34 (line 363)

  0x000000010f830e45: add    $0x70,%rsp
  0x000000010f830e49: pop    %rbp
  0x000000010f830e4a: test   %eax,-0x8d95d50(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f830e50: retq                      ;*areturn
                                                ; - java.util.AbstractList$Itr::next@31 (line 361)

  0x000000010f830e51: nopl   0x0(%rax)
  0x000000010f830e58: jmpq   0x000000010f830f74  ;   {no_reloc}
  0x000000010f830e5d: add    %al,(%rax)
  0x000000010f830e5f: add    %al,(%rax)
  0x000000010f830e61: add    %ch,%cl
  0x000000010f830e63: (bad)  
  0x000000010f830e64: add    %eax,(%rax)
  0x000000010f830e66: add    %cl,-0x75(%rax)    ;*new  ; - java.util.AbstractList$Itr::checkForComodification@14 (line 386)
                                                ; - java.util.AbstractList$Itr::next@34 (line 363)

  0x000000010f830e69: lock movabs $0x10edbd740,%rdi  ;   {metadata(method data for {method} {0x000000010ed65ac0} 'checkForComodification' '()V' in 'java/util/AbstractList$Itr')}
  0x000000010f830e74: addq   $0x1,0x128(%rdi)
  0x000000010f830e7c: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.util.AbstractList$Itr::checkForComodification@18 (line 386)
                                                ; - java.util.AbstractList$Itr::next@34 (line 363)

  0x000000010f830e7f: mov    %rax,0x48(%rsp)
  0x000000010f830e84: nop
  0x000000010f830e85: nop
  0x000000010f830e86: nop
  0x000000010f830e87: callq  0x000000010f7170a0  ; OopMap{[72]=Oop off=940}
                                                ;*invokespecial <init>
                                                ; - java.util.AbstractList$Itr::checkForComodification@18 (line 386)
                                                ; - java.util.AbstractList$Itr::next@34 (line 363)
                                                ;   {optimized virtual_call}
  0x000000010f830e8c: mov    0x48(%rsp),%rax
  0x000000010f830e91: jmpq   0x000000010f831002  ;*athrow
                                                ; - java.util.AbstractList$Itr::checkForComodification@21 (line 386)
                                                ; - java.util.AbstractList$Itr::next@34 (line 363)

  0x000000010f830e96: xchg   %ax,%ax
  0x000000010f830e98: jmpq   0x000000010f830f9a  ;   {no_reloc}
  0x000000010f830e9d: add    %al,(%rax)
  0x000000010f830e9f: add    %al,(%rax)
  0x000000010f830ea1: add    %ch,%cl
  0x000000010f830ea3: std    
  0x000000010f830ea4: add    %al,(%rax)
  0x000000010f830ea6: add    %cl,-0x75(%rax)    ;*new  ; - java.util.AbstractList$Itr::next@37 (line 364)

  0x000000010f830ea9: lock movabs $0x10edbd558,%rdi  ;   {metadata(method data for {method} {0x000000010ed65920} 'next' '()Ljava/lang/Object;' in 'java/util/AbstractList$Itr')}
  0x000000010f830eb4: addq   $0x1,0x198(%rdi)
  0x000000010f830ebc: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.util.AbstractList$Itr::next@41 (line 364)

  0x000000010f830ebf: mov    %rax,0x50(%rsp)
  0x000000010f830ec4: nop
  0x000000010f830ec5: nop
  0x000000010f830ec6: nop
  0x000000010f830ec7: callq  0x000000010f7170a0  ; OopMap{[80]=Oop off=1004}
                                                ;*invokespecial <init>
                                                ; - java.util.AbstractList$Itr::next@41 (line 364)
                                                ;   {optimized virtual_call}
  0x000000010f830ecc: mov    0x50(%rsp),%rax
  0x000000010f830ed1: jmpq   0x000000010f831002  ;*athrow
                                                ; - java.util.AbstractList$Itr::next@44 (line 364)

  0x000000010f830ed6: xchg   %ax,%ax
  0x000000010f830ed8: jmpq   0x000000010f830fc0  ;   {no_reloc}
  0x000000010f830edd: add    %al,(%rax)
  0x000000010f830edf: add    %al,(%rax)
  0x000000010f830ee1: add    %ch,%cl
  0x000000010f830ee3: jrcxz  0x000000010f830ee5
  0x000000010f830ee5: add    %al,(%rax)         ;*new  ; - java.util.AbstractList$Itr::checkForComodification@14 (line 386)
                                                ; - java.util.AbstractList$Itr::next@1 (line 355)

  0x000000010f830ee7: mov    %rax,%rdi
  0x000000010f830eea: movabs $0x10edbd740,%rbx  ;   {metadata(method data for {method} {0x000000010ed65ac0} 'checkForComodification' '()V' in 'java/util/AbstractList$Itr')}
  0x000000010f830ef4: addq   $0x1,0x128(%rbx)
  0x000000010f830efc: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.util.AbstractList$Itr::checkForComodification@18 (line 386)
                                                ; - java.util.AbstractList$Itr::next@1 (line 355)

  0x000000010f830eff: mov    %rax,0x58(%rsp)
  0x000000010f830f04: nop
  0x000000010f830f05: nop
  0x000000010f830f06: nop
  0x000000010f830f07: callq  0x000000010f7170a0  ; OopMap{[56]=Oop [88]=Oop off=1068}
                                                ;*invokespecial <init>
                                                ; - java.util.AbstractList$Itr::checkForComodification@18 (line 386)
                                                ; - java.util.AbstractList$Itr::next@1 (line 355)
                                                ;   {optimized virtual_call}
  0x000000010f830f0c: mov    0x58(%rsp),%rax
  0x000000010f830f11: jmpq   0x000000010f831002
  0x000000010f830f16: mov    %rdx,0x8(%rsp)
  0x000000010f830f1b: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f830f23: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [56]=Oop off=1096}
                                                ;*synchronization entry
                                                ; - java.util.AbstractList$Itr::next@-1 (line 355)
                                                ;   {runtime_call}
  0x000000010f830f28: jmpq   0x000000010f830b43
  0x000000010f830f2d: mov    %rdx,0x8(%rsp)
  0x000000010f830f32: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f830f3a: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [56]=Oop off=1119}
                                                ;*synchronization entry
                                                ; - java.util.AbstractList$Itr::checkForComodification@-1 (line 385)
                                                ; - java.util.AbstractList$Itr::next@1 (line 355)
                                                ;   {runtime_call}
  0x000000010f830f3f: jmpq   0x000000010f830c05
  0x000000010f830f44: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop [56]=Oop rdi=Oop off=1129}
                                                ;*getfield modCount
                                                ; - java.util.AbstractList$Itr::checkForComodification@4 (line 385)
                                                ; - java.util.AbstractList$Itr::next@1 (line 355)
                                                ;   {runtime_call}
  0x000000010f830f49: mov    %rax,0x8(%rsp)
  0x000000010f830f4e: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f830f56: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [56]=Oop off=1147}
                                                ;*synchronization entry
                                                ; - java.util.AbstractList$Itr::checkForComodification@-1 (line 385)
                                                ; - java.util.AbstractList$Itr::next@34 (line 363)
                                                ;   {runtime_call}
  0x000000010f830f5b: jmpq   0x000000010f830dfb
  0x000000010f830f60: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop [56]=Oop off=1157}
                                                ;*getfield modCount
                                                ; - java.util.AbstractList$Itr::checkForComodification@4 (line 385)
                                                ; - java.util.AbstractList$Itr::next@34 (line 363)
                                                ;   {runtime_call}
  0x000000010f830f65: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f830f6f: mov    $0xa050f00,%eax
  0x000000010f830f74: callq  0x000000010f7d08e0  ; OopMap{off=1177}
                                                ;*new  ; - java.util.AbstractList$Itr::checkForComodification@14 (line 386)
                                                ; - java.util.AbstractList$Itr::next@34 (line 363)
                                                ;   {runtime_call}
  0x000000010f830f79: jmpq   0x000000010f830e58
  0x000000010f830f7e: mov    %rdx,%rdx
  0x000000010f830f81: callq  0x000000010f7cd560  ; OopMap{off=1190}
                                                ;*new  ; - java.util.AbstractList$Itr::checkForComodification@14 (line 386)
                                                ; - java.util.AbstractList$Itr::next@34 (line 363)
                                                ;   {runtime_call}
  0x000000010f830f86: jmpq   0x000000010f830e67
  0x000000010f830f8b: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f830f95: mov    $0xa050f00,%eax
  0x000000010f830f9a: callq  0x000000010f7d08e0  ; OopMap{off=1215}
                                                ;*new  ; - java.util.AbstractList$Itr::next@37 (line 364)
                                                ;   {runtime_call}
  0x000000010f830f9f: jmpq   0x000000010f830e98
  0x000000010f830fa4: mov    %rdx,%rdx
  0x000000010f830fa7: callq  0x000000010f7cd560  ; OopMap{off=1228}
                                                ;*new  ; - java.util.AbstractList$Itr::next@37 (line 364)
                                                ;   {runtime_call}
  0x000000010f830fac: jmpq   0x000000010f830ea7
  0x000000010f830fb1: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f830fbb: mov    $0xa050f00,%eax
  0x000000010f830fc0: callq  0x000000010f7d08e0  ; OopMap{[56]=Oop off=1253}
                                                ;*new  ; - java.util.AbstractList$Itr::checkForComodification@14 (line 386)
                                                ; - java.util.AbstractList$Itr::next@1 (line 355)
                                                ;   {runtime_call}
  0x000000010f830fc5: jmpq   0x000000010f830ed8
  0x000000010f830fca: mov    %rdx,%rdx
  0x000000010f830fcd: callq  0x000000010f7cd560  ; OopMap{[56]=Oop off=1266}
                                                ;*new  ; - java.util.AbstractList$Itr::checkForComodification@14 (line 386)
                                                ; - java.util.AbstractList$Itr::next@1 (line 355)
                                                ;   {runtime_call}
  0x000000010f830fd2: jmpq   0x000000010f830ee7
  0x000000010f830fd7: nop
  0x000000010f830fd8: nop
  0x000000010f830fd9: mov    0x2a8(%r15),%rax
  0x000000010f830fe0: movabs $0x0,%r10
  0x000000010f830fea: mov    %r10,0x2a8(%r15)
  0x000000010f830ff1: movabs $0x0,%r10
  0x000000010f830ffb: mov    %r10,0x2b0(%r15)
  0x000000010f831002: add    $0x70,%rsp
  0x000000010f831006: pop    %rbp
  0x000000010f831007: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f83100c: hlt    
  0x000000010f83100d: hlt    
  0x000000010f83100e: hlt    
  0x000000010f83100f: hlt    
  0x000000010f831010: hlt    
  0x000000010f831011: hlt    
  0x000000010f831012: hlt    
  0x000000010f831013: hlt    
  0x000000010f831014: hlt    
  0x000000010f831015: hlt    
  0x000000010f831016: hlt    
  0x000000010f831017: hlt    
  0x000000010f831018: hlt    
  0x000000010f831019: hlt    
  0x000000010f83101a: hlt    
  0x000000010f83101b: hlt    
  0x000000010f83101c: hlt    
  0x000000010f83101d: hlt    
  0x000000010f83101e: hlt    
  0x000000010f83101f: hlt    
[Stub Code]
  0x000000010f831020: nop                       ;   {no_reloc}
  0x000000010f831021: nop
  0x000000010f831022: nop
  0x000000010f831023: nop
  0x000000010f831024: nop
  0x000000010f831025: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f83102f: jmpq   0x000000010f83102f  ;   {runtime_call}
  0x000000010f831034: nop
  0x000000010f831035: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f83103f: jmpq   0x000000010f83103f  ;   {runtime_call}
  0x000000010f831044: nop
  0x000000010f831045: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f83104f: jmpq   0x000000010f83104f  ;   {runtime_call}
  0x000000010f831054: nop
  0x000000010f831055: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f83105f: jmpq   0x000000010f83105f  ;   {runtime_call}
[Exception Handler]
  0x000000010f831064: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f831069: mov    %rsp,-0x28(%rsp)
  0x000000010f83106e: sub    $0x80,%rsp
  0x000000010f831075: mov    %rax,0x78(%rsp)
  0x000000010f83107a: mov    %rcx,0x70(%rsp)
  0x000000010f83107f: mov    %rdx,0x68(%rsp)
  0x000000010f831084: mov    %rbx,0x60(%rsp)
  0x000000010f831089: mov    %rbp,0x50(%rsp)
  0x000000010f83108e: mov    %rsi,0x48(%rsp)
  0x000000010f831093: mov    %rdi,0x40(%rsp)
  0x000000010f831098: mov    %r8,0x38(%rsp)
  0x000000010f83109d: mov    %r9,0x30(%rsp)
  0x000000010f8310a2: mov    %r10,0x28(%rsp)
  0x000000010f8310a7: mov    %r11,0x20(%rsp)
  0x000000010f8310ac: mov    %r12,0x18(%rsp)
  0x000000010f8310b1: mov    %r13,0x10(%rsp)
  0x000000010f8310b6: mov    %r14,0x8(%rsp)
  0x000000010f8310bb: mov    %r15,(%rsp)
  0x000000010f8310bf: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f8310c9: movabs $0x10f831069,%rsi  ;   {internal_word}
  0x000000010f8310d3: mov    %rsp,%rdx
  0x000000010f8310d6: and    $0xfffffffffffffff0,%rsp
  0x000000010f8310da: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f8310df: hlt    
[Deopt Handler Code]
  0x000000010f8310e0: movabs $0x10f8310e0,%r10  ;   {section_word}
  0x000000010f8310ea: push   %r10
  0x000000010f8310ec: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f8310f1: hlt    
  0x000000010f8310f2: hlt    
  0x000000010f8310f3: hlt    
  0x000000010f8310f4: hlt    
  0x000000010f8310f5: hlt    
  0x000000010f8310f6: hlt    
  0x000000010f8310f7: hlt    
Decoding compiled method 0x000000010f831510:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ed65ac0} 'checkForComodification' '()V' in 'java/util/AbstractList$Itr'
  #           [sp+0x40]  (sp of caller)
  0x000000010f831680: mov    0x8(%rsi),%r10d
  0x000000010f831684: shl    $0x3,%r10
  0x000000010f831688: cmp    %rax,%r10
  0x000000010f83168b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f831691: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f83169c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f8316a0: mov    %eax,-0x14000(%rsp)
  0x000000010f8316a7: push   %rbp
  0x000000010f8316a8: sub    $0x30,%rsp
  0x000000010f8316ac: movabs $0x10edbd740,%rdx  ;   {metadata(method data for {method} {0x000000010ed65ac0} 'checkForComodification' '()V' in 'java/util/AbstractList$Itr')}
  0x000000010f8316b6: mov    0xdc(%rdx),%eax
  0x000000010f8316bc: add    $0x8,%eax
  0x000000010f8316bf: mov    %eax,0xdc(%rdx)
  0x000000010f8316c5: movabs $0x10ed65ac0,%rdx  ;   {metadata({method} {0x000000010ed65ac0} 'checkForComodification' '()V' in 'java/util/AbstractList$Itr')}
  0x000000010f8316cf: and    $0x1ff8,%eax
  0x000000010f8316d5: cmp    $0x0,%eax
  0x000000010f8316d8: je     0x000000010f83176e  ;*aload_0
                                                ; - java.util.AbstractList$Itr::checkForComodification@0 (line 385)

  0x000000010f8316de: mov    0x18(%rsi),%edx
  0x000000010f8316e1: shl    $0x3,%rdx          ;*getfield this$0
                                                ; - java.util.AbstractList$Itr::checkForComodification@1 (line 385)

  0x000000010f8316e5: mov    0xc(%rdx),%edx     ;*getfield modCount
                                                ; - java.util.AbstractList$Itr::checkForComodification@4 (line 385)
                                                ; implicit exception: dispatches to 0x000000010f831785
  0x000000010f8316e8: mov    0x14(%rsi),%eax    ;*getfield expectedModCount
                                                ; - java.util.AbstractList$Itr::checkForComodification@8 (line 385)

  0x000000010f8316eb: cmp    %eax,%edx
  0x000000010f8316ed: movabs $0x10edbd740,%rdx  ;   {metadata(method data for {method} {0x000000010ed65ac0} 'checkForComodification' '()V' in 'java/util/AbstractList$Itr')}
  0x000000010f8316f7: movabs $0x108,%rax
  0x000000010f831701: je     0x000000010f831711
  0x000000010f831707: movabs $0x118,%rax
  0x000000010f831711: mov    (%rdx,%rax,1),%rsi
  0x000000010f831715: lea    0x1(%rsi),%rsi
  0x000000010f831719: mov    %rsi,(%rdx,%rax,1)
  0x000000010f83171d: jne    0x000000010f83172f  ;*if_icmpeq
                                                ; - java.util.AbstractList$Itr::checkForComodification@11 (line 385)

  0x000000010f831723: add    $0x30,%rsp
  0x000000010f831727: pop    %rbp
  0x000000010f831728: test   %eax,-0x8d9662e(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f83172e: retq                      ;*return
                                                ; - java.util.AbstractList$Itr::checkForComodification@22 (line 387)

  0x000000010f83172f: nop
  0x000000010f831730: jmpq   0x000000010f831799  ;   {no_reloc}
  0x000000010f831735: add    %al,(%rax)
  0x000000010f831737: add    %al,(%rax)
  0x000000010f831739: add    %ch,%cl
  0x000000010f83173b: add    %al,%fs:(%rax)
  0x000000010f83173e: add    %cl,-0x75(%rax)    ;*new  ; - java.util.AbstractList$Itr::checkForComodification@14 (line 386)

  0x000000010f831741: lock movabs $0x10edbd740,%rdi  ;   {metadata(method data for {method} {0x000000010ed65ac0} 'checkForComodification' '()V' in 'java/util/AbstractList$Itr')}
  0x000000010f83174c: addq   $0x1,0x128(%rdi)
  0x000000010f831754: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.util.AbstractList$Itr::checkForComodification@18 (line 386)

  0x000000010f831757: mov    %rax,0x20(%rsp)
  0x000000010f83175c: nop
  0x000000010f83175d: nop
  0x000000010f83175e: nop
  0x000000010f83175f: callq  0x000000010f7170a0  ; OopMap{[32]=Oop off=228}
                                                ;*invokespecial <init>
                                                ; - java.util.AbstractList$Itr::checkForComodification@18 (line 386)
                                                ;   {optimized virtual_call}
  0x000000010f831764: mov    0x20(%rsp),%rax
  0x000000010f831769: jmpq   0x000000010f8317d8
  0x000000010f83176e: mov    %rdx,0x8(%rsp)
  0x000000010f831773: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f83177b: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=256}
                                                ;*synchronization entry
                                                ; - java.util.AbstractList$Itr::checkForComodification@-1 (line 385)
                                                ;   {runtime_call}
  0x000000010f831780: jmpq   0x000000010f8316de
  0x000000010f831785: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop off=266}
                                                ;*getfield modCount
                                                ; - java.util.AbstractList$Itr::checkForComodification@4 (line 385)
                                                ;   {runtime_call}
  0x000000010f83178a: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f831794: mov    $0xa050f00,%eax
  0x000000010f831799: callq  0x000000010f7d08e0  ; OopMap{off=286}
                                                ;*new  ; - java.util.AbstractList$Itr::checkForComodification@14 (line 386)
                                                ;   {runtime_call}
  0x000000010f83179e: jmp    0x000000010f831730
  0x000000010f8317a0: nop
  0x000000010f8317a1: nop
  0x000000010f8317a2: nop
  0x000000010f8317a3: mov    %rdx,%rdx
  0x000000010f8317a6: callq  0x000000010f7cd560  ; OopMap{off=299}
                                                ;*new  ; - java.util.AbstractList$Itr::checkForComodification@14 (line 386)
                                                ;   {runtime_call}
  0x000000010f8317ab: jmp    0x000000010f83173f
  0x000000010f8317ad: nop
  0x000000010f8317ae: nop
  0x000000010f8317af: mov    0x2a8(%r15),%rax
  0x000000010f8317b6: movabs $0x0,%r10
  0x000000010f8317c0: mov    %r10,0x2a8(%r15)
  0x000000010f8317c7: movabs $0x0,%r10
  0x000000010f8317d1: mov    %r10,0x2b0(%r15)
  0x000000010f8317d8: add    $0x30,%rsp
  0x000000010f8317dc: pop    %rbp
  0x000000010f8317dd: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f8317e2: hlt    
  0x000000010f8317e3: hlt    
  0x000000010f8317e4: hlt    
  0x000000010f8317e5: hlt    
  0x000000010f8317e6: hlt    
  0x000000010f8317e7: hlt    
  0x000000010f8317e8: hlt    
  0x000000010f8317e9: hlt    
  0x000000010f8317ea: hlt    
  0x000000010f8317eb: hlt    
  0x000000010f8317ec: hlt    
  0x000000010f8317ed: hlt    
  0x000000010f8317ee: hlt    
  0x000000010f8317ef: hlt    
  0x000000010f8317f0: hlt    
  0x000000010f8317f1: hlt    
  0x000000010f8317f2: hlt    
  0x000000010f8317f3: hlt    
  0x000000010f8317f4: hlt    
  0x000000010f8317f5: hlt    
  0x000000010f8317f6: hlt    
  0x000000010f8317f7: hlt    
  0x000000010f8317f8: hlt    
  0x000000010f8317f9: hlt    
  0x000000010f8317fa: hlt    
  0x000000010f8317fb: hlt    
  0x000000010f8317fc: hlt    
  0x000000010f8317fd: hlt    
  0x000000010f8317fe: hlt    
  0x000000010f8317ff: hlt    
[Stub Code]
  0x000000010f831800: nop                       ;   {no_reloc}
  0x000000010f831801: nop
  0x000000010f831802: nop
  0x000000010f831803: nop
  0x000000010f831804: nop
  0x000000010f831805: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f83180f: jmpq   0x000000010f83180f  ;   {runtime_call}
[Exception Handler]
  0x000000010f831814: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f831819: mov    %rsp,-0x28(%rsp)
  0x000000010f83181e: sub    $0x80,%rsp
  0x000000010f831825: mov    %rax,0x78(%rsp)
  0x000000010f83182a: mov    %rcx,0x70(%rsp)
  0x000000010f83182f: mov    %rdx,0x68(%rsp)
  0x000000010f831834: mov    %rbx,0x60(%rsp)
  0x000000010f831839: mov    %rbp,0x50(%rsp)
  0x000000010f83183e: mov    %rsi,0x48(%rsp)
  0x000000010f831843: mov    %rdi,0x40(%rsp)
  0x000000010f831848: mov    %r8,0x38(%rsp)
  0x000000010f83184d: mov    %r9,0x30(%rsp)
  0x000000010f831852: mov    %r10,0x28(%rsp)
  0x000000010f831857: mov    %r11,0x20(%rsp)
  0x000000010f83185c: mov    %r12,0x18(%rsp)
  0x000000010f831861: mov    %r13,0x10(%rsp)
  0x000000010f831866: mov    %r14,0x8(%rsp)
  0x000000010f83186b: mov    %r15,(%rsp)
  0x000000010f83186f: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f831879: movabs $0x10f831819,%rsi  ;   {internal_word}
  0x000000010f831883: mov    %rsp,%rdx
  0x000000010f831886: and    $0xfffffffffffffff0,%rsp
  0x000000010f83188a: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f83188f: hlt    
[Deopt Handler Code]
  0x000000010f831890: movabs $0x10f831890,%r10  ;   {section_word}
  0x000000010f83189a: push   %r10
  0x000000010f83189c: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f8318a1: hlt    
  0x000000010f8318a2: hlt    
  0x000000010f8318a3: hlt    
  0x000000010f8318a4: hlt    
  0x000000010f8318a5: hlt    
  0x000000010f8318a6: hlt    
  0x000000010f8318a7: hlt    
Decoding compiled method 0x000000010f831a50:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010ed84868} 'getArgumentsAndReturnSizes' '(Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/Type'
  # parm0:    rsi:rsi   = 'java/lang/String'
  #           [sp+0x90]  (sp of caller)
  0x000000010f831c80: mov    %eax,-0x14000(%rsp)
  0x000000010f831c87: push   %rbp
  0x000000010f831c88: sub    $0x80,%rsp
  0x000000010f831c8f: mov    %rsi,0x58(%rsp)
  0x000000010f831c94: movabs $0x10edc65e8,%rax  ;   {metadata(method data for {method} {0x000000010ed84868} 'getArgumentsAndReturnSizes' '(Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f831c9e: mov    0xdc(%rax),%edx
  0x000000010f831ca4: add    $0x8,%edx
  0x000000010f831ca7: mov    %edx,0xdc(%rax)
  0x000000010f831cad: movabs $0x10ed84868,%rax  ;   {metadata({method} {0x000000010ed84868} 'getArgumentsAndReturnSizes' '(Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f831cb7: and    $0x1ff8,%edx
  0x000000010f831cbd: cmp    $0x0,%edx
  0x000000010f831cc0: je     0x000000010f832796  ;*iconst_1
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@0 (line 437)

  0x000000010f831cc6: mov    $0x1,%edi
  0x000000010f831ccb: mov    $0x1,%ebx          ;*aload_0
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@4 (line 440)

  0x000000010f831cd0: mov    %rdi,%rcx
  0x000000010f831cd3: inc    %ecx
  0x000000010f831cd5: cmp    (%rsi),%rax        ;*invokevirtual charAt
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)
                                                ; implicit exception: dispatches to 0x000000010f8327ad
  0x000000010f831cd8: mov    %rsi,%rax
  0x000000010f831cdb: movabs $0x10edc65e8,%rdx  ;   {metadata(method data for {method} {0x000000010ed84868} 'getArgumentsAndReturnSizes' '(Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f831ce5: mov    0x8(%rax),%eax
  0x000000010f831ce8: shl    $0x3,%rax
  0x000000010f831cec: cmp    0x110(%rdx),%rax
  0x000000010f831cf3: jne    0x000000010f831d02
  0x000000010f831cf5: addq   $0x1,0x118(%rdx)
  0x000000010f831cfd: jmpq   0x000000010f831d68
  0x000000010f831d02: cmp    0x120(%rdx),%rax
  0x000000010f831d09: jne    0x000000010f831d18
  0x000000010f831d0b: addq   $0x1,0x128(%rdx)
  0x000000010f831d13: jmpq   0x000000010f831d68
  0x000000010f831d18: cmpq   $0x0,0x110(%rdx)
  0x000000010f831d23: jne    0x000000010f831d3c
  0x000000010f831d25: mov    %rax,0x110(%rdx)
  0x000000010f831d2c: movq   $0x1,0x118(%rdx)
  0x000000010f831d37: jmpq   0x000000010f831d68
  0x000000010f831d3c: cmpq   $0x0,0x120(%rdx)
  0x000000010f831d47: jne    0x000000010f831d60
  0x000000010f831d49: mov    %rax,0x120(%rdx)
  0x000000010f831d50: movq   $0x1,0x128(%rdx)
  0x000000010f831d5b: jmpq   0x000000010f831d68
  0x000000010f831d60: addq   $0x1,0x108(%rdx)
  0x000000010f831d68: movabs $0x10ebeb488,%rax  ;   {metadata(method data for {method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f831d72: mov    0xdc(%rax),%edx
  0x000000010f831d78: add    $0x8,%edx
  0x000000010f831d7b: mov    %edx,0xdc(%rax)
  0x000000010f831d81: movabs $0x10ea68db0,%rax  ;   {metadata({method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f831d8b: and    $0x7ffff8,%edx
  0x000000010f831d91: cmp    $0x0,%edx
  0x000000010f831d94: je     0x000000010f8327b2
  0x000000010f831d9a: cmp    $0x0,%edi
  0x000000010f831d9d: movabs $0x10ebeb488,%rax  ;   {metadata(method data for {method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f831da7: movabs $0x108,%rdx
  0x000000010f831db1: jl     0x000000010f831dc1
  0x000000010f831db7: movabs $0x118,%rdx
  0x000000010f831dc1: mov    (%rax,%rdx,1),%r8
  0x000000010f831dc5: lea    0x1(%r8),%r8
  0x000000010f831dc9: mov    %r8,(%rax,%rdx,1)
  0x000000010f831dcd: jl     0x000000010f8326b6  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)

  0x000000010f831dd3: mov    0xc(%rsi),%eax
  0x000000010f831dd6: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)

  0x000000010f831dda: mov    0xc(%rax),%edx     ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)
                                                ; implicit exception: dispatches to 0x000000010f8327c9
  0x000000010f831ddd: cmp    %edx,%edi
  0x000000010f831ddf: movabs $0x10ebeb488,%r8   ;   {metadata(method data for {method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f831de9: movabs $0x128,%r9
  0x000000010f831df3: jl     0x000000010f831e03
  0x000000010f831df9: movabs $0x138,%r9
  0x000000010f831e03: mov    (%r8,%r9,1),%r11
  0x000000010f831e07: lea    0x1(%r11),%r11
  0x000000010f831e0b: mov    %r11,(%r8,%r9,1)
  0x000000010f831e0f: jge    0x000000010f8326b6  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)

  0x000000010f831e15: movslq %edi,%rdi
  0x000000010f831e18: movzwl 0x10(%rax,%rdi,2),%edi  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)

  0x000000010f831e1d: and    $0xffff,%edi
  0x000000010f831e23: cmp    $0x29,%edi
  0x000000010f831e26: movabs $0x10edc65e8,%r8   ;   {metadata(method data for {method} {0x000000010ed84868} 'getArgumentsAndReturnSizes' '(Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f831e30: movabs $0x138,%r9
  0x000000010f831e3a: jne    0x000000010f831e4a
  0x000000010f831e40: movabs $0x148,%r9
  0x000000010f831e4a: mov    (%r8,%r9,1),%r11
  0x000000010f831e4e: lea    0x1(%r11),%r11
  0x000000010f831e52: mov    %r11,(%r8,%r9,1)
  0x000000010f831e56: je     0x000000010f83242f  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@16 (line 441)

  0x000000010f831e5c: cmp    $0x4c,%edi
  0x000000010f831e5f: movabs $0x10edc65e8,%r8   ;   {metadata(method data for {method} {0x000000010ed84868} 'getArgumentsAndReturnSizes' '(Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f831e69: movabs $0x218,%r9
  0x000000010f831e73: jne    0x000000010f831e83
  0x000000010f831e79: movabs $0x228,%r9
  0x000000010f831e83: mov    (%r8,%r9,1),%r11
  0x000000010f831e87: lea    0x1(%r11),%r11
  0x000000010f831e8b: mov    %r11,(%r8,%r9,1)
  0x000000010f831e8f: jne    0x000000010f83209b
  0x000000010f831e95: jmpq   0x000000010f831f79  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@60 (line 445)

  0x000000010f831e9a: nopw   0x0(%rax,%rax,1)
  0x000000010f831ea0: cmp    %edx,%ecx
  0x000000010f831ea2: movabs $0x10ebeb488,%r8   ;   {metadata(method data for {method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f831eac: movabs $0x128,%r9
  0x000000010f831eb6: jl     0x000000010f831ec6
  0x000000010f831ebc: movabs $0x138,%r9
  0x000000010f831ec6: mov    (%r8,%r9,1),%r11
  0x000000010f831eca: lea    0x1(%r11),%r11
  0x000000010f831ece: mov    %r11,(%r8,%r9,1)
  0x000000010f831ed2: jge    0x000000010f8326fe  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@68 (line 446)

  0x000000010f831ed8: movslq %ecx,%r8
  0x000000010f831edb: cmp    0xc(%rax),%ecx
  0x000000010f831ede: jae    0x000000010f8327ce
  0x000000010f831ee4: movzwl 0x10(%rax,%r8,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@68 (line 446)

  0x000000010f831eea: and    $0xffff,%ecx
  0x000000010f831ef0: cmp    $0x3b,%ecx
  0x000000010f831ef3: movabs $0x10edc65e8,%rcx  ;   {metadata(method data for {method} {0x000000010ed84868} 'getArgumentsAndReturnSizes' '(Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f831efd: movabs $0x268,%r8
  0x000000010f831f07: je     0x000000010f831f17
  0x000000010f831f0d: movabs $0x278,%r8
  0x000000010f831f17: mov    (%rcx,%r8,1),%r9
  0x000000010f831f1b: lea    0x1(%r9),%r9
  0x000000010f831f1f: mov    %r9,(%rcx,%r8,1)
  0x000000010f831f23: je     0x000000010f832084  ;*if_icmpeq
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@73 (line 446)

  0x000000010f831f29: movabs $0x10edc65e8,%rcx  ;   {metadata(method data for {method} {0x000000010ed84868} 'getArgumentsAndReturnSizes' '(Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f831f33: mov    0xe0(%rcx),%r8d
  0x000000010f831f3a: add    $0x8,%r8d
  0x000000010f831f3e: mov    %r8d,0xe0(%rcx)
  0x000000010f831f45: movabs $0x10ed84868,%rcx  ;   {metadata({method} {0x000000010ed84868} 'getArgumentsAndReturnSizes' '(Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f831f4f: and    $0xfff8,%r8d
  0x000000010f831f56: cmp    $0x0,%r8d
  0x000000010f831f5a: je     0x000000010f8327d7  ; OopMap{rsi=Oop [88]=Oop rax=Oop off=736}
                                                ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@76 (line 446)

  0x000000010f831f60: test   %eax,-0x8d96e66(%rip)        # 0x0000000106a9b100
                                                ;   {poll}
  0x000000010f831f66: movabs $0x10edc65e8,%rcx  ;   {metadata(method data for {method} {0x000000010ed84868} 'getArgumentsAndReturnSizes' '(Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f831f70: incl   0x288(%rcx)
  0x000000010f831f76: mov    %rdi,%rcx          ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@76 (line 446)

  0x000000010f831f79: mov    %rcx,%rdi
  0x000000010f831f7c: inc    %edi
  0x000000010f831f7e: mov    %rsi,%r8
  0x000000010f831f81: movabs $0x10edc65e8,%r9   ;   {metadata(method data for {method} {0x000000010ed84868} 'getArgumentsAndReturnSizes' '(Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f831f8b: mov    0x8(%r8),%r8d
  0x000000010f831f8f: shl    $0x3,%r8
  0x000000010f831f93: cmp    0x240(%r9),%r8
  0x000000010f831f9a: jne    0x000000010f831fa9
  0x000000010f831f9c: addq   $0x1,0x248(%r9)
  0x000000010f831fa4: jmpq   0x000000010f83200f
  0x000000010f831fa9: cmp    0x250(%r9),%r8
  0x000000010f831fb0: jne    0x000000010f831fbf
  0x000000010f831fb2: addq   $0x1,0x258(%r9)
  0x000000010f831fba: jmpq   0x000000010f83200f
  0x000000010f831fbf: cmpq   $0x0,0x240(%r9)
  0x000000010f831fca: jne    0x000000010f831fe3
  0x000000010f831fcc: mov    %r8,0x240(%r9)
  0x000000010f831fd3: movq   $0x1,0x248(%r9)
  0x000000010f831fde: jmpq   0x000000010f83200f
  0x000000010f831fe3: cmpq   $0x0,0x250(%r9)
  0x000000010f831fee: jne    0x000000010f832007
  0x000000010f831ff0: mov    %r8,0x250(%r9)
  0x000000010f831ff7: movq   $0x1,0x258(%r9)
  0x000000010f832002: jmpq   0x000000010f83200f
  0x000000010f832007: addq   $0x1,0x238(%r9)
  0x000000010f83200f: movabs $0x10ebeb488,%r8   ;   {metadata(method data for {method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f832019: mov    0xdc(%r8),%r9d
  0x000000010f832020: add    $0x8,%r9d
  0x000000010f832024: mov    %r9d,0xdc(%r8)
  0x000000010f83202b: movabs $0x10ea68db0,%r8   ;   {metadata({method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f832035: and    $0x7ffff8,%r9d
  0x000000010f83203c: cmp    $0x0,%r9d
  0x000000010f832040: je     0x000000010f8327ee
  0x000000010f832046: cmp    $0x0,%ecx
  0x000000010f832049: movabs $0x10ebeb488,%r8   ;   {metadata(method data for {method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f832053: movabs $0x108,%r9
  0x000000010f83205d: jl     0x000000010f83206d
  0x000000010f832063: movabs $0x118,%r9
  0x000000010f83206d: mov    (%r8,%r9,1),%r11
  0x000000010f832071: lea    0x1(%r11),%r11
  0x000000010f832075: mov    %r11,(%r8,%r9,1)
  0x000000010f832079: jl     0x000000010f8326fe
  0x000000010f83207f: jmpq   0x000000010f831ea0  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@68 (line 446)

  0x000000010f832084: inc    %ebx
  0x000000010f832086: movabs $0x10edc65e8,%rax  ;   {metadata(method data for {method} {0x000000010ed84868} 'getArgumentsAndReturnSizes' '(Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f832090: incl   0x2a0(%rax)
  0x000000010f832096: jmpq   0x000000010f8323e2  ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@82 (line 448)

  0x000000010f83209b: cmp    $0x5b,%edi
  0x000000010f83209e: movabs $0x10edc65e8,%r8   ;   {metadata(method data for {method} {0x000000010ed84868} 'getArgumentsAndReturnSizes' '(Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f8320a8: movabs $0x2b8,%r9
  0x000000010f8320b2: jne    0x000000010f8320c2
  0x000000010f8320b8: movabs $0x2c8,%r9
  0x000000010f8320c2: mov    (%r8,%r9,1),%r11
  0x000000010f8320c6: lea    0x1(%r11),%r11
  0x000000010f8320ca: mov    %r11,(%r8,%r9,1)
  0x000000010f8320ce: jne    0x000000010f832350
  0x000000010f8320d4: jmpq   0x000000010f8321b7  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@88 (line 449)

  0x000000010f8320d9: nopl   0x0(%rax)
  0x000000010f8320e0: cmp    %edx,%ecx
  0x000000010f8320e2: movabs $0x10ebeb488,%rdi  ;   {metadata(method data for {method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f8320ec: movabs $0x128,%r8
  0x000000010f8320f6: jl     0x000000010f832106
  0x000000010f8320fc: movabs $0x138,%r8
  0x000000010f832106: mov    (%rdi,%r8,1),%r9
  0x000000010f83210a: lea    0x1(%r9),%r9
  0x000000010f83210e: mov    %r9,(%rdi,%r8,1)
  0x000000010f832112: jge    0x000000010f832746  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@93 (line 450)

  0x000000010f832118: movslq %ecx,%rdi
  0x000000010f83211b: cmp    0xc(%rax),%ecx
  0x000000010f83211e: jae    0x000000010f832805
  0x000000010f832124: movzwl 0x10(%rax,%rdi,2),%edi  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@93 (line 450)

  0x000000010f832129: and    $0xffff,%edi
  0x000000010f83212f: cmp    $0x5b,%edi
  0x000000010f832132: movabs $0x10edc65e8,%r8   ;   {metadata(method data for {method} {0x000000010ed84868} 'getArgumentsAndReturnSizes' '(Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f83213c: movabs $0x308,%r9
  0x000000010f832146: jne    0x000000010f832156
  0x000000010f83214c: movabs $0x318,%r9
  0x000000010f832156: mov    (%r8,%r9,1),%r11
  0x000000010f83215a: lea    0x1(%r11),%r11
  0x000000010f83215e: mov    %r11,(%r8,%r9,1)
  0x000000010f832162: jne    0x000000010f8322bc  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@100 (line 450)

  0x000000010f832168: inc    %ecx
  0x000000010f83216a: movabs $0x10edc65e8,%rdi  ;   {metadata(method data for {method} {0x000000010ed84868} 'getArgumentsAndReturnSizes' '(Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f832174: mov    0xe0(%rdi),%r8d
  0x000000010f83217b: add    $0x8,%r8d
  0x000000010f83217f: mov    %r8d,0xe0(%rdi)
  0x000000010f832186: movabs $0x10ed84868,%rdi  ;   {metadata({method} {0x000000010ed84868} 'getArgumentsAndReturnSizes' '(Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f832190: and    $0xfff8,%r8d
  0x000000010f832197: cmp    $0x0,%r8d
  0x000000010f83219b: je     0x000000010f83280e  ; OopMap{rsi=Oop [88]=Oop rax=Oop off=1313}
                                                ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@106 (line 451)

  0x000000010f8321a1: test   %eax,-0x8d970a7(%rip)        # 0x0000000106a9b100
                                                ;   {poll}
  0x000000010f8321a7: movabs $0x10edc65e8,%rdi  ;   {metadata(method data for {method} {0x000000010ed84868} 'getArgumentsAndReturnSizes' '(Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f8321b1: incl   0x328(%rdi)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@106 (line 451)

  0x000000010f8321b7: mov    %rsi,%rdi
  0x000000010f8321ba: movabs $0x10edc65e8,%r8   ;   {metadata(method data for {method} {0x000000010ed84868} 'getArgumentsAndReturnSizes' '(Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f8321c4: mov    0x8(%rdi),%edi
  0x000000010f8321c7: shl    $0x3,%rdi
  0x000000010f8321cb: cmp    0x2e0(%r8),%rdi
  0x000000010f8321d2: jne    0x000000010f8321e1
  0x000000010f8321d4: addq   $0x1,0x2e8(%r8)
  0x000000010f8321dc: jmpq   0x000000010f832247
  0x000000010f8321e1: cmp    0x2f0(%r8),%rdi
  0x000000010f8321e8: jne    0x000000010f8321f7
  0x000000010f8321ea: addq   $0x1,0x2f8(%r8)
  0x000000010f8321f2: jmpq   0x000000010f832247
  0x000000010f8321f7: cmpq   $0x0,0x2e0(%r8)
  0x000000010f832202: jne    0x000000010f83221b
  0x000000010f832204: mov    %rdi,0x2e0(%r8)
  0x000000010f83220b: movq   $0x1,0x2e8(%r8)
  0x000000010f832216: jmpq   0x000000010f832247
  0x000000010f83221b: cmpq   $0x0,0x2f0(%r8)
  0x000000010f832226: jne    0x000000010f83223f
  0x000000010f832228: mov    %rdi,0x2f0(%r8)
  0x000000010f83222f: movq   $0x1,0x2f8(%r8)
  0x000000010f83223a: jmpq   0x000000010f832247
  0x000000010f83223f: addq   $0x1,0x2d8(%r8)
  0x000000010f832247: movabs $0x10ebeb488,%rdi  ;   {metadata(method data for {method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f832251: mov    0xdc(%rdi),%r8d
  0x000000010f832258: add    $0x8,%r8d
  0x000000010f83225c: mov    %r8d,0xdc(%rdi)
  0x000000010f832263: movabs $0x10ea68db0,%rdi  ;   {metadata({method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f83226d: and    $0x7ffff8,%r8d
  0x000000010f832274: cmp    $0x0,%r8d
  0x000000010f832278: je     0x000000010f832825
  0x000000010f83227e: cmp    $0x0,%ecx
  0x000000010f832281: movabs $0x10ebeb488,%rdi  ;   {metadata(method data for {method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f83228b: movabs $0x108,%r8
  0x000000010f832295: jl     0x000000010f8322a5
  0x000000010f83229b: movabs $0x118,%r8
  0x000000010f8322a5: mov    (%rdi,%r8,1),%r9
  0x000000010f8322a9: lea    0x1(%r9),%r9
  0x000000010f8322ad: mov    %r9,(%rdi,%r8,1)
  0x000000010f8322b1: jl     0x000000010f832746
  0x000000010f8322b7: jmpq   0x000000010f8320e0  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@93 (line 450)

  0x000000010f8322bc: cmp    $0x44,%edi
  0x000000010f8322bf: movabs $0x10edc65e8,%rax  ;   {metadata(method data for {method} {0x000000010ed84868} 'getArgumentsAndReturnSizes' '(Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f8322c9: movabs $0x340,%rdx
  0x000000010f8322d3: je     0x000000010f8322e3
  0x000000010f8322d9: movabs $0x350,%rdx
  0x000000010f8322e3: mov    (%rax,%rdx,1),%r8
  0x000000010f8322e7: lea    0x1(%r8),%r8
  0x000000010f8322eb: mov    %r8,(%rax,%rdx,1)
  0x000000010f8322ef: je     0x000000010f832336  ;*if_icmpeq
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@112 (line 453)

  0x000000010f8322f5: cmp    $0x4a,%edi
  0x000000010f8322f8: movabs $0x10edc65e8,%rax  ;   {metadata(method data for {method} {0x000000010ed84868} 'getArgumentsAndReturnSizes' '(Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f832302: movabs $0x360,%rdx
  0x000000010f83230c: jne    0x000000010f83231c
  0x000000010f832312: movabs $0x370,%rdx
  0x000000010f83231c: mov    (%rax,%rdx,1),%rdi
  0x000000010f832320: lea    0x1(%rdi),%rdi
  0x000000010f832324: mov    %rdi,(%rax,%rdx,1)
  0x000000010f832328: je     0x000000010f832336  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@118 (line 453)

  0x000000010f83232e: mov    %rcx,%rdi
  0x000000010f832331: jmpq   0x000000010f8323e2  ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@148 (line 461)

  0x000000010f832336: dec    %ebx
  0x000000010f832338: movabs $0x10edc65e8,%rax  ;   {metadata(method data for {method} {0x000000010ed84868} 'getArgumentsAndReturnSizes' '(Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f832342: incl   0x380(%rax)
  0x000000010f832348: mov    %rcx,%rdi
  0x000000010f83234b: jmpq   0x000000010f8323e2  ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@124 (line 454)

  0x000000010f832350: cmp    $0x44,%edi
  0x000000010f832353: movabs $0x10edc65e8,%rax  ;   {metadata(method data for {method} {0x000000010ed84868} 'getArgumentsAndReturnSizes' '(Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f83235d: movabs $0x398,%rdx
  0x000000010f832367: je     0x000000010f832377
  0x000000010f83236d: movabs $0x3a8,%rdx
  0x000000010f832377: mov    (%rax,%rdx,1),%r8
  0x000000010f83237b: lea    0x1(%r8),%r8
  0x000000010f83237f: mov    %r8,(%rax,%rdx,1)
  0x000000010f832383: je     0x000000010f8323c2  ;*if_icmpeq
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@130 (line 456)

  0x000000010f832389: cmp    $0x4a,%edi
  0x000000010f83238c: movabs $0x10edc65e8,%rax  ;   {metadata(method data for {method} {0x000000010ed84868} 'getArgumentsAndReturnSizes' '(Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f832396: movabs $0x3b8,%rdx
  0x000000010f8323a0: jne    0x000000010f8323b0
  0x000000010f8323a6: movabs $0x3c8,%rdx
  0x000000010f8323b0: mov    (%rax,%rdx,1),%rdi
  0x000000010f8323b4: lea    0x1(%rdi),%rdi
  0x000000010f8323b8: mov    %rdi,(%rax,%rdx,1)
  0x000000010f8323bc: jne    0x000000010f8323dd  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@136 (line 456)

  0x000000010f8323c2: add    $0x2,%ebx
  0x000000010f8323c5: movabs $0x10edc65e8,%rax  ;   {metadata(method data for {method} {0x000000010ed84868} 'getArgumentsAndReturnSizes' '(Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f8323cf: incl   0x3d8(%rax)
  0x000000010f8323d5: mov    %rcx,%rdi
  0x000000010f8323d8: jmpq   0x000000010f8323e2  ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@142 (line 457)

  0x000000010f8323dd: inc    %ebx
  0x000000010f8323df: mov    %rcx,%rdi          ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@148 (line 461)

  0x000000010f8323e2: movabs $0x10edc65e8,%rax  ;   {metadata(method data for {method} {0x000000010ed84868} 'getArgumentsAndReturnSizes' '(Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f8323ec: mov    0xe0(%rax),%edx
  0x000000010f8323f2: add    $0x8,%edx
  0x000000010f8323f5: mov    %edx,0xe0(%rax)
  0x000000010f8323fb: movabs $0x10ed84868,%rax  ;   {metadata({method} {0x000000010ed84868} 'getArgumentsAndReturnSizes' '(Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f832405: and    $0xfff8,%edx
  0x000000010f83240b: cmp    $0x0,%edx
  0x000000010f83240e: je     0x000000010f83283c  ; OopMap{rsi=Oop [88]=Oop off=1940}
                                                ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@148 (line 461)

  0x000000010f832414: test   %eax,-0x8d9731a(%rip)        # 0x0000000106a9b100
                                                ;   {poll}
  0x000000010f83241a: movabs $0x10edc65e8,%rax  ;   {metadata(method data for {method} {0x000000010ed84868} 'getArgumentsAndReturnSizes' '(Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f832424: incl   0x3f0(%rax)
  0x000000010f83242a: jmpq   0x000000010f831cd0  ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@148 (line 461)

  0x000000010f83242f: mov    %rsi,%rdi
  0x000000010f832432: movabs $0x10edc65e8,%r8   ;   {metadata(method data for {method} {0x000000010ed84868} 'getArgumentsAndReturnSizes' '(Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f83243c: mov    0x8(%rdi),%edi
  0x000000010f83243f: shl    $0x3,%rdi
  0x000000010f832443: cmp    0x160(%r8),%rdi
  0x000000010f83244a: jne    0x000000010f832459
  0x000000010f83244c: addq   $0x1,0x168(%r8)
  0x000000010f832454: jmpq   0x000000010f8324bf
  0x000000010f832459: cmp    0x170(%r8),%rdi
  0x000000010f832460: jne    0x000000010f83246f
  0x000000010f832462: addq   $0x1,0x178(%r8)
  0x000000010f83246a: jmpq   0x000000010f8324bf
  0x000000010f83246f: cmpq   $0x0,0x160(%r8)
  0x000000010f83247a: jne    0x000000010f832493
  0x000000010f83247c: mov    %rdi,0x160(%r8)
  0x000000010f832483: movq   $0x1,0x168(%r8)
  0x000000010f83248e: jmpq   0x000000010f8324bf
  0x000000010f832493: cmpq   $0x0,0x170(%r8)
  0x000000010f83249e: jne    0x000000010f8324b7
  0x000000010f8324a0: mov    %rdi,0x170(%r8)
  0x000000010f8324a7: movq   $0x1,0x178(%r8)
  0x000000010f8324b2: jmpq   0x000000010f8324bf
  0x000000010f8324b7: addq   $0x1,0x158(%r8)
  0x000000010f8324bf: movabs $0x10ebeb488,%rdi  ;   {metadata(method data for {method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f8324c9: mov    0xdc(%rdi),%r8d
  0x000000010f8324d0: add    $0x8,%r8d
  0x000000010f8324d4: mov    %r8d,0xdc(%rdi)
  0x000000010f8324db: movabs $0x10ea68db0,%rdi  ;   {metadata({method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f8324e5: and    $0x7ffff8,%r8d
  0x000000010f8324ec: cmp    $0x0,%r8d
  0x000000010f8324f0: je     0x000000010f832853
  0x000000010f8324f6: cmp    $0x0,%ecx
  0x000000010f8324f9: movabs $0x10ebeb488,%rsi  ;   {metadata(method data for {method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f832503: movabs $0x108,%rdi
  0x000000010f83250d: jl     0x000000010f83251d
  0x000000010f832513: movabs $0x118,%rdi
  0x000000010f83251d: mov    (%rsi,%rdi,1),%r8
  0x000000010f832521: lea    0x1(%r8),%r8
  0x000000010f832525: mov    %r8,(%rsi,%rdi,1)
  0x000000010f832529: jl     0x000000010f83266e  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@21 (line 442)

  0x000000010f83252f: cmp    %edx,%ecx
  0x000000010f832531: movabs $0x10ebeb488,%rdx  ;   {metadata(method data for {method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f83253b: movabs $0x128,%rsi
  0x000000010f832545: jl     0x000000010f832555
  0x000000010f83254b: movabs $0x138,%rsi
  0x000000010f832555: mov    (%rdx,%rsi,1),%rdi
  0x000000010f832559: lea    0x1(%rdi),%rdi
  0x000000010f83255d: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f832561: jge    0x000000010f83266e  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@21 (line 442)

  0x000000010f832567: movslq %ecx,%rcx
  0x000000010f83256a: movzwl 0x10(%rax,%rcx,2),%eax  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@21 (line 442)

  0x000000010f83256f: and    $0xffff,%eax
  0x000000010f832575: shl    $0x2,%ebx
  0x000000010f832578: cmp    $0x56,%eax
  0x000000010f83257b: movabs $0x10edc65e8,%rdx  ;   {metadata(method data for {method} {0x000000010ed84868} 'getArgumentsAndReturnSizes' '(Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f832585: movabs $0x188,%rsi
  0x000000010f83258f: jne    0x000000010f83259f
  0x000000010f832595: movabs $0x198,%rsi
  0x000000010f83259f: mov    (%rdx,%rsi,1),%rdi
  0x000000010f8325a3: lea    0x1(%rdi),%rdi
  0x000000010f8325a7: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f8325ab: je     0x000000010f832647  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@31 (line 443)

  0x000000010f8325b1: cmp    $0x44,%eax
  0x000000010f8325b4: movabs $0x10edc65e8,%rdx  ;   {metadata(method data for {method} {0x000000010ed84868} 'getArgumentsAndReturnSizes' '(Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f8325be: movabs $0x1c0,%rsi
  0x000000010f8325c8: je     0x000000010f8325d8
  0x000000010f8325ce: movabs $0x1d0,%rsi
  0x000000010f8325d8: mov    (%rdx,%rsi,1),%rdi
  0x000000010f8325dc: lea    0x1(%rdi),%rdi
  0x000000010f8325e0: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f8325e4: je     0x000000010f832623  ;*if_icmpeq
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@41 (line 443)

  0x000000010f8325ea: cmp    $0x4a,%eax
  0x000000010f8325ed: movabs $0x10edc65e8,%rax  ;   {metadata(method data for {method} {0x000000010ed84868} 'getArgumentsAndReturnSizes' '(Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f8325f7: movabs $0x1e0,%rdx
  0x000000010f832601: jne    0x000000010f832611
  0x000000010f832607: movabs $0x1f0,%rdx
  0x000000010f832611: mov    (%rax,%rdx,1),%rsi
  0x000000010f832615: lea    0x1(%rsi),%rsi
  0x000000010f832619: mov    %rsi,(%rax,%rdx,1)
  0x000000010f83261d: jne    0x000000010f83263d  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@47 (line 443)

  0x000000010f832623: movabs $0x10edc65e8,%rax  ;   {metadata(method data for {method} {0x000000010ed84868} 'getArgumentsAndReturnSizes' '(Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f83262d: incl   0x200(%rax)
  0x000000010f832633: mov    $0x2,%eax
  0x000000010f832638: jmpq   0x000000010f83265c  ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@51 (line 443)

  0x000000010f83263d: mov    $0x1,%eax
  0x000000010f832642: jmpq   0x000000010f83265c  ;*ior
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@55 (line 443)

  0x000000010f832647: movabs $0x10edc65e8,%rax  ;   {metadata(method data for {method} {0x000000010ed84868} 'getArgumentsAndReturnSizes' '(Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/Type')}
  0x000000010f832651: incl   0x1a8(%rax)
  0x000000010f832657: mov    $0x0,%eax          ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@35 (line 443)

  0x000000010f83265c: or     %rbx,%rax
  0x000000010f83265f: add    $0x80,%rsp
  0x000000010f832666: pop    %rbp
  0x000000010f832667: test   %eax,-0x8d9756d(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f83266d: retq                      ;*ireturn
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@56 (line 443)

  0x000000010f83266e: mov    %ebx,0x48(%rsp)
  0x000000010f832672: nopw   0x0(%rax,%rax,1)
  0x000000010f832678: jmpq   0x000000010f832879  ;   {no_reloc}
  0x000000010f83267d: add    %al,(%rax)
  0x000000010f83267f: add    %al,(%rax)
  0x000000010f832681: add    %ch,%cl
  0x000000010f832683: cld    
  0x000000010f832684: add    %eax,(%rax)
  0x000000010f832686: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@21 (line 442)

  0x000000010f832689: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f83268c: mov    %dh,0x10e(%rsi,%rdi,4)
  0x000000010f832693: add    %cl,-0x7d(%rax)
  0x000000010f832696: xchg   %cl,0x1(%rax)
  0x000000010f832699: add    %al,(%rax)
  0x000000010f83269b: add    %ecx,-0x75(%rax)
  0x000000010f83269e: rorl   -0x75(%rax)
  0x000000010f8326a1: lock mov %rax,0x40(%rsp)  ;*invokespecial <init>
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@21 (line 442)

  0x000000010f8326a7: callq  0x000000010f7170a0  ; OopMap{[64]=Oop off=2604}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@21 (line 442)
                                                ;   {optimized virtual_call}
  0x000000010f8326ac: mov    0x40(%rsp),%rax
  0x000000010f8326b1: jmpq   0x000000010f83292d  ;*athrow
                                                ; - java.lang.String::charAt@21 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@21 (line 442)

  0x000000010f8326b6: mov    %ecx,0x4c(%rsp)
  0x000000010f8326ba: mov    %ebx,0x48(%rsp)
  0x000000010f8326be: xchg   %ax,%ax
  0x000000010f8326c0: jmpq   0x000000010f83289f  ;   {no_reloc}
  0x000000010f8326c5: add    %al,(%rax)
  0x000000010f8326c7: add    %al,(%rax)
  0x000000010f8326c9: add    %ch,%cl
  0x000000010f8326cb: fiaddl (%rcx)
  0x000000010f8326cd: add    %al,(%rax)         ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)

  0x000000010f8326cf: mov    %rax,%rdx
  0x000000010f8326d2: movabs $0x10ebeb488,%rbx  ;   {metadata(method data for {method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f8326dc: addq   $0x1,0x148(%rbx)
  0x000000010f8326e4: mov    %rdi,%rdx
  0x000000010f8326e7: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)

  0x000000010f8326ea: mov    %rax,0x50(%rsp)
  0x000000010f8326ef: callq  0x000000010f7170a0  ; OopMap{[88]=Oop [80]=Oop off=2676}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)
                                                ;   {optimized virtual_call}
  0x000000010f8326f4: mov    0x50(%rsp),%rax
  0x000000010f8326f9: jmpq   0x000000010f83292d  ;*athrow
                                                ; - java.lang.String::charAt@21 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)

  0x000000010f8326fe: mov    %edi,0x68(%rsp)
  0x000000010f832702: mov    %ebx,0x48(%rsp)
  0x000000010f832706: xchg   %ax,%ax
  0x000000010f832708: jmpq   0x000000010f8328c5  ;   {no_reloc}
  0x000000010f83270d: add    %al,(%rax)
  0x000000010f83270f: add    %al,(%rax)
  0x000000010f832711: add    %ch,%cl
  0x000000010f832713: mov    $0x48000001,%eax   ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@68 (line 446)

  0x000000010f832718: mov    %eax,%edx
  0x000000010f83271a: movabs $0x10ebeb488,%rsi  ;   {metadata(method data for {method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f832724: addq   $0x1,0x148(%rsi)
  0x000000010f83272c: mov    %rcx,%rdx
  0x000000010f83272f: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@68 (line 446)

  0x000000010f832732: mov    %rax,0x60(%rsp)
  0x000000010f832737: callq  0x000000010f7170a0  ; OopMap{[88]=Oop [96]=Oop off=2748}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@68 (line 446)
                                                ;   {optimized virtual_call}
  0x000000010f83273c: mov    0x60(%rsp),%rax
  0x000000010f832741: jmpq   0x000000010f83292d  ;*athrow
                                                ; - java.lang.String::charAt@21 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@68 (line 446)

  0x000000010f832746: mov    %ebx,0x48(%rsp)
  0x000000010f83274a: nopw   0x0(%rax,%rax,1)
  0x000000010f832750: jmpq   0x000000010f8328eb  ;   {no_reloc}
  0x000000010f832755: add    %al,(%rax)
  0x000000010f832757: add    %al,(%rax)
  0x000000010f832759: add    %ch,%cl
  0x000000010f83275b: xchg   %eax,%esi
  0x000000010f83275c: add    %eax,(%rax)
  0x000000010f83275e: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@93 (line 450)

  0x000000010f832761: rorb   -0x41(%rax)        ;   {metadata(method data for {method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f832764: mov    %dh,0x10e(%rsi,%rdi,4)
  0x000000010f83276b: add    %cl,-0x7d(%rax)
  0x000000010f83276e: xchg   %ecx,0x1(%rax)
  0x000000010f832771: add    %al,(%rax)
  0x000000010f832773: add    %ecx,-0x75(%rax)
  0x000000010f832776: rorl   -0x75(%rax)
  0x000000010f832779: lock mov %ecx,0x6c(%rsp)  ;*invokespecial <init>
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@93 (line 450)

  0x000000010f83277e: mov    %rax,0x70(%rsp)
  0x000000010f832783: nop
  0x000000010f832784: nop
  0x000000010f832785: nop
  0x000000010f832786: nop
  0x000000010f832787: callq  0x000000010f7170a0  ; OopMap{[112]=Oop [88]=Oop off=2828}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@93 (line 450)
                                                ;   {optimized virtual_call}
  0x000000010f83278c: mov    0x70(%rsp),%rax
  0x000000010f832791: jmpq   0x000000010f83292d
  0x000000010f832796: mov    %rax,0x8(%rsp)
  0x000000010f83279b: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f8327a3: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [88]=Oop off=2856}
                                                ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@-1 (line 437)
                                                ;   {runtime_call}
  0x000000010f8327a8: jmpq   0x000000010f831cc6
  0x000000010f8327ad: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop [88]=Oop off=2866}
                                                ;*invokevirtual charAt
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)
                                                ;   {runtime_call}
  0x000000010f8327b2: mov    %rax,0x8(%rsp)
  0x000000010f8327b7: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f8327bf: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [88]=Oop off=2884}
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)
                                                ;   {runtime_call}
  0x000000010f8327c4: jmpq   0x000000010f831d9a
  0x000000010f8327c9: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop [88]=Oop rax=Oop off=2894}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)
                                                ;   {runtime_call}
  0x000000010f8327ce: mov    %rcx,(%rsp)
  0x000000010f8327d2: callq  0x000000010f7cca00  ; OopMap{rsi=Oop [88]=Oop rax=Oop off=2903}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@68 (line 446)
                                                ;   {runtime_call}
  0x000000010f8327d7: mov    %rcx,0x8(%rsp)
  0x000000010f8327dc: movq   $0x4c,(%rsp)
  0x000000010f8327e4: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [88]=Oop rax=Oop off=2921}
                                                ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@76 (line 446)
                                                ;   {runtime_call}
  0x000000010f8327e9: jmpq   0x000000010f831f60
  0x000000010f8327ee: mov    %r8,0x8(%rsp)
  0x000000010f8327f3: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f8327fb: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [88]=Oop rax=Oop off=2944}
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@68 (line 446)
                                                ;   {runtime_call}
  0x000000010f832800: jmpq   0x000000010f832046
  0x000000010f832805: mov    %rcx,(%rsp)
  0x000000010f832809: callq  0x000000010f7cca00  ; OopMap{rsi=Oop [88]=Oop rax=Oop off=2958}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@93 (line 450)
                                                ;   {runtime_call}
  0x000000010f83280e: mov    %rdi,0x8(%rsp)
  0x000000010f832813: movq   $0x6a,(%rsp)
  0x000000010f83281b: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [88]=Oop rax=Oop off=2976}
                                                ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@106 (line 451)
                                                ;   {runtime_call}
  0x000000010f832820: jmpq   0x000000010f8321a1
  0x000000010f832825: mov    %rdi,0x8(%rsp)
  0x000000010f83282a: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f832832: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [88]=Oop rax=Oop off=2999}
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@93 (line 450)
                                                ;   {runtime_call}
  0x000000010f832837: jmpq   0x000000010f83227e
  0x000000010f83283c: mov    %rax,0x8(%rsp)
  0x000000010f832841: movq   $0x94,(%rsp)
  0x000000010f832849: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [88]=Oop off=3022}
                                                ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@148 (line 461)
                                                ;   {runtime_call}
  0x000000010f83284e: jmpq   0x000000010f832414
  0x000000010f832853: mov    %rdi,0x8(%rsp)
  0x000000010f832858: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f832860: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [88]=Oop rax=Oop off=3045}
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@21 (line 442)
                                                ;   {runtime_call}
  0x000000010f832865: jmpq   0x000000010f8324f6
  0x000000010f83286a: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f832874: mov    $0xa050f00,%eax
  0x000000010f832879: callq  0x000000010f7d08e0  ; OopMap{off=3070}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@21 (line 442)
                                                ;   {runtime_call}
  0x000000010f83287e: jmpq   0x000000010f832678
  0x000000010f832883: mov    %rdx,%rdx
  0x000000010f832886: callq  0x000000010f7cd560  ; OopMap{off=3083}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@21 (line 442)
                                                ;   {runtime_call}
  0x000000010f83288b: jmpq   0x000000010f832687
  0x000000010f832890: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f83289a: mov    $0xa050f00,%eax
  0x000000010f83289f: callq  0x000000010f7d08e0  ; OopMap{[88]=Oop off=3108}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)
                                                ;   {runtime_call}
  0x000000010f8328a4: jmpq   0x000000010f8326c0
  0x000000010f8328a9: mov    %rdx,%rdx
  0x000000010f8328ac: callq  0x000000010f7cd560  ; OopMap{[88]=Oop off=3121}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)
                                                ;   {runtime_call}
  0x000000010f8328b1: jmpq   0x000000010f8326cf
  0x000000010f8328b6: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f8328c0: mov    $0xa050f00,%eax
  0x000000010f8328c5: callq  0x000000010f7d08e0  ; OopMap{[88]=Oop off=3146}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@68 (line 446)
                                                ;   {runtime_call}
  0x000000010f8328ca: jmpq   0x000000010f832708
  0x000000010f8328cf: mov    %rdx,%rdx
  0x000000010f8328d2: callq  0x000000010f7cd560  ; OopMap{[88]=Oop off=3159}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@68 (line 446)
                                                ;   {runtime_call}
  0x000000010f8328d7: jmpq   0x000000010f832717
  0x000000010f8328dc: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f8328e6: mov    $0xa050f00,%eax
  0x000000010f8328eb: callq  0x000000010f7d08e0  ; OopMap{[88]=Oop off=3184}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@93 (line 450)
                                                ;   {runtime_call}
  0x000000010f8328f0: jmpq   0x000000010f832750
  0x000000010f8328f5: mov    %rdx,%rdx
  0x000000010f8328f8: callq  0x000000010f7cd560  ; OopMap{[88]=Oop off=3197}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@93 (line 450)
                                                ;   {runtime_call}
  0x000000010f8328fd: jmpq   0x000000010f83275f
  0x000000010f832902: nop
  0x000000010f832903: nop
  0x000000010f832904: mov    0x2a8(%r15),%rax
  0x000000010f83290b: movabs $0x0,%r10
  0x000000010f832915: mov    %r10,0x2a8(%r15)
  0x000000010f83291c: movabs $0x0,%r10
  0x000000010f832926: mov    %r10,0x2b0(%r15)
  0x000000010f83292d: add    $0x80,%rsp
  0x000000010f832934: pop    %rbp
  0x000000010f832935: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f83293a: hlt    
  0x000000010f83293b: hlt    
  0x000000010f83293c: hlt    
  0x000000010f83293d: hlt    
  0x000000010f83293e: hlt    
  0x000000010f83293f: hlt    
[Stub Code]
  0x000000010f832940: nop                       ;   {no_reloc}
  0x000000010f832941: nop
  0x000000010f832942: nop
  0x000000010f832943: nop
  0x000000010f832944: nop
  0x000000010f832945: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f83294f: jmpq   0x000000010f83294f  ;   {runtime_call}
  0x000000010f832954: nop
  0x000000010f832955: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f83295f: jmpq   0x000000010f83295f  ;   {runtime_call}
  0x000000010f832964: nop
  0x000000010f832965: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f83296f: jmpq   0x000000010f83296f  ;   {runtime_call}
  0x000000010f832974: nop
  0x000000010f832975: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f83297f: jmpq   0x000000010f83297f  ;   {runtime_call}
[Exception Handler]
  0x000000010f832984: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f832989: mov    %rsp,-0x28(%rsp)
  0x000000010f83298e: sub    $0x80,%rsp
  0x000000010f832995: mov    %rax,0x78(%rsp)
  0x000000010f83299a: mov    %rcx,0x70(%rsp)
  0x000000010f83299f: mov    %rdx,0x68(%rsp)
  0x000000010f8329a4: mov    %rbx,0x60(%rsp)
  0x000000010f8329a9: mov    %rbp,0x50(%rsp)
  0x000000010f8329ae: mov    %rsi,0x48(%rsp)
  0x000000010f8329b3: mov    %rdi,0x40(%rsp)
  0x000000010f8329b8: mov    %r8,0x38(%rsp)
  0x000000010f8329bd: mov    %r9,0x30(%rsp)
  0x000000010f8329c2: mov    %r10,0x28(%rsp)
  0x000000010f8329c7: mov    %r11,0x20(%rsp)
  0x000000010f8329cc: mov    %r12,0x18(%rsp)
  0x000000010f8329d1: mov    %r13,0x10(%rsp)
  0x000000010f8329d6: mov    %r14,0x8(%rsp)
  0x000000010f8329db: mov    %r15,(%rsp)
  0x000000010f8329df: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f8329e9: movabs $0x10f832989,%rsi  ;   {internal_word}
  0x000000010f8329f3: mov    %rsp,%rdx
  0x000000010f8329f6: and    $0xfffffffffffffff0,%rsp
  0x000000010f8329fa: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f8329ff: hlt    
[Deopt Handler Code]
  0x000000010f832a00: movabs $0x10f832a00,%r10  ;   {section_word}
  0x000000010f832a0a: push   %r10
  0x000000010f832a0c: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f832a11: hlt    
  0x000000010f832a12: hlt    
  0x000000010f832a13: hlt    
  0x000000010f832a14: hlt    
  0x000000010f832a15: hlt    
  0x000000010f832a16: hlt    
  0x000000010f832a17: hlt    
Decoding compiled method 0x000000010f8360d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ea69618} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x000000010f836220: mov    0x8(%rsi),%r10d
  0x000000010f836224: shl    $0x3,%r10
  0x000000010f836228: cmp    %r10,%rax
  0x000000010f83622b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f836231: data16 xchg %ax,%ax
  0x000000010f836234: nopl   0x0(%rax,%rax,1)
  0x000000010f83623c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f836240: mov    %eax,-0x14000(%rsp)
  0x000000010f836247: push   %rbp
  0x000000010f836248: sub    $0x30,%rsp
  0x000000010f83624c: cmp    %rdx,%rsi
  0x000000010f83624f: jne    0x000000010f836262
  0x000000010f836251: mov    $0x1,%eax          ;*synchronization entry
                                                ; - java.lang.String::equals@-1 (line 977)

  0x000000010f836256: add    $0x30,%rsp
  0x000000010f83625a: pop    %rbp
  0x000000010f83625b: test   %eax,-0x8d9b261(%rip)        # 0x0000000106a9b000
                                                ;   {poll_return}
  0x000000010f836261: retq   
  0x000000010f836262: test   %rdx,%rdx
  0x000000010f836265: je     0x000000010f8363e0
  0x000000010f83626b: mov    0x8(%rdx),%r10d
  0x000000010f83626f: cmp    $0xf80002da,%r10d  ;   {metadata('java/lang/String')}
  0x000000010f836276: jne    0x000000010f836439  ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)

  0x000000010f83627c: mov    0xc(%rsi),%edi     ;*getfield value
                                                ; - java.lang.String::equals@20 (line 982)

  0x000000010f83627f: mov    0xc(%r12,%rdi,8),%ecx  ;*checkcast
                                                ; - java.lang.String::equals@15 (line 981)
                                                ; implicit exception: dispatches to 0x000000010f836451
  0x000000010f836284: mov    0xc(%rdx),%r10d    ;*getfield value
                                                ; - java.lang.String::equals@27 (line 983)

  0x000000010f836288: vmovd  %r10d,%xmm3
  0x000000010f83628d: mov    0xc(%r12,%r10,8),%r9d  ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ; implicit exception: dispatches to 0x000000010f836461
  0x000000010f836292: cmp    %r9d,%ecx
  0x000000010f836295: jne    0x000000010f8363e0  ;*if_icmpne
                                                ; - java.lang.String::equals@31 (line 983)

  0x000000010f83629b: test   %ecx,%ecx
  0x000000010f83629d: je     0x000000010f8363d6  ;*ifeq
                                                ; - java.lang.String::equals@53 (line 987)

  0x000000010f8362a3: mov    %ecx,%r14d
  0x000000010f8362a6: dec    %r14d              ;*iinc
                                                ; - java.lang.String::equals@50 (line 987)

  0x000000010f8362a9: movslq %ecx,%r11
  0x000000010f8362ac: lea    (%r12,%rdi,8),%r8
  0x000000010f8362b0: lea    (%r12,%r10,8),%r13
  0x000000010f8362b4: mov    %ecx,%eax
  0x000000010f8362b6: add    $0xfffffffe,%eax
  0x000000010f8362b9: mov    $0xffffffff,%esi
  0x000000010f8362be: cmp    %esi,%eax
  0x000000010f8362c0: cmovl  %esi,%eax
  0x000000010f8362c3: mov    %r14d,%ebx
  0x000000010f8362c6: xor    %r10d,%r10d
  0x000000010f8362c9: mov    %r14d,%edx
  0x000000010f8362cc: sub    %ebx,%edx          ;*aload
                                                ; - java.lang.String::equals@56 (line 988)

  0x000000010f8362ce: cmp    %ecx,%edx
  0x000000010f8362d0: jae    0x000000010f8363f4
  0x000000010f8362d6: vmovd  %edi,%xmm0
  0x000000010f8362da: vmovd  %r10d,%xmm1
  0x000000010f8362df: movslq %ebx,%rdi
  0x000000010f8362e2: mov    %r11,%r10
  0x000000010f8362e5: sub    %rdi,%r10
  0x000000010f8362e8: movzwl 0xe(%r8,%r10,2),%ebp  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x000000010f8362ee: cmp    %r9d,%edx
  0x000000010f8362f1: jae    0x000000010f836415  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x000000010f8362f7: movzwl 0xe(%r13,%r10,2),%edx
  0x000000010f8362fd: cmp    %edx,%ebp
  0x000000010f8362ff: jne    0x000000010f8363e7  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x000000010f836305: dec    %ebx               ;*iinc
                                                ; - java.lang.String::equals@50 (line 987)

  0x000000010f836307: cmp    %eax,%ebx
  0x000000010f836309: jle    0x000000010f836316  ;*ifeq
                                                ; - java.lang.String::equals@53 (line 987)

  0x000000010f83630b: vmovd  %xmm1,%r10d
  0x000000010f836310: vmovd  %xmm0,%edi
  0x000000010f836314: jmp    0x000000010f8362c9
  0x000000010f836316: mov    %ecx,%edx
  0x000000010f836318: sub    %r9d,%edx
  0x000000010f83631b: dec    %edx
  0x000000010f83631d: cmp    %esi,%edx
  0x000000010f83631f: cmovl  %esi,%edx
  0x000000010f836322: mov    %edx,%edi
  0x000000010f836324: add    $0x3,%edi
  0x000000010f836327: mov    $0x7fffffff,%r10d
  0x000000010f83632d: cmp    %edi,%edx
  0x000000010f83632f: cmovg  %r10d,%edi
  0x000000010f836333: cmp    %edi,%ebx
  0x000000010f836335: jle    0x000000010f8363a1
  0x000000010f836337: nopw   0x0(%rax,%rax,1)   ;*aload
                                                ; - java.lang.String::equals@56 (line 988)

  0x000000010f836340: movslq %ebx,%r10
  0x000000010f836343: mov    %r11,%rsi
  0x000000010f836346: sub    %r10,%rsi          ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x000000010f836349: movzwl 0xe(%r13,%rsi,2),%edx  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x000000010f83634f: movzwl 0xe(%r8,%rsi,2),%r10d  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x000000010f836355: cmp    %edx,%r10d
  0x000000010f836358: jne    0x000000010f8363e7  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x000000010f83635e: movzwl 0x10(%r13,%rsi,2),%edx  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x000000010f836364: movzwl 0x10(%r8,%rsi,2),%r10d  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x000000010f83636a: cmp    %edx,%r10d
  0x000000010f83636d: jne    0x000000010f8363e7  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x000000010f83636f: mov    %ecx,%r10d
  0x000000010f836372: sub    %ebx,%r10d
  0x000000010f836375: movslq %r10d,%rsi
  0x000000010f836378: movzwl 0x12(%r8,%rsi,2),%edx  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x000000010f83637e: movzwl 0x12(%r13,%rsi,2),%r10d  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x000000010f836384: cmp    %r10d,%edx
  0x000000010f836387: jne    0x000000010f8363e7  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x000000010f836389: movzwl 0x14(%r13,%rsi,2),%edx  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x000000010f83638f: movzwl 0x14(%r8,%rsi,2),%r10d  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x000000010f836395: cmp    %edx,%r10d
  0x000000010f836398: jne    0x000000010f8363e7  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x000000010f83639a: add    $0xfffffffc,%ebx   ;*iinc
                                                ; - java.lang.String::equals@50 (line 987)

  0x000000010f83639d: cmp    %edi,%ebx
  0x000000010f83639f: jg     0x000000010f836340  ;*ifeq
                                                ; - java.lang.String::equals@53 (line 987)

  0x000000010f8363a1: cmp    $0xffffffff,%ebx
  0x000000010f8363a4: je     0x000000010f8363d6
  0x000000010f8363a6: xchg   %ax,%ax
  0x000000010f8363a8: mov    %r14d,%edx
  0x000000010f8363ab: sub    %ebx,%edx          ;*aload
                                                ; - java.lang.String::equals@56 (line 988)

  0x000000010f8363ad: cmp    %ecx,%edx
  0x000000010f8363af: jae    0x000000010f8363f0
  0x000000010f8363b1: movslq %ebx,%rdi
  0x000000010f8363b4: mov    %r11,%r10
  0x000000010f8363b7: sub    %rdi,%r10
  0x000000010f8363ba: movzwl 0xe(%r8,%r10,2),%ebp  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x000000010f8363c0: cmp    %r9d,%edx
  0x000000010f8363c3: jae    0x000000010f836415  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x000000010f8363c5: movzwl 0xe(%r13,%r10,2),%edi
  0x000000010f8363cb: cmp    %edi,%ebp
  0x000000010f8363cd: jne    0x000000010f8363e7  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x000000010f8363cf: dec    %ebx               ;*iinc
                                                ; - java.lang.String::equals@50 (line 987)

  0x000000010f8363d1: cmp    $0xffffffff,%ebx
  0x000000010f8363d4: jne    0x000000010f8363a8  ;*iconst_1
                                                ; - java.lang.String::equals@77 (line 992)

  0x000000010f8363d6: mov    $0x1,%eax
  0x000000010f8363db: jmpq   0x000000010f836256  ;*iconst_0
                                                ; - java.lang.String::equals@79 (line 995)

  0x000000010f8363e0: xor    %eax,%eax
  0x000000010f8363e2: jmpq   0x000000010f836256
  0x000000010f8363e7: vmovd  %xmm1,%eax
  0x000000010f8363eb: jmpq   0x000000010f836256
  0x000000010f8363f0: vmovd  %xmm0,%edi
  0x000000010f8363f4: mov    $0xffffffe4,%esi
  0x000000010f8363f9: mov    %ebx,%ebp
  0x000000010f8363fb: vmovss %xmm3,0x4(%rsp)
  0x000000010f836401: mov    %edi,0xc(%rsp)
  0x000000010f836405: mov    %edx,0x10(%rsp)
  0x000000010f836409: xchg   %ax,%ax
  0x000000010f83640b: callq  0x000000010f7166a0  ; OopMap{[4]=NarrowOop [12]=NarrowOop off=496}
                                                ;*caload
                                                ; - java.lang.String::equals@60 (line 988)
                                                ;   {runtime_call}
  0x000000010f836410: callq  0x000000010948a904  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)
                                                ;   {runtime_call}
  0x000000010f836415: mov    $0xffffffe4,%esi
  0x000000010f83641a: mov    %ebx,(%rsp)
  0x000000010f83641d: vmovss %xmm0,0x4(%rsp)
  0x000000010f836423: vmovss %xmm3,0x10(%rsp)
  0x000000010f836429: mov    %edx,0x14(%rsp)
  0x000000010f83642d: xchg   %ax,%ax
  0x000000010f83642f: callq  0x000000010f7166a0  ; OopMap{[4]=NarrowOop [16]=NarrowOop off=532}
                                                ;*caload
                                                ; - java.lang.String::equals@65 (line 988)
                                                ;   {runtime_call}
  0x000000010f836434: callq  0x000000010948a904  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)
                                                ;   {runtime_call}
  0x000000010f836439: mov    %rsi,%rbp
  0x000000010f83643c: mov    %rdx,0x8(%rsp)
  0x000000010f836441: mov    $0xffffffde,%esi
  0x000000010f836446: nop
  0x000000010f836447: callq  0x000000010f7166a0  ; OopMap{rbp=Oop [8]=Oop off=556}
                                                ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)
                                                ;   {runtime_call}
  0x000000010f83644c: callq  0x000000010948a904  ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)
                                                ;   {runtime_call}
  0x000000010f836451: mov    $0xfffffff6,%esi
  0x000000010f836456: nop
  0x000000010f836457: callq  0x000000010f7166a0  ; OopMap{off=572}
                                                ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)
                                                ;   {runtime_call}
  0x000000010f83645c: callq  0x000000010948a904  ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)
                                                ;   {runtime_call}
  0x000000010f836461: mov    $0xfffffff6,%esi
  0x000000010f836466: nop
  0x000000010f836467: callq  0x000000010f7166a0  ; OopMap{off=588}
                                                ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ;   {runtime_call}
  0x000000010f83646c: callq  0x000000010948a904  ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ;   {runtime_call}
  0x000000010f836471: hlt    
  0x000000010f836472: hlt    
  0x000000010f836473: hlt    
  0x000000010f836474: hlt    
  0x000000010f836475: hlt    
  0x000000010f836476: hlt    
  0x000000010f836477: hlt    
  0x000000010f836478: hlt    
  0x000000010f836479: hlt    
  0x000000010f83647a: hlt    
  0x000000010f83647b: hlt    
  0x000000010f83647c: hlt    
  0x000000010f83647d: hlt    
  0x000000010f83647e: hlt    
  0x000000010f83647f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f836480: jmpq   0x000000010f73fba0  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010f836485: callq  0x000000010f83648a
  0x000000010f83648a: subq   $0x5,(%rsp)
  0x000000010f83648f: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f836494: hlt    
  0x000000010f836495: hlt    
  0x000000010f836496: hlt    
  0x000000010f836497: hlt    
Decoding compiled method 0x000000010f834990:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010eace770} 'checkPtypes' '([Ljava/lang/Class;)I' in 'java/lang/invoke/MethodType'
  # parm0:    rsi:rsi   = '[Ljava/lang/Class;'
  #           [sp+0xd0]  (sp of caller)
  0x000000010f834be0: mov    %eax,-0x14000(%rsp)
  0x000000010f834be7: push   %rbp
  0x000000010f834be8: sub    $0xc0,%rsp
  0x000000010f834bef: mov    %rsi,0x90(%rsp)
  0x000000010f834bf7: movabs $0x10edc7e70,%rax  ;   {metadata(method data for {method} {0x000000010eace770} 'checkPtypes' '([Ljava/lang/Class;)I' in 'java/lang/invoke/MethodType')}
  0x000000010f834c01: mov    0xdc(%rax),%edx
  0x000000010f834c07: add    $0x8,%edx
  0x000000010f834c0a: mov    %edx,0xdc(%rax)
  0x000000010f834c10: movabs $0x10eace770,%rax  ;   {metadata({method} {0x000000010eace770} 'checkPtypes' '([Ljava/lang/Class;)I' in 'java/lang/invoke/MethodType')}
  0x000000010f834c1a: and    $0x1ff8,%edx
  0x000000010f834c20: cmp    $0x0,%edx
  0x000000010f834c23: je     0x000000010f835609  ;*iconst_0
                                                ; - java.lang.invoke.MethodType::checkPtypes@0 (line 171)

  0x000000010f834c29: mov    0xc(%rsi),%ebx     ;*arraylength
                                                ; - java.lang.invoke.MethodType::checkPtypes@5 (line 172)
                                                ; implicit exception: dispatches to 0x000000010f835620
  0x000000010f834c2c: mov    %ebx,0x98(%rsp)
  0x000000010f834c33: mov    $0x0,%r8d
  0x000000010f834c39: mov    $0x0,%r9d          ;*iload
                                                ; - java.lang.invoke.MethodType::checkPtypes@10 (line 172)

  0x000000010f834c3f: nop
  0x000000010f834c40: cmp    %ebx,%r8d
  0x000000010f834c43: movabs $0x10edc7e70,%rax  ;   {metadata(method data for {method} {0x000000010eace770} 'checkPtypes' '([Ljava/lang/Class;)I' in 'java/lang/invoke/MethodType')}
  0x000000010f834c4d: movabs $0x108,%rdx
  0x000000010f834c57: jge    0x000000010f834c67
  0x000000010f834c5d: movabs $0x118,%rdx
  0x000000010f834c67: mov    (%rax,%rdx,1),%rdi
  0x000000010f834c6b: lea    0x1(%rdi),%rdi
  0x000000010f834c6f: mov    %rdi,(%rax,%rdx,1)
  0x000000010f834c73: jge    0x000000010f834e6b  ;*if_icmpge
                                                ; - java.lang.invoke.MethodType::checkPtypes@13 (line 172)

  0x000000010f834c79: movslq %r8d,%rax
  0x000000010f834c7c: mov    0x10(%rsi,%rax,4),%r11d
  0x000000010f834c81: shl    $0x3,%r11          ;*aaload
                                                ; - java.lang.invoke.MethodType::checkPtypes@19 (line 172)

  0x000000010f834c85: mov    %r11,0xa0(%rsp)
  0x000000010f834c8d: movabs $0x10edc7e70,%rax  ;   {metadata(method data for {method} {0x000000010eace770} 'checkPtypes' '([Ljava/lang/Class;)I' in 'java/lang/invoke/MethodType')}
  0x000000010f834c97: addq   $0x1,0x128(%rax)
  0x000000010f834c9f: movabs $0x10eda5568,%rax  ;   {metadata(method data for {method} {0x000000010eace698} 'checkPtype' '(Ljava/lang/Class;)V' in 'java/lang/invoke/MethodType')}
  0x000000010f834ca9: mov    0xdc(%rax),%edx
  0x000000010f834caf: add    $0x8,%edx
  0x000000010f834cb2: mov    %edx,0xdc(%rax)
  0x000000010f834cb8: movabs $0x10eace698,%rax  ;   {metadata({method} {0x000000010eace698} 'checkPtype' '(Ljava/lang/Class;)V' in 'java/lang/invoke/MethodType')}
  0x000000010f834cc2: and    $0x7ffff8,%edx
  0x000000010f834cc8: cmp    $0x0,%edx
  0x000000010f834ccb: je     0x000000010f835625
  0x000000010f834cd1: movabs $0x10eda5568,%rax  ;   {metadata(method data for {method} {0x000000010eace698} 'checkPtype' '(Ljava/lang/Class;)V' in 'java/lang/invoke/MethodType')}
  0x000000010f834cdb: addq   $0x1,0x108(%rax)
  0x000000010f834ce3: movabs $0x10eda3d60,%rax  ;   {metadata(method data for {method} {0x000000010eb97a68} 'requireNonNull' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/Objects')}
  0x000000010f834ced: mov    0xdc(%rax),%edx
  0x000000010f834cf3: add    $0x8,%edx
  0x000000010f834cf6: mov    %edx,0xdc(%rax)
  0x000000010f834cfc: movabs $0x10eb97a68,%rax  ;   {metadata({method} {0x000000010eb97a68} 'requireNonNull' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/Objects')}
  0x000000010f834d06: and    $0x7ffff8,%edx
  0x000000010f834d0c: cmp    $0x0,%edx
  0x000000010f834d0f: je     0x000000010f83563c
  0x000000010f834d15: cmp    $0x0,%r11
  0x000000010f834d19: movabs $0x10eda3d60,%rax  ;   {metadata(method data for {method} {0x000000010eb97a68} 'requireNonNull' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/Objects')}
  0x000000010f834d23: movabs $0x108,%rdx
  0x000000010f834d2d: jne    0x000000010f834d3d
  0x000000010f834d33: movabs $0x118,%rdx
  0x000000010f834d3d: mov    (%rax,%rdx,1),%rdi
  0x000000010f834d41: lea    0x1(%rdi),%rdi
  0x000000010f834d45: mov    %rdi,(%rax,%rdx,1)
  0x000000010f834d49: je     0x000000010f835581  ;*ifnonnull
                                                ; - java.util.Objects::requireNonNull@1 (line 202)
                                                ; - java.lang.invoke.MethodType::checkPtype@1 (line 165)
                                                ; - java.lang.invoke.MethodType::checkPtypes@24 (line 173)

  0x000000010f834d4f: movabs $0x795580350,%r10  ;   {oop(a 'java/lang/Class' = void)}
  0x000000010f834d59: cmp    %r10,%r11
  0x000000010f834d5c: movabs $0x10eda5568,%rax  ;   {metadata(method data for {method} {0x000000010eace698} 'checkPtype' '(Ljava/lang/Class;)V' in 'java/lang/invoke/MethodType')}
  0x000000010f834d66: movabs $0x118,%rdx
  0x000000010f834d70: jne    0x000000010f834d80
  0x000000010f834d76: movabs $0x128,%rdx
  0x000000010f834d80: mov    (%rax,%rdx,1),%rdi
  0x000000010f834d84: lea    0x1(%rdi),%rdi
  0x000000010f834d88: mov    %rdi,(%rax,%rdx,1)
  0x000000010f834d8c: je     0x000000010f8354a9  ;*if_acmpne
                                                ; - java.lang.invoke.MethodType::checkPtype@9 (line 166)
                                                ; - java.lang.invoke.MethodType::checkPtypes@24 (line 173)

  0x000000010f834d92: movabs $0x7955800e0,%r10  ;   {oop(a 'java/lang/Class' = double)}
  0x000000010f834d9c: cmp    %r10,%r11
  0x000000010f834d9f: movabs $0x10edc7e70,%rax  ;   {metadata(method data for {method} {0x000000010eace770} 'checkPtypes' '([Ljava/lang/Class;)I' in 'java/lang/invoke/MethodType')}
  0x000000010f834da9: movabs $0x138,%rdx
  0x000000010f834db3: je     0x000000010f834dc3
  0x000000010f834db9: movabs $0x148,%rdx
  0x000000010f834dc3: mov    (%rax,%rdx,1),%rdi
  0x000000010f834dc7: lea    0x1(%rdi),%rdi
  0x000000010f834dcb: mov    %rdi,(%rax,%rdx,1)
  0x000000010f834dcf: je     0x000000010f834e18  ;*if_acmpeq
                                                ; - java.lang.invoke.MethodType::checkPtypes@32 (line 174)

  0x000000010f834dd5: movabs $0x795580280,%r10  ;   {oop(a 'java/lang/Class' = long)}
  0x000000010f834ddf: cmp    %r10,%r11
  0x000000010f834de2: movabs $0x10edc7e70,%rax  ;   {metadata(method data for {method} {0x000000010eace770} 'checkPtypes' '([Ljava/lang/Class;)I' in 'java/lang/invoke/MethodType')}
  0x000000010f834dec: movabs $0x158,%rdx
  0x000000010f834df6: jne    0x000000010f834e06
  0x000000010f834dfc: movabs $0x168,%rdx
  0x000000010f834e06: mov    (%rax,%rdx,1),%rdi
  0x000000010f834e0a: lea    0x1(%rdi),%rdi
  0x000000010f834e0e: mov    %rdi,(%rax,%rdx,1)
  0x000000010f834e12: jne    0x000000010f834e1b  ;*if_acmpne
                                                ; - java.lang.invoke.MethodType::checkPtypes@40 (line 174)

  0x000000010f834e18: inc    %r9d
  0x000000010f834e1b: inc    %r8d
  0x000000010f834e1e: movabs $0x10edc7e70,%rax  ;   {metadata(method data for {method} {0x000000010eace770} 'checkPtypes' '([Ljava/lang/Class;)I' in 'java/lang/invoke/MethodType')}
  0x000000010f834e28: mov    0xe0(%rax),%edx
  0x000000010f834e2e: add    $0x8,%edx
  0x000000010f834e31: mov    %edx,0xe0(%rax)
  0x000000010f834e37: movabs $0x10eace770,%rax  ;   {metadata({method} {0x000000010eace770} 'checkPtypes' '([Ljava/lang/Class;)I' in 'java/lang/invoke/MethodType')}
  0x000000010f834e41: and    $0xfff8,%edx
  0x000000010f834e47: cmp    $0x0,%edx
  0x000000010f834e4a: je     0x000000010f835653  ; OopMap{rsi=Oop [144]=Oop off=624}
                                                ;*goto
                                                ; - java.lang.invoke.MethodType::checkPtypes@49 (line 172)

  0x000000010f834e50: test   %eax,-0x8d99d56(%rip)        # 0x0000000106a9b100
                                                ;   {poll}
  0x000000010f834e56: movabs $0x10edc7e70,%rax  ;   {metadata(method data for {method} {0x000000010eace770} 'checkPtypes' '([Ljava/lang/Class;)I' in 'java/lang/invoke/MethodType')}
  0x000000010f834e60: incl   0x178(%rax)
  0x000000010f834e66: jmpq   0x000000010f834c40  ;*goto
                                                ; - java.lang.invoke.MethodType::checkPtypes@49 (line 172)

  0x000000010f834e6b: add    %r9d,%ebx
  0x000000010f834e6e: movabs $0x10edc7e70,%rax  ;   {metadata(method data for {method} {0x000000010eace770} 'checkPtypes' '([Ljava/lang/Class;)I' in 'java/lang/invoke/MethodType')}
  0x000000010f834e78: addq   $0x1,0x190(%rax)
  0x000000010f834e80: movabs $0x10edada48,%rax  ;   {metadata(method data for {method} {0x000000010eace820} 'checkSlotCount' '(I)V' in 'java/lang/invoke/MethodType')}
  0x000000010f834e8a: mov    0xdc(%rax),%edx
  0x000000010f834e90: add    $0x8,%edx
  0x000000010f834e93: mov    %edx,0xdc(%rax)
  0x000000010f834e99: movabs $0x10eace820,%rax  ;   {metadata({method} {0x000000010eace820} 'checkSlotCount' '(I)V' in 'java/lang/invoke/MethodType')}
  0x000000010f834ea3: and    $0x7ffff8,%edx
  0x000000010f834ea9: cmp    $0x0,%edx
  0x000000010f834eac: je     0x000000010f83566a
  0x000000010f834eb2: mov    %rbx,%rax
  0x000000010f834eb5: and    $0xff,%eax
  0x000000010f834ebb: cmp    %ebx,%eax
  0x000000010f834ebd: movabs $0x10edada48,%rax  ;   {metadata(method data for {method} {0x000000010eace820} 'checkSlotCount' '(I)V' in 'java/lang/invoke/MethodType')}
  0x000000010f834ec7: movabs $0x108,%rdx
  0x000000010f834ed1: je     0x000000010f834ee1
  0x000000010f834ed7: movabs $0x118,%rdx
  0x000000010f834ee1: mov    (%rax,%rdx,1),%rsi
  0x000000010f834ee5: lea    0x1(%rsi),%rsi
  0x000000010f834ee9: mov    %rsi,(%rax,%rdx,1)
  0x000000010f834eed: jne    0x000000010f834f05  ;*if_icmpeq
                                                ; - java.lang.invoke.MethodType::checkSlotCount@6 (line 184)
                                                ; - java.lang.invoke.MethodType::checkPtypes@56 (line 178)

  0x000000010f834ef3: mov    %r9,%rax
  0x000000010f834ef6: add    $0xc0,%rsp
  0x000000010f834efd: pop    %rbp
  0x000000010f834efe: test   %eax,-0x8d99e04(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f834f04: retq                      ;*ireturn
                                                ; - java.lang.invoke.MethodType::checkPtypes@60 (line 179)

  0x000000010f834f05: mov    %ebx,0x70(%rsp)
  0x000000010f834f09: mov    %r9d,0x74(%rsp)
  0x000000010f834f0e: movabs $0x7c000dc88,%rdx  ;   {metadata('java/lang/StringBuilder')}
  0x000000010f834f18: mov    0x60(%r15),%rax
  0x000000010f834f1c: lea    0x18(%rax),%rdi
  0x000000010f834f20: cmp    0x70(%r15),%rdi
  0x000000010f834f24: ja     0x000000010f835681
  0x000000010f834f2a: mov    %rdi,0x60(%r15)
  0x000000010f834f2e: mov    0xa8(%rdx),%rcx
  0x000000010f834f35: mov    %rcx,(%rax)
  0x000000010f834f38: mov    %rdx,%rcx
  0x000000010f834f3b: shr    $0x3,%rcx
  0x000000010f834f3f: mov    %ecx,0x8(%rax)
  0x000000010f834f42: xor    %rcx,%rcx
  0x000000010f834f45: mov    %ecx,0xc(%rax)
  0x000000010f834f48: xor    %rcx,%rcx
  0x000000010f834f4b: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.invoke.MethodType::checkSlotCount@9 (line 185)
                                                ; - java.lang.invoke.MethodType::checkPtypes@56 (line 178)

  0x000000010f834f4f: mov    %rax,%rdx
  0x000000010f834f52: movabs $0x10edada48,%rsi  ;   {metadata(method data for {method} {0x000000010eace820} 'checkSlotCount' '(I)V' in 'java/lang/invoke/MethodType')}
  0x000000010f834f5c: addq   $0x1,0x128(%rsi)
  0x000000010f834f64: movabs $0x10ed0ae70,%rdx  ;   {metadata(method data for {method} {0x000000010eaddf30} '<init>' '()V' in 'java/lang/StringBuilder')}
  0x000000010f834f6e: mov    0xdc(%rdx),%esi
  0x000000010f834f74: add    $0x8,%esi
  0x000000010f834f77: mov    %esi,0xdc(%rdx)
  0x000000010f834f7d: movabs $0x10eaddf30,%rdx  ;   {metadata({method} {0x000000010eaddf30} '<init>' '()V' in 'java/lang/StringBuilder')}
  0x000000010f834f87: and    $0x7ffff8,%esi
  0x000000010f834f8d: cmp    $0x0,%esi
  0x000000010f834f90: je     0x000000010f83568e
  0x000000010f834f96: mov    %rax,%rdx
  0x000000010f834f99: movabs $0x10ed0ae70,%rsi  ;   {metadata(method data for {method} {0x000000010eaddf30} '<init>' '()V' in 'java/lang/StringBuilder')}
  0x000000010f834fa3: addq   $0x1,0x108(%rsi)
  0x000000010f834fab: movabs $0x10ec9a3e8,%rdx  ;   {metadata(method data for {method} {0x000000010eada260} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f834fb5: mov    0xdc(%rdx),%esi
  0x000000010f834fbb: add    $0x8,%esi
  0x000000010f834fbe: mov    %esi,0xdc(%rdx)
  0x000000010f834fc4: movabs $0x10eada260,%rdx  ;   {metadata({method} {0x000000010eada260} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f834fce: and    $0x7ffff8,%esi
  0x000000010f834fd4: cmp    $0x0,%esi
  0x000000010f834fd7: je     0x000000010f8356a5
  0x000000010f834fdd: mov    %rax,%rdx
  0x000000010f834fe0: movabs $0x10ec9a3e8,%rsi  ;   {metadata(method data for {method} {0x000000010eada260} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f834fea: addq   $0x1,0x108(%rsi)
  0x000000010f834ff2: movabs $0x10ebdca10,%rdx  ;   {metadata(method data for {method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f834ffc: mov    0xdc(%rdx),%esi
  0x000000010f835002: add    $0x8,%esi
  0x000000010f835005: mov    %esi,0xdc(%rdx)
  0x000000010f83500b: movabs $0x10ea65480,%rdx  ;   {metadata({method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f835015: and    $0x7ffff8,%esi
  0x000000010f83501b: cmp    $0x0,%esi
  0x000000010f83501e: je     0x000000010f8356bc
  0x000000010f835024: mov    $0x10,%ebx
  0x000000010f835029: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000000010f835033: mov    %rax,%r11
  0x000000010f835036: movslq %ebx,%rbx
  0x000000010f835039: mov    %rbx,%rdi
  0x000000010f83503c: cmp    $0xffffff,%rbx
  0x000000010f835043: ja     0x000000010f8356d3
  0x000000010f835049: movabs $0x17,%rsi
  0x000000010f835053: lea    (%rsi,%rbx,2),%rsi
  0x000000010f835057: and    $0xfffffffffffffff8,%rsi
  0x000000010f83505b: mov    0x60(%r15),%rax
  0x000000010f83505f: lea    (%rax,%rsi,1),%rsi
  0x000000010f835063: cmp    0x70(%r15),%rsi
  0x000000010f835067: ja     0x000000010f8356d3
  0x000000010f83506d: mov    %rsi,0x60(%r15)
  0x000000010f835071: sub    %rax,%rsi
  0x000000010f835074: movq   $0x1,(%rax)
  0x000000010f83507b: mov    %rdx,%rcx
  0x000000010f83507e: shr    $0x3,%rcx
  0x000000010f835082: mov    %ecx,0x8(%rax)
  0x000000010f835085: mov    %ebx,0xc(%rax)
  0x000000010f835088: sub    $0x10,%rsi
  0x000000010f83508c: je     0x000000010f8350a3
  0x000000010f835092: xor    %rbx,%rbx
  0x000000010f835095: shr    $0x3,%rsi
  0x000000010f835099: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000010f83509e: dec    %rsi
  0x000000010f8350a1: jne    0x000000010f835099  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::<init>@6 (line 68)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@13 (line 185)
                                                ; - java.lang.invoke.MethodType::checkPtypes@56 (line 178)

  0x000000010f8350a3: mov    %rax,%r10
  0x000000010f8350a6: shr    $0x3,%r10
  0x000000010f8350aa: mov    %r10d,0x10(%r11)
  0x000000010f8350ae: mov    %r11,%rax
  0x000000010f8350b1: shr    $0x9,%rax
  0x000000010f8350b5: movabs $0x1065b9000,%rdx
  0x000000010f8350bf: movb   $0x0,(%rax,%rdx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::<init>@8 (line 68)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@13 (line 185)
                                                ; - java.lang.invoke.MethodType::checkPtypes@56 (line 178)

  0x000000010f8350c3: mov    %r11,%rax
  0x000000010f8350c6: movabs $0x10edada48,%rdx  ;   {metadata(method data for {method} {0x000000010eace820} 'checkSlotCount' '(I)V' in 'java/lang/invoke/MethodType')}
  0x000000010f8350d0: mov    0x8(%rax),%eax
  0x000000010f8350d3: shl    $0x3,%rax
  0x000000010f8350d7: cmp    0x140(%rdx),%rax
  0x000000010f8350de: jne    0x000000010f8350ed
  0x000000010f8350e0: addq   $0x1,0x148(%rdx)
  0x000000010f8350e8: jmpq   0x000000010f835153
  0x000000010f8350ed: cmp    0x150(%rdx),%rax
  0x000000010f8350f4: jne    0x000000010f835103
  0x000000010f8350f6: addq   $0x1,0x158(%rdx)
  0x000000010f8350fe: jmpq   0x000000010f835153
  0x000000010f835103: cmpq   $0x0,0x140(%rdx)
  0x000000010f83510e: jne    0x000000010f835127
  0x000000010f835110: mov    %rax,0x140(%rdx)
  0x000000010f835117: movq   $0x1,0x148(%rdx)
  0x000000010f835122: jmpq   0x000000010f835153
  0x000000010f835127: cmpq   $0x0,0x150(%rdx)
  0x000000010f835132: jne    0x000000010f83514b
  0x000000010f835134: mov    %rax,0x150(%rdx)
  0x000000010f83513b: movq   $0x1,0x158(%rdx)
  0x000000010f835146: jmpq   0x000000010f835153
  0x000000010f83514b: addq   $0x1,0x138(%rdx)
  0x000000010f835153: movabs $0x10ec81440,%rdx  ;   {metadata(method data for {method} {0x000000010eade248} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f83515d: mov    0xdc(%rdx),%esi
  0x000000010f835163: add    $0x8,%esi
  0x000000010f835166: mov    %esi,0xdc(%rdx)
  0x000000010f83516c: movabs $0x10eade248,%rdx  ;   {metadata({method} {0x000000010eade248} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f835176: and    $0x7ffff8,%esi
  0x000000010f83517c: cmp    $0x0,%esi
  0x000000010f83517f: je     0x000000010f8356dd
  0x000000010f835185: mov    %r11,%rax
  0x000000010f835188: movabs $0x10ec81440,%rdx  ;   {metadata(method data for {method} {0x000000010eade248} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f835192: addq   $0x1,0x108(%rdx)
  0x000000010f83519a: movabs $0x795968e60,%rdx  ;   {oop("bad parameter count ")}
  0x000000010f8351a4: mov    %r11,%rsi          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@18 (line 185)
                                                ; - java.lang.invoke.MethodType::checkPtypes@56 (line 178)

  0x000000010f8351a7: mov    %r11,0x68(%rsp)
  0x000000010f8351ac: nop
  0x000000010f8351ad: nop
  0x000000010f8351ae: nop
  0x000000010f8351af: callq  0x000000010f7170a0  ; OopMap{[104]=Oop off=1492}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@18 (line 185)
                                                ; - java.lang.invoke.MethodType::checkPtypes@56 (line 178)
                                                ;   {optimized virtual_call}
  0x000000010f8351b4: mov    0x68(%rsp),%rax
  0x000000010f8351b9: movabs $0x10edada48,%rdx  ;   {metadata(method data for {method} {0x000000010eace820} 'checkSlotCount' '(I)V' in 'java/lang/invoke/MethodType')}
  0x000000010f8351c3: mov    0x8(%rax),%eax
  0x000000010f8351c6: shl    $0x3,%rax
  0x000000010f8351ca: cmp    0x170(%rdx),%rax
  0x000000010f8351d1: jne    0x000000010f8351e0
  0x000000010f8351d3: addq   $0x1,0x178(%rdx)
  0x000000010f8351db: jmpq   0x000000010f835246
  0x000000010f8351e0: cmp    0x180(%rdx),%rax
  0x000000010f8351e7: jne    0x000000010f8351f6
  0x000000010f8351e9: addq   $0x1,0x188(%rdx)
  0x000000010f8351f1: jmpq   0x000000010f835246
  0x000000010f8351f6: cmpq   $0x0,0x170(%rdx)
  0x000000010f835201: jne    0x000000010f83521a
  0x000000010f835203: mov    %rax,0x170(%rdx)
  0x000000010f83520a: movq   $0x1,0x178(%rdx)
  0x000000010f835215: jmpq   0x000000010f835246
  0x000000010f83521a: cmpq   $0x0,0x180(%rdx)
  0x000000010f835225: jne    0x000000010f83523e
  0x000000010f835227: mov    %rax,0x180(%rdx)
  0x000000010f83522e: movq   $0x1,0x188(%rdx)
  0x000000010f835239: jmpq   0x000000010f835246
  0x000000010f83523e: addq   $0x1,0x168(%rdx)
  0x000000010f835246: movabs $0x10ed0b000,%rdx  ;   {metadata(method data for {method} {0x000000010eade708} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f835250: mov    0xdc(%rdx),%esi
  0x000000010f835256: add    $0x8,%esi
  0x000000010f835259: mov    %esi,0xdc(%rdx)
  0x000000010f83525f: movabs $0x10eade708,%rdx  ;   {metadata({method} {0x000000010eade708} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f835269: and    $0x7ffff8,%esi
  0x000000010f83526f: cmp    $0x0,%esi
  0x000000010f835272: je     0x000000010f8356f4
  0x000000010f835278: mov    0x68(%rsp),%rax
  0x000000010f83527d: movabs $0x10ed0b000,%rdx  ;   {metadata(method data for {method} {0x000000010eade708} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f835287: addq   $0x1,0x108(%rdx)
  0x000000010f83528f: mov    0x70(%rsp),%edx
  0x000000010f835293: mov    0x68(%rsp),%rsi    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@22 (line 185)
                                                ; - java.lang.invoke.MethodType::checkPtypes@56 (line 178)

  0x000000010f835298: nop
  0x000000010f835299: nop
  0x000000010f83529a: nop
  0x000000010f83529b: nop
  0x000000010f83529c: nop
  0x000000010f83529d: nop
  0x000000010f83529e: nop
  0x000000010f83529f: callq  0x000000010f7170a0  ; OopMap{[104]=Oop off=1732}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@22 (line 185)
                                                ; - java.lang.invoke.MethodType::checkPtypes@56 (line 178)
                                                ;   {optimized virtual_call}
  0x000000010f8352a4: mov    0x68(%rsp),%rax
  0x000000010f8352a9: movabs $0x10edada48,%rdx  ;   {metadata(method data for {method} {0x000000010eace820} 'checkSlotCount' '(I)V' in 'java/lang/invoke/MethodType')}
  0x000000010f8352b3: mov    0x8(%rax),%eax
  0x000000010f8352b6: shl    $0x3,%rax
  0x000000010f8352ba: cmp    0x1a0(%rdx),%rax
  0x000000010f8352c1: jne    0x000000010f8352d0
  0x000000010f8352c3: addq   $0x1,0x1a8(%rdx)
  0x000000010f8352cb: jmpq   0x000000010f835336
  0x000000010f8352d0: cmp    0x1b0(%rdx),%rax
  0x000000010f8352d7: jne    0x000000010f8352e6
  0x000000010f8352d9: addq   $0x1,0x1b8(%rdx)
  0x000000010f8352e1: jmpq   0x000000010f835336
  0x000000010f8352e6: cmpq   $0x0,0x1a0(%rdx)
  0x000000010f8352f1: jne    0x000000010f83530a
  0x000000010f8352f3: mov    %rax,0x1a0(%rdx)
  0x000000010f8352fa: movq   $0x1,0x1a8(%rdx)
  0x000000010f835305: jmpq   0x000000010f835336
  0x000000010f83530a: cmpq   $0x0,0x1b0(%rdx)
  0x000000010f835315: jne    0x000000010f83532e
  0x000000010f835317: mov    %rax,0x1b0(%rdx)
  0x000000010f83531e: movq   $0x1,0x1b8(%rdx)
  0x000000010f835329: jmpq   0x000000010f835336
  0x000000010f83532e: addq   $0x1,0x198(%rdx)
  0x000000010f835336: movabs $0x10ed00b80,%rdx  ;   {metadata(method data for {method} {0x000000010eadf5f8} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder')}
  0x000000010f835340: mov    0xdc(%rdx),%esi
  0x000000010f835346: add    $0x8,%esi
  0x000000010f835349: mov    %esi,0xdc(%rdx)
  0x000000010f83534f: movabs $0x10eadf5f8,%rdx  ;   {metadata({method} {0x000000010eadf5f8} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder')}
  0x000000010f835359: and    $0x7ffff8,%esi
  0x000000010f83535f: cmp    $0x0,%esi
  0x000000010f835362: je     0x000000010f83570b
  0x000000010f835368: movabs $0x7c00016d0,%rdx  ;   {metadata('java/lang/String')}
  0x000000010f835372: mov    0x60(%r15),%rax
  0x000000010f835376: lea    0x18(%rax),%rdi
  0x000000010f83537a: cmp    0x70(%r15),%rdi
  0x000000010f83537e: ja     0x000000010f835722
  0x000000010f835384: mov    %rdi,0x60(%r15)
  0x000000010f835388: mov    0xa8(%rdx),%rcx
  0x000000010f83538f: mov    %rcx,(%rax)
  0x000000010f835392: mov    %rdx,%rcx
  0x000000010f835395: shr    $0x3,%rcx
  0x000000010f835399: mov    %ecx,0x8(%rax)
  0x000000010f83539c: xor    %rcx,%rcx
  0x000000010f83539f: mov    %ecx,0xc(%rax)
  0x000000010f8353a2: xor    %rcx,%rcx
  0x000000010f8353a5: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@25 (line 185)
                                                ; - java.lang.invoke.MethodType::checkPtypes@56 (line 178)

  0x000000010f8353a9: mov    0x68(%rsp),%rdx
  0x000000010f8353ae: mov    0x10(%rdx),%ecx
  0x000000010f8353b1: shl    $0x3,%rcx          ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 407)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@25 (line 185)
                                                ; - java.lang.invoke.MethodType::checkPtypes@56 (line 178)

  0x000000010f8353b5: mov    0xc(%rdx),%r8d     ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 407)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@25 (line 185)
                                                ; - java.lang.invoke.MethodType::checkPtypes@56 (line 178)

  0x000000010f8353b9: mov    %rax,%rdx
  0x000000010f8353bc: movabs $0x10ed00b80,%rsi  ;   {metadata(method data for {method} {0x000000010eadf5f8} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder')}
  0x000000010f8353c6: addq   $0x1,0x108(%rsi)
  0x000000010f8353ce: mov    %rcx,%rdx
  0x000000010f8353d1: mov    $0x0,%ecx
  0x000000010f8353d6: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@25 (line 185)
                                                ; - java.lang.invoke.MethodType::checkPtypes@56 (line 178)

  0x000000010f8353d9: mov    %rax,0x78(%rsp)
  0x000000010f8353de: nop
  0x000000010f8353df: callq  0x000000010f7170a0  ; OopMap{[120]=Oop off=2052}
                                                ;*invokespecial <init>
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@25 (line 185)
                                                ; - java.lang.invoke.MethodType::checkPtypes@56 (line 178)
                                                ;   {optimized virtual_call}
  0x000000010f8353e4: movabs $0x10edada48,%rdx  ;   {metadata(method data for {method} {0x000000010eace820} 'checkSlotCount' '(I)V' in 'java/lang/invoke/MethodType')}
  0x000000010f8353ee: addq   $0x1,0x1c8(%rdx)
  0x000000010f8353f6: movabs $0x10eda56f0,%rdx  ;   {metadata(method data for {method} {0x000000010ecd9338} 'newIllegalArgumentException' '(Ljava/lang/String;)Ljava/lang/RuntimeException;' in 'java/lang/invoke/MethodHandleStatics')}
  0x000000010f835400: mov    0xdc(%rdx),%esi
  0x000000010f835406: add    $0x8,%esi
  0x000000010f835409: mov    %esi,0xdc(%rdx)
  0x000000010f83540f: movabs $0x10ecd9338,%rdx  ;   {metadata({method} {0x000000010ecd9338} 'newIllegalArgumentException' '(Ljava/lang/String;)Ljava/lang/RuntimeException;' in 'java/lang/invoke/MethodHandleStatics')}
  0x000000010f835419: and    $0x7ffff8,%esi
  0x000000010f83541f: cmp    $0x0,%esi
  0x000000010f835422: je     0x000000010f83572f
  0x000000010f835428: jmpq   0x000000010f835755  ;   {no_reloc}
  0x000000010f83542d: add    %al,(%rax)
  0x000000010f83542f: add    %al,(%rax)
  0x000000010f835431: add    %cl,-0x75(%rcx)
  0x000000010f835434: rex.RXB (bad) 
  0x000000010f835436: lea    0x20(%rax),%rdi
  0x000000010f83543a: cmp    0x70(%r15),%rdi
  0x000000010f83543e: ja     0x000000010f83575f
  0x000000010f835444: mov    %rdi,0x60(%r15)
  0x000000010f835448: mov    0xa8(%rdx),%rcx
  0x000000010f83544f: mov    %rcx,(%rax)
  0x000000010f835452: mov    %rdx,%rcx
  0x000000010f835455: shr    $0x3,%rcx
  0x000000010f835459: mov    %ecx,0x8(%rax)
  0x000000010f83545c: xor    %rcx,%rcx
  0x000000010f83545f: mov    %ecx,0xc(%rax)
  0x000000010f835462: xor    %rcx,%rcx
  0x000000010f835465: mov    %rcx,0x10(%rax)
  0x000000010f835469: mov    %rcx,0x18(%rax)    ;*new  ; - java.lang.invoke.MethodHandleStatics::newIllegalArgumentException@0 (line 139)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@28 (line 185)
                                                ; - java.lang.invoke.MethodType::checkPtypes@56 (line 178)

  0x000000010f83546d: mov    %rax,%rdx
  0x000000010f835470: movabs $0x10eda56f0,%rsi  ;   {metadata(method data for {method} {0x000000010ecd9338} 'newIllegalArgumentException' '(Ljava/lang/String;)Ljava/lang/RuntimeException;' in 'java/lang/invoke/MethodHandleStatics')}
  0x000000010f83547a: addq   $0x1,0x108(%rsi)
  0x000000010f835482: mov    0x78(%rsp),%rdx
  0x000000010f835487: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.invoke.MethodHandleStatics::newIllegalArgumentException@5 (line 139)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@28 (line 185)
                                                ; - java.lang.invoke.MethodType::checkPtypes@56 (line 178)

  0x000000010f83548a: mov    %rax,0x80(%rsp)
  0x000000010f835492: nop
  0x000000010f835493: nop
  0x000000010f835494: nop
  0x000000010f835495: nop
  0x000000010f835496: nop
  0x000000010f835497: callq  0x000000010f7170a0  ; OopMap{[128]=Oop off=2236}
                                                ;*invokespecial <init>
                                                ; - java.lang.invoke.MethodHandleStatics::newIllegalArgumentException@5 (line 139)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@28 (line 185)
                                                ; - java.lang.invoke.MethodType::checkPtypes@56 (line 178)
                                                ;   {optimized virtual_call}
  0x000000010f83549c: mov    0x80(%rsp),%rax
  0x000000010f8354a4: jmpq   0x000000010f8357fa  ;*athrow
                                                ; - java.lang.invoke.MethodType::checkSlotCount@31 (line 185)
                                                ; - java.lang.invoke.MethodType::checkPtypes@56 (line 178)

  0x000000010f8354a9: mov    %r8d,0x9c(%rsp)
  0x000000010f8354b1: mov    %r9d,0x74(%rsp)
  0x000000010f8354b6: movabs $0x10eda5568,%rdx  ;   {metadata(method data for {method} {0x000000010eace698} 'checkPtype' '(Ljava/lang/Class;)V' in 'java/lang/invoke/MethodType')}
  0x000000010f8354c0: addq   $0x1,0x138(%rdx)
  0x000000010f8354c8: movabs $0x10eda56f0,%rdx  ;   {metadata(method data for {method} {0x000000010ecd9338} 'newIllegalArgumentException' '(Ljava/lang/String;)Ljava/lang/RuntimeException;' in 'java/lang/invoke/MethodHandleStatics')}
  0x000000010f8354d2: mov    0xdc(%rdx),%edi
  0x000000010f8354d8: add    $0x8,%edi
  0x000000010f8354db: mov    %edi,0xdc(%rdx)
  0x000000010f8354e1: movabs $0x10ecd9338,%rdx  ;   {metadata({method} {0x000000010ecd9338} 'newIllegalArgumentException' '(Ljava/lang/String;)Ljava/lang/RuntimeException;' in 'java/lang/invoke/MethodHandleStatics')}
  0x000000010f8354eb: and    $0x7ffff8,%edi
  0x000000010f8354f1: cmp    $0x0,%edi
  0x000000010f8354f4: je     0x000000010f83576c
  0x000000010f8354fa: nopw   0x0(%rax,%rax,1)
  0x000000010f835500: jmpq   0x000000010f835792  ;   {no_reloc}
  0x000000010f835505: add    %al,(%rax)
  0x000000010f835507: add    %al,(%rax)
  0x000000010f835509: add    %cl,-0x75(%rcx)
  0x000000010f83550c: rex.RXB (bad) 
  0x000000010f83550e: lea    0x20(%rax),%rdi
  0x000000010f835512: cmp    0x70(%r15),%rdi
  0x000000010f835516: ja     0x000000010f83579c
  0x000000010f83551c: mov    %rdi,0x60(%r15)
  0x000000010f835520: mov    0xa8(%rdx),%rcx
  0x000000010f835527: mov    %rcx,(%rax)
  0x000000010f83552a: mov    %rdx,%rcx
  0x000000010f83552d: shr    $0x3,%rcx
  0x000000010f835531: mov    %ecx,0x8(%rax)
  0x000000010f835534: xor    %rcx,%rcx
  0x000000010f835537: mov    %ecx,0xc(%rax)
  0x000000010f83553a: xor    %rcx,%rcx
  0x000000010f83553d: mov    %rcx,0x10(%rax)
  0x000000010f835541: mov    %rcx,0x18(%rax)    ;*new  ; - java.lang.invoke.MethodHandleStatics::newIllegalArgumentException@0 (line 139)
                                                ; - java.lang.invoke.MethodType::checkPtype@14 (line 167)
                                                ; - java.lang.invoke.MethodType::checkPtypes@24 (line 173)

  0x000000010f835545: mov    %rax,%rdx
  0x000000010f835548: movabs $0x10eda56f0,%rsi  ;   {metadata(method data for {method} {0x000000010ecd9338} 'newIllegalArgumentException' '(Ljava/lang/String;)Ljava/lang/RuntimeException;' in 'java/lang/invoke/MethodHandleStatics')}
  0x000000010f835552: addq   $0x1,0x108(%rsi)
  0x000000010f83555a: movabs $0x795968c48,%rdx  ;   {oop("parameter type cannot be void")}
  0x000000010f835564: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.invoke.MethodHandleStatics::newIllegalArgumentException@5 (line 139)
                                                ; - java.lang.invoke.MethodType::checkPtype@14 (line 167)
                                                ; - java.lang.invoke.MethodType::checkPtypes@24 (line 173)

  0x000000010f835567: mov    %rax,0x88(%rsp)
  0x000000010f83556f: callq  0x000000010f7170a0  ; OopMap{[136]=Oop [144]=Oop [160]=Oop off=2452}
                                                ;*invokespecial <init>
                                                ; - java.lang.invoke.MethodHandleStatics::newIllegalArgumentException@5 (line 139)
                                                ; - java.lang.invoke.MethodType::checkPtype@14 (line 167)
                                                ; - java.lang.invoke.MethodType::checkPtypes@24 (line 173)
                                                ;   {optimized virtual_call}
  0x000000010f835574: mov    0x88(%rsp),%rax
  0x000000010f83557c: jmpq   0x000000010f8357fa  ;*athrow
                                                ; - java.lang.invoke.MethodType::checkPtype@17 (line 167)
                                                ; - java.lang.invoke.MethodType::checkPtypes@24 (line 173)

  0x000000010f835581: mov    %r8d,0x9c(%rsp)
  0x000000010f835589: mov    %r9d,0x74(%rsp)
  0x000000010f83558e: xchg   %ax,%ax
  0x000000010f835590: jmpq   0x000000010f8357b8  ;   {no_reloc}
  0x000000010f835595: add    %al,(%rax)
  0x000000010f835597: add    %al,(%rax)
  0x000000010f835599: add    %cl,-0x75(%rcx)
  0x000000010f83559c: rex.RXB (bad) 
  0x000000010f83559e: lea    0x20(%rax),%rdi
  0x000000010f8355a2: cmp    0x70(%r15),%rdi
  0x000000010f8355a6: ja     0x000000010f8357c2
  0x000000010f8355ac: mov    %rdi,0x60(%r15)
  0x000000010f8355b0: mov    0xa8(%rdx),%rcx
  0x000000010f8355b7: mov    %rcx,(%rax)
  0x000000010f8355ba: mov    %rdx,%rcx
  0x000000010f8355bd: shr    $0x3,%rcx
  0x000000010f8355c1: mov    %ecx,0x8(%rax)
  0x000000010f8355c4: xor    %rcx,%rcx
  0x000000010f8355c7: mov    %ecx,0xc(%rax)
  0x000000010f8355ca: xor    %rcx,%rcx
  0x000000010f8355cd: mov    %rcx,0x10(%rax)
  0x000000010f8355d1: mov    %rcx,0x18(%rax)    ;*new  ; - java.util.Objects::requireNonNull@4 (line 203)
                                                ; - java.lang.invoke.MethodType::checkPtype@1 (line 165)
                                                ; - java.lang.invoke.MethodType::checkPtypes@24 (line 173)

  0x000000010f8355d5: mov    %rax,%rsi
  0x000000010f8355d8: movabs $0x10eda3d60,%rdi  ;   {metadata(method data for {method} {0x000000010eb97a68} 'requireNonNull' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/Objects')}
  0x000000010f8355e2: addq   $0x1,0x128(%rdi)
  0x000000010f8355ea: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.util.Objects::requireNonNull@8 (line 203)
                                                ; - java.lang.invoke.MethodType::checkPtype@1 (line 165)
                                                ; - java.lang.invoke.MethodType::checkPtypes@24 (line 173)

  0x000000010f8355ed: mov    %rax,0xa8(%rsp)
  0x000000010f8355f5: nop
  0x000000010f8355f6: nop
  0x000000010f8355f7: callq  0x000000010f7170a0  ; OopMap{[168]=Oop [160]=Oop [144]=Oop off=2588}
                                                ;*invokespecial <init>
                                                ; - java.util.Objects::requireNonNull@8 (line 203)
                                                ; - java.lang.invoke.MethodType::checkPtype@1 (line 165)
                                                ; - java.lang.invoke.MethodType::checkPtypes@24 (line 173)
                                                ;   {optimized virtual_call}
  0x000000010f8355fc: mov    0xa8(%rsp),%rax
  0x000000010f835604: jmpq   0x000000010f8357fa
  0x000000010f835609: mov    %rax,0x8(%rsp)
  0x000000010f83560e: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f835616: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [144]=Oop off=2619}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MethodType::checkPtypes@-1 (line 171)
                                                ;   {runtime_call}
  0x000000010f83561b: jmpq   0x000000010f834c29
  0x000000010f835620: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop [144]=Oop off=2629}
                                                ;*arraylength
                                                ; - java.lang.invoke.MethodType::checkPtypes@5 (line 172)
                                                ;   {runtime_call}
  0x000000010f835625: mov    %rax,0x8(%rsp)
  0x000000010f83562a: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f835632: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [144]=Oop r11=Oop [160]=Oop off=2647}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MethodType::checkPtype@-1 (line 165)
                                                ; - java.lang.invoke.MethodType::checkPtypes@24 (line 173)
                                                ;   {runtime_call}
  0x000000010f835637: jmpq   0x000000010f834cd1
  0x000000010f83563c: mov    %rax,0x8(%rsp)
  0x000000010f835641: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f835649: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [144]=Oop r11=Oop [160]=Oop off=2670}
                                                ;*synchronization entry
                                                ; - java.util.Objects::requireNonNull@-1 (line 202)
                                                ; - java.lang.invoke.MethodType::checkPtype@1 (line 165)
                                                ; - java.lang.invoke.MethodType::checkPtypes@24 (line 173)
                                                ;   {runtime_call}
  0x000000010f83564e: jmpq   0x000000010f834d15
  0x000000010f835653: mov    %rax,0x8(%rsp)
  0x000000010f835658: movq   $0x31,(%rsp)
  0x000000010f835660: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [144]=Oop off=2693}
                                                ;*goto
                                                ; - java.lang.invoke.MethodType::checkPtypes@49 (line 172)
                                                ;   {runtime_call}
  0x000000010f835665: jmpq   0x000000010f834e50
  0x000000010f83566a: mov    %rax,0x8(%rsp)
  0x000000010f83566f: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f835677: callq  0x000000010f7d1a20  ; OopMap{off=2716}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MethodType::checkSlotCount@-1 (line 184)
                                                ; - java.lang.invoke.MethodType::checkPtypes@56 (line 178)
                                                ;   {runtime_call}
  0x000000010f83567c: jmpq   0x000000010f834eb2
  0x000000010f835681: mov    %rdx,%rdx
  0x000000010f835684: callq  0x000000010f7cd820  ; OopMap{off=2729}
                                                ;*new  ; - java.lang.invoke.MethodType::checkSlotCount@9 (line 185)
                                                ; - java.lang.invoke.MethodType::checkPtypes@56 (line 178)
                                                ;   {runtime_call}
  0x000000010f835689: jmpq   0x000000010f834f4f
  0x000000010f83568e: mov    %rdx,0x8(%rsp)
  0x000000010f835693: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f83569b: callq  0x000000010f7d1a20  ; OopMap{rax=Oop off=2752}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::<init>@-1 (line 89)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@13 (line 185)
                                                ; - java.lang.invoke.MethodType::checkPtypes@56 (line 178)
                                                ;   {runtime_call}
  0x000000010f8356a0: jmpq   0x000000010f834f96
  0x000000010f8356a5: mov    %rdx,0x8(%rsp)
  0x000000010f8356aa: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f8356b2: callq  0x000000010f7d1a20  ; OopMap{rax=Oop off=2775}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::<init>@-1 (line 67)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@13 (line 185)
                                                ; - java.lang.invoke.MethodType::checkPtypes@56 (line 178)
                                                ;   {runtime_call}
  0x000000010f8356b7: jmpq   0x000000010f834fdd
  0x000000010f8356bc: mov    %rdx,0x8(%rsp)
  0x000000010f8356c1: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f8356c9: callq  0x000000010f7d1a20  ; OopMap{rax=Oop off=2798}
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::<init>@1 (line 67)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@13 (line 185)
                                                ; - java.lang.invoke.MethodType::checkPtypes@56 (line 178)
                                                ;   {runtime_call}
  0x000000010f8356ce: jmpq   0x000000010f835024
  0x000000010f8356d3: callq  0x000000010f7ce120  ; OopMap{r11=Oop off=2808}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::<init>@6 (line 68)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@13 (line 185)
                                                ; - java.lang.invoke.MethodType::checkPtypes@56 (line 178)
                                                ;   {runtime_call}
  0x000000010f8356d8: jmpq   0x000000010f8350a3
  0x000000010f8356dd: mov    %rdx,0x8(%rsp)
  0x000000010f8356e2: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f8356ea: callq  0x000000010f7d1a20  ; OopMap{r11=Oop off=2831}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@18 (line 185)
                                                ; - java.lang.invoke.MethodType::checkPtypes@56 (line 178)
                                                ;   {runtime_call}
  0x000000010f8356ef: jmpq   0x000000010f835185
  0x000000010f8356f4: mov    %rdx,0x8(%rsp)
  0x000000010f8356f9: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f835701: callq  0x000000010f7d1a20  ; OopMap{[104]=Oop off=2854}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@22 (line 185)
                                                ; - java.lang.invoke.MethodType::checkPtypes@56 (line 178)
                                                ;   {runtime_call}
  0x000000010f835706: jmpq   0x000000010f835278
  0x000000010f83570b: mov    %rdx,0x8(%rsp)
  0x000000010f835710: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f835718: callq  0x000000010f7d1a20  ; OopMap{[104]=Oop off=2877}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@25 (line 185)
                                                ; - java.lang.invoke.MethodType::checkPtypes@56 (line 178)
                                                ;   {runtime_call}
  0x000000010f83571d: jmpq   0x000000010f835368
  0x000000010f835722: mov    %rdx,%rdx
  0x000000010f835725: callq  0x000000010f7cd820  ; OopMap{[104]=Oop off=2890}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@25 (line 185)
                                                ; - java.lang.invoke.MethodType::checkPtypes@56 (line 178)
                                                ;   {runtime_call}
  0x000000010f83572a: jmpq   0x000000010f8353a9
  0x000000010f83572f: mov    %rdx,0x8(%rsp)
  0x000000010f835734: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f83573c: callq  0x000000010f7d1a20  ; OopMap{[120]=Oop off=2913}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MethodHandleStatics::newIllegalArgumentException@-1 (line 139)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@28 (line 185)
                                                ; - java.lang.invoke.MethodType::checkPtypes@56 (line 178)
                                                ;   {runtime_call}
  0x000000010f835741: jmpq   0x000000010f835428
  0x000000010f835746: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f835750: mov    $0xa050f00,%eax
  0x000000010f835755: callq  0x000000010f7d08e0  ; OopMap{[120]=Oop off=2938}
                                                ;*new  ; - java.lang.invoke.MethodHandleStatics::newIllegalArgumentException@0 (line 139)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@28 (line 185)
                                                ; - java.lang.invoke.MethodType::checkPtypes@56 (line 178)
                                                ;   {runtime_call}
  0x000000010f83575a: jmpq   0x000000010f835428
  0x000000010f83575f: mov    %rdx,%rdx
  0x000000010f835762: callq  0x000000010f7cd820  ; OopMap{[120]=Oop off=2951}
                                                ;*new  ; - java.lang.invoke.MethodHandleStatics::newIllegalArgumentException@0 (line 139)
                                                ; - java.lang.invoke.MethodType::checkSlotCount@28 (line 185)
                                                ; - java.lang.invoke.MethodType::checkPtypes@56 (line 178)
                                                ;   {runtime_call}
  0x000000010f835767: jmpq   0x000000010f83546d
  0x000000010f83576c: mov    %rdx,0x8(%rsp)
  0x000000010f835771: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f835779: callq  0x000000010f7d1a20  ; OopMap{[144]=Oop [160]=Oop off=2974}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MethodHandleStatics::newIllegalArgumentException@-1 (line 139)
                                                ; - java.lang.invoke.MethodType::checkPtype@14 (line 167)
                                                ; - java.lang.invoke.MethodType::checkPtypes@24 (line 173)
                                                ;   {runtime_call}
  0x000000010f83577e: jmpq   0x000000010f8354fa
  0x000000010f835783: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f83578d: mov    $0xa050f00,%eax
  0x000000010f835792: callq  0x000000010f7d08e0  ; OopMap{[144]=Oop [160]=Oop off=2999}
                                                ;*new  ; - java.lang.invoke.MethodHandleStatics::newIllegalArgumentException@0 (line 139)
                                                ; - java.lang.invoke.MethodType::checkPtype@14 (line 167)
                                                ; - java.lang.invoke.MethodType::checkPtypes@24 (line 173)
                                                ;   {runtime_call}
  0x000000010f835797: jmpq   0x000000010f835500
  0x000000010f83579c: mov    %rdx,%rdx
  0x000000010f83579f: callq  0x000000010f7cd820  ; OopMap{[160]=Oop [144]=Oop off=3012}
                                                ;*new  ; - java.lang.invoke.MethodHandleStatics::newIllegalArgumentException@0 (line 139)
                                                ; - java.lang.invoke.MethodType::checkPtype@14 (line 167)
                                                ; - java.lang.invoke.MethodType::checkPtypes@24 (line 173)
                                                ;   {runtime_call}
  0x000000010f8357a4: jmpq   0x000000010f835545
  0x000000010f8357a9: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f8357b3: mov    $0xa050f00,%eax
  0x000000010f8357b8: callq  0x000000010f7d08e0  ; OopMap{[144]=Oop [160]=Oop off=3037}
                                                ;*new  ; - java.util.Objects::requireNonNull@4 (line 203)
                                                ; - java.lang.invoke.MethodType::checkPtype@1 (line 165)
                                                ; - java.lang.invoke.MethodType::checkPtypes@24 (line 173)
                                                ;   {runtime_call}
  0x000000010f8357bd: jmpq   0x000000010f835590
  0x000000010f8357c2: mov    %rdx,%rdx
  0x000000010f8357c5: callq  0x000000010f7cd820  ; OopMap{[160]=Oop [144]=Oop off=3050}
                                                ;*new  ; - java.util.Objects::requireNonNull@4 (line 203)
                                                ; - java.lang.invoke.MethodType::checkPtype@1 (line 165)
                                                ; - java.lang.invoke.MethodType::checkPtypes@24 (line 173)
                                                ;   {runtime_call}
  0x000000010f8357ca: jmpq   0x000000010f8355d5
  0x000000010f8357cf: nop
  0x000000010f8357d0: nop
  0x000000010f8357d1: mov    0x2a8(%r15),%rax
  0x000000010f8357d8: movabs $0x0,%r10
  0x000000010f8357e2: mov    %r10,0x2a8(%r15)
  0x000000010f8357e9: movabs $0x0,%r10
  0x000000010f8357f3: mov    %r10,0x2b0(%r15)
  0x000000010f8357fa: add    $0xc0,%rsp
  0x000000010f835801: pop    %rbp
  0x000000010f835802: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f835807: hlt    
  0x000000010f835808: hlt    
  0x000000010f835809: hlt    
  0x000000010f83580a: hlt    
  0x000000010f83580b: hlt    
  0x000000010f83580c: hlt    
  0x000000010f83580d: hlt    
  0x000000010f83580e: hlt    
  0x000000010f83580f: hlt    
  0x000000010f835810: hlt    
  0x000000010f835811: hlt    
  0x000000010f835812: hlt    
  0x000000010f835813: hlt    
  0x000000010f835814: hlt    
  0x000000010f835815: hlt    
  0x000000010f835816: hlt    
  0x000000010f835817: hlt    
  0x000000010f835818: hlt    
  0x000000010f835819: hlt    
  0x000000010f83581a: hlt    
  0x000000010f83581b: hlt    
  0x000000010f83581c: hlt    
  0x000000010f83581d: hlt    
  0x000000010f83581e: hlt    
  0x000000010f83581f: hlt    
[Stub Code]
  0x000000010f835820: nop                       ;   {no_reloc}
  0x000000010f835821: nop
  0x000000010f835822: nop
  0x000000010f835823: nop
  0x000000010f835824: nop
  0x000000010f835825: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f83582f: jmpq   0x000000010f83582f  ;   {runtime_call}
  0x000000010f835834: nop
  0x000000010f835835: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f83583f: jmpq   0x000000010f83583f  ;   {runtime_call}
  0x000000010f835844: nop
  0x000000010f835845: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f83584f: jmpq   0x000000010f83584f  ;   {runtime_call}
  0x000000010f835854: nop
  0x000000010f835855: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f83585f: jmpq   0x000000010f83585f  ;   {runtime_call}
  0x000000010f835864: nop
  0x000000010f835865: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f83586f: jmpq   0x000000010f83586f  ;   {runtime_call}
  0x000000010f835874: nop
  0x000000010f835875: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f83587f: jmpq   0x000000010f83587f  ;   {runtime_call}
[Exception Handler]
  0x000000010f835884: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f835889: mov    %rsp,-0x28(%rsp)
  0x000000010f83588e: sub    $0x80,%rsp
  0x000000010f835895: mov    %rax,0x78(%rsp)
  0x000000010f83589a: mov    %rcx,0x70(%rsp)
  0x000000010f83589f: mov    %rdx,0x68(%rsp)
  0x000000010f8358a4: mov    %rbx,0x60(%rsp)
  0x000000010f8358a9: mov    %rbp,0x50(%rsp)
  0x000000010f8358ae: mov    %rsi,0x48(%rsp)
  0x000000010f8358b3: mov    %rdi,0x40(%rsp)
  0x000000010f8358b8: mov    %r8,0x38(%rsp)
  0x000000010f8358bd: mov    %r9,0x30(%rsp)
  0x000000010f8358c2: mov    %r10,0x28(%rsp)
  0x000000010f8358c7: mov    %r11,0x20(%rsp)
  0x000000010f8358cc: mov    %r12,0x18(%rsp)
  0x000000010f8358d1: mov    %r13,0x10(%rsp)
  0x000000010f8358d6: mov    %r14,0x8(%rsp)
  0x000000010f8358db: mov    %r15,(%rsp)
  0x000000010f8358df: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f8358e9: movabs $0x10f835889,%rsi  ;   {internal_word}
  0x000000010f8358f3: mov    %rsp,%rdx
  0x000000010f8358f6: and    $0xfffffffffffffff0,%rsp
  0x000000010f8358fa: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f8358ff: hlt    
[Deopt Handler Code]
  0x000000010f835900: movabs $0x10f835900,%r10  ;   {section_word}
  0x000000010f83590a: push   %r10
  0x000000010f83590c: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f835911: hlt    
  0x000000010f835912: hlt    
  0x000000010f835913: hlt    
  0x000000010f835914: hlt    
  0x000000010f835915: hlt    
  0x000000010f835916: hlt    
  0x000000010f835917: hlt    
Decoding compiled method 0x000000010f834650:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ea68c60} 'length' '()I' in 'java/lang/String'
  #           [sp+0x40]  (sp of caller)
  0x000000010f8347a0: mov    0x8(%rsi),%r10d
  0x000000010f8347a4: shl    $0x3,%r10
  0x000000010f8347a8: cmp    %rax,%r10
  0x000000010f8347ab: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f8347b1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f8347bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f8347c0: mov    %eax,-0x14000(%rsp)
  0x000000010f8347c7: push   %rbp
  0x000000010f8347c8: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.lang.String::length@0 (line 623)

  0x000000010f8347cc: mov    0xc(%rsi),%eax
  0x000000010f8347cf: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)

  0x000000010f8347d3: mov    0xc(%rax),%eax     ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; implicit exception: dispatches to 0x000000010f8347e2
  0x000000010f8347d6: add    $0x30,%rsp
  0x000000010f8347da: pop    %rbp
  0x000000010f8347db: test   %eax,-0x8d996e1(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f8347e1: retq   
  0x000000010f8347e2: callq  0x000000010f7cd0c0  ; OopMap{off=71}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ;   {runtime_call}
  0x000000010f8347e7: nop
  0x000000010f8347e8: nop
  0x000000010f8347e9: mov    0x2a8(%r15),%rax
  0x000000010f8347f0: movabs $0x0,%r10
  0x000000010f8347fa: mov    %r10,0x2a8(%r15)
  0x000000010f834801: movabs $0x0,%r10
  0x000000010f83480b: mov    %r10,0x2b0(%r15)
  0x000000010f834812: add    $0x30,%rsp
  0x000000010f834816: pop    %rbp
  0x000000010f834817: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f83481c: hlt    
  0x000000010f83481d: hlt    
  0x000000010f83481e: hlt    
  0x000000010f83481f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f834820: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f834825: mov    %rsp,-0x28(%rsp)
  0x000000010f83482a: sub    $0x80,%rsp
  0x000000010f834831: mov    %rax,0x78(%rsp)
  0x000000010f834836: mov    %rcx,0x70(%rsp)
  0x000000010f83483b: mov    %rdx,0x68(%rsp)
  0x000000010f834840: mov    %rbx,0x60(%rsp)
  0x000000010f834845: mov    %rbp,0x50(%rsp)
  0x000000010f83484a: mov    %rsi,0x48(%rsp)
  0x000000010f83484f: mov    %rdi,0x40(%rsp)
  0x000000010f834854: mov    %r8,0x38(%rsp)
  0x000000010f834859: mov    %r9,0x30(%rsp)
  0x000000010f83485e: mov    %r10,0x28(%rsp)
  0x000000010f834863: mov    %r11,0x20(%rsp)
  0x000000010f834868: mov    %r12,0x18(%rsp)
  0x000000010f83486d: mov    %r13,0x10(%rsp)
  0x000000010f834872: mov    %r14,0x8(%rsp)
  0x000000010f834877: mov    %r15,(%rsp)
  0x000000010f83487b: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f834885: movabs $0x10f834825,%rsi  ;   {internal_word}
  0x000000010f83488f: mov    %rsp,%rdx
  0x000000010f834892: and    $0xfffffffffffffff0,%rsp
  0x000000010f834896: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f83489b: hlt    
[Deopt Handler Code]
  0x000000010f83489c: movabs $0x10f83489c,%r10  ;   {section_word}
  0x000000010f8348a6: push   %r10
  0x000000010f8348a8: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f8348ad: hlt    
  0x000000010f8348ae: hlt    
  0x000000010f8348af: hlt    
Decoding compiled method 0x000000010f8368d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ec16118} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap'
  # this:     rsi:rsi   = 'java/util/concurrent/ConcurrentHashMap'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    rcx:rcx   = 'java/lang/Object'
  # parm2:    r8        = boolean
  #           [sp+0x110]  (sp of caller)
  0x000000010f836ba0: mov    0x8(%rsi),%r10d
  0x000000010f836ba4: shl    $0x3,%r10
  0x000000010f836ba8: cmp    %rax,%r10
  0x000000010f836bab: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f836bb1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f836bbc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f836bc0: mov    %eax,-0x14000(%rsp)
  0x000000010f836bc7: push   %rbp
  0x000000010f836bc8: sub    $0x100,%rsp
  0x000000010f836bcf: mov    %rsi,0x88(%rsp)
  0x000000010f836bd7: mov    %rdx,0x90(%rsp)
  0x000000010f836bdf: mov    %rcx,0x98(%rsp)
  0x000000010f836be7: mov    %r8d,0xa0(%rsp)
  0x000000010f836bef: movabs $0x10eddc628,%rdi  ;   {metadata(method data for {method} {0x000000010ec16118} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f836bf9: mov    0xdc(%rdi),%ebx
  0x000000010f836bff: add    $0x8,%ebx
  0x000000010f836c02: mov    %ebx,0xdc(%rdi)
  0x000000010f836c08: movabs $0x10ec16118,%rdi  ;   {metadata({method} {0x000000010ec16118} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f836c12: and    $0x1ff8,%ebx
  0x000000010f836c18: cmp    $0x0,%ebx
  0x000000010f836c1b: je     0x000000010f83823b  ;*aload_1
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@0 (line 1011)

  0x000000010f836c21: cmp    $0x0,%rdx
  0x000000010f836c25: movabs $0x10eddc628,%rdi  ;   {metadata(method data for {method} {0x000000010ec16118} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f836c2f: movabs $0x108,%rbx
  0x000000010f836c39: je     0x000000010f836c49
  0x000000010f836c3f: movabs $0x118,%rbx
  0x000000010f836c49: mov    (%rdi,%rbx,1),%rax
  0x000000010f836c4d: lea    0x1(%rax),%rax
  0x000000010f836c51: mov    %rax,(%rdi,%rbx,1)
  0x000000010f836c55: je     0x000000010f838165  ;*ifnull
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@1 (line 1011)

  0x000000010f836c5b: cmp    $0x0,%rcx
  0x000000010f836c5f: movabs $0x10eddc628,%rdi  ;   {metadata(method data for {method} {0x000000010ec16118} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f836c69: movabs $0x128,%rbx
  0x000000010f836c73: jne    0x000000010f836c83
  0x000000010f836c79: movabs $0x138,%rbx
  0x000000010f836c83: mov    (%rdi,%rbx,1),%rax
  0x000000010f836c87: lea    0x1(%rax),%rax
  0x000000010f836c8b: mov    %rax,(%rdi,%rbx,1)
  0x000000010f836c8f: je     0x000000010f838165  ;*ifnonnull
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@5 (line 1011)

  0x000000010f836c95: cmp    (%rdx),%rax        ; implicit exception: dispatches to 0x000000010f838252
  0x000000010f836c98: mov    %rdx,%rdi
  0x000000010f836c9b: movabs $0x10eddc628,%rbx  ;   {metadata(method data for {method} {0x000000010ec16118} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f836ca5: mov    0x8(%rdi),%edi
  0x000000010f836ca8: shl    $0x3,%rdi
  0x000000010f836cac: cmp    0x160(%rbx),%rdi
  0x000000010f836cb3: jne    0x000000010f836cc2
  0x000000010f836cb5: addq   $0x1,0x168(%rbx)
  0x000000010f836cbd: jmpq   0x000000010f836d28
  0x000000010f836cc2: cmp    0x170(%rbx),%rdi
  0x000000010f836cc9: jne    0x000000010f836cd8
  0x000000010f836ccb: addq   $0x1,0x178(%rbx)
  0x000000010f836cd3: jmpq   0x000000010f836d28
  0x000000010f836cd8: cmpq   $0x0,0x160(%rbx)
  0x000000010f836ce3: jne    0x000000010f836cfc
  0x000000010f836ce5: mov    %rdi,0x160(%rbx)
  0x000000010f836cec: movq   $0x1,0x168(%rbx)
  0x000000010f836cf7: jmpq   0x000000010f836d28
  0x000000010f836cfc: cmpq   $0x0,0x170(%rbx)
  0x000000010f836d07: jne    0x000000010f836d20
  0x000000010f836d09: mov    %rdi,0x170(%rbx)
  0x000000010f836d10: movq   $0x1,0x178(%rbx)
  0x000000010f836d1b: jmpq   0x000000010f836d28
  0x000000010f836d20: addq   $0x1,0x158(%rbx)
  0x000000010f836d28: mov    %rdx,%rsi          ;*invokevirtual hashCode
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@17 (line 1012)

  0x000000010f836d2b: nop
  0x000000010f836d2c: nop
  0x000000010f836d2d: movabs $0xffffffffffffffff,%rax
  0x000000010f836d37: callq  0x000000010f7172e0  ; OopMap{[136]=Oop [152]=Oop [144]=Oop off=412}
                                                ;*invokevirtual hashCode
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@17 (line 1012)
                                                ;   {virtual_call}
  0x000000010f836d3c: movabs $0x10eddc628,%rsi  ;   {metadata(method data for {method} {0x000000010ec16118} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f836d46: addq   $0x1,0x188(%rsi)
  0x000000010f836d4e: movabs $0x10ed9a268,%rsi  ;   {metadata(method data for {method} {0x000000010ec15238} 'spread' '(I)I' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f836d58: mov    0xdc(%rsi),%edi
  0x000000010f836d5e: add    $0x8,%edi
  0x000000010f836d61: mov    %edi,0xdc(%rsi)
  0x000000010f836d67: movabs $0x10ec15238,%rsi  ;   {metadata({method} {0x000000010ec15238} 'spread' '(I)I' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f836d71: and    $0x7ffff8,%edi
  0x000000010f836d77: cmp    $0x0,%edi
  0x000000010f836d7a: je     0x000000010f838257
  0x000000010f836d80: mov    %rax,%rsi
  0x000000010f836d83: shr    $0x10,%esi
  0x000000010f836d86: xor    %rax,%rsi
  0x000000010f836d89: and    $0x7fffffff,%esi
  0x000000010f836d8f: mov    %esi,0xa8(%rsp)
  0x000000010f836d96: mov    0x88(%rsp),%rdi
  0x000000010f836d9e: mov    0x28(%rdi),%ebx
  0x000000010f836da1: shl    $0x3,%rbx          ;*getfield table
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@29 (line 1014)

  0x000000010f836da5: mov    $0x0,%eax          ;*aload
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@34 (line 1016)

  0x000000010f836daa: mov    %eax,0xa4(%rsp)
  0x000000010f836db1: nopl   0x0(%rax)
  0x000000010f836db8: cmp    $0x0,%rbx
  0x000000010f836dbc: movabs $0x10eddc628,%r9   ;   {metadata(method data for {method} {0x000000010ec16118} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f836dc6: movabs $0x198,%r11
  0x000000010f836dd0: je     0x000000010f836de0
  0x000000010f836dd6: movabs $0x1a8,%r11
  0x000000010f836de0: mov    (%r9,%r11,1),%r13
  0x000000010f836de4: lea    0x1(%r13),%r13
  0x000000010f836de8: mov    %r13,(%r9,%r11,1)
  0x000000010f836dec: je     0x000000010f836e30  ;*ifnull
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@36 (line 1016)

  0x000000010f836df2: mov    0xc(%rbx),%r9d     ;*arraylength
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@41 (line 1016)
                                                ; implicit exception: dispatches to 0x000000010f83826e
  0x000000010f836df6: cmp    $0x0,%r9d
  0x000000010f836dfa: movabs $0x10eddc628,%r11  ;   {metadata(method data for {method} {0x000000010ec16118} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f836e04: movabs $0x1b8,%r13
  0x000000010f836e0e: jne    0x000000010f836e1e
  0x000000010f836e14: movabs $0x1c8,%r13
  0x000000010f836e1e: mov    (%r11,%r13,1),%r14
  0x000000010f836e22: lea    0x1(%r14),%r14
  0x000000010f836e26: mov    %r14,(%r11,%r13,1)
  0x000000010f836e2a: jne    0x000000010f836e80  ;*ifne
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@45 (line 1016)

  0x000000010f836e30: mov    %rdi,%rbx
  0x000000010f836e33: movabs $0x10eddc628,%r9   ;   {metadata(method data for {method} {0x000000010ec16118} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f836e3d: addq   $0x1,0x1d8(%r9)
  0x000000010f836e45: mov    %rdi,%rsi          ;*invokespecial initTable
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@49 (line 1017)

  0x000000010f836e48: nop
  0x000000010f836e49: nop
  0x000000010f836e4a: nop
  0x000000010f836e4b: nop
  0x000000010f836e4c: nop
  0x000000010f836e4d: nop
  0x000000010f836e4e: nop
  0x000000010f836e4f: callq  0x000000010f7170a0  ; OopMap{[152]=Oop [144]=Oop [136]=Oop off=692}
                                                ;*invokespecial initTable
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@49 (line 1017)
                                                ;   {optimized virtual_call}
  0x000000010f836e54: movabs $0x10eddc628,%rcx  ;   {metadata(method data for {method} {0x000000010ec16118} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f836e5e: incl   0x1e8(%rcx)
  0x000000010f836e64: mov    0xa4(%rsp),%esi
  0x000000010f836e6b: mov    0xa0(%rsp),%r8d
  0x000000010f836e73: mov    0x98(%rsp),%rcx
  0x000000010f836e7b: jmpq   0x000000010f837fad  ;*goto
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@54 (line 1017)

  0x000000010f836e80: dec    %r9d
  0x000000010f836e83: and    0xa8(%rsp),%r9d
  0x000000010f836e8b: mov    %r9d,0xc8(%rsp)
  0x000000010f836e93: movabs $0x10eddc628,%rcx  ;   {metadata(method data for {method} {0x000000010ec16118} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f836e9d: addq   $0x1,0x200(%rcx)
  0x000000010f836ea5: movabs $0x10ed56590,%rcx  ;   {metadata(method data for {method} {0x000000010ec15568} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f836eaf: mov    0xdc(%rcx),%edx
  0x000000010f836eb5: add    $0x8,%edx
  0x000000010f836eb8: mov    %edx,0xdc(%rcx)
  0x000000010f836ebe: movabs $0x10ec15568,%rcx  ;   {metadata({method} {0x000000010ec15568} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f836ec8: and    $0x7ffff8,%edx
  0x000000010f836ece: cmp    $0x0,%edx
  0x000000010f836ed1: je     0x000000010f838273
  0x000000010f836ed7: movslq %r9d,%rdx
  0x000000010f836eda: mov    $0x2,%ecx
  0x000000010f836edf: shl    %cl,%rdx
  0x000000010f836ee2: mov    %rdx,%r8
  0x000000010f836ee5: movabs $0x10,%r10
  0x000000010f836eef: add    %r10,%r8
  0x000000010f836ef2: mov    (%rbx,%r8,1),%edx
  0x000000010f836ef6: shl    $0x3,%rdx
  0x000000010f836efa: cmp    $0x0,%rdx
  0x000000010f836efe: jne    0x000000010f836f19
  0x000000010f836f00: movabs $0x10ed56590,%rsi  ;   {metadata(method data for {method} {0x000000010ec15568} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f836f0a: orl    $0x100,0x130(%rsi)
  0x000000010f836f14: jmpq   0x000000010f836fda
  0x000000010f836f19: movabs $0x7c0035040,%rax  ;   {metadata('java/util/concurrent/ConcurrentHashMap$Node')}
  0x000000010f836f23: mov    0x8(%rdx),%esi
  0x000000010f836f26: shl    $0x3,%rsi
  0x000000010f836f2a: cmp    0x30(%rsi),%rax
  0x000000010f836f2e: jne    0x000000010f836fbe
  0x000000010f836f34: movabs $0x10ed56590,%rsi  ;   {metadata(method data for {method} {0x000000010ec15568} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f836f3e: mov    0x8(%rdx),%eax
  0x000000010f836f41: shl    $0x3,%rax
  0x000000010f836f45: cmp    0x140(%rsi),%rax
  0x000000010f836f4c: jne    0x000000010f836f5b
  0x000000010f836f4e: addq   $0x1,0x148(%rsi)
  0x000000010f836f56: jmpq   0x000000010f836fda
  0x000000010f836f5b: cmp    0x150(%rsi),%rax
  0x000000010f836f62: jne    0x000000010f836f71
  0x000000010f836f64: addq   $0x1,0x158(%rsi)
  0x000000010f836f6c: jmpq   0x000000010f836fda
  0x000000010f836f71: cmpq   $0x0,0x140(%rsi)
  0x000000010f836f7c: jne    0x000000010f836f95
  0x000000010f836f7e: mov    %rax,0x140(%rsi)
  0x000000010f836f85: movq   $0x1,0x148(%rsi)
  0x000000010f836f90: jmpq   0x000000010f836fda
  0x000000010f836f95: cmpq   $0x0,0x150(%rsi)
  0x000000010f836fa0: jne    0x000000010f836fb9
  0x000000010f836fa2: mov    %rax,0x150(%rsi)
  0x000000010f836fa9: movq   $0x1,0x158(%rsi)
  0x000000010f836fb4: jmpq   0x000000010f836fda
  0x000000010f836fb9: jmpq   0x000000010f836fda
  0x000000010f836fbe: movabs $0x10ed56590,%rsi  ;   {metadata(method data for {method} {0x000000010ec15568} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f836fc8: subq   $0x1,0x138(%rsi)
  0x000000010f836fd0: jmpq   0x000000010f83828a
  0x000000010f836fd5: jmpq   0x000000010f836fda
  0x000000010f836fda: mov    %rdx,%rdi          ;*checkcast
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@17 (line 755)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@69 (line 1018)

  0x000000010f836fdd: mov    %rdi,0xb8(%rsp)
  0x000000010f836fe5: cmp    $0x0,%rdi
  0x000000010f836fe9: movabs $0x10eddc628,%rdx  ;   {metadata(method data for {method} {0x000000010ec16118} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f836ff3: movabs $0x210,%rsi
  0x000000010f836ffd: jne    0x000000010f83700d
  0x000000010f837003: movabs $0x220,%rsi
  0x000000010f83700d: mov    (%rdx,%rsi,1),%rax
  0x000000010f837011: lea    0x1(%rax),%rax
  0x000000010f837015: mov    %rax,(%rdx,%rsi,1)
  0x000000010f837019: jne    0x000000010f837224  ;*ifnonnull
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@75 (line 1018)

  0x000000010f83701f: mov    0xa8(%rsp),%esi
  0x000000010f837026: mov    0x98(%rsp),%rcx
  0x000000010f83702e: mov    0x90(%rsp),%rdx
  0x000000010f837036: mov    %rdx,%r11
  0x000000010f837039: movabs $0x7c0035040,%rdx  ;   {metadata('java/util/concurrent/ConcurrentHashMap$Node')}
  0x000000010f837043: mov    %rcx,%r14
  0x000000010f837046: mov    %rsi,%r13
  0x000000010f837049: mov    0x60(%r15),%rax
  0x000000010f83704d: lea    0x20(%rax),%rdi
  0x000000010f837051: cmp    0x70(%r15),%rdi
  0x000000010f837055: ja     0x000000010f838293
  0x000000010f83705b: mov    %rdi,0x60(%r15)
  0x000000010f83705f: mov    0xa8(%rdx),%rcx
  0x000000010f837066: mov    %rcx,(%rax)
  0x000000010f837069: mov    %rdx,%rcx
  0x000000010f83706c: shr    $0x3,%rcx
  0x000000010f837070: mov    %ecx,0x8(%rax)
  0x000000010f837073: xor    %rcx,%rcx
  0x000000010f837076: mov    %ecx,0xc(%rax)
  0x000000010f837079: xor    %rcx,%rcx
  0x000000010f83707c: mov    %rcx,0x10(%rax)
  0x000000010f837080: mov    %rcx,0x18(%rax)
  0x000000010f837084: mov    %rax,%rdx          ;*new  ; - java.util.concurrent.ConcurrentHashMap::putVal@83 (line 1019)

  0x000000010f837087: mov    %rdx,%rax
  0x000000010f83708a: movabs $0x10eddc628,%rcx  ;   {metadata(method data for {method} {0x000000010ec16118} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f837094: addq   $0x1,0x230(%rcx)
  0x000000010f83709c: movabs $0x10eddccc0,%rax  ;   {metadata(method data for {method} {0x000000010ec1f0b0} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/concurrent/ConcurrentHashMap$Node;)V' in 'java/util/concurrent/ConcurrentHashMap$Node')}
  0x000000010f8370a6: mov    0xdc(%rax),%ecx
  0x000000010f8370ac: add    $0x8,%ecx
  0x000000010f8370af: mov    %ecx,0xdc(%rax)
  0x000000010f8370b5: movabs $0x10ec1f0b0,%rax  ;   {metadata({method} {0x000000010ec1f0b0} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/concurrent/ConcurrentHashMap$Node;)V' in 'java/util/concurrent/ConcurrentHashMap$Node')}
  0x000000010f8370bf: and    $0x7ffff8,%ecx
  0x000000010f8370c5: cmp    $0x0,%ecx
  0x000000010f8370c8: je     0x000000010f8382a0
  0x000000010f8370ce: mov    %rdx,%rax
  0x000000010f8370d1: movabs $0x10eddccc0,%rcx  ;   {metadata(method data for {method} {0x000000010ec1f0b0} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/concurrent/ConcurrentHashMap$Node;)V' in 'java/util/concurrent/ConcurrentHashMap$Node')}
  0x000000010f8370db: addq   $0x1,0x108(%rcx)
  0x000000010f8370e3: movabs $0x10ebdca10,%rax  ;   {metadata(method data for {method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f8370ed: mov    0xdc(%rax),%ecx
  0x000000010f8370f3: add    $0x8,%ecx
  0x000000010f8370f6: mov    %ecx,0xdc(%rax)
  0x000000010f8370fc: movabs $0x10ea65480,%rax  ;   {metadata({method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f837106: and    $0x7ffff8,%ecx
  0x000000010f83710c: cmp    $0x0,%ecx
  0x000000010f83710f: je     0x000000010f8382b7
  0x000000010f837115: mov    %r13d,0xc(%rdx)    ;*putfield hash
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@6 (line 626)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@92 (line 1019)

  0x000000010f837119: mov    %r11,%r10
  0x000000010f83711c: shr    $0x3,%r10
  0x000000010f837120: mov    %r10d,0x10(%rdx)
  0x000000010f837124: mov    %rdx,%rax
  0x000000010f837127: shr    $0x9,%rax
  0x000000010f83712b: movabs $0x1065b9000,%rcx
  0x000000010f837135: movb   $0x0,(%rax,%rcx,1)
  0x000000010f837139: mov    %r14,%r10
  0x000000010f83713c: shr    $0x3,%r10
  0x000000010f837140: mov    %r10d,0x14(%rdx)
  0x000000010f837144: mov    %rdx,%rax
  0x000000010f837147: shr    $0x9,%rax
  0x000000010f83714b: movb   $0x0,(%rax,%rcx,1)
  0x000000010f83714f: lock addl $0x0,(%rsp)     ;*putfield val
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@16 (line 628)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@92 (line 1019)

  0x000000010f837154: movabs $0x10eddc628,%rax  ;   {metadata(method data for {method} {0x000000010ec16118} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f83715e: addq   $0x1,0x240(%rax)
  0x000000010f837166: movabs $0x10eddce10,%rax  ;   {metadata(method data for {method} {0x000000010ec15610} 'casTabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;Ljava/util/concurrent/ConcurrentHashMap$Node;)Z' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f837170: mov    0xdc(%rax),%esi
  0x000000010f837176: add    $0x8,%esi
  0x000000010f837179: mov    %esi,0xdc(%rax)
  0x000000010f83717f: movabs $0x10ec15610,%rax  ;   {metadata({method} {0x000000010ec15610} 'casTabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;Ljava/util/concurrent/ConcurrentHashMap$Node;)Z' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f837189: and    $0x7ffff8,%esi
  0x000000010f83718f: cmp    $0x0,%esi
  0x000000010f837192: je     0x000000010f8382ce
  0x000000010f837198: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000010f8371a2: lea    (%rbx,%r8,1),%rsi
  0x000000010f8371a6: shr    $0x3,%rax
  0x000000010f8371aa: mov    %rdx,%r10
  0x000000010f8371ad: shr    $0x3,%r10
  0x000000010f8371b1: lock cmpxchg %r10d,(%rsi)
  0x000000010f8371b6: mov    $0x1,%edx
  0x000000010f8371bb: je     0x000000010f8371c6
  0x000000010f8371c1: mov    $0x0,%edx
  0x000000010f8371c6: shr    $0x9,%rsi
  0x000000010f8371ca: movb   $0x0,(%rsi,%rcx,1)  ;*invokevirtual compareAndSwapObject
                                                ; - java.util.concurrent.ConcurrentHashMap::casTabAt@16 (line 760)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@95 (line 1019)

  0x000000010f8371ce: and    $0x1,%edx
  0x000000010f8371d1: cmp    $0x0,%edx
  0x000000010f8371d4: movabs $0x10eddc628,%rdx  ;   {metadata(method data for {method} {0x000000010ec16118} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f8371de: movabs $0x250,%rcx
  0x000000010f8371e8: je     0x000000010f8371f8
  0x000000010f8371ee: movabs $0x260,%rcx
  0x000000010f8371f8: mov    (%rdx,%rcx,1),%rsi
  0x000000010f8371fc: lea    0x1(%rsi),%rsi
  0x000000010f837200: mov    %rsi,(%rdx,%rcx,1)
  0x000000010f837204: jne    0x000000010f838104  ;*ifeq
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@98 (line 1019)

  0x000000010f83720a: mov    %rbx,%rax
  0x000000010f83720d: mov    0xa4(%rsp),%esi
  0x000000010f837214: mov    0xa0(%rsp),%r8d
  0x000000010f83721c: mov    %r14,%rcx
  0x000000010f83721f: jmpq   0x000000010f837fad  ;*goto
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@350 (line 1069)

  0x000000010f837224: mov    0xa8(%rsp),%r13d
  0x000000010f83722c: mov    0x98(%rsp),%r14
  0x000000010f837234: mov    0x90(%rsp),%r11
  0x000000010f83723c: mov    0xc(%rdi),%esi     ;*getfield hash
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@106 (line 1023)
                                                ; implicit exception: dispatches to 0x000000010f8382e5
  0x000000010f83723f: cmp    $0xffffffff,%esi
  0x000000010f837242: movabs $0x10eddc628,%rdx  ;   {metadata(method data for {method} {0x000000010ec16118} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f83724c: movabs $0x288,%rcx
  0x000000010f837256: jne    0x000000010f837266
  0x000000010f83725c: movabs $0x298,%rcx
  0x000000010f837266: mov    (%rdx,%rcx,1),%rax
  0x000000010f83726a: lea    0x1(%rax),%rax
  0x000000010f83726e: mov    %rax,(%rdx,%rcx,1)
  0x000000010f837272: jne    0x000000010f837350  ;*if_icmpne
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@113 (line 1023)

  0x000000010f837278: mov    0x88(%rsp),%rax
  0x000000010f837280: movabs $0x10eddc628,%r8   ;   {metadata(method data for {method} {0x000000010ec16118} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f83728a: mov    0x8(%rax),%eax
  0x000000010f83728d: shl    $0x3,%rax
  0x000000010f837291: cmp    0x2b0(%r8),%rax
  0x000000010f837298: jne    0x000000010f8372a7
  0x000000010f83729a: addq   $0x1,0x2b8(%r8)
  0x000000010f8372a2: jmpq   0x000000010f83730d
  0x000000010f8372a7: cmp    0x2c0(%r8),%rax
  0x000000010f8372ae: jne    0x000000010f8372bd
  0x000000010f8372b0: addq   $0x1,0x2c8(%r8)
  0x000000010f8372b8: jmpq   0x000000010f83730d
  0x000000010f8372bd: cmpq   $0x0,0x2b0(%r8)
  0x000000010f8372c8: jne    0x000000010f8372e1
  0x000000010f8372ca: mov    %rax,0x2b0(%r8)
  0x000000010f8372d1: movq   $0x1,0x2b8(%r8)
  0x000000010f8372dc: jmpq   0x000000010f83730d
  0x000000010f8372e1: cmpq   $0x0,0x2c0(%r8)
  0x000000010f8372ec: jne    0x000000010f837305
  0x000000010f8372ee: mov    %rax,0x2c0(%r8)
  0x000000010f8372f5: movq   $0x1,0x2c8(%r8)
  0x000000010f837300: jmpq   0x000000010f83730d
  0x000000010f837305: addq   $0x1,0x2a8(%r8)
  0x000000010f83730d: mov    %rbx,%rdx
  0x000000010f837310: mov    %rdi,%rcx
  0x000000010f837313: mov    0x88(%rsp),%rsi    ;*invokevirtual helpTransfer
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@121 (line 1024)

  0x000000010f83731b: nop
  0x000000010f83731c: nop
  0x000000010f83731d: nop
  0x000000010f83731e: nop
  0x000000010f83731f: callq  0x000000010f7170a0  ; OopMap{[136]=Oop [144]=Oop [152]=Oop off=1924}
                                                ;*invokevirtual helpTransfer
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@121 (line 1024)
                                                ;   {optimized virtual_call}
  0x000000010f837324: movabs $0x10eddc628,%rdx  ;   {metadata(method data for {method} {0x000000010ec16118} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f83732e: incl   0x2d8(%rdx)
  0x000000010f837334: mov    0xa4(%rsp),%esi
  0x000000010f83733b: mov    0xa0(%rsp),%r8d
  0x000000010f837343: mov    0x98(%rsp),%rcx
  0x000000010f83734b: jmpq   0x000000010f837fad  ;*goto
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@126 (line 1024)

  0x000000010f837350: lea    0xe0(%rsp),%rdx
  0x000000010f837358: mov    %rdi,0x8(%rdx)
  0x000000010f83735c: mov    (%rdi),%rax
  0x000000010f83735f: mov    %rax,%rcx
  0x000000010f837362: and    $0x7,%rcx
  0x000000010f837366: cmp    $0x5,%rcx
  0x000000010f83736a: jne    0x000000010f8373f1
  0x000000010f837370: mov    0x8(%rdi),%ecx
  0x000000010f837373: shl    $0x3,%rcx
  0x000000010f837377: mov    0xa8(%rcx),%rcx
  0x000000010f83737e: or     %r15,%rcx
  0x000000010f837381: xor    %rax,%rcx
  0x000000010f837384: and    $0xffffffffffffff87,%rcx
  0x000000010f837388: je     0x000000010f837419
  0x000000010f83738e: test   $0x7,%rcx
  0x000000010f837395: jne    0x000000010f8373de
  0x000000010f837397: test   $0x300,%rcx
  0x000000010f83739e: jne    0x000000010f8373bd
  0x000000010f8373a0: and    $0x37f,%rax
  0x000000010f8373a7: mov    %rax,%rcx
  0x000000010f8373aa: or     %r15,%rcx
  0x000000010f8373ad: lock cmpxchg %rcx,(%rdi)
  0x000000010f8373b2: jne    0x000000010f8382ea
  0x000000010f8373b8: jmpq   0x000000010f837419
  0x000000010f8373bd: mov    0x8(%rdi),%ecx
  0x000000010f8373c0: shl    $0x3,%rcx
  0x000000010f8373c4: mov    0xa8(%rcx),%rcx
  0x000000010f8373cb: or     %r15,%rcx
  0x000000010f8373ce: lock cmpxchg %rcx,(%rdi)
  0x000000010f8373d3: jne    0x000000010f8382ea
  0x000000010f8373d9: jmpq   0x000000010f837419
  0x000000010f8373de: mov    0x8(%rdi),%ecx
  0x000000010f8373e1: shl    $0x3,%rcx
  0x000000010f8373e5: mov    0xa8(%rcx),%rcx
  0x000000010f8373ec: lock cmpxchg %rcx,(%rdi)
  0x000000010f8373f1: mov    (%rdi),%rax
  0x000000010f8373f4: or     $0x1,%rax
  0x000000010f8373f8: mov    %rax,(%rdx)
  0x000000010f8373fb: lock cmpxchg %rdx,(%rdi)
  0x000000010f837400: je     0x000000010f837419
  0x000000010f837406: sub    %rsp,%rax
  0x000000010f837409: and    $0xfffffffffffff007,%rax
  0x000000010f837410: mov    %rax,(%rdx)
  0x000000010f837413: jne    0x000000010f8382ea  ;*monitorenter
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@137 (line 1027)

  0x000000010f837419: movabs $0x10eddc628,%rdx  ;   {metadata(method data for {method} {0x000000010ec16118} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f837423: addq   $0x1,0x2f0(%rdx)
  0x000000010f83742b: movabs $0x10ed56590,%rdx  ;   {metadata(method data for {method} {0x000000010ec15568} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f837435: mov    0xdc(%rdx),%eax
  0x000000010f83743b: add    $0x8,%eax
  0x000000010f83743e: mov    %eax,0xdc(%rdx)
  0x000000010f837444: movabs $0x10ec15568,%rdx  ;   {metadata({method} {0x000000010ec15568} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f83744e: and    $0x7ffff8,%eax
  0x000000010f837454: cmp    $0x0,%eax
  0x000000010f837457: je     0x000000010f8382fd
  0x000000010f83745d: mov    (%rbx,%r8,1),%edx
  0x000000010f837461: shl    $0x3,%rdx
  0x000000010f837465: cmp    $0x0,%rdx
  0x000000010f837469: jne    0x000000010f837484
  0x000000010f83746b: movabs $0x10ed56590,%rcx  ;   {metadata(method data for {method} {0x000000010ec15568} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f837475: orl    $0x100,0x130(%rcx)
  0x000000010f83747f: jmpq   0x000000010f837546
  0x000000010f837484: movabs $0x7c0035040,%r8   ;   {metadata('java/util/concurrent/ConcurrentHashMap$Node')}
  0x000000010f83748e: mov    0x8(%rdx),%ecx
  0x000000010f837491: shl    $0x3,%rcx
  0x000000010f837495: cmp    0x30(%rcx),%r8
  0x000000010f837499: jne    0x000000010f83752a
  0x000000010f83749f: movabs $0x10ed56590,%rcx  ;   {metadata(method data for {method} {0x000000010ec15568} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f8374a9: mov    0x8(%rdx),%r8d
  0x000000010f8374ad: shl    $0x3,%r8
  0x000000010f8374b1: cmp    0x140(%rcx),%r8
  0x000000010f8374b8: jne    0x000000010f8374c7
  0x000000010f8374ba: addq   $0x1,0x148(%rcx)
  0x000000010f8374c2: jmpq   0x000000010f837546
  0x000000010f8374c7: cmp    0x150(%rcx),%r8
  0x000000010f8374ce: jne    0x000000010f8374dd
  0x000000010f8374d0: addq   $0x1,0x158(%rcx)
  0x000000010f8374d8: jmpq   0x000000010f837546
  0x000000010f8374dd: cmpq   $0x0,0x140(%rcx)
  0x000000010f8374e8: jne    0x000000010f837501
  0x000000010f8374ea: mov    %r8,0x140(%rcx)
  0x000000010f8374f1: movq   $0x1,0x148(%rcx)
  0x000000010f8374fc: jmpq   0x000000010f837546
  0x000000010f837501: cmpq   $0x0,0x150(%rcx)
  0x000000010f83750c: jne    0x000000010f837525
  0x000000010f83750e: mov    %r8,0x150(%rcx)
  0x000000010f837515: movq   $0x1,0x158(%rcx)
  0x000000010f837520: jmpq   0x000000010f837546
  0x000000010f837525: jmpq   0x000000010f837546
  0x000000010f83752a: movabs $0x10ed56590,%rcx  ;   {metadata(method data for {method} {0x000000010ec15568} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f837534: subq   $0x1,0x138(%rcx)
  0x000000010f83753c: jmpq   0x000000010f838314
  0x000000010f837541: jmpq   0x000000010f837546  ;*checkcast
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@17 (line 755)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@142 (line 1028)

  0x000000010f837546: cmp    %rdi,%rdx
  0x000000010f837549: movabs $0x10eddc628,%rdx  ;   {metadata(method data for {method} {0x000000010ec16118} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f837553: movabs $0x300,%rax
  0x000000010f83755d: jne    0x000000010f83756d
  0x000000010f837563: movabs $0x310,%rax
  0x000000010f83756d: mov    (%rdx,%rax,1),%rcx
  0x000000010f837571: lea    0x1(%rcx),%rcx
  0x000000010f837575: mov    %rcx,(%rdx,%rax,1)
  0x000000010f837579: je     0x000000010f8375ad  ;*if_acmpne
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@147 (line 1028)

  0x000000010f83757f: mov    0xa4(%rsp),%eax
  0x000000010f837586: movabs $0x0,%rdi          ;   {oop(NULL)}
  0x000000010f837590: mov    %rbx,0xc0(%rsp)
  0x000000010f837598: mov    0xa0(%rsp),%r8d
  0x000000010f8375a0: mov    0x98(%rsp),%rcx
  0x000000010f8375a8: jmpq   0x000000010f837f22  ;*aload
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@308 (line 1060)

  0x000000010f8375ad: cmp    $0x0,%esi
  0x000000010f8375b0: movabs $0x10eddc628,%rdx  ;   {metadata(method data for {method} {0x000000010ec16118} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f8375ba: movabs $0x320,%rsi
  0x000000010f8375c4: jl     0x000000010f8375d4
  0x000000010f8375ca: movabs $0x330,%rsi
  0x000000010f8375d4: mov    (%rdx,%rsi,1),%rax
  0x000000010f8375d8: lea    0x1(%rax),%rax
  0x000000010f8375dc: mov    %rax,(%rdx,%rsi,1)
  0x000000010f8375e0: jl     0x000000010f837ad2  ;*iflt
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@152 (line 1029)

  0x000000010f8375e6: mov    %rdi,%rax
  0x000000010f8375e9: mov    $0x1,%ecx          ;*aload
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@162 (line 1033)

  0x000000010f8375ee: mov    %ecx,0xac(%rsp)
  0x000000010f8375f5: mov    %rbx,0xc0(%rsp)
  0x000000010f8375fd: data16 xchg %ax,%ax
  0x000000010f837600: mov    0xa8(%rsp),%esi
  0x000000010f837607: mov    0x90(%rsp),%rdx
  0x000000010f83760f: mov    0xc(%rax),%r8d     ;*getfield hash
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@164 (line 1033)
                                                ; implicit exception: dispatches to 0x000000010f83831d
  0x000000010f837613: cmp    %esi,%r8d
  0x000000010f837616: movabs $0x10eddc628,%r8   ;   {metadata(method data for {method} {0x000000010ec16118} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f837620: movabs $0x340,%r11
  0x000000010f83762a: jne    0x000000010f83763a
  0x000000010f837630: movabs $0x350,%r11
  0x000000010f83763a: mov    (%r8,%r11,1),%r13
  0x000000010f83763e: lea    0x1(%r13),%r13
  0x000000010f837642: mov    %r13,(%r8,%r11,1)
  0x000000010f837646: je     0x000000010f837654  ;*if_icmpne
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@169 (line 1033)

  0x000000010f83764c: mov    %rax,%r8
  0x000000010f83764f: jmpq   0x000000010f8377cd  ;*aload
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@218 (line 1041)

  0x000000010f837654: mov    0x10(%rax),%r8d
  0x000000010f837658: shl    $0x3,%r8           ;*getfield key
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@174 (line 1033)

  0x000000010f83765c: cmp    %rdx,%r8
  0x000000010f83765f: movabs $0x10eddc628,%r11  ;   {metadata(method data for {method} {0x000000010ec16118} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f837669: movabs $0x360,%r13
  0x000000010f837673: je     0x000000010f837683
  0x000000010f837679: movabs $0x370,%r13
  0x000000010f837683: mov    (%r11,%r13,1),%r14
  0x000000010f837687: lea    0x1(%r14),%r14
  0x000000010f83768b: mov    %r14,(%r11,%r13,1)
  0x000000010f83768f: je     0x000000010f837875  ;*if_acmpeq
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@181 (line 1033)

  0x000000010f837695: cmp    $0x0,%r8
  0x000000010f837699: movabs $0x10eddc628,%r11  ;   {metadata(method data for {method} {0x000000010ec16118} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f8376a3: movabs $0x380,%r13
  0x000000010f8376ad: je     0x000000010f8376bd
  0x000000010f8376b3: movabs $0x390,%r13
  0x000000010f8376bd: mov    (%r11,%r13,1),%r14
  0x000000010f8376c1: lea    0x1(%r14),%r14
  0x000000010f8376c5: mov    %r14,(%r11,%r13,1)
  0x000000010f8376c9: jne    0x000000010f8376d7  ;*ifnull
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@186 (line 1033)

  0x000000010f8376cf: mov    %rax,%r8
  0x000000010f8376d2: jmpq   0x000000010f8377cd  ;*aload
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@218 (line 1041)

  0x000000010f8376d7: mov    %rax,0xb0(%rsp)
  0x000000010f8376df: mov    %rdx,%r11
  0x000000010f8376e2: movabs $0x10eddc628,%r13  ;   {metadata(method data for {method} {0x000000010ec16118} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f8376ec: mov    0x8(%r11),%r11d
  0x000000010f8376f0: shl    $0x3,%r11
  0x000000010f8376f4: cmp    0x3a8(%r13),%r11
  0x000000010f8376fb: jne    0x000000010f83770a
  0x000000010f8376fd: addq   $0x1,0x3b0(%r13)
  0x000000010f837705: jmpq   0x000000010f837770
  0x000000010f83770a: cmp    0x3b8(%r13),%r11
  0x000000010f837711: jne    0x000000010f837720
  0x000000010f837713: addq   $0x1,0x3c0(%r13)
  0x000000010f83771b: jmpq   0x000000010f837770
  0x000000010f837720: cmpq   $0x0,0x3a8(%r13)
  0x000000010f83772b: jne    0x000000010f837744
  0x000000010f83772d: mov    %r11,0x3a8(%r13)
  0x000000010f837734: movq   $0x1,0x3b0(%r13)
  0x000000010f83773f: jmpq   0x000000010f837770
  0x000000010f837744: cmpq   $0x0,0x3b8(%r13)
  0x000000010f83774f: jne    0x000000010f837768
  0x000000010f837751: mov    %r11,0x3b8(%r13)
  0x000000010f837758: movq   $0x1,0x3c0(%r13)
  0x000000010f837763: jmpq   0x000000010f837770
  0x000000010f837768: addq   $0x1,0x3a0(%r13)
  0x000000010f837770: mov    %rdx,%r11
  0x000000010f837773: mov    %r8,%rdx
  0x000000010f837776: mov    %r11,%rsi          ;*invokevirtual equals
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@192 (line 1035)

  0x000000010f837779: nop
  0x000000010f83777a: nop
  0x000000010f83777b: nop
  0x000000010f83777c: nop
  0x000000010f83777d: movabs $0xffffffffffffffff,%rax
  0x000000010f837787: callq  0x000000010f7172e0  ; OopMap{[136]=Oop [152]=Oop [176]=Oop [144]=Oop [192]=Oop [184]=Oop [232]=Oop off=3052}
                                                ;*invokevirtual equals
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@192 (line 1035)
                                                ;   {virtual_call}
  0x000000010f83778c: cmp    $0x0,%eax
  0x000000010f83778f: movabs $0x10eddc628,%rdx  ;   {metadata(method data for {method} {0x000000010ec16118} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f837799: movabs $0x3d0,%rsi
  0x000000010f8377a3: je     0x000000010f8377b3
  0x000000010f8377a9: movabs $0x3e0,%rsi
  0x000000010f8377b3: mov    (%rdx,%rsi,1),%rdi
  0x000000010f8377b7: lea    0x1(%rdi),%rdi
  0x000000010f8377bb: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f8377bf: mov    0xb0(%rsp),%r8
  0x000000010f8377c7: jne    0x000000010f837878  ;*ifeq
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@195 (line 1035)

  0x000000010f8377cd: mov    0x18(%r8),%edx
  0x000000010f8377d1: shl    $0x3,%rdx          ;*getfield next
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@224 (line 1042)

  0x000000010f8377d5: cmp    $0x0,%rdx
  0x000000010f8377d9: movabs $0x10eddc628,%rsi  ;   {metadata(method data for {method} {0x000000010ec16118} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f8377e3: movabs $0x428,%rdi
  0x000000010f8377ed: jne    0x000000010f8377fd
  0x000000010f8377f3: movabs $0x438,%rdi
  0x000000010f8377fd: mov    (%rsi,%rdi,1),%rax
  0x000000010f837801: lea    0x1(%rax),%rax
  0x000000010f837805: mov    %rax,(%rsi,%rdi,1)
  0x000000010f837809: je     0x000000010f83793b  ;*ifnonnull
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@230 (line 1042)

  0x000000010f83780f: mov    0xac(%rsp),%ecx
  0x000000010f837816: inc    %ecx
  0x000000010f837818: movabs $0x10eddc628,%rsi  ;   {metadata(method data for {method} {0x000000010ec16118} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f837822: mov    0xe0(%rsi),%edi
  0x000000010f837828: add    $0x8,%edi
  0x000000010f83782b: mov    %edi,0xe0(%rsi)
  0x000000010f837831: movabs $0x10ec16118,%rsi  ;   {metadata({method} {0x000000010ec16118} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f83783b: and    $0xfff8,%edi
  0x000000010f837841: cmp    $0x0,%edi
  0x000000010f837844: je     0x000000010f838322  ; OopMap{[136]=Oop [152]=Oop [144]=Oop [192]=Oop [184]=Oop rdx=Oop [232]=Oop off=3242}
                                                ;*goto
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@256 (line 1031)

  0x000000010f83784a: test   %eax,-0x8d9c750(%rip)        # 0x0000000106a9b100
                                                ;   {poll}
  0x000000010f837850: movabs $0x10eddc628,%rsi  ;   {metadata(method data for {method} {0x000000010ec16118} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f83785a: incl   0x470(%rsi)
  0x000000010f837860: mov    %rdx,%r8
  0x000000010f837863: mov    %rcx,%rbx
  0x000000010f837866: mov    %r8,%rax
  0x000000010f837869: mov    %ebx,0xac(%rsp)
  0x000000010f837870: jmpq   0x000000010f837600  ;*goto
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@256 (line 1031)

  0x000000010f837875: mov    %rax,%r8
  0x000000010f837878: mov    0xac(%rsp),%ebx
  0x000000010f83787f: mov    0xa0(%rsp),%r9d
  0x000000010f837887: mov    0x14(%r8),%edx
  0x000000010f83788b: shl    $0x3,%rdx          ;*getfield val
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@200 (line 1036)

  0x000000010f83788f: cmp    $0x0,%r9d
  0x000000010f837893: movabs $0x10eddc628,%rsi  ;   {metadata(method data for {method} {0x000000010ec16118} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f83789d: movabs $0x3f0,%rdi
  0x000000010f8378a7: jne    0x000000010f8378b7
  0x000000010f8378ad: movabs $0x400,%rdi
  0x000000010f8378b7: mov    (%rsi,%rdi,1),%rax
  0x000000010f8378bb: lea    0x1(%rax),%rax
  0x000000010f8378bf: mov    %rax,(%rsi,%rdi,1)
  0x000000010f8378c3: je     0x000000010f8378e6  ;*ifne
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@206 (line 1037)

  0x000000010f8378c9: mov    0xa8(%rsp),%r13d
  0x000000010f8378d1: mov    0x98(%rsp),%r14
  0x000000010f8378d9: mov    0x90(%rsp),%r11
  0x000000010f8378e1: jmpq   0x000000010f837ab1  ;*goto
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@259 (line 1031)

  0x000000010f8378e6: mov    0x98(%rsp),%rcx
  0x000000010f8378ee: mov    %rcx,%r10
  0x000000010f8378f1: shr    $0x3,%r10
  0x000000010f8378f5: mov    %r10d,0x14(%r8)
  0x000000010f8378f9: mov    %r8,%rax
  0x000000010f8378fc: shr    $0x9,%rax
  0x000000010f837900: movabs $0x1065b9000,%rsi
  0x000000010f83790a: movb   $0x0,(%rax,%rsi,1)
  0x000000010f83790e: lock addl $0x0,(%rsp)     ;*putfield val
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@212 (line 1038)

  0x000000010f837913: movabs $0x10eddc628,%rsi  ;   {metadata(method data for {method} {0x000000010ec16118} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f83791d: incl   0x410(%rsi)
  0x000000010f837923: mov    0xa8(%rsp),%r13d
  0x000000010f83792b: mov    %rcx,%r14
  0x000000010f83792e: mov    0x90(%rsp),%r11
  0x000000010f837936: jmpq   0x000000010f837ab1  ;*goto
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@215 (line 1038)

  0x000000010f83793b: mov    0xac(%rsp),%ebx
  0x000000010f837942: mov    0xa8(%rsp),%esi
  0x000000010f837949: mov    0xa0(%rsp),%r9d
  0x000000010f837951: mov    0x98(%rsp),%rcx
  0x000000010f837959: mov    0x90(%rsp),%rdx
  0x000000010f837961: mov    %rdx,%r11
  0x000000010f837964: movabs $0x7c0035040,%rdx  ;   {metadata('java/util/concurrent/ConcurrentHashMap$Node')}
  0x000000010f83796e: mov    %rcx,%r14
  0x000000010f837971: mov    %rsi,%r13
  0x000000010f837974: mov    0x60(%r15),%rax
  0x000000010f837978: lea    0x20(%rax),%rdi
  0x000000010f83797c: cmp    0x70(%r15),%rdi
  0x000000010f837980: ja     0x000000010f838339
  0x000000010f837986: mov    %rdi,0x60(%r15)
  0x000000010f83798a: mov    0xa8(%rdx),%rcx
  0x000000010f837991: mov    %rcx,(%rax)
  0x000000010f837994: mov    %rdx,%rcx
  0x000000010f837997: shr    $0x3,%rcx
  0x000000010f83799b: mov    %ecx,0x8(%rax)
  0x000000010f83799e: xor    %rcx,%rcx
  0x000000010f8379a1: mov    %ecx,0xc(%rax)
  0x000000010f8379a4: xor    %rcx,%rcx
  0x000000010f8379a7: mov    %rcx,0x10(%rax)
  0x000000010f8379ab: mov    %rcx,0x18(%rax)    ;*new  ; - java.util.concurrent.ConcurrentHashMap::putVal@235 (line 1043)

  0x000000010f8379af: mov    %rax,%rdx
  0x000000010f8379b2: movabs $0x10eddc628,%rcx  ;   {metadata(method data for {method} {0x000000010ec16118} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f8379bc: addq   $0x1,0x448(%rcx)
  0x000000010f8379c4: movabs $0x10eddccc0,%rdx  ;   {metadata(method data for {method} {0x000000010ec1f0b0} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/concurrent/ConcurrentHashMap$Node;)V' in 'java/util/concurrent/ConcurrentHashMap$Node')}
  0x000000010f8379ce: mov    0xdc(%rdx),%ecx
  0x000000010f8379d4: add    $0x8,%ecx
  0x000000010f8379d7: mov    %ecx,0xdc(%rdx)
  0x000000010f8379dd: movabs $0x10ec1f0b0,%rdx  ;   {metadata({method} {0x000000010ec1f0b0} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/concurrent/ConcurrentHashMap$Node;)V' in 'java/util/concurrent/ConcurrentHashMap$Node')}
  0x000000010f8379e7: and    $0x7ffff8,%ecx
  0x000000010f8379ed: cmp    $0x0,%ecx
  0x000000010f8379f0: je     0x000000010f838346
  0x000000010f8379f6: mov    %rax,%rdx
  0x000000010f8379f9: movabs $0x10eddccc0,%rcx  ;   {metadata(method data for {method} {0x000000010ec1f0b0} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/concurrent/ConcurrentHashMap$Node;)V' in 'java/util/concurrent/ConcurrentHashMap$Node')}
  0x000000010f837a03: addq   $0x1,0x108(%rcx)
  0x000000010f837a0b: movabs $0x10ebdca10,%rdx  ;   {metadata(method data for {method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f837a15: mov    0xdc(%rdx),%ecx
  0x000000010f837a1b: add    $0x8,%ecx
  0x000000010f837a1e: mov    %ecx,0xdc(%rdx)
  0x000000010f837a24: movabs $0x10ea65480,%rdx  ;   {metadata({method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f837a2e: and    $0x7ffff8,%ecx
  0x000000010f837a34: cmp    $0x0,%ecx
  0x000000010f837a37: je     0x000000010f83835d
  0x000000010f837a3d: mov    %r13d,0xc(%rax)    ;*putfield hash
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@6 (line 626)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@244 (line 1043)

  0x000000010f837a41: mov    %r11,%r10
  0x000000010f837a44: shr    $0x3,%r10
  0x000000010f837a48: mov    %r10d,0x10(%rax)
  0x000000010f837a4c: mov    %rax,%rdx
  0x000000010f837a4f: shr    $0x9,%rdx
  0x000000010f837a53: movabs $0x1065b9000,%rcx
  0x000000010f837a5d: movb   $0x0,(%rdx,%rcx,1)
  0x000000010f837a61: mov    %r14,%r10
  0x000000010f837a64: shr    $0x3,%r10
  0x000000010f837a68: mov    %r10d,0x14(%rax)
  0x000000010f837a6c: mov    %rax,%rdx
  0x000000010f837a6f: shr    $0x9,%rdx
  0x000000010f837a73: movb   $0x0,(%rdx,%rcx,1)
  0x000000010f837a77: lock addl $0x0,(%rsp)
  0x000000010f837a7c: mov    %rax,%r10
  0x000000010f837a7f: shr    $0x3,%r10
  0x000000010f837a83: mov    %r10d,0x18(%r8)
  0x000000010f837a87: mov    %r8,%rax
  0x000000010f837a8a: shr    $0x9,%rax
  0x000000010f837a8e: movb   $0x0,(%rax,%rcx,1)
  0x000000010f837a92: lock addl $0x0,(%rsp)     ;*putfield next
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@247 (line 1043)

  0x000000010f837a97: movabs $0x10eddc628,%rdx  ;   {metadata(method data for {method} {0x000000010ec16118} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f837aa1: incl   0x458(%rdx)
  0x000000010f837aa7: movabs $0x0,%rdx          ;*goto
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@250 (line 1045)
                                                ;   {oop(NULL)}
  0x000000010f837ab1: movabs $0x10eddc628,%rcx  ;   {metadata(method data for {method} {0x000000010ec16118} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f837abb: incl   0x488(%rcx)
  0x000000010f837ac1: mov    %rdx,%rdi
  0x000000010f837ac4: mov    %rbx,%rax
  0x000000010f837ac7: mov    %r9,%r8
  0x000000010f837aca: mov    %r14,%rcx
  0x000000010f837acd: jmpq   0x000000010f837f22  ;*goto
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@259 (line 1031)

  0x000000010f837ad2: mov    %rbx,0xc0(%rsp)
  0x000000010f837ada: mov    0xa8(%rsp),%r13d
  0x000000010f837ae2: mov    0xa0(%rsp),%r9d
  0x000000010f837aea: mov    0x98(%rsp),%r14
  0x000000010f837af2: mov    0x90(%rsp),%r11
  0x000000010f837afa: cmp    $0x0,%rdi
  0x000000010f837afe: jne    0x000000010f837b1a
  0x000000010f837b00: movabs $0x10eddc628,%r8   ;   {metadata(method data for {method} {0x000000010ec16118} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f837b0a: orl    $0x100,0x498(%r8)
  0x000000010f837b15: jmpq   0x000000010f837c0b
  0x000000010f837b1a: nopw   0x0(%rax,%rax,1)
  0x000000010f837b20: jmpq   0x000000010f838383  ;   {no_reloc}
  0x000000010f837b25: add    %al,(%rax)
  0x000000010f837b27: add    %al,(%rax)
  0x000000010f837b29: add    %al,0x47(%rbx,%rcx,4)
  0x000000010f837b2d: or     %cl,-0x3f(%rcx)
  0x000000010f837b30: loopne 0x000000010f837b35
  0x000000010f837b32: cmp    %rsi,%r8
  0x000000010f837b35: je     0x000000010f837b65
  0x000000010f837b3b: mov    0xc(%rsi),%ecx
  0x000000010f837b3e: cmp    (%r8,%rcx,1),%rsi
  0x000000010f837b42: je     0x000000010f837b65
  0x000000010f837b48: cmp    $0x18,%ecx
  0x000000010f837b4b: jne    0x000000010f837bef
  0x000000010f837b51: push   %r8
  0x000000010f837b53: push   %rsi
  0x000000010f837b54: callq  0x000000010f7cf8e0  ;   {runtime_call}
  0x000000010f837b59: pop    %r8
  0x000000010f837b5b: pop    %rsi
  0x000000010f837b5c: cmp    $0x0,%esi
  0x000000010f837b5f: je     0x000000010f837bef
  0x000000010f837b65: movabs $0x10eddc628,%r8   ;   {metadata(method data for {method} {0x000000010ec16118} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f837b6f: mov    0x8(%rdi),%esi
  0x000000010f837b72: shl    $0x3,%rsi
  0x000000010f837b76: cmp    0x4a8(%r8),%rsi
  0x000000010f837b7d: jne    0x000000010f837b8c
  0x000000010f837b7f: addq   $0x1,0x4b0(%r8)
  0x000000010f837b87: jmpq   0x000000010f837c10
  0x000000010f837b8c: cmp    0x4b8(%r8),%rsi
  0x000000010f837b93: jne    0x000000010f837ba2
  0x000000010f837b95: addq   $0x1,0x4c0(%r8)
  0x000000010f837b9d: jmpq   0x000000010f837c10
  0x000000010f837ba2: cmpq   $0x0,0x4a8(%r8)
  0x000000010f837bad: jne    0x000000010f837bc6
  0x000000010f837baf: mov    %rsi,0x4a8(%r8)
  0x000000010f837bb6: movq   $0x1,0x4b0(%r8)
  0x000000010f837bc1: jmpq   0x000000010f837c10
  0x000000010f837bc6: cmpq   $0x0,0x4b8(%r8)
  0x000000010f837bd1: jne    0x000000010f837bea
  0x000000010f837bd3: mov    %rsi,0x4b8(%r8)
  0x000000010f837bda: movq   $0x1,0x4c0(%r8)
  0x000000010f837be5: jmpq   0x000000010f837c10
  0x000000010f837bea: jmpq   0x000000010f837c10
  0x000000010f837bef: movabs $0x10eddc628,%r8   ;   {metadata(method data for {method} {0x000000010ec16118} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f837bf9: subq   $0x1,0x4a0(%r8)
  0x000000010f837c01: jmpq   0x000000010f837c0b
  0x000000010f837c06: jmpq   0x000000010f837c10
  0x000000010f837c0b: xor    %rdx,%rdx
  0x000000010f837c0e: jmp    0x000000010f837c1a
  0x000000010f837c10: movabs $0x1,%rdx          ;*instanceof
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@264 (line 1049)

  0x000000010f837c1a: cmp    $0x0,%edx
  0x000000010f837c1d: movabs $0x10eddc628,%rdx  ;   {metadata(method data for {method} {0x000000010ec16118} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f837c27: movabs $0x4d0,%rcx
  0x000000010f837c31: je     0x000000010f837c41
  0x000000010f837c37: movabs $0x4e0,%rcx
  0x000000010f837c41: mov    (%rdx,%rcx,1),%r8
  0x000000010f837c45: lea    0x1(%r8),%r8
  0x000000010f837c49: mov    %r8,(%rdx,%rcx,1)
  0x000000010f837c4d: jne    0x000000010f837c6f  ;*ifeq
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@267 (line 1049)

  0x000000010f837c53: mov    0xa4(%rsp),%eax
  0x000000010f837c5a: movabs $0x0,%rdi          ;   {oop(NULL)}
  0x000000010f837c64: mov    %r9,%r8
  0x000000010f837c67: mov    %r14,%rcx
  0x000000010f837c6a: jmpq   0x000000010f837f22  ;*aload
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@308 (line 1060)

  0x000000010f837c6f: cmp    $0x0,%rdi
  0x000000010f837c73: jne    0x000000010f837c8e
  0x000000010f837c75: movabs $0x10eddc628,%rcx  ;   {metadata(method data for {method} {0x000000010ec16118} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f837c7f: orl    $0x100,0x4e8(%rcx)
  0x000000010f837c89: jmpq   0x000000010f837d78
  0x000000010f837c8e: xchg   %ax,%ax
  0x000000010f837c90: jmpq   0x000000010f83839c  ;   {no_reloc}
  0x000000010f837c95: add    %al,(%rax)
  0x000000010f837c97: add    %al,(%rax)
  0x000000010f837c99: add    %cl,-0x3eb7f7b1(%rbx)
  0x000000010f837c9f: loope  0x000000010f837ca4
  0x000000010f837ca1: cmp    %rbx,%rcx
  0x000000010f837ca4: je     0x000000010f837cd2
  0x000000010f837caa: mov    0xc(%rbx),%edx
  0x000000010f837cad: cmp    (%rcx,%rdx,1),%rbx
  0x000000010f837cb1: je     0x000000010f837cd2
  0x000000010f837cb7: cmp    $0x18,%edx
  0x000000010f837cba: jne    0x000000010f837d5c
  0x000000010f837cc0: push   %rcx
  0x000000010f837cc1: push   %rbx
  0x000000010f837cc2: callq  0x000000010f7cf8e0  ;   {runtime_call}
  0x000000010f837cc7: pop    %rcx
  0x000000010f837cc8: pop    %rbx
  0x000000010f837cc9: cmp    $0x0,%ebx
  0x000000010f837ccc: je     0x000000010f837d5c
  0x000000010f837cd2: movabs $0x10eddc628,%rcx  ;   {metadata(method data for {method} {0x000000010ec16118} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f837cdc: mov    0x8(%rdi),%ebx
  0x000000010f837cdf: shl    $0x3,%rbx
  0x000000010f837ce3: cmp    0x4f8(%rcx),%rbx
  0x000000010f837cea: jne    0x000000010f837cf9
  0x000000010f837cec: addq   $0x1,0x500(%rcx)
  0x000000010f837cf4: jmpq   0x000000010f837d78
  0x000000010f837cf9: cmp    0x508(%rcx),%rbx
  0x000000010f837d00: jne    0x000000010f837d0f
  0x000000010f837d02: addq   $0x1,0x510(%rcx)
  0x000000010f837d0a: jmpq   0x000000010f837d78
  0x000000010f837d0f: cmpq   $0x0,0x4f8(%rcx)
  0x000000010f837d1a: jne    0x000000010f837d33
  0x000000010f837d1c: mov    %rbx,0x4f8(%rcx)
  0x000000010f837d23: movq   $0x1,0x500(%rcx)
  0x000000010f837d2e: jmpq   0x000000010f837d78
  0x000000010f837d33: cmpq   $0x0,0x508(%rcx)
  0x000000010f837d3e: jne    0x000000010f837d57
  0x000000010f837d40: mov    %rbx,0x508(%rcx)
  0x000000010f837d47: movq   $0x1,0x510(%rcx)
  0x000000010f837d52: jmpq   0x000000010f837d78
  0x000000010f837d57: jmpq   0x000000010f837d78
  0x000000010f837d5c: movabs $0x10eddc628,%rcx  ;   {metadata(method data for {method} {0x000000010ec16118} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f837d66: subq   $0x1,0x4f0(%rcx)
  0x000000010f837d6e: jmpq   0x000000010f8383a6
  0x000000010f837d73: jmpq   0x000000010f837d78
  0x000000010f837d78: mov    %rdi,%rsi          ;*checkcast
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@275 (line 1052)

  0x000000010f837d7b: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x000000010f8383af
  0x000000010f837d7e: mov    %rsi,%rdx
  0x000000010f837d81: movabs $0x10eddc628,%rcx  ;   {metadata(method data for {method} {0x000000010ec16118} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f837d8b: mov    0x8(%rdx),%edx
  0x000000010f837d8e: shl    $0x3,%rdx
  0x000000010f837d92: cmp    0x528(%rcx),%rdx
  0x000000010f837d99: jne    0x000000010f837da8
  0x000000010f837d9b: addq   $0x1,0x530(%rcx)
  0x000000010f837da3: jmpq   0x000000010f837e0e
  0x000000010f837da8: cmp    0x538(%rcx),%rdx
  0x000000010f837daf: jne    0x000000010f837dbe
  0x000000010f837db1: addq   $0x1,0x540(%rcx)
  0x000000010f837db9: jmpq   0x000000010f837e0e
  0x000000010f837dbe: cmpq   $0x0,0x528(%rcx)
  0x000000010f837dc9: jne    0x000000010f837de2
  0x000000010f837dcb: mov    %rdx,0x528(%rcx)
  0x000000010f837dd2: movq   $0x1,0x530(%rcx)
  0x000000010f837ddd: jmpq   0x000000010f837e0e
  0x000000010f837de2: cmpq   $0x0,0x538(%rcx)
  0x000000010f837ded: jne    0x000000010f837e06
  0x000000010f837def: mov    %rdx,0x538(%rcx)
  0x000000010f837df6: movq   $0x1,0x540(%rcx)
  0x000000010f837e01: jmpq   0x000000010f837e0e
  0x000000010f837e06: addq   $0x1,0x520(%rcx)
  0x000000010f837e0e: mov    %r13,%rdx
  0x000000010f837e11: mov    %r11,%rcx
  0x000000010f837e14: mov    %r14,%r8           ;*invokevirtual putTreeVal
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@282 (line 1052)

  0x000000010f837e17: nop
  0x000000010f837e18: nop
  0x000000010f837e19: nop
  0x000000010f837e1a: nop
  0x000000010f837e1b: nop
  0x000000010f837e1c: nop
  0x000000010f837e1d: movabs $0xffffffffffffffff,%rax
  0x000000010f837e27: callq  0x000000010f7172e0  ; OopMap{[136]=Oop [192]=Oop [184]=Oop [152]=Oop [144]=Oop [232]=Oop off=4748}
                                                ;*invokevirtual putTreeVal
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@282 (line 1052)
                                                ;   {virtual_call}
  0x000000010f837e2c: cmp    $0x0,%rax
  0x000000010f837e30: movabs $0x10eddc628,%rdx  ;   {metadata(method data for {method} {0x000000010ec16118} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f837e3a: movabs $0x550,%rcx
  0x000000010f837e44: je     0x000000010f837e54
  0x000000010f837e4a: movabs $0x560,%rcx
  0x000000010f837e54: mov    (%rdx,%rcx,1),%rsi
  0x000000010f837e58: lea    0x1(%rsi),%rsi
  0x000000010f837e5c: mov    %rsi,(%rdx,%rcx,1)
  0x000000010f837e60: jne    0x000000010f837e8a  ;*ifnull
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@288 (line 1052)

  0x000000010f837e66: movabs $0x0,%rdi          ;   {oop(NULL)}
  0x000000010f837e70: mov    $0x2,%eax
  0x000000010f837e75: mov    0xa0(%rsp),%r8d
  0x000000010f837e7d: mov    0x98(%rsp),%rcx
  0x000000010f837e85: jmpq   0x000000010f837f22  ;*aload
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@308 (line 1060)

  0x000000010f837e8a: mov    0xb8(%rsp),%rdi
  0x000000010f837e92: mov    0xa0(%rsp),%r8d
  0x000000010f837e9a: mov    0x14(%rax),%edx    ; implicit exception: dispatches to 0x000000010f8383b4
  0x000000010f837e9d: shl    $0x3,%rdx          ;*getfield val
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@293 (line 1054)

  0x000000010f837ea1: cmp    $0x0,%r8d
  0x000000010f837ea5: movabs $0x10eddc628,%rcx  ;   {metadata(method data for {method} {0x000000010ec16118} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f837eaf: movabs $0x570,%rsi
  0x000000010f837eb9: jne    0x000000010f837ec9
  0x000000010f837ebf: movabs $0x580,%rsi
  0x000000010f837ec9: mov    (%rcx,%rsi,1),%rdi
  0x000000010f837ecd: lea    0x1(%rdi),%rdi
  0x000000010f837ed1: mov    %rdi,(%rcx,%rsi,1)
  0x000000010f837ed5: je     0x000000010f837ef0  ;*ifne
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@299 (line 1055)

  0x000000010f837edb: mov    %rdx,%rdi
  0x000000010f837ede: mov    $0x2,%eax
  0x000000010f837ee3: mov    0x98(%rsp),%rcx
  0x000000010f837eeb: jmpq   0x000000010f837f22  ;*aload
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@308 (line 1060)

  0x000000010f837ef0: mov    0x98(%rsp),%rcx
  0x000000010f837ef8: mov    %rcx,%r10
  0x000000010f837efb: shr    $0x3,%r10
  0x000000010f837eff: mov    %r10d,0x14(%rax)
  0x000000010f837f03: shr    $0x9,%rax
  0x000000010f837f07: movabs $0x1065b9000,%rsi
  0x000000010f837f11: movb   $0x0,(%rax,%rsi,1)
  0x000000010f837f15: lock addl $0x0,(%rsp)     ;*putfield val
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@305 (line 1056)

  0x000000010f837f1a: mov    %rdx,%rdi
  0x000000010f837f1d: mov    $0x2,%eax          ;*aload
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@308 (line 1060)

  0x000000010f837f22: mov    %rax,%rbx
  0x000000010f837f25: lea    0xe0(%rsp),%rax
  0x000000010f837f2d: mov    0x8(%rax),%rsi
  0x000000010f837f31: mov    (%rsi),%rdx
  0x000000010f837f34: and    $0x7,%rdx
  0x000000010f837f38: cmp    $0x5,%rdx
  0x000000010f837f3c: je     0x000000010f837f59
  0x000000010f837f42: mov    (%rax),%rdx
  0x000000010f837f45: test   %rdx,%rdx
  0x000000010f837f48: je     0x000000010f837f59
  0x000000010f837f4e: lock cmpxchg %rdx,(%rsi)
  0x000000010f837f53: jne    0x000000010f8383b9  ;*monitorexit
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@310 (line 1060)

  0x000000010f837f59: movabs $0x10eddc628,%rdx  ;   {metadata(method data for {method} {0x000000010ec16118} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f837f63: incl   0x590(%rdx)        ;*goto
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@311 (line 1060)

  0x000000010f837f69: cmp    $0x0,%ebx
  0x000000010f837f6c: movabs $0x10eddc628,%rdx  ;   {metadata(method data for {method} {0x000000010ec16118} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f837f76: movabs $0x5a8,%rsi
  0x000000010f837f80: je     0x000000010f837f90
  0x000000010f837f86: movabs $0x5b8,%rsi
  0x000000010f837f90: mov    (%rdx,%rsi,1),%rax
  0x000000010f837f94: lea    0x1(%rax),%rax
  0x000000010f837f98: mov    %rax,(%rdx,%rsi,1)
  0x000000010f837f9c: jne    0x000000010f838012  ;*ifeq
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@324 (line 1061)

  0x000000010f837fa2: mov    0xc0(%rsp),%rax
  0x000000010f837faa: mov    %rbx,%rsi          ;*goto
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@350 (line 1069)

  0x000000010f837fad: movabs $0x10eddc628,%rdx  ;   {metadata(method data for {method} {0x000000010ec16118} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f837fb7: mov    0xe0(%rdx),%edi
  0x000000010f837fbd: add    $0x8,%edi
  0x000000010f837fc0: mov    %edi,0xe0(%rdx)
  0x000000010f837fc6: movabs $0x10ec16118,%rdx  ;   {metadata({method} {0x000000010ec16118} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f837fd0: and    $0xfff8,%edi
  0x000000010f837fd6: cmp    $0x0,%edi
  0x000000010f837fd9: je     0x000000010f8383cf  ; OopMap{[136]=Oop [144]=Oop rcx=Oop [152]=Oop rax=Oop off=5183}
                                                ;*goto
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@350 (line 1069)

  0x000000010f837fdf: test   %eax,-0x8d9cee5(%rip)        # 0x0000000106a9b100
                                                ;   {poll}
  0x000000010f837fe5: movabs $0x10eddc628,%rdx  ;   {metadata(method data for {method} {0x000000010ec16118} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f837fef: incl   0x618(%rdx)
  0x000000010f837ff5: mov    %rax,%rdx
  0x000000010f837ff8: mov    %rsi,%rax
  0x000000010f837ffb: mov    %rdx,%rbx
  0x000000010f837ffe: mov    %eax,0xa4(%rsp)
  0x000000010f838005: mov    0x88(%rsp),%rdi
  0x000000010f83800d: jmpq   0x000000010f836db8  ;*goto
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@350 (line 1069)

  0x000000010f838012: mov    0xc0(%rsp),%rdx
  0x000000010f83801a: cmp    $0x8,%ebx
  0x000000010f83801d: movabs $0x10eddc628,%rcx  ;   {metadata(method data for {method} {0x000000010ec16118} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f838027: movabs $0x5c8,%rsi
  0x000000010f838031: jl     0x000000010f838041
  0x000000010f838037: movabs $0x5d8,%rsi
  0x000000010f838041: mov    (%rcx,%rsi,1),%rax
  0x000000010f838045: lea    0x1(%rax),%rax
  0x000000010f838049: mov    %rax,(%rcx,%rsi,1)
  0x000000010f83804d: jge    0x000000010f83805f  ;*if_icmplt
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@331 (line 1062)

  0x000000010f838053: mov    %ebx,0xcc(%rsp)
  0x000000010f83805a: jmpq   0x000000010f8380ac  ;*aload
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@342 (line 1064)

  0x000000010f83805f: mov    %rdi,0xd0(%rsp)
  0x000000010f838067: mov    %ebx,0xcc(%rsp)
  0x000000010f83806e: mov    0xc8(%rsp),%r9d
  0x000000010f838076: mov    0x88(%rsp),%rsi
  0x000000010f83807e: movabs $0x10eddc628,%rcx  ;   {metadata(method data for {method} {0x000000010ec16118} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f838088: addq   $0x1,0x5e8(%rcx)
  0x000000010f838090: mov    %r9,%rcx
  0x000000010f838093: mov    0x88(%rsp),%rsi    ;*invokespecial treeifyBin
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@339 (line 1063)

  0x000000010f83809b: nop
  0x000000010f83809c: nop
  0x000000010f83809d: nop
  0x000000010f83809e: nop
  0x000000010f83809f: callq  0x000000010f7170a0  ; OopMap{[136]=Oop [208]=Oop off=5380}
                                                ;*invokespecial treeifyBin
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@339 (line 1063)
                                                ;   {optimized virtual_call}
  0x000000010f8380a4: mov    0xd0(%rsp),%rdi
  0x000000010f8380ac: cmp    $0x0,%rdi
  0x000000010f8380b0: movabs $0x10eddc628,%rax  ;   {metadata(method data for {method} {0x000000010ec16118} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f8380ba: movabs $0x5f8,%rdx
  0x000000010f8380c4: je     0x000000010f8380d4
  0x000000010f8380ca: movabs $0x608,%rdx
  0x000000010f8380d4: mov    (%rax,%rdx,1),%rcx
  0x000000010f8380d8: lea    0x1(%rcx),%rcx
  0x000000010f8380dc: mov    %rcx,(%rax,%rdx,1)
  0x000000010f8380e0: jne    0x000000010f8380f2  ;*ifnull
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@344 (line 1064)

  0x000000010f8380e6: mov    0xcc(%rsp),%eax
  0x000000010f8380ed: jmpq   0x000000010f83811b  ;*aload_0
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@353 (line 1070)

  0x000000010f8380f2: mov    %rdi,%rax
  0x000000010f8380f5: add    $0x100,%rsp
  0x000000010f8380fc: pop    %rbp
  0x000000010f8380fd: test   %eax,-0x8d9d003(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f838103: retq                      ;*areturn
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@349 (line 1065)

  0x000000010f838104: mov    0xa4(%rsp),%eax
  0x000000010f83810b: movabs $0x10eddc628,%rdx  ;   {metadata(method data for {method} {0x000000010ec16118} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f838115: incl   0x270(%rdx)        ;*goto
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@101 (line 1021)

  0x000000010f83811b: mov    0x88(%rsp),%rsi
  0x000000010f838123: mov    %rsi,%rdx
  0x000000010f838126: movabs $0x10eddc628,%rcx  ;   {metadata(method data for {method} {0x000000010ec16118} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f838130: addq   $0x1,0x630(%rcx)
  0x000000010f838138: movabs $0x1,%rdx
  0x000000010f838142: mov    %rax,%rcx          ;*invokespecial addCount
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@357 (line 1070)

  0x000000010f838145: nop
  0x000000010f838146: nop
  0x000000010f838147: callq  0x000000010f7170a0  ; OopMap{off=5548}
                                                ;*invokespecial addCount
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@357 (line 1070)
                                                ;   {optimized virtual_call}
  0x000000010f83814c: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000010f838156: add    $0x100,%rsp
  0x000000010f83815d: pop    %rbp
  0x000000010f83815e: test   %eax,-0x8d9d064(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f838164: retq                      ;*areturn
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@361 (line 1071)

  0x000000010f838165: data16 xchg %ax,%ax
  0x000000010f838168: jmpq   0x000000010f8383f5  ;   {no_reloc}
  0x000000010f83816d: add    %al,(%rax)
  0x000000010f83816f: add    %al,(%rax)
  0x000000010f838171: add    %cl,-0x75(%rcx)
  0x000000010f838174: rex.RXB (bad) 
  0x000000010f838176: lea    0x20(%rax),%rdi
  0x000000010f83817a: cmp    0x70(%r15),%rdi
  0x000000010f83817e: ja     0x000000010f8383ff
  0x000000010f838184: mov    %rdi,0x60(%r15)
  0x000000010f838188: mov    0xa8(%rdx),%rcx
  0x000000010f83818f: mov    %rcx,(%rax)
  0x000000010f838192: mov    %rdx,%rcx
  0x000000010f838195: shr    $0x3,%rcx
  0x000000010f838199: mov    %ecx,0x8(%rax)
  0x000000010f83819c: xor    %rcx,%rcx
  0x000000010f83819f: mov    %ecx,0xc(%rax)
  0x000000010f8381a2: xor    %rcx,%rcx
  0x000000010f8381a5: mov    %rcx,0x10(%rax)
  0x000000010f8381a9: mov    %rcx,0x18(%rax)    ;*new  ; - java.util.concurrent.ConcurrentHashMap::putVal@8 (line 1011)

  0x000000010f8381ad: mov    %rax,%rsi
  0x000000010f8381b0: movabs $0x10eddc628,%rdi  ;   {metadata(method data for {method} {0x000000010ec16118} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000010f8381ba: addq   $0x1,0x148(%rdi)
  0x000000010f8381c2: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@12 (line 1011)

  0x000000010f8381c5: mov    %rax,0xd8(%rsp)
  0x000000010f8381cd: nop
  0x000000010f8381ce: nop
  0x000000010f8381cf: callq  0x000000010f7170a0  ; OopMap{[216]=Oop off=5684}
                                                ;*invokespecial <init>
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@12 (line 1011)
                                                ;   {optimized virtual_call}
  0x000000010f8381d4: mov    0xd8(%rsp),%rax
  0x000000010f8381dc: jmpq   0x000000010f83844d  ;*athrow
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@15 (line 1011)

  0x000000010f8381e1: mov    0x2a8(%r15),%rax
  0x000000010f8381e8: xor    %r10,%r10
  0x000000010f8381eb: mov    %r10,0x2a8(%r15)
  0x000000010f8381f2: xor    %r10,%r10
  0x000000010f8381f5: mov    %r10,0x2b0(%r15)
  0x000000010f8381fc: mov    %rax,%rsi
  0x000000010f8381ff: lea    0xe0(%rsp),%rax
  0x000000010f838207: mov    0x8(%rax),%rbx
  0x000000010f83820b: mov    (%rbx),%rdi
  0x000000010f83820e: and    $0x7,%rdi
  0x000000010f838212: cmp    $0x5,%rdi
  0x000000010f838216: je     0x000000010f838233
  0x000000010f83821c: mov    (%rax),%rdi
  0x000000010f83821f: test   %rdi,%rdi
  0x000000010f838222: je     0x000000010f838233
  0x000000010f838228: lock cmpxchg %rdi,(%rbx)
  0x000000010f83822d: jne    0x000000010f83840c  ;*monitorexit
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@318 (line 1060)

  0x000000010f838233: mov    %rsi,%rax
  0x000000010f838236: jmpq   0x000000010f83844d
  0x000000010f83823b: mov    %rdi,0x8(%rsp)
  0x000000010f838240: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f838248: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [136]=Oop rdx=Oop [144]=Oop rcx=Oop [152]=Oop off=5805}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@-1 (line 1011)
                                                ;   {runtime_call}
  0x000000010f83824d: jmpq   0x000000010f836c21
  0x000000010f838252: callq  0x000000010f7cd0c0  ; OopMap{[136]=Oop [152]=Oop rdx=Oop [144]=Oop off=5815}
                                                ;*invokevirtual hashCode
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@17 (line 1012)
                                                ;   {runtime_call}
  0x000000010f838257: mov    %rsi,0x8(%rsp)
  0x000000010f83825c: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f838264: callq  0x000000010f7d1a20  ; OopMap{[136]=Oop [152]=Oop [144]=Oop off=5833}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::spread@-1 (line 685)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@20 (line 1012)
                                                ;   {runtime_call}
  0x000000010f838269: jmpq   0x000000010f836d80
  0x000000010f83826e: callq  0x000000010f7cd0c0  ; OopMap{rdi=Oop [136]=Oop [152]=Oop [144]=Oop rbx=Oop off=5843}
                                                ;*arraylength
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@41 (line 1016)
                                                ;   {runtime_call}
  0x000000010f838273: mov    %rcx,0x8(%rsp)
  0x000000010f838278: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f838280: callq  0x000000010f7d1a20  ; OopMap{[152]=Oop [144]=Oop [136]=Oop rbx=Oop off=5861}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@-1 (line 755)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@69 (line 1018)
                                                ;   {runtime_call}
  0x000000010f838285: jmpq   0x000000010f836ed7
  0x000000010f83828a: mov    %rdx,(%rsp)
  0x000000010f83828e: callq  0x000000010f7cf480  ; OopMap{[152]=Oop [144]=Oop [136]=Oop rbx=Oop off=5875}
                                                ;*checkcast
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@17 (line 755)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@69 (line 1018)
                                                ;   {runtime_call}
  0x000000010f838293: mov    %rdx,%rdx
  0x000000010f838296: callq  0x000000010f7cd820  ; OopMap{[136]=Oop rbx=Oop r11=Oop [144]=Oop r14=Oop [152]=Oop off=5883}
                                                ;*new  ; - java.util.concurrent.ConcurrentHashMap::putVal@83 (line 1019)
                                                ;   {runtime_call}
  0x000000010f83829b: jmpq   0x000000010f837084
  0x000000010f8382a0: mov    %rax,0x8(%rsp)
  0x000000010f8382a5: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f8382ad: callq  0x000000010f7d1a20  ; OopMap{[136]=Oop rbx=Oop r11=Oop [144]=Oop r14=Oop [152]=Oop rdx=Oop off=5906}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@-1 (line 625)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@92 (line 1019)
                                                ;   {runtime_call}
  0x000000010f8382b2: jmpq   0x000000010f8370ce
  0x000000010f8382b7: mov    %rax,0x8(%rsp)
  0x000000010f8382bc: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f8382c4: callq  0x000000010f7d1a20  ; OopMap{[136]=Oop rbx=Oop r11=Oop [144]=Oop r14=Oop [152]=Oop rdx=Oop off=5929}
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 37)
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@1 (line 625)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@92 (line 1019)
                                                ;   {runtime_call}
  0x000000010f8382c9: jmpq   0x000000010f837115
  0x000000010f8382ce: mov    %rax,0x8(%rsp)
  0x000000010f8382d3: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f8382db: callq  0x000000010f7d1a20  ; OopMap{[136]=Oop rbx=Oop r11=Oop [144]=Oop r14=Oop [152]=Oop rdx=Oop off=5952}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::casTabAt@-1 (line 760)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@95 (line 1019)
                                                ;   {runtime_call}
  0x000000010f8382e0: jmpq   0x000000010f837198
  0x000000010f8382e5: callq  0x000000010f7cd0c0  ; OopMap{[136]=Oop r11=Oop [144]=Oop r14=Oop [152]=Oop rdi=Oop [184]=Oop rbx=Oop off=5962}
                                                ;*getfield hash
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@106 (line 1023)
                                                ;   {runtime_call}
  0x000000010f8382ea: mov    %rdi,0x8(%rsp)
  0x000000010f8382ef: mov    %rdx,(%rsp)
  0x000000010f8382f3: callq  0x000000010f7cfc60  ; OopMap{[136]=Oop [144]=Oop [152]=Oop rbx=Oop rdi=Oop [184]=Oop [232]=Oop off=5976}
                                                ;*monitorenter
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@137 (line 1027)
                                                ;   {runtime_call}
  0x000000010f8382f8: jmpq   0x000000010f837419
  0x000000010f8382fd: mov    %rdx,0x8(%rsp)
  0x000000010f838302: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f83830a: callq  0x000000010f7d1a20  ; OopMap{[136]=Oop [144]=Oop [152]=Oop rbx=Oop rdi=Oop [184]=Oop [232]=Oop off=5999}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@-1 (line 755)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@142 (line 1028)
                                                ;   {runtime_call}
  0x000000010f83830f: jmpq   0x000000010f83745d
  0x000000010f838314: mov    %rdx,(%rsp)
  0x000000010f838318: callq  0x000000010f7cf480  ; OopMap{[136]=Oop [144]=Oop [152]=Oop rbx=Oop rdi=Oop [184]=Oop [232]=Oop off=6013}
                                                ;*checkcast
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@17 (line 755)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@142 (line 1028)
                                                ;   {runtime_call}
  0x000000010f83831d: callq  0x000000010f7cd0c0  ; OopMap{[136]=Oop [152]=Oop rax=Oop [184]=Oop [192]=Oop rdx=Oop [144]=Oop [232]=Oop off=6018}
                                                ;*getfield hash
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@164 (line 1033)
                                                ;   {runtime_call}
  0x000000010f838322: mov    %rsi,0x8(%rsp)
  0x000000010f838327: movq   $0x100,(%rsp)
  0x000000010f83832f: callq  0x000000010f7d1a20  ; OopMap{[136]=Oop [152]=Oop [144]=Oop [192]=Oop [184]=Oop rdx=Oop [232]=Oop off=6036}
                                                ;*goto
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@256 (line 1031)
                                                ;   {runtime_call}
  0x000000010f838334: jmpq   0x000000010f83784a
  0x000000010f838339: mov    %rdx,%rdx
  0x000000010f83833c: callq  0x000000010f7cd820  ; OopMap{[136]=Oop [192]=Oop [184]=Oop r8=Oop r11=Oop [144]=Oop r14=Oop [152]=Oop [232]=Oop off=6049}
                                                ;*new  ; - java.util.concurrent.ConcurrentHashMap::putVal@235 (line 1043)
                                                ;   {runtime_call}
  0x000000010f838341: jmpq   0x000000010f8379af
  0x000000010f838346: mov    %rdx,0x8(%rsp)
  0x000000010f83834b: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f838353: callq  0x000000010f7d1a20  ; OopMap{[136]=Oop [192]=Oop [184]=Oop r8=Oop r11=Oop [144]=Oop r14=Oop [152]=Oop rax=Oop [232]=Oop off=6072}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@-1 (line 625)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@244 (line 1043)
                                                ;   {runtime_call}
  0x000000010f838358: jmpq   0x000000010f8379f6
  0x000000010f83835d: mov    %rdx,0x8(%rsp)
  0x000000010f838362: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f83836a: callq  0x000000010f7d1a20  ; OopMap{[136]=Oop [192]=Oop [184]=Oop r8=Oop r11=Oop [144]=Oop r14=Oop [152]=Oop rax=Oop [232]=Oop off=6095}
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 37)
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@1 (line 625)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@244 (line 1043)
                                                ;   {runtime_call}
  0x000000010f83836f: jmpq   0x000000010f837a3d
  0x000000010f838374: movabs $0x0,%rsi          ;   {metadata(NULL)}
  0x000000010f83837e: mov    $0xa050f00,%eax
  0x000000010f838383: callq  0x000000010f7d08e0  ; OopMap{[136]=Oop [192]=Oop r11=Oop [144]=Oop r14=Oop [152]=Oop rdi=Oop [184]=Oop [232]=Oop off=6120}
                                                ;*instanceof
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@264 (line 1049)
                                                ;   {runtime_call}
  0x000000010f838388: jmpq   0x000000010f837b20
  0x000000010f83838d: movabs $0x0,%rbx          ;   {metadata(NULL)}
  0x000000010f838397: mov    $0xa050f00,%eax
  0x000000010f83839c: callq  0x000000010f7d08e0  ; OopMap{[136]=Oop [192]=Oop r11=Oop [144]=Oop r14=Oop [152]=Oop rdi=Oop [184]=Oop [232]=Oop off=6145}
                                                ;*checkcast
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@275 (line 1052)
                                                ;   {runtime_call}
  0x000000010f8383a1: jmpq   0x000000010f837c90
  0x000000010f8383a6: mov    %rdi,(%rsp)
  0x000000010f8383aa: callq  0x000000010f7cf480  ; OopMap{[136]=Oop [192]=Oop r11=Oop [144]=Oop r14=Oop [152]=Oop rdi=Oop [184]=Oop [232]=Oop off=6159}
                                                ;*checkcast
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@275 (line 1052)
                                                ;   {runtime_call}
  0x000000010f8383af: callq  0x000000010f7cd0c0  ; OopMap{[136]=Oop [192]=Oop r11=Oop [144]=Oop r14=Oop [152]=Oop rdi=Oop [184]=Oop rsi=Oop [232]=Oop off=6164}
                                                ;*invokevirtual putTreeVal
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@282 (line 1052)
                                                ;   {runtime_call}
  0x000000010f8383b4: callq  0x000000010f7cd0c0  ; OopMap{[136]=Oop [192]=Oop [152]=Oop [144]=Oop rdi=Oop [184]=Oop rax=Oop [232]=Oop off=6169}
                                                ;*getfield val
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@293 (line 1054)
                                                ;   {runtime_call}
  0x000000010f8383b9: lea    0xe0(%rsp),%rax
  0x000000010f8383c1: mov    %rax,(%rsp)
  0x000000010f8383c5: callq  0x000000010f7d00a0  ;   {runtime_call}
  0x000000010f8383ca: jmpq   0x000000010f837f59
  0x000000010f8383cf: mov    %rdx,0x8(%rsp)
  0x000000010f8383d4: movq   $0x15e,(%rsp)
  0x000000010f8383dc: callq  0x000000010f7d1a20  ; OopMap{[136]=Oop [144]=Oop rcx=Oop [152]=Oop rax=Oop off=6209}
                                                ;*goto
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@350 (line 1069)
                                                ;   {runtime_call}
  0x000000010f8383e1: jmpq   0x000000010f837fdf
  0x000000010f8383e6: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f8383f0: mov    $0xa050f00,%eax
  0x000000010f8383f5: callq  0x000000010f7d08e0  ; OopMap{off=6234}
                                                ;*new  ; - java.util.concurrent.ConcurrentHashMap::putVal@8 (line 1011)
                                                ;   {runtime_call}
  0x000000010f8383fa: jmpq   0x000000010f838168
  0x000000010f8383ff: mov    %rdx,%rdx
  0x000000010f838402: callq  0x000000010f7cd820  ; OopMap{off=6247}
                                                ;*new  ; - java.util.concurrent.ConcurrentHashMap::putVal@8 (line 1011)
                                                ;   {runtime_call}
  0x000000010f838407: jmpq   0x000000010f8381ad
  0x000000010f83840c: lea    0xe0(%rsp),%rax
  0x000000010f838414: mov    %rax,(%rsp)
  0x000000010f838418: callq  0x000000010f7d00a0  ;   {runtime_call}
  0x000000010f83841d: jmpq   0x000000010f838233
  0x000000010f838422: nop
  0x000000010f838423: nop
  0x000000010f838424: mov    0x2a8(%r15),%rax
  0x000000010f83842b: movabs $0x0,%r10
  0x000000010f838435: mov    %r10,0x2a8(%r15)
  0x000000010f83843c: movabs $0x0,%r10
  0x000000010f838446: mov    %r10,0x2b0(%r15)
  0x000000010f83844d: add    $0x100,%rsp
  0x000000010f838454: pop    %rbp
  0x000000010f838455: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f83845a: hlt    
  0x000000010f83845b: hlt    
  0x000000010f83845c: hlt    
  0x000000010f83845d: hlt    
  0x000000010f83845e: hlt    
  0x000000010f83845f: hlt    
[Stub Code]
  0x000000010f838460: nop                       ;   {no_reloc}
  0x000000010f838461: nop
  0x000000010f838462: nop
  0x000000010f838463: nop
  0x000000010f838464: nop
  0x000000010f838465: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f83846f: jmpq   0x000000010f83846f  ;   {runtime_call}
  0x000000010f838474: nop
  0x000000010f838475: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f83847f: jmpq   0x000000010f83847f  ;   {runtime_call}
  0x000000010f838484: nop
  0x000000010f838485: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f83848f: jmpq   0x000000010f83848f  ;   {runtime_call}
  0x000000010f838494: nop
  0x000000010f838495: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f83849f: jmpq   0x000000010f83849f  ;   {runtime_call}
  0x000000010f8384a4: nop
  0x000000010f8384a5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f8384af: jmpq   0x000000010f8384af  ;   {runtime_call}
  0x000000010f8384b4: nop
  0x000000010f8384b5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f8384bf: jmpq   0x000000010f8384bf  ;   {runtime_call}
  0x000000010f8384c4: nop
  0x000000010f8384c5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f8384cf: jmpq   0x000000010f8384cf  ;   {runtime_call}
  0x000000010f8384d4: nop
  0x000000010f8384d5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f8384df: jmpq   0x000000010f8384df  ;   {runtime_call}
[Exception Handler]
  0x000000010f8384e4: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f8384e9: mov    %rsp,-0x28(%rsp)
  0x000000010f8384ee: sub    $0x80,%rsp
  0x000000010f8384f5: mov    %rax,0x78(%rsp)
  0x000000010f8384fa: mov    %rcx,0x70(%rsp)
  0x000000010f8384ff: mov    %rdx,0x68(%rsp)
  0x000000010f838504: mov    %rbx,0x60(%rsp)
  0x000000010f838509: mov    %rbp,0x50(%rsp)
  0x000000010f83850e: mov    %rsi,0x48(%rsp)
  0x000000010f838513: mov    %rdi,0x40(%rsp)
  0x000000010f838518: mov    %r8,0x38(%rsp)
  0x000000010f83851d: mov    %r9,0x30(%rsp)
  0x000000010f838522: mov    %r10,0x28(%rsp)
  0x000000010f838527: mov    %r11,0x20(%rsp)
  0x000000010f83852c: mov    %r12,0x18(%rsp)
  0x000000010f838531: mov    %r13,0x10(%rsp)
  0x000000010f838536: mov    %r14,0x8(%rsp)
  0x000000010f83853b: mov    %r15,(%rsp)
  0x000000010f83853f: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f838549: movabs $0x10f8384e9,%rsi  ;   {internal_word}
  0x000000010f838553: mov    %rsp,%rdx
  0x000000010f838556: and    $0xfffffffffffffff0,%rsp
  0x000000010f83855a: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f83855f: hlt    
[Deopt Handler Code]
  0x000000010f838560: movabs $0x10f838560,%r10  ;   {section_word}
  0x000000010f83856a: push   %r10
  0x000000010f83856c: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f838571: hlt    
  0x000000010f838572: hlt    
  0x000000010f838573: hlt    
  0x000000010f838574: hlt    
  0x000000010f838575: hlt    
  0x000000010f838576: hlt    
  0x000000010f838577: hlt    
Decoding compiled method 0x000000010f834110:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010ee67ea8} 'lambda$main$0' '()V' in 'cacheline/T04_CacheLinePadding'
  0x000000010f834280: mov    %eax,-0x14000(%rsp)
  0x000000010f834287: push   %rbp
  0x000000010f834288: sub    $0x40,%rsp
  0x000000010f83428c: movabs $0x10ee683c0,%rsi  ;   {metadata(method data for {method} {0x000000010ee67ea8} 'lambda$main$0' '()V' in 'cacheline/T04_CacheLinePadding')}
  0x000000010f834296: mov    0xdc(%rsi),%edi
  0x000000010f83429c: add    $0x8,%edi
  0x000000010f83429f: mov    %edi,0xdc(%rsi)
  0x000000010f8342a5: movabs $0x10ee67ea8,%rsi  ;   {metadata({method} {0x000000010ee67ea8} 'lambda$main$0' '()V' in 'cacheline/T04_CacheLinePadding')}
  0x000000010f8342af: and    $0x1ff8,%edi
  0x000000010f8342b5: cmp    $0x0,%edi
  0x000000010f8342b8: je     0x000000010f8343a2  ;*iconst_0
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@0 (line 8)

  0x000000010f8342be: mov    $0x0,%esi
  0x000000010f8342c3: jmpq   0x000000010f834337  ;*iload_0
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@2 (line 8)

  0x000000010f8342c8: movabs $0x795865e88,%rdi  ;   {oop(a 'java/lang/Class' = 'cacheline/T04_CacheLinePadding')}
  0x000000010f8342d2: mov    0x68(%rdi),%edi
  0x000000010f8342d5: shl    $0x3,%rdi          ;*getstatic arr
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@8 (line 9)

  0x000000010f8342d9: movslq %esi,%rbx
  0x000000010f8342dc: cmpl   $0x0,0xc(%rdi)     ; implicit exception: dispatches to 0x000000010f8343b9
  0x000000010f8342e3: jbe    0x000000010f8343c3
  0x000000010f8342e9: mov    %rbx,0x10(%rdi)    ;*lastore
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@14 (line 9)

  0x000000010f8342ed: inc    %esi
  0x000000010f8342ef: movabs $0x10ee683c0,%rdi  ;   {metadata(method data for {method} {0x000000010ee67ea8} 'lambda$main$0' '()V' in 'cacheline/T04_CacheLinePadding')}
  0x000000010f8342f9: mov    0xe0(%rdi),%ebx
  0x000000010f8342ff: add    $0x8,%ebx
  0x000000010f834302: mov    %ebx,0xe0(%rdi)
  0x000000010f834308: movabs $0x10ee67ea8,%rdi  ;   {metadata({method} {0x000000010ee67ea8} 'lambda$main$0' '()V' in 'cacheline/T04_CacheLinePadding')}
  0x000000010f834312: and    $0xfff8,%ebx
  0x000000010f834318: cmp    $0x0,%ebx
  0x000000010f83431b: je     0x000000010f8343d0  ; OopMap{off=161}
                                                ;*goto
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@18 (line 8)

  0x000000010f834321: test   %eax,-0x8d99227(%rip)        # 0x0000000106a9b100
                                                ;   {poll}
  0x000000010f834327: movabs $0x10ee683c0,%rdi  ;   {metadata(method data for {method} {0x000000010ee67ea8} 'lambda$main$0' '()V' in 'cacheline/T04_CacheLinePadding')}
  0x000000010f834331: incl   0x128(%rdi)        ;*goto
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@18 (line 8)

  0x000000010f834337: cmp    $0x3b9aca00,%esi
  0x000000010f83433d: movabs $0x10ee683c0,%rdi  ;   {metadata(method data for {method} {0x000000010ee67ea8} 'lambda$main$0' '()V' in 'cacheline/T04_CacheLinePadding')}
  0x000000010f834347: movabs $0x108,%rbx
  0x000000010f834351: jge    0x000000010f834361
  0x000000010f834357: movabs $0x118,%rbx
  0x000000010f834361: mov    (%rdi,%rbx,1),%rax
  0x000000010f834365: lea    0x1(%rax),%rax
  0x000000010f834369: mov    %rax,(%rdi,%rbx,1)
  0x000000010f83436d: jl     0x000000010f8342c8  ;*if_icmpge
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@5 (line 8)

  0x000000010f834373: add    $0x40,%rsp
  0x000000010f834377: pop    %rbp
  0x000000010f834378: test   %eax,-0x8d9927e(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f83437e: retq                      ;*return
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@21 (line 11)

  0x000000010f83437f: mov    %eax,-0x14000(%rsp)
  0x000000010f834386: push   %rbp
  0x000000010f834387: sub    $0x40,%rsp
  0x000000010f83438b: mov    (%rsi),%ebx
  0x000000010f83438d: mov    %rsi,%rdi
  0x000000010f834390: mov    %ebx,0x28(%rsp)
  0x000000010f834394: callq  0x00000001094e9b52  ;   {runtime_call}
  0x000000010f834399: mov    0x28(%rsp),%ebx
  0x000000010f83439d: mov    %rbx,%rsi
  0x000000010f8343a0: jmp    0x000000010f834337
  0x000000010f8343a2: mov    %rsi,0x8(%rsp)
  0x000000010f8343a7: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f8343af: callq  0x000000010f7d1a20  ; OopMap{off=308}
                                                ;*synchronization entry
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@-1 (line 8)
                                                ;   {runtime_call}
  0x000000010f8343b4: jmpq   0x000000010f8342be
  0x000000010f8343b9: callq  0x000000010f7cd0c0  ; OopMap{rdi=Oop off=318}
                                                ;*lastore
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@14 (line 9)
                                                ;   {runtime_call}
  0x000000010f8343be: callq  0x000000010f7cd0c0  ; OopMap{rdi=Oop off=323}
                                                ;*lastore
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@14 (line 9)
                                                ;   {runtime_call}
  0x000000010f8343c3: movq   $0x0,(%rsp)
  0x000000010f8343cb: callq  0x000000010f7cca00  ; OopMap{rdi=Oop off=336}
                                                ;*lastore
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@14 (line 9)
                                                ;   {runtime_call}
  0x000000010f8343d0: mov    %rdi,0x8(%rsp)
  0x000000010f8343d5: movq   $0x12,(%rsp)
  0x000000010f8343dd: callq  0x000000010f7d1a20  ; OopMap{off=354}
                                                ;*goto
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@18 (line 8)
                                                ;   {runtime_call}
  0x000000010f8343e2: jmpq   0x000000010f834321
  0x000000010f8343e7: nop
  0x000000010f8343e8: nop
  0x000000010f8343e9: mov    0x2a8(%r15),%rax
  0x000000010f8343f0: movabs $0x0,%r10
  0x000000010f8343fa: mov    %r10,0x2a8(%r15)
  0x000000010f834401: movabs $0x0,%r10
  0x000000010f83440b: mov    %r10,0x2b0(%r15)
  0x000000010f834412: add    $0x40,%rsp
  0x000000010f834416: pop    %rbp
  0x000000010f834417: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f83441c: hlt    
  0x000000010f83441d: hlt    
  0x000000010f83441e: hlt    
  0x000000010f83441f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f834420: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f834425: mov    %rsp,-0x28(%rsp)
  0x000000010f83442a: sub    $0x80,%rsp
  0x000000010f834431: mov    %rax,0x78(%rsp)
  0x000000010f834436: mov    %rcx,0x70(%rsp)
  0x000000010f83443b: mov    %rdx,0x68(%rsp)
  0x000000010f834440: mov    %rbx,0x60(%rsp)
  0x000000010f834445: mov    %rbp,0x50(%rsp)
  0x000000010f83444a: mov    %rsi,0x48(%rsp)
  0x000000010f83444f: mov    %rdi,0x40(%rsp)
  0x000000010f834454: mov    %r8,0x38(%rsp)
  0x000000010f834459: mov    %r9,0x30(%rsp)
  0x000000010f83445e: mov    %r10,0x28(%rsp)
  0x000000010f834463: mov    %r11,0x20(%rsp)
  0x000000010f834468: mov    %r12,0x18(%rsp)
  0x000000010f83446d: mov    %r13,0x10(%rsp)
  0x000000010f834472: mov    %r14,0x8(%rsp)
  0x000000010f834477: mov    %r15,(%rsp)
  0x000000010f83447b: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f834485: movabs $0x10f834425,%rsi  ;   {internal_word}
  0x000000010f83448f: mov    %rsp,%rdx
  0x000000010f834492: and    $0xfffffffffffffff0,%rsp
  0x000000010f834496: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f83449b: hlt    
[Deopt Handler Code]
  0x000000010f83449c: movabs $0x10f83449c,%r10  ;   {section_word}
  0x000000010f8344a6: push   %r10
  0x000000010f8344a8: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f8344ad: hlt    
  0x000000010f8344ae: hlt    
  0x000000010f8344af: hlt    
Decoding compiled method 0x000000010f833bd0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010ee67dd8} 'lambda$main$1' '()V' in 'cacheline/T04_CacheLinePadding'
  0x000000010f833d40: mov    %eax,-0x14000(%rsp)
  0x000000010f833d47: push   %rbp
  0x000000010f833d48: sub    $0x40,%rsp
  0x000000010f833d4c: movabs $0x10ee68270,%rsi  ;   {metadata(method data for {method} {0x000000010ee67dd8} 'lambda$main$1' '()V' in 'cacheline/T04_CacheLinePadding')}
  0x000000010f833d56: mov    0xdc(%rsi),%edi
  0x000000010f833d5c: add    $0x8,%edi
  0x000000010f833d5f: mov    %edi,0xdc(%rsi)
  0x000000010f833d65: movabs $0x10ee67dd8,%rsi  ;   {metadata({method} {0x000000010ee67dd8} 'lambda$main$1' '()V' in 'cacheline/T04_CacheLinePadding')}
  0x000000010f833d6f: and    $0x1ff8,%edi
  0x000000010f833d75: cmp    $0x0,%edi
  0x000000010f833d78: je     0x000000010f833e62  ;*iconst_0
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@0 (line 13)

  0x000000010f833d7e: mov    $0x0,%esi
  0x000000010f833d83: jmpq   0x000000010f833df7  ;*iload_0
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@2 (line 13)

  0x000000010f833d88: movabs $0x795865e88,%rdi  ;   {oop(a 'java/lang/Class' = 'cacheline/T04_CacheLinePadding')}
  0x000000010f833d92: mov    0x68(%rdi),%edi
  0x000000010f833d95: shl    $0x3,%rdi          ;*getstatic arr
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@8 (line 14)

  0x000000010f833d99: movslq %esi,%rbx
  0x000000010f833d9c: cmpl   $0x1,0xc(%rdi)     ; implicit exception: dispatches to 0x000000010f833e79
  0x000000010f833da3: jbe    0x000000010f833e83
  0x000000010f833da9: mov    %rbx,0x18(%rdi)    ;*lastore
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@14 (line 14)

  0x000000010f833dad: inc    %esi
  0x000000010f833daf: movabs $0x10ee68270,%rdi  ;   {metadata(method data for {method} {0x000000010ee67dd8} 'lambda$main$1' '()V' in 'cacheline/T04_CacheLinePadding')}
  0x000000010f833db9: mov    0xe0(%rdi),%ebx
  0x000000010f833dbf: add    $0x8,%ebx
  0x000000010f833dc2: mov    %ebx,0xe0(%rdi)
  0x000000010f833dc8: movabs $0x10ee67dd8,%rdi  ;   {metadata({method} {0x000000010ee67dd8} 'lambda$main$1' '()V' in 'cacheline/T04_CacheLinePadding')}
  0x000000010f833dd2: and    $0xfff8,%ebx
  0x000000010f833dd8: cmp    $0x0,%ebx
  0x000000010f833ddb: je     0x000000010f833e90  ; OopMap{off=161}
                                                ;*goto
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@18 (line 13)

  0x000000010f833de1: test   %eax,-0x8d98ce7(%rip)        # 0x0000000106a9b100
                                                ;   {poll}
  0x000000010f833de7: movabs $0x10ee68270,%rdi  ;   {metadata(method data for {method} {0x000000010ee67dd8} 'lambda$main$1' '()V' in 'cacheline/T04_CacheLinePadding')}
  0x000000010f833df1: incl   0x128(%rdi)        ;*goto
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@18 (line 13)

  0x000000010f833df7: cmp    $0x3b9aca00,%esi
  0x000000010f833dfd: movabs $0x10ee68270,%rdi  ;   {metadata(method data for {method} {0x000000010ee67dd8} 'lambda$main$1' '()V' in 'cacheline/T04_CacheLinePadding')}
  0x000000010f833e07: movabs $0x108,%rbx
  0x000000010f833e11: jge    0x000000010f833e21
  0x000000010f833e17: movabs $0x118,%rbx
  0x000000010f833e21: mov    (%rdi,%rbx,1),%rax
  0x000000010f833e25: lea    0x1(%rax),%rax
  0x000000010f833e29: mov    %rax,(%rdi,%rbx,1)
  0x000000010f833e2d: jl     0x000000010f833d88  ;*if_icmpge
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@5 (line 13)

  0x000000010f833e33: add    $0x40,%rsp
  0x000000010f833e37: pop    %rbp
  0x000000010f833e38: test   %eax,-0x8d98d3e(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f833e3e: retq                      ;*return
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@21 (line 16)

  0x000000010f833e3f: mov    %eax,-0x14000(%rsp)
  0x000000010f833e46: push   %rbp
  0x000000010f833e47: sub    $0x40,%rsp
  0x000000010f833e4b: mov    (%rsi),%ebx
  0x000000010f833e4d: mov    %rsi,%rdi
  0x000000010f833e50: mov    %ebx,0x28(%rsp)
  0x000000010f833e54: callq  0x00000001094e9b52  ;   {runtime_call}
  0x000000010f833e59: mov    0x28(%rsp),%ebx
  0x000000010f833e5d: mov    %rbx,%rsi
  0x000000010f833e60: jmp    0x000000010f833df7
  0x000000010f833e62: mov    %rsi,0x8(%rsp)
  0x000000010f833e67: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f833e6f: callq  0x000000010f7d1a20  ; OopMap{off=308}
                                                ;*synchronization entry
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@-1 (line 13)
                                                ;   {runtime_call}
  0x000000010f833e74: jmpq   0x000000010f833d7e
  0x000000010f833e79: callq  0x000000010f7cd0c0  ; OopMap{rdi=Oop off=318}
                                                ;*lastore
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@14 (line 14)
                                                ;   {runtime_call}
  0x000000010f833e7e: callq  0x000000010f7cd0c0  ; OopMap{rdi=Oop off=323}
                                                ;*lastore
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@14 (line 14)
                                                ;   {runtime_call}
  0x000000010f833e83: movq   $0x1,(%rsp)
  0x000000010f833e8b: callq  0x000000010f7cca00  ; OopMap{rdi=Oop off=336}
                                                ;*lastore
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@14 (line 14)
                                                ;   {runtime_call}
  0x000000010f833e90: mov    %rdi,0x8(%rsp)
  0x000000010f833e95: movq   $0x12,(%rsp)
  0x000000010f833e9d: callq  0x000000010f7d1a20  ; OopMap{off=354}
                                                ;*goto
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@18 (line 13)
                                                ;   {runtime_call}
  0x000000010f833ea2: jmpq   0x000000010f833de1
  0x000000010f833ea7: nop
  0x000000010f833ea8: nop
  0x000000010f833ea9: mov    0x2a8(%r15),%rax
  0x000000010f833eb0: movabs $0x0,%r10
  0x000000010f833eba: mov    %r10,0x2a8(%r15)
  0x000000010f833ec1: movabs $0x0,%r10
  0x000000010f833ecb: mov    %r10,0x2b0(%r15)
  0x000000010f833ed2: add    $0x40,%rsp
  0x000000010f833ed6: pop    %rbp
  0x000000010f833ed7: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f833edc: hlt    
  0x000000010f833edd: hlt    
  0x000000010f833ede: hlt    
  0x000000010f833edf: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f833ee0: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f833ee5: mov    %rsp,-0x28(%rsp)
  0x000000010f833eea: sub    $0x80,%rsp
  0x000000010f833ef1: mov    %rax,0x78(%rsp)
  0x000000010f833ef6: mov    %rcx,0x70(%rsp)
  0x000000010f833efb: mov    %rdx,0x68(%rsp)
  0x000000010f833f00: mov    %rbx,0x60(%rsp)
  0x000000010f833f05: mov    %rbp,0x50(%rsp)
  0x000000010f833f0a: mov    %rsi,0x48(%rsp)
  0x000000010f833f0f: mov    %rdi,0x40(%rsp)
  0x000000010f833f14: mov    %r8,0x38(%rsp)
  0x000000010f833f19: mov    %r9,0x30(%rsp)
  0x000000010f833f1e: mov    %r10,0x28(%rsp)
  0x000000010f833f23: mov    %r11,0x20(%rsp)
  0x000000010f833f28: mov    %r12,0x18(%rsp)
  0x000000010f833f2d: mov    %r13,0x10(%rsp)
  0x000000010f833f32: mov    %r14,0x8(%rsp)
  0x000000010f833f37: mov    %r15,(%rsp)
  0x000000010f833f3b: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f833f45: movabs $0x10f833ee5,%rsi  ;   {internal_word}
  0x000000010f833f4f: mov    %rsp,%rdx
  0x000000010f833f52: and    $0xfffffffffffffff0,%rsp
  0x000000010f833f56: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f833f5b: hlt    
[Deopt Handler Code]
  0x000000010f833f5c: movabs $0x10f833f5c,%r10  ;   {section_word}
  0x000000010f833f66: push   %r10
  0x000000010f833f68: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f833f6d: hlt    
  0x000000010f833f6e: hlt    
  0x000000010f833f6f: hlt    
Decoding compiled method 0x000000010f833510:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010ee67ea8} 'lambda$main$0' '()V' in 'cacheline/T04_CacheLinePadding'
  0x000000010f833660: callq  0x000000010948a904  ;   {runtime_call}
  0x000000010f833665: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f833670: mov    %eax,-0x14000(%rsp)
  0x000000010f833677: push   %rbp
  0x000000010f833678: sub    $0x20,%rsp
  0x000000010f83367c: mov    (%rsi),%ebx
  0x000000010f83367e: mov    %rsi,%rdi
  0x000000010f833681: movabs $0x1094e9b52,%r10
  0x000000010f83368b: callq  *%r10              ;*iload_0
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@2 (line 8)

  0x000000010f83368e: cmp    $0x3b9aca00,%ebx
  0x000000010f833694: jge    0x000000010f833809  ;*if_icmpge
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@5 (line 8)

  0x000000010f83369a: mov    %ebx,%r11d
  0x000000010f83369d: inc    %r11d
  0x000000010f8336a0: movabs $0x795865e88,%rdx  ;   {oop(a 'java/lang/Class' = 'cacheline/T04_CacheLinePadding')}
  0x000000010f8336aa: mov    0x68(%rdx),%r8d    ;*getstatic arr
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@8 (line 9)

  0x000000010f8336ae: movslq %ebx,%rdi          ;*i2l  ; - cacheline.T04_CacheLinePadding::lambda$main$0@13 (line 9)

  0x000000010f8336b1: mov    0xc(%r12,%r8,8),%r9d  ; implicit exception: dispatches to 0x000000010f83381e
  0x000000010f8336b6: test   %r9d,%r9d
  0x000000010f8336b9: jbe    0x000000010f833803
  0x000000010f8336bf: mov    %rdi,0x10(%r12,%r8,8)  ;*goto
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@18 (line 8)

  0x000000010f8336c4: mov    0x68(%rdx),%r8d    ;*getstatic arr
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@8 (line 9)

  0x000000010f8336c8: mov    %ebx,%r9d
  0x000000010f8336cb: inc    %r9d               ;*iinc
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@15 (line 8)

  0x000000010f8336ce: cmp    %r11d,%r9d
  0x000000010f8336d1: jge    0x000000010f8336d8  ;*if_icmpge
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@5 (line 8)

  0x000000010f8336d3: mov    %r9d,%ebx
  0x000000010f8336d6: jmp    0x000000010f8336ae
  0x000000010f8336d8: cmp    $0x3b9ac9fd,%r9d
  0x000000010f8336df: jge    0x000000010f833763
  0x000000010f8336e5: data16 data16 nopw 0x0(%rax,%rax,1)
                                                ;*iload_0
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@2 (line 8)

  0x000000010f8336f0: movslq %r9d,%rdi          ;*getstatic arr
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@8 (line 9)

  0x000000010f8336f3: mov    0xc(%r12,%r8,8),%r10d  ; implicit exception: dispatches to 0x000000010f833813
  0x000000010f8336f8: test   %r10d,%r10d
  0x000000010f8336fb: jbe    0x000000010f833772
  0x000000010f8336fd: mov    %rdi,0x10(%r12,%r8,8)  ;*iload_0
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@2 (line 8)

  0x000000010f833702: mov    0x68(%rdx),%r10d
  0x000000010f833706: mov    %rdi,%r11
  0x000000010f833709: add    $0x1,%r11          ;*getstatic arr
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@8 (line 9)

  0x000000010f83370d: mov    0xc(%r12,%r10,8),%ecx  ; implicit exception: dispatches to 0x000000010f83381b
  0x000000010f833712: test   %ecx,%ecx
  0x000000010f833714: jbe    0x000000010f83378b
  0x000000010f833716: mov    %r11,0x10(%r12,%r10,8)  ;*iload_0
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@2 (line 8)

  0x000000010f83371b: mov    0x68(%rdx),%r10d
  0x000000010f83371f: mov    %rdi,%r11
  0x000000010f833722: add    $0x2,%r11          ;*getstatic arr
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@8 (line 9)

  0x000000010f833726: mov    0xc(%r12,%r10,8),%r8d  ; implicit exception: dispatches to 0x000000010f833816
  0x000000010f83372b: test   %r8d,%r8d
  0x000000010f83372e: jbe    0x000000010f83377b
  0x000000010f833730: mov    %r11,0x10(%r12,%r10,8)  ;*iload_0
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@2 (line 8)

  0x000000010f833735: mov    0x68(%rdx),%r10d
  0x000000010f833739: add    $0x3,%rdi          ;*getstatic arr
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@8 (line 9)

  0x000000010f83373d: mov    0xc(%r12,%r10,8),%r11d  ; implicit exception: dispatches to 0x000000010f83381e
  0x000000010f833742: mov    %r9d,%ebx
  0x000000010f833745: add    $0x3,%ebx          ;*iinc
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@15 (line 8)

  0x000000010f833748: test   %r11d,%r11d
  0x000000010f83374b: jbe    0x000000010f833799
  0x000000010f83374d: mov    %rdi,0x10(%r12,%r10,8)  ;*goto
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@18 (line 8)

  0x000000010f833752: mov    0x68(%rdx),%r8d    ;*getstatic arr
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@8 (line 9)

  0x000000010f833756: add    $0x4,%r9d          ;*iinc
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@15 (line 8)

  0x000000010f83375a: cmp    $0x3b9ac9fd,%r9d
  0x000000010f833761: jl     0x000000010f8336f0  ;*if_icmpge
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@5 (line 8)

  0x000000010f833763: cmp    $0x3b9aca00,%r9d
  0x000000010f83376a: jge    0x000000010f83380e
  0x000000010f833770: jmp    0x000000010f8337c3
  0x000000010f833772: lea    (%r12,%r8,8),%rbp
  0x000000010f833776: mov    %rdi,%r11
  0x000000010f833779: jmp    0x000000010f833783
  0x000000010f83377b: lea    (%r12,%r10,8),%rbp  ;*getstatic arr
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@8 (line 9)

  0x000000010f83377f: add    $0x2,%r9d          ;*iinc
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@15 (line 8)

  0x000000010f833783: mov    %r11,%rdi
  0x000000010f833786: mov    %r9d,%ebx
  0x000000010f833789: jmp    0x000000010f83379d
  0x000000010f83378b: lea    (%r12,%r10,8),%rbp  ;*getstatic arr
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@8 (line 9)

  0x000000010f83378f: mov    %r9d,%ebx
  0x000000010f833792: inc    %ebx               ;*iinc
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@15 (line 8)

  0x000000010f833794: mov    %r11,%rdi
  0x000000010f833797: jmp    0x000000010f83379d
  0x000000010f833799: lea    (%r12,%r10,8),%rbp  ;*getstatic arr
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@8 (line 9)

  0x000000010f83379d: mov    %ebx,%r9d
  0x000000010f8337a0: mov    $0xffffffe4,%esi
  0x000000010f8337a5: mov    %r9d,(%rsp)
  0x000000010f8337a9: mov    %rdi,0x8(%rsp)
  0x000000010f8337ae: nop
  0x000000010f8337af: callq  0x000000010f7166a0  ; OopMap{rbp=Oop off=340}
                                                ;*lastore
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@14 (line 9)
                                                ;   {runtime_call}
  0x000000010f8337b4: callq  0x000000010948a904  ;*lastore
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@14 (line 9)
                                                ;   {runtime_call}
  0x000000010f8337b9: data16 xchg %ax,%ax
  0x000000010f8337bc: mov    0x68(%rdx),%r8d    ;*getstatic arr
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@8 (line 9)

  0x000000010f8337c0: mov    %r10d,%r9d         ;*iload_0
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@2 (line 8)

  0x000000010f8337c3: movslq %r9d,%rdi          ;*getstatic arr
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@8 (line 9)

  0x000000010f8337c6: mov    0xc(%r12,%r8,8),%r10d  ; implicit exception: dispatches to 0x000000010f83381e
  0x000000010f8337cb: test   %r10d,%r10d
  0x000000010f8337ce: jbe    0x000000010f8337fd
  0x000000010f8337d0: mov    %rdi,0x10(%r12,%r8,8)  ;*goto
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@18 (line 8)

  0x000000010f8337d5: mov    %r9d,%r10d
  0x000000010f8337d8: inc    %r10d              ;*iinc
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@15 (line 8)

  0x000000010f8337db: cmp    $0x3b9aca00,%r10d
  0x000000010f8337e2: jl     0x000000010f8337bc
  0x000000010f8337e4: inc    %r9d               ;*if_icmpge
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@5 (line 8)

  0x000000010f8337e7: mov    $0xffffff65,%esi
  0x000000010f8337ec: mov    %r9d,(%rsp)
  0x000000010f8337f0: data16 xchg %ax,%ax
  0x000000010f8337f3: callq  0x000000010f7166a0  ; OopMap{off=408}
                                                ;*if_icmpge
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@5 (line 8)
                                                ;   {runtime_call}
  0x000000010f8337f8: callq  0x000000010948a904  ;*if_icmpge
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@5 (line 8)
                                                ;   {runtime_call}
  0x000000010f8337fd: lea    (%r12,%r8,8),%rbp
  0x000000010f833801: jmp    0x000000010f8337a0
  0x000000010f833803: lea    (%r12,%r8,8),%rbp  ;*getstatic arr
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@8 (line 9)

  0x000000010f833807: jmp    0x000000010f83379d
  0x000000010f833809: mov    %ebx,%r9d
  0x000000010f83380c: jmp    0x000000010f8337e7
  0x000000010f83380e: mov    %ebx,%r9d
  0x000000010f833811: jmp    0x000000010f8337e4
  0x000000010f833813: mov    %rdi,%r11
  0x000000010f833816: mov    %r11,%rdi
  0x000000010f833819: jmp    0x000000010f83381e
  0x000000010f83381b: mov    %r11,%rdi
  0x000000010f83381e: mov    $0xfffffff6,%esi
  0x000000010f833823: mov    %rdi,%rbp
  0x000000010f833826: nop
  0x000000010f833827: callq  0x000000010f7166a0  ; OopMap{off=460}
                                                ;*lastore
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@14 (line 9)
                                                ;   {runtime_call}
  0x000000010f83382c: callq  0x000000010948a904  ;*lastore
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@14 (line 9)
                                                ;   {runtime_call}
  0x000000010f833831: hlt    
  0x000000010f833832: hlt    
  0x000000010f833833: hlt    
  0x000000010f833834: hlt    
  0x000000010f833835: hlt    
  0x000000010f833836: hlt    
  0x000000010f833837: hlt    
  0x000000010f833838: hlt    
  0x000000010f833839: hlt    
  0x000000010f83383a: hlt    
  0x000000010f83383b: hlt    
  0x000000010f83383c: hlt    
  0x000000010f83383d: hlt    
  0x000000010f83383e: hlt    
  0x000000010f83383f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f833840: jmpq   0x000000010f73fba0  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010f833845: callq  0x000000010f83384a
  0x000000010f83384a: subq   $0x5,(%rsp)
  0x000000010f83384f: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f833854: hlt    
  0x000000010f833855: hlt    
  0x000000010f833856: hlt    
  0x000000010f833857: hlt    
Decoding compiled method 0x000000010f83c390:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010ee67dd8} 'lambda$main$1' '()V' in 'cacheline/T04_CacheLinePadding'
  0x000000010f83c4e0: callq  0x000000010948a904  ;   {runtime_call}
  0x000000010f83c4e5: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f83c4f0: mov    %eax,-0x14000(%rsp)
  0x000000010f83c4f7: push   %rbp
  0x000000010f83c4f8: sub    $0x20,%rsp
  0x000000010f83c4fc: mov    (%rsi),%ebx
  0x000000010f83c4fe: mov    %rsi,%rdi
  0x000000010f83c501: movabs $0x1094e9b52,%r10
  0x000000010f83c50b: callq  *%r10              ;*iload_0
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@2 (line 13)

  0x000000010f83c50e: cmp    $0x3b9aca00,%ebx
  0x000000010f83c514: jge    0x000000010f83c68d  ;*if_icmpge
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@5 (line 13)

  0x000000010f83c51a: mov    %ebx,%r11d
  0x000000010f83c51d: inc    %r11d
  0x000000010f83c520: movabs $0x795865e88,%rdx  ;   {oop(a 'java/lang/Class' = 'cacheline/T04_CacheLinePadding')}
  0x000000010f83c52a: mov    0x68(%rdx),%r8d    ;*getstatic arr
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@8 (line 14)

  0x000000010f83c52e: movslq %ebx,%rdi          ;*i2l  ; - cacheline.T04_CacheLinePadding::lambda$main$1@13 (line 14)

  0x000000010f83c531: mov    0xc(%r12,%r8,8),%r9d  ; implicit exception: dispatches to 0x000000010f83c6a2
  0x000000010f83c536: cmp    $0x1,%r9d
  0x000000010f83c53a: jbe    0x000000010f83c687
  0x000000010f83c540: mov    %rdi,0x18(%r12,%r8,8)  ;*goto
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@18 (line 13)

  0x000000010f83c545: mov    0x68(%rdx),%r8d    ;*getstatic arr
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@8 (line 14)

  0x000000010f83c549: mov    %ebx,%r9d
  0x000000010f83c54c: inc    %r9d               ;*iinc
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@15 (line 13)

  0x000000010f83c54f: cmp    %r11d,%r9d
  0x000000010f83c552: jge    0x000000010f83c559  ;*if_icmpge
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@5 (line 13)

  0x000000010f83c554: mov    %r9d,%ebx
  0x000000010f83c557: jmp    0x000000010f83c52e
  0x000000010f83c559: cmp    $0x3b9ac9fd,%r9d
  0x000000010f83c560: jge    0x000000010f83c5e7
  0x000000010f83c566: data16 nopw 0x0(%rax,%rax,1)  ;*iload_0
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@2 (line 13)

  0x000000010f83c570: movslq %r9d,%rdi          ;*getstatic arr
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@8 (line 14)

  0x000000010f83c573: mov    0xc(%r12,%r8,8),%r10d  ; implicit exception: dispatches to 0x000000010f83c697
  0x000000010f83c578: cmp    $0x1,%r10d
  0x000000010f83c57c: jbe    0x000000010f83c5f6
  0x000000010f83c57e: mov    %rdi,0x18(%r12,%r8,8)  ;*iload_0
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@2 (line 13)

  0x000000010f83c583: mov    0x68(%rdx),%r10d
  0x000000010f83c587: mov    %rdi,%r11
  0x000000010f83c58a: add    $0x1,%r11          ;*getstatic arr
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@8 (line 14)

  0x000000010f83c58e: mov    0xc(%r12,%r10,8),%ecx  ; implicit exception: dispatches to 0x000000010f83c69f
  0x000000010f83c593: cmp    $0x1,%ecx
  0x000000010f83c596: jbe    0x000000010f83c60f
  0x000000010f83c598: mov    %r11,0x18(%r12,%r10,8)  ;*iload_0
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@2 (line 13)

  0x000000010f83c59d: mov    0x68(%rdx),%r10d
  0x000000010f83c5a1: mov    %rdi,%r11
  0x000000010f83c5a4: add    $0x2,%r11          ;*getstatic arr
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@8 (line 14)

  0x000000010f83c5a8: mov    0xc(%r12,%r10,8),%r8d  ; implicit exception: dispatches to 0x000000010f83c69a
  0x000000010f83c5ad: cmp    $0x1,%r8d
  0x000000010f83c5b1: jbe    0x000000010f83c5ff
  0x000000010f83c5b3: mov    %r11,0x18(%r12,%r10,8)  ;*iload_0
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@2 (line 13)

  0x000000010f83c5b8: mov    0x68(%rdx),%r10d
  0x000000010f83c5bc: add    $0x3,%rdi          ;*getstatic arr
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@8 (line 14)

  0x000000010f83c5c0: mov    0xc(%r12,%r10,8),%r11d  ; implicit exception: dispatches to 0x000000010f83c6a2
  0x000000010f83c5c5: mov    %r9d,%ebx
  0x000000010f83c5c8: add    $0x3,%ebx          ;*iinc
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@15 (line 13)

  0x000000010f83c5cb: cmp    $0x1,%r11d
  0x000000010f83c5cf: jbe    0x000000010f83c61d
  0x000000010f83c5d1: mov    %rdi,0x18(%r12,%r10,8)  ;*goto
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@18 (line 13)

  0x000000010f83c5d6: mov    0x68(%rdx),%r8d    ;*getstatic arr
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@8 (line 14)

  0x000000010f83c5da: add    $0x4,%r9d          ;*iinc
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@15 (line 13)

  0x000000010f83c5de: cmp    $0x3b9ac9fd,%r9d
  0x000000010f83c5e5: jl     0x000000010f83c570  ;*if_icmpge
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@5 (line 13)

  0x000000010f83c5e7: cmp    $0x3b9aca00,%r9d
  0x000000010f83c5ee: jge    0x000000010f83c692
  0x000000010f83c5f4: jmp    0x000000010f83c647
  0x000000010f83c5f6: lea    (%r12,%r8,8),%rbp
  0x000000010f83c5fa: mov    %rdi,%r11
  0x000000010f83c5fd: jmp    0x000000010f83c607
  0x000000010f83c5ff: lea    (%r12,%r10,8),%rbp  ;*getstatic arr
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@8 (line 14)

  0x000000010f83c603: add    $0x2,%r9d          ;*iinc
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@15 (line 13)

  0x000000010f83c607: mov    %r11,%rdi
  0x000000010f83c60a: mov    %r9d,%ebx
  0x000000010f83c60d: jmp    0x000000010f83c621
  0x000000010f83c60f: lea    (%r12,%r10,8),%rbp  ;*getstatic arr
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@8 (line 14)

  0x000000010f83c613: mov    %r9d,%ebx
  0x000000010f83c616: inc    %ebx               ;*iinc
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@15 (line 13)

  0x000000010f83c618: mov    %r11,%rdi
  0x000000010f83c61b: jmp    0x000000010f83c621
  0x000000010f83c61d: lea    (%r12,%r10,8),%rbp  ;*getstatic arr
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@8 (line 14)

  0x000000010f83c621: mov    %ebx,%r9d
  0x000000010f83c624: mov    $0xffffffe4,%esi
  0x000000010f83c629: mov    %r9d,(%rsp)
  0x000000010f83c62d: mov    %rdi,0x8(%rsp)
  0x000000010f83c632: nop
  0x000000010f83c633: callq  0x000000010f7166a0  ; OopMap{rbp=Oop off=344}
                                                ;*lastore
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@14 (line 14)
                                                ;   {runtime_call}
  0x000000010f83c638: callq  0x000000010948a904  ;*lastore
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@14 (line 14)
                                                ;   {runtime_call}
  0x000000010f83c63d: data16 xchg %ax,%ax
  0x000000010f83c640: mov    0x68(%rdx),%r8d    ;*getstatic arr
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@8 (line 14)

  0x000000010f83c644: mov    %r10d,%r9d         ;*iload_0
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@2 (line 13)

  0x000000010f83c647: movslq %r9d,%rdi          ;*getstatic arr
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@8 (line 14)

  0x000000010f83c64a: mov    0xc(%r12,%r8,8),%r10d  ; implicit exception: dispatches to 0x000000010f83c6a2
  0x000000010f83c64f: cmp    $0x1,%r10d
  0x000000010f83c653: jbe    0x000000010f83c681
  0x000000010f83c655: mov    %rdi,0x18(%r12,%r8,8)  ;*goto
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@18 (line 13)

  0x000000010f83c65a: mov    %r9d,%r10d
  0x000000010f83c65d: inc    %r10d              ;*iinc
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@15 (line 13)

  0x000000010f83c660: cmp    $0x3b9aca00,%r10d
  0x000000010f83c667: jl     0x000000010f83c640
  0x000000010f83c669: inc    %r9d               ;*if_icmpge
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@5 (line 13)

  0x000000010f83c66c: mov    $0xffffff65,%esi
  0x000000010f83c671: mov    %r9d,(%rsp)
  0x000000010f83c675: xchg   %ax,%ax
  0x000000010f83c677: callq  0x000000010f7166a0  ; OopMap{off=412}
                                                ;*if_icmpge
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@5 (line 13)
                                                ;   {runtime_call}
  0x000000010f83c67c: callq  0x000000010948a904  ;*if_icmpge
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@5 (line 13)
                                                ;   {runtime_call}
  0x000000010f83c681: lea    (%r12,%r8,8),%rbp
  0x000000010f83c685: jmp    0x000000010f83c624
  0x000000010f83c687: lea    (%r12,%r8,8),%rbp  ;*getstatic arr
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@8 (line 14)

  0x000000010f83c68b: jmp    0x000000010f83c621
  0x000000010f83c68d: mov    %ebx,%r9d
  0x000000010f83c690: jmp    0x000000010f83c66c
  0x000000010f83c692: mov    %ebx,%r9d
  0x000000010f83c695: jmp    0x000000010f83c669
  0x000000010f83c697: mov    %rdi,%r11
  0x000000010f83c69a: mov    %r11,%rdi
  0x000000010f83c69d: jmp    0x000000010f83c6a2
  0x000000010f83c69f: mov    %r11,%rdi
  0x000000010f83c6a2: mov    $0xfffffff6,%esi
  0x000000010f83c6a7: mov    %rdi,%rbp
  0x000000010f83c6aa: nop
  0x000000010f83c6ab: callq  0x000000010f7166a0  ; OopMap{off=464}
                                                ;*lastore
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@14 (line 14)
                                                ;   {runtime_call}
  0x000000010f83c6b0: callq  0x000000010948a904  ;*lastore
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@14 (line 14)
                                                ;   {runtime_call}
  0x000000010f83c6b5: hlt    
  0x000000010f83c6b6: hlt    
  0x000000010f83c6b7: hlt    
  0x000000010f83c6b8: hlt    
  0x000000010f83c6b9: hlt    
  0x000000010f83c6ba: hlt    
  0x000000010f83c6bb: hlt    
  0x000000010f83c6bc: hlt    
  0x000000010f83c6bd: hlt    
  0x000000010f83c6be: hlt    
  0x000000010f83c6bf: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f83c6c0: jmpq   0x000000010f73fba0  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010f83c6c5: callq  0x000000010f83c6ca
  0x000000010f83c6ca: subq   $0x5,(%rsp)
  0x000000010f83c6cf: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f83c6d4: hlt    
  0x000000010f83c6d5: hlt    
  0x000000010f83c6d6: hlt    
  0x000000010f83c6d7: hlt    
Decoding compiled method 0x000000010f83ca50:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010ee67ea8} 'lambda$main$0' '()V' in 'cacheline/T04_CacheLinePadding'
  #           [sp+0x30]  (sp of caller)
  0x000000010f83cba0: mov    %eax,-0x14000(%rsp)
  0x000000010f83cba7: push   %rbp
  0x000000010f83cba8: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@-1 (line 8)

  0x000000010f83cbac: xor    %ecx,%ecx
  0x000000010f83cbae: movabs $0x795865e88,%rbx  ;   {oop(a 'java/lang/Class' = 'cacheline/T04_CacheLinePadding')}
  0x000000010f83cbb8: mov    0x68(%rbx),%r11d
  0x000000010f83cbbc: mov    0xc(%r12,%r11,8),%r10d  ; implicit exception: dispatches to 0x000000010f83cd08
  0x000000010f83cbc1: test   %r10d,%r10d
  0x000000010f83cbc4: jbe    0x000000010f83ccef
  0x000000010f83cbca: mov    %r12,0x10(%r12,%r11,8)
  0x000000010f83cbcf: mov    $0x1,%edi
  0x000000010f83cbd4: nopl   0x0(%rax,%rax,1)
  0x000000010f83cbdc: data16 data16 xchg %ax,%ax
  0x000000010f83cbe0: mov    0x68(%rbx),%r10d
  0x000000010f83cbe4: movslq %edi,%rcx
  0x000000010f83cbe7: mov    0xc(%r12,%r10,8),%r8d  ; implicit exception: dispatches to 0x000000010f83ccfd
  0x000000010f83cbec: test   %r8d,%r8d
  0x000000010f83cbef: jbe    0x000000010f83cc61
  0x000000010f83cbf1: mov    %rcx,0x10(%r12,%r10,8)
  0x000000010f83cbf6: mov    0x68(%rbx),%r11d
  0x000000010f83cbfa: mov    %rcx,%r10
  0x000000010f83cbfd: add    $0x1,%r10
  0x000000010f83cc01: mov    0xc(%r12,%r11,8),%r9d  ; implicit exception: dispatches to 0x000000010f83cd05
  0x000000010f83cc06: test   %r9d,%r9d
  0x000000010f83cc09: jbe    0x000000010f83cc79
  0x000000010f83cc0b: mov    %r10,0x10(%r12,%r11,8)
  0x000000010f83cc10: mov    0x68(%rbx),%r11d
  0x000000010f83cc14: mov    %rcx,%r10
  0x000000010f83cc17: add    $0x2,%r10
  0x000000010f83cc1b: mov    0xc(%r12,%r11,8),%r9d  ; implicit exception: dispatches to 0x000000010f83cd00
  0x000000010f83cc20: test   %r9d,%r9d
  0x000000010f83cc23: jbe    0x000000010f83cc6a
  0x000000010f83cc25: mov    %r10,0x10(%r12,%r11,8)
  0x000000010f83cc2a: mov    0x68(%rbx),%r11d
  0x000000010f83cc2e: add    $0x3,%rcx          ;*getstatic arr
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@8 (line 9)

  0x000000010f83cc32: mov    0xc(%r12,%r11,8),%r8d  ; implicit exception: dispatches to 0x000000010f83cd08
  0x000000010f83cc37: mov    %edi,%r9d
  0x000000010f83cc3a: add    $0x3,%r9d          ;*iinc
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@15 (line 8)

  0x000000010f83cc3e: test   %r8d,%r8d
  0x000000010f83cc41: jbe    0x000000010f83cc88
  0x000000010f83cc43: mov    %rcx,0x10(%r12,%r11,8)  ;*getstatic arr
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@8 (line 9)

  0x000000010f83cc48: add    $0x4,%edi          ;*iinc
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@15 (line 8)

  0x000000010f83cc4b: cmp    $0x3b9ac9fd,%edi
  0x000000010f83cc51: jl     0x000000010f83cbe0  ;*if_icmpge
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@5 (line 8)

  0x000000010f83cc53: cmp    $0x3b9aca00,%edi
  0x000000010f83cc59: jge    0x000000010f83ccf8
  0x000000010f83cc5f: jmp    0x000000010f83ccaf
  0x000000010f83cc61: lea    (%r12,%r10,8),%rbp
  0x000000010f83cc65: mov    %rcx,%r10
  0x000000010f83cc68: jmp    0x000000010f83cc71
  0x000000010f83cc6a: lea    (%r12,%r11,8),%rbp  ;*getstatic arr
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@8 (line 9)

  0x000000010f83cc6e: add    $0x2,%edi          ;*iinc
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@15 (line 8)

  0x000000010f83cc71: mov    %r10,%rcx
  0x000000010f83cc74: mov    %edi,%r9d
  0x000000010f83cc77: jmp    0x000000010f83cc8c
  0x000000010f83cc79: lea    (%r12,%r11,8),%rbp  ;*getstatic arr
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@8 (line 9)

  0x000000010f83cc7d: mov    %edi,%r9d
  0x000000010f83cc80: inc    %r9d               ;*iinc
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@15 (line 8)

  0x000000010f83cc83: mov    %r10,%rcx
  0x000000010f83cc86: jmp    0x000000010f83cc8c
  0x000000010f83cc88: lea    (%r12,%r11,8),%rbp  ;*getstatic arr
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@8 (line 9)

  0x000000010f83cc8c: mov    %r9d,%edi
  0x000000010f83cc8f: mov    $0xffffffe4,%esi
  0x000000010f83cc94: mov    %edi,(%rsp)
  0x000000010f83cc97: mov    %rcx,0x8(%rsp)
  0x000000010f83cc9c: data16 xchg %ax,%ax
  0x000000010f83cc9f: callq  0x000000010f7166a0  ; OopMap{rbp=Oop off=260}
                                                ;*lastore
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@14 (line 9)
                                                ;   {runtime_call}
  0x000000010f83cca4: callq  0x000000010948a904  ;*lastore
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@14 (line 9)
                                                ;   {runtime_call}
  0x000000010f83cca9: data16 xchg %ax,%ax
  0x000000010f83ccac: mov    %r11d,%edi
  0x000000010f83ccaf: mov    0x68(%rbx),%r10d
  0x000000010f83ccb3: movslq %edi,%rcx          ;*getstatic arr
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@8 (line 9)

  0x000000010f83ccb6: mov    0xc(%r12,%r10,8),%r8d  ; implicit exception: dispatches to 0x000000010f83cd08
  0x000000010f83ccbb: test   %r8d,%r8d
  0x000000010f83ccbe: jbe    0x000000010f83cce9
  0x000000010f83ccc0: mov    %rcx,0x10(%r12,%r10,8)  ;*lastore
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@14 (line 9)

  0x000000010f83ccc5: mov    %edi,%r11d
  0x000000010f83ccc8: inc    %r11d              ;*iinc
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@15 (line 8)

  0x000000010f83cccb: cmp    $0x3b9aca00,%r11d
  0x000000010f83ccd2: jl     0x000000010f83ccac  ;*if_icmpge
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@5 (line 8)

  0x000000010f83ccd4: inc    %edi               ;*iinc
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@15 (line 8)

  0x000000010f83ccd6: mov    $0xffffff65,%esi
  0x000000010f83ccdb: mov    %edi,(%rsp)
  0x000000010f83ccde: nop
  0x000000010f83ccdf: callq  0x000000010f7166a0  ; OopMap{off=324}
                                                ;*if_icmpge
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@5 (line 8)
                                                ;   {runtime_call}
  0x000000010f83cce4: callq  0x000000010948a904  ;*if_icmpge
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@5 (line 8)
                                                ;   {runtime_call}
  0x000000010f83cce9: lea    (%r12,%r10,8),%rbp
  0x000000010f83cced: jmp    0x000000010f83cc8f
  0x000000010f83ccef: lea    (%r12,%r11,8),%rbp  ;*getstatic arr
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@8 (line 9)

  0x000000010f83ccf3: xor    %r9d,%r9d
  0x000000010f83ccf6: jmp    0x000000010f83cc8c
  0x000000010f83ccf8: mov    %r9d,%edi
  0x000000010f83ccfb: jmp    0x000000010f83ccd4
  0x000000010f83ccfd: mov    %rcx,%r10
  0x000000010f83cd00: mov    %r10,%rcx
  0x000000010f83cd03: jmp    0x000000010f83cd08
  0x000000010f83cd05: mov    %r10,%rcx
  0x000000010f83cd08: mov    $0xfffffff6,%esi
  0x000000010f83cd0d: mov    %rcx,%rbp
  0x000000010f83cd10: data16 xchg %ax,%ax
  0x000000010f83cd13: callq  0x000000010f7166a0  ; OopMap{off=376}
                                                ;*lastore
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@14 (line 9)
                                                ;   {runtime_call}
  0x000000010f83cd18: callq  0x000000010948a904  ;*lastore
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$0@14 (line 9)
                                                ;   {runtime_call}
  0x000000010f83cd1d: hlt    
  0x000000010f83cd1e: hlt    
  0x000000010f83cd1f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f83cd20: jmpq   0x000000010f73fba0  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010f83cd25: callq  0x000000010f83cd2a
  0x000000010f83cd2a: subq   $0x5,(%rsp)
  0x000000010f83cd2f: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f83cd34: hlt    
  0x000000010f83cd35: hlt    
  0x000000010f83cd36: hlt    
  0x000000010f83cd37: hlt    
Decoding compiled method 0x000000010f83cf90:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010ee67dd8} 'lambda$main$1' '()V' in 'cacheline/T04_CacheLinePadding'
  #           [sp+0x30]  (sp of caller)
  0x000000010f83d0e0: mov    %eax,-0x14000(%rsp)
  0x000000010f83d0e7: push   %rbp
  0x000000010f83d0e8: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@-1 (line 13)

  0x000000010f83d0ec: xor    %ecx,%ecx
  0x000000010f83d0ee: movabs $0x795865e88,%rbx  ;   {oop(a 'java/lang/Class' = 'cacheline/T04_CacheLinePadding')}
  0x000000010f83d0f8: mov    0x68(%rbx),%r11d
  0x000000010f83d0fc: mov    0xc(%r12,%r11,8),%r10d  ; implicit exception: dispatches to 0x000000010f83d24c
  0x000000010f83d101: cmp    $0x1,%r10d
  0x000000010f83d105: jbe    0x000000010f83d233
  0x000000010f83d10b: mov    %r12,0x18(%r12,%r11,8)
  0x000000010f83d110: mov    $0x1,%edi
  0x000000010f83d115: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f83d120: mov    0x68(%rbx),%r10d
  0x000000010f83d124: movslq %edi,%rcx
  0x000000010f83d127: mov    0xc(%r12,%r10,8),%r8d  ; implicit exception: dispatches to 0x000000010f83d241
  0x000000010f83d12c: cmp    $0x1,%r8d
  0x000000010f83d130: jbe    0x000000010f83d1a5
  0x000000010f83d132: mov    %rcx,0x18(%r12,%r10,8)
  0x000000010f83d137: mov    0x68(%rbx),%r11d
  0x000000010f83d13b: mov    %rcx,%r10
  0x000000010f83d13e: add    $0x1,%r10
  0x000000010f83d142: mov    0xc(%r12,%r11,8),%r9d  ; implicit exception: dispatches to 0x000000010f83d249
  0x000000010f83d147: cmp    $0x1,%r9d
  0x000000010f83d14b: jbe    0x000000010f83d1bd
  0x000000010f83d14d: mov    %r10,0x18(%r12,%r11,8)
  0x000000010f83d152: mov    0x68(%rbx),%r11d
  0x000000010f83d156: mov    %rcx,%r10
  0x000000010f83d159: add    $0x2,%r10
  0x000000010f83d15d: mov    0xc(%r12,%r11,8),%r9d  ; implicit exception: dispatches to 0x000000010f83d244
  0x000000010f83d162: cmp    $0x1,%r9d
  0x000000010f83d166: jbe    0x000000010f83d1ae
  0x000000010f83d168: mov    %r10,0x18(%r12,%r11,8)
  0x000000010f83d16d: mov    0x68(%rbx),%r11d
  0x000000010f83d171: add    $0x3,%rcx          ;*getstatic arr
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@8 (line 14)

  0x000000010f83d175: mov    0xc(%r12,%r11,8),%r8d  ; implicit exception: dispatches to 0x000000010f83d24c
  0x000000010f83d17a: mov    %edi,%r9d
  0x000000010f83d17d: add    $0x3,%r9d          ;*iinc
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@15 (line 13)

  0x000000010f83d181: cmp    $0x1,%r8d
  0x000000010f83d185: jbe    0x000000010f83d1cc
  0x000000010f83d187: mov    %rcx,0x18(%r12,%r11,8)  ;*getstatic arr
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@8 (line 14)

  0x000000010f83d18c: add    $0x4,%edi          ;*iinc
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@15 (line 13)

  0x000000010f83d18f: cmp    $0x3b9ac9fd,%edi
  0x000000010f83d195: jl     0x000000010f83d120  ;*if_icmpge
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@5 (line 13)

  0x000000010f83d197: cmp    $0x3b9aca00,%edi
  0x000000010f83d19d: jge    0x000000010f83d23c
  0x000000010f83d1a3: jmp    0x000000010f83d1f3
  0x000000010f83d1a5: lea    (%r12,%r10,8),%rbp
  0x000000010f83d1a9: mov    %rcx,%r10
  0x000000010f83d1ac: jmp    0x000000010f83d1b5
  0x000000010f83d1ae: lea    (%r12,%r11,8),%rbp  ;*getstatic arr
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@8 (line 14)

  0x000000010f83d1b2: add    $0x2,%edi          ;*iinc
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@15 (line 13)

  0x000000010f83d1b5: mov    %r10,%rcx
  0x000000010f83d1b8: mov    %edi,%r9d
  0x000000010f83d1bb: jmp    0x000000010f83d1d0
  0x000000010f83d1bd: lea    (%r12,%r11,8),%rbp  ;*getstatic arr
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@8 (line 14)

  0x000000010f83d1c1: mov    %edi,%r9d
  0x000000010f83d1c4: inc    %r9d               ;*iinc
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@15 (line 13)

  0x000000010f83d1c7: mov    %r10,%rcx
  0x000000010f83d1ca: jmp    0x000000010f83d1d0
  0x000000010f83d1cc: lea    (%r12,%r11,8),%rbp  ;*getstatic arr
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@8 (line 14)

  0x000000010f83d1d0: mov    %r9d,%edi
  0x000000010f83d1d3: mov    $0xffffffe4,%esi
  0x000000010f83d1d8: mov    %edi,(%rsp)
  0x000000010f83d1db: mov    %rcx,0x8(%rsp)
  0x000000010f83d1e0: data16 xchg %ax,%ax
  0x000000010f83d1e3: callq  0x000000010f7166a0  ; OopMap{rbp=Oop off=264}
                                                ;*lastore
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@14 (line 14)
                                                ;   {runtime_call}
  0x000000010f83d1e8: callq  0x000000010948a904  ;*lastore
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@14 (line 14)
                                                ;   {runtime_call}
  0x000000010f83d1ed: data16 xchg %ax,%ax
  0x000000010f83d1f0: mov    %r11d,%edi
  0x000000010f83d1f3: mov    0x68(%rbx),%r10d
  0x000000010f83d1f7: movslq %edi,%rcx          ;*getstatic arr
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@8 (line 14)

  0x000000010f83d1fa: mov    0xc(%r12,%r10,8),%r8d  ; implicit exception: dispatches to 0x000000010f83d24c
  0x000000010f83d1ff: cmp    $0x1,%r8d
  0x000000010f83d203: jbe    0x000000010f83d22d
  0x000000010f83d205: mov    %rcx,0x18(%r12,%r10,8)  ;*lastore
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@14 (line 14)

  0x000000010f83d20a: mov    %edi,%r11d
  0x000000010f83d20d: inc    %r11d              ;*iinc
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@15 (line 13)

  0x000000010f83d210: cmp    $0x3b9aca00,%r11d
  0x000000010f83d217: jl     0x000000010f83d1f0  ;*if_icmpge
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@5 (line 13)

  0x000000010f83d219: inc    %edi               ;*iinc
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@15 (line 13)

  0x000000010f83d21b: mov    $0xffffff65,%esi
  0x000000010f83d220: mov    %edi,(%rsp)
  0x000000010f83d223: callq  0x000000010f7166a0  ; OopMap{off=328}
                                                ;*if_icmpge
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@5 (line 13)
                                                ;   {runtime_call}
  0x000000010f83d228: callq  0x000000010948a904  ;*if_icmpge
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@5 (line 13)
                                                ;   {runtime_call}
  0x000000010f83d22d: lea    (%r12,%r10,8),%rbp
  0x000000010f83d231: jmp    0x000000010f83d1d3
  0x000000010f83d233: lea    (%r12,%r11,8),%rbp  ;*getstatic arr
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@8 (line 14)

  0x000000010f83d237: xor    %r9d,%r9d
  0x000000010f83d23a: jmp    0x000000010f83d1d0
  0x000000010f83d23c: mov    %r9d,%edi
  0x000000010f83d23f: jmp    0x000000010f83d219
  0x000000010f83d241: mov    %rcx,%r10
  0x000000010f83d244: mov    %r10,%rcx
  0x000000010f83d247: jmp    0x000000010f83d24c
  0x000000010f83d249: mov    %r10,%rcx
  0x000000010f83d24c: mov    $0xfffffff6,%esi
  0x000000010f83d251: mov    %rcx,%rbp
  0x000000010f83d254: data16 xchg %ax,%ax
  0x000000010f83d257: callq  0x000000010f7166a0  ; OopMap{off=380}
                                                ;*lastore
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@14 (line 14)
                                                ;   {runtime_call}
  0x000000010f83d25c: callq  0x000000010948a904  ;*lastore
                                                ; - cacheline.T04_CacheLinePadding::lambda$main$1@14 (line 14)
                                                ;   {runtime_call}
  0x000000010f83d261: hlt    
  0x000000010f83d262: hlt    
  0x000000010f83d263: hlt    
  0x000000010f83d264: hlt    
  0x000000010f83d265: hlt    
  0x000000010f83d266: hlt    
  0x000000010f83d267: hlt    
  0x000000010f83d268: hlt    
  0x000000010f83d269: hlt    
  0x000000010f83d26a: hlt    
  0x000000010f83d26b: hlt    
  0x000000010f83d26c: hlt    
  0x000000010f83d26d: hlt    
  0x000000010f83d26e: hlt    
  0x000000010f83d26f: hlt    
  0x000000010f83d270: hlt    
  0x000000010f83d271: hlt    
  0x000000010f83d272: hlt    
  0x000000010f83d273: hlt    
  0x000000010f83d274: hlt    
  0x000000010f83d275: hlt    
  0x000000010f83d276: hlt    
  0x000000010f83d277: hlt    
  0x000000010f83d278: hlt    
  0x000000010f83d279: hlt    
  0x000000010f83d27a: hlt    
  0x000000010f83d27b: hlt    
  0x000000010f83d27c: hlt    
  0x000000010f83d27d: hlt    
  0x000000010f83d27e: hlt    
  0x000000010f83d27f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f83d280: jmpq   0x000000010f73fba0  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010f83d285: callq  0x000000010f83d28a
  0x000000010f83d28a: subq   $0x5,(%rsp)
  0x000000010f83d28f: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f83d294: hlt    
  0x000000010f83d295: hlt    
  0x000000010f83d296: hlt    
  0x000000010f83d297: hlt    
Decoding compiled method 0x000000010f83a510:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010ed88b70} 'type' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/Frame'
  # parm0:    rsi:rsi   = 'jdk/internal/org/objectweb/asm/ClassWriter'
  # parm1:    rdx:rdx   = 'java/lang/String'
  #           [sp+0xa0]  (sp of caller)
  0x000000010f83a780: mov    %eax,-0x14000(%rsp)
  0x000000010f83a787: push   %rbp
  0x000000010f83a788: sub    $0x90,%rsp
  0x000000010f83a78f: mov    %rsi,0x50(%rsp)
  0x000000010f83a794: mov    %rdx,0x48(%rsp)
  0x000000010f83a799: movabs $0x10edaca60,%rcx  ;   {metadata(method data for {method} {0x000000010ed88b70} 'type' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f83a7a3: mov    0xdc(%rcx),%edi
  0x000000010f83a7a9: add    $0x8,%edi
  0x000000010f83a7ac: mov    %edi,0xdc(%rcx)
  0x000000010f83a7b2: movabs $0x10ed88b70,%rcx  ;   {metadata({method} {0x000000010ed88b70} 'type' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f83a7bc: and    $0x1ff8,%edi
  0x000000010f83a7c2: cmp    $0x0,%edi
  0x000000010f83a7c5: je     0x000000010f83b5de  ;*aload_1
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@0 (line 655)

  0x000000010f83a7cb: cmp    (%rdx),%rax        ;*invokevirtual charAt
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@2 (line 655)
                                                ; implicit exception: dispatches to 0x000000010f83b5f5
  0x000000010f83a7ce: mov    %rdx,%rcx
  0x000000010f83a7d1: movabs $0x10edaca60,%rdi  ;   {metadata(method data for {method} {0x000000010ed88b70} 'type' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f83a7db: mov    0x8(%rcx),%ecx
  0x000000010f83a7de: shl    $0x3,%rcx
  0x000000010f83a7e2: cmp    0x110(%rdi),%rcx
  0x000000010f83a7e9: jne    0x000000010f83a7f8
  0x000000010f83a7eb: addq   $0x1,0x118(%rdi)
  0x000000010f83a7f3: jmpq   0x000000010f83a85e
  0x000000010f83a7f8: cmp    0x120(%rdi),%rcx
  0x000000010f83a7ff: jne    0x000000010f83a80e
  0x000000010f83a801: addq   $0x1,0x128(%rdi)
  0x000000010f83a809: jmpq   0x000000010f83a85e
  0x000000010f83a80e: cmpq   $0x0,0x110(%rdi)
  0x000000010f83a819: jne    0x000000010f83a832
  0x000000010f83a81b: mov    %rcx,0x110(%rdi)
  0x000000010f83a822: movq   $0x1,0x118(%rdi)
  0x000000010f83a82d: jmpq   0x000000010f83a85e
  0x000000010f83a832: cmpq   $0x0,0x120(%rdi)
  0x000000010f83a83d: jne    0x000000010f83a856
  0x000000010f83a83f: mov    %rcx,0x120(%rdi)
  0x000000010f83a846: movq   $0x1,0x128(%rdi)
  0x000000010f83a851: jmpq   0x000000010f83a85e
  0x000000010f83a856: addq   $0x1,0x108(%rdi)
  0x000000010f83a85e: movabs $0x10ebeb488,%rcx  ;   {metadata(method data for {method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f83a868: mov    0xdc(%rcx),%edi
  0x000000010f83a86e: add    $0x8,%edi
  0x000000010f83a871: mov    %edi,0xdc(%rcx)
  0x000000010f83a877: movabs $0x10ea68db0,%rcx  ;   {metadata({method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f83a881: and    $0x7ffff8,%edi
  0x000000010f83a887: cmp    $0x0,%edi
  0x000000010f83a88a: je     0x000000010f83b5fa
  0x000000010f83a890: movabs $0x10ebeb488,%rcx  ;   {metadata(method data for {method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f83a89a: incl   0x118(%rcx)        ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@2 (line 655)

  0x000000010f83a8a0: mov    0xc(%rdx),%ecx
  0x000000010f83a8a3: shl    $0x3,%rcx          ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@2 (line 655)

  0x000000010f83a8a7: mov    0xc(%rcx),%edi     ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@2 (line 655)
                                                ; implicit exception: dispatches to 0x000000010f83b611
  0x000000010f83a8aa: cmp    $0x0,%edi
  0x000000010f83a8ad: movabs $0x10ebeb488,%rdi  ;   {metadata(method data for {method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f83a8b7: movabs $0x128,%rbx
  0x000000010f83a8c1: jg     0x000000010f83a8d1
  0x000000010f83a8c7: movabs $0x138,%rbx
  0x000000010f83a8d1: mov    (%rdi,%rbx,1),%rax
  0x000000010f83a8d5: lea    0x1(%rax),%rax
  0x000000010f83a8d9: mov    %rax,(%rdi,%rbx,1)
  0x000000010f83a8dd: jle    0x000000010f83b596  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@2 (line 655)

  0x000000010f83a8e3: cmpl   $0x0,0xc(%rcx)
  0x000000010f83a8ea: jbe    0x000000010f83b616
  0x000000010f83a8f0: movzwl 0x10(%rcx),%ecx    ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@2 (line 655)

  0x000000010f83a8f4: and    $0xffff,%ecx
  0x000000010f83a8fa: cmp    $0x28,%ecx
  0x000000010f83a8fd: movabs $0x10edaca60,%rcx  ;   {metadata(method data for {method} {0x000000010ed88b70} 'type' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f83a907: movabs $0x138,%rdi
  0x000000010f83a911: jne    0x000000010f83a921
  0x000000010f83a917: movabs $0x148,%rdi
  0x000000010f83a921: mov    (%rcx,%rdi,1),%rbx
  0x000000010f83a925: lea    0x1(%rbx),%rbx
  0x000000010f83a929: mov    %rbx,(%rcx,%rdi,1)
  0x000000010f83a92d: jne    0x000000010f83aab3  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@7 (line 655)

  0x000000010f83a933: mov    %rdx,%rcx
  0x000000010f83a936: movabs $0x10edaca60,%rdi  ;   {metadata(method data for {method} {0x000000010ed88b70} 'type' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f83a940: mov    0x8(%rcx),%ecx
  0x000000010f83a943: shl    $0x3,%rcx
  0x000000010f83a947: cmp    0x160(%rdi),%rcx
  0x000000010f83a94e: jne    0x000000010f83a95d
  0x000000010f83a950: addq   $0x1,0x168(%rdi)
  0x000000010f83a958: jmpq   0x000000010f83a9c3
  0x000000010f83a95d: cmp    0x170(%rdi),%rcx
  0x000000010f83a964: jne    0x000000010f83a973
  0x000000010f83a966: addq   $0x1,0x178(%rdi)
  0x000000010f83a96e: jmpq   0x000000010f83a9c3
  0x000000010f83a973: cmpq   $0x0,0x160(%rdi)
  0x000000010f83a97e: jne    0x000000010f83a997
  0x000000010f83a980: mov    %rcx,0x160(%rdi)
  0x000000010f83a987: movq   $0x1,0x168(%rdi)
  0x000000010f83a992: jmpq   0x000000010f83a9c3
  0x000000010f83a997: cmpq   $0x0,0x170(%rdi)
  0x000000010f83a9a2: jne    0x000000010f83a9bb
  0x000000010f83a9a4: mov    %rcx,0x170(%rdi)
  0x000000010f83a9ab: movq   $0x1,0x178(%rdi)
  0x000000010f83a9b6: jmpq   0x000000010f83a9c3
  0x000000010f83a9bb: addq   $0x1,0x158(%rdi)
  0x000000010f83a9c3: movabs $0x10ec3ac50,%rcx  ;   {metadata(method data for {method} {0x000000010ea6a098} 'indexOf' '(I)I' in 'java/lang/String')}
  0x000000010f83a9cd: mov    0xdc(%rcx),%edi
  0x000000010f83a9d3: add    $0x8,%edi
  0x000000010f83a9d6: mov    %edi,0xdc(%rcx)
  0x000000010f83a9dc: movabs $0x10ea6a098,%rcx  ;   {metadata({method} {0x000000010ea6a098} 'indexOf' '(I)I' in 'java/lang/String')}
  0x000000010f83a9e6: and    $0x7ffff8,%edi
  0x000000010f83a9ec: cmp    $0x0,%edi
  0x000000010f83a9ef: je     0x000000010f83b623
  0x000000010f83a9f5: mov    %rdx,%rcx
  0x000000010f83a9f8: movabs $0x10ec3ac50,%rdi  ;   {metadata(method data for {method} {0x000000010ea6a098} 'indexOf' '(I)I' in 'java/lang/String')}
  0x000000010f83aa02: mov    0x8(%rcx),%ecx
  0x000000010f83aa05: shl    $0x3,%rcx
  0x000000010f83aa09: cmp    0x110(%rdi),%rcx
  0x000000010f83aa10: jne    0x000000010f83aa1f
  0x000000010f83aa12: addq   $0x1,0x118(%rdi)
  0x000000010f83aa1a: jmpq   0x000000010f83aa85
  0x000000010f83aa1f: cmp    0x120(%rdi),%rcx
  0x000000010f83aa26: jne    0x000000010f83aa35
  0x000000010f83aa28: addq   $0x1,0x128(%rdi)
  0x000000010f83aa30: jmpq   0x000000010f83aa85
  0x000000010f83aa35: cmpq   $0x0,0x110(%rdi)
  0x000000010f83aa40: jne    0x000000010f83aa59
  0x000000010f83aa42: mov    %rcx,0x110(%rdi)
  0x000000010f83aa49: movq   $0x1,0x118(%rdi)
  0x000000010f83aa54: jmpq   0x000000010f83aa85
  0x000000010f83aa59: cmpq   $0x0,0x120(%rdi)
  0x000000010f83aa64: jne    0x000000010f83aa7d
  0x000000010f83aa66: mov    %rcx,0x120(%rdi)
  0x000000010f83aa6d: movq   $0x1,0x128(%rdi)
  0x000000010f83aa78: jmpq   0x000000010f83aa85
  0x000000010f83aa7d: addq   $0x1,0x108(%rdi)
  0x000000010f83aa85: mov    %rdx,%rdi
  0x000000010f83aa88: mov    $0x29,%edx
  0x000000010f83aa8d: mov    $0x0,%ecx
  0x000000010f83aa92: mov    %rdi,%rsi          ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3 (line 1503)
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@13 (line 655)

  0x000000010f83aa95: nop
  0x000000010f83aa96: nop
  0x000000010f83aa97: callq  0x000000010f7170a0  ; OopMap{[72]=Oop [80]=Oop off=796}
                                                ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3 (line 1503)
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@13 (line 655)
                                                ;   {optimized virtual_call}
  0x000000010f83aa9c: inc    %eax
  0x000000010f83aa9e: movabs $0x10edaca60,%rdx  ;   {metadata(method data for {method} {0x000000010ed88b70} 'type' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f83aaa8: incl   0x188(%rdx)
  0x000000010f83aaae: jmpq   0x000000010f83aab8  ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@18 (line 655)

  0x000000010f83aab3: mov    $0x0,%eax          ;*istore_3
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@22 (line 655)

  0x000000010f83aab8: mov    0x48(%rsp),%rdx
  0x000000010f83aabd: movabs $0x10edaca60,%rcx  ;   {metadata(method data for {method} {0x000000010ed88b70} 'type' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f83aac7: mov    0x8(%rdx),%edx
  0x000000010f83aaca: shl    $0x3,%rdx
  0x000000010f83aace: cmp    0x1a8(%rcx),%rdx
  0x000000010f83aad5: jne    0x000000010f83aae4
  0x000000010f83aad7: addq   $0x1,0x1b0(%rcx)
  0x000000010f83aadf: jmpq   0x000000010f83ab4a
  0x000000010f83aae4: cmp    0x1b8(%rcx),%rdx
  0x000000010f83aaeb: jne    0x000000010f83aafa
  0x000000010f83aaed: addq   $0x1,0x1c0(%rcx)
  0x000000010f83aaf5: jmpq   0x000000010f83ab4a
  0x000000010f83aafa: cmpq   $0x0,0x1a8(%rcx)
  0x000000010f83ab05: jne    0x000000010f83ab1e
  0x000000010f83ab07: mov    %rdx,0x1a8(%rcx)
  0x000000010f83ab0e: movq   $0x1,0x1b0(%rcx)
  0x000000010f83ab19: jmpq   0x000000010f83ab4a
  0x000000010f83ab1e: cmpq   $0x0,0x1b8(%rcx)
  0x000000010f83ab29: jne    0x000000010f83ab42
  0x000000010f83ab2b: mov    %rdx,0x1b8(%rcx)
  0x000000010f83ab32: movq   $0x1,0x1c0(%rcx)
  0x000000010f83ab3d: jmpq   0x000000010f83ab4a
  0x000000010f83ab42: addq   $0x1,0x1a0(%rcx)
  0x000000010f83ab4a: movabs $0x10ebeb488,%rdx  ;   {metadata(method data for {method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f83ab54: mov    0xdc(%rdx),%ecx
  0x000000010f83ab5a: add    $0x8,%ecx
  0x000000010f83ab5d: mov    %ecx,0xdc(%rdx)
  0x000000010f83ab63: movabs $0x10ea68db0,%rdx  ;   {metadata({method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f83ab6d: and    $0x7ffff8,%ecx
  0x000000010f83ab73: cmp    $0x0,%ecx
  0x000000010f83ab76: je     0x000000010f83b63a
  0x000000010f83ab7c: cmp    $0x0,%eax
  0x000000010f83ab7f: movabs $0x10ebeb488,%rdx  ;   {metadata(method data for {method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f83ab89: movabs $0x108,%rcx
  0x000000010f83ab93: jl     0x000000010f83aba3
  0x000000010f83ab99: movabs $0x118,%rcx
  0x000000010f83aba3: mov    (%rdx,%rcx,1),%rsi
  0x000000010f83aba7: lea    0x1(%rsi),%rsi
  0x000000010f83abab: mov    %rsi,(%rdx,%rcx,1)
  0x000000010f83abaf: jl     0x000000010f83b54e  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@25 (line 656)

  0x000000010f83abb5: mov    0x48(%rsp),%rdx
  0x000000010f83abba: mov    0xc(%rdx),%ecx
  0x000000010f83abbd: shl    $0x3,%rcx          ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@25 (line 656)

  0x000000010f83abc1: mov    0xc(%rcx),%esi     ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@25 (line 656)
                                                ; implicit exception: dispatches to 0x000000010f83b651
  0x000000010f83abc4: cmp    %esi,%eax
  0x000000010f83abc6: movabs $0x10ebeb488,%rdi  ;   {metadata(method data for {method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f83abd0: movabs $0x128,%rbx
  0x000000010f83abda: jl     0x000000010f83abea
  0x000000010f83abe0: movabs $0x138,%rbx
  0x000000010f83abea: mov    (%rdi,%rbx,1),%r8
  0x000000010f83abee: lea    0x1(%r8),%r8
  0x000000010f83abf2: mov    %r8,(%rdi,%rbx,1)
  0x000000010f83abf6: jge    0x000000010f83b54e  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@25 (line 656)

  0x000000010f83abfc: movslq %eax,%rdi
  0x000000010f83abff: movzwl 0x10(%rcx,%rdi,2),%edi  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@25 (line 656)

  0x000000010f83ac04: and    $0xffff,%edi
  0x000000010f83ac0a: cmp    $0x42,%edi
  0x000000010f83ac0d: je     0x000000010f83b29a
  0x000000010f83ac13: cmp    $0x43,%edi
  0x000000010f83ac16: je     0x000000010f83b29a
  0x000000010f83ac1c: cmp    $0x44,%edi
  0x000000010f83ac1f: je     0x000000010f83b499
  0x000000010f83ac25: cmp    $0x46,%edi
  0x000000010f83ac28: je     0x000000010f83b485
  0x000000010f83ac2e: cmp    $0x49,%edi
  0x000000010f83ac31: je     0x000000010f83b29a
  0x000000010f83ac37: cmp    $0x4a,%edi
  0x000000010f83ac3a: je     0x000000010f83b471
  0x000000010f83ac40: cmp    $0x4c,%edi
  0x000000010f83ac43: je     0x000000010f83b2c2
  0x000000010f83ac49: cmp    $0x53,%edi
  0x000000010f83ac4c: je     0x000000010f83b29a
  0x000000010f83ac52: cmp    $0x56,%edi
  0x000000010f83ac55: je     0x000000010f83b2ae
  0x000000010f83ac5b: cmp    $0x5a,%edi
  0x000000010f83ac5e: je     0x000000010f83b29a  ;*tableswitch
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@28 (line 656)

  0x000000010f83ac64: mov    %rax,%rdi
  0x000000010f83ac67: inc    %edi
  0x000000010f83ac69: jmpq   0x000000010f83ad3e  ;*aload_1
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@186 (line 680)

  0x000000010f83ac6e: xchg   %ax,%ax
  0x000000010f83ac70: cmp    %esi,%edi
  0x000000010f83ac72: movabs $0x10ebeb488,%rbx  ;   {metadata(method data for {method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f83ac7c: movabs $0x128,%r8
  0x000000010f83ac86: jl     0x000000010f83ac96
  0x000000010f83ac8c: movabs $0x138,%r8
  0x000000010f83ac96: mov    (%rbx,%r8,1),%r9
  0x000000010f83ac9a: lea    0x1(%r9),%r9
  0x000000010f83ac9e: mov    %r9,(%rbx,%r8,1)
  0x000000010f83aca2: jge    0x000000010f83b4fe  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@189 (line 680)

  0x000000010f83aca8: movslq %edi,%rbx
  0x000000010f83acab: movzwl 0x10(%rcx,%rbx,2),%ebx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@189 (line 680)

  0x000000010f83acb0: and    $0xffff,%ebx
  0x000000010f83acb6: cmp    $0x5b,%ebx
  0x000000010f83acb9: movabs $0x10edaca60,%r8   ;   {metadata(method data for {method} {0x000000010ed88b70} 'type' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f83acc3: movabs $0x440,%r9
  0x000000010f83accd: jne    0x000000010f83acdd
  0x000000010f83acd3: movabs $0x450,%r9
  0x000000010f83acdd: mov    (%r8,%r9,1),%r11
  0x000000010f83ace1: lea    0x1(%r11),%r11
  0x000000010f83ace5: mov    %r11,(%r8,%r9,1)
  0x000000010f83ace9: jne    0x000000010f83ae43  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@194 (line 680)

  0x000000010f83acef: inc    %edi
  0x000000010f83acf1: movabs $0x10edaca60,%rbx  ;   {metadata(method data for {method} {0x000000010ed88b70} 'type' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f83acfb: mov    0xe0(%rbx),%r8d
  0x000000010f83ad02: add    $0x8,%r8d
  0x000000010f83ad06: mov    %r8d,0xe0(%rbx)
  0x000000010f83ad0d: movabs $0x10ed88b70,%rbx  ;   {metadata({method} {0x000000010ed88b70} 'type' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f83ad17: and    $0xfff8,%r8d
  0x000000010f83ad1e: cmp    $0x0,%r8d
  0x000000010f83ad22: je     0x000000010f83b656  ; OopMap{rcx=Oop rdx=Oop [72]=Oop [80]=Oop off=1448}
                                                ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@200 (line 681)

  0x000000010f83ad28: test   %eax,-0x8d9fc2e(%rip)        # 0x0000000106a9b100
                                                ;   {poll}
  0x000000010f83ad2e: movabs $0x10edaca60,%rbx  ;   {metadata(method data for {method} {0x000000010ed88b70} 'type' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f83ad38: incl   0x460(%rbx)        ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@200 (line 681)

  0x000000010f83ad3e: mov    %rdx,%rbx
  0x000000010f83ad41: movabs $0x10edaca60,%r8   ;   {metadata(method data for {method} {0x000000010ed88b70} 'type' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f83ad4b: mov    0x8(%rbx),%ebx
  0x000000010f83ad4e: shl    $0x3,%rbx
  0x000000010f83ad52: cmp    0x418(%r8),%rbx
  0x000000010f83ad59: jne    0x000000010f83ad68
  0x000000010f83ad5b: addq   $0x1,0x420(%r8)
  0x000000010f83ad63: jmpq   0x000000010f83adce
  0x000000010f83ad68: cmp    0x428(%r8),%rbx
  0x000000010f83ad6f: jne    0x000000010f83ad7e
  0x000000010f83ad71: addq   $0x1,0x430(%r8)
  0x000000010f83ad79: jmpq   0x000000010f83adce
  0x000000010f83ad7e: cmpq   $0x0,0x418(%r8)
  0x000000010f83ad89: jne    0x000000010f83ada2
  0x000000010f83ad8b: mov    %rbx,0x418(%r8)
  0x000000010f83ad92: movq   $0x1,0x420(%r8)
  0x000000010f83ad9d: jmpq   0x000000010f83adce
  0x000000010f83ada2: cmpq   $0x0,0x428(%r8)
  0x000000010f83adad: jne    0x000000010f83adc6
  0x000000010f83adaf: mov    %rbx,0x428(%r8)
  0x000000010f83adb6: movq   $0x1,0x430(%r8)
  0x000000010f83adc1: jmpq   0x000000010f83adce
  0x000000010f83adc6: addq   $0x1,0x410(%r8)
  0x000000010f83adce: movabs $0x10ebeb488,%rbx  ;   {metadata(method data for {method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f83add8: mov    0xdc(%rbx),%r8d
  0x000000010f83addf: add    $0x8,%r8d
  0x000000010f83ade3: mov    %r8d,0xdc(%rbx)
  0x000000010f83adea: movabs $0x10ea68db0,%rbx  ;   {metadata({method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f83adf4: and    $0x7ffff8,%r8d
  0x000000010f83adfb: cmp    $0x0,%r8d
  0x000000010f83adff: je     0x000000010f83b66d
  0x000000010f83ae05: cmp    $0x0,%edi
  0x000000010f83ae08: movabs $0x10ebeb488,%rbx  ;   {metadata(method data for {method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f83ae12: movabs $0x108,%r8
  0x000000010f83ae1c: jl     0x000000010f83ae2c
  0x000000010f83ae22: movabs $0x118,%r8
  0x000000010f83ae2c: mov    (%rbx,%r8,1),%r9
  0x000000010f83ae30: lea    0x1(%r9),%r9
  0x000000010f83ae34: mov    %r9,(%rbx,%r8,1)
  0x000000010f83ae38: jl     0x000000010f83b4fe
  0x000000010f83ae3e: jmpq   0x000000010f83ac70  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@189 (line 680)

  0x000000010f83ae43: mov    %rdx,%rcx
  0x000000010f83ae46: movabs $0x10edaca60,%r8   ;   {metadata(method data for {method} {0x000000010ed88b70} 'type' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f83ae50: mov    0x8(%rcx),%ecx
  0x000000010f83ae53: shl    $0x3,%rcx
  0x000000010f83ae57: cmp    0x480(%r8),%rcx
  0x000000010f83ae5e: jne    0x000000010f83ae6d
  0x000000010f83ae60: addq   $0x1,0x488(%r8)
  0x000000010f83ae68: jmpq   0x000000010f83aed3
  0x000000010f83ae6d: cmp    0x490(%r8),%rcx
  0x000000010f83ae74: jne    0x000000010f83ae83
  0x000000010f83ae76: addq   $0x1,0x498(%r8)
  0x000000010f83ae7e: jmpq   0x000000010f83aed3
  0x000000010f83ae83: cmpq   $0x0,0x480(%r8)
  0x000000010f83ae8e: jne    0x000000010f83aea7
  0x000000010f83ae90: mov    %rcx,0x480(%r8)
  0x000000010f83ae97: movq   $0x1,0x488(%r8)
  0x000000010f83aea2: jmpq   0x000000010f83aed3
  0x000000010f83aea7: cmpq   $0x0,0x490(%r8)
  0x000000010f83aeb2: jne    0x000000010f83aecb
  0x000000010f83aeb4: mov    %rcx,0x490(%r8)
  0x000000010f83aebb: movq   $0x1,0x498(%r8)
  0x000000010f83aec6: jmpq   0x000000010f83aed3
  0x000000010f83aecb: addq   $0x1,0x478(%r8)
  0x000000010f83aed3: movabs $0x10ebeb488,%rcx  ;   {metadata(method data for {method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f83aedd: mov    0xdc(%rcx),%r8d
  0x000000010f83aee4: add    $0x8,%r8d
  0x000000010f83aee8: mov    %r8d,0xdc(%rcx)
  0x000000010f83aeef: movabs $0x10ea68db0,%rcx  ;   {metadata({method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f83aef9: and    $0x7ffff8,%r8d
  0x000000010f83af00: cmp    $0x0,%r8d
  0x000000010f83af04: je     0x000000010f83b684
  0x000000010f83af0a: cmp    $0x0,%edi
  0x000000010f83af0d: movabs $0x10ebeb488,%rcx  ;   {metadata(method data for {method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f83af17: movabs $0x108,%r8
  0x000000010f83af21: jl     0x000000010f83af31
  0x000000010f83af27: movabs $0x118,%r8
  0x000000010f83af31: mov    (%rcx,%r8,1),%r9
  0x000000010f83af35: lea    0x1(%r9),%r9
  0x000000010f83af39: mov    %r9,(%rcx,%r8,1)
  0x000000010f83af3d: jl     0x000000010f83b4ad  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@206 (line 683)

  0x000000010f83af43: cmp    %esi,%edi
  0x000000010f83af45: movabs $0x10ebeb488,%rcx  ;   {metadata(method data for {method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f83af4f: movabs $0x128,%r8
  0x000000010f83af59: jl     0x000000010f83af69
  0x000000010f83af5f: movabs $0x138,%r8
  0x000000010f83af69: mov    (%rcx,%r8,1),%r9
  0x000000010f83af6d: lea    0x1(%r9),%r9
  0x000000010f83af71: mov    %r9,(%rcx,%r8,1)
  0x000000010f83af75: jge    0x000000010f83b4ad  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@206 (line 683)

  0x000000010f83af7b: cmp    $0x42,%ebx
  0x000000010f83af7e: je     0x000000010f83b25d
  0x000000010f83af84: cmp    $0x43,%ebx
  0x000000010f83af87: je     0x000000010f83b23b
  0x000000010f83af8d: cmp    $0x44,%ebx
  0x000000010f83af90: je     0x000000010f83b219
  0x000000010f83af96: cmp    $0x46,%ebx
  0x000000010f83af99: je     0x000000010f83b1f7
  0x000000010f83af9f: cmp    $0x49,%ebx
  0x000000010f83afa2: je     0x000000010f83b1d5
  0x000000010f83afa8: cmp    $0x4a,%ebx
  0x000000010f83afab: je     0x000000010f83b1b3
  0x000000010f83afb1: cmp    $0x53,%ebx
  0x000000010f83afb4: je     0x000000010f83b191
  0x000000010f83afba: cmp    $0x5a,%ebx
  0x000000010f83afbd: je     0x000000010f83b16f  ;*tableswitch
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@209 (line 683)

  0x000000010f83afc3: mov    %eax,0x5c(%rsp)
  0x000000010f83afc7: mov    %rdx,%rcx
  0x000000010f83afca: movabs $0x10edaca60,%r8   ;   {metadata(method data for {method} {0x000000010ed88b70} 'type' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f83afd4: mov    0x8(%rcx),%ecx
  0x000000010f83afd7: shl    $0x3,%rcx
  0x000000010f83afdb: cmp    0x720(%r8),%rcx
  0x000000010f83afe2: jne    0x000000010f83aff1
  0x000000010f83afe4: addq   $0x1,0x728(%r8)
  0x000000010f83afec: jmpq   0x000000010f83b057
  0x000000010f83aff1: cmp    0x730(%r8),%rcx
  0x000000010f83aff8: jne    0x000000010f83b007
  0x000000010f83affa: addq   $0x1,0x738(%r8)
  0x000000010f83b002: jmpq   0x000000010f83b057
  0x000000010f83b007: cmpq   $0x0,0x720(%r8)
  0x000000010f83b012: jne    0x000000010f83b02b
  0x000000010f83b014: mov    %rcx,0x720(%r8)
  0x000000010f83b01b: movq   $0x1,0x728(%r8)
  0x000000010f83b026: jmpq   0x000000010f83b057
  0x000000010f83b02b: cmpq   $0x0,0x730(%r8)
  0x000000010f83b036: jne    0x000000010f83b04f
  0x000000010f83b038: mov    %rcx,0x730(%r8)
  0x000000010f83b03f: movq   $0x1,0x738(%r8)
  0x000000010f83b04a: jmpq   0x000000010f83b057
  0x000000010f83b04f: addq   $0x1,0x718(%r8)
  0x000000010f83b057: mov    %rdi,%rcx
  0x000000010f83b05a: inc    %ecx
  0x000000010f83b05c: movabs $0x10ec39558,%r8   ;   {metadata(method data for {method} {0x000000010ea68c60} 'length' '()I' in 'java/lang/String')}
  0x000000010f83b066: mov    0xdc(%r8),%r9d
  0x000000010f83b06d: add    $0x8,%r9d
  0x000000010f83b071: mov    %r9d,0xdc(%r8)
  0x000000010f83b078: movabs $0x10ea68c60,%r8   ;   {metadata({method} {0x000000010ea68c60} 'length' '()I' in 'java/lang/String')}
  0x000000010f83b082: and    $0x7ffff8,%r9d
  0x000000010f83b089: cmp    $0x0,%r9d
  0x000000010f83b08d: je     0x000000010f83b69b
  0x000000010f83b093: mov    %rdx,%r8
  0x000000010f83b096: movabs $0x10edaca60,%r9   ;   {metadata(method data for {method} {0x000000010ed88b70} 'type' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f83b0a0: mov    0x8(%r8),%r8d
  0x000000010f83b0a4: shl    $0x3,%r8
  0x000000010f83b0a8: cmp    0x750(%r9),%r8
  0x000000010f83b0af: jne    0x000000010f83b0be
  0x000000010f83b0b1: addq   $0x1,0x758(%r9)
  0x000000010f83b0b9: jmpq   0x000000010f83b124
  0x000000010f83b0be: cmp    0x760(%r9),%r8
  0x000000010f83b0c5: jne    0x000000010f83b0d4
  0x000000010f83b0c7: addq   $0x1,0x768(%r9)
  0x000000010f83b0cf: jmpq   0x000000010f83b124
  0x000000010f83b0d4: cmpq   $0x0,0x750(%r9)
  0x000000010f83b0df: jne    0x000000010f83b0f8
  0x000000010f83b0e1: mov    %r8,0x750(%r9)
  0x000000010f83b0e8: movq   $0x1,0x758(%r9)
  0x000000010f83b0f3: jmpq   0x000000010f83b124
  0x000000010f83b0f8: cmpq   $0x0,0x760(%r9)
  0x000000010f83b103: jne    0x000000010f83b11c
  0x000000010f83b105: mov    %r8,0x760(%r9)
  0x000000010f83b10c: movq   $0x1,0x768(%r9)
  0x000000010f83b117: jmpq   0x000000010f83b124
  0x000000010f83b11c: addq   $0x1,0x748(%r9)
  0x000000010f83b124: dec    %esi
  0x000000010f83b126: mov    %rdx,%r8
  0x000000010f83b129: mov    %rcx,%rdx
  0x000000010f83b12c: mov    %rsi,%rcx
  0x000000010f83b12f: mov    %r8,%rsi           ;*invokevirtual substring
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@391 (line 711)

  0x000000010f83b132: mov    %edi,0x58(%rsp)
  0x000000010f83b136: nop
  0x000000010f83b137: callq  0x000000010f7170a0  ; OopMap{[80]=Oop off=2492}
                                                ;*invokevirtual substring
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@391 (line 711)
                                                ;   {optimized virtual_call}
  0x000000010f83b13c: mov    0x50(%rsp),%rsi
  0x000000010f83b141: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x000000010f83b6b2
  0x000000010f83b144: mov    %rsi,%rdx
  0x000000010f83b147: movabs $0x10edaca60,%rdi  ;   {metadata(method data for {method} {0x000000010ed88b70} 'type' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f83b151: addq   $0x1,0x788(%rdi)
  0x000000010f83b159: mov    %rax,%rdx          ;*invokevirtual addType
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@399 (line 712)

  0x000000010f83b15c: nop
  0x000000010f83b15d: nop
  0x000000010f83b15e: nop
  0x000000010f83b15f: callq  0x000000010f7170a0  ; OopMap{off=2532}
                                                ;*invokevirtual addType
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@399 (line 712)
                                                ;   {optimized virtual_call}
  0x000000010f83b164: or     $0x1700000,%eax
  0x000000010f83b16a: jmpq   0x000000010f83b27a  ;*iload
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@405 (line 714)

  0x000000010f83b16f: mov    %edi,0x58(%rsp)
  0x000000010f83b173: mov    %eax,0x5c(%rsp)
  0x000000010f83b177: movabs $0x10edaca60,%rax  ;   {metadata(method data for {method} {0x000000010ed88b70} 'type' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f83b181: incl   0x658(%rax)
  0x000000010f83b187: mov    $0x1000009,%eax
  0x000000010f83b18c: jmpq   0x000000010f83b27a  ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@328 (line 686)

  0x000000010f83b191: mov    %edi,0x58(%rsp)
  0x000000010f83b195: mov    %eax,0x5c(%rsp)
  0x000000010f83b199: movabs $0x10edaca60,%rax  ;   {metadata(method data for {method} {0x000000010ed88b70} 'type' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f83b1a3: incl   0x6a0(%rax)
  0x000000010f83b1a9: mov    $0x100000c,%eax
  0x000000010f83b1ae: jmpq   0x000000010f83b27a  ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@349 (line 695)

  0x000000010f83b1b3: mov    %edi,0x58(%rsp)
  0x000000010f83b1b7: mov    %eax,0x5c(%rsp)
  0x000000010f83b1bb: movabs $0x10edaca60,%rax  ;   {metadata(method data for {method} {0x000000010ed88b70} 'type' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f83b1c5: incl   0x6e8(%rax)
  0x000000010f83b1cb: mov    $0x1000004,%eax
  0x000000010f83b1d0: jmpq   0x000000010f83b27a  ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@370 (line 704)

  0x000000010f83b1d5: mov    %edi,0x58(%rsp)
  0x000000010f83b1d9: mov    %eax,0x5c(%rsp)
  0x000000010f83b1dd: movabs $0x10edaca60,%rax  ;   {metadata(method data for {method} {0x000000010ed88b70} 'type' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f83b1e7: incl   0x6b8(%rax)
  0x000000010f83b1ed: mov    $0x1000001,%eax
  0x000000010f83b1f2: jmpq   0x000000010f83b27a  ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@356 (line 698)

  0x000000010f83b1f7: mov    %edi,0x58(%rsp)
  0x000000010f83b1fb: mov    %eax,0x5c(%rsp)
  0x000000010f83b1ff: movabs $0x10edaca60,%rax  ;   {metadata(method data for {method} {0x000000010ed88b70} 'type' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f83b209: incl   0x6d0(%rax)
  0x000000010f83b20f: mov    $0x1000002,%eax
  0x000000010f83b214: jmpq   0x000000010f83b27a  ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@363 (line 701)

  0x000000010f83b219: mov    %edi,0x58(%rsp)
  0x000000010f83b21d: mov    %eax,0x5c(%rsp)
  0x000000010f83b221: movabs $0x10edaca60,%rax  ;   {metadata(method data for {method} {0x000000010ed88b70} 'type' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f83b22b: incl   0x700(%rax)
  0x000000010f83b231: mov    $0x1000003,%eax
  0x000000010f83b236: jmpq   0x000000010f83b27a  ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@377 (line 707)

  0x000000010f83b23b: mov    %edi,0x58(%rsp)
  0x000000010f83b23f: mov    %eax,0x5c(%rsp)
  0x000000010f83b243: movabs $0x10edaca60,%rax  ;   {metadata(method data for {method} {0x000000010ed88b70} 'type' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f83b24d: incl   0x670(%rax)
  0x000000010f83b253: mov    $0x100000b,%eax
  0x000000010f83b258: jmpq   0x000000010f83b27a  ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@335 (line 689)

  0x000000010f83b25d: mov    %edi,0x58(%rsp)
  0x000000010f83b261: mov    %eax,0x5c(%rsp)
  0x000000010f83b265: movabs $0x10edaca60,%rax  ;   {metadata(method data for {method} {0x000000010ed88b70} 'type' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f83b26f: incl   0x688(%rax)
  0x000000010f83b275: mov    $0x100000a,%eax    ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@342 (line 692)

  0x000000010f83b27a: mov    0x58(%rsp),%edi
  0x000000010f83b27e: sub    0x5c(%rsp),%edi
  0x000000010f83b282: shl    $0x1c,%edi
  0x000000010f83b285: or     %rax,%rdi
  0x000000010f83b288: mov    %rdi,%rax
  0x000000010f83b28b: add    $0x90,%rsp
  0x000000010f83b292: pop    %rbp
  0x000000010f83b293: test   %eax,-0x8da0199(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f83b299: retq                      ;*ireturn
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@415 (line 714)

  0x000000010f83b29a: mov    $0x1000001,%eax
  0x000000010f83b29f: add    $0x90,%rsp
  0x000000010f83b2a6: pop    %rbp
  0x000000010f83b2a7: test   %eax,-0x8da01ad(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f83b2ad: retq                      ;*ireturn
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@148 (line 664)

  0x000000010f83b2ae: mov    $0x0,%eax
  0x000000010f83b2b3: add    $0x90,%rsp
  0x000000010f83b2ba: pop    %rbp
  0x000000010f83b2bb: test   %eax,-0x8da01c1(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f83b2c1: retq                      ;*ireturn
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@145 (line 658)

  0x000000010f83b2c2: mov    %eax,0x5c(%rsp)
  0x000000010f83b2c6: mov    %rdx,%r8
  0x000000010f83b2c9: mov    %r8,%rdx
  0x000000010f83b2cc: movabs $0x10edaca60,%rcx  ;   {metadata(method data for {method} {0x000000010ed88b70} 'type' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f83b2d6: mov    0x8(%rdx),%edx
  0x000000010f83b2d9: shl    $0x3,%rdx
  0x000000010f83b2dd: cmp    0x388(%rcx),%rdx
  0x000000010f83b2e4: jne    0x000000010f83b2f3
  0x000000010f83b2e6: addq   $0x1,0x390(%rcx)
  0x000000010f83b2ee: jmpq   0x000000010f83b359
  0x000000010f83b2f3: cmp    0x398(%rcx),%rdx
  0x000000010f83b2fa: jne    0x000000010f83b309
  0x000000010f83b2fc: addq   $0x1,0x3a0(%rcx)
  0x000000010f83b304: jmpq   0x000000010f83b359
  0x000000010f83b309: cmpq   $0x0,0x388(%rcx)
  0x000000010f83b314: jne    0x000000010f83b32d
  0x000000010f83b316: mov    %rdx,0x388(%rcx)
  0x000000010f83b31d: movq   $0x1,0x390(%rcx)
  0x000000010f83b328: jmpq   0x000000010f83b359
  0x000000010f83b32d: cmpq   $0x0,0x398(%rcx)
  0x000000010f83b338: jne    0x000000010f83b351
  0x000000010f83b33a: mov    %rdx,0x398(%rcx)
  0x000000010f83b341: movq   $0x1,0x3a0(%rcx)
  0x000000010f83b34c: jmpq   0x000000010f83b359
  0x000000010f83b351: addq   $0x1,0x380(%rcx)
  0x000000010f83b359: mov    0x5c(%rsp),%eax
  0x000000010f83b35d: inc    %eax
  0x000000010f83b35f: movabs $0x10ec39558,%rdx  ;   {metadata(method data for {method} {0x000000010ea68c60} 'length' '()I' in 'java/lang/String')}
  0x000000010f83b369: mov    0xdc(%rdx),%ecx
  0x000000010f83b36f: add    $0x8,%ecx
  0x000000010f83b372: mov    %ecx,0xdc(%rdx)
  0x000000010f83b378: movabs $0x10ea68c60,%rdx  ;   {metadata({method} {0x000000010ea68c60} 'length' '()I' in 'java/lang/String')}
  0x000000010f83b382: and    $0x7ffff8,%ecx
  0x000000010f83b388: cmp    $0x0,%ecx
  0x000000010f83b38b: je     0x000000010f83b6b7
  0x000000010f83b391: mov    %r8,%rdx
  0x000000010f83b394: movabs $0x10edaca60,%rcx  ;   {metadata(method data for {method} {0x000000010ed88b70} 'type' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f83b39e: mov    0x8(%rdx),%edx
  0x000000010f83b3a1: shl    $0x3,%rdx
  0x000000010f83b3a5: cmp    0x3b8(%rcx),%rdx
  0x000000010f83b3ac: jne    0x000000010f83b3bb
  0x000000010f83b3ae: addq   $0x1,0x3c0(%rcx)
  0x000000010f83b3b6: jmpq   0x000000010f83b421
  0x000000010f83b3bb: cmp    0x3c8(%rcx),%rdx
  0x000000010f83b3c2: jne    0x000000010f83b3d1
  0x000000010f83b3c4: addq   $0x1,0x3d0(%rcx)
  0x000000010f83b3cc: jmpq   0x000000010f83b421
  0x000000010f83b3d1: cmpq   $0x0,0x3b8(%rcx)
  0x000000010f83b3dc: jne    0x000000010f83b3f5
  0x000000010f83b3de: mov    %rdx,0x3b8(%rcx)
  0x000000010f83b3e5: movq   $0x1,0x3c0(%rcx)
  0x000000010f83b3f0: jmpq   0x000000010f83b421
  0x000000010f83b3f5: cmpq   $0x0,0x3c8(%rcx)
  0x000000010f83b400: jne    0x000000010f83b419
  0x000000010f83b402: mov    %rdx,0x3c8(%rcx)
  0x000000010f83b409: movq   $0x1,0x3d0(%rcx)
  0x000000010f83b414: jmpq   0x000000010f83b421
  0x000000010f83b419: addq   $0x1,0x3b0(%rcx)
  0x000000010f83b421: dec    %esi
  0x000000010f83b423: mov    %rax,%rdx
  0x000000010f83b426: mov    %rsi,%rcx
  0x000000010f83b429: mov    %r8,%rsi           ;*invokevirtual substring
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@168 (line 673)

  0x000000010f83b42c: nop
  0x000000010f83b42d: nop
  0x000000010f83b42e: nop
  0x000000010f83b42f: callq  0x000000010f7170a0  ; OopMap{[80]=Oop off=3252}
                                                ;*invokevirtual substring
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@168 (line 673)
                                                ;   {optimized virtual_call}
  0x000000010f83b434: mov    0x50(%rsp),%rsi
  0x000000010f83b439: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x000000010f83b6ce
  0x000000010f83b43c: mov    %rsi,%rdx
  0x000000010f83b43f: movabs $0x10edaca60,%rdi  ;   {metadata(method data for {method} {0x000000010ed88b70} 'type' '(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)I' in 'jdk/internal/org/objectweb/asm/Frame')}
  0x000000010f83b449: addq   $0x1,0x3f0(%rdi)
  0x000000010f83b451: mov    %rax,%rdx          ;*invokevirtual addType
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@176 (line 674)

  0x000000010f83b454: nop
  0x000000010f83b455: nop
  0x000000010f83b456: nop
  0x000000010f83b457: callq  0x000000010f7170a0  ; OopMap{off=3292}
                                                ;*invokevirtual addType
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@176 (line 674)
                                                ;   {optimized virtual_call}
  0x000000010f83b45c: or     $0x1700000,%eax
  0x000000010f83b462: add    $0x90,%rsp
  0x000000010f83b469: pop    %rbp
  0x000000010f83b46a: test   %eax,-0x8da0370(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f83b470: retq                      ;*ireturn
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@180 (line 674)

  0x000000010f83b471: mov    $0x1000004,%eax
  0x000000010f83b476: add    $0x90,%rsp
  0x000000010f83b47d: pop    %rbp
  0x000000010f83b47e: test   %eax,-0x8da0384(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f83b484: retq                      ;*ireturn
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@154 (line 668)

  0x000000010f83b485: mov    $0x1000002,%eax
  0x000000010f83b48a: add    $0x90,%rsp
  0x000000010f83b491: pop    %rbp
  0x000000010f83b492: test   %eax,-0x8da0398(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f83b498: retq                      ;*ireturn
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@151 (line 666)

  0x000000010f83b499: mov    $0x1000003,%eax
  0x000000010f83b49e: add    $0x90,%rsp
  0x000000010f83b4a5: pop    %rbp
  0x000000010f83b4a6: test   %eax,-0x8da03ac(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f83b4ac: retq                      ;*ireturn
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@157 (line 670)

  0x000000010f83b4ad: mov    %edi,0x58(%rsp)
  0x000000010f83b4b1: mov    %eax,0x5c(%rsp)
  0x000000010f83b4b5: data16 xchg %ax,%ax
  0x000000010f83b4b8: jmpq   0x000000010f83b6e2  ;   {no_reloc}
  0x000000010f83b4bd: add    %al,(%rax)
  0x000000010f83b4bf: add    %al,(%rax)
  0x000000010f83b4c1: add    %ch,%cl
  0x000000010f83b4c3: and    $0x48000002,%eax   ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@206 (line 683)

  0x000000010f83b4c8: mov    %eax,%edx
  0x000000010f83b4ca: movabs $0x10ebeb488,%rbx  ;   {metadata(method data for {method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f83b4d4: addq   $0x1,0x148(%rbx)
  0x000000010f83b4dc: mov    0x58(%rsp),%edx
  0x000000010f83b4e0: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@206 (line 683)

  0x000000010f83b4e3: mov    %rax,0x60(%rsp)
  0x000000010f83b4e8: nop
  0x000000010f83b4e9: nop
  0x000000010f83b4ea: nop
  0x000000010f83b4eb: nop
  0x000000010f83b4ec: nop
  0x000000010f83b4ed: nop
  0x000000010f83b4ee: nop
  0x000000010f83b4ef: callq  0x000000010f7170a0  ; OopMap{[72]=Oop [80]=Oop [96]=Oop off=3444}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@206 (line 683)
                                                ;   {optimized virtual_call}
  0x000000010f83b4f4: mov    0x60(%rsp),%rax
  0x000000010f83b4f9: jmpq   0x000000010f83b796  ;*athrow
                                                ; - java.lang.String::charAt@21 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@206 (line 683)

  0x000000010f83b4fe: mov    %eax,0x5c(%rsp)
  0x000000010f83b502: nopw   0x0(%rax,%rax,1)
  0x000000010f83b508: jmpq   0x000000010f83b708  ;   {no_reloc}
  0x000000010f83b50d: add    %al,(%rax)
  0x000000010f83b50f: add    %al,(%rax)
  0x000000010f83b511: add    %ch,%cl
  0x000000010f83b513: sti    
  0x000000010f83b514: add    %eax,(%rax)
  0x000000010f83b516: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@189 (line 680)

  0x000000010f83b519: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f83b51c: mov    %dh,0x10e(%rsi,%rdi,4)
  0x000000010f83b523: add    %cl,-0x7d(%rax)
  0x000000010f83b526: xchg   %cl,0x1(%rax)
  0x000000010f83b529: add    %al,(%rax)
  0x000000010f83b52b: add    %ecx,-0x75(%rax)
  0x000000010f83b52e: xlat   %ds:(%rbx)
  0x000000010f83b52f: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@189 (line 680)

  0x000000010f83b532: mov    %edi,0x58(%rsp)
  0x000000010f83b536: mov    %rax,0x68(%rsp)
  0x000000010f83b53b: nop
  0x000000010f83b53c: nop
  0x000000010f83b53d: nop
  0x000000010f83b53e: nop
  0x000000010f83b53f: callq  0x000000010f7170a0  ; OopMap{[80]=Oop [72]=Oop [104]=Oop off=3524}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@189 (line 680)
                                                ;   {optimized virtual_call}
  0x000000010f83b544: mov    0x68(%rsp),%rax
  0x000000010f83b549: jmpq   0x000000010f83b796  ;*athrow
                                                ; - java.lang.String::charAt@21 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@189 (line 680)

  0x000000010f83b54e: xchg   %ax,%ax
  0x000000010f83b550: jmpq   0x000000010f83b72e  ;   {no_reloc}
  0x000000010f83b555: add    %al,(%rax)
  0x000000010f83b557: add    %al,(%rax)
  0x000000010f83b559: add    %cl,-0x75(%rax)
  0x000000010f83b55c: clc    
  0x000000010f83b55d: jmpq   0x000000010f83b738  ;*new
                                                ; - java.lang.String::charAt@13 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@25 (line 656)

  0x000000010f83b562: mov    %rax,%rdx
  0x000000010f83b565: movabs $0x10ebeb488,%rsi  ;   {metadata(method data for {method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f83b56f: addq   $0x1,0x148(%rsi)
  0x000000010f83b577: mov    %rdi,%rdx
  0x000000010f83b57a: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@25 (line 656)

  0x000000010f83b57d: mov    %edi,0x5c(%rsp)
  0x000000010f83b581: mov    %rax,0x70(%rsp)
  0x000000010f83b586: nop
  0x000000010f83b587: callq  0x000000010f7170a0  ; OopMap{[72]=Oop [80]=Oop [112]=Oop off=3596}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@25 (line 656)
                                                ;   {optimized virtual_call}
  0x000000010f83b58c: mov    0x70(%rsp),%rax
  0x000000010f83b591: jmpq   0x000000010f83b796  ;*athrow
                                                ; - java.lang.String::charAt@21 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@25 (line 656)

  0x000000010f83b596: xchg   %ax,%ax
  0x000000010f83b598: jmpq   0x000000010f83b754  ;   {no_reloc}
  0x000000010f83b59d: add    %al,(%rax)
  0x000000010f83b59f: add    %al,(%rax)
  0x000000010f83b5a1: add    %ch,%cl
  0x000000010f83b5a3: mov    $0x1,%bh
  0x000000010f83b5a5: add    %al,(%rax)         ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@2 (line 655)

  0x000000010f83b5a7: mov    %rax,%rdx
  0x000000010f83b5aa: movabs $0x10ebeb488,%rbx  ;   {metadata(method data for {method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f83b5b4: addq   $0x1,0x148(%rbx)
  0x000000010f83b5bc: mov    $0x0,%edx
  0x000000010f83b5c1: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@2 (line 655)

  0x000000010f83b5c4: mov    %rax,0x78(%rsp)
  0x000000010f83b5c9: nop
  0x000000010f83b5ca: nop
  0x000000010f83b5cb: nop
  0x000000010f83b5cc: nop
  0x000000010f83b5cd: nop
  0x000000010f83b5ce: nop
  0x000000010f83b5cf: callq  0x000000010f7170a0  ; OopMap{[80]=Oop [120]=Oop [72]=Oop off=3668}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@2 (line 655)
                                                ;   {optimized virtual_call}
  0x000000010f83b5d4: mov    0x78(%rsp),%rax
  0x000000010f83b5d9: jmpq   0x000000010f83b796
  0x000000010f83b5de: mov    %rcx,0x8(%rsp)
  0x000000010f83b5e3: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f83b5eb: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [80]=Oop rdx=Oop [72]=Oop off=3696}
                                                ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@-1 (line 655)
                                                ;   {runtime_call}
  0x000000010f83b5f0: jmpq   0x000000010f83a7cb
  0x000000010f83b5f5: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop [80]=Oop rdx=Oop [72]=Oop off=3706}
                                                ;*invokevirtual charAt
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@2 (line 655)
                                                ;   {runtime_call}
  0x000000010f83b5fa: mov    %rcx,0x8(%rsp)
  0x000000010f83b5ff: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f83b607: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [80]=Oop rdx=Oop [72]=Oop off=3724}
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@2 (line 655)
                                                ;   {runtime_call}
  0x000000010f83b60c: jmpq   0x000000010f83a890
  0x000000010f83b611: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop [80]=Oop rdx=Oop [72]=Oop rcx=Oop off=3734}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@2 (line 655)
                                                ;   {runtime_call}
  0x000000010f83b616: movq   $0x0,(%rsp)
  0x000000010f83b61e: callq  0x000000010f7cca00  ; OopMap{rsi=Oop [80]=Oop rdx=Oop [72]=Oop rcx=Oop off=3747}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@2 (line 655)
                                                ;   {runtime_call}
  0x000000010f83b623: mov    %rcx,0x8(%rsp)
  0x000000010f83b628: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f83b630: callq  0x000000010f7d1a20  ; OopMap{rdx=Oop [72]=Oop [80]=Oop off=3765}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1503)
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@13 (line 655)
                                                ;   {runtime_call}
  0x000000010f83b635: jmpq   0x000000010f83a9f5
  0x000000010f83b63a: mov    %rdx,0x8(%rsp)
  0x000000010f83b63f: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f83b647: callq  0x000000010f7d1a20  ; OopMap{[72]=Oop [80]=Oop off=3788}
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@25 (line 656)
                                                ;   {runtime_call}
  0x000000010f83b64c: jmpq   0x000000010f83ab7c
  0x000000010f83b651: callq  0x000000010f7cd0c0  ; OopMap{[80]=Oop rdx=Oop [72]=Oop rcx=Oop off=3798}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@25 (line 656)
                                                ;   {runtime_call}
  0x000000010f83b656: mov    %rbx,0x8(%rsp)
  0x000000010f83b65b: movq   $0xc8,(%rsp)
  0x000000010f83b663: callq  0x000000010f7d1a20  ; OopMap{rcx=Oop rdx=Oop [72]=Oop [80]=Oop off=3816}
                                                ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@200 (line 681)
                                                ;   {runtime_call}
  0x000000010f83b668: jmpq   0x000000010f83ad28
  0x000000010f83b66d: mov    %rbx,0x8(%rsp)
  0x000000010f83b672: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f83b67a: callq  0x000000010f7d1a20  ; OopMap{rcx=Oop rdx=Oop [72]=Oop [80]=Oop off=3839}
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@189 (line 680)
                                                ;   {runtime_call}
  0x000000010f83b67f: jmpq   0x000000010f83ae05
  0x000000010f83b684: mov    %rcx,0x8(%rsp)
  0x000000010f83b689: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f83b691: callq  0x000000010f7d1a20  ; OopMap{rdx=Oop [72]=Oop [80]=Oop off=3862}
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@206 (line 683)
                                                ;   {runtime_call}
  0x000000010f83b696: jmpq   0x000000010f83af0a
  0x000000010f83b69b: mov    %r8,0x8(%rsp)
  0x000000010f83b6a0: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f83b6a8: callq  0x000000010f7d1a20  ; OopMap{rdx=Oop [72]=Oop [80]=Oop off=3885}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@386 (line 711)
                                                ;   {runtime_call}
  0x000000010f83b6ad: jmpq   0x000000010f83b093
  0x000000010f83b6b2: callq  0x000000010f7cd0c0  ; OopMap{rax=Oop rsi=Oop [80]=Oop off=3895}
                                                ;*invokevirtual addType
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@399 (line 712)
                                                ;   {runtime_call}
  0x000000010f83b6b7: mov    %rdx,0x8(%rsp)
  0x000000010f83b6bc: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f83b6c4: callq  0x000000010f7d1a20  ; OopMap{[80]=Oop r8=Oop [72]=Oop off=3913}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@163 (line 673)
                                                ;   {runtime_call}
  0x000000010f83b6c9: jmpq   0x000000010f83b391
  0x000000010f83b6ce: callq  0x000000010f7cd0c0  ; OopMap{rax=Oop rsi=Oop [80]=Oop off=3923}
                                                ;*invokevirtual addType
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@176 (line 674)
                                                ;   {runtime_call}
  0x000000010f83b6d3: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f83b6dd: mov    $0xa050f00,%eax
  0x000000010f83b6e2: callq  0x000000010f7d08e0  ; OopMap{[80]=Oop [72]=Oop off=3943}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@206 (line 683)
                                                ;   {runtime_call}
  0x000000010f83b6e7: jmpq   0x000000010f83b4b8
  0x000000010f83b6ec: mov    %rdx,%rdx
  0x000000010f83b6ef: callq  0x000000010f7cd560  ; OopMap{[80]=Oop [72]=Oop off=3956}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@206 (line 683)
                                                ;   {runtime_call}
  0x000000010f83b6f4: jmpq   0x000000010f83b4c7
  0x000000010f83b6f9: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f83b703: mov    $0xa050f00,%eax
  0x000000010f83b708: callq  0x000000010f7d08e0  ; OopMap{[80]=Oop [72]=Oop off=3981}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@189 (line 680)
                                                ;   {runtime_call}
  0x000000010f83b70d: jmpq   0x000000010f83b508
  0x000000010f83b712: mov    %rdx,%rdx
  0x000000010f83b715: callq  0x000000010f7cd560  ; OopMap{[80]=Oop [72]=Oop off=3994}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@189 (line 680)
                                                ;   {runtime_call}
  0x000000010f83b71a: jmpq   0x000000010f83b517
  0x000000010f83b71f: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f83b729: mov    $0xa050f00,%eax
  0x000000010f83b72e: callq  0x000000010f7d08e0  ; OopMap{[72]=Oop [80]=Oop off=4019}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@25 (line 656)
                                                ;   {runtime_call}
  0x000000010f83b733: jmpq   0x000000010f83b550
  0x000000010f83b738: mov    %rdx,%rdx
  0x000000010f83b73b: callq  0x000000010f7cd560  ; OopMap{[72]=Oop [80]=Oop off=4032}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@25 (line 656)
                                                ;   {runtime_call}
  0x000000010f83b740: jmpq   0x000000010f83b562
  0x000000010f83b745: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f83b74f: mov    $0xa050f00,%eax
  0x000000010f83b754: callq  0x000000010f7d08e0  ; OopMap{[80]=Oop [72]=Oop off=4057}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@2 (line 655)
                                                ;   {runtime_call}
  0x000000010f83b759: jmpq   0x000000010f83b598
  0x000000010f83b75e: mov    %rdx,%rdx
  0x000000010f83b761: callq  0x000000010f7cd560  ; OopMap{[80]=Oop [72]=Oop off=4070}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.Frame::type@2 (line 655)
                                                ;   {runtime_call}
  0x000000010f83b766: jmpq   0x000000010f83b5a7
  0x000000010f83b76b: nop
  0x000000010f83b76c: nop
  0x000000010f83b76d: mov    0x2a8(%r15),%rax
  0x000000010f83b774: movabs $0x0,%r10
  0x000000010f83b77e: mov    %r10,0x2a8(%r15)
  0x000000010f83b785: movabs $0x0,%r10
  0x000000010f83b78f: mov    %r10,0x2b0(%r15)
  0x000000010f83b796: add    $0x90,%rsp
  0x000000010f83b79d: pop    %rbp
  0x000000010f83b79e: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f83b7a3: hlt    
  0x000000010f83b7a4: hlt    
  0x000000010f83b7a5: hlt    
  0x000000010f83b7a6: hlt    
  0x000000010f83b7a7: hlt    
  0x000000010f83b7a8: hlt    
  0x000000010f83b7a9: hlt    
  0x000000010f83b7aa: hlt    
  0x000000010f83b7ab: hlt    
  0x000000010f83b7ac: hlt    
  0x000000010f83b7ad: hlt    
  0x000000010f83b7ae: hlt    
  0x000000010f83b7af: hlt    
  0x000000010f83b7b0: hlt    
  0x000000010f83b7b1: hlt    
  0x000000010f83b7b2: hlt    
  0x000000010f83b7b3: hlt    
  0x000000010f83b7b4: hlt    
  0x000000010f83b7b5: hlt    
  0x000000010f83b7b6: hlt    
  0x000000010f83b7b7: hlt    
  0x000000010f83b7b8: hlt    
  0x000000010f83b7b9: hlt    
  0x000000010f83b7ba: hlt    
  0x000000010f83b7bb: hlt    
  0x000000010f83b7bc: hlt    
  0x000000010f83b7bd: hlt    
  0x000000010f83b7be: hlt    
  0x000000010f83b7bf: hlt    
[Stub Code]
  0x000000010f83b7c0: nop                       ;   {no_reloc}
  0x000000010f83b7c1: nop
  0x000000010f83b7c2: nop
  0x000000010f83b7c3: nop
  0x000000010f83b7c4: nop
  0x000000010f83b7c5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f83b7cf: jmpq   0x000000010f83b7cf  ;   {runtime_call}
  0x000000010f83b7d4: nop
  0x000000010f83b7d5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f83b7df: jmpq   0x000000010f83b7df  ;   {runtime_call}
  0x000000010f83b7e4: nop
  0x000000010f83b7e5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f83b7ef: jmpq   0x000000010f83b7ef  ;   {runtime_call}
  0x000000010f83b7f4: nop
  0x000000010f83b7f5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f83b7ff: jmpq   0x000000010f83b7ff  ;   {runtime_call}
  0x000000010f83b804: nop
  0x000000010f83b805: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f83b80f: jmpq   0x000000010f83b80f  ;   {runtime_call}
  0x000000010f83b814: nop
  0x000000010f83b815: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f83b81f: jmpq   0x000000010f83b81f  ;   {runtime_call}
  0x000000010f83b824: nop
  0x000000010f83b825: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f83b82f: jmpq   0x000000010f83b82f  ;   {runtime_call}
  0x000000010f83b834: nop
  0x000000010f83b835: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f83b83f: jmpq   0x000000010f83b83f  ;   {runtime_call}
  0x000000010f83b844: nop
  0x000000010f83b845: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f83b84f: jmpq   0x000000010f83b84f  ;   {runtime_call}
[Exception Handler]
  0x000000010f83b854: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f83b859: mov    %rsp,-0x28(%rsp)
  0x000000010f83b85e: sub    $0x80,%rsp
  0x000000010f83b865: mov    %rax,0x78(%rsp)
  0x000000010f83b86a: mov    %rcx,0x70(%rsp)
  0x000000010f83b86f: mov    %rdx,0x68(%rsp)
  0x000000010f83b874: mov    %rbx,0x60(%rsp)
  0x000000010f83b879: mov    %rbp,0x50(%rsp)
  0x000000010f83b87e: mov    %rsi,0x48(%rsp)
  0x000000010f83b883: mov    %rdi,0x40(%rsp)
  0x000000010f83b888: mov    %r8,0x38(%rsp)
  0x000000010f83b88d: mov    %r9,0x30(%rsp)
  0x000000010f83b892: mov    %r10,0x28(%rsp)
  0x000000010f83b897: mov    %r11,0x20(%rsp)
  0x000000010f83b89c: mov    %r12,0x18(%rsp)
  0x000000010f83b8a1: mov    %r13,0x10(%rsp)
  0x000000010f83b8a6: mov    %r14,0x8(%rsp)
  0x000000010f83b8ab: mov    %r15,(%rsp)
  0x000000010f83b8af: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f83b8b9: movabs $0x10f83b859,%rsi  ;   {internal_word}
  0x000000010f83b8c3: mov    %rsp,%rdx
  0x000000010f83b8c6: and    $0xfffffffffffffff0,%rsp
  0x000000010f83b8ca: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f83b8cf: hlt    
[Deopt Handler Code]
  0x000000010f83b8d0: movabs $0x10f83b8d0,%r10  ;   {section_word}
  0x000000010f83b8da: push   %r10
  0x000000010f83b8dc: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f83b8e1: hlt    
  0x000000010f83b8e2: hlt    
  0x000000010f83b8e3: hlt    
  0x000000010f83b8e4: hlt    
  0x000000010f83b8e5: hlt    
  0x000000010f83b8e6: hlt    
  0x000000010f83b8e7: hlt    
Decoding compiled method 0x000000010f83d510:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ed2d990} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodType$ConcurrentWeakInternSet'
  # this:     rsi:rsi   = 'java/lang/invoke/MethodType$ConcurrentWeakInternSet'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  #           [sp+0xd0]  (sp of caller)
  0x000000010f83d740: mov    0x8(%rsi),%r10d
  0x000000010f83d744: shl    $0x3,%r10
  0x000000010f83d748: cmp    %rax,%r10
  0x000000010f83d74b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f83d751: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f83d75c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f83d760: mov    %eax,-0x14000(%rsp)
  0x000000010f83d767: push   %rbp
  0x000000010f83d768: sub    $0xc0,%rsp
  0x000000010f83d76f: mov    %rsi,0x78(%rsp)
  0x000000010f83d774: mov    %rdx,0x80(%rsp)
  0x000000010f83d77c: movabs $0x10edbbb38,%rax  ;   {metadata(method data for {method} {0x000000010ed2d990} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodType$ConcurrentWeakInternSet')}
  0x000000010f83d786: mov    0xdc(%rax),%edi
  0x000000010f83d78c: add    $0x8,%edi
  0x000000010f83d78f: mov    %edi,0xdc(%rax)
  0x000000010f83d795: movabs $0x10ed2d990,%rax  ;   {metadata({method} {0x000000010ed2d990} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodType$ConcurrentWeakInternSet')}
  0x000000010f83d79f: and    $0x1ff8,%edi
  0x000000010f83d7a5: cmp    $0x0,%edi
  0x000000010f83d7a8: je     0x000000010f83e183  ;*aload_1
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::get@0 (line 1223)

  0x000000010f83d7ae: cmp    $0x0,%rdx
  0x000000010f83d7b2: movabs $0x10edbbb38,%rax  ;   {metadata(method data for {method} {0x000000010ed2d990} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodType$ConcurrentWeakInternSet')}
  0x000000010f83d7bc: movabs $0x108,%rdi
  0x000000010f83d7c6: jne    0x000000010f83d7d6
  0x000000010f83d7cc: movabs $0x118,%rdi
  0x000000010f83d7d6: mov    (%rax,%rdi,1),%rbx
  0x000000010f83d7da: lea    0x1(%rbx),%rbx
  0x000000010f83d7de: mov    %rbx,(%rax,%rdi,1)
  0x000000010f83d7e2: je     0x000000010f83e0ac  ;*ifnonnull
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::get@1 (line 1223)

  0x000000010f83d7e8: mov    %rsi,%rax
  0x000000010f83d7eb: movabs $0x10edbbb38,%rdi  ;   {metadata(method data for {method} {0x000000010ed2d990} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodType$ConcurrentWeakInternSet')}
  0x000000010f83d7f5: addq   $0x1,0x138(%rdi)
  0x000000010f83d7fd: movabs $0x10eda28b0,%rax  ;   {metadata(method data for {method} {0x000000010ed2db18} 'expungeStaleElements' '()V' in 'java/lang/invoke/MethodType$ConcurrentWeakInternSet')}
  0x000000010f83d807: mov    0xdc(%rax),%edi
  0x000000010f83d80d: add    $0x8,%edi
  0x000000010f83d810: mov    %edi,0xdc(%rax)
  0x000000010f83d816: movabs $0x10ed2db18,%rax  ;   {metadata({method} {0x000000010ed2db18} 'expungeStaleElements' '()V' in 'java/lang/invoke/MethodType$ConcurrentWeakInternSet')}
  0x000000010f83d820: and    $0x7ffff8,%edi
  0x000000010f83d826: cmp    $0x0,%edi
  0x000000010f83d829: je     0x000000010f83e19a
  0x000000010f83d82f: nop
  0x000000010f83d830: mov    0x10(%rsi),%edi
  0x000000010f83d833: shl    $0x3,%rdi          ;*getfield stale
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@1 (line 1264)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::get@13 (line 1224)

  0x000000010f83d837: cmp    (%rdi),%rax        ;*invokevirtual poll
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@4 (line 1264)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::get@13 (line 1224)
                                                ; implicit exception: dispatches to 0x000000010f83e1b1
  0x000000010f83d83a: mov    %rdi,%rax
  0x000000010f83d83d: movabs $0x10eda28b0,%rbx  ;   {metadata(method data for {method} {0x000000010ed2db18} 'expungeStaleElements' '()V' in 'java/lang/invoke/MethodType$ConcurrentWeakInternSet')}
  0x000000010f83d847: mov    0x8(%rax),%eax
  0x000000010f83d84a: shl    $0x3,%rax
  0x000000010f83d84e: cmp    0x110(%rbx),%rax
  0x000000010f83d855: jne    0x000000010f83d864
  0x000000010f83d857: addq   $0x1,0x118(%rbx)
  0x000000010f83d85f: jmpq   0x000000010f83d8ca
  0x000000010f83d864: cmp    0x120(%rbx),%rax
  0x000000010f83d86b: jne    0x000000010f83d87a
  0x000000010f83d86d: addq   $0x1,0x128(%rbx)
  0x000000010f83d875: jmpq   0x000000010f83d8ca
  0x000000010f83d87a: cmpq   $0x0,0x110(%rbx)
  0x000000010f83d885: jne    0x000000010f83d89e
  0x000000010f83d887: mov    %rax,0x110(%rbx)
  0x000000010f83d88e: movq   $0x1,0x118(%rbx)
  0x000000010f83d899: jmpq   0x000000010f83d8ca
  0x000000010f83d89e: cmpq   $0x0,0x120(%rbx)
  0x000000010f83d8a9: jne    0x000000010f83d8c2
  0x000000010f83d8ab: mov    %rax,0x120(%rbx)
  0x000000010f83d8b2: movq   $0x1,0x128(%rbx)
  0x000000010f83d8bd: jmpq   0x000000010f83d8ca
  0x000000010f83d8c2: addq   $0x1,0x108(%rbx)
  0x000000010f83d8ca: movabs $0x10ed93f80,%rax  ;   {metadata(method data for {method} {0x000000010ea90688} 'poll' '()Ljava/lang/ref/Reference;' in 'java/lang/ref/ReferenceQueue')}
  0x000000010f83d8d4: mov    0xdc(%rax),%ebx
  0x000000010f83d8da: add    $0x8,%ebx
  0x000000010f83d8dd: mov    %ebx,0xdc(%rax)
  0x000000010f83d8e3: movabs $0x10ea90688,%rax  ;   {metadata({method} {0x000000010ea90688} 'poll' '()Ljava/lang/ref/Reference;' in 'java/lang/ref/ReferenceQueue')}
  0x000000010f83d8ed: and    $0x7ffff8,%ebx
  0x000000010f83d8f3: cmp    $0x0,%ebx
  0x000000010f83d8f6: je     0x000000010f83e1b6
  0x000000010f83d8fc: mov    0x18(%rdi),%eax
  0x000000010f83d8ff: shl    $0x3,%rax          ;*getfield head
                                                ; - java.lang.ref.ReferenceQueue::poll@1 (line 106)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@4 (line 1264)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::get@13 (line 1224)

  0x000000010f83d903: cmp    $0x0,%rax
  0x000000010f83d907: movabs $0x10ed93f80,%rax  ;   {metadata(method data for {method} {0x000000010ea90688} 'poll' '()Ljava/lang/ref/Reference;' in 'java/lang/ref/ReferenceQueue')}
  0x000000010f83d911: movabs $0x108,%rbx
  0x000000010f83d91b: jne    0x000000010f83d92b
  0x000000010f83d921: movabs $0x118,%rbx
  0x000000010f83d92b: mov    (%rax,%rbx,1),%rcx
  0x000000010f83d92f: lea    0x1(%rcx),%rcx
  0x000000010f83d933: mov    %rcx,(%rax,%rbx,1)
  0x000000010f83d937: jne    0x000000010f83d94c  ;*ifnonnull
                                                ; - java.lang.ref.ReferenceQueue::poll@4 (line 106)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@4 (line 1264)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::get@13 (line 1224)

  0x000000010f83d93d: movabs $0x0,%rdi          ;   {oop(NULL)}
  0x000000010f83d947: jmpq   0x000000010f83da7e  ;*dup
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@7 (line 1264)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::get@13 (line 1224)

  0x000000010f83d94c: mov    0xc(%rdi),%ebx
  0x000000010f83d94f: shl    $0x3,%rbx          ;*getfield lock
                                                ; - java.lang.ref.ReferenceQueue::poll@10 (line 108)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@4 (line 1264)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::get@13 (line 1224)

  0x000000010f83d953: lea    0xa8(%rsp),%rcx
  0x000000010f83d95b: mov    %rbx,0x8(%rcx)
  0x000000010f83d95f: mov    (%rbx),%rax        ; implicit exception: dispatches to 0x000000010f83e1cd
  0x000000010f83d962: mov    %rax,%r8
  0x000000010f83d965: and    $0x7,%r8
  0x000000010f83d969: cmp    $0x5,%r8
  0x000000010f83d96d: jne    0x000000010f83d9f7
  0x000000010f83d973: mov    0x8(%rbx),%r8d
  0x000000010f83d977: shl    $0x3,%r8
  0x000000010f83d97b: mov    0xa8(%r8),%r8
  0x000000010f83d982: or     %r15,%r8
  0x000000010f83d985: xor    %rax,%r8
  0x000000010f83d988: and    $0xffffffffffffff87,%r8
  0x000000010f83d98c: je     0x000000010f83da1f
  0x000000010f83d992: test   $0x7,%r8
  0x000000010f83d999: jne    0x000000010f83d9e3
  0x000000010f83d99b: test   $0x300,%r8
  0x000000010f83d9a2: jne    0x000000010f83d9c1
  0x000000010f83d9a4: and    $0x37f,%rax
  0x000000010f83d9ab: mov    %rax,%r8
  0x000000010f83d9ae: or     %r15,%r8
  0x000000010f83d9b1: lock cmpxchg %r8,(%rbx)
  0x000000010f83d9b6: jne    0x000000010f83e1d2
  0x000000010f83d9bc: jmpq   0x000000010f83da1f
  0x000000010f83d9c1: mov    0x8(%rbx),%r8d
  0x000000010f83d9c5: shl    $0x3,%r8
  0x000000010f83d9c9: mov    0xa8(%r8),%r8
  0x000000010f83d9d0: or     %r15,%r8
  0x000000010f83d9d3: lock cmpxchg %r8,(%rbx)
  0x000000010f83d9d8: jne    0x000000010f83e1d2
  0x000000010f83d9de: jmpq   0x000000010f83da1f
  0x000000010f83d9e3: mov    0x8(%rbx),%r8d
  0x000000010f83d9e7: shl    $0x3,%r8
  0x000000010f83d9eb: mov    0xa8(%r8),%r8
  0x000000010f83d9f2: lock cmpxchg %r8,(%rbx)
  0x000000010f83d9f7: mov    (%rbx),%rax
  0x000000010f83d9fa: or     $0x1,%rax
  0x000000010f83d9fe: mov    %rax,(%rcx)
  0x000000010f83da01: lock cmpxchg %rcx,(%rbx)
  0x000000010f83da06: je     0x000000010f83da1f
  0x000000010f83da0c: sub    %rsp,%rax
  0x000000010f83da0f: and    $0xfffffffffffff007,%rax
  0x000000010f83da16: mov    %rax,(%rcx)
  0x000000010f83da19: jne    0x000000010f83e1d2  ;*monitorenter
                                                ; - java.lang.ref.ReferenceQueue::poll@15 (line 108)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@4 (line 1264)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::get@13 (line 1224)

  0x000000010f83da1f: mov    %rbx,0x88(%rsp)
  0x000000010f83da27: mov    %rdi,%rax
  0x000000010f83da2a: movabs $0x10ed93f80,%rcx  ;   {metadata(method data for {method} {0x000000010ea90688} 'poll' '()Ljava/lang/ref/Reference;' in 'java/lang/ref/ReferenceQueue')}
  0x000000010f83da34: addq   $0x1,0x128(%rcx)
  0x000000010f83da3c: mov    %rdi,%rsi          ;*invokespecial reallyPoll
                                                ; - java.lang.ref.ReferenceQueue::poll@17 (line 109)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@4 (line 1264)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::get@13 (line 1224)

  0x000000010f83da3f: callq  0x000000010f7170a0  ; OopMap{[120]=Oop [136]=Oop [128]=Oop [176]=Oop off=772}
                                                ;*invokespecial reallyPoll
                                                ; - java.lang.ref.ReferenceQueue::poll@17 (line 109)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@4 (line 1264)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::get@13 (line 1224)
                                                ;   {optimized virtual_call}
  0x000000010f83da44: mov    %rax,%rdx          ;*invokespecial reallyPoll
                                                ; - java.lang.ref.ReferenceQueue::poll@17 (line 109)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@4 (line 1264)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::get@13 (line 1224)

  0x000000010f83da47: lea    0xa8(%rsp),%rax
  0x000000010f83da4f: mov    0x8(%rax),%rdi
  0x000000010f83da53: mov    (%rdi),%rsi
  0x000000010f83da56: and    $0x7,%rsi
  0x000000010f83da5a: cmp    $0x5,%rsi
  0x000000010f83da5e: je     0x000000010f83da7b
  0x000000010f83da64: mov    (%rax),%rsi
  0x000000010f83da67: test   %rsi,%rsi
  0x000000010f83da6a: je     0x000000010f83da7b
  0x000000010f83da70: lock cmpxchg %rsi,(%rdi)
  0x000000010f83da75: jne    0x000000010f83e1e5  ;*monitorexit
                                                ; - java.lang.ref.ReferenceQueue::poll@21 (line 109)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@4 (line 1264)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::get@13 (line 1224)

  0x000000010f83da7b: mov    %rdx,%rdi          ;*dup  ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@7 (line 1264)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::get@13 (line 1224)

  0x000000010f83da7e: cmp    $0x0,%rdi
  0x000000010f83da82: movabs $0x10eda28b0,%rdx  ;   {metadata(method data for {method} {0x000000010ed2db18} 'expungeStaleElements' '()V' in 'java/lang/invoke/MethodType$ConcurrentWeakInternSet')}
  0x000000010f83da8c: movabs $0x138,%rsi
  0x000000010f83da96: je     0x000000010f83daa6
  0x000000010f83da9c: movabs $0x148,%rsi
  0x000000010f83daa6: mov    (%rdx,%rsi,1),%rbx
  0x000000010f83daaa: lea    0x1(%rbx),%rbx
  0x000000010f83daae: mov    %rbx,(%rdx,%rsi,1)
  0x000000010f83dab2: je     0x000000010f83dbbe  ;*ifnull
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@9 (line 1264)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::get@13 (line 1224)

  0x000000010f83dab8: mov    0x78(%rsp),%rsi
  0x000000010f83dabd: mov    0xc(%rsi),%ebx
  0x000000010f83dac0: shl    $0x3,%rbx          ;*getfield map
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@13 (line 1265)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::get@13 (line 1224)

  0x000000010f83dac4: cmp    (%rbx),%rax        ; implicit exception: dispatches to 0x000000010f83e1fb
  0x000000010f83dac7: mov    %rbx,%rdx
  0x000000010f83daca: movabs $0x10eda28b0,%rax  ;   {metadata(method data for {method} {0x000000010ed2db18} 'expungeStaleElements' '()V' in 'java/lang/invoke/MethodType$ConcurrentWeakInternSet')}
  0x000000010f83dad4: mov    0x8(%rdx),%edx
  0x000000010f83dad7: shl    $0x3,%rdx
  0x000000010f83dadb: cmp    0x160(%rax),%rdx
  0x000000010f83dae2: jne    0x000000010f83daf1
  0x000000010f83dae4: addq   $0x1,0x168(%rax)
  0x000000010f83daec: jmpq   0x000000010f83db57
  0x000000010f83daf1: cmp    0x170(%rax),%rdx
  0x000000010f83daf8: jne    0x000000010f83db07
  0x000000010f83dafa: addq   $0x1,0x178(%rax)
  0x000000010f83db02: jmpq   0x000000010f83db57
  0x000000010f83db07: cmpq   $0x0,0x160(%rax)
  0x000000010f83db12: jne    0x000000010f83db2b
  0x000000010f83db14: mov    %rdx,0x160(%rax)
  0x000000010f83db1b: movq   $0x1,0x168(%rax)
  0x000000010f83db26: jmpq   0x000000010f83db57
  0x000000010f83db2b: cmpq   $0x0,0x170(%rax)
  0x000000010f83db36: jne    0x000000010f83db4f
  0x000000010f83db38: mov    %rdx,0x170(%rax)
  0x000000010f83db3f: movq   $0x1,0x178(%rax)
  0x000000010f83db4a: jmpq   0x000000010f83db57
  0x000000010f83db4f: addq   $0x1,0x158(%rax)
  0x000000010f83db57: mov    %rdi,%rdx
  0x000000010f83db5a: mov    %rbx,%rsi          ;*invokeinterface remove
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@17 (line 1265)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::get@13 (line 1224)

  0x000000010f83db5d: movabs $0xffffffffffffffff,%rax
  0x000000010f83db67: callq  0x000000010f7172e0  ; OopMap{[128]=Oop [120]=Oop off=1068}
                                                ;*invokeinterface remove
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@17 (line 1265)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::get@13 (line 1224)
                                                ;   {virtual_call}
  0x000000010f83db6c: movabs $0x10eda28b0,%rdx  ;   {metadata(method data for {method} {0x000000010ed2db18} 'expungeStaleElements' '()V' in 'java/lang/invoke/MethodType$ConcurrentWeakInternSet')}
  0x000000010f83db76: mov    0xe0(%rdx),%esi
  0x000000010f83db7c: add    $0x8,%esi
  0x000000010f83db7f: mov    %esi,0xe0(%rdx)
  0x000000010f83db85: movabs $0x10ed2db18,%rdx  ;   {metadata({method} {0x000000010ed2db18} 'expungeStaleElements' '()V' in 'java/lang/invoke/MethodType$ConcurrentWeakInternSet')}
  0x000000010f83db8f: and    $0xfff8,%esi
  0x000000010f83db95: cmp    $0x0,%esi
  0x000000010f83db98: je     0x000000010f83e200  ; OopMap{[128]=Oop [120]=Oop off=1118}
                                                ;*goto
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@23 (line 1265)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::get@13 (line 1224)

  0x000000010f83db9e: test   %eax,-0x8da2aa4(%rip)        # 0x0000000106a9b100
                                                ;   {poll}
  0x000000010f83dba4: movabs $0x10eda28b0,%rdx  ;   {metadata(method data for {method} {0x000000010ed2db18} 'expungeStaleElements' '()V' in 'java/lang/invoke/MethodType$ConcurrentWeakInternSet')}
  0x000000010f83dbae: incl   0x188(%rdx)
  0x000000010f83dbb4: mov    0x78(%rsp),%rsi
  0x000000010f83dbb9: jmpq   0x000000010f83d830  ;*goto
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@23 (line 1265)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::get@13 (line 1224)

  0x000000010f83dbbe: mov    0x80(%rsp),%rdx
  0x000000010f83dbc6: mov    0x78(%rsp),%rsi
  0x000000010f83dbcb: mov    0xc(%rsi),%ebx
  0x000000010f83dbce: shl    $0x3,%rbx          ;*getfield map
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::get@17 (line 1226)

  0x000000010f83dbd2: mov    %rdx,%r8
  0x000000010f83dbd5: movabs $0x7c0057d88,%rdx  ;   {metadata('java/lang/invoke/MethodType$ConcurrentWeakInternSet$WeakEntry')}
  0x000000010f83dbdf: mov    0x60(%r15),%rax
  0x000000010f83dbe3: lea    0x20(%rax),%rdi
  0x000000010f83dbe7: cmp    0x70(%r15),%rdi
  0x000000010f83dbeb: ja     0x000000010f83e217
  0x000000010f83dbf1: mov    %rdi,0x60(%r15)
  0x000000010f83dbf5: mov    0xa8(%rdx),%rcx
  0x000000010f83dbfc: mov    %rcx,(%rax)
  0x000000010f83dbff: mov    %rdx,%rcx
  0x000000010f83dc02: shr    $0x3,%rcx
  0x000000010f83dc06: mov    %ecx,0x8(%rax)
  0x000000010f83dc09: xor    %rcx,%rcx
  0x000000010f83dc0c: mov    %ecx,0xc(%rax)
  0x000000010f83dc0f: xor    %rcx,%rcx
  0x000000010f83dc12: mov    %rcx,0x10(%rax)
  0x000000010f83dc16: mov    %rcx,0x18(%rax)    ;*new  ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::get@20 (line 1226)

  0x000000010f83dc1a: mov    %rax,%rdx
  0x000000010f83dc1d: movabs $0x10edbbb38,%rcx  ;   {metadata(method data for {method} {0x000000010ed2d990} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodType$ConcurrentWeakInternSet')}
  0x000000010f83dc27: addq   $0x1,0x148(%rcx)
  0x000000010f83dc2f: movabs $0x10edbdd60,%rdx  ;   {metadata(method data for {method} {0x000000010ed333e0} '<init>' '(Ljava/lang/Object;)V' in 'java/lang/invoke/MethodType$ConcurrentWeakInternSet$WeakEntry')}
  0x000000010f83dc39: mov    0xdc(%rdx),%ecx
  0x000000010f83dc3f: add    $0x8,%ecx
  0x000000010f83dc42: mov    %ecx,0xdc(%rdx)
  0x000000010f83dc48: movabs $0x10ed333e0,%rdx  ;   {metadata({method} {0x000000010ed333e0} '<init>' '(Ljava/lang/Object;)V' in 'java/lang/invoke/MethodType$ConcurrentWeakInternSet$WeakEntry')}
  0x000000010f83dc52: and    $0x7ffff8,%ecx
  0x000000010f83dc58: cmp    $0x0,%ecx
  0x000000010f83dc5b: je     0x000000010f83e224
  0x000000010f83dc61: mov    %rax,%rdx
  0x000000010f83dc64: movabs $0x10edbdd60,%rcx  ;   {metadata(method data for {method} {0x000000010ed333e0} '<init>' '(Ljava/lang/Object;)V' in 'java/lang/invoke/MethodType$ConcurrentWeakInternSet$WeakEntry')}
  0x000000010f83dc6e: addq   $0x1,0x108(%rcx)
  0x000000010f83dc76: movabs $0x10eda34f8,%rdx  ;   {metadata(method data for {method} {0x000000010ea8de50} '<init>' '(Ljava/lang/Object;)V' in 'java/lang/ref/WeakReference')}
  0x000000010f83dc80: mov    0xdc(%rdx),%ecx
  0x000000010f83dc86: add    $0x8,%ecx
  0x000000010f83dc89: mov    %ecx,0xdc(%rdx)
  0x000000010f83dc8f: movabs $0x10ea8de50,%rdx  ;   {metadata({method} {0x000000010ea8de50} '<init>' '(Ljava/lang/Object;)V' in 'java/lang/ref/WeakReference')}
  0x000000010f83dc99: and    $0x7ffff8,%ecx
  0x000000010f83dc9f: cmp    $0x0,%ecx
  0x000000010f83dca2: je     0x000000010f83e23b
  0x000000010f83dca8: mov    %rax,%rdx
  0x000000010f83dcab: movabs $0x10eda34f8,%rcx  ;   {metadata(method data for {method} {0x000000010ea8de50} '<init>' '(Ljava/lang/Object;)V' in 'java/lang/ref/WeakReference')}
  0x000000010f83dcb5: addq   $0x1,0x108(%rcx)
  0x000000010f83dcbd: movabs $0x10eda3630,%rdx  ;   {metadata(method data for {method} {0x000000010ea8d6f0} '<init>' '(Ljava/lang/Object;)V' in 'java/lang/ref/Reference')}
  0x000000010f83dcc7: mov    0xdc(%rdx),%ecx
  0x000000010f83dccd: add    $0x8,%ecx
  0x000000010f83dcd0: mov    %ecx,0xdc(%rdx)
  0x000000010f83dcd6: movabs $0x10ea8d6f0,%rdx  ;   {metadata({method} {0x000000010ea8d6f0} '<init>' '(Ljava/lang/Object;)V' in 'java/lang/ref/Reference')}
  0x000000010f83dce0: and    $0x7ffff8,%ecx
  0x000000010f83dce6: cmp    $0x0,%ecx
  0x000000010f83dce9: je     0x000000010f83e252
  0x000000010f83dcef: mov    %rax,%rdx
  0x000000010f83dcf2: movabs $0x10eda3630,%rcx  ;   {metadata(method data for {method} {0x000000010ea8d6f0} '<init>' '(Ljava/lang/Object;)V' in 'java/lang/ref/Reference')}
  0x000000010f83dcfc: addq   $0x1,0x108(%rcx)
  0x000000010f83dd04: mov    %r8,%rdx
  0x000000010f83dd07: movabs $0x0,%rcx          ;   {oop(NULL)}
  0x000000010f83dd11: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.ref.Reference::<init>@3 (line 303)
                                                ; - java.lang.ref.WeakReference::<init>@2 (line 57)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry::<init>@2 (line 1279)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::get@25 (line 1226)

  0x000000010f83dd14: mov    %rbx,0x98(%rsp)
  0x000000010f83dd1c: mov    %rax,0x90(%rsp)
  0x000000010f83dd24: nop
  0x000000010f83dd25: nop
  0x000000010f83dd26: nop
  0x000000010f83dd27: callq  0x000000010f7170a0  ; OopMap{[144]=Oop [152]=Oop [128]=Oop off=1516}
                                                ;*invokespecial <init>
                                                ; - java.lang.ref.Reference::<init>@3 (line 303)
                                                ; - java.lang.ref.WeakReference::<init>@2 (line 57)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry::<init>@2 (line 1279)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::get@25 (line 1226)
                                                ;   {optimized virtual_call}
  0x000000010f83dd2c: mov    0x80(%rsp),%rdx
  0x000000010f83dd34: cmp    (%rdx),%rax        ; implicit exception: dispatches to 0x000000010f83e269
  0x000000010f83dd37: mov    %rdx,%rsi
  0x000000010f83dd3a: movabs $0x10edbdd60,%rdi  ;   {metadata(method data for {method} {0x000000010ed333e0} '<init>' '(Ljava/lang/Object;)V' in 'java/lang/invoke/MethodType$ConcurrentWeakInternSet$WeakEntry')}
  0x000000010f83dd44: mov    0x8(%rsi),%esi
  0x000000010f83dd47: shl    $0x3,%rsi
  0x000000010f83dd4b: cmp    0x120(%rdi),%rsi
  0x000000010f83dd52: jne    0x000000010f83dd61
  0x000000010f83dd54: addq   $0x1,0x128(%rdi)
  0x000000010f83dd5c: jmpq   0x000000010f83ddc7
  0x000000010f83dd61: cmp    0x130(%rdi),%rsi
  0x000000010f83dd68: jne    0x000000010f83dd77
  0x000000010f83dd6a: addq   $0x1,0x138(%rdi)
  0x000000010f83dd72: jmpq   0x000000010f83ddc7
  0x000000010f83dd77: cmpq   $0x0,0x120(%rdi)
  0x000000010f83dd82: jne    0x000000010f83dd9b
  0x000000010f83dd84: mov    %rsi,0x120(%rdi)
  0x000000010f83dd8b: movq   $0x1,0x128(%rdi)
  0x000000010f83dd96: jmpq   0x000000010f83ddc7
  0x000000010f83dd9b: cmpq   $0x0,0x130(%rdi)
  0x000000010f83dda6: jne    0x000000010f83ddbf
  0x000000010f83dda8: mov    %rsi,0x130(%rdi)
  0x000000010f83ddaf: movq   $0x1,0x138(%rdi)
  0x000000010f83ddba: jmpq   0x000000010f83ddc7
  0x000000010f83ddbf: addq   $0x1,0x118(%rdi)
  0x000000010f83ddc7: mov    %rdx,%rsi          ;*invokevirtual hashCode
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry::<init>@7 (line 1280)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::get@25 (line 1226)

  0x000000010f83ddca: nop
  0x000000010f83ddcb: nop
  0x000000010f83ddcc: nop
  0x000000010f83ddcd: movabs $0xffffffffffffffff,%rax
  0x000000010f83ddd7: callq  0x000000010f7172e0  ; OopMap{[144]=Oop [152]=Oop off=1692}
                                                ;*invokevirtual hashCode
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry::<init>@7 (line 1280)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::get@25 (line 1226)
                                                ;   {virtual_call}
  0x000000010f83dddc: mov    0x90(%rsp),%rdx
  0x000000010f83dde4: mov    %eax,0x1c(%rdx)    ;*putfield hashcode
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry::<init>@10 (line 1280)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::get@25 (line 1226)

  0x000000010f83dde7: mov    0x98(%rsp),%rbx
  0x000000010f83ddef: cmp    (%rbx),%rax        ; implicit exception: dispatches to 0x000000010f83e26e
  0x000000010f83ddf2: mov    %rbx,%rsi
  0x000000010f83ddf5: movabs $0x10edbbb38,%rdi  ;   {metadata(method data for {method} {0x000000010ed2d990} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodType$ConcurrentWeakInternSet')}
  0x000000010f83ddff: mov    0x8(%rsi),%esi
  0x000000010f83de02: shl    $0x3,%rsi
  0x000000010f83de06: cmp    0x160(%rdi),%rsi
  0x000000010f83de0d: jne    0x000000010f83de1c
  0x000000010f83de0f: addq   $0x1,0x168(%rdi)
  0x000000010f83de17: jmpq   0x000000010f83de82
  0x000000010f83de1c: cmp    0x170(%rdi),%rsi
  0x000000010f83de23: jne    0x000000010f83de32
  0x000000010f83de25: addq   $0x1,0x178(%rdi)
  0x000000010f83de2d: jmpq   0x000000010f83de82
  0x000000010f83de32: cmpq   $0x0,0x160(%rdi)
  0x000000010f83de3d: jne    0x000000010f83de56
  0x000000010f83de3f: mov    %rsi,0x160(%rdi)
  0x000000010f83de46: movq   $0x1,0x168(%rdi)
  0x000000010f83de51: jmpq   0x000000010f83de82
  0x000000010f83de56: cmpq   $0x0,0x170(%rdi)
  0x000000010f83de61: jne    0x000000010f83de7a
  0x000000010f83de63: mov    %rsi,0x170(%rdi)
  0x000000010f83de6a: movq   $0x1,0x178(%rdi)
  0x000000010f83de75: jmpq   0x000000010f83de82
  0x000000010f83de7a: addq   $0x1,0x158(%rdi)
  0x000000010f83de82: mov    %rbx,%rsi          ;*invokeinterface get
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::get@28 (line 1226)

  0x000000010f83de85: movabs $0xffffffffffffffff,%rax
  0x000000010f83de8f: callq  0x000000010f7172e0  ; OopMap{off=1876}
                                                ;*invokeinterface get
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::get@28 (line 1226)
                                                ;   {virtual_call}
  0x000000010f83de94: cmp    $0x0,%rax
  0x000000010f83de98: jne    0x000000010f83deb3
  0x000000010f83de9a: movabs $0x10edbbb38,%rsi  ;   {metadata(method data for {method} {0x000000010ed2d990} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodType$ConcurrentWeakInternSet')}
  0x000000010f83dea4: orl    $0x100,0x180(%rsi)
  0x000000010f83deae: jmpq   0x000000010f83df73
  0x000000010f83deb3: movabs $0x7c0057d88,%rdi  ;   {metadata('java/lang/invoke/MethodType$ConcurrentWeakInternSet$WeakEntry')}
  0x000000010f83debd: mov    0x8(%rax),%edx
  0x000000010f83dec0: shl    $0x3,%rdx
  0x000000010f83dec4: cmp    %rdx,%rdi
  0x000000010f83dec7: jne    0x000000010f83df57
  0x000000010f83decd: movabs $0x10edbbb38,%rsi  ;   {metadata(method data for {method} {0x000000010ed2d990} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodType$ConcurrentWeakInternSet')}
  0x000000010f83ded7: mov    0x8(%rax),%edi
  0x000000010f83deda: shl    $0x3,%rdi
  0x000000010f83dede: cmp    0x190(%rsi),%rdi
  0x000000010f83dee5: jne    0x000000010f83def4
  0x000000010f83dee7: addq   $0x1,0x198(%rsi)
  0x000000010f83deef: jmpq   0x000000010f83df73
  0x000000010f83def4: cmp    0x1a0(%rsi),%rdi
  0x000000010f83defb: jne    0x000000010f83df0a
  0x000000010f83defd: addq   $0x1,0x1a8(%rsi)
  0x000000010f83df05: jmpq   0x000000010f83df73
  0x000000010f83df0a: cmpq   $0x0,0x190(%rsi)
  0x000000010f83df15: jne    0x000000010f83df2e
  0x000000010f83df17: mov    %rdi,0x190(%rsi)
  0x000000010f83df1e: movq   $0x1,0x198(%rsi)
  0x000000010f83df29: jmpq   0x000000010f83df73
  0x000000010f83df2e: cmpq   $0x0,0x1a0(%rsi)
  0x000000010f83df39: jne    0x000000010f83df52
  0x000000010f83df3b: mov    %rdi,0x1a0(%rsi)
  0x000000010f83df42: movq   $0x1,0x1a8(%rsi)
  0x000000010f83df4d: jmpq   0x000000010f83df73
  0x000000010f83df52: jmpq   0x000000010f83df73
  0x000000010f83df57: movabs $0x10edbbb38,%rsi  ;   {metadata(method data for {method} {0x000000010ed2d990} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodType$ConcurrentWeakInternSet')}
  0x000000010f83df61: subq   $0x1,0x188(%rsi)
  0x000000010f83df69: jmpq   0x000000010f83e273
  0x000000010f83df6e: jmpq   0x000000010f83df73  ;*checkcast
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::get@33 (line 1226)

  0x000000010f83df73: cmp    $0x0,%rax
  0x000000010f83df77: movabs $0x10edbbb38,%rdx  ;   {metadata(method data for {method} {0x000000010ed2d990} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodType$ConcurrentWeakInternSet')}
  0x000000010f83df81: movabs $0x1b8,%rsi
  0x000000010f83df8b: je     0x000000010f83df9b
  0x000000010f83df91: movabs $0x1c8,%rsi
  0x000000010f83df9b: mov    (%rdx,%rsi,1),%rdi
  0x000000010f83df9f: lea    0x1(%rdi),%rdi
  0x000000010f83dfa3: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f83dfa7: je     0x000000010f83e081  ;*ifnull
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::get@38 (line 1227)

  0x000000010f83dfad: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x000000010f83e27c
  0x000000010f83dfb0: mov    %rax,%rdx
  0x000000010f83dfb3: movabs $0x10edbbb38,%rsi  ;   {metadata(method data for {method} {0x000000010ed2d990} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodType$ConcurrentWeakInternSet')}
  0x000000010f83dfbd: mov    0x8(%rdx),%edx
  0x000000010f83dfc0: shl    $0x3,%rdx
  0x000000010f83dfc4: cmp    0x1e0(%rsi),%rdx
  0x000000010f83dfcb: jne    0x000000010f83dfda
  0x000000010f83dfcd: addq   $0x1,0x1e8(%rsi)
  0x000000010f83dfd5: jmpq   0x000000010f83e040
  0x000000010f83dfda: cmp    0x1f0(%rsi),%rdx
  0x000000010f83dfe1: jne    0x000000010f83dff0
  0x000000010f83dfe3: addq   $0x1,0x1f8(%rsi)
  0x000000010f83dfeb: jmpq   0x000000010f83e040
  0x000000010f83dff0: cmpq   $0x0,0x1e0(%rsi)
  0x000000010f83dffb: jne    0x000000010f83e014
  0x000000010f83dffd: mov    %rdx,0x1e0(%rsi)
  0x000000010f83e004: movq   $0x1,0x1e8(%rsi)
  0x000000010f83e00f: jmpq   0x000000010f83e040
  0x000000010f83e014: cmpq   $0x0,0x1f0(%rsi)
  0x000000010f83e01f: jne    0x000000010f83e038
  0x000000010f83e021: mov    %rdx,0x1f0(%rsi)
  0x000000010f83e028: movq   $0x1,0x1f8(%rsi)
  0x000000010f83e033: jmpq   0x000000010f83e040
  0x000000010f83e038: addq   $0x1,0x1d8(%rsi)
  0x000000010f83e040: mov    0xc(%rax),%edx
  0x000000010f83e043: shl    $0x3,%rdx          ;*invokevirtual get
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::get@42 (line 1228)

  0x000000010f83e047: cmp    $0x0,%rdx
  0x000000010f83e04b: movabs $0x10edbbb38,%rax  ;   {metadata(method data for {method} {0x000000010ed2d990} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodType$ConcurrentWeakInternSet')}
  0x000000010f83e055: movabs $0x208,%rsi
  0x000000010f83e05f: je     0x000000010f83e06f
  0x000000010f83e065: movabs $0x218,%rsi
  0x000000010f83e06f: mov    (%rax,%rsi,1),%rdi
  0x000000010f83e073: lea    0x1(%rdi),%rdi
  0x000000010f83e077: mov    %rdi,(%rax,%rsi,1)
  0x000000010f83e07b: jne    0x000000010f83e09a  ;*ifnull
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::get@47 (line 1229)

  0x000000010f83e081: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000010f83e08b: add    $0xc0,%rsp
  0x000000010f83e092: pop    %rbp
  0x000000010f83e093: test   %eax,-0x8da2f99(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f83e099: retq                      ;*areturn
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::get@53 (line 1233)

  0x000000010f83e09a: mov    %rdx,%rax
  0x000000010f83e09d: add    $0xc0,%rsp
  0x000000010f83e0a4: pop    %rbp
  0x000000010f83e0a5: test   %eax,-0x8da2fab(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f83e0ab: retq                      ;*areturn
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::get@51 (line 1230)

  0x000000010f83e0ac: nopl   0x0(%rax)
  0x000000010f83e0b0: jmpq   0x000000010f83e290  ;   {no_reloc}
  0x000000010f83e0b5: add    %al,(%rax)
  0x000000010f83e0b7: add    %al,(%rax)
  0x000000010f83e0b9: add    %cl,-0x75(%rcx)
  0x000000010f83e0bc: rex.RXB (bad) 
  0x000000010f83e0be: lea    0x20(%rax),%rdi
  0x000000010f83e0c2: cmp    0x70(%r15),%rdi
  0x000000010f83e0c6: ja     0x000000010f83e29a
  0x000000010f83e0cc: mov    %rdi,0x60(%r15)
  0x000000010f83e0d0: mov    0xa8(%rdx),%rcx
  0x000000010f83e0d7: mov    %rcx,(%rax)
  0x000000010f83e0da: mov    %rdx,%rcx
  0x000000010f83e0dd: shr    $0x3,%rcx
  0x000000010f83e0e1: mov    %ecx,0x8(%rax)
  0x000000010f83e0e4: xor    %rcx,%rcx
  0x000000010f83e0e7: mov    %ecx,0xc(%rax)
  0x000000010f83e0ea: xor    %rcx,%rcx
  0x000000010f83e0ed: mov    %rcx,0x10(%rax)
  0x000000010f83e0f1: mov    %rcx,0x18(%rax)    ;*new  ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::get@4 (line 1223)

  0x000000010f83e0f5: mov    %rax,%rsi
  0x000000010f83e0f8: movabs $0x10edbbb38,%rdi  ;   {metadata(method data for {method} {0x000000010ed2d990} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodType$ConcurrentWeakInternSet')}
  0x000000010f83e102: addq   $0x1,0x128(%rdi)
  0x000000010f83e10a: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::get@8 (line 1223)

  0x000000010f83e10d: mov    %rax,0xa0(%rsp)
  0x000000010f83e115: nop
  0x000000010f83e116: nop
  0x000000010f83e117: callq  0x000000010f7170a0  ; OopMap{[160]=Oop off=2524}
                                                ;*invokespecial <init>
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::get@8 (line 1223)
                                                ;   {optimized virtual_call}
  0x000000010f83e11c: mov    0xa0(%rsp),%rax
  0x000000010f83e124: jmpq   0x000000010f83e2e8  ;*athrow
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::get@11 (line 1223)

  0x000000010f83e129: mov    0x2a8(%r15),%rax
  0x000000010f83e130: xor    %r10,%r10
  0x000000010f83e133: mov    %r10,0x2a8(%r15)
  0x000000010f83e13a: xor    %r10,%r10
  0x000000010f83e13d: mov    %r10,0x2b0(%r15)
  0x000000010f83e144: mov    %rax,%rsi
  0x000000010f83e147: lea    0xa8(%rsp),%rax
  0x000000010f83e14f: mov    0x8(%rax),%rbx
  0x000000010f83e153: mov    (%rbx),%rdi
  0x000000010f83e156: and    $0x7,%rdi
  0x000000010f83e15a: cmp    $0x5,%rdi
  0x000000010f83e15e: je     0x000000010f83e17b
  0x000000010f83e164: mov    (%rax),%rdi
  0x000000010f83e167: test   %rdi,%rdi
  0x000000010f83e16a: je     0x000000010f83e17b
  0x000000010f83e170: lock cmpxchg %rdi,(%rbx)
  0x000000010f83e175: jne    0x000000010f83e2a7  ;*monitorexit
                                                ; - java.lang.ref.ReferenceQueue::poll@25 (line 110)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@4 (line 1264)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::get@13 (line 1224)

  0x000000010f83e17b: mov    %rsi,%rax
  0x000000010f83e17e: jmpq   0x000000010f83e2e8
  0x000000010f83e183: mov    %rax,0x8(%rsp)
  0x000000010f83e188: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f83e190: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [120]=Oop rdx=Oop [128]=Oop off=2645}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::get@-1 (line 1223)
                                                ;   {runtime_call}
  0x000000010f83e195: jmpq   0x000000010f83d7ae
  0x000000010f83e19a: mov    %rax,0x8(%rsp)
  0x000000010f83e19f: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f83e1a7: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [120]=Oop rdx=Oop [128]=Oop off=2668}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@-1 (line 1264)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::get@13 (line 1224)
                                                ;   {runtime_call}
  0x000000010f83e1ac: jmpq   0x000000010f83d82f
  0x000000010f83e1b1: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop [120]=Oop [128]=Oop rdi=Oop off=2678}
                                                ;*invokevirtual poll
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@4 (line 1264)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::get@13 (line 1224)
                                                ;   {runtime_call}
  0x000000010f83e1b6: mov    %rax,0x8(%rsp)
  0x000000010f83e1bb: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f83e1c3: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [120]=Oop [128]=Oop rdi=Oop off=2696}
                                                ;*synchronization entry
                                                ; - java.lang.ref.ReferenceQueue::poll@-1 (line 106)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@4 (line 1264)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::get@13 (line 1224)
                                                ;   {runtime_call}
  0x000000010f83e1c8: jmpq   0x000000010f83d8fc
  0x000000010f83e1cd: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop [120]=Oop [128]=Oop rdi=Oop rbx=Oop off=2706}
                                                ;*monitorenter
                                                ; - java.lang.ref.ReferenceQueue::poll@15 (line 108)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@4 (line 1264)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::get@13 (line 1224)
                                                ;   {runtime_call}
  0x000000010f83e1d2: mov    %rbx,0x8(%rsp)
  0x000000010f83e1d7: mov    %rcx,(%rsp)
  0x000000010f83e1db: callq  0x000000010f7cfc60  ; OopMap{rsi=Oop [120]=Oop [128]=Oop rdi=Oop rbx=Oop [176]=Oop off=2720}
                                                ;*monitorenter
                                                ; - java.lang.ref.ReferenceQueue::poll@15 (line 108)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@4 (line 1264)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::get@13 (line 1224)
                                                ;   {runtime_call}
  0x000000010f83e1e0: jmpq   0x000000010f83da1f
  0x000000010f83e1e5: lea    0xa8(%rsp),%rax
  0x000000010f83e1ed: mov    %rax,(%rsp)
  0x000000010f83e1f1: callq  0x000000010f7d00a0  ;   {runtime_call}
  0x000000010f83e1f6: jmpq   0x000000010f83da7b
  0x000000010f83e1fb: callq  0x000000010f7cd0c0  ; OopMap{[128]=Oop rdi=Oop rsi=Oop [120]=Oop rbx=Oop off=2752}
                                                ;*invokeinterface remove
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@17 (line 1265)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::get@13 (line 1224)
                                                ;   {runtime_call}
  0x000000010f83e200: mov    %rdx,0x8(%rsp)
  0x000000010f83e205: movq   $0x17,(%rsp)
  0x000000010f83e20d: callq  0x000000010f7d1a20  ; OopMap{[128]=Oop [120]=Oop off=2770}
                                                ;*goto
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements@23 (line 1265)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::get@13 (line 1224)
                                                ;   {runtime_call}
  0x000000010f83e212: jmpq   0x000000010f83db9e
  0x000000010f83e217: mov    %rdx,%rdx
  0x000000010f83e21a: callq  0x000000010f7cd820  ; OopMap{rbx=Oop r8=Oop [128]=Oop off=2783}
                                                ;*new  ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::get@20 (line 1226)
                                                ;   {runtime_call}
  0x000000010f83e21f: jmpq   0x000000010f83dc1a
  0x000000010f83e224: mov    %rdx,0x8(%rsp)
  0x000000010f83e229: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f83e231: callq  0x000000010f7d1a20  ; OopMap{rbx=Oop r8=Oop [128]=Oop rax=Oop off=2806}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry::<init>@-1 (line 1279)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::get@25 (line 1226)
                                                ;   {runtime_call}
  0x000000010f83e236: jmpq   0x000000010f83dc61
  0x000000010f83e23b: mov    %rdx,0x8(%rsp)
  0x000000010f83e240: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f83e248: callq  0x000000010f7d1a20  ; OopMap{rbx=Oop r8=Oop [128]=Oop rax=Oop off=2829}
                                                ;*synchronization entry
                                                ; - java.lang.ref.WeakReference::<init>@-1 (line 57)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry::<init>@2 (line 1279)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::get@25 (line 1226)
                                                ;   {runtime_call}
  0x000000010f83e24d: jmpq   0x000000010f83dca8
  0x000000010f83e252: mov    %rdx,0x8(%rsp)
  0x000000010f83e257: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f83e25f: callq  0x000000010f7d1a20  ; OopMap{rbx=Oop r8=Oop [128]=Oop rax=Oop off=2852}
                                                ;*synchronization entry
                                                ; - java.lang.ref.Reference::<init>@-1 (line 303)
                                                ; - java.lang.ref.WeakReference::<init>@2 (line 57)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry::<init>@2 (line 1279)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::get@25 (line 1226)
                                                ;   {runtime_call}
  0x000000010f83e264: jmpq   0x000000010f83dcef
  0x000000010f83e269: callq  0x000000010f7cd0c0  ; OopMap{[144]=Oop [152]=Oop rdx=Oop [128]=Oop off=2862}
                                                ;*invokevirtual hashCode
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry::<init>@7 (line 1280)
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::get@25 (line 1226)
                                                ;   {runtime_call}
  0x000000010f83e26e: callq  0x000000010f7cd0c0  ; OopMap{rdx=Oop rbx=Oop off=2867}
                                                ;*invokeinterface get
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::get@28 (line 1226)
                                                ;   {runtime_call}
  0x000000010f83e273: mov    %rax,(%rsp)
  0x000000010f83e277: callq  0x000000010f7cf480  ; OopMap{off=2876}
                                                ;*checkcast
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::get@33 (line 1226)
                                                ;   {runtime_call}
  0x000000010f83e27c: callq  0x000000010f7cd0c0  ; OopMap{rax=Oop off=2881}
                                                ;*invokevirtual get
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::get@42 (line 1228)
                                                ;   {runtime_call}
  0x000000010f83e281: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f83e28b: mov    $0xa050f00,%eax
  0x000000010f83e290: callq  0x000000010f7d08e0  ; OopMap{off=2901}
                                                ;*new  ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::get@4 (line 1223)
                                                ;   {runtime_call}
  0x000000010f83e295: jmpq   0x000000010f83e0b0
  0x000000010f83e29a: mov    %rdx,%rdx
  0x000000010f83e29d: callq  0x000000010f7cd820  ; OopMap{off=2914}
                                                ;*new  ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet::get@4 (line 1223)
                                                ;   {runtime_call}
  0x000000010f83e2a2: jmpq   0x000000010f83e0f5
  0x000000010f83e2a7: lea    0xa8(%rsp),%rax
  0x000000010f83e2af: mov    %rax,(%rsp)
  0x000000010f83e2b3: callq  0x000000010f7d00a0  ;   {runtime_call}
  0x000000010f83e2b8: jmpq   0x000000010f83e17b
  0x000000010f83e2bd: nop
  0x000000010f83e2be: nop
  0x000000010f83e2bf: mov    0x2a8(%r15),%rax
  0x000000010f83e2c6: movabs $0x0,%r10
  0x000000010f83e2d0: mov    %r10,0x2a8(%r15)
  0x000000010f83e2d7: movabs $0x0,%r10
  0x000000010f83e2e1: mov    %r10,0x2b0(%r15)
  0x000000010f83e2e8: add    $0xc0,%rsp
  0x000000010f83e2ef: pop    %rbp
  0x000000010f83e2f0: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f83e2f5: hlt    
  0x000000010f83e2f6: hlt    
  0x000000010f83e2f7: hlt    
  0x000000010f83e2f8: hlt    
  0x000000010f83e2f9: hlt    
  0x000000010f83e2fa: hlt    
  0x000000010f83e2fb: hlt    
  0x000000010f83e2fc: hlt    
  0x000000010f83e2fd: hlt    
  0x000000010f83e2fe: hlt    
  0x000000010f83e2ff: hlt    
[Stub Code]
  0x000000010f83e300: nop                       ;   {no_reloc}
  0x000000010f83e301: nop
  0x000000010f83e302: nop
  0x000000010f83e303: nop
  0x000000010f83e304: nop
  0x000000010f83e305: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f83e30f: jmpq   0x000000010f83e30f  ;   {runtime_call}
  0x000000010f83e314: nop
  0x000000010f83e315: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f83e31f: jmpq   0x000000010f83e31f  ;   {runtime_call}
  0x000000010f83e324: nop
  0x000000010f83e325: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f83e32f: jmpq   0x000000010f83e32f  ;   {runtime_call}
  0x000000010f83e334: nop
  0x000000010f83e335: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f83e33f: jmpq   0x000000010f83e33f  ;   {runtime_call}
  0x000000010f83e344: nop
  0x000000010f83e345: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f83e34f: jmpq   0x000000010f83e34f  ;   {runtime_call}
  0x000000010f83e354: nop
  0x000000010f83e355: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f83e35f: jmpq   0x000000010f83e35f  ;   {runtime_call}
[Exception Handler]
  0x000000010f83e364: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f83e369: mov    %rsp,-0x28(%rsp)
  0x000000010f83e36e: sub    $0x80,%rsp
  0x000000010f83e375: mov    %rax,0x78(%rsp)
  0x000000010f83e37a: mov    %rcx,0x70(%rsp)
  0x000000010f83e37f: mov    %rdx,0x68(%rsp)
  0x000000010f83e384: mov    %rbx,0x60(%rsp)
  0x000000010f83e389: mov    %rbp,0x50(%rsp)
  0x000000010f83e38e: mov    %rsi,0x48(%rsp)
  0x000000010f83e393: mov    %rdi,0x40(%rsp)
  0x000000010f83e398: mov    %r8,0x38(%rsp)
  0x000000010f83e39d: mov    %r9,0x30(%rsp)
  0x000000010f83e3a2: mov    %r10,0x28(%rsp)
  0x000000010f83e3a7: mov    %r11,0x20(%rsp)
  0x000000010f83e3ac: mov    %r12,0x18(%rsp)
  0x000000010f83e3b1: mov    %r13,0x10(%rsp)
  0x000000010f83e3b6: mov    %r14,0x8(%rsp)
  0x000000010f83e3bb: mov    %r15,(%rsp)
  0x000000010f83e3bf: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f83e3c9: movabs $0x10f83e369,%rsi  ;   {internal_word}
  0x000000010f83e3d3: mov    %rsp,%rdx
  0x000000010f83e3d6: and    $0xfffffffffffffff0,%rsp
  0x000000010f83e3da: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f83e3df: hlt    
[Deopt Handler Code]
  0x000000010f83e3e0: movabs $0x10f83e3e0,%r10  ;   {section_word}
  0x000000010f83e3ea: push   %r10
  0x000000010f83e3ec: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f83e3f1: hlt    
  0x000000010f83e3f2: hlt    
  0x000000010f83e3f3: hlt    
  0x000000010f83e3f4: hlt    
  0x000000010f83e3f5: hlt    
  0x000000010f83e3f6: hlt    
  0x000000010f83e3f7: hlt    
Decoding compiled method 0x000000010f839cd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ead7a08} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuffer'
  #           [sp+0x80]  (sp of caller)
  0x000000010f839e60: mov    0x8(%rsi),%r10d
  0x000000010f839e64: shl    $0x3,%r10
  0x000000010f839e68: cmp    %rax,%r10
  0x000000010f839e6b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f839e71: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f839e7c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f839e80: mov    %eax,-0x14000(%rsp)
  0x000000010f839e87: push   %rbp
  0x000000010f839e88: sub    $0x70,%rsp
  0x000000010f839e8c: lea    0x50(%rsp),%rdx
  0x000000010f839e91: mov    %rsi,0x8(%rdx)
  0x000000010f839e95: mov    (%rsi),%rax
  0x000000010f839e98: mov    %rax,%rcx
  0x000000010f839e9b: and    $0x7,%rcx
  0x000000010f839e9f: cmp    $0x5,%rcx
  0x000000010f839ea3: jne    0x000000010f839f2a
  0x000000010f839ea9: mov    0x8(%rsi),%ecx
  0x000000010f839eac: shl    $0x3,%rcx
  0x000000010f839eb0: mov    0xa8(%rcx),%rcx
  0x000000010f839eb7: or     %r15,%rcx
  0x000000010f839eba: xor    %rax,%rcx
  0x000000010f839ebd: and    $0xffffffffffffff87,%rcx
  0x000000010f839ec1: je     0x000000010f839f52
  0x000000010f839ec7: test   $0x7,%rcx
  0x000000010f839ece: jne    0x000000010f839f17
  0x000000010f839ed0: test   $0x300,%rcx
  0x000000010f839ed7: jne    0x000000010f839ef6
  0x000000010f839ed9: and    $0x37f,%rax
  0x000000010f839ee0: mov    %rax,%rcx
  0x000000010f839ee3: or     %r15,%rcx
  0x000000010f839ee6: lock cmpxchg %rcx,(%rsi)
  0x000000010f839eeb: jne    0x000000010f83a15a
  0x000000010f839ef1: jmpq   0x000000010f839f52
  0x000000010f839ef6: mov    0x8(%rsi),%ecx
  0x000000010f839ef9: shl    $0x3,%rcx
  0x000000010f839efd: mov    0xa8(%rcx),%rcx
  0x000000010f839f04: or     %r15,%rcx
  0x000000010f839f07: lock cmpxchg %rcx,(%rsi)
  0x000000010f839f0c: jne    0x000000010f83a15a
  0x000000010f839f12: jmpq   0x000000010f839f52
  0x000000010f839f17: mov    0x8(%rsi),%ecx
  0x000000010f839f1a: shl    $0x3,%rcx
  0x000000010f839f1e: mov    0xa8(%rcx),%rcx
  0x000000010f839f25: lock cmpxchg %rcx,(%rsi)
  0x000000010f839f2a: mov    (%rsi),%rax
  0x000000010f839f2d: or     $0x1,%rax
  0x000000010f839f31: mov    %rax,(%rdx)
  0x000000010f839f34: lock cmpxchg %rdx,(%rsi)
  0x000000010f839f39: je     0x000000010f839f52
  0x000000010f839f3f: sub    %rsp,%rax
  0x000000010f839f42: and    $0xfffffffffffff007,%rax
  0x000000010f839f49: mov    %rax,(%rdx)
  0x000000010f839f4c: jne    0x000000010f83a15a
  0x000000010f839f52: movabs $0x10edc6ad0,%rdx  ;   {metadata(method data for {method} {0x000000010ead7a08} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuffer')}
  0x000000010f839f5c: mov    0xdc(%rdx),%ecx
  0x000000010f839f62: add    $0x8,%ecx
  0x000000010f839f65: mov    %ecx,0xdc(%rdx)
  0x000000010f839f6b: movabs $0x10ead7a08,%rdx  ;   {metadata({method} {0x000000010ead7a08} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuffer')}
  0x000000010f839f75: and    $0x1ff8,%ecx
  0x000000010f839f7b: cmp    $0x0,%ecx
  0x000000010f839f7e: je     0x000000010f83a16d  ;*aload_0
                                                ; - java.lang.StringBuffer::toString@0 (line 668)

  0x000000010f839f84: mov    0x14(%rsi),%edx
  0x000000010f839f87: shl    $0x3,%rdx          ;*getfield toStringCache
                                                ; - java.lang.StringBuffer::toString@1 (line 668)

  0x000000010f839f8b: cmp    $0x0,%rdx
  0x000000010f839f8f: movabs $0x10edc6ad0,%rdx  ;   {metadata(method data for {method} {0x000000010ead7a08} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuffer')}
  0x000000010f839f99: movabs $0x108,%rcx
  0x000000010f839fa3: jne    0x000000010f839fb3
  0x000000010f839fa9: movabs $0x118,%rcx
  0x000000010f839fb3: mov    (%rdx,%rcx,1),%rdi
  0x000000010f839fb7: lea    0x1(%rdi),%rdi
  0x000000010f839fbb: mov    %rdi,(%rdx,%rcx,1)
  0x000000010f839fbf: je     0x000000010f839fcd  ;*ifnonnull
                                                ; - java.lang.StringBuffer::toString@4 (line 668)

  0x000000010f839fc5: mov    %rsi,%rbx
  0x000000010f839fc8: jmpq   0x000000010f83a021  ;*new
                                                ; - java.lang.StringBuffer::toString@23 (line 671)

  0x000000010f839fcd: mov    0x10(%rsi),%edx
  0x000000010f839fd0: shl    $0x3,%rdx          ;*getfield value
                                                ; - java.lang.StringBuffer::toString@9 (line 669)

  0x000000010f839fd4: mov    0xc(%rsi),%ecx     ;*getfield count
                                                ; - java.lang.StringBuffer::toString@14 (line 669)

  0x000000010f839fd7: movabs $0x10edc6ad0,%rdi  ;   {metadata(method data for {method} {0x000000010ead7a08} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuffer')}
  0x000000010f839fe1: addq   $0x1,0x128(%rdi)
  0x000000010f839fe9: mov    %rsi,0x48(%rsp)
  0x000000010f839fee: mov    %rdx,%rsi
  0x000000010f839ff1: mov    $0x0,%edx          ;*invokestatic copyOfRange
                                                ; - java.lang.StringBuffer::toString@17 (line 669)

  0x000000010f839ff6: nop
  0x000000010f839ff7: callq  0x000000010f717520  ; OopMap{[72]=Oop [88]=Oop off=412}
                                                ;*invokestatic copyOfRange
                                                ; - java.lang.StringBuffer::toString@17 (line 669)
                                                ;   {static_call}
  0x000000010f839ffc: mov    0x48(%rsp),%rbx
  0x000000010f83a001: mov    %rax,%r10
  0x000000010f83a004: shr    $0x3,%r10
  0x000000010f83a008: mov    %r10d,0x14(%rbx)
  0x000000010f83a00c: mov    %rbx,%rsi
  0x000000010f83a00f: shr    $0x9,%rsi
  0x000000010f83a013: movabs $0x1065b9000,%rdx
  0x000000010f83a01d: movb   $0x0,(%rsi,%rdx,1)  ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::toString@20 (line 669)

  0x000000010f83a021: movabs $0x7c00016d0,%rdx  ;   {metadata('java/lang/String')}
  0x000000010f83a02b: mov    0x60(%r15),%rax
  0x000000010f83a02f: lea    0x18(%rax),%rdi
  0x000000010f83a033: cmp    0x70(%r15),%rdi
  0x000000010f83a037: ja     0x000000010f83a184
  0x000000010f83a03d: mov    %rdi,0x60(%r15)
  0x000000010f83a041: mov    0xa8(%rdx),%rcx
  0x000000010f83a048: mov    %rcx,(%rax)
  0x000000010f83a04b: mov    %rdx,%rcx
  0x000000010f83a04e: shr    $0x3,%rcx
  0x000000010f83a052: mov    %ecx,0x8(%rax)
  0x000000010f83a055: xor    %rcx,%rcx
  0x000000010f83a058: mov    %ecx,0xc(%rax)
  0x000000010f83a05b: xor    %rcx,%rcx
  0x000000010f83a05e: mov    %rcx,0x10(%rax)
  0x000000010f83a062: mov    %rax,%rsi          ;*new  ; - java.lang.StringBuffer::toString@23 (line 671)

  0x000000010f83a065: mov    0x14(%rbx),%eax
  0x000000010f83a068: shl    $0x3,%rax          ;*getfield toStringCache
                                                ; - java.lang.StringBuffer::toString@28 (line 671)

  0x000000010f83a06c: mov    %rsi,%rdi
  0x000000010f83a06f: movabs $0x10edc6ad0,%rbx  ;   {metadata(method data for {method} {0x000000010ead7a08} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuffer')}
  0x000000010f83a079: addq   $0x1,0x138(%rbx)
  0x000000010f83a081: movabs $0x10ed91d08,%rdi  ;   {metadata(method data for {method} {0x000000010ea68bc8} '<init>' '([CZ)V' in 'java/lang/String')}
  0x000000010f83a08b: mov    0xdc(%rdi),%ebx
  0x000000010f83a091: add    $0x8,%ebx
  0x000000010f83a094: mov    %ebx,0xdc(%rdi)
  0x000000010f83a09a: movabs $0x10ea68bc8,%rdi  ;   {metadata({method} {0x000000010ea68bc8} '<init>' '([CZ)V' in 'java/lang/String')}
  0x000000010f83a0a4: and    $0x7ffff8,%ebx
  0x000000010f83a0aa: cmp    $0x0,%ebx
  0x000000010f83a0ad: je     0x000000010f83a191
  0x000000010f83a0b3: mov    %rsi,%rdi
  0x000000010f83a0b6: movabs $0x10ed91d08,%rbx  ;   {metadata(method data for {method} {0x000000010ea68bc8} '<init>' '([CZ)V' in 'java/lang/String')}
  0x000000010f83a0c0: addq   $0x1,0x108(%rbx)
  0x000000010f83a0c8: movabs $0x10ebdca10,%rdi  ;   {metadata(method data for {method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f83a0d2: mov    0xdc(%rdi),%ebx
  0x000000010f83a0d8: add    $0x8,%ebx
  0x000000010f83a0db: mov    %ebx,0xdc(%rdi)
  0x000000010f83a0e1: movabs $0x10ea65480,%rdi  ;   {metadata({method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f83a0eb: and    $0x7ffff8,%ebx
  0x000000010f83a0f1: cmp    $0x0,%ebx
  0x000000010f83a0f4: je     0x000000010f83a1a8
  0x000000010f83a0fa: mov    %rax,%r10
  0x000000010f83a0fd: shr    $0x3,%r10
  0x000000010f83a101: mov    %r10d,0xc(%rsi)
  0x000000010f83a105: mov    %rsi,%rax
  0x000000010f83a108: shr    $0x9,%rax
  0x000000010f83a10c: movabs $0x1065b9000,%rdi
  0x000000010f83a116: movb   $0x0,(%rax,%rdi,1)  ;*putfield value
                                                ; - java.lang.String::<init>@6 (line 611)
                                                ; - java.lang.StringBuffer::toString@32 (line 671)

  0x000000010f83a11a: lea    0x50(%rsp),%rax
  0x000000010f83a11f: mov    0x8(%rax),%rbx
  0x000000010f83a123: mov    (%rbx),%rdi
  0x000000010f83a126: and    $0x7,%rdi
  0x000000010f83a12a: cmp    $0x5,%rdi
  0x000000010f83a12e: je     0x000000010f83a14b
  0x000000010f83a134: mov    (%rax),%rdi
  0x000000010f83a137: test   %rdi,%rdi
  0x000000010f83a13a: je     0x000000010f83a14b
  0x000000010f83a140: lock cmpxchg %rdi,(%rbx)
  0x000000010f83a145: jne    0x000000010f83a1bf  ;*areturn
                                                ; - java.lang.StringBuffer::toString@35 (line 671)

  0x000000010f83a14b: mov    %rsi,%rax
  0x000000010f83a14e: add    $0x70,%rsp
  0x000000010f83a152: pop    %rbp
  0x000000010f83a153: test   %eax,-0x8d9f059(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f83a159: retq   
  0x000000010f83a15a: mov    %rsi,0x8(%rsp)
  0x000000010f83a15f: mov    %rdx,(%rsp)
  0x000000010f83a163: callq  0x000000010f7cfc60  ; OopMap{rsi=Oop [88]=Oop off=776}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::toString@-1 (line 668)
                                                ;   {runtime_call}
  0x000000010f83a168: jmpq   0x000000010f839f52
  0x000000010f83a16d: mov    %rdx,0x8(%rsp)
  0x000000010f83a172: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f83a17a: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [88]=Oop off=799}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::toString@-1 (line 668)
                                                ;   {runtime_call}
  0x000000010f83a17f: jmpq   0x000000010f839f84
  0x000000010f83a184: mov    %rdx,%rdx
  0x000000010f83a187: callq  0x000000010f7cd820  ; OopMap{rbx=Oop [88]=Oop off=812}
                                                ;*new  ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ;   {runtime_call}
  0x000000010f83a18c: jmpq   0x000000010f83a062
  0x000000010f83a191: mov    %rdi,0x8(%rsp)
  0x000000010f83a196: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f83a19e: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop rax=Oop [88]=Oop off=835}
                                                ;*synchronization entry
                                                ; - java.lang.String::<init>@-1 (line 609)
                                                ; - java.lang.StringBuffer::toString@32 (line 671)
                                                ;   {runtime_call}
  0x000000010f83a1a3: jmpq   0x000000010f83a0b3
  0x000000010f83a1a8: mov    %rdi,0x8(%rsp)
  0x000000010f83a1ad: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f83a1b5: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop rax=Oop [88]=Oop off=858}
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 37)
                                                ; - java.lang.String::<init>@1 (line 609)
                                                ; - java.lang.StringBuffer::toString@32 (line 671)
                                                ;   {runtime_call}
  0x000000010f83a1ba: jmpq   0x000000010f83a0fa
  0x000000010f83a1bf: lea    0x50(%rsp),%rax
  0x000000010f83a1c4: mov    %rax,(%rsp)
  0x000000010f83a1c8: callq  0x000000010f7d00a0  ;   {runtime_call}
  0x000000010f83a1cd: jmpq   0x000000010f83a14b
  0x000000010f83a1d2: nop
  0x000000010f83a1d3: nop
  0x000000010f83a1d4: mov    0x2a8(%r15),%rax
  0x000000010f83a1db: movabs $0x0,%r10
  0x000000010f83a1e5: mov    %r10,0x2a8(%r15)
  0x000000010f83a1ec: movabs $0x0,%r10
  0x000000010f83a1f6: mov    %r10,0x2b0(%r15)
  0x000000010f83a1fd: mov    %rax,%rbx
  0x000000010f83a200: lea    0x50(%rsp),%rax
  0x000000010f83a205: mov    0x8(%rax),%rsi
  0x000000010f83a209: mov    (%rsi),%rdi
  0x000000010f83a20c: and    $0x7,%rdi
  0x000000010f83a210: cmp    $0x5,%rdi
  0x000000010f83a214: je     0x000000010f83a231
  0x000000010f83a21a: mov    (%rax),%rdi
  0x000000010f83a21d: test   %rdi,%rdi
  0x000000010f83a220: je     0x000000010f83a231
  0x000000010f83a226: lock cmpxchg %rdi,(%rsi)
  0x000000010f83a22b: jne    0x000000010f83a23e
  0x000000010f83a231: mov    %rbx,%rax
  0x000000010f83a234: add    $0x70,%rsp
  0x000000010f83a238: pop    %rbp
  0x000000010f83a239: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f83a23e: lea    0x50(%rsp),%rax
  0x000000010f83a243: mov    %rax,(%rsp)
  0x000000010f83a247: callq  0x000000010f7d00a0  ;   {runtime_call}
  0x000000010f83a24c: jmp    0x000000010f83a231
  0x000000010f83a24e: hlt    
  0x000000010f83a24f: hlt    
  0x000000010f83a250: hlt    
  0x000000010f83a251: hlt    
  0x000000010f83a252: hlt    
  0x000000010f83a253: hlt    
  0x000000010f83a254: hlt    
  0x000000010f83a255: hlt    
  0x000000010f83a256: hlt    
  0x000000010f83a257: hlt    
  0x000000010f83a258: hlt    
  0x000000010f83a259: hlt    
  0x000000010f83a25a: hlt    
  0x000000010f83a25b: hlt    
  0x000000010f83a25c: hlt    
  0x000000010f83a25d: hlt    
  0x000000010f83a25e: hlt    
  0x000000010f83a25f: hlt    
[Stub Code]
  0x000000010f83a260: nop                       ;   {no_reloc}
  0x000000010f83a261: nop
  0x000000010f83a262: nop
  0x000000010f83a263: nop
  0x000000010f83a264: nop
  0x000000010f83a265: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f83a26f: jmpq   0x000000010f83a26f  ;   {runtime_call}
[Exception Handler]
  0x000000010f83a274: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f83a279: mov    %rsp,-0x28(%rsp)
  0x000000010f83a27e: sub    $0x80,%rsp
  0x000000010f83a285: mov    %rax,0x78(%rsp)
  0x000000010f83a28a: mov    %rcx,0x70(%rsp)
  0x000000010f83a28f: mov    %rdx,0x68(%rsp)
  0x000000010f83a294: mov    %rbx,0x60(%rsp)
  0x000000010f83a299: mov    %rbp,0x50(%rsp)
  0x000000010f83a29e: mov    %rsi,0x48(%rsp)
  0x000000010f83a2a3: mov    %rdi,0x40(%rsp)
  0x000000010f83a2a8: mov    %r8,0x38(%rsp)
  0x000000010f83a2ad: mov    %r9,0x30(%rsp)
  0x000000010f83a2b2: mov    %r10,0x28(%rsp)
  0x000000010f83a2b7: mov    %r11,0x20(%rsp)
  0x000000010f83a2bc: mov    %r12,0x18(%rsp)
  0x000000010f83a2c1: mov    %r13,0x10(%rsp)
  0x000000010f83a2c6: mov    %r14,0x8(%rsp)
  0x000000010f83a2cb: mov    %r15,(%rsp)
  0x000000010f83a2cf: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f83a2d9: movabs $0x10f83a279,%rsi  ;   {internal_word}
  0x000000010f83a2e3: mov    %rsp,%rdx
  0x000000010f83a2e6: and    $0xfffffffffffffff0,%rsp
  0x000000010f83a2ea: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f83a2ef: hlt    
[Deopt Handler Code]
  0x000000010f83a2f0: movabs $0x10f83a2f0,%r10  ;   {section_word}
  0x000000010f83a2fa: push   %r10
  0x000000010f83a2fc: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f83a301: hlt    
  0x000000010f83a302: hlt    
  0x000000010f83a303: hlt    
  0x000000010f83a304: hlt    
  0x000000010f83a305: hlt    
  0x000000010f83a306: hlt    
  0x000000010f83a307: hlt    
Decoding compiled method 0x000000010f8396d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ed54ca8} 'methodType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/LambdaForm$NamedFunction'
  #           [sp+0x40]  (sp of caller)
  0x000000010f839840: mov    0x8(%rsi),%r10d
  0x000000010f839844: shl    $0x3,%r10
  0x000000010f839848: cmp    %rax,%r10
  0x000000010f83984b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f839851: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f83985c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f839860: mov    %eax,-0x14000(%rsp)
  0x000000010f839867: push   %rbp
  0x000000010f839868: sub    $0x30,%rsp
  0x000000010f83986c: movabs $0x10edc6420,%rax  ;   {metadata(method data for {method} {0x000000010ed54ca8} 'methodType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/LambdaForm$NamedFunction')}
  0x000000010f839876: mov    0xdc(%rax),%edi
  0x000000010f83987c: add    $0x8,%edi
  0x000000010f83987f: mov    %edi,0xdc(%rax)
  0x000000010f839885: movabs $0x10ed54ca8,%rax  ;   {metadata({method} {0x000000010ed54ca8} 'methodType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/LambdaForm$NamedFunction')}
  0x000000010f83988f: and    $0x1ff8,%edi
  0x000000010f839895: cmp    $0x0,%edi
  0x000000010f839898: je     0x000000010f839a30  ;*aload_0
                                                ; - java.lang.invoke.LambdaForm$NamedFunction::methodType@0 (line 1276)

  0x000000010f83989e: mov    0x10(%rsi),%eax
  0x000000010f8398a1: shl    $0x3,%rax          ;*getfield resolvedHandle
                                                ; - java.lang.invoke.LambdaForm$NamedFunction::methodType@1 (line 1276)

  0x000000010f8398a5: cmp    $0x0,%rax
  0x000000010f8398a9: movabs $0x10edc6420,%rdi  ;   {metadata(method data for {method} {0x000000010ed54ca8} 'methodType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/LambdaForm$NamedFunction')}
  0x000000010f8398b3: movabs $0x108,%rbx
  0x000000010f8398bd: je     0x000000010f8398cd
  0x000000010f8398c3: movabs $0x118,%rbx
  0x000000010f8398cd: mov    (%rdi,%rbx,1),%rdx
  0x000000010f8398d1: lea    0x1(%rdx),%rdx
  0x000000010f8398d5: mov    %rdx,(%rdi,%rbx,1)
  0x000000010f8398d9: je     0x000000010f839985  ;*ifnull
                                                ; - java.lang.invoke.LambdaForm$NamedFunction::methodType@4 (line 1276)

  0x000000010f8398df: cmp    (%rax),%rax        ;*invokevirtual type
                                                ; - java.lang.invoke.LambdaForm$NamedFunction::methodType@11 (line 1277)
                                                ; implicit exception: dispatches to 0x000000010f839a47
  0x000000010f8398e2: mov    %rax,%rsi
  0x000000010f8398e5: movabs $0x10edc6420,%rdi  ;   {metadata(method data for {method} {0x000000010ed54ca8} 'methodType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/LambdaForm$NamedFunction')}
  0x000000010f8398ef: mov    0x8(%rsi),%esi
  0x000000010f8398f2: shl    $0x3,%rsi
  0x000000010f8398f6: cmp    0x130(%rdi),%rsi
  0x000000010f8398fd: jne    0x000000010f83990c
  0x000000010f8398ff: addq   $0x1,0x138(%rdi)
  0x000000010f839907: jmpq   0x000000010f839972
  0x000000010f83990c: cmp    0x140(%rdi),%rsi
  0x000000010f839913: jne    0x000000010f839922
  0x000000010f839915: addq   $0x1,0x148(%rdi)
  0x000000010f83991d: jmpq   0x000000010f839972
  0x000000010f839922: cmpq   $0x0,0x130(%rdi)
  0x000000010f83992d: jne    0x000000010f839946
  0x000000010f83992f: mov    %rsi,0x130(%rdi)
  0x000000010f839936: movq   $0x1,0x138(%rdi)
  0x000000010f839941: jmpq   0x000000010f839972
  0x000000010f839946: cmpq   $0x0,0x140(%rdi)
  0x000000010f839951: jne    0x000000010f83996a
  0x000000010f839953: mov    %rsi,0x140(%rdi)
  0x000000010f83995a: movq   $0x1,0x148(%rdi)
  0x000000010f839965: jmpq   0x000000010f839972
  0x000000010f83996a: addq   $0x1,0x128(%rdi)
  0x000000010f839972: mov    0x10(%rax),%eax
  0x000000010f839975: shl    $0x3,%rax          ;*getfield type
                                                ; - java.lang.invoke.MethodHandle::type@1 (line 446)
                                                ; - java.lang.invoke.LambdaForm$NamedFunction::methodType@11 (line 1277)

  0x000000010f839979: add    $0x30,%rsp
  0x000000010f83997d: pop    %rbp
  0x000000010f83997e: test   %eax,-0x8d9e884(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f839984: retq                      ;*areturn
                                                ; - java.lang.invoke.LambdaForm$NamedFunction::methodType@14 (line 1277)

  0x000000010f839985: mov    0xc(%rsi),%esi
  0x000000010f839988: shl    $0x3,%rsi          ;*getfield member
                                                ; - java.lang.invoke.LambdaForm$NamedFunction::methodType@16 (line 1280)

  0x000000010f83998c: cmp    (%rsi),%rax        ;*invokevirtual getInvocationType
                                                ; - java.lang.invoke.LambdaForm$NamedFunction::methodType@19 (line 1280)
                                                ; implicit exception: dispatches to 0x000000010f839a4c
  0x000000010f83998f: mov    %rsi,%rdi
  0x000000010f839992: movabs $0x10edc6420,%rbx  ;   {metadata(method data for {method} {0x000000010ed54ca8} 'methodType' '()Ljava/lang/invoke/MethodType;' in 'java/lang/invoke/LambdaForm$NamedFunction')}
  0x000000010f83999c: mov    0x8(%rdi),%edi
  0x000000010f83999f: shl    $0x3,%rdi
  0x000000010f8399a3: cmp    0x160(%rbx),%rdi
  0x000000010f8399aa: jne    0x000000010f8399b9
  0x000000010f8399ac: addq   $0x1,0x168(%rbx)
  0x000000010f8399b4: jmpq   0x000000010f839a1f
  0x000000010f8399b9: cmp    0x170(%rbx),%rdi
  0x000000010f8399c0: jne    0x000000010f8399cf
  0x000000010f8399c2: addq   $0x1,0x178(%rbx)
  0x000000010f8399ca: jmpq   0x000000010f839a1f
  0x000000010f8399cf: cmpq   $0x0,0x160(%rbx)
  0x000000010f8399da: jne    0x000000010f8399f3
  0x000000010f8399dc: mov    %rdi,0x160(%rbx)
  0x000000010f8399e3: movq   $0x1,0x168(%rbx)
  0x000000010f8399ee: jmpq   0x000000010f839a1f
  0x000000010f8399f3: cmpq   $0x0,0x170(%rbx)
  0x000000010f8399fe: jne    0x000000010f839a17
  0x000000010f839a00: mov    %rdi,0x170(%rbx)
  0x000000010f839a07: movq   $0x1,0x178(%rbx)
  0x000000010f839a12: jmpq   0x000000010f839a1f
  0x000000010f839a17: addq   $0x1,0x158(%rbx)
  0x000000010f839a1f: callq  0x000000010f7170a0  ; OopMap{off=484}
                                                ;*invokevirtual getInvocationType
                                                ; - java.lang.invoke.LambdaForm$NamedFunction::methodType@19 (line 1280)
                                                ;   {optimized virtual_call}
  0x000000010f839a24: add    $0x30,%rsp
  0x000000010f839a28: pop    %rbp
  0x000000010f839a29: test   %eax,-0x8d9e92f(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f839a2f: retq   
  0x000000010f839a30: mov    %rax,0x8(%rsp)
  0x000000010f839a35: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f839a3d: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=514}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.LambdaForm$NamedFunction::methodType@-1 (line 1276)
                                                ;   {runtime_call}
  0x000000010f839a42: jmpq   0x000000010f83989e
  0x000000010f839a47: callq  0x000000010f7cd0c0  ; OopMap{rax=Oop off=524}
                                                ;*invokevirtual type
                                                ; - java.lang.invoke.LambdaForm$NamedFunction::methodType@11 (line 1277)
                                                ;   {runtime_call}
  0x000000010f839a4c: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop off=529}
                                                ;*invokevirtual getInvocationType
                                                ; - java.lang.invoke.LambdaForm$NamedFunction::methodType@19 (line 1280)
                                                ;   {runtime_call}
  0x000000010f839a51: nop
  0x000000010f839a52: nop
  0x000000010f839a53: mov    0x2a8(%r15),%rax
  0x000000010f839a5a: movabs $0x0,%r10
  0x000000010f839a64: mov    %r10,0x2a8(%r15)
  0x000000010f839a6b: movabs $0x0,%r10
  0x000000010f839a75: mov    %r10,0x2b0(%r15)
  0x000000010f839a7c: add    $0x30,%rsp
  0x000000010f839a80: pop    %rbp
  0x000000010f839a81: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f839a86: hlt    
  0x000000010f839a87: hlt    
  0x000000010f839a88: hlt    
  0x000000010f839a89: hlt    
  0x000000010f839a8a: hlt    
  0x000000010f839a8b: hlt    
  0x000000010f839a8c: hlt    
  0x000000010f839a8d: hlt    
  0x000000010f839a8e: hlt    
  0x000000010f839a8f: hlt    
  0x000000010f839a90: hlt    
  0x000000010f839a91: hlt    
  0x000000010f839a92: hlt    
  0x000000010f839a93: hlt    
  0x000000010f839a94: hlt    
  0x000000010f839a95: hlt    
  0x000000010f839a96: hlt    
  0x000000010f839a97: hlt    
  0x000000010f839a98: hlt    
  0x000000010f839a99: hlt    
  0x000000010f839a9a: hlt    
  0x000000010f839a9b: hlt    
  0x000000010f839a9c: hlt    
  0x000000010f839a9d: hlt    
  0x000000010f839a9e: hlt    
  0x000000010f839a9f: hlt    
[Stub Code]
  0x000000010f839aa0: nop                       ;   {no_reloc}
  0x000000010f839aa1: nop
  0x000000010f839aa2: nop
  0x000000010f839aa3: nop
  0x000000010f839aa4: nop
  0x000000010f839aa5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f839aaf: jmpq   0x000000010f839aaf  ;   {runtime_call}
[Exception Handler]
  0x000000010f839ab4: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f839ab9: mov    %rsp,-0x28(%rsp)
  0x000000010f839abe: sub    $0x80,%rsp
  0x000000010f839ac5: mov    %rax,0x78(%rsp)
  0x000000010f839aca: mov    %rcx,0x70(%rsp)
  0x000000010f839acf: mov    %rdx,0x68(%rsp)
  0x000000010f839ad4: mov    %rbx,0x60(%rsp)
  0x000000010f839ad9: mov    %rbp,0x50(%rsp)
  0x000000010f839ade: mov    %rsi,0x48(%rsp)
  0x000000010f839ae3: mov    %rdi,0x40(%rsp)
  0x000000010f839ae8: mov    %r8,0x38(%rsp)
  0x000000010f839aed: mov    %r9,0x30(%rsp)
  0x000000010f839af2: mov    %r10,0x28(%rsp)
  0x000000010f839af7: mov    %r11,0x20(%rsp)
  0x000000010f839afc: mov    %r12,0x18(%rsp)
  0x000000010f839b01: mov    %r13,0x10(%rsp)
  0x000000010f839b06: mov    %r14,0x8(%rsp)
  0x000000010f839b0b: mov    %r15,(%rsp)
  0x000000010f839b0f: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f839b19: movabs $0x10f839ab9,%rsi  ;   {internal_word}
  0x000000010f839b23: mov    %rsp,%rdx
  0x000000010f839b26: and    $0xfffffffffffffff0,%rsp
  0x000000010f839b2a: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f839b2f: hlt    
[Deopt Handler Code]
  0x000000010f839b30: movabs $0x10f839b30,%r10  ;   {section_word}
  0x000000010f839b3a: push   %r10
  0x000000010f839b3c: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f839b41: hlt    
  0x000000010f839b42: hlt    
  0x000000010f839b43: hlt    
  0x000000010f839b44: hlt    
  0x000000010f839b45: hlt    
  0x000000010f839b46: hlt    
  0x000000010f839b47: hlt    
Decoding compiled method 0x000000010f83eb10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010eac8968} 'arity' '()I' in 'java/lang/invoke/LambdaForm'
  #           [sp+0x40]  (sp of caller)
  0x000000010f83ec60: mov    0x8(%rsi),%r10d
  0x000000010f83ec64: shl    $0x3,%r10
  0x000000010f83ec68: cmp    %rax,%r10
  0x000000010f83ec6b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f83ec71: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f83ec7c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f83ec80: mov    %eax,-0x14000(%rsp)
  0x000000010f83ec87: push   %rbp
  0x000000010f83ec88: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.lang.invoke.LambdaForm::arity@0 (line 518)

  0x000000010f83ec8c: mov    0xc(%rsi),%eax     ;*getfield arity
                                                ; - java.lang.invoke.LambdaForm::arity@1 (line 518)

  0x000000010f83ec8f: add    $0x30,%rsp
  0x000000010f83ec93: pop    %rbp
  0x000000010f83ec94: test   %eax,-0x8da3b9a(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f83ec9a: retq   
  0x000000010f83ec9b: nop
  0x000000010f83ec9c: nop
  0x000000010f83ec9d: mov    0x2a8(%r15),%rax
  0x000000010f83eca4: movabs $0x0,%r10
  0x000000010f83ecae: mov    %r10,0x2a8(%r15)
  0x000000010f83ecb5: movabs $0x0,%r10
  0x000000010f83ecbf: mov    %r10,0x2b0(%r15)
  0x000000010f83ecc6: add    $0x30,%rsp
  0x000000010f83ecca: pop    %rbp
  0x000000010f83eccb: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f83ecd0: hlt    
  0x000000010f83ecd1: hlt    
  0x000000010f83ecd2: hlt    
  0x000000010f83ecd3: hlt    
  0x000000010f83ecd4: hlt    
  0x000000010f83ecd5: hlt    
  0x000000010f83ecd6: hlt    
  0x000000010f83ecd7: hlt    
  0x000000010f83ecd8: hlt    
  0x000000010f83ecd9: hlt    
  0x000000010f83ecda: hlt    
  0x000000010f83ecdb: hlt    
  0x000000010f83ecdc: hlt    
  0x000000010f83ecdd: hlt    
  0x000000010f83ecde: hlt    
  0x000000010f83ecdf: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f83ece0: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f83ece5: mov    %rsp,-0x28(%rsp)
  0x000000010f83ecea: sub    $0x80,%rsp
  0x000000010f83ecf1: mov    %rax,0x78(%rsp)
  0x000000010f83ecf6: mov    %rcx,0x70(%rsp)
  0x000000010f83ecfb: mov    %rdx,0x68(%rsp)
  0x000000010f83ed00: mov    %rbx,0x60(%rsp)
  0x000000010f83ed05: mov    %rbp,0x50(%rsp)
  0x000000010f83ed0a: mov    %rsi,0x48(%rsp)
  0x000000010f83ed0f: mov    %rdi,0x40(%rsp)
  0x000000010f83ed14: mov    %r8,0x38(%rsp)
  0x000000010f83ed19: mov    %r9,0x30(%rsp)
  0x000000010f83ed1e: mov    %r10,0x28(%rsp)
  0x000000010f83ed23: mov    %r11,0x20(%rsp)
  0x000000010f83ed28: mov    %r12,0x18(%rsp)
  0x000000010f83ed2d: mov    %r13,0x10(%rsp)
  0x000000010f83ed32: mov    %r14,0x8(%rsp)
  0x000000010f83ed37: mov    %r15,(%rsp)
  0x000000010f83ed3b: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f83ed45: movabs $0x10f83ece5,%rsi  ;   {internal_word}
  0x000000010f83ed4f: mov    %rsp,%rdx
  0x000000010f83ed52: and    $0xfffffffffffffff0,%rsp
  0x000000010f83ed56: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f83ed5b: hlt    
[Deopt Handler Code]
  0x000000010f83ed5c: movabs $0x10f83ed5c,%r10  ;   {section_word}
  0x000000010f83ed66: push   %r10
  0x000000010f83ed68: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f83ed6d: hlt    
  0x000000010f83ed6e: hlt    
  0x000000010f83ed6f: hlt    
Decoding compiled method 0x000000010f83f850:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010eba3950} 'getBufIfOpen' '()[B' in 'java/io/BufferedInputStream'
  #           [sp+0x40]  (sp of caller)
  0x000000010f83f9c0: mov    0x8(%rsi),%r10d
  0x000000010f83f9c4: shl    $0x3,%r10
  0x000000010f83f9c8: cmp    %rax,%r10
  0x000000010f83f9cb: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f83f9d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f83f9dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f83f9e0: mov    %eax,-0x14000(%rsp)
  0x000000010f83f9e7: push   %rbp
  0x000000010f83f9e8: sub    $0x30,%rsp
  0x000000010f83f9ec: movabs $0x10edfb710,%rax  ;   {metadata(method data for {method} {0x000000010eba3950} 'getBufIfOpen' '()[B' in 'java/io/BufferedInputStream')}
  0x000000010f83f9f6: mov    0xdc(%rax),%edx
  0x000000010f83f9fc: add    $0x8,%edx
  0x000000010f83f9ff: mov    %edx,0xdc(%rax)
  0x000000010f83fa05: movabs $0x10eba3950,%rax  ;   {metadata({method} {0x000000010eba3950} 'getBufIfOpen' '()[B' in 'java/io/BufferedInputStream')}
  0x000000010f83fa0f: and    $0x1ff8,%edx
  0x000000010f83fa15: cmp    $0x0,%edx
  0x000000010f83fa18: je     0x000000010f83faee  ;*aload_0
                                                ; - java.io.BufferedInputStream::getBufIfOpen@0 (line 168)

  0x000000010f83fa1e: mov    0x20(%rsi),%eax
  0x000000010f83fa21: shl    $0x3,%rax          ;*getfield buf
                                                ; - java.io.BufferedInputStream::getBufIfOpen@1 (line 168)

  0x000000010f83fa25: cmp    $0x0,%rax
  0x000000010f83fa29: movabs $0x10edfb710,%rdx  ;   {metadata(method data for {method} {0x000000010eba3950} 'getBufIfOpen' '()[B' in 'java/io/BufferedInputStream')}
  0x000000010f83fa33: movabs $0x108,%rsi
  0x000000010f83fa3d: jne    0x000000010f83fa4d
  0x000000010f83fa43: movabs $0x118,%rsi
  0x000000010f83fa4d: mov    (%rdx,%rsi,1),%rdi
  0x000000010f83fa51: lea    0x1(%rdi),%rdi
  0x000000010f83fa55: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f83fa59: je     0x000000010f83fa6b  ;*ifnonnull
                                                ; - java.io.BufferedInputStream::getBufIfOpen@6 (line 169)

  0x000000010f83fa5f: add    $0x30,%rsp
  0x000000010f83fa63: pop    %rbp
  0x000000010f83fa64: test   %eax,-0x8da496a(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f83fa6a: retq                      ;*areturn
                                                ; - java.io.BufferedInputStream::getBufIfOpen@20 (line 171)

  0x000000010f83fa6b: nopl   0x0(%rax,%rax,1)
  0x000000010f83fa70: jmpq   0x000000010f83fb14  ;   {no_reloc}
  0x000000010f83fa75: add    %al,(%rax)
  0x000000010f83fa77: add    %al,(%rax)
  0x000000010f83fa79: add    %cl,-0x75(%rcx)
  0x000000010f83fa7c: rex.RXB (bad) 
  0x000000010f83fa7e: lea    0x20(%rax),%rdi
  0x000000010f83fa82: cmp    0x70(%r15),%rdi
  0x000000010f83fa86: ja     0x000000010f83fb1e
  0x000000010f83fa8c: mov    %rdi,0x60(%r15)
  0x000000010f83fa90: mov    0xa8(%rdx),%rcx
  0x000000010f83fa97: mov    %rcx,(%rax)
  0x000000010f83fa9a: mov    %rdx,%rcx
  0x000000010f83fa9d: shr    $0x3,%rcx
  0x000000010f83faa1: mov    %ecx,0x8(%rax)
  0x000000010f83faa4: xor    %rcx,%rcx
  0x000000010f83faa7: mov    %ecx,0xc(%rax)
  0x000000010f83faaa: xor    %rcx,%rcx
  0x000000010f83faad: mov    %rcx,0x10(%rax)
  0x000000010f83fab1: mov    %rcx,0x18(%rax)    ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)

  0x000000010f83fab5: mov    %rax,%rdx
  0x000000010f83fab8: movabs $0x10edfb710,%rsi  ;   {metadata(method data for {method} {0x000000010eba3950} 'getBufIfOpen' '()[B' in 'java/io/BufferedInputStream')}
  0x000000010f83fac2: addq   $0x1,0x128(%rsi)
  0x000000010f83faca: movabs $0x795968eb0,%rdx  ;   {oop("Stream closed")}
  0x000000010f83fad4: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)

  0x000000010f83fad7: mov    %rax,0x20(%rsp)
  0x000000010f83fadc: nop
  0x000000010f83fadd: nop
  0x000000010f83fade: nop
  0x000000010f83fadf: callq  0x000000010f7170a0  ; OopMap{[32]=Oop off=292}
                                                ;*invokespecial <init>
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)
                                                ;   {optimized virtual_call}
  0x000000010f83fae4: mov    0x20(%rsp),%rax
  0x000000010f83fae9: jmpq   0x000000010f83fb53
  0x000000010f83faee: mov    %rax,0x8(%rsp)
  0x000000010f83faf3: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f83fafb: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=320}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::getBufIfOpen@-1 (line 168)
                                                ;   {runtime_call}
  0x000000010f83fb00: jmpq   0x000000010f83fa1e
  0x000000010f83fb05: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f83fb0f: mov    $0xa050f00,%eax
  0x000000010f83fb14: callq  0x000000010f7d08e0  ; OopMap{off=345}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ;   {runtime_call}
  0x000000010f83fb19: jmpq   0x000000010f83fa70
  0x000000010f83fb1e: mov    %rdx,%rdx
  0x000000010f83fb21: callq  0x000000010f7cd820  ; OopMap{off=358}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ;   {runtime_call}
  0x000000010f83fb26: jmp    0x000000010f83fab5
  0x000000010f83fb28: nop
  0x000000010f83fb29: nop
  0x000000010f83fb2a: mov    0x2a8(%r15),%rax
  0x000000010f83fb31: movabs $0x0,%r10
  0x000000010f83fb3b: mov    %r10,0x2a8(%r15)
  0x000000010f83fb42: movabs $0x0,%r10
  0x000000010f83fb4c: mov    %r10,0x2b0(%r15)
  0x000000010f83fb53: add    $0x30,%rsp
  0x000000010f83fb57: pop    %rbp
  0x000000010f83fb58: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f83fb5d: hlt    
  0x000000010f83fb5e: hlt    
  0x000000010f83fb5f: hlt    
[Stub Code]
  0x000000010f83fb60: nop                       ;   {no_reloc}
  0x000000010f83fb61: nop
  0x000000010f83fb62: nop
  0x000000010f83fb63: nop
  0x000000010f83fb64: nop
  0x000000010f83fb65: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f83fb6f: jmpq   0x000000010f83fb6f  ;   {runtime_call}
[Exception Handler]
  0x000000010f83fb74: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f83fb79: mov    %rsp,-0x28(%rsp)
  0x000000010f83fb7e: sub    $0x80,%rsp
  0x000000010f83fb85: mov    %rax,0x78(%rsp)
  0x000000010f83fb8a: mov    %rcx,0x70(%rsp)
  0x000000010f83fb8f: mov    %rdx,0x68(%rsp)
  0x000000010f83fb94: mov    %rbx,0x60(%rsp)
  0x000000010f83fb99: mov    %rbp,0x50(%rsp)
  0x000000010f83fb9e: mov    %rsi,0x48(%rsp)
  0x000000010f83fba3: mov    %rdi,0x40(%rsp)
  0x000000010f83fba8: mov    %r8,0x38(%rsp)
  0x000000010f83fbad: mov    %r9,0x30(%rsp)
  0x000000010f83fbb2: mov    %r10,0x28(%rsp)
  0x000000010f83fbb7: mov    %r11,0x20(%rsp)
  0x000000010f83fbbc: mov    %r12,0x18(%rsp)
  0x000000010f83fbc1: mov    %r13,0x10(%rsp)
  0x000000010f83fbc6: mov    %r14,0x8(%rsp)
  0x000000010f83fbcb: mov    %r15,(%rsp)
  0x000000010f83fbcf: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f83fbd9: movabs $0x10f83fb79,%rsi  ;   {internal_word}
  0x000000010f83fbe3: mov    %rsp,%rdx
  0x000000010f83fbe6: and    $0xfffffffffffffff0,%rsp
  0x000000010f83fbea: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f83fbef: hlt    
[Deopt Handler Code]
  0x000000010f83fbf0: movabs $0x10f83fbf0,%r10  ;   {section_word}
  0x000000010f83fbfa: push   %r10
  0x000000010f83fbfc: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f83fc01: hlt    
  0x000000010f83fc02: hlt    
  0x000000010f83fc03: hlt    
  0x000000010f83fc04: hlt    
  0x000000010f83fc05: hlt    
  0x000000010f83fc06: hlt    
  0x000000010f83fc07: hlt    
Decoding compiled method 0x000000010f83fd50:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010edfb158} 'readUTF' '(Ljava/io/DataInput;)Ljava/lang/String;' in 'java/io/DataInputStream'
  # parm0:    rsi:rsi   = 'java/io/DataInput'
  #           [sp+0x110]  (sp of caller)
  0x000000010f840140: mov    %eax,-0x14000(%rsp)
  0x000000010f840147: push   %rbp
  0x000000010f840148: sub    $0x100,%rsp
  0x000000010f84014f: movabs $0x10edfb998,%rdi  ;   {metadata(method data for {method} {0x000000010edfb158} 'readUTF' '(Ljava/io/DataInput;)Ljava/lang/String;' in 'java/io/DataInputStream')}
  0x000000010f840159: mov    0xdc(%rdi),%ebx
  0x000000010f84015f: add    $0x8,%ebx
  0x000000010f840162: mov    %ebx,0xdc(%rdi)
  0x000000010f840168: movabs $0x10edfb158,%rdi  ;   {metadata({method} {0x000000010edfb158} 'readUTF' '(Ljava/io/DataInput;)Ljava/lang/String;' in 'java/io/DataInputStream')}
  0x000000010f840172: and    $0x1ff8,%ebx
  0x000000010f840178: cmp    $0x0,%ebx
  0x000000010f84017b: je     0x000000010f841cd1  ;*aload_0
                                                ; - java.io.DataInputStream::readUTF@0 (line 589)

  0x000000010f840181: cmp    $0x0,%rsi
  0x000000010f840185: je     0x000000010f8401ab
  0x000000010f84018b: movabs $0x7c007ec40,%rdx  ;   {metadata('java/io/DataInputStream')}
  0x000000010f840195: mov    0x8(%rsi),%eax
  0x000000010f840198: shl    $0x3,%rax
  0x000000010f84019c: cmp    0x40(%rax),%rdx
  0x000000010f8401a0: jne    0x000000010f841ce8
  0x000000010f8401a6: jmpq   0x000000010f8401ab
  0x000000010f8401ab: mov    %rsi,%rdi
  0x000000010f8401ae: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x000000010f841ced
  0x000000010f8401b1: mov    %rsi,%rdi
  0x000000010f8401b4: movabs $0x10edfb998,%rbx  ;   {metadata(method data for {method} {0x000000010edfb158} 'readUTF' '(Ljava/io/DataInput;)Ljava/lang/String;' in 'java/io/DataInputStream')}
  0x000000010f8401be: addq   $0x1,0x118(%rbx)
  0x000000010f8401c6: mov    %rsi,%rdi
  0x000000010f8401c9: mov    %rdi,%rsi          ;*invokeinterface readUnsignedShort
                                                ; - java.io.DataInputStream::readUTF@1 (line 589)

  0x000000010f8401cc: mov    %rdi,0x68(%rsp)
  0x000000010f8401d1: nop
  0x000000010f8401d2: nop
  0x000000010f8401d3: nop
  0x000000010f8401d4: nop
  0x000000010f8401d5: nop
  0x000000010f8401d6: nop
  0x000000010f8401d7: callq  0x000000010f7170a0  ; OopMap{[104]=Oop off=156}
                                                ;*invokeinterface readUnsignedShort
                                                ; - java.io.DataInputStream::readUTF@1 (line 589)
                                                ;   {optimized virtual_call}
  0x000000010f8401dc: mov    0x68(%rsp),%r9
  0x000000010f8401e1: cmp    $0x0,%r9
  0x000000010f8401e5: jne    0x000000010f840200
  0x000000010f8401e7: movabs $0x10edfb998,%rsi  ;   {metadata(method data for {method} {0x000000010edfb158} 'readUTF' '(Ljava/io/DataInput;)Ljava/lang/String;' in 'java/io/DataInputStream')}
  0x000000010f8401f1: orl    $0x100,0x130(%rsi)
  0x000000010f8401fb: jmpq   0x000000010f8402c2
  0x000000010f840200: movabs $0x7c007ec40,%rdi  ;   {metadata('java/io/DataInputStream')}
  0x000000010f84020a: mov    0x8(%r9),%edx
  0x000000010f84020e: shl    $0x3,%rdx
  0x000000010f840212: cmp    %rdx,%rdi
  0x000000010f840215: jne    0x000000010f8402a6
  0x000000010f84021b: movabs $0x10edfb998,%rsi  ;   {metadata(method data for {method} {0x000000010edfb158} 'readUTF' '(Ljava/io/DataInput;)Ljava/lang/String;' in 'java/io/DataInputStream')}
  0x000000010f840225: mov    0x8(%r9),%edi
  0x000000010f840229: shl    $0x3,%rdi
  0x000000010f84022d: cmp    0x140(%rsi),%rdi
  0x000000010f840234: jne    0x000000010f840243
  0x000000010f840236: addq   $0x1,0x148(%rsi)
  0x000000010f84023e: jmpq   0x000000010f8402c7
  0x000000010f840243: cmp    0x150(%rsi),%rdi
  0x000000010f84024a: jne    0x000000010f840259
  0x000000010f84024c: addq   $0x1,0x158(%rsi)
  0x000000010f840254: jmpq   0x000000010f8402c7
  0x000000010f840259: cmpq   $0x0,0x140(%rsi)
  0x000000010f840264: jne    0x000000010f84027d
  0x000000010f840266: mov    %rdi,0x140(%rsi)
  0x000000010f84026d: movq   $0x1,0x148(%rsi)
  0x000000010f840278: jmpq   0x000000010f8402c7
  0x000000010f84027d: cmpq   $0x0,0x150(%rsi)
  0x000000010f840288: jne    0x000000010f8402a1
  0x000000010f84028a: mov    %rdi,0x150(%rsi)
  0x000000010f840291: movq   $0x1,0x158(%rsi)
  0x000000010f84029c: jmpq   0x000000010f8402c7
  0x000000010f8402a1: jmpq   0x000000010f8402c7
  0x000000010f8402a6: movabs $0x10edfb998,%rsi  ;   {metadata(method data for {method} {0x000000010edfb158} 'readUTF' '(Ljava/io/DataInput;)Ljava/lang/String;' in 'java/io/DataInputStream')}
  0x000000010f8402b0: subq   $0x1,0x138(%rsi)
  0x000000010f8402b8: jmpq   0x000000010f8402c2
  0x000000010f8402bd: jmpq   0x000000010f8402c7
  0x000000010f8402c2: xor    %rbx,%rbx
  0x000000010f8402c5: jmp    0x000000010f8402d1
  0x000000010f8402c7: movabs $0x1,%rbx          ;*instanceof
                                                ; - java.io.DataInputStream::readUTF@12 (line 592)

  0x000000010f8402d1: cmp    $0x0,%ebx
  0x000000010f8402d4: movabs $0x10edfb998,%rbx  ;   {metadata(method data for {method} {0x000000010edfb158} 'readUTF' '(Ljava/io/DataInput;)Ljava/lang/String;' in 'java/io/DataInputStream')}
  0x000000010f8402de: movabs $0x168,%rdx
  0x000000010f8402e8: je     0x000000010f8402f8
  0x000000010f8402ee: movabs $0x178,%rdx
  0x000000010f8402f8: mov    (%rbx,%rdx,1),%rsi
  0x000000010f8402fc: lea    0x1(%rsi),%rsi
  0x000000010f840300: mov    %rsi,(%rbx,%rdx,1)
  0x000000010f840304: je     0x000000010f840593  ;*ifeq
                                                ; - java.io.DataInputStream::readUTF@15 (line 592)

  0x000000010f84030a: cmp    $0x0,%r9
  0x000000010f84030e: jne    0x000000010f840329
  0x000000010f840310: movabs $0x10edfb998,%rdx  ;   {metadata(method data for {method} {0x000000010edfb158} 'readUTF' '(Ljava/io/DataInput;)Ljava/lang/String;' in 'java/io/DataInputStream')}
  0x000000010f84031a: orl    $0x100,0x180(%rdx)
  0x000000010f840324: jmpq   0x000000010f8403eb
  0x000000010f840329: movabs $0x7c007ec40,%rsi  ;   {metadata('java/io/DataInputStream')}
  0x000000010f840333: mov    0x8(%r9),%ebx
  0x000000010f840337: shl    $0x3,%rbx
  0x000000010f84033b: cmp    %rbx,%rsi
  0x000000010f84033e: jne    0x000000010f8403cf
  0x000000010f840344: movabs $0x10edfb998,%rdx  ;   {metadata(method data for {method} {0x000000010edfb158} 'readUTF' '(Ljava/io/DataInput;)Ljava/lang/String;' in 'java/io/DataInputStream')}
  0x000000010f84034e: mov    0x8(%r9),%esi
  0x000000010f840352: shl    $0x3,%rsi
  0x000000010f840356: cmp    0x190(%rdx),%rsi
  0x000000010f84035d: jne    0x000000010f84036c
  0x000000010f84035f: addq   $0x1,0x198(%rdx)
  0x000000010f840367: jmpq   0x000000010f8403eb
  0x000000010f84036c: cmp    0x1a0(%rdx),%rsi
  0x000000010f840373: jne    0x000000010f840382
  0x000000010f840375: addq   $0x1,0x1a8(%rdx)
  0x000000010f84037d: jmpq   0x000000010f8403eb
  0x000000010f840382: cmpq   $0x0,0x190(%rdx)
  0x000000010f84038d: jne    0x000000010f8403a6
  0x000000010f84038f: mov    %rsi,0x190(%rdx)
  0x000000010f840396: movq   $0x1,0x198(%rdx)
  0x000000010f8403a1: jmpq   0x000000010f8403eb
  0x000000010f8403a6: cmpq   $0x0,0x1a0(%rdx)
  0x000000010f8403b1: jne    0x000000010f8403ca
  0x000000010f8403b3: mov    %rsi,0x1a0(%rdx)
  0x000000010f8403ba: movq   $0x1,0x1a8(%rdx)
  0x000000010f8403c5: jmpq   0x000000010f8403eb
  0x000000010f8403ca: jmpq   0x000000010f8403eb
  0x000000010f8403cf: movabs $0x10edfb998,%rdx  ;   {metadata(method data for {method} {0x000000010edfb158} 'readUTF' '(Ljava/io/DataInput;)Ljava/lang/String;' in 'java/io/DataInputStream')}
  0x000000010f8403d9: subq   $0x1,0x188(%rdx)
  0x000000010f8403e1: jmpq   0x000000010f841cf2
  0x000000010f8403e6: jmpq   0x000000010f8403eb
  0x000000010f8403eb: mov    %r9,%r8            ;*checkcast
                                                ; - java.io.DataInputStream::readUTF@19 (line 593)

  0x000000010f8403ee: mov    0x10(%r8),%ebx     ; implicit exception: dispatches to 0x000000010f841cfb
  0x000000010f8403f2: shl    $0x3,%rbx          ;*getfield bytearr
                                                ; - java.io.DataInputStream::readUTF@26 (line 594)

  0x000000010f8403f6: mov    0xc(%rbx),%ebx     ;*arraylength
                                                ; - java.io.DataInputStream::readUTF@29 (line 594)
                                                ; implicit exception: dispatches to 0x000000010f841d00
  0x000000010f8403f9: cmp    %eax,%ebx
  0x000000010f8403fb: movabs $0x10edfb998,%rbx  ;   {metadata(method data for {method} {0x000000010edfb158} 'readUTF' '(Ljava/io/DataInput;)Ljava/lang/String;' in 'java/io/DataInputStream')}
  0x000000010f840405: movabs $0x1b8,%rdx
  0x000000010f84040f: jge    0x000000010f84041f
  0x000000010f840415: movabs $0x1c8,%rdx
  0x000000010f84041f: mov    (%rbx,%rdx,1),%rsi
  0x000000010f840423: lea    0x1(%rsi),%rsi
  0x000000010f840427: mov    %rsi,(%rbx,%rdx,1)
  0x000000010f84042b: jl     0x000000010f840439  ;*if_icmpge
                                                ; - java.io.DataInputStream::readUTF@31 (line 594)

  0x000000010f840431: mov    %rax,%r13
  0x000000010f840434: jmpq   0x000000010f84056e  ;*aload
                                                ; - java.io.DataInputStream::readUTF@54 (line 598)

  0x000000010f840439: mov    %rax,%r11
  0x000000010f84043c: shl    %r11d
  0x000000010f84043f: mov    %r11,%rbx
  0x000000010f840442: movabs $0x7c00007a8,%rdx  ;   {metadata({type array byte})}
  0x000000010f84044c: mov    %rax,%r13
  0x000000010f84044f: movslq %ebx,%rbx
  0x000000010f840452: mov    %rbx,%rdi
  0x000000010f840455: cmp    $0xffffff,%rbx
  0x000000010f84045c: ja     0x000000010f841d05
  0x000000010f840462: movabs $0x17,%rsi
  0x000000010f84046c: lea    (%rsi,%rbx,1),%rsi
  0x000000010f840470: and    $0xfffffffffffffff8,%rsi
  0x000000010f840474: mov    0x60(%r15),%rax
  0x000000010f840478: lea    (%rax,%rsi,1),%rsi
  0x000000010f84047c: cmp    0x70(%r15),%rsi
  0x000000010f840480: ja     0x000000010f841d05
  0x000000010f840486: mov    %rsi,0x60(%r15)
  0x000000010f84048a: sub    %rax,%rsi
  0x000000010f84048d: movq   $0x1,(%rax)
  0x000000010f840494: mov    %rdx,%rcx
  0x000000010f840497: shr    $0x3,%rcx
  0x000000010f84049b: mov    %ecx,0x8(%rax)
  0x000000010f84049e: mov    %ebx,0xc(%rax)
  0x000000010f8404a1: sub    $0x10,%rsi
  0x000000010f8404a5: je     0x000000010f8404bc
  0x000000010f8404ab: xor    %rbx,%rbx
  0x000000010f8404ae: shr    $0x3,%rsi
  0x000000010f8404b2: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000010f8404b7: dec    %rsi
  0x000000010f8404ba: jne    0x000000010f8404b2  ;*newarray
                                                ; - java.io.DataInputStream::readUTF@39 (line 595)

  0x000000010f8404bc: mov    %rax,%r10
  0x000000010f8404bf: shr    $0x3,%r10
  0x000000010f8404c3: mov    %r10d,0x10(%r8)
  0x000000010f8404c7: mov    %r8,%rbx
  0x000000010f8404ca: shr    $0x9,%rbx
  0x000000010f8404ce: movabs $0x1065b9000,%r14
  0x000000010f8404d8: movb   $0x0,(%rbx,%r14,1)  ;*putfield bytearr
                                                ; - java.io.DataInputStream::readUTF@41 (line 595)

  0x000000010f8404dd: mov    %r11,%rbx
  0x000000010f8404e0: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000000010f8404ea: movslq %ebx,%rbx
  0x000000010f8404ed: mov    %rbx,%rdi
  0x000000010f8404f0: cmp    $0xffffff,%rbx
  0x000000010f8404f7: ja     0x000000010f841d0f
  0x000000010f8404fd: movabs $0x17,%rsi
  0x000000010f840507: lea    (%rsi,%rbx,2),%rsi
  0x000000010f84050b: and    $0xfffffffffffffff8,%rsi
  0x000000010f84050f: mov    0x60(%r15),%rax
  0x000000010f840513: lea    (%rax,%rsi,1),%rsi
  0x000000010f840517: cmp    0x70(%r15),%rsi
  0x000000010f84051b: ja     0x000000010f841d0f
  0x000000010f840521: mov    %rsi,0x60(%r15)
  0x000000010f840525: sub    %rax,%rsi
  0x000000010f840528: movq   $0x1,(%rax)
  0x000000010f84052f: mov    %rdx,%rcx
  0x000000010f840532: shr    $0x3,%rcx
  0x000000010f840536: mov    %ecx,0x8(%rax)
  0x000000010f840539: mov    %ebx,0xc(%rax)
  0x000000010f84053c: sub    $0x10,%rsi
  0x000000010f840540: je     0x000000010f840557
  0x000000010f840546: xor    %rbx,%rbx
  0x000000010f840549: shr    $0x3,%rsi
  0x000000010f84054d: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000010f840552: dec    %rsi
  0x000000010f840555: jne    0x000000010f84054d  ;*newarray
                                                ; - java.io.DataInputStream::readUTF@49 (line 596)

  0x000000010f840557: mov    %rax,%r10
  0x000000010f84055a: shr    $0x3,%r10
  0x000000010f84055e: mov    %r10d,0x14(%r8)
  0x000000010f840562: mov    %r8,%rbx
  0x000000010f840565: shr    $0x9,%rbx
  0x000000010f840569: movb   $0x0,(%rbx,%r14,1)  ;*putfield chararr
                                                ; - java.io.DataInputStream::readUTF@51 (line 596)

  0x000000010f84056e: mov    0x14(%r8),%ebx
  0x000000010f840572: shl    $0x3,%rbx          ;*getfield chararr
                                                ; - java.io.DataInputStream::readUTF@56 (line 598)

  0x000000010f840576: mov    0x10(%r8),%edx
  0x000000010f84057a: shl    $0x3,%rdx          ;*getfield bytearr
                                                ; - java.io.DataInputStream::readUTF@62 (line 599)

  0x000000010f84057e: movabs $0x10edfb998,%rsi  ;   {metadata(method data for {method} {0x000000010edfb158} 'readUTF' '(Ljava/io/DataInput;)Ljava/lang/String;' in 'java/io/DataInputStream')}
  0x000000010f840588: incl   0x1d8(%rsi)
  0x000000010f84058e: jmpq   0x000000010f840693  ;*goto
                                                ; - java.io.DataInputStream::readUTF@66 (line 600)

  0x000000010f840593: mov    %rax,%r13
  0x000000010f840596: mov    %r13,%rbx
  0x000000010f840599: movabs $0x7c00007a8,%rdx  ;   {metadata({type array byte})}
  0x000000010f8405a3: movslq %ebx,%rbx
  0x000000010f8405a6: mov    %rbx,%rdi
  0x000000010f8405a9: cmp    $0xffffff,%rbx
  0x000000010f8405b0: ja     0x000000010f841d19
  0x000000010f8405b6: movabs $0x17,%rsi
  0x000000010f8405c0: lea    (%rsi,%rbx,1),%rsi
  0x000000010f8405c4: and    $0xfffffffffffffff8,%rsi
  0x000000010f8405c8: mov    0x60(%r15),%rax
  0x000000010f8405cc: lea    (%rax,%rsi,1),%rsi
  0x000000010f8405d0: cmp    0x70(%r15),%rsi
  0x000000010f8405d4: ja     0x000000010f841d19
  0x000000010f8405da: mov    %rsi,0x60(%r15)
  0x000000010f8405de: sub    %rax,%rsi
  0x000000010f8405e1: movq   $0x1,(%rax)
  0x000000010f8405e8: mov    %rdx,%rcx
  0x000000010f8405eb: shr    $0x3,%rcx
  0x000000010f8405ef: mov    %ecx,0x8(%rax)
  0x000000010f8405f2: mov    %ebx,0xc(%rax)
  0x000000010f8405f5: sub    $0x10,%rsi
  0x000000010f8405f9: je     0x000000010f840610
  0x000000010f8405ff: xor    %rbx,%rbx
  0x000000010f840602: shr    $0x3,%rsi
  0x000000010f840606: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000010f84060b: dec    %rsi
  0x000000010f84060e: jne    0x000000010f840606
  0x000000010f840610: mov    %rax,%r8           ;*newarray
                                                ; - java.io.DataInputStream::readUTF@70 (line 601)

  0x000000010f840613: mov    %r13,%rbx
  0x000000010f840616: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000000010f840620: movslq %ebx,%rbx
  0x000000010f840623: mov    %rbx,%rdi
  0x000000010f840626: cmp    $0xffffff,%rbx
  0x000000010f84062d: ja     0x000000010f841d23
  0x000000010f840633: movabs $0x17,%rsi
  0x000000010f84063d: lea    (%rsi,%rbx,2),%rsi
  0x000000010f840641: and    $0xfffffffffffffff8,%rsi
  0x000000010f840645: mov    0x60(%r15),%rax
  0x000000010f840649: lea    (%rax,%rsi,1),%rsi
  0x000000010f84064d: cmp    0x70(%r15),%rsi
  0x000000010f840651: ja     0x000000010f841d23
  0x000000010f840657: mov    %rsi,0x60(%r15)
  0x000000010f84065b: sub    %rax,%rsi
  0x000000010f84065e: movq   $0x1,(%rax)
  0x000000010f840665: mov    %rdx,%rcx
  0x000000010f840668: shr    $0x3,%rcx
  0x000000010f84066c: mov    %ecx,0x8(%rax)
  0x000000010f84066f: mov    %ebx,0xc(%rax)
  0x000000010f840672: sub    $0x10,%rsi
  0x000000010f840676: je     0x000000010f84068d
  0x000000010f84067c: xor    %rbx,%rbx
  0x000000010f84067f: shr    $0x3,%rsi
  0x000000010f840683: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000010f840688: dec    %rsi
  0x000000010f84068b: jne    0x000000010f840683  ;*newarray
                                                ; - java.io.DataInputStream::readUTF@74 (line 602)

  0x000000010f84068d: mov    %rax,%rbx
  0x000000010f840690: mov    %r8,%rdx           ;*iconst_0
                                                ; - java.io.DataInputStream::readUTF@77 (line 606)

  0x000000010f840693: mov    %rbx,0x80(%rsp)
  0x000000010f84069b: cmp    $0x0,%r9
  0x000000010f84069f: je     0x000000010f8406c6
  0x000000010f8406a5: movabs $0x7c007ec40,%rdi  ;   {metadata('java/io/DataInputStream')}
  0x000000010f8406af: mov    0x8(%r9),%esi
  0x000000010f8406b3: shl    $0x3,%rsi
  0x000000010f8406b7: cmp    0x40(%rsi),%rdi
  0x000000010f8406bb: jne    0x000000010f841d2d
  0x000000010f8406c1: jmpq   0x000000010f8406c6
  0x000000010f8406c6: mov    %r9,%rcx
  0x000000010f8406c9: mov    %r9,%rsi
  0x000000010f8406cc: movabs $0x10edfb998,%rcx  ;   {metadata(method data for {method} {0x000000010edfb158} 'readUTF' '(Ljava/io/DataInput;)Ljava/lang/String;' in 'java/io/DataInputStream')}
  0x000000010f8406d6: addq   $0x1,0x200(%rcx)
  0x000000010f8406de: mov    %rdx,%rdi
  0x000000010f8406e1: mov    %rdi,%rdx
  0x000000010f8406e4: mov    $0x0,%ecx
  0x000000010f8406e9: mov    %r13,%r8
  0x000000010f8406ec: mov    %r9,%rsi           ;*invokeinterface readFully
                                                ; - java.io.DataInputStream::readUTF@87 (line 609)

  0x000000010f8406ef: mov    %rdi,0x78(%rsp)
  0x000000010f8406f4: mov    %r13d,0x70(%rsp)
  0x000000010f8406f9: nop
  0x000000010f8406fa: nop
  0x000000010f8406fb: nop
  0x000000010f8406fc: nop
  0x000000010f8406fd: nop
  0x000000010f8406fe: nop
  0x000000010f8406ff: callq  0x000000010f7170a0  ; OopMap{[120]=Oop [128]=Oop off=1476}
                                                ;*invokeinterface readFully
                                                ; - java.io.DataInputStream::readUTF@87 (line 609)
                                                ;   {optimized virtual_call}
  0x000000010f840704: mov    $0x0,%edx
  0x000000010f840709: mov    $0x0,%esi
  0x000000010f84070e: mov    0x80(%rsp),%rbx
  0x000000010f840716: mov    0x78(%rsp),%rdi
  0x000000010f84071b: mov    0x70(%rsp),%eax
  0x000000010f84071f: jmpq   0x000000010f8407dd  ;*iload
                                                ; - java.io.DataInputStream::readUTF@92 (line 611)

  0x000000010f840724: nopl   0x0(%rax)
  0x000000010f840728: movslq %esi,%rcx
  0x000000010f84072b: cmp    0xc(%rdi),%esi     ; implicit exception: dispatches to 0x000000010f841d32
  0x000000010f84072e: jae    0x000000010f841d3c
  0x000000010f840734: movsbl 0x10(%rdi,%rcx,1),%ecx  ;*baload
                                                ; - java.io.DataInputStream::readUTF@101 (line 612)

  0x000000010f840739: and    $0xff,%ecx
  0x000000010f84073f: cmp    $0x7f,%ecx
  0x000000010f840742: movabs $0x10edfb998,%r8   ;   {metadata(method data for {method} {0x000000010edfb158} 'readUTF' '(Ljava/io/DataInput;)Ljava/lang/String;' in 'java/io/DataInputStream')}
  0x000000010f84074c: movabs $0x240,%r9
  0x000000010f840756: jle    0x000000010f840766
  0x000000010f84075c: movabs $0x250,%r9
  0x000000010f840766: mov    (%r8,%r9,1),%r11
  0x000000010f84076a: lea    0x1(%r11),%r11
  0x000000010f84076e: mov    %r11,(%r8,%r9,1)
  0x000000010f840772: jg     0x000000010f84081d  ;*if_icmple
                                                ; - java.io.DataInputStream::readUTF@112 (line 613)

  0x000000010f840778: inc    %esi
  0x000000010f84077a: mov    %rdx,%r8
  0x000000010f84077d: inc    %r8d
  0x000000010f840780: movslq %edx,%r9
  0x000000010f840783: cmp    0xc(%rbx),%edx     ; implicit exception: dispatches to 0x000000010f841d45
  0x000000010f840786: jae    0x000000010f841d4f
  0x000000010f84078c: mov    %cx,0x10(%rbx,%r9,2)  ;*castore
                                                ; - java.io.DataInputStream::readUTF@130 (line 615)

  0x000000010f840792: movabs $0x10edfb998,%rdx  ;   {metadata(method data for {method} {0x000000010edfb158} 'readUTF' '(Ljava/io/DataInput;)Ljava/lang/String;' in 'java/io/DataInputStream')}
  0x000000010f84079c: mov    0xe0(%rdx),%ecx
  0x000000010f8407a2: add    $0x8,%ecx
  0x000000010f8407a5: mov    %ecx,0xe0(%rdx)
  0x000000010f8407ab: movabs $0x10edfb158,%rdx  ;   {metadata({method} {0x000000010edfb158} 'readUTF' '(Ljava/io/DataInput;)Ljava/lang/String;' in 'java/io/DataInputStream')}
  0x000000010f8407b5: and    $0xfff8,%ecx
  0x000000010f8407bb: cmp    $0x0,%ecx
  0x000000010f8407be: je     0x000000010f841d58  ; OopMap{rbx=Oop rdi=Oop off=1668}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@131 (line 615)

  0x000000010f8407c4: test   %eax,-0x8da56ca(%rip)        # 0x0000000106a9b100
                                                ;   {poll}
  0x000000010f8407ca: movabs $0x10edfb998,%rdx  ;   {metadata(method data for {method} {0x000000010edfb158} 'readUTF' '(Ljava/io/DataInput;)Ljava/lang/String;' in 'java/io/DataInputStream')}
  0x000000010f8407d4: incl   0x278(%rdx)
  0x000000010f8407da: mov    %r8,%rdx           ;*goto
                                                ; - java.io.DataInputStream::readUTF@131 (line 615)

  0x000000010f8407dd: cmp    %eax,%esi
  0x000000010f8407df: movabs $0x10edfb998,%rcx  ;   {metadata(method data for {method} {0x000000010edfb158} 'readUTF' '(Ljava/io/DataInput;)Ljava/lang/String;' in 'java/io/DataInputStream')}
  0x000000010f8407e9: movabs $0x220,%r8
  0x000000010f8407f3: jge    0x000000010f840803
  0x000000010f8407f9: movabs $0x230,%r8
  0x000000010f840803: mov    (%rcx,%r8,1),%r9
  0x000000010f840807: lea    0x1(%r9),%r9
  0x000000010f84080b: mov    %r9,(%rcx,%r8,1)
  0x000000010f84080f: jl     0x000000010f840728  ;*if_icmpge
                                                ; - java.io.DataInputStream::readUTF@95 (line 611)

  0x000000010f840815: mov    %rdx,%r8
  0x000000010f840818: jmpq   0x000000010f840830  ;*iload
                                                ; - java.io.DataInputStream::readUTF@134 (line 618)

  0x000000010f84081d: movabs $0x10edfb998,%rcx  ;   {metadata(method data for {method} {0x000000010edfb158} 'readUTF' '(Ljava/io/DataInput;)Ljava/lang/String;' in 'java/io/DataInputStream')}
  0x000000010f840827: incl   0x260(%rcx)
  0x000000010f84082d: mov    %rdx,%r8           ;*goto
                                                ; - java.io.DataInputStream::readUTF@115 (line 613)

  0x000000010f840830: cmp    %eax,%esi
  0x000000010f840832: movabs $0x10edfb998,%rdx  ;   {metadata(method data for {method} {0x000000010edfb158} 'readUTF' '(Ljava/io/DataInput;)Ljava/lang/String;' in 'java/io/DataInputStream')}
  0x000000010f84083c: movabs $0x290,%rcx
  0x000000010f840846: jge    0x000000010f840856
  0x000000010f84084c: movabs $0x2a0,%rcx
  0x000000010f840856: mov    (%rdx,%rcx,1),%r9
  0x000000010f84085a: lea    0x1(%r9),%r9
  0x000000010f84085e: mov    %r9,(%rdx,%rcx,1)
  0x000000010f840862: jge    0x000000010f840bc3  ;*if_icmpge
                                                ; - java.io.DataInputStream::readUTF@137 (line 618)

  0x000000010f840868: movslq %esi,%rdx
  0x000000010f84086b: cmp    0xc(%rdi),%esi     ; implicit exception: dispatches to 0x000000010f841d6f
  0x000000010f84086e: jae    0x000000010f841d79
  0x000000010f840874: movsbl 0x10(%rdi,%rdx,1),%edx  ;*baload
                                                ; - java.io.DataInputStream::readUTF@143 (line 619)

  0x000000010f840879: and    $0xff,%edx
  0x000000010f84087f: mov    %rdx,%rcx
  0x000000010f840882: sar    $0x4,%ecx
  0x000000010f840885: cmp    $0x0,%ecx
  0x000000010f840888: jl     0x000000010f840897
  0x000000010f84088e: cmp    $0x7,%ecx
  0x000000010f840891: jle    0x000000010f840b48
  0x000000010f840897: cmp    $0xc,%ecx
  0x000000010f84089a: je     0x000000010f8408b7
  0x000000010f8408a0: cmp    $0xd,%ecx
  0x000000010f8408a3: je     0x000000010f8408b7
  0x000000010f8408a9: cmp    $0xe,%ecx
  0x000000010f8408ac: je     0x000000010f840955
  0x000000010f8408b2: jmpq   0x000000010f840bb7  ;*tableswitch
                                                ; - java.io.DataInputStream::readUTF@154 (line 620)

  0x000000010f8408b7: add    $0x2,%esi
  0x000000010f8408ba: cmp    %eax,%esi
  0x000000010f8408bc: movabs $0x10edfb998,%rcx  ;   {metadata(method data for {method} {0x000000010edfb158} 'readUTF' '(Ljava/io/DataInput;)Ljava/lang/String;' in 'java/io/DataInputStream')}
  0x000000010f8408c6: movabs $0x3d8,%r9
  0x000000010f8408d0: jle    0x000000010f8408e0
  0x000000010f8408d6: movabs $0x3e8,%r9
  0x000000010f8408e0: mov    (%rcx,%r9,1),%r11
  0x000000010f8408e4: lea    0x1(%r11),%r11
  0x000000010f8408e8: mov    %r11,(%rcx,%r9,1)
  0x000000010f8408ec: jg     0x000000010f841c79  ;*if_icmple
                                                ; - java.io.DataInputStream::readUTF@250 (line 629)

  0x000000010f8408f2: mov    %rsi,%rcx
  0x000000010f8408f5: dec    %ecx
  0x000000010f8408f7: movslq %ecx,%r9
  0x000000010f8408fa: cmp    0xc(%rdi),%ecx
  0x000000010f8408fd: jae    0x000000010f841d82
  0x000000010f840903: movsbl 0x10(%rdi,%r9,1),%ecx  ;*baload
                                                ; - java.io.DataInputStream::readUTF@268 (line 632)

  0x000000010f840909: mov    %rcx,%r9
  0x000000010f84090c: and    $0xc0,%r9d
  0x000000010f840913: cmp    $0x80,%r9d
  0x000000010f84091a: movabs $0x10edfb998,%r9   ;   {metadata(method data for {method} {0x000000010edfb158} 'readUTF' '(Ljava/io/DataInput;)Ljava/lang/String;' in 'java/io/DataInputStream')}
  0x000000010f840924: movabs $0x408,%r11
  0x000000010f84092e: je     0x000000010f84093e
  0x000000010f840934: movabs $0x418,%r11
  0x000000010f84093e: mov    (%r9,%r11,1),%r13
  0x000000010f840942: lea    0x1(%r13),%r13
  0x000000010f840946: mov    %r13,(%r9,%r11,1)
  0x000000010f84094a: je     0x000000010f840ad4
  0x000000010f840950: jmpq   0x000000010f841731  ;*if_icmpeq
                                                ; - java.io.DataInputStream::readUTF@280 (line 633)

  0x000000010f840955: add    $0x3,%esi
  0x000000010f840958: cmp    %eax,%esi
  0x000000010f84095a: movabs $0x10edfb998,%rcx  ;   {metadata(method data for {method} {0x000000010edfb158} 'readUTF' '(Ljava/io/DataInput;)Ljava/lang/String;' in 'java/io/DataInputStream')}
  0x000000010f840964: movabs $0x4f0,%r9
  0x000000010f84096e: jle    0x000000010f84097e
  0x000000010f840974: movabs $0x500,%r9
  0x000000010f84097e: mov    (%rcx,%r9,1),%r11
  0x000000010f840982: lea    0x1(%r11),%r11
  0x000000010f840986: mov    %r11,(%rcx,%r9,1)
  0x000000010f84098a: jg     0x000000010f8416d9  ;*if_icmple
                                                ; - java.io.DataInputStream::readUTF@342 (line 642)

  0x000000010f840990: mov    %rsi,%rcx
  0x000000010f840993: sub    $0x2,%ecx
  0x000000010f840996: movslq %ecx,%r9
  0x000000010f840999: cmp    0xc(%rdi),%ecx
  0x000000010f84099c: jae    0x000000010f841d8b
  0x000000010f8409a2: movsbl 0x10(%rdi,%r9,1),%ecx  ;*baload
                                                ; - java.io.DataInputStream::readUTF@360 (line 645)

  0x000000010f8409a8: mov    %rsi,%r9
  0x000000010f8409ab: dec    %r9d
  0x000000010f8409ae: mov    %r9d,0x74(%rsp)
  0x000000010f8409b3: movslq %r9d,%r11
  0x000000010f8409b6: cmp    0xc(%rdi),%r9d
  0x000000010f8409ba: jae    0x000000010f841d94
  0x000000010f8409c0: movsbl 0x10(%rdi,%r11,1),%r11d  ;*baload
                                                ; - java.io.DataInputStream::readUTF@368 (line 646)

  0x000000010f8409c6: mov    %rcx,%r13
  0x000000010f8409c9: and    $0xc0,%r13d
  0x000000010f8409d0: cmp    $0x80,%r13d
  0x000000010f8409d7: movabs $0x10edfb998,%r13  ;   {metadata(method data for {method} {0x000000010edfb158} 'readUTF' '(Ljava/io/DataInput;)Ljava/lang/String;' in 'java/io/DataInputStream')}
  0x000000010f8409e1: movabs $0x520,%r14
  0x000000010f8409eb: jne    0x000000010f8409fb
  0x000000010f8409f1: movabs $0x530,%r14
  0x000000010f8409fb: mov    0x0(%r13,%r14,1),%r9
  0x000000010f840a00: lea    0x1(%r9),%r9
  0x000000010f840a04: mov    %r9,0x0(%r13,%r14,1)
  0x000000010f840a09: jne    0x000000010f841191  ;*if_icmpne
                                                ; - java.io.DataInputStream::readUTF@380 (line 647)

  0x000000010f840a0f: mov    %r11,%r9
  0x000000010f840a12: and    $0xc0,%r9d
  0x000000010f840a19: cmp    $0x80,%r9d
  0x000000010f840a20: movabs $0x10edfb998,%r9   ;   {metadata(method data for {method} {0x000000010edfb158} 'readUTF' '(Ljava/io/DataInput;)Ljava/lang/String;' in 'java/io/DataInputStream')}
  0x000000010f840a2a: movabs $0x540,%r13
  0x000000010f840a34: je     0x000000010f840a44
  0x000000010f840a3a: movabs $0x550,%r13
  0x000000010f840a44: mov    (%r9,%r13,1),%r14
  0x000000010f840a48: lea    0x1(%r14),%r14
  0x000000010f840a4c: mov    %r14,(%r9,%r13,1)
  0x000000010f840a50: jne    0x000000010f841191  ;*if_icmpeq
                                                ; - java.io.DataInputStream::readUTF@392 (line 647)

  0x000000010f840a56: mov    %r8,%r9
  0x000000010f840a59: inc    %r9d
  0x000000010f840a5c: and    $0xf,%edx
  0x000000010f840a5f: shl    $0xc,%edx
  0x000000010f840a62: and    $0x3f,%ecx
  0x000000010f840a65: shl    $0x6,%ecx
  0x000000010f840a68: or     %rcx,%rdx
  0x000000010f840a6b: and    $0x3f,%r11d
  0x000000010f840a6f: or     %r11,%rdx
  0x000000010f840a72: movslq %r8d,%rcx
  0x000000010f840a75: cmp    0xc(%rbx),%r8d     ; implicit exception: dispatches to 0x000000010f841d9d
  0x000000010f840a79: jae    0x000000010f841da7
  0x000000010f840a7f: mov    %dx,0x10(%rbx,%rcx,2)  ;*castore
                                                ; - java.io.DataInputStream::readUTF@457 (line 650)

  0x000000010f840a84: movabs $0x10edfb998,%rdx  ;   {metadata(method data for {method} {0x000000010edfb158} 'readUTF' '(Ljava/io/DataInput;)Ljava/lang/String;' in 'java/io/DataInputStream')}
  0x000000010f840a8e: mov    0xe0(%rdx),%ecx
  0x000000010f840a94: add    $0x8,%ecx
  0x000000010f840a97: mov    %ecx,0xe0(%rdx)
  0x000000010f840a9d: movabs $0x10edfb158,%rdx  ;   {metadata({method} {0x000000010edfb158} 'readUTF' '(Ljava/io/DataInput;)Ljava/lang/String;' in 'java/io/DataInputStream')}
  0x000000010f840aa7: and    $0xfff8,%ecx
  0x000000010f840aad: cmp    $0x0,%ecx
  0x000000010f840ab0: je     0x000000010f841db0  ; OopMap{rbx=Oop rdi=Oop off=2422}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@458 (line 653)

  0x000000010f840ab6: test   %eax,-0x8da59bc(%rip)        # 0x0000000106a9b100
                                                ;   {poll}
  0x000000010f840abc: movabs $0x10edfb998,%rdx  ;   {metadata(method data for {method} {0x000000010edfb158} 'readUTF' '(Ljava/io/DataInput;)Ljava/lang/String;' in 'java/io/DataInputStream')}
  0x000000010f840ac6: incl   0x610(%rdx)
  0x000000010f840acc: mov    %r9,%r8
  0x000000010f840acf: jmpq   0x000000010f840830  ;*goto
                                                ; - java.io.DataInputStream::readUTF@458 (line 653)

  0x000000010f840ad4: mov    %r8,%r9
  0x000000010f840ad7: inc    %r9d
  0x000000010f840ada: and    $0x1f,%edx
  0x000000010f840add: shl    $0x6,%edx
  0x000000010f840ae0: and    $0x3f,%ecx
  0x000000010f840ae3: or     %rcx,%rdx
  0x000000010f840ae6: movslq %r8d,%rcx
  0x000000010f840ae9: cmp    0xc(%rbx),%r8d     ; implicit exception: dispatches to 0x000000010f841dc7
  0x000000010f840aed: jae    0x000000010f841dd1
  0x000000010f840af3: mov    %dx,0x10(%rbx,%rcx,2)  ;*castore
                                                ; - java.io.DataInputStream::readUTF@332 (line 636)

  0x000000010f840af8: movabs $0x10edfb998,%rdx  ;   {metadata(method data for {method} {0x000000010edfb158} 'readUTF' '(Ljava/io/DataInput;)Ljava/lang/String;' in 'java/io/DataInputStream')}
  0x000000010f840b02: mov    0xe0(%rdx),%ecx
  0x000000010f840b08: add    $0x8,%ecx
  0x000000010f840b0b: mov    %ecx,0xe0(%rdx)
  0x000000010f840b11: movabs $0x10edfb158,%rdx  ;   {metadata({method} {0x000000010edfb158} 'readUTF' '(Ljava/io/DataInput;)Ljava/lang/String;' in 'java/io/DataInputStream')}
  0x000000010f840b1b: and    $0xfff8,%ecx
  0x000000010f840b21: cmp    $0x0,%ecx
  0x000000010f840b24: je     0x000000010f841dda  ; OopMap{rbx=Oop rdi=Oop off=2538}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@333 (line 638)

  0x000000010f840b2a: test   %eax,-0x8da5a30(%rip)        # 0x0000000106a9b100
                                                ;   {poll}
  0x000000010f840b30: movabs $0x10edfb998,%rdx  ;   {metadata(method data for {method} {0x000000010edfb158} 'readUTF' '(Ljava/io/DataInput;)Ljava/lang/String;' in 'java/io/DataInputStream')}
  0x000000010f840b3a: incl   0x4d8(%rdx)
  0x000000010f840b40: mov    %r9,%r8
  0x000000010f840b43: jmpq   0x000000010f840830  ;*goto
                                                ; - java.io.DataInputStream::readUTF@333 (line 638)

  0x000000010f840b48: inc    %esi
  0x000000010f840b4a: mov    %r8,%rcx
  0x000000010f840b4d: inc    %ecx
  0x000000010f840b4f: movslq %r8d,%r9
  0x000000010f840b52: cmp    0xc(%rbx),%r8d     ; implicit exception: dispatches to 0x000000010f841df1
  0x000000010f840b56: jae    0x000000010f841dfb
  0x000000010f840b5c: mov    %dx,0x10(%rbx,%r9,2)  ;*castore
                                                ; - java.io.DataInputStream::readUTF@240 (line 624)

  0x000000010f840b62: movabs $0x10edfb998,%rdx  ;   {metadata(method data for {method} {0x000000010edfb158} 'readUTF' '(Ljava/io/DataInput;)Ljava/lang/String;' in 'java/io/DataInputStream')}
  0x000000010f840b6c: mov    0xe0(%rdx),%r8d
  0x000000010f840b73: add    $0x8,%r8d
  0x000000010f840b77: mov    %r8d,0xe0(%rdx)
  0x000000010f840b7e: movabs $0x10edfb158,%rdx  ;   {metadata({method} {0x000000010edfb158} 'readUTF' '(Ljava/io/DataInput;)Ljava/lang/String;' in 'java/io/DataInputStream')}
  0x000000010f840b88: and    $0xfff8,%r8d
  0x000000010f840b8f: cmp    $0x0,%r8d
  0x000000010f840b93: je     0x000000010f841e04  ; OopMap{rbx=Oop rdi=Oop off=2649}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@241 (line 625)

  0x000000010f840b99: test   %eax,-0x8da5a9f(%rip)        # 0x0000000106a9b100
                                                ;   {poll}
  0x000000010f840b9f: movabs $0x10edfb998,%rdx  ;   {metadata(method data for {method} {0x000000010edfb158} 'readUTF' '(Ljava/io/DataInput;)Ljava/lang/String;' in 'java/io/DataInputStream')}
  0x000000010f840ba9: incl   0x3c0(%rdx)
  0x000000010f840baf: mov    %rcx,%r8
  0x000000010f840bb2: jmpq   0x000000010f840830  ;*goto
                                                ; - java.io.DataInputStream::readUTF@241 (line 625)

  0x000000010f840bb7: mov    %esi,0x98(%rsp)
  0x000000010f840bbe: jmpq   0x000000010f840c4b  ;*new
                                                ; - java.io.DataInputStream::readUTF@461 (line 656)

  0x000000010f840bc3: movabs $0x7c00016d0,%rdx  ;   {metadata('java/lang/String')}
  0x000000010f840bcd: mov    0x60(%r15),%rax
  0x000000010f840bd1: lea    0x18(%rax),%rdi
  0x000000010f840bd5: cmp    0x70(%r15),%rdi
  0x000000010f840bd9: ja     0x000000010f841e1b
  0x000000010f840bdf: mov    %rdi,0x60(%r15)
  0x000000010f840be3: mov    0xa8(%rdx),%rcx
  0x000000010f840bea: mov    %rcx,(%rax)
  0x000000010f840bed: mov    %rdx,%rcx
  0x000000010f840bf0: shr    $0x3,%rcx
  0x000000010f840bf4: mov    %ecx,0x8(%rax)
  0x000000010f840bf7: xor    %rcx,%rcx
  0x000000010f840bfa: mov    %ecx,0xc(%rax)
  0x000000010f840bfd: xor    %rcx,%rcx
  0x000000010f840c00: mov    %rcx,0x10(%rax)    ;*new  ; - java.io.DataInputStream::readUTF@489 (line 661)

  0x000000010f840c04: mov    %rax,%rdx
  0x000000010f840c07: movabs $0x10edfb998,%rcx  ;   {metadata(method data for {method} {0x000000010edfb158} 'readUTF' '(Ljava/io/DataInput;)Ljava/lang/String;' in 'java/io/DataInputStream')}
  0x000000010f840c11: addq   $0x1,0x6d8(%rcx)
  0x000000010f840c19: mov    %rbx,%rdx
  0x000000010f840c1c: mov    $0x0,%ecx
  0x000000010f840c21: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.io.DataInputStream::readUTF@497 (line 661)

  0x000000010f840c24: mov    %rax,0x88(%rsp)
  0x000000010f840c2c: nop
  0x000000010f840c2d: nop
  0x000000010f840c2e: nop
  0x000000010f840c2f: callq  0x000000010f7170a0  ; OopMap{[136]=Oop off=2804}
                                                ;*invokespecial <init>
                                                ; - java.io.DataInputStream::readUTF@497 (line 661)
                                                ;   {optimized virtual_call}
  0x000000010f840c34: mov    0x88(%rsp),%rax
  0x000000010f840c3c: add    $0x100,%rsp
  0x000000010f840c43: pop    %rbp
  0x000000010f840c44: test   %eax,-0x8da5b4a(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f840c4a: retq                      ;*areturn
                                                ; - java.io.DataInputStream::readUTF@500 (line 661)

  0x000000010f840c4b: nopl   0x0(%rax,%rax,1)
  0x000000010f840c50: jmpq   0x000000010f841e37  ;   {no_reloc}
  0x000000010f840c55: add    %al,(%rax)
  0x000000010f840c57: add    %al,(%rax)
  0x000000010f840c59: add    %ch,%cl
  0x000000010f840c5b: loop   0x000000010f840c6e
  0x000000010f840c5d: add    %al,(%rax)         ;*new  ; - java.io.DataInputStream::readUTF@461 (line 656)

  0x000000010f840c5f: nop
  0x000000010f840c60: jmpq   0x000000010f841e5d  ;   {no_reloc}
  0x000000010f840c65: add    %al,(%rax)
  0x000000010f840c67: add    %al,(%rax)
  0x000000010f840c69: add    %cl,-0x77(%rax)
  0x000000010f840c6c: test   %ah,(%rax,%riz,4)
  0x000000010f840c6f: add    %al,(%rax)
  0x000000010f840c71: add    %cl,-0x75(%rcx)
  0x000000010f840c74: rex.RXB (bad) 
  0x000000010f840c76: lea    0x18(%rax),%rdi
  0x000000010f840c7a: cmp    0x70(%r15),%rdi
  0x000000010f840c7e: ja     0x000000010f841e67
  0x000000010f840c84: mov    %rdi,0x60(%r15)
  0x000000010f840c88: mov    0xa8(%rdx),%rcx
  0x000000010f840c8f: mov    %rcx,(%rax)
  0x000000010f840c92: mov    %rdx,%rcx
  0x000000010f840c95: shr    $0x3,%rcx
  0x000000010f840c99: mov    %ecx,0x8(%rax)
  0x000000010f840c9c: xor    %rcx,%rcx
  0x000000010f840c9f: mov    %ecx,0xc(%rax)
  0x000000010f840ca2: xor    %rcx,%rcx
  0x000000010f840ca5: mov    %rcx,0x10(%rax)    ;*new  ; - java.io.DataInputStream::readUTF@465 (line 656)

  0x000000010f840ca9: mov    %rax,%rbx
  0x000000010f840cac: movabs $0x10edfb998,%rdx  ;   {metadata(method data for {method} {0x000000010edfb158} 'readUTF' '(Ljava/io/DataInput;)Ljava/lang/String;' in 'java/io/DataInputStream')}
  0x000000010f840cb6: addq   $0x1,0x628(%rdx)
  0x000000010f840cbe: movabs $0x10ed0ae70,%rbx  ;   {metadata(method data for {method} {0x000000010eaddf30} '<init>' '()V' in 'java/lang/StringBuilder')}
  0x000000010f840cc8: mov    0xdc(%rbx),%edx
  0x000000010f840cce: add    $0x8,%edx
  0x000000010f840cd1: mov    %edx,0xdc(%rbx)
  0x000000010f840cd7: movabs $0x10eaddf30,%rbx  ;   {metadata({method} {0x000000010eaddf30} '<init>' '()V' in 'java/lang/StringBuilder')}
  0x000000010f840ce1: and    $0x7ffff8,%edx
  0x000000010f840ce7: cmp    $0x0,%edx
  0x000000010f840cea: je     0x000000010f841e74
  0x000000010f840cf0: mov    %rax,%rbx
  0x000000010f840cf3: movabs $0x10ed0ae70,%rdx  ;   {metadata(method data for {method} {0x000000010eaddf30} '<init>' '()V' in 'java/lang/StringBuilder')}
  0x000000010f840cfd: addq   $0x1,0x108(%rdx)
  0x000000010f840d05: movabs $0x10ec9a3e8,%rbx  ;   {metadata(method data for {method} {0x000000010eada260} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f840d0f: mov    0xdc(%rbx),%edx
  0x000000010f840d15: add    $0x8,%edx
  0x000000010f840d18: mov    %edx,0xdc(%rbx)
  0x000000010f840d1e: movabs $0x10eada260,%rbx  ;   {metadata({method} {0x000000010eada260} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f840d28: and    $0x7ffff8,%edx
  0x000000010f840d2e: cmp    $0x0,%edx
  0x000000010f840d31: je     0x000000010f841e8b
  0x000000010f840d37: mov    %rax,%rbx
  0x000000010f840d3a: movabs $0x10ec9a3e8,%rdx  ;   {metadata(method data for {method} {0x000000010eada260} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f840d44: addq   $0x1,0x108(%rdx)
  0x000000010f840d4c: movabs $0x10ebdca10,%rbx  ;   {metadata(method data for {method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f840d56: mov    0xdc(%rbx),%edx
  0x000000010f840d5c: add    $0x8,%edx
  0x000000010f840d5f: mov    %edx,0xdc(%rbx)
  0x000000010f840d65: movabs $0x10ea65480,%rbx  ;   {metadata({method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f840d6f: and    $0x7ffff8,%edx
  0x000000010f840d75: cmp    $0x0,%edx
  0x000000010f840d78: je     0x000000010f841ea2
  0x000000010f840d7e: mov    $0x10,%ebx
  0x000000010f840d83: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000000010f840d8d: mov    %rax,%r11
  0x000000010f840d90: movslq %ebx,%rbx
  0x000000010f840d93: mov    %rbx,%rdi
  0x000000010f840d96: cmp    $0xffffff,%rbx
  0x000000010f840d9d: ja     0x000000010f841eb9
  0x000000010f840da3: movabs $0x17,%rsi
  0x000000010f840dad: lea    (%rsi,%rbx,2),%rsi
  0x000000010f840db1: and    $0xfffffffffffffff8,%rsi
  0x000000010f840db5: mov    0x60(%r15),%rax
  0x000000010f840db9: lea    (%rax,%rsi,1),%rsi
  0x000000010f840dbd: cmp    0x70(%r15),%rsi
  0x000000010f840dc1: ja     0x000000010f841eb9
  0x000000010f840dc7: mov    %rsi,0x60(%r15)
  0x000000010f840dcb: sub    %rax,%rsi
  0x000000010f840dce: movq   $0x1,(%rax)
  0x000000010f840dd5: mov    %rdx,%rcx
  0x000000010f840dd8: shr    $0x3,%rcx
  0x000000010f840ddc: mov    %ecx,0x8(%rax)
  0x000000010f840ddf: mov    %ebx,0xc(%rax)
  0x000000010f840de2: sub    $0x10,%rsi
  0x000000010f840de6: je     0x000000010f840dfd
  0x000000010f840dec: xor    %rbx,%rbx
  0x000000010f840def: shr    $0x3,%rsi
  0x000000010f840df3: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000010f840df8: dec    %rsi
  0x000000010f840dfb: jne    0x000000010f840df3  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::<init>@6 (line 68)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@469 (line 656)

  0x000000010f840dfd: mov    %rax,%r10
  0x000000010f840e00: shr    $0x3,%r10
  0x000000010f840e04: mov    %r10d,0x10(%r11)
  0x000000010f840e08: mov    %r11,%rax
  0x000000010f840e0b: shr    $0x9,%rax
  0x000000010f840e0f: movabs $0x1065b9000,%rdx
  0x000000010f840e19: movb   $0x0,(%rax,%rdx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::<init>@8 (line 68)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@469 (line 656)

  0x000000010f840e1d: mov    %r11,%rax
  0x000000010f840e20: movabs $0x10edfb998,%rdx  ;   {metadata(method data for {method} {0x000000010edfb158} 'readUTF' '(Ljava/io/DataInput;)Ljava/lang/String;' in 'java/io/DataInputStream')}
  0x000000010f840e2a: mov    0x8(%rax),%eax
  0x000000010f840e2d: shl    $0x3,%rax
  0x000000010f840e31: cmp    0x640(%rdx),%rax
  0x000000010f840e38: jne    0x000000010f840e47
  0x000000010f840e3a: addq   $0x1,0x648(%rdx)
  0x000000010f840e42: jmpq   0x000000010f840ead
  0x000000010f840e47: cmp    0x650(%rdx),%rax
  0x000000010f840e4e: jne    0x000000010f840e5d
  0x000000010f840e50: addq   $0x1,0x658(%rdx)
  0x000000010f840e58: jmpq   0x000000010f840ead
  0x000000010f840e5d: cmpq   $0x0,0x640(%rdx)
  0x000000010f840e68: jne    0x000000010f840e81
  0x000000010f840e6a: mov    %rax,0x640(%rdx)
  0x000000010f840e71: movq   $0x1,0x648(%rdx)
  0x000000010f840e7c: jmpq   0x000000010f840ead
  0x000000010f840e81: cmpq   $0x0,0x650(%rdx)
  0x000000010f840e8c: jne    0x000000010f840ea5
  0x000000010f840e8e: mov    %rax,0x650(%rdx)
  0x000000010f840e95: movq   $0x1,0x658(%rdx)
  0x000000010f840ea0: jmpq   0x000000010f840ead
  0x000000010f840ea5: addq   $0x1,0x638(%rdx)
  0x000000010f840ead: movabs $0x10ec81440,%rdx  ;   {metadata(method data for {method} {0x000000010eade248} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f840eb7: mov    0xdc(%rdx),%esi
  0x000000010f840ebd: add    $0x8,%esi
  0x000000010f840ec0: mov    %esi,0xdc(%rdx)
  0x000000010f840ec6: movabs $0x10eade248,%rdx  ;   {metadata({method} {0x000000010eade248} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f840ed0: and    $0x7ffff8,%esi
  0x000000010f840ed6: cmp    $0x0,%esi
  0x000000010f840ed9: je     0x000000010f841ec3
  0x000000010f840edf: mov    %r11,%rax
  0x000000010f840ee2: movabs $0x10ec81440,%rdx  ;   {metadata(method data for {method} {0x000000010eade248} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f840eec: addq   $0x1,0x108(%rdx)
  0x000000010f840ef4: movabs $0x795968f78,%rdx  ;   {oop("malformed input around byte ")}
  0x000000010f840efe: mov    %r11,%rsi          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.DataInputStream::readUTF@474 (line 656)

  0x000000010f840f01: mov    %r11,0x90(%rsp)
  0x000000010f840f09: nop
  0x000000010f840f0a: nop
  0x000000010f840f0b: nop
  0x000000010f840f0c: nop
  0x000000010f840f0d: nop
  0x000000010f840f0e: nop
  0x000000010f840f0f: callq  0x000000010f7170a0  ; OopMap{[144]=Oop [160]=Oop off=3540}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.DataInputStream::readUTF@474 (line 656)
                                                ;   {optimized virtual_call}
  0x000000010f840f14: mov    0x90(%rsp),%rax
  0x000000010f840f1c: movabs $0x10edfb998,%rdx  ;   {metadata(method data for {method} {0x000000010edfb158} 'readUTF' '(Ljava/io/DataInput;)Ljava/lang/String;' in 'java/io/DataInputStream')}
  0x000000010f840f26: mov    0x8(%rax),%eax
  0x000000010f840f29: shl    $0x3,%rax
  0x000000010f840f2d: cmp    0x670(%rdx),%rax
  0x000000010f840f34: jne    0x000000010f840f43
  0x000000010f840f36: addq   $0x1,0x678(%rdx)
  0x000000010f840f3e: jmpq   0x000000010f840fa9
  0x000000010f840f43: cmp    0x680(%rdx),%rax
  0x000000010f840f4a: jne    0x000000010f840f59
  0x000000010f840f4c: addq   $0x1,0x688(%rdx)
  0x000000010f840f54: jmpq   0x000000010f840fa9
  0x000000010f840f59: cmpq   $0x0,0x670(%rdx)
  0x000000010f840f64: jne    0x000000010f840f7d
  0x000000010f840f66: mov    %rax,0x670(%rdx)
  0x000000010f840f6d: movq   $0x1,0x678(%rdx)
  0x000000010f840f78: jmpq   0x000000010f840fa9
  0x000000010f840f7d: cmpq   $0x0,0x680(%rdx)
  0x000000010f840f88: jne    0x000000010f840fa1
  0x000000010f840f8a: mov    %rax,0x680(%rdx)
  0x000000010f840f91: movq   $0x1,0x688(%rdx)
  0x000000010f840f9c: jmpq   0x000000010f840fa9
  0x000000010f840fa1: addq   $0x1,0x668(%rdx)
  0x000000010f840fa9: movabs $0x10ed0b000,%rdx  ;   {metadata(method data for {method} {0x000000010eade708} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f840fb3: mov    0xdc(%rdx),%esi
  0x000000010f840fb9: add    $0x8,%esi
  0x000000010f840fbc: mov    %esi,0xdc(%rdx)
  0x000000010f840fc2: movabs $0x10eade708,%rdx  ;   {metadata({method} {0x000000010eade708} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f840fcc: and    $0x7ffff8,%esi
  0x000000010f840fd2: cmp    $0x0,%esi
  0x000000010f840fd5: je     0x000000010f841eda
  0x000000010f840fdb: mov    0x90(%rsp),%rax
  0x000000010f840fe3: movabs $0x10ed0b000,%rdx  ;   {metadata(method data for {method} {0x000000010eade708} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f840fed: addq   $0x1,0x108(%rdx)
  0x000000010f840ff5: mov    0x98(%rsp),%edx
  0x000000010f840ffc: mov    0x90(%rsp),%rsi    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.io.DataInputStream::readUTF@479 (line 656)

  0x000000010f841004: nop
  0x000000010f841005: nop
  0x000000010f841006: nop
  0x000000010f841007: callq  0x000000010f7170a0  ; OopMap{[144]=Oop [160]=Oop off=3788}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.io.DataInputStream::readUTF@479 (line 656)
                                                ;   {optimized virtual_call}
  0x000000010f84100c: mov    0x90(%rsp),%rax
  0x000000010f841014: movabs $0x10edfb998,%rdx  ;   {metadata(method data for {method} {0x000000010edfb158} 'readUTF' '(Ljava/io/DataInput;)Ljava/lang/String;' in 'java/io/DataInputStream')}
  0x000000010f84101e: mov    0x8(%rax),%eax
  0x000000010f841021: shl    $0x3,%rax
  0x000000010f841025: cmp    0x6a0(%rdx),%rax
  0x000000010f84102c: jne    0x000000010f84103b
  0x000000010f84102e: addq   $0x1,0x6a8(%rdx)
  0x000000010f841036: jmpq   0x000000010f8410a1
  0x000000010f84103b: cmp    0x6b0(%rdx),%rax
  0x000000010f841042: jne    0x000000010f841051
  0x000000010f841044: addq   $0x1,0x6b8(%rdx)
  0x000000010f84104c: jmpq   0x000000010f8410a1
  0x000000010f841051: cmpq   $0x0,0x6a0(%rdx)
  0x000000010f84105c: jne    0x000000010f841075
  0x000000010f84105e: mov    %rax,0x6a0(%rdx)
  0x000000010f841065: movq   $0x1,0x6a8(%rdx)
  0x000000010f841070: jmpq   0x000000010f8410a1
  0x000000010f841075: cmpq   $0x0,0x6b0(%rdx)
  0x000000010f841080: jne    0x000000010f841099
  0x000000010f841082: mov    %rax,0x6b0(%rdx)
  0x000000010f841089: movq   $0x1,0x6b8(%rdx)
  0x000000010f841094: jmpq   0x000000010f8410a1
  0x000000010f841099: addq   $0x1,0x698(%rdx)
  0x000000010f8410a1: movabs $0x10ed00b80,%rdx  ;   {metadata(method data for {method} {0x000000010eadf5f8} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder')}
  0x000000010f8410ab: mov    0xdc(%rdx),%esi
  0x000000010f8410b1: add    $0x8,%esi
  0x000000010f8410b4: mov    %esi,0xdc(%rdx)
  0x000000010f8410ba: movabs $0x10eadf5f8,%rdx  ;   {metadata({method} {0x000000010eadf5f8} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder')}
  0x000000010f8410c4: and    $0x7ffff8,%esi
  0x000000010f8410ca: cmp    $0x0,%esi
  0x000000010f8410cd: je     0x000000010f841ef1
  0x000000010f8410d3: movabs $0x7c00016d0,%rdx  ;   {metadata('java/lang/String')}
  0x000000010f8410dd: mov    0x60(%r15),%rax
  0x000000010f8410e1: lea    0x18(%rax),%rdi
  0x000000010f8410e5: cmp    0x70(%r15),%rdi
  0x000000010f8410e9: ja     0x000000010f841f08
  0x000000010f8410ef: mov    %rdi,0x60(%r15)
  0x000000010f8410f3: mov    0xa8(%rdx),%rcx
  0x000000010f8410fa: mov    %rcx,(%rax)
  0x000000010f8410fd: mov    %rdx,%rcx
  0x000000010f841100: shr    $0x3,%rcx
  0x000000010f841104: mov    %ecx,0x8(%rax)
  0x000000010f841107: xor    %rcx,%rcx
  0x000000010f84110a: mov    %ecx,0xc(%rax)
  0x000000010f84110d: xor    %rcx,%rcx
  0x000000010f841110: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.DataInputStream::readUTF@482 (line 656)

  0x000000010f841114: mov    0x90(%rsp),%rdx
  0x000000010f84111c: mov    0x10(%rdx),%ecx
  0x000000010f84111f: shl    $0x3,%rcx          ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 407)
                                                ; - java.io.DataInputStream::readUTF@482 (line 656)

  0x000000010f841123: mov    0xc(%rdx),%r8d     ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 407)
                                                ; - java.io.DataInputStream::readUTF@482 (line 656)

  0x000000010f841127: mov    %rax,%rdx
  0x000000010f84112a: movabs $0x10ed00b80,%rsi  ;   {metadata(method data for {method} {0x000000010eadf5f8} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder')}
  0x000000010f841134: addq   $0x1,0x108(%rsi)
  0x000000010f84113c: mov    %rcx,%rdx
  0x000000010f84113f: mov    $0x0,%ecx
  0x000000010f841144: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.DataInputStream::readUTF@482 (line 656)

  0x000000010f841147: mov    %rax,0xa8(%rsp)
  0x000000010f84114f: callq  0x000000010f7170a0  ; OopMap{[160]=Oop [168]=Oop off=4116}
                                                ;*invokespecial <init>
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.DataInputStream::readUTF@482 (line 656)
                                                ;   {optimized virtual_call}
  0x000000010f841154: mov    0xa0(%rsp),%rax
  0x000000010f84115c: movabs $0x10edfb998,%rdx  ;   {metadata(method data for {method} {0x000000010edfb158} 'readUTF' '(Ljava/io/DataInput;)Ljava/lang/String;' in 'java/io/DataInputStream')}
  0x000000010f841166: addq   $0x1,0x6c8(%rdx)
  0x000000010f84116e: mov    0xa8(%rsp),%rdx
  0x000000010f841176: mov    0xa0(%rsp),%rsi    ;*invokespecial <init>
                                                ; - java.io.DataInputStream::readUTF@485 (line 656)

  0x000000010f84117e: nop
  0x000000010f84117f: callq  0x000000010f7170a0  ; OopMap{[160]=Oop off=4164}
                                                ;*invokespecial <init>
                                                ; - java.io.DataInputStream::readUTF@485 (line 656)
                                                ;   {optimized virtual_call}
  0x000000010f841184: mov    0xa0(%rsp),%rax
  0x000000010f84118c: jmpq   0x000000010f842166  ;*athrow
                                                ; - java.io.DataInputStream::readUTF@488 (line 656)

  0x000000010f841191: mov    %esi,0x9c(%rsp)
  0x000000010f841198: jmpq   0x000000010f841f24  ;   {no_reloc}
  0x000000010f84119d: add    %al,(%rax)
  0x000000010f84119f: add    %al,(%rax)
  0x000000010f8411a1: add    %ch,%cl
  0x000000010f8411a3: xchg   %ecx,-0x16700000(%rip)        # 0x00000000f91411a9
                                                ;*new  ; - java.io.DataInputStream::readUTF@395 (line 648)
                                                ;   {no_reloc}
  0x000000010f8411a9: popfq  
  0x000000010f8411aa: or     $0x0,%eax
  0x000000010f8411af: add    %al,(%rax)
  0x000000010f8411b1: add    %cl,-0x77(%rax)
  0x000000010f8411b4: test   %ah,(%rax,%rdi,4)
  0x000000010f8411b7: add    %al,(%rax)
  0x000000010f8411b9: add    %cl,-0x75(%rcx)
  0x000000010f8411bc: rex.RXB (bad) 
  0x000000010f8411be: lea    0x18(%rax),%rdi
  0x000000010f8411c2: cmp    0x70(%r15),%rdi
  0x000000010f8411c6: ja     0x000000010f841f54
  0x000000010f8411cc: mov    %rdi,0x60(%r15)
  0x000000010f8411d0: mov    0xa8(%rdx),%rcx
  0x000000010f8411d7: mov    %rcx,(%rax)
  0x000000010f8411da: mov    %rdx,%rcx
  0x000000010f8411dd: shr    $0x3,%rcx
  0x000000010f8411e1: mov    %ecx,0x8(%rax)
  0x000000010f8411e4: xor    %rcx,%rcx
  0x000000010f8411e7: mov    %ecx,0xc(%rax)
  0x000000010f8411ea: xor    %rcx,%rcx
  0x000000010f8411ed: mov    %rcx,0x10(%rax)    ;*new  ; - java.io.DataInputStream::readUTF@399 (line 648)

  0x000000010f8411f1: mov    %rax,%rbx
  0x000000010f8411f4: movabs $0x10edfb998,%rdx  ;   {metadata(method data for {method} {0x000000010edfb158} 'readUTF' '(Ljava/io/DataInput;)Ljava/lang/String;' in 'java/io/DataInputStream')}
  0x000000010f8411fe: addq   $0x1,0x560(%rdx)
  0x000000010f841206: movabs $0x10ed0ae70,%rbx  ;   {metadata(method data for {method} {0x000000010eaddf30} '<init>' '()V' in 'java/lang/StringBuilder')}
  0x000000010f841210: mov    0xdc(%rbx),%edx
  0x000000010f841216: add    $0x8,%edx
  0x000000010f841219: mov    %edx,0xdc(%rbx)
  0x000000010f84121f: movabs $0x10eaddf30,%rbx  ;   {metadata({method} {0x000000010eaddf30} '<init>' '()V' in 'java/lang/StringBuilder')}
  0x000000010f841229: and    $0x7ffff8,%edx
  0x000000010f84122f: cmp    $0x0,%edx
  0x000000010f841232: je     0x000000010f841f61
  0x000000010f841238: mov    %rax,%rbx
  0x000000010f84123b: movabs $0x10ed0ae70,%rdx  ;   {metadata(method data for {method} {0x000000010eaddf30} '<init>' '()V' in 'java/lang/StringBuilder')}
  0x000000010f841245: addq   $0x1,0x108(%rdx)
  0x000000010f84124d: movabs $0x10ec9a3e8,%rbx  ;   {metadata(method data for {method} {0x000000010eada260} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f841257: mov    0xdc(%rbx),%edx
  0x000000010f84125d: add    $0x8,%edx
  0x000000010f841260: mov    %edx,0xdc(%rbx)
  0x000000010f841266: movabs $0x10eada260,%rbx  ;   {metadata({method} {0x000000010eada260} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f841270: and    $0x7ffff8,%edx
  0x000000010f841276: cmp    $0x0,%edx
  0x000000010f841279: je     0x000000010f841f78
  0x000000010f84127f: mov    %rax,%rbx
  0x000000010f841282: movabs $0x10ec9a3e8,%rdx  ;   {metadata(method data for {method} {0x000000010eada260} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f84128c: addq   $0x1,0x108(%rdx)
  0x000000010f841294: movabs $0x10ebdca10,%rbx  ;   {metadata(method data for {method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f84129e: mov    0xdc(%rbx),%edx
  0x000000010f8412a4: add    $0x8,%edx
  0x000000010f8412a7: mov    %edx,0xdc(%rbx)
  0x000000010f8412ad: movabs $0x10ea65480,%rbx  ;   {metadata({method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f8412b7: and    $0x7ffff8,%edx
  0x000000010f8412bd: cmp    $0x0,%edx
  0x000000010f8412c0: je     0x000000010f841f8f
  0x000000010f8412c6: mov    $0x10,%ebx
  0x000000010f8412cb: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000000010f8412d5: mov    %rax,%r13
  0x000000010f8412d8: movslq %ebx,%rbx
  0x000000010f8412db: mov    %rbx,%rdi
  0x000000010f8412de: cmp    $0xffffff,%rbx
  0x000000010f8412e5: ja     0x000000010f841fa6
  0x000000010f8412eb: movabs $0x17,%rsi
  0x000000010f8412f5: lea    (%rsi,%rbx,2),%rsi
  0x000000010f8412f9: and    $0xfffffffffffffff8,%rsi
  0x000000010f8412fd: mov    0x60(%r15),%rax
  0x000000010f841301: lea    (%rax,%rsi,1),%rsi
  0x000000010f841305: cmp    0x70(%r15),%rsi
  0x000000010f841309: ja     0x000000010f841fa6
  0x000000010f84130f: mov    %rsi,0x60(%r15)
  0x000000010f841313: sub    %rax,%rsi
  0x000000010f841316: movq   $0x1,(%rax)
  0x000000010f84131d: mov    %rdx,%rcx
  0x000000010f841320: shr    $0x3,%rcx
  0x000000010f841324: mov    %ecx,0x8(%rax)
  0x000000010f841327: mov    %ebx,0xc(%rax)
  0x000000010f84132a: sub    $0x10,%rsi
  0x000000010f84132e: je     0x000000010f841345
  0x000000010f841334: xor    %rbx,%rbx
  0x000000010f841337: shr    $0x3,%rsi
  0x000000010f84133b: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000010f841340: dec    %rsi
  0x000000010f841343: jne    0x000000010f84133b  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::<init>@6 (line 68)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@403 (line 648)

  0x000000010f841345: mov    %rax,%r10
  0x000000010f841348: shr    $0x3,%r10
  0x000000010f84134c: mov    %r10d,0x10(%r13)
  0x000000010f841350: mov    %r13,%rax
  0x000000010f841353: shr    $0x9,%rax
  0x000000010f841357: movabs $0x1065b9000,%rdx
  0x000000010f841361: movb   $0x0,(%rax,%rdx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::<init>@8 (line 68)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@403 (line 648)

  0x000000010f841365: mov    %r13,%rax
  0x000000010f841368: movabs $0x10edfb998,%rdx  ;   {metadata(method data for {method} {0x000000010edfb158} 'readUTF' '(Ljava/io/DataInput;)Ljava/lang/String;' in 'java/io/DataInputStream')}
  0x000000010f841372: mov    0x8(%rax),%eax
  0x000000010f841375: shl    $0x3,%rax
  0x000000010f841379: cmp    0x578(%rdx),%rax
  0x000000010f841380: jne    0x000000010f84138f
  0x000000010f841382: addq   $0x1,0x580(%rdx)
  0x000000010f84138a: jmpq   0x000000010f8413f5
  0x000000010f84138f: cmp    0x588(%rdx),%rax
  0x000000010f841396: jne    0x000000010f8413a5
  0x000000010f841398: addq   $0x1,0x590(%rdx)
  0x000000010f8413a0: jmpq   0x000000010f8413f5
  0x000000010f8413a5: cmpq   $0x0,0x578(%rdx)
  0x000000010f8413b0: jne    0x000000010f8413c9
  0x000000010f8413b2: mov    %rax,0x578(%rdx)
  0x000000010f8413b9: movq   $0x1,0x580(%rdx)
  0x000000010f8413c4: jmpq   0x000000010f8413f5
  0x000000010f8413c9: cmpq   $0x0,0x588(%rdx)
  0x000000010f8413d4: jne    0x000000010f8413ed
  0x000000010f8413d6: mov    %rax,0x588(%rdx)
  0x000000010f8413dd: movq   $0x1,0x590(%rdx)
  0x000000010f8413e8: jmpq   0x000000010f8413f5
  0x000000010f8413ed: addq   $0x1,0x570(%rdx)
  0x000000010f8413f5: movabs $0x10ec81440,%rdx  ;   {metadata(method data for {method} {0x000000010eade248} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f8413ff: mov    0xdc(%rdx),%esi
  0x000000010f841405: add    $0x8,%esi
  0x000000010f841408: mov    %esi,0xdc(%rdx)
  0x000000010f84140e: movabs $0x10eade248,%rdx  ;   {metadata({method} {0x000000010eade248} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f841418: and    $0x7ffff8,%esi
  0x000000010f84141e: cmp    $0x0,%esi
  0x000000010f841421: je     0x000000010f841fb0
  0x000000010f841427: mov    %r13,%rax
  0x000000010f84142a: movabs $0x10ec81440,%rdx  ;   {metadata(method data for {method} {0x000000010eade248} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f841434: addq   $0x1,0x108(%rdx)
  0x000000010f84143c: movabs $0x795968f78,%rdx  ;   {oop("malformed input around byte ")}
  0x000000010f841446: mov    %r13,%rsi          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.DataInputStream::readUTF@408 (line 648)

  0x000000010f841449: mov    %r13,0xb0(%rsp)
  0x000000010f841451: nop
  0x000000010f841452: nop
  0x000000010f841453: nop
  0x000000010f841454: nop
  0x000000010f841455: nop
  0x000000010f841456: nop
  0x000000010f841457: callq  0x000000010f7170a0  ; OopMap{[176]=Oop [184]=Oop off=4892}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.DataInputStream::readUTF@408 (line 648)
                                                ;   {optimized virtual_call}
  0x000000010f84145c: mov    0xb0(%rsp),%rax
  0x000000010f841464: movabs $0x10edfb998,%rdx  ;   {metadata(method data for {method} {0x000000010edfb158} 'readUTF' '(Ljava/io/DataInput;)Ljava/lang/String;' in 'java/io/DataInputStream')}
  0x000000010f84146e: mov    0x8(%rax),%eax
  0x000000010f841471: shl    $0x3,%rax
  0x000000010f841475: cmp    0x5a8(%rdx),%rax
  0x000000010f84147c: jne    0x000000010f84148b
  0x000000010f84147e: addq   $0x1,0x5b0(%rdx)
  0x000000010f841486: jmpq   0x000000010f8414f1
  0x000000010f84148b: cmp    0x5b8(%rdx),%rax
  0x000000010f841492: jne    0x000000010f8414a1
  0x000000010f841494: addq   $0x1,0x5c0(%rdx)
  0x000000010f84149c: jmpq   0x000000010f8414f1
  0x000000010f8414a1: cmpq   $0x0,0x5a8(%rdx)
  0x000000010f8414ac: jne    0x000000010f8414c5
  0x000000010f8414ae: mov    %rax,0x5a8(%rdx)
  0x000000010f8414b5: movq   $0x1,0x5b0(%rdx)
  0x000000010f8414c0: jmpq   0x000000010f8414f1
  0x000000010f8414c5: cmpq   $0x0,0x5b8(%rdx)
  0x000000010f8414d0: jne    0x000000010f8414e9
  0x000000010f8414d2: mov    %rax,0x5b8(%rdx)
  0x000000010f8414d9: movq   $0x1,0x5c0(%rdx)
  0x000000010f8414e4: jmpq   0x000000010f8414f1
  0x000000010f8414e9: addq   $0x1,0x5a0(%rdx)
  0x000000010f8414f1: movabs $0x10ed0b000,%rdx  ;   {metadata(method data for {method} {0x000000010eade708} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f8414fb: mov    0xdc(%rdx),%esi
  0x000000010f841501: add    $0x8,%esi
  0x000000010f841504: mov    %esi,0xdc(%rdx)
  0x000000010f84150a: movabs $0x10eade708,%rdx  ;   {metadata({method} {0x000000010eade708} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f841514: and    $0x7ffff8,%esi
  0x000000010f84151a: cmp    $0x0,%esi
  0x000000010f84151d: je     0x000000010f841fc7
  0x000000010f841523: mov    0xb0(%rsp),%rax
  0x000000010f84152b: movabs $0x10ed0b000,%rdx  ;   {metadata(method data for {method} {0x000000010eade708} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f841535: addq   $0x1,0x108(%rdx)
  0x000000010f84153d: mov    0x74(%rsp),%edx
  0x000000010f841541: mov    0xb0(%rsp),%rsi    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.io.DataInputStream::readUTF@415 (line 648)

  0x000000010f841549: nop
  0x000000010f84154a: nop
  0x000000010f84154b: nop
  0x000000010f84154c: nop
  0x000000010f84154d: nop
  0x000000010f84154e: nop
  0x000000010f84154f: callq  0x000000010f7170a0  ; OopMap{[176]=Oop [184]=Oop off=5140}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.io.DataInputStream::readUTF@415 (line 648)
                                                ;   {optimized virtual_call}
  0x000000010f841554: mov    0xb0(%rsp),%rax
  0x000000010f84155c: movabs $0x10edfb998,%rdx  ;   {metadata(method data for {method} {0x000000010edfb158} 'readUTF' '(Ljava/io/DataInput;)Ljava/lang/String;' in 'java/io/DataInputStream')}
  0x000000010f841566: mov    0x8(%rax),%eax
  0x000000010f841569: shl    $0x3,%rax
  0x000000010f84156d: cmp    0x5d8(%rdx),%rax
  0x000000010f841574: jne    0x000000010f841583
  0x000000010f841576: addq   $0x1,0x5e0(%rdx)
  0x000000010f84157e: jmpq   0x000000010f8415e9
  0x000000010f841583: cmp    0x5e8(%rdx),%rax
  0x000000010f84158a: jne    0x000000010f841599
  0x000000010f84158c: addq   $0x1,0x5f0(%rdx)
  0x000000010f841594: jmpq   0x000000010f8415e9
  0x000000010f841599: cmpq   $0x0,0x5d8(%rdx)
  0x000000010f8415a4: jne    0x000000010f8415bd
  0x000000010f8415a6: mov    %rax,0x5d8(%rdx)
  0x000000010f8415ad: movq   $0x1,0x5e0(%rdx)
  0x000000010f8415b8: jmpq   0x000000010f8415e9
  0x000000010f8415bd: cmpq   $0x0,0x5e8(%rdx)
  0x000000010f8415c8: jne    0x000000010f8415e1
  0x000000010f8415ca: mov    %rax,0x5e8(%rdx)
  0x000000010f8415d1: movq   $0x1,0x5f0(%rdx)
  0x000000010f8415dc: jmpq   0x000000010f8415e9
  0x000000010f8415e1: addq   $0x1,0x5d0(%rdx)
  0x000000010f8415e9: movabs $0x10ed00b80,%rdx  ;   {metadata(method data for {method} {0x000000010eadf5f8} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder')}
  0x000000010f8415f3: mov    0xdc(%rdx),%esi
  0x000000010f8415f9: add    $0x8,%esi
  0x000000010f8415fc: mov    %esi,0xdc(%rdx)
  0x000000010f841602: movabs $0x10eadf5f8,%rdx  ;   {metadata({method} {0x000000010eadf5f8} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder')}
  0x000000010f84160c: and    $0x7ffff8,%esi
  0x000000010f841612: cmp    $0x0,%esi
  0x000000010f841615: je     0x000000010f841fde
  0x000000010f84161b: movabs $0x7c00016d0,%rdx  ;   {metadata('java/lang/String')}
  0x000000010f841625: mov    0x60(%r15),%rax
  0x000000010f841629: lea    0x18(%rax),%rdi
  0x000000010f84162d: cmp    0x70(%r15),%rdi
  0x000000010f841631: ja     0x000000010f841ff5
  0x000000010f841637: mov    %rdi,0x60(%r15)
  0x000000010f84163b: mov    0xa8(%rdx),%rcx
  0x000000010f841642: mov    %rcx,(%rax)
  0x000000010f841645: mov    %rdx,%rcx
  0x000000010f841648: shr    $0x3,%rcx
  0x000000010f84164c: mov    %ecx,0x8(%rax)
  0x000000010f84164f: xor    %rcx,%rcx
  0x000000010f841652: mov    %ecx,0xc(%rax)
  0x000000010f841655: xor    %rcx,%rcx
  0x000000010f841658: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.DataInputStream::readUTF@418 (line 648)

  0x000000010f84165c: mov    0xb0(%rsp),%rdx
  0x000000010f841664: mov    0x10(%rdx),%ecx
  0x000000010f841667: shl    $0x3,%rcx          ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 407)
                                                ; - java.io.DataInputStream::readUTF@418 (line 648)

  0x000000010f84166b: mov    0xc(%rdx),%r8d     ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 407)
                                                ; - java.io.DataInputStream::readUTF@418 (line 648)

  0x000000010f84166f: mov    %rax,%rdx
  0x000000010f841672: movabs $0x10ed00b80,%rsi  ;   {metadata(method data for {method} {0x000000010eadf5f8} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder')}
  0x000000010f84167c: addq   $0x1,0x108(%rsi)
  0x000000010f841684: mov    %rcx,%rdx
  0x000000010f841687: mov    $0x0,%ecx
  0x000000010f84168c: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.DataInputStream::readUTF@418 (line 648)

  0x000000010f84168f: mov    %rax,0xc0(%rsp)
  0x000000010f841697: callq  0x000000010f7170a0  ; OopMap{[184]=Oop [192]=Oop off=5468}
                                                ;*invokespecial <init>
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.DataInputStream::readUTF@418 (line 648)
                                                ;   {optimized virtual_call}
  0x000000010f84169c: mov    0xb8(%rsp),%rax
  0x000000010f8416a4: movabs $0x10edfb998,%rdx  ;   {metadata(method data for {method} {0x000000010edfb158} 'readUTF' '(Ljava/io/DataInput;)Ljava/lang/String;' in 'java/io/DataInputStream')}
  0x000000010f8416ae: addq   $0x1,0x600(%rdx)
  0x000000010f8416b6: mov    0xc0(%rsp),%rdx
  0x000000010f8416be: mov    0xb8(%rsp),%rsi    ;*invokespecial <init>
                                                ; - java.io.DataInputStream::readUTF@421 (line 648)

  0x000000010f8416c6: nop
  0x000000010f8416c7: callq  0x000000010f7170a0  ; OopMap{[184]=Oop off=5516}
                                                ;*invokespecial <init>
                                                ; - java.io.DataInputStream::readUTF@421 (line 648)
                                                ;   {optimized virtual_call}
  0x000000010f8416cc: mov    0xb8(%rsp),%rax
  0x000000010f8416d4: jmpq   0x000000010f842166  ;*athrow
                                                ; - java.io.DataInputStream::readUTF@424 (line 648)

  0x000000010f8416d9: nopl   0x0(%rax)
  0x000000010f8416e0: jmpq   0x000000010f842011  ;   {no_reloc}
  0x000000010f8416e5: add    %al,(%rax)
  0x000000010f8416e7: add    %al,(%rax)
  0x000000010f8416e9: add    %ch,%cl
  0x000000010f8416eb: sub    $0x9,%al
  0x000000010f8416ed: add    %al,(%rax)         ;*new  ; - java.io.DataInputStream::readUTF@345 (line 643)

  0x000000010f8416ef: mov    %rax,%rdx
  0x000000010f8416f2: movabs $0x10edfb998,%rsi  ;   {metadata(method data for {method} {0x000000010edfb158} 'readUTF' '(Ljava/io/DataInput;)Ljava/lang/String;' in 'java/io/DataInputStream')}
  0x000000010f8416fc: addq   $0x1,0x510(%rsi)
  0x000000010f841704: movabs $0x795968ef8,%rdx  ;   {oop("malformed input: partial character at end")}
  0x000000010f84170e: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.io.DataInputStream::readUTF@351 (line 643)

  0x000000010f841711: mov    %rax,0xc8(%rsp)
  0x000000010f841719: nop
  0x000000010f84171a: nop
  0x000000010f84171b: nop
  0x000000010f84171c: nop
  0x000000010f84171d: nop
  0x000000010f84171e: nop
  0x000000010f84171f: callq  0x000000010f7170a0  ; OopMap{[200]=Oop off=5604}
                                                ;*invokespecial <init>
                                                ; - java.io.DataInputStream::readUTF@351 (line 643)
                                                ;   {optimized virtual_call}
  0x000000010f841724: mov    0xc8(%rsp),%rax
  0x000000010f84172c: jmpq   0x000000010f842166  ;*athrow
                                                ; - java.io.DataInputStream::readUTF@354 (line 643)

  0x000000010f841731: mov    %esi,0xd8(%rsp)
  0x000000010f841738: jmpq   0x000000010f842037  ;   {no_reloc}
  0x000000010f84173d: add    %al,(%rax)
  0x000000010f84173f: add    %al,(%rax)
  0x000000010f841741: add    %ch,%cl
  0x000000010f841743: cli    
  0x000000010f841744: or     %al,(%rax)
  0x000000010f841746: add    %dl,0x910e9(%rax)  ;*new  ; - java.io.DataInputStream::readUTF@283 (line 634)
                                                ;   {no_reloc}
  0x000000010f84174c: add    %al,(%rax)
  0x000000010f84174e: add    %al,(%rax)
  0x000000010f841750: add    %al,(%rax)
  0x000000010f841752: mov    %rax,0xe0(%rsp)
  0x000000010f84175a: mov    0x60(%r15),%rax
  0x000000010f84175e: lea    0x18(%rax),%rdi
  0x000000010f841762: cmp    0x70(%r15),%rdi
  0x000000010f841766: ja     0x000000010f842067
  0x000000010f84176c: mov    %rdi,0x60(%r15)
  0x000000010f841770: mov    0xa8(%rdx),%rcx
  0x000000010f841777: mov    %rcx,(%rax)
  0x000000010f84177a: mov    %rdx,%rcx
  0x000000010f84177d: shr    $0x3,%rcx
  0x000000010f841781: mov    %ecx,0x8(%rax)
  0x000000010f841784: xor    %rcx,%rcx
  0x000000010f841787: mov    %ecx,0xc(%rax)
  0x000000010f84178a: xor    %rcx,%rcx
  0x000000010f84178d: mov    %rcx,0x10(%rax)    ;*new  ; - java.io.DataInputStream::readUTF@287 (line 634)

  0x000000010f841791: mov    %rax,%rbx
  0x000000010f841794: movabs $0x10edfb998,%rdx  ;   {metadata(method data for {method} {0x000000010edfb158} 'readUTF' '(Ljava/io/DataInput;)Ljava/lang/String;' in 'java/io/DataInputStream')}
  0x000000010f84179e: addq   $0x1,0x428(%rdx)
  0x000000010f8417a6: movabs $0x10ed0ae70,%rbx  ;   {metadata(method data for {method} {0x000000010eaddf30} '<init>' '()V' in 'java/lang/StringBuilder')}
  0x000000010f8417b0: mov    0xdc(%rbx),%edx
  0x000000010f8417b6: add    $0x8,%edx
  0x000000010f8417b9: mov    %edx,0xdc(%rbx)
  0x000000010f8417bf: movabs $0x10eaddf30,%rbx  ;   {metadata({method} {0x000000010eaddf30} '<init>' '()V' in 'java/lang/StringBuilder')}
  0x000000010f8417c9: and    $0x7ffff8,%edx
  0x000000010f8417cf: cmp    $0x0,%edx
  0x000000010f8417d2: je     0x000000010f842074
  0x000000010f8417d8: mov    %rax,%rbx
  0x000000010f8417db: movabs $0x10ed0ae70,%rdx  ;   {metadata(method data for {method} {0x000000010eaddf30} '<init>' '()V' in 'java/lang/StringBuilder')}
  0x000000010f8417e5: addq   $0x1,0x108(%rdx)
  0x000000010f8417ed: movabs $0x10ec9a3e8,%rbx  ;   {metadata(method data for {method} {0x000000010eada260} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f8417f7: mov    0xdc(%rbx),%edx
  0x000000010f8417fd: add    $0x8,%edx
  0x000000010f841800: mov    %edx,0xdc(%rbx)
  0x000000010f841806: movabs $0x10eada260,%rbx  ;   {metadata({method} {0x000000010eada260} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f841810: and    $0x7ffff8,%edx
  0x000000010f841816: cmp    $0x0,%edx
  0x000000010f841819: je     0x000000010f84208b
  0x000000010f84181f: mov    %rax,%rbx
  0x000000010f841822: movabs $0x10ec9a3e8,%rdx  ;   {metadata(method data for {method} {0x000000010eada260} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f84182c: addq   $0x1,0x108(%rdx)
  0x000000010f841834: movabs $0x10ebdca10,%rbx  ;   {metadata(method data for {method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f84183e: mov    0xdc(%rbx),%edx
  0x000000010f841844: add    $0x8,%edx
  0x000000010f841847: mov    %edx,0xdc(%rbx)
  0x000000010f84184d: movabs $0x10ea65480,%rbx  ;   {metadata({method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f841857: and    $0x7ffff8,%edx
  0x000000010f84185d: cmp    $0x0,%edx
  0x000000010f841860: je     0x000000010f8420a2
  0x000000010f841866: mov    $0x10,%ebx
  0x000000010f84186b: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000000010f841875: mov    %rax,%r11
  0x000000010f841878: movslq %ebx,%rbx
  0x000000010f84187b: mov    %rbx,%rdi
  0x000000010f84187e: cmp    $0xffffff,%rbx
  0x000000010f841885: ja     0x000000010f8420b9
  0x000000010f84188b: movabs $0x17,%rsi
  0x000000010f841895: lea    (%rsi,%rbx,2),%rsi
  0x000000010f841899: and    $0xfffffffffffffff8,%rsi
  0x000000010f84189d: mov    0x60(%r15),%rax
  0x000000010f8418a1: lea    (%rax,%rsi,1),%rsi
  0x000000010f8418a5: cmp    0x70(%r15),%rsi
  0x000000010f8418a9: ja     0x000000010f8420b9
  0x000000010f8418af: mov    %rsi,0x60(%r15)
  0x000000010f8418b3: sub    %rax,%rsi
  0x000000010f8418b6: movq   $0x1,(%rax)
  0x000000010f8418bd: mov    %rdx,%rcx
  0x000000010f8418c0: shr    $0x3,%rcx
  0x000000010f8418c4: mov    %ecx,0x8(%rax)
  0x000000010f8418c7: mov    %ebx,0xc(%rax)
  0x000000010f8418ca: sub    $0x10,%rsi
  0x000000010f8418ce: je     0x000000010f8418e5
  0x000000010f8418d4: xor    %rbx,%rbx
  0x000000010f8418d7: shr    $0x3,%rsi
  0x000000010f8418db: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000010f8418e0: dec    %rsi
  0x000000010f8418e3: jne    0x000000010f8418db  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::<init>@6 (line 68)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@291 (line 634)

  0x000000010f8418e5: mov    %rax,%r10
  0x000000010f8418e8: shr    $0x3,%r10
  0x000000010f8418ec: mov    %r10d,0x10(%r11)
  0x000000010f8418f0: mov    %r11,%rax
  0x000000010f8418f3: shr    $0x9,%rax
  0x000000010f8418f7: movabs $0x1065b9000,%rdx
  0x000000010f841901: movb   $0x0,(%rax,%rdx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::<init>@8 (line 68)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@291 (line 634)

  0x000000010f841905: mov    %r11,%rax
  0x000000010f841908: movabs $0x10edfb998,%rdx  ;   {metadata(method data for {method} {0x000000010edfb158} 'readUTF' '(Ljava/io/DataInput;)Ljava/lang/String;' in 'java/io/DataInputStream')}
  0x000000010f841912: mov    0x8(%rax),%eax
  0x000000010f841915: shl    $0x3,%rax
  0x000000010f841919: cmp    0x440(%rdx),%rax
  0x000000010f841920: jne    0x000000010f84192f
  0x000000010f841922: addq   $0x1,0x448(%rdx)
  0x000000010f84192a: jmpq   0x000000010f841995
  0x000000010f84192f: cmp    0x450(%rdx),%rax
  0x000000010f841936: jne    0x000000010f841945
  0x000000010f841938: addq   $0x1,0x458(%rdx)
  0x000000010f841940: jmpq   0x000000010f841995
  0x000000010f841945: cmpq   $0x0,0x440(%rdx)
  0x000000010f841950: jne    0x000000010f841969
  0x000000010f841952: mov    %rax,0x440(%rdx)
  0x000000010f841959: movq   $0x1,0x448(%rdx)
  0x000000010f841964: jmpq   0x000000010f841995
  0x000000010f841969: cmpq   $0x0,0x450(%rdx)
  0x000000010f841974: jne    0x000000010f84198d
  0x000000010f841976: mov    %rax,0x450(%rdx)
  0x000000010f84197d: movq   $0x1,0x458(%rdx)
  0x000000010f841988: jmpq   0x000000010f841995
  0x000000010f84198d: addq   $0x1,0x438(%rdx)
  0x000000010f841995: movabs $0x10ec81440,%rdx  ;   {metadata(method data for {method} {0x000000010eade248} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f84199f: mov    0xdc(%rdx),%esi
  0x000000010f8419a5: add    $0x8,%esi
  0x000000010f8419a8: mov    %esi,0xdc(%rdx)
  0x000000010f8419ae: movabs $0x10eade248,%rdx  ;   {metadata({method} {0x000000010eade248} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f8419b8: and    $0x7ffff8,%esi
  0x000000010f8419be: cmp    $0x0,%esi
  0x000000010f8419c1: je     0x000000010f8420c3
  0x000000010f8419c7: mov    %r11,%rax
  0x000000010f8419ca: movabs $0x10ec81440,%rdx  ;   {metadata(method data for {method} {0x000000010eade248} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f8419d4: addq   $0x1,0x108(%rdx)
  0x000000010f8419dc: movabs $0x795968f78,%rdx  ;   {oop("malformed input around byte ")}
  0x000000010f8419e6: mov    %r11,%rsi          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.DataInputStream::readUTF@296 (line 634)

  0x000000010f8419e9: mov    %r11,0xd0(%rsp)
  0x000000010f8419f1: nop
  0x000000010f8419f2: nop
  0x000000010f8419f3: nop
  0x000000010f8419f4: nop
  0x000000010f8419f5: nop
  0x000000010f8419f6: nop
  0x000000010f8419f7: callq  0x000000010f7170a0  ; OopMap{[208]=Oop [224]=Oop off=6332}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.DataInputStream::readUTF@296 (line 634)
                                                ;   {optimized virtual_call}
  0x000000010f8419fc: mov    0xd0(%rsp),%rax
  0x000000010f841a04: movabs $0x10edfb998,%rdx  ;   {metadata(method data for {method} {0x000000010edfb158} 'readUTF' '(Ljava/io/DataInput;)Ljava/lang/String;' in 'java/io/DataInputStream')}
  0x000000010f841a0e: mov    0x8(%rax),%eax
  0x000000010f841a11: shl    $0x3,%rax
  0x000000010f841a15: cmp    0x470(%rdx),%rax
  0x000000010f841a1c: jne    0x000000010f841a2b
  0x000000010f841a1e: addq   $0x1,0x478(%rdx)
  0x000000010f841a26: jmpq   0x000000010f841a91
  0x000000010f841a2b: cmp    0x480(%rdx),%rax
  0x000000010f841a32: jne    0x000000010f841a41
  0x000000010f841a34: addq   $0x1,0x488(%rdx)
  0x000000010f841a3c: jmpq   0x000000010f841a91
  0x000000010f841a41: cmpq   $0x0,0x470(%rdx)
  0x000000010f841a4c: jne    0x000000010f841a65
  0x000000010f841a4e: mov    %rax,0x470(%rdx)
  0x000000010f841a55: movq   $0x1,0x478(%rdx)
  0x000000010f841a60: jmpq   0x000000010f841a91
  0x000000010f841a65: cmpq   $0x0,0x480(%rdx)
  0x000000010f841a70: jne    0x000000010f841a89
  0x000000010f841a72: mov    %rax,0x480(%rdx)
  0x000000010f841a79: movq   $0x1,0x488(%rdx)
  0x000000010f841a84: jmpq   0x000000010f841a91
  0x000000010f841a89: addq   $0x1,0x468(%rdx)
  0x000000010f841a91: movabs $0x10ed0b000,%rdx  ;   {metadata(method data for {method} {0x000000010eade708} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f841a9b: mov    0xdc(%rdx),%esi
  0x000000010f841aa1: add    $0x8,%esi
  0x000000010f841aa4: mov    %esi,0xdc(%rdx)
  0x000000010f841aaa: movabs $0x10eade708,%rdx  ;   {metadata({method} {0x000000010eade708} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f841ab4: and    $0x7ffff8,%esi
  0x000000010f841aba: cmp    $0x0,%esi
  0x000000010f841abd: je     0x000000010f8420da
  0x000000010f841ac3: mov    0xd0(%rsp),%rax
  0x000000010f841acb: movabs $0x10ed0b000,%rdx  ;   {metadata(method data for {method} {0x000000010eade708} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010f841ad5: addq   $0x1,0x108(%rdx)
  0x000000010f841add: mov    0xd8(%rsp),%edx
  0x000000010f841ae4: mov    0xd0(%rsp),%rsi    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.io.DataInputStream::readUTF@301 (line 634)

  0x000000010f841aec: nop
  0x000000010f841aed: nop
  0x000000010f841aee: nop
  0x000000010f841aef: callq  0x000000010f7170a0  ; OopMap{[208]=Oop [224]=Oop off=6580}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.io.DataInputStream::readUTF@301 (line 634)
                                                ;   {optimized virtual_call}
  0x000000010f841af4: mov    0xd0(%rsp),%rax
  0x000000010f841afc: movabs $0x10edfb998,%rdx  ;   {metadata(method data for {method} {0x000000010edfb158} 'readUTF' '(Ljava/io/DataInput;)Ljava/lang/String;' in 'java/io/DataInputStream')}
  0x000000010f841b06: mov    0x8(%rax),%eax
  0x000000010f841b09: shl    $0x3,%rax
  0x000000010f841b0d: cmp    0x4a0(%rdx),%rax
  0x000000010f841b14: jne    0x000000010f841b23
  0x000000010f841b16: addq   $0x1,0x4a8(%rdx)
  0x000000010f841b1e: jmpq   0x000000010f841b89
  0x000000010f841b23: cmp    0x4b0(%rdx),%rax
  0x000000010f841b2a: jne    0x000000010f841b39
  0x000000010f841b2c: addq   $0x1,0x4b8(%rdx)
  0x000000010f841b34: jmpq   0x000000010f841b89
  0x000000010f841b39: cmpq   $0x0,0x4a0(%rdx)
  0x000000010f841b44: jne    0x000000010f841b5d
  0x000000010f841b46: mov    %rax,0x4a0(%rdx)
  0x000000010f841b4d: movq   $0x1,0x4a8(%rdx)
  0x000000010f841b58: jmpq   0x000000010f841b89
  0x000000010f841b5d: cmpq   $0x0,0x4b0(%rdx)
  0x000000010f841b68: jne    0x000000010f841b81
  0x000000010f841b6a: mov    %rax,0x4b0(%rdx)
  0x000000010f841b71: movq   $0x1,0x4b8(%rdx)
  0x000000010f841b7c: jmpq   0x000000010f841b89
  0x000000010f841b81: addq   $0x1,0x498(%rdx)
  0x000000010f841b89: movabs $0x10ed00b80,%rdx  ;   {metadata(method data for {method} {0x000000010eadf5f8} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder')}
  0x000000010f841b93: mov    0xdc(%rdx),%esi
  0x000000010f841b99: add    $0x8,%esi
  0x000000010f841b9c: mov    %esi,0xdc(%rdx)
  0x000000010f841ba2: movabs $0x10eadf5f8,%rdx  ;   {metadata({method} {0x000000010eadf5f8} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder')}
  0x000000010f841bac: and    $0x7ffff8,%esi
  0x000000010f841bb2: cmp    $0x0,%esi
  0x000000010f841bb5: je     0x000000010f8420f1
  0x000000010f841bbb: movabs $0x7c00016d0,%rdx  ;   {metadata('java/lang/String')}
  0x000000010f841bc5: mov    0x60(%r15),%rax
  0x000000010f841bc9: lea    0x18(%rax),%rdi
  0x000000010f841bcd: cmp    0x70(%r15),%rdi
  0x000000010f841bd1: ja     0x000000010f842108
  0x000000010f841bd7: mov    %rdi,0x60(%r15)
  0x000000010f841bdb: mov    0xa8(%rdx),%rcx
  0x000000010f841be2: mov    %rcx,(%rax)
  0x000000010f841be5: mov    %rdx,%rcx
  0x000000010f841be8: shr    $0x3,%rcx
  0x000000010f841bec: mov    %ecx,0x8(%rax)
  0x000000010f841bef: xor    %rcx,%rcx
  0x000000010f841bf2: mov    %ecx,0xc(%rax)
  0x000000010f841bf5: xor    %rcx,%rcx
  0x000000010f841bf8: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.DataInputStream::readUTF@304 (line 634)

  0x000000010f841bfc: mov    0xd0(%rsp),%rdx
  0x000000010f841c04: mov    0x10(%rdx),%ecx
  0x000000010f841c07: shl    $0x3,%rcx          ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 407)
                                                ; - java.io.DataInputStream::readUTF@304 (line 634)

  0x000000010f841c0b: mov    0xc(%rdx),%r8d     ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 407)
                                                ; - java.io.DataInputStream::readUTF@304 (line 634)

  0x000000010f841c0f: mov    %rax,%rdx
  0x000000010f841c12: movabs $0x10ed00b80,%rsi  ;   {metadata(method data for {method} {0x000000010eadf5f8} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder')}
  0x000000010f841c1c: addq   $0x1,0x108(%rsi)
  0x000000010f841c24: mov    %rcx,%rdx
  0x000000010f841c27: mov    $0x0,%ecx
  0x000000010f841c2c: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.DataInputStream::readUTF@304 (line 634)

  0x000000010f841c2f: mov    %rax,0xe8(%rsp)
  0x000000010f841c37: callq  0x000000010f7170a0  ; OopMap{[224]=Oop [232]=Oop off=6908}
                                                ;*invokespecial <init>
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.DataInputStream::readUTF@304 (line 634)
                                                ;   {optimized virtual_call}
  0x000000010f841c3c: mov    0xe0(%rsp),%rax
  0x000000010f841c44: movabs $0x10edfb998,%rdx  ;   {metadata(method data for {method} {0x000000010edfb158} 'readUTF' '(Ljava/io/DataInput;)Ljava/lang/String;' in 'java/io/DataInputStream')}
  0x000000010f841c4e: addq   $0x1,0x4c8(%rdx)
  0x000000010f841c56: mov    0xe8(%rsp),%rdx
  0x000000010f841c5e: mov    0xe0(%rsp),%rsi    ;*invokespecial <init>
                                                ; - java.io.DataInputStream::readUTF@307 (line 634)

  0x000000010f841c66: nop
  0x000000010f841c67: callq  0x000000010f7170a0  ; OopMap{[224]=Oop off=6956}
                                                ;*invokespecial <init>
                                                ; - java.io.DataInputStream::readUTF@307 (line 634)
                                                ;   {optimized virtual_call}
  0x000000010f841c6c: mov    0xe0(%rsp),%rax
  0x000000010f841c74: jmpq   0x000000010f842166  ;*athrow
                                                ; - java.io.DataInputStream::readUTF@310 (line 634)

  0x000000010f841c79: nopl   0x0(%rax)
  0x000000010f841c80: jmpq   0x000000010f842124  ;   {no_reloc}
  0x000000010f841c85: add    %al,(%rax)
  0x000000010f841c87: add    %al,(%rax)
  0x000000010f841c89: add    %ch,%cl
  0x000000010f841c8b: lahf   
  0x000000010f841c8c: add    $0x0,%al
  0x000000010f841c8e: add    %cl,-0x75(%rax)    ;*new  ; - java.io.DataInputStream::readUTF@253 (line 630)

  0x000000010f841c91: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x000000010edfb158} 'readUTF' '(Ljava/io/DataInput;)Ljava/lang/String;' in 'java/io/DataInputStream')}
  0x000000010f841c94: cwtl   
  0x000000010f841c95: mov    $0x10edf,%ecx
  0x000000010f841c9a: add    %al,(%rax)
  0x000000010f841c9c: addq   $0x1,0x3f8(%rsi)
  0x000000010f841ca4: movabs $0x795968ef8,%rdx  ;   {oop("malformed input: partial character at end")}
  0x000000010f841cae: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.io.DataInputStream::readUTF@259 (line 630)

  0x000000010f841cb1: mov    %rax,0xf0(%rsp)
  0x000000010f841cb9: nop
  0x000000010f841cba: nop
  0x000000010f841cbb: nop
  0x000000010f841cbc: nop
  0x000000010f841cbd: nop
  0x000000010f841cbe: nop
  0x000000010f841cbf: callq  0x000000010f7170a0  ; OopMap{[240]=Oop off=7044}
                                                ;*invokespecial <init>
                                                ; - java.io.DataInputStream::readUTF@259 (line 630)
                                                ;   {optimized virtual_call}
  0x000000010f841cc4: mov    0xf0(%rsp),%rax
  0x000000010f841ccc: jmpq   0x000000010f842166
  0x000000010f841cd1: mov    %rdi,0x8(%rsp)
  0x000000010f841cd6: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f841cde: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=7075}
                                                ;*synchronization entry
                                                ; - java.io.DataInputStream::readUTF@-1 (line 589)
                                                ;   {runtime_call}
  0x000000010f841ce3: jmpq   0x000000010f840181
  0x000000010f841ce8: callq  0x000000010f7cf6c0  ; OopMap{rsi=Oop off=7085}
                                                ;*invokeinterface readUnsignedShort
                                                ; - java.io.DataInputStream::readUTF@1 (line 589)
                                                ;   {runtime_call}
  0x000000010f841ced: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop off=7090}
                                                ;*invokeinterface readUnsignedShort
                                                ; - java.io.DataInputStream::readUTF@1 (line 589)
                                                ;   {runtime_call}
  0x000000010f841cf2: mov    %r9,(%rsp)
  0x000000010f841cf6: callq  0x000000010f7cf480  ; OopMap{r9=Oop off=7099}
                                                ;*checkcast
                                                ; - java.io.DataInputStream::readUTF@19 (line 593)
                                                ;   {runtime_call}
  0x000000010f841cfb: callq  0x000000010f7cd0c0  ; OopMap{r9=Oop r8=Oop off=7104}
                                                ;*getfield bytearr
                                                ; - java.io.DataInputStream::readUTF@26 (line 594)
                                                ;   {runtime_call}
  0x000000010f841d00: callq  0x000000010f7cd0c0  ; OopMap{r9=Oop r8=Oop off=7109}
                                                ;*arraylength
                                                ; - java.io.DataInputStream::readUTF@29 (line 594)
                                                ;   {runtime_call}
  0x000000010f841d05: callq  0x000000010f7ce120  ; OopMap{r9=Oop r8=Oop off=7114}
                                                ;*newarray
                                                ; - java.io.DataInputStream::readUTF@39 (line 595)
                                                ;   {runtime_call}
  0x000000010f841d0a: jmpq   0x000000010f8404bc
  0x000000010f841d0f: callq  0x000000010f7ce120  ; OopMap{r9=Oop r8=Oop off=7124}
                                                ;*newarray
                                                ; - java.io.DataInputStream::readUTF@49 (line 596)
                                                ;   {runtime_call}
  0x000000010f841d14: jmpq   0x000000010f840557
  0x000000010f841d19: callq  0x000000010f7ce120  ; OopMap{r9=Oop off=7134}
                                                ;*newarray
                                                ; - java.io.DataInputStream::readUTF@70 (line 601)
                                                ;   {runtime_call}
  0x000000010f841d1e: jmpq   0x000000010f840610
  0x000000010f841d23: callq  0x000000010f7ce120  ; OopMap{r9=Oop r8=Oop off=7144}
                                                ;*newarray
                                                ; - java.io.DataInputStream::readUTF@74 (line 602)
                                                ;   {runtime_call}
  0x000000010f841d28: jmpq   0x000000010f84068d
  0x000000010f841d2d: callq  0x000000010f7cf6c0  ; OopMap{r9=Oop rdx=Oop [128]=Oop off=7154}
                                                ;*invokeinterface readFully
                                                ; - java.io.DataInputStream::readUTF@87 (line 609)
                                                ;   {runtime_call}
  0x000000010f841d32: callq  0x000000010f7cd0c0  ; OopMap{rbx=Oop rdi=Oop off=7159}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@101 (line 612)
                                                ;   {runtime_call}
  0x000000010f841d37: callq  0x000000010f7cd0c0  ; OopMap{rbx=Oop rdi=Oop off=7164}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@101 (line 612)
                                                ;   {runtime_call}
  0x000000010f841d3c: mov    %rsi,(%rsp)
  0x000000010f841d40: callq  0x000000010f7cca00  ; OopMap{rbx=Oop rdi=Oop off=7173}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@101 (line 612)
                                                ;   {runtime_call}
  0x000000010f841d45: callq  0x000000010f7cd0c0  ; OopMap{rbx=Oop rdi=Oop off=7178}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@130 (line 615)
                                                ;   {runtime_call}
  0x000000010f841d4a: callq  0x000000010f7cd0c0  ; OopMap{rbx=Oop rdi=Oop off=7183}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@130 (line 615)
                                                ;   {runtime_call}
  0x000000010f841d4f: mov    %rdx,(%rsp)
  0x000000010f841d53: callq  0x000000010f7cca00  ; OopMap{rbx=Oop rdi=Oop off=7192}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@130 (line 615)
                                                ;   {runtime_call}
  0x000000010f841d58: mov    %rdx,0x8(%rsp)
  0x000000010f841d5d: movq   $0x83,(%rsp)
  0x000000010f841d65: callq  0x000000010f7d1a20  ; OopMap{rbx=Oop rdi=Oop off=7210}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@131 (line 615)
                                                ;   {runtime_call}
  0x000000010f841d6a: jmpq   0x000000010f8407c4
  0x000000010f841d6f: callq  0x000000010f7cd0c0  ; OopMap{rbx=Oop rdi=Oop off=7220}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@143 (line 619)
                                                ;   {runtime_call}
  0x000000010f841d74: callq  0x000000010f7cd0c0  ; OopMap{rbx=Oop rdi=Oop off=7225}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@143 (line 619)
                                                ;   {runtime_call}
  0x000000010f841d79: mov    %rsi,(%rsp)
  0x000000010f841d7d: callq  0x000000010f7cca00  ; OopMap{rbx=Oop rdi=Oop off=7234}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@143 (line 619)
                                                ;   {runtime_call}
  0x000000010f841d82: mov    %rcx,(%rsp)
  0x000000010f841d86: callq  0x000000010f7cca00  ; OopMap{rbx=Oop rdi=Oop off=7243}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@268 (line 632)
                                                ;   {runtime_call}
  0x000000010f841d8b: mov    %rcx,(%rsp)
  0x000000010f841d8f: callq  0x000000010f7cca00  ; OopMap{rbx=Oop rdi=Oop off=7252}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@360 (line 645)
                                                ;   {runtime_call}
  0x000000010f841d94: mov    %r9,(%rsp)
  0x000000010f841d98: callq  0x000000010f7cca00  ; OopMap{rbx=Oop rdi=Oop off=7261}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@368 (line 646)
                                                ;   {runtime_call}
  0x000000010f841d9d: callq  0x000000010f7cd0c0  ; OopMap{rbx=Oop rdi=Oop off=7266}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@457 (line 650)
                                                ;   {runtime_call}
  0x000000010f841da2: callq  0x000000010f7cd0c0  ; OopMap{rbx=Oop rdi=Oop off=7271}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@457 (line 650)
                                                ;   {runtime_call}
  0x000000010f841da7: mov    %r8,(%rsp)
  0x000000010f841dab: callq  0x000000010f7cca00  ; OopMap{rbx=Oop rdi=Oop off=7280}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@457 (line 650)
                                                ;   {runtime_call}
  0x000000010f841db0: mov    %rdx,0x8(%rsp)
  0x000000010f841db5: movq   $0x1ca,(%rsp)
  0x000000010f841dbd: callq  0x000000010f7d1a20  ; OopMap{rbx=Oop rdi=Oop off=7298}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@458 (line 653)
                                                ;   {runtime_call}
  0x000000010f841dc2: jmpq   0x000000010f840ab6
  0x000000010f841dc7: callq  0x000000010f7cd0c0  ; OopMap{rbx=Oop rdi=Oop off=7308}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@332 (line 636)
                                                ;   {runtime_call}
  0x000000010f841dcc: callq  0x000000010f7cd0c0  ; OopMap{rbx=Oop rdi=Oop off=7313}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@332 (line 636)
                                                ;   {runtime_call}
  0x000000010f841dd1: mov    %r8,(%rsp)
  0x000000010f841dd5: callq  0x000000010f7cca00  ; OopMap{rbx=Oop rdi=Oop off=7322}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@332 (line 636)
                                                ;   {runtime_call}
  0x000000010f841dda: mov    %rdx,0x8(%rsp)
  0x000000010f841ddf: movq   $0x14d,(%rsp)
  0x000000010f841de7: callq  0x000000010f7d1a20  ; OopMap{rbx=Oop rdi=Oop off=7340}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@333 (line 638)
                                                ;   {runtime_call}
  0x000000010f841dec: jmpq   0x000000010f840b2a
  0x000000010f841df1: callq  0x000000010f7cd0c0  ; OopMap{rbx=Oop rdi=Oop off=7350}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@240 (line 624)
                                                ;   {runtime_call}
  0x000000010f841df6: callq  0x000000010f7cd0c0  ; OopMap{rbx=Oop rdi=Oop off=7355}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@240 (line 624)
                                                ;   {runtime_call}
  0x000000010f841dfb: mov    %r8,(%rsp)
  0x000000010f841dff: callq  0x000000010f7cca00  ; OopMap{rbx=Oop rdi=Oop off=7364}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@240 (line 624)
                                                ;   {runtime_call}
  0x000000010f841e04: mov    %rdx,0x8(%rsp)
  0x000000010f841e09: movq   $0xf1,(%rsp)
  0x000000010f841e11: callq  0x000000010f7d1a20  ; OopMap{rbx=Oop rdi=Oop off=7382}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@241 (line 625)
                                                ;   {runtime_call}
  0x000000010f841e16: jmpq   0x000000010f840b99
  0x000000010f841e1b: mov    %rdx,%rdx
  0x000000010f841e1e: callq  0x000000010f7cd820  ; OopMap{rbx=Oop off=7395}
                                                ;*new  ; - java.io.DataInputStream::readUTF@489 (line 661)
                                                ;   {runtime_call}
  0x000000010f841e23: jmpq   0x000000010f840c04
  0x000000010f841e28: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f841e32: mov    $0xa050f00,%eax
  0x000000010f841e37: callq  0x000000010f7d08e0  ; OopMap{off=7420}
                                                ;*new  ; - java.io.DataInputStream::readUTF@461 (line 656)
                                                ;   {runtime_call}
  0x000000010f841e3c: jmpq   0x000000010f840c50
  0x000000010f841e41: mov    %rdx,%rdx
  0x000000010f841e44: callq  0x000000010f7cd560  ; OopMap{off=7433}
                                                ;*new  ; - java.io.DataInputStream::readUTF@461 (line 656)
                                                ;   {runtime_call}
  0x000000010f841e49: jmpq   0x000000010f840c5f
  0x000000010f841e4e: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f841e58: mov    $0xa050f00,%eax
  0x000000010f841e5d: callq  0x000000010f7d08e0  ; OopMap{rax=Oop off=7458}
                                                ;*new  ; - java.io.DataInputStream::readUTF@465 (line 656)
                                                ;   {runtime_call}
  0x000000010f841e62: jmpq   0x000000010f840c60
  0x000000010f841e67: mov    %rdx,%rdx
  0x000000010f841e6a: callq  0x000000010f7cd820  ; OopMap{[160]=Oop off=7471}
                                                ;*new  ; - java.io.DataInputStream::readUTF@465 (line 656)
                                                ;   {runtime_call}
  0x000000010f841e6f: jmpq   0x000000010f840ca9
  0x000000010f841e74: mov    %rbx,0x8(%rsp)
  0x000000010f841e79: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f841e81: callq  0x000000010f7d1a20  ; OopMap{[160]=Oop rax=Oop off=7494}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::<init>@-1 (line 89)
                                                ; - java.io.DataInputStream::readUTF@469 (line 656)
                                                ;   {runtime_call}
  0x000000010f841e86: jmpq   0x000000010f840cf0
  0x000000010f841e8b: mov    %rbx,0x8(%rsp)
  0x000000010f841e90: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f841e98: callq  0x000000010f7d1a20  ; OopMap{[160]=Oop rax=Oop off=7517}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::<init>@-1 (line 67)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@469 (line 656)
                                                ;   {runtime_call}
  0x000000010f841e9d: jmpq   0x000000010f840d37
  0x000000010f841ea2: mov    %rbx,0x8(%rsp)
  0x000000010f841ea7: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f841eaf: callq  0x000000010f7d1a20  ; OopMap{[160]=Oop rax=Oop off=7540}
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::<init>@1 (line 67)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@469 (line 656)
                                                ;   {runtime_call}
  0x000000010f841eb4: jmpq   0x000000010f840d7e
  0x000000010f841eb9: callq  0x000000010f7ce120  ; OopMap{[160]=Oop r11=Oop off=7550}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::<init>@6 (line 68)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@469 (line 656)
                                                ;   {runtime_call}
  0x000000010f841ebe: jmpq   0x000000010f840dfd
  0x000000010f841ec3: mov    %rdx,0x8(%rsp)
  0x000000010f841ec8: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f841ed0: callq  0x000000010f7d1a20  ; OopMap{[160]=Oop r11=Oop off=7573}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ; - java.io.DataInputStream::readUTF@474 (line 656)
                                                ;   {runtime_call}
  0x000000010f841ed5: jmpq   0x000000010f840edf
  0x000000010f841eda: mov    %rdx,0x8(%rsp)
  0x000000010f841edf: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f841ee7: callq  0x000000010f7d1a20  ; OopMap{[144]=Oop [160]=Oop off=7596}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.io.DataInputStream::readUTF@479 (line 656)
                                                ;   {runtime_call}
  0x000000010f841eec: jmpq   0x000000010f840fdb
  0x000000010f841ef1: mov    %rdx,0x8(%rsp)
  0x000000010f841ef6: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f841efe: callq  0x000000010f7d1a20  ; OopMap{[144]=Oop [160]=Oop off=7619}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.io.DataInputStream::readUTF@482 (line 656)
                                                ;   {runtime_call}
  0x000000010f841f03: jmpq   0x000000010f8410d3
  0x000000010f841f08: mov    %rdx,%rdx
  0x000000010f841f0b: callq  0x000000010f7cd820  ; OopMap{[144]=Oop [160]=Oop off=7632}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.DataInputStream::readUTF@482 (line 656)
                                                ;   {runtime_call}
  0x000000010f841f10: jmpq   0x000000010f841114
  0x000000010f841f15: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f841f1f: mov    $0xa050f00,%eax
  0x000000010f841f24: callq  0x000000010f7d08e0  ; OopMap{off=7657}
                                                ;*new  ; - java.io.DataInputStream::readUTF@395 (line 648)
                                                ;   {runtime_call}
  0x000000010f841f29: jmpq   0x000000010f841198
  0x000000010f841f2e: mov    %rdx,%rdx
  0x000000010f841f31: callq  0x000000010f7cd560  ; OopMap{off=7670}
                                                ;*new  ; - java.io.DataInputStream::readUTF@395 (line 648)
                                                ;   {runtime_call}
  0x000000010f841f36: jmpq   0x000000010f8411a7
  0x000000010f841f3b: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f841f45: mov    $0xa050f00,%eax
  0x000000010f841f4a: callq  0x000000010f7d08e0  ; OopMap{rax=Oop off=7695}
                                                ;*new  ; - java.io.DataInputStream::readUTF@399 (line 648)
                                                ;   {runtime_call}
  0x000000010f841f4f: jmpq   0x000000010f8411a8
  0x000000010f841f54: mov    %rdx,%rdx
  0x000000010f841f57: callq  0x000000010f7cd820  ; OopMap{[184]=Oop off=7708}
                                                ;*new  ; - java.io.DataInputStream::readUTF@399 (line 648)
                                                ;   {runtime_call}
  0x000000010f841f5c: jmpq   0x000000010f8411f1
  0x000000010f841f61: mov    %rbx,0x8(%rsp)
  0x000000010f841f66: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f841f6e: callq  0x000000010f7d1a20  ; OopMap{[184]=Oop rax=Oop off=7731}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::<init>@-1 (line 89)
                                                ; - java.io.DataInputStream::readUTF@403 (line 648)
                                                ;   {runtime_call}
  0x000000010f841f73: jmpq   0x000000010f841238
  0x000000010f841f78: mov    %rbx,0x8(%rsp)
  0x000000010f841f7d: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f841f85: callq  0x000000010f7d1a20  ; OopMap{[184]=Oop rax=Oop off=7754}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::<init>@-1 (line 67)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@403 (line 648)
                                                ;   {runtime_call}
  0x000000010f841f8a: jmpq   0x000000010f84127f
  0x000000010f841f8f: mov    %rbx,0x8(%rsp)
  0x000000010f841f94: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f841f9c: callq  0x000000010f7d1a20  ; OopMap{[184]=Oop rax=Oop off=7777}
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::<init>@1 (line 67)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@403 (line 648)
                                                ;   {runtime_call}
  0x000000010f841fa1: jmpq   0x000000010f8412c6
  0x000000010f841fa6: callq  0x000000010f7ce120  ; OopMap{[184]=Oop r13=Oop off=7787}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::<init>@6 (line 68)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@403 (line 648)
                                                ;   {runtime_call}
  0x000000010f841fab: jmpq   0x000000010f841345
  0x000000010f841fb0: mov    %rdx,0x8(%rsp)
  0x000000010f841fb5: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f841fbd: callq  0x000000010f7d1a20  ; OopMap{[184]=Oop r13=Oop off=7810}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ; - java.io.DataInputStream::readUTF@408 (line 648)
                                                ;   {runtime_call}
  0x000000010f841fc2: jmpq   0x000000010f841427
  0x000000010f841fc7: mov    %rdx,0x8(%rsp)
  0x000000010f841fcc: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f841fd4: callq  0x000000010f7d1a20  ; OopMap{[176]=Oop [184]=Oop off=7833}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.io.DataInputStream::readUTF@415 (line 648)
                                                ;   {runtime_call}
  0x000000010f841fd9: jmpq   0x000000010f841523
  0x000000010f841fde: mov    %rdx,0x8(%rsp)
  0x000000010f841fe3: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f841feb: callq  0x000000010f7d1a20  ; OopMap{[176]=Oop [184]=Oop off=7856}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.io.DataInputStream::readUTF@418 (line 648)
                                                ;   {runtime_call}
  0x000000010f841ff0: jmpq   0x000000010f84161b
  0x000000010f841ff5: mov    %rdx,%rdx
  0x000000010f841ff8: callq  0x000000010f7cd820  ; OopMap{[176]=Oop [184]=Oop off=7869}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.DataInputStream::readUTF@418 (line 648)
                                                ;   {runtime_call}
  0x000000010f841ffd: jmpq   0x000000010f84165c
  0x000000010f842002: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f84200c: mov    $0xa050f00,%eax
  0x000000010f842011: callq  0x000000010f7d08e0  ; OopMap{off=7894}
                                                ;*new  ; - java.io.DataInputStream::readUTF@345 (line 643)
                                                ;   {runtime_call}
  0x000000010f842016: jmpq   0x000000010f8416e0
  0x000000010f84201b: mov    %rdx,%rdx
  0x000000010f84201e: callq  0x000000010f7cd560  ; OopMap{off=7907}
                                                ;*new  ; - java.io.DataInputStream::readUTF@345 (line 643)
                                                ;   {runtime_call}
  0x000000010f842023: jmpq   0x000000010f8416ef
  0x000000010f842028: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f842032: mov    $0xa050f00,%eax
  0x000000010f842037: callq  0x000000010f7d08e0  ; OopMap{off=7932}
                                                ;*new  ; - java.io.DataInputStream::readUTF@283 (line 634)
                                                ;   {runtime_call}
  0x000000010f84203c: jmpq   0x000000010f841738
  0x000000010f842041: mov    %rdx,%rdx
  0x000000010f842044: callq  0x000000010f7cd560  ; OopMap{off=7945}
                                                ;*new  ; - java.io.DataInputStream::readUTF@283 (line 634)
                                                ;   {runtime_call}
  0x000000010f842049: jmpq   0x000000010f841747
  0x000000010f84204e: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f842058: mov    $0xa050f00,%eax
  0x000000010f84205d: callq  0x000000010f7d08e0  ; OopMap{rax=Oop off=7970}
                                                ;*new  ; - java.io.DataInputStream::readUTF@287 (line 634)
                                                ;   {runtime_call}
  0x000000010f842062: jmpq   0x000000010f841748
  0x000000010f842067: mov    %rdx,%rdx
  0x000000010f84206a: callq  0x000000010f7cd820  ; OopMap{[224]=Oop off=7983}
                                                ;*new  ; - java.io.DataInputStream::readUTF@287 (line 634)
                                                ;   {runtime_call}
  0x000000010f84206f: jmpq   0x000000010f841791
  0x000000010f842074: mov    %rbx,0x8(%rsp)
  0x000000010f842079: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f842081: callq  0x000000010f7d1a20  ; OopMap{[224]=Oop rax=Oop off=8006}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::<init>@-1 (line 89)
                                                ; - java.io.DataInputStream::readUTF@291 (line 634)
                                                ;   {runtime_call}
  0x000000010f842086: jmpq   0x000000010f8417d8
  0x000000010f84208b: mov    %rbx,0x8(%rsp)
  0x000000010f842090: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f842098: callq  0x000000010f7d1a20  ; OopMap{[224]=Oop rax=Oop off=8029}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::<init>@-1 (line 67)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@291 (line 634)
                                                ;   {runtime_call}
  0x000000010f84209d: jmpq   0x000000010f84181f
  0x000000010f8420a2: mov    %rbx,0x8(%rsp)
  0x000000010f8420a7: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f8420af: callq  0x000000010f7d1a20  ; OopMap{[224]=Oop rax=Oop off=8052}
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::<init>@1 (line 67)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@291 (line 634)
                                                ;   {runtime_call}
  0x000000010f8420b4: jmpq   0x000000010f841866
  0x000000010f8420b9: callq  0x000000010f7ce120  ; OopMap{[224]=Oop r11=Oop off=8062}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::<init>@6 (line 68)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@291 (line 634)
                                                ;   {runtime_call}
  0x000000010f8420be: jmpq   0x000000010f8418e5
  0x000000010f8420c3: mov    %rdx,0x8(%rsp)
  0x000000010f8420c8: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f8420d0: callq  0x000000010f7d1a20  ; OopMap{[224]=Oop r11=Oop off=8085}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ; - java.io.DataInputStream::readUTF@296 (line 634)
                                                ;   {runtime_call}
  0x000000010f8420d5: jmpq   0x000000010f8419c7
  0x000000010f8420da: mov    %rdx,0x8(%rsp)
  0x000000010f8420df: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f8420e7: callq  0x000000010f7d1a20  ; OopMap{[208]=Oop [224]=Oop off=8108}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.io.DataInputStream::readUTF@301 (line 634)
                                                ;   {runtime_call}
  0x000000010f8420ec: jmpq   0x000000010f841ac3
  0x000000010f8420f1: mov    %rdx,0x8(%rsp)
  0x000000010f8420f6: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f8420fe: callq  0x000000010f7d1a20  ; OopMap{[208]=Oop [224]=Oop off=8131}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.io.DataInputStream::readUTF@304 (line 634)
                                                ;   {runtime_call}
  0x000000010f842103: jmpq   0x000000010f841bbb
  0x000000010f842108: mov    %rdx,%rdx
  0x000000010f84210b: callq  0x000000010f7cd820  ; OopMap{[208]=Oop [224]=Oop off=8144}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.DataInputStream::readUTF@304 (line 634)
                                                ;   {runtime_call}
  0x000000010f842110: jmpq   0x000000010f841bfc
  0x000000010f842115: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f84211f: mov    $0xa050f00,%eax
  0x000000010f842124: callq  0x000000010f7d08e0  ; OopMap{off=8169}
                                                ;*new  ; - java.io.DataInputStream::readUTF@253 (line 630)
                                                ;   {runtime_call}
  0x000000010f842129: jmpq   0x000000010f841c80
  0x000000010f84212e: mov    %rdx,%rdx
  0x000000010f842131: callq  0x000000010f7cd560  ; OopMap{off=8182}
                                                ;*new  ; - java.io.DataInputStream::readUTF@253 (line 630)
                                                ;   {runtime_call}
  0x000000010f842136: jmpq   0x000000010f841c8f
  0x000000010f84213b: nop
  0x000000010f84213c: nop
  0x000000010f84213d: mov    0x2a8(%r15),%rax
  0x000000010f842144: movabs $0x0,%r10
  0x000000010f84214e: mov    %r10,0x2a8(%r15)
  0x000000010f842155: movabs $0x0,%r10
  0x000000010f84215f: mov    %r10,0x2b0(%r15)
  0x000000010f842166: add    $0x100,%rsp
  0x000000010f84216d: pop    %rbp
  0x000000010f84216e: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f842173: hlt    
  0x000000010f842174: hlt    
  0x000000010f842175: hlt    
  0x000000010f842176: hlt    
  0x000000010f842177: hlt    
  0x000000010f842178: hlt    
  0x000000010f842179: hlt    
  0x000000010f84217a: hlt    
  0x000000010f84217b: hlt    
  0x000000010f84217c: hlt    
  0x000000010f84217d: hlt    
  0x000000010f84217e: hlt    
  0x000000010f84217f: hlt    
[Stub Code]
  0x000000010f842180: nop                       ;   {no_reloc}
  0x000000010f842181: nop
  0x000000010f842182: nop
  0x000000010f842183: nop
  0x000000010f842184: nop
  0x000000010f842185: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f84218f: jmpq   0x000000010f84218f  ;   {runtime_call}
  0x000000010f842194: nop
  0x000000010f842195: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f84219f: jmpq   0x000000010f84219f  ;   {runtime_call}
  0x000000010f8421a4: nop
  0x000000010f8421a5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f8421af: jmpq   0x000000010f8421af  ;   {runtime_call}
  0x000000010f8421b4: nop
  0x000000010f8421b5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f8421bf: jmpq   0x000000010f8421bf  ;   {runtime_call}
  0x000000010f8421c4: nop
  0x000000010f8421c5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f8421cf: jmpq   0x000000010f8421cf  ;   {runtime_call}
  0x000000010f8421d4: nop
  0x000000010f8421d5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f8421df: jmpq   0x000000010f8421df  ;   {runtime_call}
  0x000000010f8421e4: nop
  0x000000010f8421e5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f8421ef: jmpq   0x000000010f8421ef  ;   {runtime_call}
  0x000000010f8421f4: nop
  0x000000010f8421f5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f8421ff: jmpq   0x000000010f8421ff  ;   {runtime_call}
  0x000000010f842204: nop
  0x000000010f842205: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f84220f: jmpq   0x000000010f84220f  ;   {runtime_call}
  0x000000010f842214: nop
  0x000000010f842215: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f84221f: jmpq   0x000000010f84221f  ;   {runtime_call}
  0x000000010f842224: nop
  0x000000010f842225: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f84222f: jmpq   0x000000010f84222f  ;   {runtime_call}
  0x000000010f842234: nop
  0x000000010f842235: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f84223f: jmpq   0x000000010f84223f  ;   {runtime_call}
  0x000000010f842244: nop
  0x000000010f842245: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f84224f: jmpq   0x000000010f84224f  ;   {runtime_call}
  0x000000010f842254: nop
  0x000000010f842255: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f84225f: jmpq   0x000000010f84225f  ;   {runtime_call}
  0x000000010f842264: nop
  0x000000010f842265: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f84226f: jmpq   0x000000010f84226f  ;   {runtime_call}
  0x000000010f842274: nop
  0x000000010f842275: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f84227f: jmpq   0x000000010f84227f  ;   {runtime_call}
  0x000000010f842284: nop
  0x000000010f842285: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f84228f: jmpq   0x000000010f84228f  ;   {runtime_call}
[Exception Handler]
  0x000000010f842294: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f842299: mov    %rsp,-0x28(%rsp)
  0x000000010f84229e: sub    $0x80,%rsp
  0x000000010f8422a5: mov    %rax,0x78(%rsp)
  0x000000010f8422aa: mov    %rcx,0x70(%rsp)
  0x000000010f8422af: mov    %rdx,0x68(%rsp)
  0x000000010f8422b4: mov    %rbx,0x60(%rsp)
  0x000000010f8422b9: mov    %rbp,0x50(%rsp)
  0x000000010f8422be: mov    %rsi,0x48(%rsp)
  0x000000010f8422c3: mov    %rdi,0x40(%rsp)
  0x000000010f8422c8: mov    %r8,0x38(%rsp)
  0x000000010f8422cd: mov    %r9,0x30(%rsp)
  0x000000010f8422d2: mov    %r10,0x28(%rsp)
  0x000000010f8422d7: mov    %r11,0x20(%rsp)
  0x000000010f8422dc: mov    %r12,0x18(%rsp)
  0x000000010f8422e1: mov    %r13,0x10(%rsp)
  0x000000010f8422e6: mov    %r14,0x8(%rsp)
  0x000000010f8422eb: mov    %r15,(%rsp)
  0x000000010f8422ef: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f8422f9: movabs $0x10f842299,%rsi  ;   {internal_word}
  0x000000010f842303: mov    %rsp,%rdx
  0x000000010f842306: and    $0xfffffffffffffff0,%rsp
  0x000000010f84230a: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f84230f: hlt    
[Deopt Handler Code]
  0x000000010f842310: movabs $0x10f842310,%r10  ;   {section_word}
  0x000000010f84231a: push   %r10
  0x000000010f84231c: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f842321: hlt    
  0x000000010f842322: hlt    
  0x000000010f842323: hlt    
  0x000000010f842324: hlt    
  0x000000010f842325: hlt    
  0x000000010f842326: hlt    
  0x000000010f842327: hlt    
Decoding compiled method 0x000000010f846550:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010eba3950} 'getBufIfOpen' '()[B' in 'java/io/BufferedInputStream'
  #           [sp+0x30]  (sp of caller)
  0x000000010f8466a0: mov    0x8(%rsi),%r10d
  0x000000010f8466a4: shl    $0x3,%r10
  0x000000010f8466a8: cmp    %r10,%rax
  0x000000010f8466ab: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f8466b1: data16 xchg %ax,%ax
  0x000000010f8466b4: nopl   0x0(%rax,%rax,1)
  0x000000010f8466bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f8466c0: mov    %eax,-0x14000(%rsp)
  0x000000010f8466c7: push   %rbp
  0x000000010f8466c8: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.io.BufferedInputStream::getBufIfOpen@-1 (line 168)

  0x000000010f8466cc: mov    0x20(%rsi),%r10d   ;*getfield buf
                                                ; - java.io.BufferedInputStream::getBufIfOpen@1 (line 168)

  0x000000010f8466d0: test   %r10d,%r10d
  0x000000010f8466d3: je     0x000000010f8466e5  ;*ifnonnull
                                                ; - java.io.BufferedInputStream::getBufIfOpen@6 (line 169)

  0x000000010f8466d5: lea    (%r12,%r10,8),%rax  ;*getfield buf
                                                ; - java.io.BufferedInputStream::getBufIfOpen@1 (line 168)

  0x000000010f8466d9: add    $0x20,%rsp
  0x000000010f8466dd: pop    %rbp
  0x000000010f8466de: test   %eax,-0x8dab6e4(%rip)        # 0x0000000106a9b000
                                                ;   {poll_return}
  0x000000010f8466e4: retq   
  0x000000010f8466e5: mov    $0xffffff65,%esi
  0x000000010f8466ea: mov    %r10d,(%rsp)
  0x000000010f8466ee: nop
  0x000000010f8466ef: callq  0x000000010f7166a0  ; OopMap{[0]=NarrowOop off=84}
                                                ;*ifnonnull
                                                ; - java.io.BufferedInputStream::getBufIfOpen@6 (line 169)
                                                ;   {runtime_call}
  0x000000010f8466f4: callq  0x000000010948a904  ;*ifnonnull
                                                ; - java.io.BufferedInputStream::getBufIfOpen@6 (line 169)
                                                ;   {runtime_call}
  0x000000010f8466f9: hlt    
  0x000000010f8466fa: hlt    
  0x000000010f8466fb: hlt    
  0x000000010f8466fc: hlt    
  0x000000010f8466fd: hlt    
  0x000000010f8466fe: hlt    
  0x000000010f8466ff: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f846700: jmpq   0x000000010f73fba0  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010f846705: callq  0x000000010f84670a
  0x000000010f84670a: subq   $0x5,(%rsp)
  0x000000010f84670f: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f846714: hlt    
  0x000000010f846715: hlt    
  0x000000010f846716: hlt    
  0x000000010f846717: hlt    
Decoding compiled method 0x000000010f845c50:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010edfa428} 'readFully' '([BII)V' in 'java/io/DataInputStream'
  # this:     rsi:rsi   = 'java/io/DataInputStream'
  # parm0:    rdx:rdx   = '[B'
  # parm1:    rcx       = int
  # parm2:    r8        = int
  #           [sp+0x80]  (sp of caller)
  0x000000010f845e00: mov    0x8(%rsi),%r10d
  0x000000010f845e04: shl    $0x3,%r10
  0x000000010f845e08: cmp    %rax,%r10
  0x000000010f845e0b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f845e11: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f845e1c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f845e20: mov    %eax,-0x14000(%rsp)
  0x000000010f845e27: push   %rbp
  0x000000010f845e28: sub    $0x70,%rsp
  0x000000010f845e2c: mov    %rsi,0x38(%rsp)
  0x000000010f845e31: mov    %rdx,0x48(%rsp)
  0x000000010f845e36: mov    %ecx,0x40(%rsp)
  0x000000010f845e3a: mov    %r8d,0x34(%rsp)
  0x000000010f845e3f: movabs $0x10edfc418,%rdi  ;   {metadata(method data for {method} {0x000000010edfa428} 'readFully' '([BII)V' in 'java/io/DataInputStream')}
  0x000000010f845e49: mov    0xdc(%rdi),%ebx
  0x000000010f845e4f: add    $0x8,%ebx
  0x000000010f845e52: mov    %ebx,0xdc(%rdi)
  0x000000010f845e58: movabs $0x10edfa428,%rdi  ;   {metadata({method} {0x000000010edfa428} 'readFully' '([BII)V' in 'java/io/DataInputStream')}
  0x000000010f845e62: and    $0x1ff8,%ebx
  0x000000010f845e68: cmp    $0x0,%ebx
  0x000000010f845e6b: je     0x000000010f8460e6  ;*iload_3
                                                ; - java.io.DataInputStream::readFully@0 (line 191)

  0x000000010f845e71: cmp    $0x0,%r8d
  0x000000010f845e75: movabs $0x10edfc418,%rdi  ;   {metadata(method data for {method} {0x000000010edfa428} 'readFully' '([BII)V' in 'java/io/DataInputStream')}
  0x000000010f845e7f: movabs $0x108,%rbx
  0x000000010f845e89: jge    0x000000010f845e99
  0x000000010f845e8f: movabs $0x118,%rbx
  0x000000010f845e99: mov    (%rdi,%rbx,1),%rax
  0x000000010f845e9d: lea    0x1(%rax),%rax
  0x000000010f845ea1: mov    %rax,(%rdi,%rbx,1)
  0x000000010f845ea5: jl     0x000000010f8460a6  ;*ifge
                                                ; - java.io.DataInputStream::readFully@1 (line 191)

  0x000000010f845eab: mov    $0x0,%edi
  0x000000010f845eb0: jmpq   0x000000010f84601f  ;*iload
                                                ; - java.io.DataInputStream::readFully@15 (line 194)

  0x000000010f845eb5: data16 xchg %ax,%ax
  0x000000010f845eb8: mov    0xc(%rsi),%ebx
  0x000000010f845ebb: shl    $0x3,%rbx          ;*getfield in
                                                ; - java.io.DataInputStream::readFully@22 (line 195)

  0x000000010f845ebf: cmp    (%rbx),%rax        ; implicit exception: dispatches to 0x000000010f8460fd
  0x000000010f845ec2: mov    %rbx,%rax
  0x000000010f845ec5: movabs $0x10edfc418,%r9   ;   {metadata(method data for {method} {0x000000010edfa428} 'readFully' '([BII)V' in 'java/io/DataInputStream')}
  0x000000010f845ecf: mov    0x8(%rax),%eax
  0x000000010f845ed2: shl    $0x3,%rax
  0x000000010f845ed6: cmp    0x160(%r9),%rax
  0x000000010f845edd: jne    0x000000010f845eec
  0x000000010f845edf: addq   $0x1,0x168(%r9)
  0x000000010f845ee7: jmpq   0x000000010f845f52
  0x000000010f845eec: cmp    0x170(%r9),%rax
  0x000000010f845ef3: jne    0x000000010f845f02
  0x000000010f845ef5: addq   $0x1,0x178(%r9)
  0x000000010f845efd: jmpq   0x000000010f845f52
  0x000000010f845f02: cmpq   $0x0,0x160(%r9)
  0x000000010f845f0d: jne    0x000000010f845f26
  0x000000010f845f0f: mov    %rax,0x160(%r9)
  0x000000010f845f16: movq   $0x1,0x168(%r9)
  0x000000010f845f21: jmpq   0x000000010f845f52
  0x000000010f845f26: cmpq   $0x0,0x170(%r9)
  0x000000010f845f31: jne    0x000000010f845f4a
  0x000000010f845f33: mov    %rax,0x170(%r9)
  0x000000010f845f3a: movq   $0x1,0x178(%r9)
  0x000000010f845f45: jmpq   0x000000010f845f52
  0x000000010f845f4a: addq   $0x1,0x158(%r9)
  0x000000010f845f52: mov    %rdi,%rax
  0x000000010f845f55: add    %ecx,%eax
  0x000000010f845f57: mov    %r8,%r9
  0x000000010f845f5a: sub    %edi,%r9d
  0x000000010f845f5d: mov    %rdx,%r11
  0x000000010f845f60: mov    %r11,%rdx
  0x000000010f845f63: mov    %rax,%rcx
  0x000000010f845f66: mov    %r9,%r8
  0x000000010f845f69: mov    %rbx,%rsi          ;*invokevirtual read
                                                ; - java.io.DataInputStream::readFully@34 (line 195)

  0x000000010f845f6c: mov    %edi,0x30(%rsp)
  0x000000010f845f70: nop
  0x000000010f845f71: nop
  0x000000010f845f72: nop
  0x000000010f845f73: nop
  0x000000010f845f74: nop
  0x000000010f845f75: movabs $0xffffffffffffffff,%rax
  0x000000010f845f7f: callq  0x000000010f7172e0  ; OopMap{[72]=Oop [56]=Oop off=388}
                                                ;*invokevirtual read
                                                ; - java.io.DataInputStream::readFully@34 (line 195)
                                                ;   {virtual_call}
  0x000000010f845f84: cmp    $0x0,%eax
  0x000000010f845f87: movabs $0x10edfc418,%rdx  ;   {metadata(method data for {method} {0x000000010edfa428} 'readFully' '([BII)V' in 'java/io/DataInputStream')}
  0x000000010f845f91: movabs $0x188,%rsi
  0x000000010f845f9b: jge    0x000000010f845fab
  0x000000010f845fa1: movabs $0x198,%rsi
  0x000000010f845fab: mov    (%rdx,%rsi,1),%rdi
  0x000000010f845faf: lea    0x1(%rdi),%rdi
  0x000000010f845fb3: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f845fb7: jl     0x000000010f846064  ;*ifge
                                                ; - java.io.DataInputStream::readFully@41 (line 196)

  0x000000010f845fbd: add    0x30(%rsp),%eax
  0x000000010f845fc1: movabs $0x10edfc418,%rdx  ;   {metadata(method data for {method} {0x000000010edfa428} 'readFully' '([BII)V' in 'java/io/DataInputStream')}
  0x000000010f845fcb: mov    0xe0(%rdx),%esi
  0x000000010f845fd1: add    $0x8,%esi
  0x000000010f845fd4: mov    %esi,0xe0(%rdx)
  0x000000010f845fda: movabs $0x10edfa428,%rdx  ;   {metadata({method} {0x000000010edfa428} 'readFully' '([BII)V' in 'java/io/DataInputStream')}
  0x000000010f845fe4: and    $0xfff8,%esi
  0x000000010f845fea: cmp    $0x0,%esi
  0x000000010f845fed: je     0x000000010f846102  ; OopMap{[72]=Oop [56]=Oop off=499}
                                                ;*goto
                                                ; - java.io.DataInputStream::readFully@59 (line 199)

  0x000000010f845ff3: test   %eax,-0x8daaef9(%rip)        # 0x0000000106a9b100
                                                ;   {poll}
  0x000000010f845ff9: movabs $0x10edfc418,%rdx  ;   {metadata(method data for {method} {0x000000010edfa428} 'readFully' '([BII)V' in 'java/io/DataInputStream')}
  0x000000010f846003: incl   0x1b8(%rdx)
  0x000000010f846009: mov    %rax,%rdi          ;*goto
                                                ; - java.io.DataInputStream::readFully@59 (line 199)

  0x000000010f84600c: mov    0x34(%rsp),%r8d
  0x000000010f846011: mov    0x40(%rsp),%ecx
  0x000000010f846015: mov    0x48(%rsp),%rdx
  0x000000010f84601a: mov    0x38(%rsp),%rsi
  0x000000010f84601f: cmp    %r8d,%edi
  0x000000010f846022: movabs $0x10edfc418,%rbx  ;   {metadata(method data for {method} {0x000000010edfa428} 'readFully' '([BII)V' in 'java/io/DataInputStream')}
  0x000000010f84602c: movabs $0x138,%rax
  0x000000010f846036: jge    0x000000010f846046
  0x000000010f84603c: movabs $0x148,%rax
  0x000000010f846046: mov    (%rbx,%rax,1),%r9
  0x000000010f84604a: lea    0x1(%r9),%r9
  0x000000010f84604e: mov    %r9,(%rbx,%rax,1)
  0x000000010f846052: jl     0x000000010f845eb8  ;*if_icmpge
                                                ; - java.io.DataInputStream::readFully@18 (line 194)

  0x000000010f846058: add    $0x70,%rsp
  0x000000010f84605c: pop    %rbp
  0x000000010f84605d: test   %eax,-0x8daaf63(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f846063: retq                      ;*return
                                                ; - java.io.DataInputStream::readFully@62 (line 200)

  0x000000010f846064: nopl   0x0(%rax)
  0x000000010f846068: jmpq   0x000000010f846128  ;   {no_reloc}
  0x000000010f84606d: add    %al,(%rax)
  0x000000010f84606f: add    %al,(%rax)
  0x000000010f846071: add    %ch,%cl
  0x000000010f846073: mov    $0x48000000,%ebx   ;*new  ; - java.io.DataInputStream::readFully@44 (line 197)

  0x000000010f846078: mov    %eax,%esi
  0x000000010f84607a: movabs $0x10edfc418,%rdi  ;   {metadata(method data for {method} {0x000000010edfa428} 'readFully' '([BII)V' in 'java/io/DataInputStream')}
  0x000000010f846084: addq   $0x1,0x1a8(%rdi)
  0x000000010f84608c: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.io.DataInputStream::readFully@48 (line 197)

  0x000000010f84608f: mov    %rax,0x50(%rsp)
  0x000000010f846094: nop
  0x000000010f846095: nop
  0x000000010f846096: nop
  0x000000010f846097: callq  0x000000010f7170a0  ; OopMap{[80]=Oop off=668}
                                                ;*invokespecial <init>
                                                ; - java.io.DataInputStream::readFully@48 (line 197)
                                                ;   {optimized virtual_call}
  0x000000010f84609c: mov    0x50(%rsp),%rax
  0x000000010f8460a1: jmpq   0x000000010f846190  ;*athrow
                                                ; - java.io.DataInputStream::readFully@51 (line 197)

  0x000000010f8460a6: xchg   %ax,%ax
  0x000000010f8460a8: jmpq   0x000000010f84614e  ;   {no_reloc}
  0x000000010f8460ad: add    %al,(%rax)
  0x000000010f8460af: add    %al,(%rax)
  0x000000010f8460b1: add    %ch,%cl
  0x000000010f8460b3: movabs 0xbf48f08b48000000,%eax  ;*new
                                                ; - java.io.DataInputStream::readFully@4 (line 192)
                                                ;   {metadata(method data for {method} {0x000000010edfa428} 'readFully' '([BII)V' in 'java/io/DataInputStream')}
  0x000000010f8460bc: sbb    %al,%ah
  0x000000010f8460be: fisttp (%rsi)
  0x000000010f8460c0: add    %eax,(%rax)
  0x000000010f8460c2: add    %al,(%rax)
  0x000000010f8460c4: addq   $0x1,0x128(%rdi)
  0x000000010f8460cc: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.io.DataInputStream::readFully@8 (line 192)

  0x000000010f8460cf: mov    %rax,0x58(%rsp)
  0x000000010f8460d4: nop
  0x000000010f8460d5: nop
  0x000000010f8460d6: nop
  0x000000010f8460d7: callq  0x000000010f7170a0  ; OopMap{[88]=Oop off=732}
                                                ;*invokespecial <init>
                                                ; - java.io.DataInputStream::readFully@8 (line 192)
                                                ;   {optimized virtual_call}
  0x000000010f8460dc: mov    0x58(%rsp),%rax
  0x000000010f8460e1: jmpq   0x000000010f846190
  0x000000010f8460e6: mov    %rdi,0x8(%rsp)
  0x000000010f8460eb: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f8460f3: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [56]=Oop rdx=Oop [72]=Oop off=760}
                                                ;*synchronization entry
                                                ; - java.io.DataInputStream::readFully@-1 (line 191)
                                                ;   {runtime_call}
  0x000000010f8460f8: jmpq   0x000000010f845e71
  0x000000010f8460fd: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop [56]=Oop rdx=Oop [72]=Oop rbx=Oop off=770}
                                                ;*invokevirtual read
                                                ; - java.io.DataInputStream::readFully@34 (line 195)
                                                ;   {runtime_call}
  0x000000010f846102: mov    %rdx,0x8(%rsp)
  0x000000010f846107: movq   $0x3b,(%rsp)
  0x000000010f84610f: callq  0x000000010f7d1a20  ; OopMap{[72]=Oop [56]=Oop off=788}
                                                ;*goto
                                                ; - java.io.DataInputStream::readFully@59 (line 199)
                                                ;   {runtime_call}
  0x000000010f846114: jmpq   0x000000010f845ff3
  0x000000010f846119: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f846123: mov    $0xa050f00,%eax
  0x000000010f846128: callq  0x000000010f7d08e0  ; OopMap{off=813}
                                                ;*new  ; - java.io.DataInputStream::readFully@44 (line 197)
                                                ;   {runtime_call}
  0x000000010f84612d: jmpq   0x000000010f846068
  0x000000010f846132: mov    %rdx,%rdx
  0x000000010f846135: callq  0x000000010f7cd560  ; OopMap{off=826}
                                                ;*new  ; - java.io.DataInputStream::readFully@44 (line 197)
                                                ;   {runtime_call}
  0x000000010f84613a: jmpq   0x000000010f846077
  0x000000010f84613f: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f846149: mov    $0xa050f00,%eax
  0x000000010f84614e: callq  0x000000010f7d08e0  ; OopMap{off=851}
                                                ;*new  ; - java.io.DataInputStream::readFully@4 (line 192)
                                                ;   {runtime_call}
  0x000000010f846153: jmpq   0x000000010f8460a8
  0x000000010f846158: mov    %rdx,%rdx
  0x000000010f84615b: callq  0x000000010f7cd560  ; OopMap{off=864}
                                                ;*new  ; - java.io.DataInputStream::readFully@4 (line 192)
                                                ;   {runtime_call}
  0x000000010f846160: jmpq   0x000000010f8460b7
  0x000000010f846165: nop
  0x000000010f846166: nop
  0x000000010f846167: mov    0x2a8(%r15),%rax
  0x000000010f84616e: movabs $0x0,%r10
  0x000000010f846178: mov    %r10,0x2a8(%r15)
  0x000000010f84617f: movabs $0x0,%r10
  0x000000010f846189: mov    %r10,0x2b0(%r15)
  0x000000010f846190: add    $0x70,%rsp
  0x000000010f846194: pop    %rbp
  0x000000010f846195: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f84619a: hlt    
  0x000000010f84619b: hlt    
  0x000000010f84619c: hlt    
  0x000000010f84619d: hlt    
  0x000000010f84619e: hlt    
  0x000000010f84619f: hlt    
[Stub Code]
  0x000000010f8461a0: nop                       ;   {no_reloc}
  0x000000010f8461a1: nop
  0x000000010f8461a2: nop
  0x000000010f8461a3: nop
  0x000000010f8461a4: nop
  0x000000010f8461a5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f8461af: jmpq   0x000000010f8461af  ;   {runtime_call}
  0x000000010f8461b4: nop
  0x000000010f8461b5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f8461bf: jmpq   0x000000010f8461bf  ;   {runtime_call}
  0x000000010f8461c4: nop
  0x000000010f8461c5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f8461cf: jmpq   0x000000010f8461cf  ;   {runtime_call}
[Exception Handler]
  0x000000010f8461d4: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f8461d9: mov    %rsp,-0x28(%rsp)
  0x000000010f8461de: sub    $0x80,%rsp
  0x000000010f8461e5: mov    %rax,0x78(%rsp)
  0x000000010f8461ea: mov    %rcx,0x70(%rsp)
  0x000000010f8461ef: mov    %rdx,0x68(%rsp)
  0x000000010f8461f4: mov    %rbx,0x60(%rsp)
  0x000000010f8461f9: mov    %rbp,0x50(%rsp)
  0x000000010f8461fe: mov    %rsi,0x48(%rsp)
  0x000000010f846203: mov    %rdi,0x40(%rsp)
  0x000000010f846208: mov    %r8,0x38(%rsp)
  0x000000010f84620d: mov    %r9,0x30(%rsp)
  0x000000010f846212: mov    %r10,0x28(%rsp)
  0x000000010f846217: mov    %r11,0x20(%rsp)
  0x000000010f84621c: mov    %r12,0x18(%rsp)
  0x000000010f846221: mov    %r13,0x10(%rsp)
  0x000000010f846226: mov    %r14,0x8(%rsp)
  0x000000010f84622b: mov    %r15,(%rsp)
  0x000000010f84622f: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f846239: movabs $0x10f8461d9,%rsi  ;   {internal_word}
  0x000000010f846243: mov    %rsp,%rdx
  0x000000010f846246: and    $0xfffffffffffffff0,%rsp
  0x000000010f84624a: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f84624f: hlt    
[Deopt Handler Code]
  0x000000010f846250: movabs $0x10f846250,%r10  ;   {section_word}
  0x000000010f84625a: push   %r10
  0x000000010f84625c: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f846261: hlt    
  0x000000010f846262: hlt    
  0x000000010f846263: hlt    
  0x000000010f846264: hlt    
  0x000000010f846265: hlt    
  0x000000010f846266: hlt    
  0x000000010f846267: hlt    
Decoding compiled method 0x000000010f846810:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010eb4f9c0} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap'
  # this:     rsi:rsi   = 'java/util/HashMap'
  # parm0:    rdx       = int
  # parm1:    rcx:rcx   = 'java/lang/Object'
  # parm2:    r8:r8     = 'java/lang/Object'
  # parm3:    r9        = boolean
  # parm4:    rdi       = boolean
  #           [sp+0xb0]  (sp of caller)
  0x000000010f846a80: mov    0x8(%rsi),%r10d
  0x000000010f846a84: shl    $0x3,%r10
  0x000000010f846a88: cmp    %rax,%r10
  0x000000010f846a8b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f846a91: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f846a9c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f846aa0: mov    %eax,-0x14000(%rsp)
  0x000000010f846aa7: push   %rbp
  0x000000010f846aa8: sub    $0xa0,%rsp
  0x000000010f846aaf: mov    %rsi,0x48(%rsp)
  0x000000010f846ab4: mov    %edx,0x40(%rsp)
  0x000000010f846ab8: mov    %rcx,0x50(%rsp)
  0x000000010f846abd: movabs $0x10edfcf80,%rbx  ;   {metadata(method data for {method} {0x000000010eb4f9c0} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000010f846ac7: mov    0xdc(%rbx),%eax
  0x000000010f846acd: add    $0x8,%eax
  0x000000010f846ad0: mov    %eax,0xdc(%rbx)
  0x000000010f846ad6: movabs $0x10eb4f9c0,%rbx  ;   {metadata({method} {0x000000010eb4f9c0} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000010f846ae0: and    $0x1ff8,%eax
  0x000000010f846ae6: cmp    $0x0,%eax
  0x000000010f846ae9: je     0x000000010f847b25  ;*aload_0
                                                ; - java.util.HashMap::putVal@0 (line 628)

  0x000000010f846aef: mov    0x24(%rsi),%ebx
  0x000000010f846af2: shl    $0x3,%rbx          ;*getfield table
                                                ; - java.util.HashMap::putVal@1 (line 628)

  0x000000010f846af6: cmp    $0x0,%rbx
  0x000000010f846afa: movabs $0x10edfcf80,%rax  ;   {metadata(method data for {method} {0x000000010eb4f9c0} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000010f846b04: movabs $0x108,%r11
  0x000000010f846b0e: je     0x000000010f846b1e
  0x000000010f846b14: movabs $0x118,%r11
  0x000000010f846b1e: mov    (%rax,%r11,1),%r13
  0x000000010f846b22: lea    0x1(%r13),%r13
  0x000000010f846b26: mov    %r13,(%rax,%r11,1)
  0x000000010f846b2a: je     0x000000010f846b7f  ;*ifnull
                                                ; - java.util.HashMap::putVal@7 (line 628)

  0x000000010f846b30: mov    0xc(%rbx),%eax     ;*arraylength
                                                ; - java.util.HashMap::putVal@12 (line 628)
                                                ; implicit exception: dispatches to 0x000000010f847b3c
  0x000000010f846b33: cmp    $0x0,%eax
  0x000000010f846b36: movabs $0x10edfcf80,%r11  ;   {metadata(method data for {method} {0x000000010eb4f9c0} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000010f846b40: movabs $0x128,%r13
  0x000000010f846b4a: jne    0x000000010f846b5a
  0x000000010f846b50: movabs $0x138,%r13
  0x000000010f846b5a: mov    (%r11,%r13,1),%r14
  0x000000010f846b5e: lea    0x1(%r14),%r14
  0x000000010f846b62: mov    %r14,(%r11,%r13,1)
  0x000000010f846b66: je     0x000000010f846b7f  ;*ifne
                                                ; - java.util.HashMap::putVal@16 (line 628)

  0x000000010f846b6c: mov    %edi,0x60(%rsp)
  0x000000010f846b70: mov    %r9d,0x44(%rsp)
  0x000000010f846b75: mov    %r8,0x58(%rsp)
  0x000000010f846b7a: jmpq   0x000000010f846c38  ;*aload
                                                ; - java.util.HashMap::putVal@29 (line 630)

  0x000000010f846b7f: mov    %edi,0x60(%rsp)
  0x000000010f846b83: mov    %r9d,0x44(%rsp)
  0x000000010f846b88: mov    %r8,0x58(%rsp)
  0x000000010f846b8d: mov    %rsi,%rbx
  0x000000010f846b90: movabs $0x10edfcf80,%rax  ;   {metadata(method data for {method} {0x000000010eb4f9c0} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000010f846b9a: mov    0x8(%rbx),%ebx
  0x000000010f846b9d: shl    $0x3,%rbx
  0x000000010f846ba1: cmp    0x150(%rax),%rbx
  0x000000010f846ba8: jne    0x000000010f846bb7
  0x000000010f846baa: addq   $0x1,0x158(%rax)
  0x000000010f846bb2: jmpq   0x000000010f846c1d
  0x000000010f846bb7: cmp    0x160(%rax),%rbx
  0x000000010f846bbe: jne    0x000000010f846bcd
  0x000000010f846bc0: addq   $0x1,0x168(%rax)
  0x000000010f846bc8: jmpq   0x000000010f846c1d
  0x000000010f846bcd: cmpq   $0x0,0x150(%rax)
  0x000000010f846bd8: jne    0x000000010f846bf1
  0x000000010f846bda: mov    %rbx,0x150(%rax)
  0x000000010f846be1: movq   $0x1,0x158(%rax)
  0x000000010f846bec: jmpq   0x000000010f846c1d
  0x000000010f846bf1: cmpq   $0x0,0x160(%rax)
  0x000000010f846bfc: jne    0x000000010f846c15
  0x000000010f846bfe: mov    %rbx,0x160(%rax)
  0x000000010f846c05: movq   $0x1,0x168(%rax)
  0x000000010f846c10: jmpq   0x000000010f846c1d
  0x000000010f846c15: addq   $0x1,0x148(%rax)
  0x000000010f846c1d: mov    %rsi,%rbx
  0x000000010f846c20: mov    %rbx,%rsi          ;*invokevirtual resize
                                                ; - java.util.HashMap::putVal@20 (line 629)

  0x000000010f846c23: nop
  0x000000010f846c24: nop
  0x000000010f846c25: nop
  0x000000010f846c26: nop
  0x000000010f846c27: callq  0x000000010f7170a0  ; OopMap{[88]=Oop [80]=Oop [72]=Oop off=428}
                                                ;*invokevirtual resize
                                                ; - java.util.HashMap::putVal@20 (line 629)
                                                ;   {optimized virtual_call}
  0x000000010f846c2c: mov    %rax,%rdx          ;*invokevirtual resize
                                                ; - java.util.HashMap::putVal@20 (line 629)

  0x000000010f846c2f: mov    0xc(%rdx),%ecx     ;*arraylength
                                                ; - java.util.HashMap::putVal@26 (line 629)
                                                ; implicit exception: dispatches to 0x000000010f847b41
  0x000000010f846c32: mov    %rcx,%rax
  0x000000010f846c35: mov    %rdx,%rbx          ;*aload
                                                ; - java.util.HashMap::putVal@29 (line 630)

  0x000000010f846c38: dec    %eax
  0x000000010f846c3a: and    0x40(%rsp),%eax
  0x000000010f846c3e: movslq %eax,%rdx
  0x000000010f846c41: cmp    0xc(%rbx),%eax     ; implicit exception: dispatches to 0x000000010f847b46
  0x000000010f846c44: jae    0x000000010f847b50
  0x000000010f846c4a: mov    0x10(%rbx,%rdx,4),%edi
  0x000000010f846c4e: shl    $0x3,%rdi          ;*aaload
                                                ; - java.util.HashMap::putVal@40 (line 630)

  0x000000010f846c52: cmp    $0x0,%rdi
  0x000000010f846c56: movabs $0x10edfcf80,%rdx  ;   {metadata(method data for {method} {0x000000010eb4f9c0} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000010f846c60: movabs $0x178,%rcx
  0x000000010f846c6a: jne    0x000000010f846c7a
  0x000000010f846c70: movabs $0x188,%rcx
  0x000000010f846c7a: mov    (%rdx,%rcx,1),%r8
  0x000000010f846c7e: lea    0x1(%r8),%r8
  0x000000010f846c82: mov    %r8,(%rdx,%rcx,1)
  0x000000010f846c86: jne    0x000000010f846ea2  ;*ifnonnull
                                                ; - java.util.HashMap::putVal@44 (line 630)

  0x000000010f846c8c: mov    %eax,0x64(%rsp)
  0x000000010f846c90: mov    %rbx,0x68(%rsp)
  0x000000010f846c95: mov    0x48(%rsp),%rsi
  0x000000010f846c9a: movabs $0x10edfcf80,%rdx  ;   {metadata(method data for {method} {0x000000010eb4f9c0} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000010f846ca4: mov    0x8(%rsi),%esi
  0x000000010f846ca7: shl    $0x3,%rsi
  0x000000010f846cab: cmp    0x1a0(%rdx),%rsi
  0x000000010f846cb2: jne    0x000000010f846cc1
  0x000000010f846cb4: addq   $0x1,0x1a8(%rdx)
  0x000000010f846cbc: jmpq   0x000000010f846d27
  0x000000010f846cc1: cmp    0x1b0(%rdx),%rsi
  0x000000010f846cc8: jne    0x000000010f846cd7
  0x000000010f846cca: addq   $0x1,0x1b8(%rdx)
  0x000000010f846cd2: jmpq   0x000000010f846d27
  0x000000010f846cd7: cmpq   $0x0,0x1a0(%rdx)
  0x000000010f846ce2: jne    0x000000010f846cfb
  0x000000010f846ce4: mov    %rsi,0x1a0(%rdx)
  0x000000010f846ceb: movq   $0x1,0x1a8(%rdx)
  0x000000010f846cf6: jmpq   0x000000010f846d27
  0x000000010f846cfb: cmpq   $0x0,0x1b0(%rdx)
  0x000000010f846d06: jne    0x000000010f846d1f
  0x000000010f846d08: mov    %rsi,0x1b0(%rdx)
  0x000000010f846d0f: movq   $0x1,0x1b8(%rdx)
  0x000000010f846d1a: jmpq   0x000000010f846d27
  0x000000010f846d1f: addq   $0x1,0x198(%rdx)
  0x000000010f846d27: mov    0x40(%rsp),%edx
  0x000000010f846d2b: mov    0x50(%rsp),%rcx
  0x000000010f846d30: mov    0x58(%rsp),%r8
  0x000000010f846d35: movabs $0x0,%r9           ;   {oop(NULL)}
  0x000000010f846d3f: mov    0x48(%rsp),%rsi    ;*invokevirtual newNode
                                                ; - java.util.HashMap::putVal@56 (line 631)

  0x000000010f846d44: nop
  0x000000010f846d45: movabs $0xffffffffffffffff,%rax
  0x000000010f846d4f: callq  0x000000010f7172e0  ; OopMap{[72]=Oop [104]=Oop off=724}
                                                ;*invokevirtual newNode
                                                ; - java.util.HashMap::putVal@56 (line 631)
                                                ;   {virtual_call}
  0x000000010f846d54: mov    0x64(%rsp),%edx
  0x000000010f846d58: movslq %edx,%rsi
  0x000000010f846d5b: mov    0x68(%rsp),%rbx
  0x000000010f846d60: lea    0x10(%rbx,%rsi,4),%rsi
  0x000000010f846d65: cmp    0xc(%rbx),%edx
  0x000000010f846d68: jae    0x000000010f847b59
  0x000000010f846d6e: cmp    $0x0,%rax
  0x000000010f846d72: jne    0x000000010f846d8d
  0x000000010f846d74: movabs $0x10edfcf80,%rdi  ;   {metadata(method data for {method} {0x000000010eb4f9c0} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000010f846d7e: orl    $0x100,0x1c0(%rdi)
  0x000000010f846d88: jmpq   0x000000010f846e71
  0x000000010f846d8d: mov    0x8(%rbx),%edx     ; implicit exception: dispatches to 0x000000010f847b62
  0x000000010f846d90: shl    $0x3,%rdx
  0x000000010f846d94: mov    0x8(%rax),%edi
  0x000000010f846d97: shl    $0x3,%rdi
  0x000000010f846d9b: mov    0xe8(%rdx),%rdx
  0x000000010f846da2: cmp    %rdx,%rdi
  0x000000010f846da5: je     0x000000010f846dd3
  0x000000010f846dab: mov    0xc(%rdx),%ebx
  0x000000010f846dae: cmp    (%rdi,%rbx,1),%rdx
  0x000000010f846db2: je     0x000000010f846dd3
  0x000000010f846db8: cmp    $0x18,%ebx
  0x000000010f846dbb: jne    0x000000010f846e5a
  0x000000010f846dc1: push   %rdi
  0x000000010f846dc2: push   %rdx
  0x000000010f846dc3: callq  0x000000010f7cf8e0  ;   {runtime_call}
  0x000000010f846dc8: pop    %rdi
  0x000000010f846dc9: pop    %rdx
  0x000000010f846dca: cmp    $0x0,%edx
  0x000000010f846dcd: je     0x000000010f846e5a
  0x000000010f846dd3: movabs $0x10edfcf80,%rdi  ;   {metadata(method data for {method} {0x000000010eb4f9c0} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000010f846ddd: mov    0x8(%rax),%edx
  0x000000010f846de0: shl    $0x3,%rdx
  0x000000010f846de4: cmp    0x1d0(%rdi),%rdx
  0x000000010f846deb: jne    0x000000010f846dfa
  0x000000010f846ded: addq   $0x1,0x1d8(%rdi)
  0x000000010f846df5: jmpq   0x000000010f846e71
  0x000000010f846dfa: cmp    0x1e0(%rdi),%rdx
  0x000000010f846e01: jne    0x000000010f846e10
  0x000000010f846e03: addq   $0x1,0x1e8(%rdi)
  0x000000010f846e0b: jmpq   0x000000010f846e71
  0x000000010f846e10: cmpq   $0x0,0x1d0(%rdi)
  0x000000010f846e1b: jne    0x000000010f846e34
  0x000000010f846e1d: mov    %rdx,0x1d0(%rdi)
  0x000000010f846e24: movq   $0x1,0x1d8(%rdi)
  0x000000010f846e2f: jmpq   0x000000010f846e71
  0x000000010f846e34: cmpq   $0x0,0x1e0(%rdi)
  0x000000010f846e3f: jne    0x000000010f846e58
  0x000000010f846e41: mov    %rdx,0x1e0(%rdi)
  0x000000010f846e48: movq   $0x1,0x1e8(%rdi)
  0x000000010f846e53: jmpq   0x000000010f846e71
  0x000000010f846e58: jmp    0x000000010f846e71
  0x000000010f846e5a: movabs $0x10edfcf80,%rdi  ;   {metadata(method data for {method} {0x000000010eb4f9c0} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000010f846e64: subq   $0x1,0x1c8(%rdi)
  0x000000010f846e6c: jmpq   0x000000010f847b67
  0x000000010f846e71: mov    %rax,%r10
  0x000000010f846e74: shr    $0x3,%r10
  0x000000010f846e78: mov    %r10d,(%rsi)
  0x000000010f846e7b: shr    $0x9,%rsi
  0x000000010f846e7f: movabs $0x1065b9000,%rdx
  0x000000010f846e89: movb   $0x0,(%rsi,%rdx,1)  ;*aastore
                                                ; - java.util.HashMap::putVal@59 (line 631)

  0x000000010f846e8d: movabs $0x10edfcf80,%rdx  ;   {metadata(method data for {method} {0x000000010eb4f9c0} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000010f846e97: incl   0x1f8(%rdx)
  0x000000010f846e9d: jmpq   0x000000010f8477f6  ;*goto
                                                ; - java.util.HashMap::putVal@60 (line 631)

  0x000000010f846ea2: mov    0xc(%rdi),%edx     ;*getfield hash
                                                ; - java.util.HashMap::putVal@65 (line 634)
                                                ; implicit exception: dispatches to 0x000000010f847b70
  0x000000010f846ea5: cmp    0x40(%rsp),%edx
  0x000000010f846ea9: movabs $0x10edfcf80,%rdx  ;   {metadata(method data for {method} {0x000000010eb4f9c0} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000010f846eb3: movabs $0x210,%rsi
  0x000000010f846ebd: jne    0x000000010f846ecd
  0x000000010f846ec3: movabs $0x220,%rsi
  0x000000010f846ecd: mov    (%rdx,%rsi,1),%rax
  0x000000010f846ed1: lea    0x1(%rax),%rax
  0x000000010f846ed5: mov    %rax,(%rdx,%rsi,1)
  0x000000010f846ed9: je     0x000000010f846ee9  ;*if_icmpne
                                                ; - java.util.HashMap::putVal@69 (line 634)

  0x000000010f846edf: mov    %rbx,0x68(%rsp)
  0x000000010f846ee4: jmpq   0x000000010f847062  ;*aload
                                                ; - java.util.HashMap::putVal@104 (line 637)

  0x000000010f846ee9: mov    0x50(%rsp),%rcx
  0x000000010f846eee: mov    0x10(%rdi),%edx
  0x000000010f846ef1: shl    $0x3,%rdx          ;*getfield key
                                                ; - java.util.HashMap::putVal@74 (line 634)

  0x000000010f846ef5: cmp    %rcx,%rdx
  0x000000010f846ef8: movabs $0x10edfcf80,%rsi  ;   {metadata(method data for {method} {0x000000010eb4f9c0} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000010f846f02: movabs $0x230,%rax
  0x000000010f846f0c: je     0x000000010f846f1c
  0x000000010f846f12: movabs $0x240,%rax
  0x000000010f846f1c: mov    (%rsi,%rax,1),%r8
  0x000000010f846f20: lea    0x1(%r8),%r8
  0x000000010f846f24: mov    %r8,(%rsi,%rax,1)
  0x000000010f846f28: je     0x000000010f8477a9  ;*if_acmpeq
                                                ; - java.util.HashMap::putVal@81 (line 634)

  0x000000010f846f2e: cmp    $0x0,%rcx
  0x000000010f846f32: movabs $0x10edfcf80,%rsi  ;   {metadata(method data for {method} {0x000000010eb4f9c0} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000010f846f3c: movabs $0x250,%rax
  0x000000010f846f46: je     0x000000010f846f56
  0x000000010f846f4c: movabs $0x260,%rax
  0x000000010f846f56: mov    (%rsi,%rax,1),%r8
  0x000000010f846f5a: lea    0x1(%r8),%r8
  0x000000010f846f5e: mov    %r8,(%rsi,%rax,1)
  0x000000010f846f62: jne    0x000000010f846f72  ;*ifnull
                                                ; - java.util.HashMap::putVal@85 (line 634)

  0x000000010f846f68: mov    %rbx,0x68(%rsp)
  0x000000010f846f6d: jmpq   0x000000010f847062  ;*aload
                                                ; - java.util.HashMap::putVal@104 (line 637)

  0x000000010f846f72: mov    %rdi,0x70(%rsp)
  0x000000010f846f77: mov    %rbx,0x68(%rsp)
  0x000000010f846f7c: cmp    (%rcx),%rax        ; implicit exception: dispatches to 0x000000010f847b75
  0x000000010f846f7f: mov    %rcx,%rsi
  0x000000010f846f82: movabs $0x10edfcf80,%rax  ;   {metadata(method data for {method} {0x000000010eb4f9c0} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000010f846f8c: mov    0x8(%rsi),%esi
  0x000000010f846f8f: shl    $0x3,%rsi
  0x000000010f846f93: cmp    0x278(%rax),%rsi
  0x000000010f846f9a: jne    0x000000010f846fa9
  0x000000010f846f9c: addq   $0x1,0x280(%rax)
  0x000000010f846fa4: jmpq   0x000000010f84700f
  0x000000010f846fa9: cmp    0x288(%rax),%rsi
  0x000000010f846fb0: jne    0x000000010f846fbf
  0x000000010f846fb2: addq   $0x1,0x290(%rax)
  0x000000010f846fba: jmpq   0x000000010f84700f
  0x000000010f846fbf: cmpq   $0x0,0x278(%rax)
  0x000000010f846fca: jne    0x000000010f846fe3
  0x000000010f846fcc: mov    %rsi,0x278(%rax)
  0x000000010f846fd3: movq   $0x1,0x280(%rax)
  0x000000010f846fde: jmpq   0x000000010f84700f
  0x000000010f846fe3: cmpq   $0x0,0x288(%rax)
  0x000000010f846fee: jne    0x000000010f847007
  0x000000010f846ff0: mov    %rsi,0x288(%rax)
  0x000000010f846ff7: movq   $0x1,0x290(%rax)
  0x000000010f847002: jmpq   0x000000010f84700f
  0x000000010f847007: addq   $0x1,0x270(%rax)
  0x000000010f84700f: mov    %rcx,%rsi          ;*invokevirtual equals
                                                ; - java.util.HashMap::putVal@91 (line 635)

  0x000000010f847012: nop
  0x000000010f847013: nop
  0x000000010f847014: nop
  0x000000010f847015: movabs $0xffffffffffffffff,%rax
  0x000000010f84701f: callq  0x000000010f7172e0  ; OopMap{[72]=Oop [88]=Oop [112]=Oop [80]=Oop [104]=Oop off=1444}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::putVal@91 (line 635)
                                                ;   {virtual_call}
  0x000000010f847024: cmp    $0x0,%eax
  0x000000010f847027: movabs $0x10edfcf80,%rdx  ;   {metadata(method data for {method} {0x000000010eb4f9c0} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000010f847031: movabs $0x2a0,%rcx
  0x000000010f84703b: je     0x000000010f84704b
  0x000000010f847041: movabs $0x2b0,%rcx
  0x000000010f84704b: mov    (%rdx,%rcx,1),%r8
  0x000000010f84704f: lea    0x1(%r8),%r8
  0x000000010f847053: mov    %r8,(%rdx,%rcx,1)
  0x000000010f847057: mov    0x70(%rsp),%rdi
  0x000000010f84705c: jne    0x000000010f8477a9  ;*ifeq
                                                ; - java.util.HashMap::putVal@94 (line 635)

  0x000000010f847062: cmp    $0x0,%rdi
  0x000000010f847066: jne    0x000000010f847082
  0x000000010f847068: movabs $0x10edfcf80,%r8   ;   {metadata(method data for {method} {0x000000010eb4f9c0} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000010f847072: orl    $0x100,0x2d0(%r8)
  0x000000010f84707d: jmpq   0x000000010f847143
  0x000000010f847082: movabs $0x7c0032c30,%r9   ;   {metadata('java/util/HashMap$TreeNode')}
  0x000000010f84708c: mov    0x8(%rdi),%ecx
  0x000000010f84708f: shl    $0x3,%rcx
  0x000000010f847093: cmp    %rcx,%r9
  0x000000010f847096: jne    0x000000010f847127
  0x000000010f84709c: movabs $0x10edfcf80,%r8   ;   {metadata(method data for {method} {0x000000010eb4f9c0} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000010f8470a6: mov    0x8(%rdi),%r9d
  0x000000010f8470aa: shl    $0x3,%r9
  0x000000010f8470ae: cmp    0x2e0(%r8),%r9
  0x000000010f8470b5: jne    0x000000010f8470c4
  0x000000010f8470b7: addq   $0x1,0x2e8(%r8)
  0x000000010f8470bf: jmpq   0x000000010f847148
  0x000000010f8470c4: cmp    0x2f0(%r8),%r9
  0x000000010f8470cb: jne    0x000000010f8470da
  0x000000010f8470cd: addq   $0x1,0x2f8(%r8)
  0x000000010f8470d5: jmpq   0x000000010f847148
  0x000000010f8470da: cmpq   $0x0,0x2e0(%r8)
  0x000000010f8470e5: jne    0x000000010f8470fe
  0x000000010f8470e7: mov    %r9,0x2e0(%r8)
  0x000000010f8470ee: movq   $0x1,0x2e8(%r8)
  0x000000010f8470f9: jmpq   0x000000010f847148
  0x000000010f8470fe: cmpq   $0x0,0x2f0(%r8)
  0x000000010f847109: jne    0x000000010f847122
  0x000000010f84710b: mov    %r9,0x2f0(%r8)
  0x000000010f847112: movq   $0x1,0x2f8(%r8)
  0x000000010f84711d: jmpq   0x000000010f847148
  0x000000010f847122: jmpq   0x000000010f847148
  0x000000010f847127: movabs $0x10edfcf80,%r8   ;   {metadata(method data for {method} {0x000000010eb4f9c0} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000010f847131: subq   $0x1,0x2d8(%r8)
  0x000000010f847139: jmpq   0x000000010f847143
  0x000000010f84713e: jmpq   0x000000010f847148
  0x000000010f847143: xor    %rdx,%rdx
  0x000000010f847146: jmp    0x000000010f847152
  0x000000010f847148: movabs $0x1,%rdx          ;*instanceof
                                                ; - java.util.HashMap::putVal@106 (line 637)

  0x000000010f847152: cmp    $0x0,%edx
  0x000000010f847155: movabs $0x10edfcf80,%rdx  ;   {metadata(method data for {method} {0x000000010eb4f9c0} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000010f84715f: movabs $0x308,%rcx
  0x000000010f847169: je     0x000000010f847179
  0x000000010f84716f: movabs $0x318,%rcx
  0x000000010f847179: mov    (%rdx,%rcx,1),%r8
  0x000000010f84717d: lea    0x1(%r8),%r8
  0x000000010f847181: mov    %r8,(%rdx,%rcx,1)
  0x000000010f847185: je     0x000000010f847339  ;*ifeq
                                                ; - java.util.HashMap::putVal@109 (line 637)

  0x000000010f84718b: cmp    $0x0,%rdi
  0x000000010f84718f: jne    0x000000010f8471aa
  0x000000010f847191: movabs $0x10edfcf80,%rcx  ;   {metadata(method data for {method} {0x000000010eb4f9c0} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000010f84719b: orl    $0x100,0x320(%rcx)
  0x000000010f8471a5: jmpq   0x000000010f84726b
  0x000000010f8471aa: movabs $0x7c0032c30,%r8   ;   {metadata('java/util/HashMap$TreeNode')}
  0x000000010f8471b4: mov    0x8(%rdi),%edx
  0x000000010f8471b7: shl    $0x3,%rdx
  0x000000010f8471bb: cmp    %rdx,%r8
  0x000000010f8471be: jne    0x000000010f84724f
  0x000000010f8471c4: movabs $0x10edfcf80,%rcx  ;   {metadata(method data for {method} {0x000000010eb4f9c0} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000010f8471ce: mov    0x8(%rdi),%r8d
  0x000000010f8471d2: shl    $0x3,%r8
  0x000000010f8471d6: cmp    0x330(%rcx),%r8
  0x000000010f8471dd: jne    0x000000010f8471ec
  0x000000010f8471df: addq   $0x1,0x338(%rcx)
  0x000000010f8471e7: jmpq   0x000000010f84726b
  0x000000010f8471ec: cmp    0x340(%rcx),%r8
  0x000000010f8471f3: jne    0x000000010f847202
  0x000000010f8471f5: addq   $0x1,0x348(%rcx)
  0x000000010f8471fd: jmpq   0x000000010f84726b
  0x000000010f847202: cmpq   $0x0,0x330(%rcx)
  0x000000010f84720d: jne    0x000000010f847226
  0x000000010f84720f: mov    %r8,0x330(%rcx)
  0x000000010f847216: movq   $0x1,0x338(%rcx)
  0x000000010f847221: jmpq   0x000000010f84726b
  0x000000010f847226: cmpq   $0x0,0x340(%rcx)
  0x000000010f847231: jne    0x000000010f84724a
  0x000000010f847233: mov    %r8,0x340(%rcx)
  0x000000010f84723a: movq   $0x1,0x348(%rcx)
  0x000000010f847245: jmpq   0x000000010f84726b
  0x000000010f84724a: jmpq   0x000000010f84726b
  0x000000010f84724f: movabs $0x10edfcf80,%rcx  ;   {metadata(method data for {method} {0x000000010eb4f9c0} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000010f847259: subq   $0x1,0x328(%rcx)
  0x000000010f847261: jmpq   0x000000010f847b7a
  0x000000010f847266: jmpq   0x000000010f84726b
  0x000000010f84726b: mov    %rdi,%rsi          ;*checkcast
                                                ; - java.util.HashMap::putVal@114 (line 638)

  0x000000010f84726e: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x000000010f847b83
  0x000000010f847271: mov    %rsi,%rdx
  0x000000010f847274: movabs $0x10edfcf80,%rcx  ;   {metadata(method data for {method} {0x000000010eb4f9c0} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000010f84727e: mov    0x8(%rdx),%edx
  0x000000010f847281: shl    $0x3,%rdx
  0x000000010f847285: cmp    0x360(%rcx),%rdx
  0x000000010f84728c: jne    0x000000010f84729b
  0x000000010f84728e: addq   $0x1,0x368(%rcx)
  0x000000010f847296: jmpq   0x000000010f847301
  0x000000010f84729b: cmp    0x370(%rcx),%rdx
  0x000000010f8472a2: jne    0x000000010f8472b1
  0x000000010f8472a4: addq   $0x1,0x378(%rcx)
  0x000000010f8472ac: jmpq   0x000000010f847301
  0x000000010f8472b1: cmpq   $0x0,0x360(%rcx)
  0x000000010f8472bc: jne    0x000000010f8472d5
  0x000000010f8472be: mov    %rdx,0x360(%rcx)
  0x000000010f8472c5: movq   $0x1,0x368(%rcx)
  0x000000010f8472d0: jmpq   0x000000010f847301
  0x000000010f8472d5: cmpq   $0x0,0x370(%rcx)
  0x000000010f8472e0: jne    0x000000010f8472f9
  0x000000010f8472e2: mov    %rdx,0x370(%rcx)
  0x000000010f8472e9: movq   $0x1,0x378(%rcx)
  0x000000010f8472f4: jmpq   0x000000010f847301
  0x000000010f8472f9: addq   $0x1,0x358(%rcx)
  0x000000010f847301: mov    0x48(%rsp),%rdx
  0x000000010f847306: mov    0x68(%rsp),%rcx
  0x000000010f84730b: mov    0x40(%rsp),%r8d
  0x000000010f847310: mov    0x50(%rsp),%r9
  0x000000010f847315: mov    0x58(%rsp),%rdi    ;*invokevirtual putTreeVal
                                                ; - java.util.HashMap::putVal@123 (line 638)

  0x000000010f84731a: nop
  0x000000010f84731b: nop
  0x000000010f84731c: nop
  0x000000010f84731d: nop
  0x000000010f84731e: nop
  0x000000010f84731f: callq  0x000000010f7170a0  ; OopMap{[72]=Oop [88]=Oop off=2212}
                                                ;*invokevirtual putTreeVal
                                                ; - java.util.HashMap::putVal@123 (line 638)
                                                ;   {optimized virtual_call}
  0x000000010f847324: movabs $0x10edfcf80,%rdx  ;   {metadata(method data for {method} {0x000000010eb4f9c0} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000010f84732e: incl   0x388(%rdx)
  0x000000010f847334: jmpq   0x000000010f8477bc  ;*goto
                                                ; - java.util.HashMap::putVal@128 (line 638)

  0x000000010f847339: mov    $0x0,%ebx          ;*aload
                                                ; - java.util.HashMap::putVal@134 (line 641)

  0x000000010f84733e: xchg   %ax,%ax
  0x000000010f847340: mov    %ebx,0x78(%rsp)
  0x000000010f847344: mov    0x50(%rsp),%rcx
  0x000000010f847349: mov    0x40(%rsp),%edx
  0x000000010f84734d: mov    0x18(%rdi),%eax    ; implicit exception: dispatches to 0x000000010f847b88
  0x000000010f847350: shl    $0x3,%rax          ;*getfield next
                                                ; - java.util.HashMap::putVal@136 (line 641)

  0x000000010f847354: mov    %rax,0x80(%rsp)
  0x000000010f84735c: cmp    $0x0,%rax
  0x000000010f847360: movabs $0x10edfcf80,%rsi  ;   {metadata(method data for {method} {0x000000010eb4f9c0} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000010f84736a: movabs $0x3a0,%r8
  0x000000010f847374: jne    0x000000010f847384
  0x000000010f84737a: movabs $0x3b0,%r8
  0x000000010f847384: mov    (%rsi,%r8,1),%r9
  0x000000010f847388: lea    0x1(%r9),%r9
  0x000000010f84738c: mov    %r9,(%rsi,%r8,1)
  0x000000010f847390: je     0x000000010f8475b2  ;*ifnonnull
                                                ; - java.util.HashMap::putVal@142 (line 641)

  0x000000010f847396: mov    0xc(%rax),%esi     ;*getfield hash
                                                ; - java.util.HashMap::putVal@177 (line 647)
                                                ; implicit exception: dispatches to 0x000000010f847b8d
  0x000000010f847399: cmp    %edx,%esi
  0x000000010f84739b: movabs $0x10edfcf80,%rsi  ;   {metadata(method data for {method} {0x000000010eb4f9c0} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000010f8473a5: movabs $0x458,%rdi
  0x000000010f8473af: jne    0x000000010f8473bf
  0x000000010f8473b5: movabs $0x468,%rdi
  0x000000010f8473bf: mov    (%rsi,%rdi,1),%r8
  0x000000010f8473c3: lea    0x1(%r8),%r8
  0x000000010f8473c7: mov    %r8,(%rsi,%rdi,1)
  0x000000010f8473cb: jne    0x000000010f84752d  ;*if_icmpne
                                                ; - java.util.HashMap::putVal@181 (line 647)

  0x000000010f8473d1: mov    0x10(%rax),%esi
  0x000000010f8473d4: shl    $0x3,%rsi          ;*getfield key
                                                ; - java.util.HashMap::putVal@186 (line 647)

  0x000000010f8473d8: cmp    %rcx,%rsi
  0x000000010f8473db: movabs $0x10edfcf80,%rdi  ;   {metadata(method data for {method} {0x000000010eb4f9c0} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000010f8473e5: movabs $0x478,%r8
  0x000000010f8473ef: je     0x000000010f8473ff
  0x000000010f8473f5: movabs $0x488,%r8
  0x000000010f8473ff: mov    (%rdi,%r8,1),%r9
  0x000000010f847403: lea    0x1(%r9),%r9
  0x000000010f847407: mov    %r9,(%rdi,%r8,1)
  0x000000010f84740b: je     0x000000010f847588  ;*if_acmpeq
                                                ; - java.util.HashMap::putVal@193 (line 647)

  0x000000010f847411: cmp    $0x0,%rcx
  0x000000010f847415: movabs $0x10edfcf80,%rdi  ;   {metadata(method data for {method} {0x000000010eb4f9c0} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000010f84741f: movabs $0x498,%r8
  0x000000010f847429: je     0x000000010f847439
  0x000000010f84742f: movabs $0x4a8,%r8
  0x000000010f847439: mov    (%rdi,%r8,1),%r9
  0x000000010f84743d: lea    0x1(%r9),%r9
  0x000000010f847441: mov    %r9,(%rdi,%r8,1)
  0x000000010f847445: je     0x000000010f84752d  ;*ifnull
                                                ; - java.util.HashMap::putVal@197 (line 647)

  0x000000010f84744b: cmp    (%rcx),%rax        ; implicit exception: dispatches to 0x000000010f847b92
  0x000000010f84744e: mov    %rcx,%rdi
  0x000000010f847451: movabs $0x10edfcf80,%r8   ;   {metadata(method data for {method} {0x000000010eb4f9c0} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000010f84745b: mov    0x8(%rdi),%edi
  0x000000010f84745e: shl    $0x3,%rdi
  0x000000010f847462: cmp    0x4c0(%r8),%rdi
  0x000000010f847469: jne    0x000000010f847478
  0x000000010f84746b: addq   $0x1,0x4c8(%r8)
  0x000000010f847473: jmpq   0x000000010f8474de
  0x000000010f847478: cmp    0x4d0(%r8),%rdi
  0x000000010f84747f: jne    0x000000010f84748e
  0x000000010f847481: addq   $0x1,0x4d8(%r8)
  0x000000010f847489: jmpq   0x000000010f8474de
  0x000000010f84748e: cmpq   $0x0,0x4c0(%r8)
  0x000000010f847499: jne    0x000000010f8474b2
  0x000000010f84749b: mov    %rdi,0x4c0(%r8)
  0x000000010f8474a2: movq   $0x1,0x4c8(%r8)
  0x000000010f8474ad: jmpq   0x000000010f8474de
  0x000000010f8474b2: cmpq   $0x0,0x4d0(%r8)
  0x000000010f8474bd: jne    0x000000010f8474d6
  0x000000010f8474bf: mov    %rdi,0x4d0(%r8)
  0x000000010f8474c6: movq   $0x1,0x4d8(%r8)
  0x000000010f8474d1: jmpq   0x000000010f8474de
  0x000000010f8474d6: addq   $0x1,0x4b8(%r8)
  0x000000010f8474de: mov    %rsi,%rdx
  0x000000010f8474e1: mov    %rcx,%rsi          ;*invokevirtual equals
                                                ; - java.util.HashMap::putVal@203 (line 648)

  0x000000010f8474e4: nop
  0x000000010f8474e5: movabs $0xffffffffffffffff,%rax
  0x000000010f8474ef: callq  0x000000010f7172e0  ; OopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop [128]=Oop off=2676}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::putVal@203 (line 648)
                                                ;   {virtual_call}
  0x000000010f8474f4: cmp    $0x0,%eax
  0x000000010f8474f7: movabs $0x10edfcf80,%rdx  ;   {metadata(method data for {method} {0x000000010eb4f9c0} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000010f847501: movabs $0x4e8,%rcx
  0x000000010f84750b: je     0x000000010f84751b
  0x000000010f847511: movabs $0x4f8,%rcx
  0x000000010f84751b: mov    (%rdx,%rcx,1),%r8
  0x000000010f84751f: lea    0x1(%r8),%r8
  0x000000010f847523: mov    %r8,(%rdx,%rcx,1)
  0x000000010f847527: jne    0x000000010f847595  ;*ifeq
                                                ; - java.util.HashMap::putVal@206 (line 648)

  0x000000010f84752d: mov    0x78(%rsp),%ebx
  0x000000010f847531: inc    %ebx
  0x000000010f847533: movabs $0x10edfcf80,%rdx  ;   {metadata(method data for {method} {0x000000010eb4f9c0} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000010f84753d: mov    0xe0(%rdx),%ecx
  0x000000010f847543: add    $0x8,%ecx
  0x000000010f847546: mov    %ecx,0xe0(%rdx)
  0x000000010f84754c: movabs $0x10eb4f9c0,%rdx  ;   {metadata({method} {0x000000010eb4f9c0} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000010f847556: and    $0xfff8,%ecx
  0x000000010f84755c: cmp    $0x0,%ecx
  0x000000010f84755f: je     0x000000010f847b97  ; OopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop [128]=Oop off=2789}
                                                ;*goto
                                                ; - java.util.HashMap::putVal@219 (line 640)

  0x000000010f847565: test   %eax,-0x8dac46b(%rip)        # 0x0000000106a9b100
                                                ;   {poll}
  0x000000010f84756b: movabs $0x10edfcf80,%rdx  ;   {metadata(method data for {method} {0x000000010eb4f9c0} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000010f847575: incl   0x520(%rdx)
  0x000000010f84757b: mov    0x80(%rsp),%rdi
  0x000000010f847583: jmpq   0x000000010f847340  ;*goto
                                                ; - java.util.HashMap::putVal@219 (line 640)

  0x000000010f847588: mov    0x80(%rsp),%rax
  0x000000010f847590: jmpq   0x000000010f8477bc  ;*aload
                                                ; - java.util.HashMap::putVal@222 (line 653)

  0x000000010f847595: movabs $0x10edfcf80,%rdx  ;   {metadata(method data for {method} {0x000000010eb4f9c0} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000010f84759f: incl   0x508(%rdx)
  0x000000010f8475a5: mov    0x80(%rsp),%rax
  0x000000010f8475ad: jmpq   0x000000010f8477bc  ;*goto
                                                ; - java.util.HashMap::putVal@209 (line 649)

  0x000000010f8475b2: mov    %rdi,0x88(%rsp)
  0x000000010f8475ba: mov    0x48(%rsp),%rsi
  0x000000010f8475bf: movabs $0x10edfcf80,%rdx  ;   {metadata(method data for {method} {0x000000010eb4f9c0} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000010f8475c9: mov    0x8(%rsi),%esi
  0x000000010f8475cc: shl    $0x3,%rsi
  0x000000010f8475d0: cmp    0x3c8(%rdx),%rsi
  0x000000010f8475d7: jne    0x000000010f8475e6
  0x000000010f8475d9: addq   $0x1,0x3d0(%rdx)
  0x000000010f8475e1: jmpq   0x000000010f84764c
  0x000000010f8475e6: cmp    0x3d8(%rdx),%rsi
  0x000000010f8475ed: jne    0x000000010f8475fc
  0x000000010f8475ef: addq   $0x1,0x3e0(%rdx)
  0x000000010f8475f7: jmpq   0x000000010f84764c
  0x000000010f8475fc: cmpq   $0x0,0x3c8(%rdx)
  0x000000010f847607: jne    0x000000010f847620
  0x000000010f847609: mov    %rsi,0x3c8(%rdx)
  0x000000010f847610: movq   $0x1,0x3d0(%rdx)
  0x000000010f84761b: jmpq   0x000000010f84764c
  0x000000010f847620: cmpq   $0x0,0x3d8(%rdx)
  0x000000010f84762b: jne    0x000000010f847644
  0x000000010f84762d: mov    %rsi,0x3d8(%rdx)
  0x000000010f847634: movq   $0x1,0x3e0(%rdx)
  0x000000010f84763f: jmpq   0x000000010f84764c
  0x000000010f847644: addq   $0x1,0x3c0(%rdx)
  0x000000010f84764c: mov    0x40(%rsp),%edx
  0x000000010f847650: mov    0x58(%rsp),%r8
  0x000000010f847655: movabs $0x0,%r9           ;   {oop(NULL)}
  0x000000010f84765f: mov    0x48(%rsp),%rsi    ;*invokevirtual newNode
                                                ; - java.util.HashMap::putVal@152 (line 642)

  0x000000010f847664: nop
  0x000000010f847665: movabs $0xffffffffffffffff,%rax
  0x000000010f84766f: callq  0x000000010f7172e0  ; OopMap{[72]=Oop [88]=Oop [128]=Oop [104]=Oop [136]=Oop off=3060}
                                                ;*invokevirtual newNode
                                                ; - java.util.HashMap::putVal@152 (line 642)
                                                ;   {virtual_call}
  0x000000010f847674: mov    0x88(%rsp),%rdi
  0x000000010f84767c: mov    %rax,%r10
  0x000000010f84767f: shr    $0x3,%r10
  0x000000010f847683: mov    %r10d,0x18(%rdi)
  0x000000010f847687: shr    $0x9,%rdi
  0x000000010f84768b: movabs $0x1065b9000,%rdx
  0x000000010f847695: movb   $0x0,(%rdi,%rdx,1)  ;*putfield next
                                                ; - java.util.HashMap::putVal@155 (line 642)

  0x000000010f847699: mov    0x78(%rsp),%ebx
  0x000000010f84769d: cmp    $0x7,%ebx
  0x000000010f8476a0: movabs $0x10edfcf80,%rdx  ;   {metadata(method data for {method} {0x000000010eb4f9c0} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000010f8476aa: movabs $0x3f0,%rcx
  0x000000010f8476b4: jl     0x000000010f8476c4
  0x000000010f8476ba: movabs $0x400,%rcx
  0x000000010f8476c4: mov    (%rdx,%rcx,1),%rsi
  0x000000010f8476c8: lea    0x1(%rsi),%rsi
  0x000000010f8476cc: mov    %rsi,(%rdx,%rcx,1)
  0x000000010f8476d0: jge    0x000000010f8476e3  ;*if_icmplt
                                                ; - java.util.HashMap::putVal@162 (line 643)

  0x000000010f8476d6: mov    0x80(%rsp),%rax
  0x000000010f8476de: jmpq   0x000000010f8477bc  ;*aload
                                                ; - java.util.HashMap::putVal@222 (line 653)

  0x000000010f8476e3: mov    0x68(%rsp),%rbx
  0x000000010f8476e8: mov    0x40(%rsp),%ecx
  0x000000010f8476ec: mov    0x48(%rsp),%rsi
  0x000000010f8476f1: movabs $0x10edfcf80,%rdx  ;   {metadata(method data for {method} {0x000000010eb4f9c0} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000010f8476fb: mov    0x8(%rsi),%esi
  0x000000010f8476fe: shl    $0x3,%rsi
  0x000000010f847702: cmp    0x418(%rdx),%rsi
  0x000000010f847709: jne    0x000000010f847718
  0x000000010f84770b: addq   $0x1,0x420(%rdx)
  0x000000010f847713: jmpq   0x000000010f84777e
  0x000000010f847718: cmp    0x428(%rdx),%rsi
  0x000000010f84771f: jne    0x000000010f84772e
  0x000000010f847721: addq   $0x1,0x430(%rdx)
  0x000000010f847729: jmpq   0x000000010f84777e
  0x000000010f84772e: cmpq   $0x0,0x418(%rdx)
  0x000000010f847739: jne    0x000000010f847752
  0x000000010f84773b: mov    %rsi,0x418(%rdx)
  0x000000010f847742: movq   $0x1,0x420(%rdx)
  0x000000010f84774d: jmpq   0x000000010f84777e
  0x000000010f847752: cmpq   $0x0,0x428(%rdx)
  0x000000010f84775d: jne    0x000000010f847776
  0x000000010f84775f: mov    %rsi,0x428(%rdx)
  0x000000010f847766: movq   $0x1,0x430(%rdx)
  0x000000010f847771: jmpq   0x000000010f84777e
  0x000000010f847776: addq   $0x1,0x410(%rdx)
  0x000000010f84777e: mov    %rbx,%rdx
  0x000000010f847781: mov    0x48(%rsp),%rsi    ;*invokevirtual treeifyBin
                                                ; - java.util.HashMap::putVal@169 (line 644)

  0x000000010f847786: nop
  0x000000010f847787: callq  0x000000010f7170a0  ; OopMap{[72]=Oop [88]=Oop [128]=Oop off=3340}
                                                ;*invokevirtual treeifyBin
                                                ; - java.util.HashMap::putVal@169 (line 644)
                                                ;   {optimized virtual_call}
  0x000000010f84778c: movabs $0x10edfcf80,%rdx  ;   {metadata(method data for {method} {0x000000010eb4f9c0} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000010f847796: incl   0x440(%rdx)
  0x000000010f84779c: mov    0x80(%rsp),%rax
  0x000000010f8477a4: jmpq   0x000000010f8477bc  ;*goto
                                                ; - java.util.HashMap::putVal@172 (line 644)

  0x000000010f8477a9: movabs $0x10edfcf80,%rdx  ;   {metadata(method data for {method} {0x000000010eb4f9c0} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000010f8477b3: incl   0x2c0(%rdx)
  0x000000010f8477b9: mov    %rdi,%rax          ;*goto
                                                ; - java.util.HashMap::putVal@101 (line 636)

  0x000000010f8477bc: cmp    $0x0,%rax
  0x000000010f8477c0: movabs $0x10edfcf80,%rdx  ;   {metadata(method data for {method} {0x000000010eb4f9c0} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000010f8477ca: movabs $0x538,%rsi
  0x000000010f8477d4: je     0x000000010f8477e4
  0x000000010f8477da: movabs $0x548,%rsi
  0x000000010f8477e4: mov    (%rdx,%rsi,1),%rdi
  0x000000010f8477e8: lea    0x1(%rdi),%rdi
  0x000000010f8477ec: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f8477f0: jne    0x000000010f84784f  ;*ifnull
                                                ; - java.util.HashMap::putVal@224 (line 653)

  0x000000010f8477f6: mov    0x48(%rsp),%rsi
  0x000000010f8477fb: mov    0x18(%rsi),%edx    ;*getfield modCount
                                                ; - java.util.HashMap::putVal@261 (line 661)

  0x000000010f8477fe: inc    %edx
  0x000000010f847800: mov    %edx,0x18(%rsi)    ;*putfield modCount
                                                ; - java.util.HashMap::putVal@266 (line 661)

  0x000000010f847803: mov    0x14(%rsi),%edx    ;*getfield size
                                                ; - java.util.HashMap::putVal@271 (line 662)

  0x000000010f847806: inc    %edx
  0x000000010f847808: mov    %edx,0x14(%rsi)    ;*putfield size
                                                ; - java.util.HashMap::putVal@277 (line 662)

  0x000000010f84780b: mov    0x1c(%rsi),%edi    ;*getfield threshold
                                                ; - java.util.HashMap::putVal@281 (line 662)

  0x000000010f84780e: cmp    %edi,%edx
  0x000000010f847810: movabs $0x10edfcf80,%rdx  ;   {metadata(method data for {method} {0x000000010eb4f9c0} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000010f84781a: movabs $0x5c8,%rdi
  0x000000010f847824: jle    0x000000010f847834
  0x000000010f84782a: movabs $0x5d8,%rdi
  0x000000010f847834: mov    (%rdx,%rdi,1),%rbx
  0x000000010f847838: lea    0x1(%rbx),%rbx
  0x000000010f84783c: mov    %rbx,(%rdx,%rdi,1)
  0x000000010f847840: jg     0x000000010f8479bb  ;*if_icmple
                                                ; - java.util.HashMap::putVal@284 (line 662)

  0x000000010f847846: mov    0x60(%rsp),%edi
  0x000000010f84784a: jmpq   0x000000010f847a65  ;*aload_0
                                                ; - java.util.HashMap::putVal@292 (line 664)

  0x000000010f84784f: mov    0x44(%rsp),%r9d
  0x000000010f847854: mov    0x48(%rsp),%rsi
  0x000000010f847859: mov    0x14(%rax),%edi    ; implicit exception: dispatches to 0x000000010f847bae
  0x000000010f84785c: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.util.HashMap::putVal@229 (line 654)

  0x000000010f847860: cmp    $0x0,%r9d
  0x000000010f847864: movabs $0x10edfcf80,%rdx  ;   {metadata(method data for {method} {0x000000010eb4f9c0} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000010f84786e: movabs $0x558,%rbx
  0x000000010f847878: je     0x000000010f847888
  0x000000010f84787e: movabs $0x568,%rbx
  0x000000010f847888: mov    (%rdx,%rbx,1),%rcx
  0x000000010f84788c: lea    0x1(%rcx),%rcx
  0x000000010f847890: mov    %rcx,(%rdx,%rbx,1)
  0x000000010f847894: je     0x000000010f8478d4  ;*ifeq
                                                ; - java.util.HashMap::putVal@236 (line 655)

  0x000000010f84789a: cmp    $0x0,%rdi
  0x000000010f84789e: movabs $0x10edfcf80,%rdx  ;   {metadata(method data for {method} {0x000000010eb4f9c0} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000010f8478a8: movabs $0x578,%rbx
  0x000000010f8478b2: jne    0x000000010f8478c2
  0x000000010f8478b8: movabs $0x588,%rbx
  0x000000010f8478c2: mov    (%rdx,%rbx,1),%rcx
  0x000000010f8478c6: lea    0x1(%rcx),%rcx
  0x000000010f8478ca: mov    %rcx,(%rdx,%rbx,1)
  0x000000010f8478ce: jne    0x000000010f8478f9  ;*ifnonnull
                                                ; - java.util.HashMap::putVal@241 (line 655)

  0x000000010f8478d4: mov    0x58(%rsp),%r8
  0x000000010f8478d9: mov    %r8,%r10
  0x000000010f8478dc: shr    $0x3,%r10
  0x000000010f8478e0: mov    %r10d,0x14(%rax)
  0x000000010f8478e4: mov    %rax,%rdx
  0x000000010f8478e7: shr    $0x9,%rdx
  0x000000010f8478eb: movabs $0x1065b9000,%rbx
  0x000000010f8478f5: movb   $0x0,(%rdx,%rbx,1)  ;*putfield value
                                                ; - java.util.HashMap::putVal@247 (line 656)

  0x000000010f8478f9: mov    %rdi,0x90(%rsp)
  0x000000010f847901: mov    %rsi,%rdx
  0x000000010f847904: movabs $0x10edfcf80,%rbx  ;   {metadata(method data for {method} {0x000000010eb4f9c0} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000010f84790e: mov    0x8(%rdx),%edx
  0x000000010f847911: shl    $0x3,%rdx
  0x000000010f847915: cmp    0x5a0(%rbx),%rdx
  0x000000010f84791c: jne    0x000000010f84792b
  0x000000010f84791e: addq   $0x1,0x5a8(%rbx)
  0x000000010f847926: jmpq   0x000000010f847991
  0x000000010f84792b: cmp    0x5b0(%rbx),%rdx
  0x000000010f847932: jne    0x000000010f847941
  0x000000010f847934: addq   $0x1,0x5b8(%rbx)
  0x000000010f84793c: jmpq   0x000000010f847991
  0x000000010f847941: cmpq   $0x0,0x5a0(%rbx)
  0x000000010f84794c: jne    0x000000010f847965
  0x000000010f84794e: mov    %rdx,0x5a0(%rbx)
  0x000000010f847955: movq   $0x1,0x5a8(%rbx)
  0x000000010f847960: jmpq   0x000000010f847991
  0x000000010f847965: cmpq   $0x0,0x5b0(%rbx)
  0x000000010f847970: jne    0x000000010f847989
  0x000000010f847972: mov    %rdx,0x5b0(%rbx)
  0x000000010f847979: movq   $0x1,0x5b8(%rbx)
  0x000000010f847984: jmpq   0x000000010f847991
  0x000000010f847989: addq   $0x1,0x598(%rbx)
  0x000000010f847991: mov    %rax,%rdx          ;*invokevirtual afterNodeAccess
                                                ; - java.util.HashMap::putVal@253 (line 657)

  0x000000010f847994: nop
  0x000000010f847995: movabs $0xffffffffffffffff,%rax
  0x000000010f84799f: callq  0x000000010f7172e0  ; OopMap{[144]=Oop off=3876}
                                                ;*invokevirtual afterNodeAccess
                                                ; - java.util.HashMap::putVal@253 (line 657)
                                                ;   {virtual_call}
  0x000000010f8479a4: mov    0x90(%rsp),%rax
  0x000000010f8479ac: add    $0xa0,%rsp
  0x000000010f8479b3: pop    %rbp
  0x000000010f8479b4: test   %eax,-0x8dac8ba(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f8479ba: retq                      ;*areturn
                                                ; - java.util.HashMap::putVal@258 (line 658)

  0x000000010f8479bb: mov    %rsi,%rdi
  0x000000010f8479be: movabs $0x10edfcf80,%rbx  ;   {metadata(method data for {method} {0x000000010eb4f9c0} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000010f8479c8: mov    0x8(%rdi),%edi
  0x000000010f8479cb: shl    $0x3,%rdi
  0x000000010f8479cf: cmp    0x5f0(%rbx),%rdi
  0x000000010f8479d6: jne    0x000000010f8479e5
  0x000000010f8479d8: addq   $0x1,0x5f8(%rbx)
  0x000000010f8479e0: jmpq   0x000000010f847a4b
  0x000000010f8479e5: cmp    0x600(%rbx),%rdi
  0x000000010f8479ec: jne    0x000000010f8479fb
  0x000000010f8479ee: addq   $0x1,0x608(%rbx)
  0x000000010f8479f6: jmpq   0x000000010f847a4b
  0x000000010f8479fb: cmpq   $0x0,0x5f0(%rbx)
  0x000000010f847a06: jne    0x000000010f847a1f
  0x000000010f847a08: mov    %rdi,0x5f0(%rbx)
  0x000000010f847a0f: movq   $0x1,0x5f8(%rbx)
  0x000000010f847a1a: jmpq   0x000000010f847a4b
  0x000000010f847a1f: cmpq   $0x0,0x600(%rbx)
  0x000000010f847a2a: jne    0x000000010f847a43
  0x000000010f847a2c: mov    %rdi,0x600(%rbx)
  0x000000010f847a33: movq   $0x1,0x608(%rbx)
  0x000000010f847a3e: jmpq   0x000000010f847a4b
  0x000000010f847a43: addq   $0x1,0x5e8(%rbx)
  0x000000010f847a4b: mov    %rsi,%rdi
  0x000000010f847a4e: mov    %rdi,%rsi          ;*invokevirtual resize
                                                ; - java.util.HashMap::putVal@288 (line 663)

  0x000000010f847a51: nop
  0x000000010f847a52: nop
  0x000000010f847a53: nop
  0x000000010f847a54: nop
  0x000000010f847a55: nop
  0x000000010f847a56: nop
  0x000000010f847a57: callq  0x000000010f7170a0  ; OopMap{[72]=Oop off=4060}
                                                ;*invokevirtual resize
                                                ; - java.util.HashMap::putVal@288 (line 663)
                                                ;   {optimized virtual_call}
  0x000000010f847a5c: mov    0x60(%rsp),%edi
  0x000000010f847a60: mov    0x48(%rsp),%rsi
  0x000000010f847a65: mov    %rsi,%rdx
  0x000000010f847a68: movabs $0x10edfcf80,%rbx  ;   {metadata(method data for {method} {0x000000010eb4f9c0} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000010f847a72: mov    0x8(%rdx),%edx
  0x000000010f847a75: shl    $0x3,%rdx
  0x000000010f847a79: cmp    0x620(%rbx),%rdx
  0x000000010f847a80: jne    0x000000010f847a8f
  0x000000010f847a82: addq   $0x1,0x628(%rbx)
  0x000000010f847a8a: jmpq   0x000000010f847af5
  0x000000010f847a8f: cmp    0x630(%rbx),%rdx
  0x000000010f847a96: jne    0x000000010f847aa5
  0x000000010f847a98: addq   $0x1,0x638(%rbx)
  0x000000010f847aa0: jmpq   0x000000010f847af5
  0x000000010f847aa5: cmpq   $0x0,0x620(%rbx)
  0x000000010f847ab0: jne    0x000000010f847ac9
  0x000000010f847ab2: mov    %rdx,0x620(%rbx)
  0x000000010f847ab9: movq   $0x1,0x628(%rbx)
  0x000000010f847ac4: jmpq   0x000000010f847af5
  0x000000010f847ac9: cmpq   $0x0,0x630(%rbx)
  0x000000010f847ad4: jne    0x000000010f847aed
  0x000000010f847ad6: mov    %rdx,0x630(%rbx)
  0x000000010f847add: movq   $0x1,0x638(%rbx)
  0x000000010f847ae8: jmpq   0x000000010f847af5
  0x000000010f847aed: addq   $0x1,0x618(%rbx)
  0x000000010f847af5: mov    %rdi,%rdx          ;*invokevirtual afterNodeInsertion
                                                ; - java.util.HashMap::putVal@295 (line 664)

  0x000000010f847af8: nop
  0x000000010f847af9: nop
  0x000000010f847afa: nop
  0x000000010f847afb: nop
  0x000000010f847afc: nop
  0x000000010f847afd: movabs $0xffffffffffffffff,%rax
  0x000000010f847b07: callq  0x000000010f7172e0  ; OopMap{off=4236}
                                                ;*invokevirtual afterNodeInsertion
                                                ; - java.util.HashMap::putVal@295 (line 664)
                                                ;   {virtual_call}
  0x000000010f847b0c: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000010f847b16: add    $0xa0,%rsp
  0x000000010f847b1d: pop    %rbp
  0x000000010f847b1e: test   %eax,-0x8daca24(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f847b24: retq   
  0x000000010f847b25: mov    %rbx,0x8(%rsp)
  0x000000010f847b2a: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f847b32: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [72]=Oop rcx=Oop [80]=Oop r8=Oop off=4279}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::putVal@-1 (line 628)
                                                ;   {runtime_call}
  0x000000010f847b37: jmpq   0x000000010f846aef
  0x000000010f847b3c: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop [72]=Oop rcx=Oop [80]=Oop r8=Oop rbx=Oop off=4289}
                                                ;*arraylength
                                                ; - java.util.HashMap::putVal@12 (line 628)
                                                ;   {runtime_call}
  0x000000010f847b41: callq  0x000000010f7cd0c0  ; OopMap{[88]=Oop [80]=Oop [72]=Oop rdx=Oop off=4294}
                                                ;*arraylength
                                                ; - java.util.HashMap::putVal@26 (line 629)
                                                ;   {runtime_call}
  0x000000010f847b46: callq  0x000000010f7cd0c0  ; OopMap{[88]=Oop [80]=Oop [72]=Oop rbx=Oop off=4299}
                                                ;*aaload
                                                ; - java.util.HashMap::putVal@40 (line 630)
                                                ;   {runtime_call}
  0x000000010f847b4b: callq  0x000000010f7cd0c0  ; OopMap{[88]=Oop [80]=Oop [72]=Oop rbx=Oop off=4304}
                                                ;*aaload
                                                ; - java.util.HashMap::putVal@40 (line 630)
                                                ;   {runtime_call}
  0x000000010f847b50: mov    %rax,(%rsp)
  0x000000010f847b54: callq  0x000000010f7cca00  ; OopMap{[88]=Oop [80]=Oop [72]=Oop rbx=Oop off=4313}
                                                ;*aaload
                                                ; - java.util.HashMap::putVal@40 (line 630)
                                                ;   {runtime_call}
  0x000000010f847b59: mov    %rdx,(%rsp)
  0x000000010f847b5d: callq  0x000000010f7cca00  ; OopMap{[72]=Oop rax=Oop rbx=Oop off=4322}
                                                ;*aastore
                                                ; - java.util.HashMap::putVal@59 (line 631)
                                                ;   {runtime_call}
  0x000000010f847b62: callq  0x000000010f7cd0c0  ; OopMap{[72]=Oop rax=Oop off=4327}
                                                ;*aastore
                                                ; - java.util.HashMap::putVal@59 (line 631)
                                                ;   {runtime_call}
  0x000000010f847b67: mov    %rax,(%rsp)
  0x000000010f847b6b: callq  0x000000010f7cf240  ; OopMap{[72]=Oop rax=Oop off=4336}
                                                ;*aastore
                                                ; - java.util.HashMap::putVal@59 (line 631)
                                                ;   {runtime_call}
  0x000000010f847b70: callq  0x000000010f7cd0c0  ; OopMap{[72]=Oop rdi=Oop [88]=Oop [80]=Oop rbx=Oop off=4341}
                                                ;*getfield hash
                                                ; - java.util.HashMap::putVal@65 (line 634)
                                                ;   {runtime_call}
  0x000000010f847b75: callq  0x000000010f7cd0c0  ; OopMap{[72]=Oop [88]=Oop rcx=Oop [80]=Oop [104]=Oop [112]=Oop rdx=Oop off=4346}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::putVal@91 (line 635)
                                                ;   {runtime_call}
  0x000000010f847b7a: mov    %rdi,(%rsp)
  0x000000010f847b7e: callq  0x000000010f7cf480  ; OopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop off=4355}
                                                ;*checkcast
                                                ; - java.util.HashMap::putVal@114 (line 638)
                                                ;   {runtime_call}
  0x000000010f847b83: callq  0x000000010f7cd0c0  ; OopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop rsi=Oop off=4360}
                                                ;*invokevirtual putTreeVal
                                                ; - java.util.HashMap::putVal@123 (line 638)
                                                ;   {runtime_call}
  0x000000010f847b88: callq  0x000000010f7cd0c0  ; OopMap{[72]=Oop [88]=Oop [104]=Oop rdi=Oop rcx=Oop [80]=Oop off=4365}
                                                ;*getfield next
                                                ; - java.util.HashMap::putVal@136 (line 641)
                                                ;   {runtime_call}
  0x000000010f847b8d: callq  0x000000010f7cd0c0  ; OopMap{[72]=Oop [88]=Oop [104]=Oop rcx=Oop [80]=Oop rax=Oop [128]=Oop off=4370}
                                                ;*getfield hash
                                                ; - java.util.HashMap::putVal@177 (line 647)
                                                ;   {runtime_call}
  0x000000010f847b92: callq  0x000000010f7cd0c0  ; OopMap{[72]=Oop [88]=Oop [104]=Oop rcx=Oop [80]=Oop [128]=Oop rsi=Oop off=4375}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::putVal@203 (line 648)
                                                ;   {runtime_call}
  0x000000010f847b97: mov    %rdx,0x8(%rsp)
  0x000000010f847b9c: movq   $0xdb,(%rsp)
  0x000000010f847ba4: callq  0x000000010f7d1a20  ; OopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop [128]=Oop off=4393}
                                                ;*goto
                                                ; - java.util.HashMap::putVal@219 (line 640)
                                                ;   {runtime_call}
  0x000000010f847ba9: jmpq   0x000000010f847565
  0x000000010f847bae: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop [72]=Oop [88]=Oop rax=Oop off=4403}
                                                ;*getfield value
                                                ; - java.util.HashMap::putVal@229 (line 654)
                                                ;   {runtime_call}
  0x000000010f847bb3: nop
  0x000000010f847bb4: nop
  0x000000010f847bb5: mov    0x2a8(%r15),%rax
  0x000000010f847bbc: movabs $0x0,%r10
  0x000000010f847bc6: mov    %r10,0x2a8(%r15)
  0x000000010f847bcd: movabs $0x0,%r10
  0x000000010f847bd7: mov    %r10,0x2b0(%r15)
  0x000000010f847bde: add    $0xa0,%rsp
  0x000000010f847be5: pop    %rbp
  0x000000010f847be6: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f847beb: hlt    
  0x000000010f847bec: hlt    
  0x000000010f847bed: hlt    
  0x000000010f847bee: hlt    
  0x000000010f847bef: hlt    
  0x000000010f847bf0: hlt    
  0x000000010f847bf1: hlt    
  0x000000010f847bf2: hlt    
  0x000000010f847bf3: hlt    
  0x000000010f847bf4: hlt    
  0x000000010f847bf5: hlt    
  0x000000010f847bf6: hlt    
  0x000000010f847bf7: hlt    
  0x000000010f847bf8: hlt    
  0x000000010f847bf9: hlt    
  0x000000010f847bfa: hlt    
  0x000000010f847bfb: hlt    
  0x000000010f847bfc: hlt    
  0x000000010f847bfd: hlt    
  0x000000010f847bfe: hlt    
  0x000000010f847bff: hlt    
[Stub Code]
  0x000000010f847c00: nop                       ;   {no_reloc}
  0x000000010f847c01: nop
  0x000000010f847c02: nop
  0x000000010f847c03: nop
  0x000000010f847c04: nop
  0x000000010f847c05: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f847c0f: jmpq   0x000000010f847c0f  ;   {runtime_call}
  0x000000010f847c14: nop
  0x000000010f847c15: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f847c1f: jmpq   0x000000010f847c1f  ;   {runtime_call}
  0x000000010f847c24: nop
  0x000000010f847c25: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f847c2f: jmpq   0x000000010f847c2f  ;   {runtime_call}
  0x000000010f847c34: nop
  0x000000010f847c35: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f847c3f: jmpq   0x000000010f847c3f  ;   {runtime_call}
  0x000000010f847c44: nop
  0x000000010f847c45: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f847c4f: jmpq   0x000000010f847c4f  ;   {runtime_call}
  0x000000010f847c54: nop
  0x000000010f847c55: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f847c5f: jmpq   0x000000010f847c5f  ;   {runtime_call}
  0x000000010f847c64: nop
  0x000000010f847c65: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f847c6f: jmpq   0x000000010f847c6f  ;   {runtime_call}
  0x000000010f847c74: nop
  0x000000010f847c75: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f847c7f: jmpq   0x000000010f847c7f  ;   {runtime_call}
  0x000000010f847c84: nop
  0x000000010f847c85: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f847c8f: jmpq   0x000000010f847c8f  ;   {runtime_call}
  0x000000010f847c94: nop
  0x000000010f847c95: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f847c9f: jmpq   0x000000010f847c9f  ;   {runtime_call}
[Exception Handler]
  0x000000010f847ca4: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f847ca9: mov    %rsp,-0x28(%rsp)
  0x000000010f847cae: sub    $0x80,%rsp
  0x000000010f847cb5: mov    %rax,0x78(%rsp)
  0x000000010f847cba: mov    %rcx,0x70(%rsp)
  0x000000010f847cbf: mov    %rdx,0x68(%rsp)
  0x000000010f847cc4: mov    %rbx,0x60(%rsp)
  0x000000010f847cc9: mov    %rbp,0x50(%rsp)
  0x000000010f847cce: mov    %rsi,0x48(%rsp)
  0x000000010f847cd3: mov    %rdi,0x40(%rsp)
  0x000000010f847cd8: mov    %r8,0x38(%rsp)
  0x000000010f847cdd: mov    %r9,0x30(%rsp)
  0x000000010f847ce2: mov    %r10,0x28(%rsp)
  0x000000010f847ce7: mov    %r11,0x20(%rsp)
  0x000000010f847cec: mov    %r12,0x18(%rsp)
  0x000000010f847cf1: mov    %r13,0x10(%rsp)
  0x000000010f847cf6: mov    %r14,0x8(%rsp)
  0x000000010f847cfb: mov    %r15,(%rsp)
  0x000000010f847cff: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f847d09: movabs $0x10f847ca9,%rsi  ;   {internal_word}
  0x000000010f847d13: mov    %rsp,%rdx
  0x000000010f847d16: and    $0xfffffffffffffff0,%rsp
  0x000000010f847d1a: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f847d1f: hlt    
[Deopt Handler Code]
  0x000000010f847d20: movabs $0x10f847d20,%r10  ;   {section_word}
  0x000000010f847d2a: push   %r10
  0x000000010f847d2c: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f847d31: hlt    
  0x000000010f847d32: hlt    
  0x000000010f847d33: hlt    
  0x000000010f847d34: hlt    
  0x000000010f847d35: hlt    
  0x000000010f847d36: hlt    
  0x000000010f847d37: hlt    
Decoding compiled method 0x000000010f844890:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010eba3f20} 'read' '([BII)I' in 'java/io/BufferedInputStream'
  # this:     rsi:rsi   = 'java/io/BufferedInputStream'
  # parm0:    rdx:rdx   = '[B'
  # parm1:    rcx       = int
  # parm2:    r8        = int
  #           [sp+0xb0]  (sp of caller)
  0x000000010f844a80: mov    0x8(%rsi),%r10d
  0x000000010f844a84: shl    $0x3,%r10
  0x000000010f844a88: cmp    %rax,%r10
  0x000000010f844a8b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f844a91: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f844a9c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f844aa0: mov    %eax,-0x14000(%rsp)
  0x000000010f844aa7: push   %rbp
  0x000000010f844aa8: sub    $0xa0,%rsp
  0x000000010f844aaf: mov    %rsi,0x58(%rsp)
  0x000000010f844ab4: mov    %rdx,0x68(%rsp)
  0x000000010f844ab9: mov    %ecx,0x60(%rsp)
  0x000000010f844abd: mov    %r8d,0x54(%rsp)
  0x000000010f844ac2: lea    0x80(%rsp),%rdi
  0x000000010f844aca: mov    %rsi,0x8(%rdi)
  0x000000010f844ace: mov    (%rsi),%rax
  0x000000010f844ad1: mov    %rax,%rbx
  0x000000010f844ad4: and    $0x7,%rbx
  0x000000010f844ad8: cmp    $0x5,%rbx
  0x000000010f844adc: jne    0x000000010f844b63
  0x000000010f844ae2: mov    0x8(%rsi),%ebx
  0x000000010f844ae5: shl    $0x3,%rbx
  0x000000010f844ae9: mov    0xa8(%rbx),%rbx
  0x000000010f844af0: or     %r15,%rbx
  0x000000010f844af3: xor    %rax,%rbx
  0x000000010f844af6: and    $0xffffffffffffff87,%rbx
  0x000000010f844afa: je     0x000000010f844b8b
  0x000000010f844b00: test   $0x7,%rbx
  0x000000010f844b07: jne    0x000000010f844b50
  0x000000010f844b09: test   $0x300,%rbx
  0x000000010f844b10: jne    0x000000010f844b2f
  0x000000010f844b12: and    $0x37f,%rax
  0x000000010f844b19: mov    %rax,%rbx
  0x000000010f844b1c: or     %r15,%rbx
  0x000000010f844b1f: lock cmpxchg %rbx,(%rsi)
  0x000000010f844b24: jne    0x000000010f84514e
  0x000000010f844b2a: jmpq   0x000000010f844b8b
  0x000000010f844b2f: mov    0x8(%rsi),%ebx
  0x000000010f844b32: shl    $0x3,%rbx
  0x000000010f844b36: mov    0xa8(%rbx),%rbx
  0x000000010f844b3d: or     %r15,%rbx
  0x000000010f844b40: lock cmpxchg %rbx,(%rsi)
  0x000000010f844b45: jne    0x000000010f84514e
  0x000000010f844b4b: jmpq   0x000000010f844b8b
  0x000000010f844b50: mov    0x8(%rsi),%ebx
  0x000000010f844b53: shl    $0x3,%rbx
  0x000000010f844b57: mov    0xa8(%rbx),%rbx
  0x000000010f844b5e: lock cmpxchg %rbx,(%rsi)
  0x000000010f844b63: mov    (%rsi),%rax
  0x000000010f844b66: or     $0x1,%rax
  0x000000010f844b6a: mov    %rax,(%rdi)
  0x000000010f844b6d: lock cmpxchg %rdi,(%rsi)
  0x000000010f844b72: je     0x000000010f844b8b
  0x000000010f844b78: sub    %rsp,%rax
  0x000000010f844b7b: and    $0xfffffffffffff007,%rax
  0x000000010f844b82: mov    %rax,(%rdi)
  0x000000010f844b85: jne    0x000000010f84514e
  0x000000010f844b8b: movabs $0x10edfc8d8,%rdi  ;   {metadata(method data for {method} {0x000000010eba3f20} 'read' '([BII)I' in 'java/io/BufferedInputStream')}
  0x000000010f844b95: mov    0xdc(%rdi),%ebx
  0x000000010f844b9b: add    $0x8,%ebx
  0x000000010f844b9e: mov    %ebx,0xdc(%rdi)
  0x000000010f844ba4: movabs $0x10eba3f20,%rdi  ;   {metadata({method} {0x000000010eba3f20} 'read' '([BII)I' in 'java/io/BufferedInputStream')}
  0x000000010f844bae: and    $0x1ff8,%ebx
  0x000000010f844bb4: cmp    $0x0,%ebx
  0x000000010f844bb7: je     0x000000010f845161  ;*aload_0
                                                ; - java.io.BufferedInputStream::read@0 (line 336)

  0x000000010f844bbd: mov    %rsi,%rdi
  0x000000010f844bc0: movabs $0x10edfc8d8,%rbx  ;   {metadata(method data for {method} {0x000000010eba3f20} 'read' '([BII)I' in 'java/io/BufferedInputStream')}
  0x000000010f844bca: addq   $0x1,0x108(%rbx)
  0x000000010f844bd2: movabs $0x10edfb710,%rdi  ;   {metadata(method data for {method} {0x000000010eba3950} 'getBufIfOpen' '()[B' in 'java/io/BufferedInputStream')}
  0x000000010f844bdc: mov    0xdc(%rdi),%ebx
  0x000000010f844be2: add    $0x8,%ebx
  0x000000010f844be5: mov    %ebx,0xdc(%rdi)
  0x000000010f844beb: movabs $0x10eba3950,%rdi  ;   {metadata({method} {0x000000010eba3950} 'getBufIfOpen' '()[B' in 'java/io/BufferedInputStream')}
  0x000000010f844bf5: and    $0x7ffff8,%ebx
  0x000000010f844bfb: cmp    $0x0,%ebx
  0x000000010f844bfe: je     0x000000010f845178
  0x000000010f844c04: mov    0x20(%rsi),%edi
  0x000000010f844c07: shl    $0x3,%rdi          ;*getfield buf
                                                ; - java.io.BufferedInputStream::getBufIfOpen@1 (line 168)
                                                ; - java.io.BufferedInputStream::read@1 (line 336)

  0x000000010f844c0b: cmp    $0x0,%rdi
  0x000000010f844c0f: movabs $0x10edfb710,%rdi  ;   {metadata(method data for {method} {0x000000010eba3950} 'getBufIfOpen' '()[B' in 'java/io/BufferedInputStream')}
  0x000000010f844c19: movabs $0x108,%rbx
  0x000000010f844c23: jne    0x000000010f844c33
  0x000000010f844c29: movabs $0x118,%rbx
  0x000000010f844c33: mov    (%rdi,%rbx,1),%rax
  0x000000010f844c37: lea    0x1(%rax),%rax
  0x000000010f844c3b: mov    %rax,(%rdi,%rbx,1)
  0x000000010f844c3f: je     0x000000010f8450ce  ;*ifnonnull
                                                ; - java.io.BufferedInputStream::getBufIfOpen@6 (line 169)
                                                ; - java.io.BufferedInputStream::read@1 (line 336)

  0x000000010f844c45: mov    0xc(%rdx),%edi     ;*arraylength
                                                ; - java.io.BufferedInputStream::read@13 (line 337)
                                                ; implicit exception: dispatches to 0x000000010f84518f
  0x000000010f844c48: mov    %rcx,%rbx
  0x000000010f844c4b: or     %r8,%rbx
  0x000000010f844c4e: mov    %rcx,%rax
  0x000000010f844c51: add    %r8d,%eax
  0x000000010f844c54: or     %rax,%rbx
  0x000000010f844c57: sub    %eax,%edi
  0x000000010f844c59: or     %rdi,%rbx
  0x000000010f844c5c: cmp    $0x0,%ebx
  0x000000010f844c5f: movabs $0x10edfc8d8,%rdi  ;   {metadata(method data for {method} {0x000000010eba3f20} 'read' '([BII)I' in 'java/io/BufferedInputStream')}
  0x000000010f844c69: movabs $0x118,%rbx
  0x000000010f844c73: jge    0x000000010f844c83
  0x000000010f844c79: movabs $0x128,%rbx
  0x000000010f844c83: mov    (%rdi,%rbx,1),%rax
  0x000000010f844c87: lea    0x1(%rax),%rax
  0x000000010f844c8b: mov    %rax,(%rdi,%rbx,1)
  0x000000010f844c8f: jl     0x000000010f84508f  ;*ifge
                                                ; - java.io.BufferedInputStream::read@19 (line 337)

  0x000000010f844c95: cmp    $0x0,%r8d
  0x000000010f844c99: movabs $0x10edfc8d8,%rdi  ;   {metadata(method data for {method} {0x000000010eba3f20} 'read' '([BII)I' in 'java/io/BufferedInputStream')}
  0x000000010f844ca3: movabs $0x148,%rbx
  0x000000010f844cad: jne    0x000000010f844cbd
  0x000000010f844cb3: movabs $0x158,%rbx
  0x000000010f844cbd: mov    (%rdi,%rbx,1),%rax
  0x000000010f844cc1: lea    0x1(%rax),%rax
  0x000000010f844cc5: mov    %rax,(%rdi,%rbx,1)
  0x000000010f844cc9: je     0x000000010f845047  ;*ifne
                                                ; - java.io.BufferedInputStream::read@31 (line 339)

  0x000000010f844ccf: mov    $0x0,%edi          ;*aload_0
                                                ; - java.io.BufferedInputStream::read@39 (line 345)

  0x000000010f844cd4: nopl   0x0(%rax)
  0x000000010f844cd8: mov    %rsi,%rbx
  0x000000010f844cdb: movabs $0x10edfc8d8,%rax  ;   {metadata(method data for {method} {0x000000010eba3f20} 'read' '([BII)I' in 'java/io/BufferedInputStream')}
  0x000000010f844ce5: addq   $0x1,0x168(%rax)
  0x000000010f844ced: mov    %rdi,%rbx
  0x000000010f844cf0: add    %ecx,%ebx
  0x000000010f844cf2: mov    %r8,%rax
  0x000000010f844cf5: sub    %edi,%eax
  0x000000010f844cf7: mov    %rdx,%r9
  0x000000010f844cfa: mov    %r9,%rdx
  0x000000010f844cfd: mov    %rbx,%rcx
  0x000000010f844d00: mov    %rax,%r8
  0x000000010f844d03: mov    %rsi,%rax
  0x000000010f844d06: mov    %rax,%rsi          ;*invokespecial read1
                                                ; - java.io.BufferedInputStream::read@49 (line 345)

  0x000000010f844d09: mov    %edi,0x50(%rsp)
  0x000000010f844d0d: nop
  0x000000010f844d0e: nop
  0x000000010f844d0f: callq  0x000000010f7170a0  ; OopMap{[104]=Oop [88]=Oop [136]=Oop off=660}
                                                ;*invokespecial read1
                                                ; - java.io.BufferedInputStream::read@49 (line 345)
                                                ;   {optimized virtual_call}
  0x000000010f844d14: cmp    $0x0,%eax
  0x000000010f844d17: movabs $0x10edfc8d8,%rsi  ;   {metadata(method data for {method} {0x000000010eba3f20} 'read' '([BII)I' in 'java/io/BufferedInputStream')}
  0x000000010f844d21: movabs $0x178,%rdi
  0x000000010f844d2b: jg     0x000000010f844d3b
  0x000000010f844d31: movabs $0x188,%rdi
  0x000000010f844d3b: mov    (%rsi,%rdi,1),%rbx
  0x000000010f844d3f: lea    0x1(%rbx),%rbx
  0x000000010f844d43: mov    %rbx,(%rsi,%rdi,1)
  0x000000010f844d47: jle    0x000000010f844f19  ;*ifgt
                                                ; - java.io.BufferedInputStream::read@56 (line 346)

  0x000000010f844d4d: add    0x50(%rsp),%eax
  0x000000010f844d51: cmp    0x54(%rsp),%eax
  0x000000010f844d55: movabs $0x10edfc8d8,%rsi  ;   {metadata(method data for {method} {0x000000010eba3f20} 'read' '([BII)I' in 'java/io/BufferedInputStream')}
  0x000000010f844d5f: movabs $0x1d0,%rdi
  0x000000010f844d69: jl     0x000000010f844d79
  0x000000010f844d6f: movabs $0x1e0,%rdi
  0x000000010f844d79: mov    (%rsi,%rdi,1),%rbx
  0x000000010f844d7d: lea    0x1(%rbx),%rbx
  0x000000010f844d81: mov    %rbx,(%rsi,%rdi,1)
  0x000000010f844d85: jge    0x000000010f844ffe  ;*if_icmplt
                                                ; - java.io.BufferedInputStream::read@82 (line 349)

  0x000000010f844d8b: mov    0x58(%rsp),%rsi
  0x000000010f844d90: mov    0xc(%rsi),%edi
  0x000000010f844d93: shl    $0x3,%rdi          ;*getfield in
                                                ; - java.io.BufferedInputStream::read@89 (line 352)

  0x000000010f844d97: cmp    $0x0,%rdi
  0x000000010f844d9b: movabs $0x10edfc8d8,%rbx  ;   {metadata(method data for {method} {0x000000010eba3f20} 'read' '([BII)I' in 'java/io/BufferedInputStream')}
  0x000000010f844da5: movabs $0x1f0,%rdx
  0x000000010f844daf: je     0x000000010f844dbf
  0x000000010f844db5: movabs $0x200,%rdx
  0x000000010f844dbf: mov    (%rbx,%rdx,1),%rcx
  0x000000010f844dc3: lea    0x1(%rcx),%rcx
  0x000000010f844dc7: mov    %rcx,(%rbx,%rdx,1)
  0x000000010f844dcb: mov    %eax,0x64(%rsp)
  0x000000010f844dcf: je     0x000000010f844eb5  ;*ifnull
                                                ; - java.io.BufferedInputStream::read@96 (line 353)

  0x000000010f844dd5: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x000000010f845194
  0x000000010f844dd8: mov    %rdi,%rbx
  0x000000010f844ddb: movabs $0x10edfc8d8,%rdx  ;   {metadata(method data for {method} {0x000000010eba3f20} 'read' '([BII)I' in 'java/io/BufferedInputStream')}
  0x000000010f844de5: mov    0x8(%rbx),%ebx
  0x000000010f844de8: shl    $0x3,%rbx
  0x000000010f844dec: cmp    0x218(%rdx),%rbx
  0x000000010f844df3: jne    0x000000010f844e02
  0x000000010f844df5: addq   $0x1,0x220(%rdx)
  0x000000010f844dfd: jmpq   0x000000010f844e68
  0x000000010f844e02: cmp    0x228(%rdx),%rbx
  0x000000010f844e09: jne    0x000000010f844e18
  0x000000010f844e0b: addq   $0x1,0x230(%rdx)
  0x000000010f844e13: jmpq   0x000000010f844e68
  0x000000010f844e18: cmpq   $0x0,0x218(%rdx)
  0x000000010f844e23: jne    0x000000010f844e3c
  0x000000010f844e25: mov    %rbx,0x218(%rdx)
  0x000000010f844e2c: movq   $0x1,0x220(%rdx)
  0x000000010f844e37: jmpq   0x000000010f844e68
  0x000000010f844e3c: cmpq   $0x0,0x228(%rdx)
  0x000000010f844e47: jne    0x000000010f844e60
  0x000000010f844e49: mov    %rbx,0x228(%rdx)
  0x000000010f844e50: movq   $0x1,0x230(%rdx)
  0x000000010f844e5b: jmpq   0x000000010f844e68
  0x000000010f844e60: addq   $0x1,0x210(%rdx)
  0x000000010f844e68: mov    %rdi,%rsi          ;*invokevirtual available
                                                ; - java.io.BufferedInputStream::read@101 (line 353)

  0x000000010f844e6b: nop
  0x000000010f844e6c: nop
  0x000000010f844e6d: movabs $0xffffffffffffffff,%rax
  0x000000010f844e77: callq  0x000000010f7172e0  ; OopMap{[104]=Oop [88]=Oop [136]=Oop off=1020}
                                                ;*invokevirtual available
                                                ; - java.io.BufferedInputStream::read@101 (line 353)
                                                ;   {virtual_call}
  0x000000010f844e7c: cmp    $0x0,%eax
  0x000000010f844e7f: movabs $0x10edfc8d8,%rax  ;   {metadata(method data for {method} {0x000000010eba3f20} 'read' '([BII)I' in 'java/io/BufferedInputStream')}
  0x000000010f844e89: movabs $0x240,%rdx
  0x000000010f844e93: jg     0x000000010f844ea3
  0x000000010f844e99: movabs $0x250,%rdx
  0x000000010f844ea3: mov    (%rax,%rdx,1),%rsi
  0x000000010f844ea7: lea    0x1(%rsi),%rsi
  0x000000010f844eab: mov    %rsi,(%rax,%rdx,1)
  0x000000010f844eaf: jle    0x000000010f844fb7  ;*ifgt
                                                ; - java.io.BufferedInputStream::read@104 (line 353)

  0x000000010f844eb5: movabs $0x10edfc8d8,%rax  ;   {metadata(method data for {method} {0x000000010eba3f20} 'read' '([BII)I' in 'java/io/BufferedInputStream')}
  0x000000010f844ebf: mov    0xe0(%rax),%edx
  0x000000010f844ec5: add    $0x8,%edx
  0x000000010f844ec8: mov    %edx,0xe0(%rax)
  0x000000010f844ece: movabs $0x10eba3f20,%rax  ;   {metadata({method} {0x000000010eba3f20} 'read' '([BII)I' in 'java/io/BufferedInputStream')}
  0x000000010f844ed8: and    $0xfff8,%edx
  0x000000010f844ede: cmp    $0x0,%edx
  0x000000010f844ee1: je     0x000000010f845199  ; OopMap{[104]=Oop [88]=Oop [136]=Oop off=1127}
                                                ;*goto
                                                ; - java.io.BufferedInputStream::read@110 (line 355)

  0x000000010f844ee7: test   %eax,-0x8da9ded(%rip)        # 0x0000000106a9b100
                                                ;   {poll}
  0x000000010f844eed: movabs $0x10edfc8d8,%rax  ;   {metadata(method data for {method} {0x000000010eba3f20} 'read' '([BII)I' in 'java/io/BufferedInputStream')}
  0x000000010f844ef7: incl   0x260(%rax)
  0x000000010f844efd: mov    0x64(%rsp),%edi
  0x000000010f844f01: mov    0x54(%rsp),%r8d
  0x000000010f844f06: mov    0x60(%rsp),%ecx
  0x000000010f844f0a: mov    0x68(%rsp),%rdx
  0x000000010f844f0f: mov    0x58(%rsp),%rsi
  0x000000010f844f14: jmpq   0x000000010f844cd8  ;*goto
                                                ; - java.io.BufferedInputStream::read@110 (line 355)

  0x000000010f844f19: mov    0x50(%rsp),%edi
  0x000000010f844f1d: cmp    $0x0,%edi
  0x000000010f844f20: movabs $0x10edfc8d8,%rdx  ;   {metadata(method data for {method} {0x000000010eba3f20} 'read' '([BII)I' in 'java/io/BufferedInputStream')}
  0x000000010f844f2a: movabs $0x198,%rsi
  0x000000010f844f34: jne    0x000000010f844f44
  0x000000010f844f3a: movabs $0x1a8,%rsi
  0x000000010f844f44: mov    (%rdx,%rsi,1),%rbx
  0x000000010f844f48: lea    0x1(%rbx),%rbx
  0x000000010f844f4c: mov    %rbx,(%rdx,%rsi,1)
  0x000000010f844f50: jne    0x000000010f844f6e  ;*ifne
                                                ; - java.io.BufferedInputStream::read@61 (line 347)

  0x000000010f844f56: movabs $0x10edfc8d8,%rdx  ;   {metadata(method data for {method} {0x000000010eba3f20} 'read' '([BII)I' in 'java/io/BufferedInputStream')}
  0x000000010f844f60: incl   0x1b8(%rdx)
  0x000000010f844f66: mov    %rax,%rdx
  0x000000010f844f69: jmpq   0x000000010f844f71  ;*goto
                                                ; - java.io.BufferedInputStream::read@66 (line 347)

  0x000000010f844f6e: mov    %rdi,%rdx
  0x000000010f844f71: lea    0x80(%rsp),%rax
  0x000000010f844f79: mov    0x8(%rax),%rdi
  0x000000010f844f7d: mov    (%rdi),%rsi
  0x000000010f844f80: and    $0x7,%rsi
  0x000000010f844f84: cmp    $0x5,%rsi
  0x000000010f844f88: je     0x000000010f844fa5
  0x000000010f844f8e: mov    (%rax),%rsi
  0x000000010f844f91: test   %rsi,%rsi
  0x000000010f844f94: je     0x000000010f844fa5
  0x000000010f844f9a: lock cmpxchg %rsi,(%rdi)
  0x000000010f844f9f: jne    0x000000010f8451b0
  0x000000010f844fa5: mov    %rdx,%rax
  0x000000010f844fa8: add    $0xa0,%rsp
  0x000000010f844faf: pop    %rbp
  0x000000010f844fb0: test   %eax,-0x8da9eb6(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f844fb6: retq                      ;*ireturn
                                                ; - java.io.BufferedInputStream::read@71 (line 347)

  0x000000010f844fb7: lea    0x80(%rsp),%rax
  0x000000010f844fbf: mov    0x8(%rax),%rsi
  0x000000010f844fc3: mov    (%rsi),%rdx
  0x000000010f844fc6: and    $0x7,%rdx
  0x000000010f844fca: cmp    $0x5,%rdx
  0x000000010f844fce: je     0x000000010f844feb
  0x000000010f844fd4: mov    (%rax),%rdx
  0x000000010f844fd7: test   %rdx,%rdx
  0x000000010f844fda: je     0x000000010f844feb
  0x000000010f844fe0: lock cmpxchg %rdx,(%rsi)
  0x000000010f844fe5: jne    0x000000010f8451c6
  0x000000010f844feb: mov    0x64(%rsp),%eax
  0x000000010f844fef: add    $0xa0,%rsp
  0x000000010f844ff6: pop    %rbp
  0x000000010f844ff7: test   %eax,-0x8da9efd(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f844ffd: retq                      ;*ireturn
                                                ; - java.io.BufferedInputStream::read@109 (line 354)

  0x000000010f844ffe: mov    %rax,%rdx
  0x000000010f845001: lea    0x80(%rsp),%rax
  0x000000010f845009: mov    0x8(%rax),%rdi
  0x000000010f84500d: mov    (%rdi),%rsi
  0x000000010f845010: and    $0x7,%rsi
  0x000000010f845014: cmp    $0x5,%rsi
  0x000000010f845018: je     0x000000010f845035
  0x000000010f84501e: mov    (%rax),%rsi
  0x000000010f845021: test   %rsi,%rsi
  0x000000010f845024: je     0x000000010f845035
  0x000000010f84502a: lock cmpxchg %rsi,(%rdi)
  0x000000010f84502f: jne    0x000000010f8451dc
  0x000000010f845035: mov    %rdx,%rax
  0x000000010f845038: add    $0xa0,%rsp
  0x000000010f84503f: pop    %rbp
  0x000000010f845040: test   %eax,-0x8da9f46(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f845046: retq                      ;*ireturn
                                                ; - java.io.BufferedInputStream::read@87 (line 350)

  0x000000010f845047: lea    0x80(%rsp),%rax
  0x000000010f84504f: mov    0x8(%rax),%rsi
  0x000000010f845053: mov    (%rsi),%rdx
  0x000000010f845056: and    $0x7,%rdx
  0x000000010f84505a: cmp    $0x5,%rdx
  0x000000010f84505e: je     0x000000010f84507b
  0x000000010f845064: mov    (%rax),%rdx
  0x000000010f845067: test   %rdx,%rdx
  0x000000010f84506a: je     0x000000010f84507b
  0x000000010f845070: lock cmpxchg %rdx,(%rsi)
  0x000000010f845075: jne    0x000000010f8451f2
  0x000000010f84507b: mov    $0x0,%eax
  0x000000010f845080: add    $0xa0,%rsp
  0x000000010f845087: pop    %rbp
  0x000000010f845088: test   %eax,-0x8da9f8e(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f84508e: retq                      ;*ireturn
                                                ; - java.io.BufferedInputStream::read@35 (line 340)

  0x000000010f84508f: nop
  0x000000010f845090: jmpq   0x000000010f845217  ;   {no_reloc}
  0x000000010f845095: add    %al,(%rax)
  0x000000010f845097: add    %al,(%rax)
  0x000000010f845099: add    %ch,%cl
  0x000000010f84509b: (bad)  
  0x000000010f84509c: add    %eax,(%rax)
  0x000000010f84509e: add    %cl,-0x75(%rax)    ;*new  ; - java.io.BufferedInputStream::read@22 (line 338)

  0x000000010f8450a1: lock movabs $0x10edfc8d8,%rdi  ;   {metadata(method data for {method} {0x000000010eba3f20} 'read' '([BII)I' in 'java/io/BufferedInputStream')}
  0x000000010f8450ac: addq   $0x1,0x138(%rdi)
  0x000000010f8450b4: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.io.BufferedInputStream::read@26 (line 338)

  0x000000010f8450b7: mov    %rax,0x70(%rsp)
  0x000000010f8450bc: nop
  0x000000010f8450bd: nop
  0x000000010f8450be: nop
  0x000000010f8450bf: callq  0x000000010f7170a0  ; OopMap{[112]=Oop [136]=Oop off=1604}
                                                ;*invokespecial <init>
                                                ; - java.io.BufferedInputStream::read@26 (line 338)
                                                ;   {optimized virtual_call}
  0x000000010f8450c4: mov    0x70(%rsp),%rax
  0x000000010f8450c9: jmpq   0x000000010f84527f  ;*athrow
                                                ; - java.io.BufferedInputStream::read@29 (line 338)

  0x000000010f8450ce: xchg   %ax,%ax
  0x000000010f8450d0: jmpq   0x000000010f84523d  ;   {no_reloc}
  0x000000010f8450d5: add    %al,(%rax)
  0x000000010f8450d7: add    %al,(%rax)
  0x000000010f8450d9: add    %cl,-0x75(%rcx)
  0x000000010f8450dc: rex.RXB (bad) 
  0x000000010f8450de: lea    0x20(%rax),%rdi
  0x000000010f8450e2: cmp    0x70(%r15),%rdi
  0x000000010f8450e6: ja     0x000000010f845247
  0x000000010f8450ec: mov    %rdi,0x60(%r15)
  0x000000010f8450f0: mov    0xa8(%rdx),%rcx
  0x000000010f8450f7: mov    %rcx,(%rax)
  0x000000010f8450fa: mov    %rdx,%rcx
  0x000000010f8450fd: shr    $0x3,%rcx
  0x000000010f845101: mov    %ecx,0x8(%rax)
  0x000000010f845104: xor    %rcx,%rcx
  0x000000010f845107: mov    %ecx,0xc(%rax)
  0x000000010f84510a: xor    %rcx,%rcx
  0x000000010f84510d: mov    %rcx,0x10(%rax)
  0x000000010f845111: mov    %rcx,0x18(%rax)    ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read@1 (line 336)

  0x000000010f845115: mov    %rax,%rdx
  0x000000010f845118: movabs $0x10edfb710,%rsi  ;   {metadata(method data for {method} {0x000000010eba3950} 'getBufIfOpen' '()[B' in 'java/io/BufferedInputStream')}
  0x000000010f845122: addq   $0x1,0x128(%rsi)
  0x000000010f84512a: movabs $0x795968eb0,%rdx  ;   {oop("Stream closed")}
  0x000000010f845134: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)
                                                ; - java.io.BufferedInputStream::read@1 (line 336)

  0x000000010f845137: mov    %rax,0x78(%rsp)
  0x000000010f84513c: nop
  0x000000010f84513d: nop
  0x000000010f84513e: nop
  0x000000010f84513f: callq  0x000000010f7170a0  ; OopMap{[104]=Oop [120]=Oop [88]=Oop [136]=Oop off=1732}
                                                ;*invokespecial <init>
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)
                                                ; - java.io.BufferedInputStream::read@1 (line 336)
                                                ;   {optimized virtual_call}
  0x000000010f845144: mov    0x78(%rsp),%rax
  0x000000010f845149: jmpq   0x000000010f84527f
  0x000000010f84514e: mov    %rsi,0x8(%rsp)
  0x000000010f845153: mov    %rdi,(%rsp)
  0x000000010f845157: callq  0x000000010f7cfc60  ; OopMap{rsi=Oop [88]=Oop rdx=Oop [104]=Oop [136]=Oop off=1756}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::read@-1 (line 336)
                                                ;   {runtime_call}
  0x000000010f84515c: jmpq   0x000000010f844b8b
  0x000000010f845161: mov    %rdi,0x8(%rsp)
  0x000000010f845166: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f84516e: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [88]=Oop rdx=Oop [104]=Oop [136]=Oop off=1779}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::read@-1 (line 336)
                                                ;   {runtime_call}
  0x000000010f845173: jmpq   0x000000010f844bbd
  0x000000010f845178: mov    %rdi,0x8(%rsp)
  0x000000010f84517d: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f845185: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [88]=Oop rdx=Oop [104]=Oop [136]=Oop off=1802}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::getBufIfOpen@-1 (line 168)
                                                ; - java.io.BufferedInputStream::read@1 (line 336)
                                                ;   {runtime_call}
  0x000000010f84518a: jmpq   0x000000010f844c04
  0x000000010f84518f: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop [88]=Oop rdx=Oop [104]=Oop [136]=Oop off=1812}
                                                ;*arraylength
                                                ; - java.io.BufferedInputStream::read@13 (line 337)
                                                ;   {runtime_call}
  0x000000010f845194: callq  0x000000010f7cd0c0  ; OopMap{[104]=Oop [88]=Oop rdi=Oop [136]=Oop off=1817}
                                                ;*invokevirtual available
                                                ; - java.io.BufferedInputStream::read@101 (line 353)
                                                ;   {runtime_call}
  0x000000010f845199: mov    %rax,0x8(%rsp)
  0x000000010f84519e: movq   $0x6e,(%rsp)
  0x000000010f8451a6: callq  0x000000010f7d1a20  ; OopMap{[104]=Oop [88]=Oop [136]=Oop off=1835}
                                                ;*goto
                                                ; - java.io.BufferedInputStream::read@110 (line 355)
                                                ;   {runtime_call}
  0x000000010f8451ab: jmpq   0x000000010f844ee7
  0x000000010f8451b0: lea    0x80(%rsp),%rax
  0x000000010f8451b8: mov    %rax,(%rsp)
  0x000000010f8451bc: callq  0x000000010f7d00a0  ;   {runtime_call}
  0x000000010f8451c1: jmpq   0x000000010f844fa5
  0x000000010f8451c6: lea    0x80(%rsp),%rax
  0x000000010f8451ce: mov    %rax,(%rsp)
  0x000000010f8451d2: callq  0x000000010f7d00a0  ;   {runtime_call}
  0x000000010f8451d7: jmpq   0x000000010f844feb
  0x000000010f8451dc: lea    0x80(%rsp),%rax
  0x000000010f8451e4: mov    %rax,(%rsp)
  0x000000010f8451e8: callq  0x000000010f7d00a0  ;   {runtime_call}
  0x000000010f8451ed: jmpq   0x000000010f845035
  0x000000010f8451f2: lea    0x80(%rsp),%rax
  0x000000010f8451fa: mov    %rax,(%rsp)
  0x000000010f8451fe: callq  0x000000010f7d00a0  ;   {runtime_call}
  0x000000010f845203: jmpq   0x000000010f84507b
  0x000000010f845208: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f845212: mov    $0xa050f00,%eax
  0x000000010f845217: callq  0x000000010f7d08e0  ; OopMap{[136]=Oop off=1948}
                                                ;*new  ; - java.io.BufferedInputStream::read@22 (line 338)
                                                ;   {runtime_call}
  0x000000010f84521c: jmpq   0x000000010f845090
  0x000000010f845221: mov    %rdx,%rdx
  0x000000010f845224: callq  0x000000010f7cd560  ; OopMap{[136]=Oop off=1961}
                                                ;*new  ; - java.io.BufferedInputStream::read@22 (line 338)
                                                ;   {runtime_call}
  0x000000010f845229: jmpq   0x000000010f84509f
  0x000000010f84522e: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f845238: mov    $0xa050f00,%eax
  0x000000010f84523d: callq  0x000000010f7d08e0  ; OopMap{[88]=Oop [104]=Oop [136]=Oop off=1986}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read@1 (line 336)
                                                ;   {runtime_call}
  0x000000010f845242: jmpq   0x000000010f8450d0
  0x000000010f845247: mov    %rdx,%rdx
  0x000000010f84524a: callq  0x000000010f7cd820  ; OopMap{[104]=Oop [88]=Oop [136]=Oop off=1999}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read@1 (line 336)
                                                ;   {runtime_call}
  0x000000010f84524f: jmpq   0x000000010f845115
  0x000000010f845254: nop
  0x000000010f845255: nop
  0x000000010f845256: mov    0x2a8(%r15),%rax
  0x000000010f84525d: movabs $0x0,%r10
  0x000000010f845267: mov    %r10,0x2a8(%r15)
  0x000000010f84526e: movabs $0x0,%r10
  0x000000010f845278: mov    %r10,0x2b0(%r15)
  0x000000010f84527f: mov    %rax,%rbx
  0x000000010f845282: lea    0x80(%rsp),%rax
  0x000000010f84528a: mov    0x8(%rax),%rsi
  0x000000010f84528e: mov    (%rsi),%rdi
  0x000000010f845291: and    $0x7,%rdi
  0x000000010f845295: cmp    $0x5,%rdi
  0x000000010f845299: je     0x000000010f8452b6
  0x000000010f84529f: mov    (%rax),%rdi
  0x000000010f8452a2: test   %rdi,%rdi
  0x000000010f8452a5: je     0x000000010f8452b6
  0x000000010f8452ab: lock cmpxchg %rdi,(%rsi)
  0x000000010f8452b0: jne    0x000000010f8452c6
  0x000000010f8452b6: mov    %rbx,%rax
  0x000000010f8452b9: add    $0xa0,%rsp
  0x000000010f8452c0: pop    %rbp
  0x000000010f8452c1: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f8452c6: lea    0x80(%rsp),%rax
  0x000000010f8452ce: mov    %rax,(%rsp)
  0x000000010f8452d2: callq  0x000000010f7d00a0  ;   {runtime_call}
  0x000000010f8452d7: jmp    0x000000010f8452b6
  0x000000010f8452d9: hlt    
  0x000000010f8452da: hlt    
  0x000000010f8452db: hlt    
  0x000000010f8452dc: hlt    
  0x000000010f8452dd: hlt    
  0x000000010f8452de: hlt    
  0x000000010f8452df: hlt    
[Stub Code]
  0x000000010f8452e0: nop                       ;   {no_reloc}
  0x000000010f8452e1: nop
  0x000000010f8452e2: nop
  0x000000010f8452e3: nop
  0x000000010f8452e4: nop
  0x000000010f8452e5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f8452ef: jmpq   0x000000010f8452ef  ;   {runtime_call}
  0x000000010f8452f4: nop
  0x000000010f8452f5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f8452ff: jmpq   0x000000010f8452ff  ;   {runtime_call}
  0x000000010f845304: nop
  0x000000010f845305: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f84530f: jmpq   0x000000010f84530f  ;   {runtime_call}
  0x000000010f845314: nop
  0x000000010f845315: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f84531f: jmpq   0x000000010f84531f  ;   {runtime_call}
[Exception Handler]
  0x000000010f845324: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f845329: mov    %rsp,-0x28(%rsp)
  0x000000010f84532e: sub    $0x80,%rsp
  0x000000010f845335: mov    %rax,0x78(%rsp)
  0x000000010f84533a: mov    %rcx,0x70(%rsp)
  0x000000010f84533f: mov    %rdx,0x68(%rsp)
  0x000000010f845344: mov    %rbx,0x60(%rsp)
  0x000000010f845349: mov    %rbp,0x50(%rsp)
  0x000000010f84534e: mov    %rsi,0x48(%rsp)
  0x000000010f845353: mov    %rdi,0x40(%rsp)
  0x000000010f845358: mov    %r8,0x38(%rsp)
  0x000000010f84535d: mov    %r9,0x30(%rsp)
  0x000000010f845362: mov    %r10,0x28(%rsp)
  0x000000010f845367: mov    %r11,0x20(%rsp)
  0x000000010f84536c: mov    %r12,0x18(%rsp)
  0x000000010f845371: mov    %r13,0x10(%rsp)
  0x000000010f845376: mov    %r14,0x8(%rsp)
  0x000000010f84537b: mov    %r15,(%rsp)
  0x000000010f84537f: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f845389: movabs $0x10f845329,%rsi  ;   {internal_word}
  0x000000010f845393: mov    %rsp,%rdx
  0x000000010f845396: and    $0xfffffffffffffff0,%rsp
  0x000000010f84539a: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f84539f: hlt    
[Deopt Handler Code]
  0x000000010f8453a0: movabs $0x10f8453a0,%r10  ;   {section_word}
  0x000000010f8453aa: push   %r10
  0x000000010f8453ac: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f8453b1: hlt    
  0x000000010f8453b2: hlt    
  0x000000010f8453b3: hlt    
  0x000000010f8453b4: hlt    
  0x000000010f8453b5: hlt    
  0x000000010f8453b6: hlt    
  0x000000010f8453b7: hlt    
Decoding compiled method 0x000000010f843e90:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010eba3d00} 'read' '()I' in 'java/io/BufferedInputStream'
  #           [sp+0x90]  (sp of caller)
  0x000000010f844040: mov    0x8(%rsi),%r10d
  0x000000010f844044: shl    $0x3,%r10
  0x000000010f844048: cmp    %rax,%r10
  0x000000010f84404b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f844051: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f84405c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f844060: mov    %eax,-0x14000(%rsp)
  0x000000010f844067: push   %rbp
  0x000000010f844068: sub    $0x80,%rsp
  0x000000010f84406f: mov    %rsi,0x50(%rsp)
  0x000000010f844074: lea    0x60(%rsp),%rdi
  0x000000010f844079: mov    %rsi,0x8(%rdi)
  0x000000010f84407d: mov    (%rsi),%rax
  0x000000010f844080: mov    %rax,%rbx
  0x000000010f844083: and    $0x7,%rbx
  0x000000010f844087: cmp    $0x5,%rbx
  0x000000010f84408b: jne    0x000000010f844112
  0x000000010f844091: mov    0x8(%rsi),%ebx
  0x000000010f844094: shl    $0x3,%rbx
  0x000000010f844098: mov    0xa8(%rbx),%rbx
  0x000000010f84409f: or     %r15,%rbx
  0x000000010f8440a2: xor    %rax,%rbx
  0x000000010f8440a5: and    $0xffffffffffffff87,%rbx
  0x000000010f8440a9: je     0x000000010f84413a
  0x000000010f8440af: test   $0x7,%rbx
  0x000000010f8440b6: jne    0x000000010f8440ff
  0x000000010f8440b8: test   $0x300,%rbx
  0x000000010f8440bf: jne    0x000000010f8440de
  0x000000010f8440c1: and    $0x37f,%rax
  0x000000010f8440c8: mov    %rax,%rbx
  0x000000010f8440cb: or     %r15,%rbx
  0x000000010f8440ce: lock cmpxchg %rbx,(%rsi)
  0x000000010f8440d3: jne    0x000000010f8443c6
  0x000000010f8440d9: jmpq   0x000000010f84413a
  0x000000010f8440de: mov    0x8(%rsi),%ebx
  0x000000010f8440e1: shl    $0x3,%rbx
  0x000000010f8440e5: mov    0xa8(%rbx),%rbx
  0x000000010f8440ec: or     %r15,%rbx
  0x000000010f8440ef: lock cmpxchg %rbx,(%rsi)
  0x000000010f8440f4: jne    0x000000010f8443c6
  0x000000010f8440fa: jmpq   0x000000010f84413a
  0x000000010f8440ff: mov    0x8(%rsi),%ebx
  0x000000010f844102: shl    $0x3,%rbx
  0x000000010f844106: mov    0xa8(%rbx),%rbx
  0x000000010f84410d: lock cmpxchg %rbx,(%rsi)
  0x000000010f844112: mov    (%rsi),%rax
  0x000000010f844115: or     $0x1,%rax
  0x000000010f844119: mov    %rax,(%rdi)
  0x000000010f84411c: lock cmpxchg %rdi,(%rsi)
  0x000000010f844121: je     0x000000010f84413a
  0x000000010f844127: sub    %rsp,%rax
  0x000000010f84412a: and    $0xfffffffffffff007,%rax
  0x000000010f844131: mov    %rax,(%rdi)
  0x000000010f844134: jne    0x000000010f8443c6
  0x000000010f84413a: movabs $0x10edfc0c0,%rdi  ;   {metadata(method data for {method} {0x000000010eba3d00} 'read' '()I' in 'java/io/BufferedInputStream')}
  0x000000010f844144: mov    0xdc(%rdi),%ebx
  0x000000010f84414a: add    $0x8,%ebx
  0x000000010f84414d: mov    %ebx,0xdc(%rdi)
  0x000000010f844153: movabs $0x10eba3d00,%rdi  ;   {metadata({method} {0x000000010eba3d00} 'read' '()I' in 'java/io/BufferedInputStream')}
  0x000000010f84415d: and    $0x1ff8,%ebx
  0x000000010f844163: cmp    $0x0,%ebx
  0x000000010f844166: je     0x000000010f8443d9  ;*aload_0
                                                ; - java.io.BufferedInputStream::read@0 (line 264)

  0x000000010f84416c: mov    0x14(%rsi),%edi    ;*getfield pos
                                                ; - java.io.BufferedInputStream::read@1 (line 264)

  0x000000010f84416f: mov    0x10(%rsi),%ebx    ;*getfield count
                                                ; - java.io.BufferedInputStream::read@5 (line 264)

  0x000000010f844172: cmp    %ebx,%edi
  0x000000010f844174: movabs $0x10edfc0c0,%rdi  ;   {metadata(method data for {method} {0x000000010eba3d00} 'read' '()I' in 'java/io/BufferedInputStream')}
  0x000000010f84417e: movabs $0x108,%rbx
  0x000000010f844188: jl     0x000000010f844198
  0x000000010f84418e: movabs $0x118,%rbx
  0x000000010f844198: mov    (%rdi,%rbx,1),%rax
  0x000000010f84419c: lea    0x1(%rax),%rax
  0x000000010f8441a0: mov    %rax,(%rdi,%rbx,1)
  0x000000010f8441a4: jl     0x000000010f84420f  ;*if_icmplt
                                                ; - java.io.BufferedInputStream::read@8 (line 264)

  0x000000010f8441aa: mov    %rsi,%rdi
  0x000000010f8441ad: movabs $0x10edfc0c0,%rbx  ;   {metadata(method data for {method} {0x000000010eba3d00} 'read' '()I' in 'java/io/BufferedInputStream')}
  0x000000010f8441b7: addq   $0x1,0x128(%rbx)
  0x000000010f8441bf: mov    %rsi,%rdi
  0x000000010f8441c2: mov    %rdi,%rsi          ;*invokespecial fill
                                                ; - java.io.BufferedInputStream::read@12 (line 265)

  0x000000010f8441c5: nop
  0x000000010f8441c6: nop
  0x000000010f8441c7: callq  0x000000010f7170a0  ; OopMap{[80]=Oop [104]=Oop off=396}
                                                ;*invokespecial fill
                                                ; - java.io.BufferedInputStream::read@12 (line 265)
                                                ;   {optimized virtual_call}
  0x000000010f8441cc: mov    0x50(%rsp),%rsi
  0x000000010f8441d1: mov    0x14(%rsi),%eax    ;*getfield pos
                                                ; - java.io.BufferedInputStream::read@16 (line 266)

  0x000000010f8441d4: mov    0x10(%rsi),%edx    ;*getfield count
                                                ; - java.io.BufferedInputStream::read@20 (line 266)

  0x000000010f8441d7: cmp    %edx,%eax
  0x000000010f8441d9: movabs $0x10edfc0c0,%rax  ;   {metadata(method data for {method} {0x000000010eba3d00} 'read' '()I' in 'java/io/BufferedInputStream')}
  0x000000010f8441e3: movabs $0x138,%rdx
  0x000000010f8441ed: jl     0x000000010f8441fd
  0x000000010f8441f3: movabs $0x148,%rdx
  0x000000010f8441fd: mov    (%rax,%rdx,1),%rdi
  0x000000010f844201: lea    0x1(%rdi),%rdi
  0x000000010f844205: mov    %rdi,(%rax,%rdx,1)
  0x000000010f844209: jge    0x000000010f8442fc  ;*if_icmplt
                                                ; - java.io.BufferedInputStream::read@23 (line 266)

  0x000000010f84420f: mov    %rsi,%rax
  0x000000010f844212: movabs $0x10edfc0c0,%rdx  ;   {metadata(method data for {method} {0x000000010eba3d00} 'read' '()I' in 'java/io/BufferedInputStream')}
  0x000000010f84421c: addq   $0x1,0x158(%rdx)
  0x000000010f844224: movabs $0x10edfb710,%rax  ;   {metadata(method data for {method} {0x000000010eba3950} 'getBufIfOpen' '()[B' in 'java/io/BufferedInputStream')}
  0x000000010f84422e: mov    0xdc(%rax),%edx
  0x000000010f844234: add    $0x8,%edx
  0x000000010f844237: mov    %edx,0xdc(%rax)
  0x000000010f84423d: movabs $0x10eba3950,%rax  ;   {metadata({method} {0x000000010eba3950} 'getBufIfOpen' '()[B' in 'java/io/BufferedInputStream')}
  0x000000010f844247: and    $0x7ffff8,%edx
  0x000000010f84424d: cmp    $0x0,%edx
  0x000000010f844250: je     0x000000010f8443f0
  0x000000010f844256: mov    0x20(%rsi),%eax
  0x000000010f844259: shl    $0x3,%rax          ;*getfield buf
                                                ; - java.io.BufferedInputStream::getBufIfOpen@1 (line 168)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)

  0x000000010f84425d: cmp    $0x0,%rax
  0x000000010f844261: movabs $0x10edfb710,%rdx  ;   {metadata(method data for {method} {0x000000010eba3950} 'getBufIfOpen' '()[B' in 'java/io/BufferedInputStream')}
  0x000000010f84426b: movabs $0x108,%rdi
  0x000000010f844275: jne    0x000000010f844285
  0x000000010f84427b: movabs $0x118,%rdi
  0x000000010f844285: mov    (%rdx,%rdi,1),%rcx
  0x000000010f844289: lea    0x1(%rcx),%rcx
  0x000000010f84428d: mov    %rcx,(%rdx,%rdi,1)
  0x000000010f844291: je     0x000000010f844341  ;*ifnonnull
                                                ; - java.io.BufferedInputStream::getBufIfOpen@6 (line 169)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)

  0x000000010f844297: mov    0x14(%rsi),%edx    ;*getfield pos
                                                ; - java.io.BufferedInputStream::read@34 (line 269)

  0x000000010f84429a: mov    %rdx,%rdi
  0x000000010f84429d: inc    %edi
  0x000000010f84429f: mov    %edi,0x14(%rsi)    ;*putfield pos
                                                ; - java.io.BufferedInputStream::read@40 (line 269)

  0x000000010f8442a2: movslq %edx,%rsi
  0x000000010f8442a5: cmp    0xc(%rax),%edx     ; implicit exception: dispatches to 0x000000010f844407
  0x000000010f8442a8: jae    0x000000010f844411
  0x000000010f8442ae: movsbl 0x10(%rax,%rsi,1),%edx  ;*baload
                                                ; - java.io.BufferedInputStream::read@43 (line 269)

  0x000000010f8442b3: lea    0x60(%rsp),%rax
  0x000000010f8442b8: mov    0x8(%rax),%rdi
  0x000000010f8442bc: mov    (%rdi),%rsi
  0x000000010f8442bf: and    $0x7,%rsi
  0x000000010f8442c3: cmp    $0x5,%rsi
  0x000000010f8442c7: je     0x000000010f8442e4
  0x000000010f8442cd: mov    (%rax),%rsi
  0x000000010f8442d0: test   %rsi,%rsi
  0x000000010f8442d3: je     0x000000010f8442e4
  0x000000010f8442d9: lock cmpxchg %rsi,(%rdi)
  0x000000010f8442de: jne    0x000000010f84441a
  0x000000010f8442e4: and    $0xff,%edx
  0x000000010f8442ea: mov    %rdx,%rax
  0x000000010f8442ed: add    $0x80,%rsp
  0x000000010f8442f4: pop    %rbp
  0x000000010f8442f5: test   %eax,-0x8da91fb(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f8442fb: retq                      ;*ireturn
                                                ; - java.io.BufferedInputStream::read@48 (line 269)

  0x000000010f8442fc: lea    0x60(%rsp),%rax
  0x000000010f844301: mov    0x8(%rax),%rsi
  0x000000010f844305: mov    (%rsi),%rdx
  0x000000010f844308: and    $0x7,%rdx
  0x000000010f84430c: cmp    $0x5,%rdx
  0x000000010f844310: je     0x000000010f84432d
  0x000000010f844316: mov    (%rax),%rdx
  0x000000010f844319: test   %rdx,%rdx
  0x000000010f84431c: je     0x000000010f84432d
  0x000000010f844322: lock cmpxchg %rdx,(%rsi)
  0x000000010f844327: jne    0x000000010f84442d
  0x000000010f84432d: mov    $0xffffffff,%eax
  0x000000010f844332: add    $0x80,%rsp
  0x000000010f844339: pop    %rbp
  0x000000010f84433a: test   %eax,-0x8da9240(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f844340: retq                      ;*ireturn
                                                ; - java.io.BufferedInputStream::read@27 (line 267)

  0x000000010f844341: nopl   0x0(%rax)
  0x000000010f844348: jmpq   0x000000010f84444f  ;   {no_reloc}
  0x000000010f84434d: add    %al,(%rax)
  0x000000010f84434f: add    %al,(%rax)
  0x000000010f844351: add    %cl,-0x75(%rcx)
  0x000000010f844354: rex.RXB (bad) 
  0x000000010f844356: lea    0x20(%rax),%rdi
  0x000000010f84435a: cmp    0x70(%r15),%rdi
  0x000000010f84435e: ja     0x000000010f844459
  0x000000010f844364: mov    %rdi,0x60(%r15)
  0x000000010f844368: mov    0xa8(%rdx),%rcx
  0x000000010f84436f: mov    %rcx,(%rax)
  0x000000010f844372: mov    %rdx,%rcx
  0x000000010f844375: shr    $0x3,%rcx
  0x000000010f844379: mov    %ecx,0x8(%rax)
  0x000000010f84437c: xor    %rcx,%rcx
  0x000000010f84437f: mov    %ecx,0xc(%rax)
  0x000000010f844382: xor    %rcx,%rcx
  0x000000010f844385: mov    %rcx,0x10(%rax)
  0x000000010f844389: mov    %rcx,0x18(%rax)    ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)

  0x000000010f84438d: mov    %rax,%rdx
  0x000000010f844390: movabs $0x10edfb710,%rsi  ;   {metadata(method data for {method} {0x000000010eba3950} 'getBufIfOpen' '()[B' in 'java/io/BufferedInputStream')}
  0x000000010f84439a: addq   $0x1,0x128(%rsi)
  0x000000010f8443a2: movabs $0x795968eb0,%rdx  ;   {oop("Stream closed")}
  0x000000010f8443ac: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)

  0x000000010f8443af: mov    %rax,0x58(%rsp)
  0x000000010f8443b4: nop
  0x000000010f8443b5: nop
  0x000000010f8443b6: nop
  0x000000010f8443b7: callq  0x000000010f7170a0  ; OopMap{[88]=Oop [80]=Oop [104]=Oop off=892}
                                                ;*invokespecial <init>
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)
                                                ;   {optimized virtual_call}
  0x000000010f8443bc: mov    0x58(%rsp),%rax
  0x000000010f8443c1: jmpq   0x000000010f844491
  0x000000010f8443c6: mov    %rsi,0x8(%rsp)
  0x000000010f8443cb: mov    %rdi,(%rsp)
  0x000000010f8443cf: callq  0x000000010f7cfc60  ; OopMap{rsi=Oop [80]=Oop [104]=Oop off=916}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::read@-1 (line 264)
                                                ;   {runtime_call}
  0x000000010f8443d4: jmpq   0x000000010f84413a
  0x000000010f8443d9: mov    %rdi,0x8(%rsp)
  0x000000010f8443de: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f8443e6: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [80]=Oop [104]=Oop off=939}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::read@-1 (line 264)
                                                ;   {runtime_call}
  0x000000010f8443eb: jmpq   0x000000010f84416c
  0x000000010f8443f0: mov    %rax,0x8(%rsp)
  0x000000010f8443f5: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f8443fd: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [80]=Oop [104]=Oop off=962}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::getBufIfOpen@-1 (line 168)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)
                                                ;   {runtime_call}
  0x000000010f844402: jmpq   0x000000010f844256
  0x000000010f844407: callq  0x000000010f7cd0c0  ; OopMap{rax=Oop [104]=Oop off=972}
                                                ;*baload
                                                ; - java.io.BufferedInputStream::read@43 (line 269)
                                                ;   {runtime_call}
  0x000000010f84440c: callq  0x000000010f7cd0c0  ; OopMap{rax=Oop [104]=Oop off=977}
                                                ;*baload
                                                ; - java.io.BufferedInputStream::read@43 (line 269)
                                                ;   {runtime_call}
  0x000000010f844411: mov    %rdx,(%rsp)
  0x000000010f844415: callq  0x000000010f7cca00  ; OopMap{rax=Oop [104]=Oop off=986}
                                                ;*baload
                                                ; - java.io.BufferedInputStream::read@43 (line 269)
                                                ;   {runtime_call}
  0x000000010f84441a: lea    0x60(%rsp),%rax
  0x000000010f84441f: mov    %rax,(%rsp)
  0x000000010f844423: callq  0x000000010f7d00a0  ;   {runtime_call}
  0x000000010f844428: jmpq   0x000000010f8442e4
  0x000000010f84442d: lea    0x60(%rsp),%rax
  0x000000010f844432: mov    %rax,(%rsp)
  0x000000010f844436: callq  0x000000010f7d00a0  ;   {runtime_call}
  0x000000010f84443b: jmpq   0x000000010f84432d
  0x000000010f844440: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f84444a: mov    $0xa050f00,%eax
  0x000000010f84444f: callq  0x000000010f7d08e0  ; OopMap{[80]=Oop [104]=Oop off=1044}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)
                                                ;   {runtime_call}
  0x000000010f844454: jmpq   0x000000010f844348
  0x000000010f844459: mov    %rdx,%rdx
  0x000000010f84445c: callq  0x000000010f7cd820  ; OopMap{[80]=Oop [104]=Oop off=1057}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)
                                                ;   {runtime_call}
  0x000000010f844461: jmpq   0x000000010f84438d
  0x000000010f844466: nop
  0x000000010f844467: nop
  0x000000010f844468: mov    0x2a8(%r15),%rax
  0x000000010f84446f: movabs $0x0,%r10
  0x000000010f844479: mov    %r10,0x2a8(%r15)
  0x000000010f844480: movabs $0x0,%r10
  0x000000010f84448a: mov    %r10,0x2b0(%r15)
  0x000000010f844491: mov    %rax,%rbx
  0x000000010f844494: lea    0x60(%rsp),%rax
  0x000000010f844499: mov    0x8(%rax),%rsi
  0x000000010f84449d: mov    (%rsi),%rdi
  0x000000010f8444a0: and    $0x7,%rdi
  0x000000010f8444a4: cmp    $0x5,%rdi
  0x000000010f8444a8: je     0x000000010f8444c5
  0x000000010f8444ae: mov    (%rax),%rdi
  0x000000010f8444b1: test   %rdi,%rdi
  0x000000010f8444b4: je     0x000000010f8444c5
  0x000000010f8444ba: lock cmpxchg %rdi,(%rsi)
  0x000000010f8444bf: jne    0x000000010f8444d5
  0x000000010f8444c5: mov    %rbx,%rax
  0x000000010f8444c8: add    $0x80,%rsp
  0x000000010f8444cf: pop    %rbp
  0x000000010f8444d0: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f8444d5: lea    0x60(%rsp),%rax
  0x000000010f8444da: mov    %rax,(%rsp)
  0x000000010f8444de: callq  0x000000010f7d00a0  ;   {runtime_call}
  0x000000010f8444e3: jmp    0x000000010f8444c5
  0x000000010f8444e5: hlt    
  0x000000010f8444e6: hlt    
  0x000000010f8444e7: hlt    
  0x000000010f8444e8: hlt    
  0x000000010f8444e9: hlt    
  0x000000010f8444ea: hlt    
  0x000000010f8444eb: hlt    
  0x000000010f8444ec: hlt    
  0x000000010f8444ed: hlt    
  0x000000010f8444ee: hlt    
  0x000000010f8444ef: hlt    
  0x000000010f8444f0: hlt    
  0x000000010f8444f1: hlt    
  0x000000010f8444f2: hlt    
  0x000000010f8444f3: hlt    
  0x000000010f8444f4: hlt    
  0x000000010f8444f5: hlt    
  0x000000010f8444f6: hlt    
  0x000000010f8444f7: hlt    
  0x000000010f8444f8: hlt    
  0x000000010f8444f9: hlt    
  0x000000010f8444fa: hlt    
  0x000000010f8444fb: hlt    
  0x000000010f8444fc: hlt    
  0x000000010f8444fd: hlt    
  0x000000010f8444fe: hlt    
  0x000000010f8444ff: hlt    
[Stub Code]
  0x000000010f844500: nop                       ;   {no_reloc}
  0x000000010f844501: nop
  0x000000010f844502: nop
  0x000000010f844503: nop
  0x000000010f844504: nop
  0x000000010f844505: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f84450f: jmpq   0x000000010f84450f  ;   {runtime_call}
  0x000000010f844514: nop
  0x000000010f844515: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f84451f: jmpq   0x000000010f84451f  ;   {runtime_call}
[Exception Handler]
  0x000000010f844524: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f844529: mov    %rsp,-0x28(%rsp)
  0x000000010f84452e: sub    $0x80,%rsp
  0x000000010f844535: mov    %rax,0x78(%rsp)
  0x000000010f84453a: mov    %rcx,0x70(%rsp)
  0x000000010f84453f: mov    %rdx,0x68(%rsp)
  0x000000010f844544: mov    %rbx,0x60(%rsp)
  0x000000010f844549: mov    %rbp,0x50(%rsp)
  0x000000010f84454e: mov    %rsi,0x48(%rsp)
  0x000000010f844553: mov    %rdi,0x40(%rsp)
  0x000000010f844558: mov    %r8,0x38(%rsp)
  0x000000010f84455d: mov    %r9,0x30(%rsp)
  0x000000010f844562: mov    %r10,0x28(%rsp)
  0x000000010f844567: mov    %r11,0x20(%rsp)
  0x000000010f84456c: mov    %r12,0x18(%rsp)
  0x000000010f844571: mov    %r13,0x10(%rsp)
  0x000000010f844576: mov    %r14,0x8(%rsp)
  0x000000010f84457b: mov    %r15,(%rsp)
  0x000000010f84457f: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f844589: movabs $0x10f844529,%rsi  ;   {internal_word}
  0x000000010f844593: mov    %rsp,%rdx
  0x000000010f844596: and    $0xfffffffffffffff0,%rsp
  0x000000010f84459a: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f84459f: hlt    
[Deopt Handler Code]
  0x000000010f8445a0: movabs $0x10f8445a0,%r10  ;   {section_word}
  0x000000010f8445aa: push   %r10
  0x000000010f8445ac: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f8445b1: hlt    
  0x000000010f8445b2: hlt    
  0x000000010f8445b3: hlt    
  0x000000010f8445b4: hlt    
  0x000000010f8445b5: hlt    
  0x000000010f8445b6: hlt    
  0x000000010f8445b7: hlt    
Decoding compiled method 0x000000010f8487d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010edfa7b8} 'readShort' '()S' in 'java/io/DataInputStream'
  #           [sp+0x50]  (sp of caller)
  0x000000010f848960: mov    0x8(%rsi),%r10d
  0x000000010f848964: shl    $0x3,%r10
  0x000000010f848968: cmp    %rax,%r10
  0x000000010f84896b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f848971: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f84897c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f848980: mov    %eax,-0x14000(%rsp)
  0x000000010f848987: push   %rbp
  0x000000010f848988: sub    $0x40,%rsp
  0x000000010f84898c: movabs $0x10edfcd48,%rdi  ;   {metadata(method data for {method} {0x000000010edfa7b8} 'readShort' '()S' in 'java/io/DataInputStream')}
  0x000000010f848996: mov    0xdc(%rdi),%ebx
  0x000000010f84899c: add    $0x8,%ebx
  0x000000010f84899f: mov    %ebx,0xdc(%rdi)
  0x000000010f8489a5: movabs $0x10edfa7b8,%rdi  ;   {metadata({method} {0x000000010edfa7b8} 'readShort' '()S' in 'java/io/DataInputStream')}
  0x000000010f8489af: and    $0x1ff8,%ebx
  0x000000010f8489b5: cmp    $0x0,%ebx
  0x000000010f8489b8: je     0x000000010f848bce  ;*aload_0
                                                ; - java.io.DataInputStream::readShort@0 (line 312)

  0x000000010f8489be: mov    0xc(%rsi),%edi
  0x000000010f8489c1: shl    $0x3,%rdi          ;*getfield in
                                                ; - java.io.DataInputStream::readShort@1 (line 312)

  0x000000010f8489c5: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x000000010f848be5
  0x000000010f8489c8: mov    %rdi,%rbx
  0x000000010f8489cb: movabs $0x10edfcd48,%rax  ;   {metadata(method data for {method} {0x000000010edfa7b8} 'readShort' '()S' in 'java/io/DataInputStream')}
  0x000000010f8489d5: mov    0x8(%rbx),%ebx
  0x000000010f8489d8: shl    $0x3,%rbx
  0x000000010f8489dc: cmp    0x110(%rax),%rbx
  0x000000010f8489e3: jne    0x000000010f8489f2
  0x000000010f8489e5: addq   $0x1,0x118(%rax)
  0x000000010f8489ed: jmpq   0x000000010f848a58
  0x000000010f8489f2: cmp    0x120(%rax),%rbx
  0x000000010f8489f9: jne    0x000000010f848a08
  0x000000010f8489fb: addq   $0x1,0x128(%rax)
  0x000000010f848a03: jmpq   0x000000010f848a58
  0x000000010f848a08: cmpq   $0x0,0x110(%rax)
  0x000000010f848a13: jne    0x000000010f848a2c
  0x000000010f848a15: mov    %rbx,0x110(%rax)
  0x000000010f848a1c: movq   $0x1,0x118(%rax)
  0x000000010f848a27: jmpq   0x000000010f848a58
  0x000000010f848a2c: cmpq   $0x0,0x120(%rax)
  0x000000010f848a37: jne    0x000000010f848a50
  0x000000010f848a39: mov    %rbx,0x120(%rax)
  0x000000010f848a40: movq   $0x1,0x128(%rax)
  0x000000010f848a4b: jmpq   0x000000010f848a58
  0x000000010f848a50: addq   $0x1,0x108(%rax)
  0x000000010f848a58: mov    %rsi,0x20(%rsp)
  0x000000010f848a5d: mov    %rdi,%rsi          ;*invokevirtual read
                                                ; - java.io.DataInputStream::readShort@4 (line 312)

  0x000000010f848a60: nop
  0x000000010f848a61: nop
  0x000000010f848a62: nop
  0x000000010f848a63: nop
  0x000000010f848a64: nop
  0x000000010f848a65: movabs $0xffffffffffffffff,%rax
  0x000000010f848a6f: callq  0x000000010f7172e0  ; OopMap{[32]=Oop off=276}
                                                ;*invokevirtual read
                                                ; - java.io.DataInputStream::readShort@4 (line 312)
                                                ;   {virtual_call}
  0x000000010f848a74: mov    0x20(%rsp),%rsi
  0x000000010f848a79: mov    0xc(%rsi),%esi
  0x000000010f848a7c: shl    $0x3,%rsi          ;*getfield in
                                                ; - java.io.DataInputStream::readShort@9 (line 313)

  0x000000010f848a80: cmp    (%rsi),%rax        ;*invokevirtual read
                                                ; - java.io.DataInputStream::readShort@12 (line 313)
                                                ; implicit exception: dispatches to 0x000000010f848bea
  0x000000010f848a83: mov    %rsi,%rdi
  0x000000010f848a86: movabs $0x10edfcd48,%rbx  ;   {metadata(method data for {method} {0x000000010edfa7b8} 'readShort' '()S' in 'java/io/DataInputStream')}
  0x000000010f848a90: mov    0x8(%rdi),%edi
  0x000000010f848a93: shl    $0x3,%rdi
  0x000000010f848a97: cmp    0x140(%rbx),%rdi
  0x000000010f848a9e: jne    0x000000010f848aad
  0x000000010f848aa0: addq   $0x1,0x148(%rbx)
  0x000000010f848aa8: jmpq   0x000000010f848b13
  0x000000010f848aad: cmp    0x150(%rbx),%rdi
  0x000000010f848ab4: jne    0x000000010f848ac3
  0x000000010f848ab6: addq   $0x1,0x158(%rbx)
  0x000000010f848abe: jmpq   0x000000010f848b13
  0x000000010f848ac3: cmpq   $0x0,0x140(%rbx)
  0x000000010f848ace: jne    0x000000010f848ae7
  0x000000010f848ad0: mov    %rdi,0x140(%rbx)
  0x000000010f848ad7: movq   $0x1,0x148(%rbx)
  0x000000010f848ae2: jmpq   0x000000010f848b13
  0x000000010f848ae7: cmpq   $0x0,0x150(%rbx)
  0x000000010f848af2: jne    0x000000010f848b0b
  0x000000010f848af4: mov    %rdi,0x150(%rbx)
  0x000000010f848afb: movq   $0x1,0x158(%rbx)
  0x000000010f848b06: jmpq   0x000000010f848b13
  0x000000010f848b0b: addq   $0x1,0x138(%rbx)
  0x000000010f848b13: mov    %eax,0x28(%rsp)
  0x000000010f848b17: nop
  0x000000010f848b18: nop
  0x000000010f848b19: nop
  0x000000010f848b1a: nop
  0x000000010f848b1b: nop
  0x000000010f848b1c: nop
  0x000000010f848b1d: movabs $0xffffffffffffffff,%rax
  0x000000010f848b27: callq  0x000000010f7172e0  ; OopMap{off=460}
                                                ;*invokevirtual read
                                                ; - java.io.DataInputStream::readShort@12 (line 313)
                                                ;   {virtual_call}
  0x000000010f848b2c: mov    0x28(%rsp),%edx
  0x000000010f848b30: or     %rax,%rdx
  0x000000010f848b33: cmp    $0x0,%edx
  0x000000010f848b36: movabs $0x10edfcd48,%rdx  ;   {metadata(method data for {method} {0x000000010edfa7b8} 'readShort' '()S' in 'java/io/DataInputStream')}
  0x000000010f848b40: movabs $0x168,%rsi
  0x000000010f848b4a: jge    0x000000010f848b5a
  0x000000010f848b50: movabs $0x178,%rsi
  0x000000010f848b5a: mov    (%rdx,%rsi,1),%rdi
  0x000000010f848b5e: lea    0x1(%rdi),%rdi
  0x000000010f848b62: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f848b66: jl     0x000000010f848b8d  ;*ifge
                                                ; - java.io.DataInputStream::readShort@19 (line 314)

  0x000000010f848b6c: mov    0x28(%rsp),%edx
  0x000000010f848b70: shl    $0x8,%edx
  0x000000010f848b73: add    %eax,%edx
  0x000000010f848b75: movswl %dx,%edx
  0x000000010f848b78: shl    $0x10,%edx
  0x000000010f848b7b: sar    $0x10,%edx
  0x000000010f848b7e: mov    %rdx,%rax
  0x000000010f848b81: add    $0x40,%rsp
  0x000000010f848b85: pop    %rbp
  0x000000010f848b86: test   %eax,-0x8dada8c(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f848b8c: retq                      ;*ireturn
                                                ; - java.io.DataInputStream::readShort@39 (line 316)

  0x000000010f848b8d: data16 xchg %ax,%ax
  0x000000010f848b90: jmpq   0x000000010f848bfe  ;   {no_reloc}
  0x000000010f848b95: add    %al,(%rax)
  0x000000010f848b97: add    %al,(%rax)
  0x000000010f848b99: add    %ch,%cl
  0x000000010f848b9b: imul   $0x8b480000,(%rax),%eax  ;*new
                                                ; - java.io.DataInputStream::readShort@22 (line 315)

  0x000000010f848ba1: lock movabs $0x10edfcd48,%rdi  ;   {metadata(method data for {method} {0x000000010edfa7b8} 'readShort' '()S' in 'java/io/DataInputStream')}
  0x000000010f848bac: addq   $0x1,0x188(%rdi)
  0x000000010f848bb4: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.io.DataInputStream::readShort@26 (line 315)

  0x000000010f848bb7: mov    %rax,0x30(%rsp)
  0x000000010f848bbc: nop
  0x000000010f848bbd: nop
  0x000000010f848bbe: nop
  0x000000010f848bbf: callq  0x000000010f7170a0  ; OopMap{[48]=Oop off=612}
                                                ;*invokespecial <init>
                                                ; - java.io.DataInputStream::readShort@26 (line 315)
                                                ;   {optimized virtual_call}
  0x000000010f848bc4: mov    0x30(%rsp),%rax
  0x000000010f848bc9: jmpq   0x000000010f848c3d
  0x000000010f848bce: mov    %rdi,0x8(%rsp)
  0x000000010f848bd3: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f848bdb: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=640}
                                                ;*synchronization entry
                                                ; - java.io.DataInputStream::readShort@-1 (line 312)
                                                ;   {runtime_call}
  0x000000010f848be0: jmpq   0x000000010f8489be
  0x000000010f848be5: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop rdi=Oop off=650}
                                                ;*invokevirtual read
                                                ; - java.io.DataInputStream::readShort@4 (line 312)
                                                ;   {runtime_call}
  0x000000010f848bea: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop off=655}
                                                ;*invokevirtual read
                                                ; - java.io.DataInputStream::readShort@12 (line 313)
                                                ;   {runtime_call}
  0x000000010f848bef: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f848bf9: mov    $0xa050f00,%eax
  0x000000010f848bfe: callq  0x000000010f7d08e0  ; OopMap{off=675}
                                                ;*new  ; - java.io.DataInputStream::readShort@22 (line 315)
                                                ;   {runtime_call}
  0x000000010f848c03: jmp    0x000000010f848b90
  0x000000010f848c05: nop
  0x000000010f848c06: nop
  0x000000010f848c07: nop
  0x000000010f848c08: mov    %rdx,%rdx
  0x000000010f848c0b: callq  0x000000010f7cd560  ; OopMap{off=688}
                                                ;*new  ; - java.io.DataInputStream::readShort@22 (line 315)
                                                ;   {runtime_call}
  0x000000010f848c10: jmp    0x000000010f848b9f
  0x000000010f848c12: nop
  0x000000010f848c13: nop
  0x000000010f848c14: mov    0x2a8(%r15),%rax
  0x000000010f848c1b: movabs $0x0,%r10
  0x000000010f848c25: mov    %r10,0x2a8(%r15)
  0x000000010f848c2c: movabs $0x0,%r10
  0x000000010f848c36: mov    %r10,0x2b0(%r15)
  0x000000010f848c3d: add    $0x40,%rsp
  0x000000010f848c41: pop    %rbp
  0x000000010f848c42: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f848c47: hlt    
  0x000000010f848c48: hlt    
  0x000000010f848c49: hlt    
  0x000000010f848c4a: hlt    
  0x000000010f848c4b: hlt    
  0x000000010f848c4c: hlt    
  0x000000010f848c4d: hlt    
  0x000000010f848c4e: hlt    
  0x000000010f848c4f: hlt    
  0x000000010f848c50: hlt    
  0x000000010f848c51: hlt    
  0x000000010f848c52: hlt    
  0x000000010f848c53: hlt    
  0x000000010f848c54: hlt    
  0x000000010f848c55: hlt    
  0x000000010f848c56: hlt    
  0x000000010f848c57: hlt    
  0x000000010f848c58: hlt    
  0x000000010f848c59: hlt    
  0x000000010f848c5a: hlt    
  0x000000010f848c5b: hlt    
  0x000000010f848c5c: hlt    
  0x000000010f848c5d: hlt    
  0x000000010f848c5e: hlt    
  0x000000010f848c5f: hlt    
[Stub Code]
  0x000000010f848c60: nop                       ;   {no_reloc}
  0x000000010f848c61: nop
  0x000000010f848c62: nop
  0x000000010f848c63: nop
  0x000000010f848c64: nop
  0x000000010f848c65: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f848c6f: jmpq   0x000000010f848c6f  ;   {runtime_call}
  0x000000010f848c74: nop
  0x000000010f848c75: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f848c7f: jmpq   0x000000010f848c7f  ;   {runtime_call}
  0x000000010f848c84: nop
  0x000000010f848c85: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f848c8f: jmpq   0x000000010f848c8f  ;   {runtime_call}
[Exception Handler]
  0x000000010f848c94: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f848c99: mov    %rsp,-0x28(%rsp)
  0x000000010f848c9e: sub    $0x80,%rsp
  0x000000010f848ca5: mov    %rax,0x78(%rsp)
  0x000000010f848caa: mov    %rcx,0x70(%rsp)
  0x000000010f848caf: mov    %rdx,0x68(%rsp)
  0x000000010f848cb4: mov    %rbx,0x60(%rsp)
  0x000000010f848cb9: mov    %rbp,0x50(%rsp)
  0x000000010f848cbe: mov    %rsi,0x48(%rsp)
  0x000000010f848cc3: mov    %rdi,0x40(%rsp)
  0x000000010f848cc8: mov    %r8,0x38(%rsp)
  0x000000010f848ccd: mov    %r9,0x30(%rsp)
  0x000000010f848cd2: mov    %r10,0x28(%rsp)
  0x000000010f848cd7: mov    %r11,0x20(%rsp)
  0x000000010f848cdc: mov    %r12,0x18(%rsp)
  0x000000010f848ce1: mov    %r13,0x10(%rsp)
  0x000000010f848ce6: mov    %r14,0x8(%rsp)
  0x000000010f848ceb: mov    %r15,(%rsp)
  0x000000010f848cef: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f848cf9: movabs $0x10f848c99,%rsi  ;   {internal_word}
  0x000000010f848d03: mov    %rsp,%rdx
  0x000000010f848d06: and    $0xfffffffffffffff0,%rsp
  0x000000010f848d0a: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f848d0f: hlt    
[Deopt Handler Code]
  0x000000010f848d10: movabs $0x10f848d10,%r10  ;   {section_word}
  0x000000010f848d1a: push   %r10
  0x000000010f848d1c: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f848d21: hlt    
  0x000000010f848d22: hlt    
  0x000000010f848d23: hlt    
  0x000000010f848d24: hlt    
  0x000000010f848d25: hlt    
  0x000000010f848d26: hlt    
  0x000000010f848d27: hlt    
Decoding compiled method 0x000000010f848f50:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010eb4f7e0} 'put' '(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/HashMap'
  # this:     rsi:rsi   = 'java/util/HashMap'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    rcx:rcx   = 'java/lang/Object'
  #           [sp+0x90]  (sp of caller)
  0x000000010f8490e0: mov    0x8(%rsi),%r10d
  0x000000010f8490e4: shl    $0x3,%r10
  0x000000010f8490e8: cmp    %rax,%r10
  0x000000010f8490eb: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f8490f1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f8490fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f849100: mov    %eax,-0x14000(%rsp)
  0x000000010f849107: push   %rbp
  0x000000010f849108: sub    $0x80,%rsp
  0x000000010f84910f: movabs $0x10edfd630,%rdi  ;   {metadata(method data for {method} {0x000000010eb4f7e0} 'put' '(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000010f849119: mov    0xdc(%rdi),%ebx
  0x000000010f84911f: add    $0x8,%ebx
  0x000000010f849122: mov    %ebx,0xdc(%rdi)
  0x000000010f849128: movabs $0x10eb4f7e0,%rdi  ;   {metadata({method} {0x000000010eb4f7e0} 'put' '(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000010f849132: and    $0x1ff8,%ebx
  0x000000010f849138: cmp    $0x0,%ebx
  0x000000010f84913b: je     0x000000010f84936b  ;*aload_0
                                                ; - java.util.HashMap::put@0 (line 612)

  0x000000010f849141: movabs $0x10edfd630,%rdi  ;   {metadata(method data for {method} {0x000000010eb4f7e0} 'put' '(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000010f84914b: addq   $0x1,0x108(%rdi)
  0x000000010f849153: movabs $0x10ec3b368,%rdi  ;   {metadata(method data for {method} {0x000000010eb4ecf0} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x000000010f84915d: mov    0xdc(%rdi),%ebx
  0x000000010f849163: add    $0x8,%ebx
  0x000000010f849166: mov    %ebx,0xdc(%rdi)
  0x000000010f84916c: movabs $0x10eb4ecf0,%rdi  ;   {metadata({method} {0x000000010eb4ecf0} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x000000010f849176: and    $0x7ffff8,%ebx
  0x000000010f84917c: cmp    $0x0,%ebx
  0x000000010f84917f: je     0x000000010f849382
  0x000000010f849185: cmp    $0x0,%rdx
  0x000000010f849189: movabs $0x10ec3b368,%rdi  ;   {metadata(method data for {method} {0x000000010eb4ecf0} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x000000010f849193: movabs $0x108,%rbx
  0x000000010f84919d: jne    0x000000010f8491ad
  0x000000010f8491a3: movabs $0x118,%rbx
  0x000000010f8491ad: mov    (%rdi,%rbx,1),%rax
  0x000000010f8491b1: lea    0x1(%rax),%rax
  0x000000010f8491b5: mov    %rax,(%rdi,%rbx,1)
  0x000000010f8491b9: jne    0x000000010f8491e8  ;*ifnonnull
                                                ; - java.util.HashMap::hash@1 (line 339)
                                                ; - java.util.HashMap::put@2 (line 612)

  0x000000010f8491bf: movabs $0x10ec3b368,%rdi  ;   {metadata(method data for {method} {0x000000010eb4ecf0} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x000000010f8491c9: incl   0x128(%rdi)
  0x000000010f8491cf: mov    $0x0,%edi
  0x000000010f8491d4: mov    %rcx,0x68(%rsp)
  0x000000010f8491d9: mov    %rdx,0x60(%rsp)
  0x000000010f8491de: mov    %rsi,0x58(%rsp)
  0x000000010f8491e3: jmpq   0x000000010f8492a8  ;*goto
                                                ; - java.util.HashMap::hash@5 (line 339)
                                                ; - java.util.HashMap::put@2 (line 612)

  0x000000010f8491e8: mov    %rcx,0x68(%rsp)
  0x000000010f8491ed: mov    %rsi,0x58(%rsp)
  0x000000010f8491f2: cmp    (%rdx),%rax        ; implicit exception: dispatches to 0x000000010f849399
  0x000000010f8491f5: mov    %rdx,%rdi
  0x000000010f8491f8: movabs $0x10ec3b368,%rbx  ;   {metadata(method data for {method} {0x000000010eb4ecf0} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x000000010f849202: mov    0x8(%rdi),%edi
  0x000000010f849205: shl    $0x3,%rdi
  0x000000010f849209: cmp    0x148(%rbx),%rdi
  0x000000010f849210: jne    0x000000010f84921f
  0x000000010f849212: addq   $0x1,0x150(%rbx)
  0x000000010f84921a: jmpq   0x000000010f849285
  0x000000010f84921f: cmp    0x158(%rbx),%rdi
  0x000000010f849226: jne    0x000000010f849235
  0x000000010f849228: addq   $0x1,0x160(%rbx)
  0x000000010f849230: jmpq   0x000000010f849285
  0x000000010f849235: cmpq   $0x0,0x148(%rbx)
  0x000000010f849240: jne    0x000000010f849259
  0x000000010f849242: mov    %rdi,0x148(%rbx)
  0x000000010f849249: movq   $0x1,0x150(%rbx)
  0x000000010f849254: jmpq   0x000000010f849285
  0x000000010f849259: cmpq   $0x0,0x158(%rbx)
  0x000000010f849264: jne    0x000000010f84927d
  0x000000010f849266: mov    %rdi,0x158(%rbx)
  0x000000010f84926d: movq   $0x1,0x160(%rbx)
  0x000000010f849278: jmpq   0x000000010f849285
  0x000000010f84927d: addq   $0x1,0x140(%rbx)
  0x000000010f849285: mov    %rdx,%rsi          ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; - java.util.HashMap::put@2 (line 612)

  0x000000010f849288: mov    %rdx,0x60(%rsp)
  0x000000010f84928d: movabs $0xffffffffffffffff,%rax
  0x000000010f849297: callq  0x000000010f7172e0  ; OopMap{[88]=Oop [96]=Oop [104]=Oop off=444}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; - java.util.HashMap::put@2 (line 612)
                                                ;   {virtual_call}
  0x000000010f84929c: mov    %rax,%rdx
  0x000000010f84929f: shr    $0x10,%edx
  0x000000010f8492a2: xor    %rax,%rdx
  0x000000010f8492a5: mov    %rdx,%rdi          ;*ireturn
                                                ; - java.util.HashMap::hash@19 (line 339)
                                                ; - java.util.HashMap::put@2 (line 612)

  0x000000010f8492a8: mov    0x68(%rsp),%r8
  0x000000010f8492ad: mov    0x60(%rsp),%rcx
  0x000000010f8492b2: mov    0x58(%rsp),%rsi
  0x000000010f8492b7: mov    %rsi,%rdx
  0x000000010f8492ba: movabs $0x10edfd630,%r9   ;   {metadata(method data for {method} {0x000000010eb4f7e0} 'put' '(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000010f8492c4: mov    0x8(%rdx),%edx
  0x000000010f8492c7: shl    $0x3,%rdx
  0x000000010f8492cb: cmp    0x120(%r9),%rdx
  0x000000010f8492d2: jne    0x000000010f8492e1
  0x000000010f8492d4: addq   $0x1,0x128(%r9)
  0x000000010f8492dc: jmpq   0x000000010f849347
  0x000000010f8492e1: cmp    0x130(%r9),%rdx
  0x000000010f8492e8: jne    0x000000010f8492f7
  0x000000010f8492ea: addq   $0x1,0x138(%r9)
  0x000000010f8492f2: jmpq   0x000000010f849347
  0x000000010f8492f7: cmpq   $0x0,0x120(%r9)
  0x000000010f849302: jne    0x000000010f84931b
  0x000000010f849304: mov    %rdx,0x120(%r9)
  0x000000010f84930b: movq   $0x1,0x128(%r9)
  0x000000010f849316: jmpq   0x000000010f849347
  0x000000010f84931b: cmpq   $0x0,0x130(%r9)
  0x000000010f849326: jne    0x000000010f84933f
  0x000000010f849328: mov    %rdx,0x130(%r9)
  0x000000010f84932f: movq   $0x1,0x138(%r9)
  0x000000010f84933a: jmpq   0x000000010f849347
  0x000000010f84933f: addq   $0x1,0x118(%r9)
  0x000000010f849347: mov    %rdi,%rdx
  0x000000010f84934a: mov    $0x0,%r9d
  0x000000010f849350: mov    $0x1,%edi          ;*invokevirtual putVal
                                                ; - java.util.HashMap::put@9 (line 612)

  0x000000010f849355: nop
  0x000000010f849356: nop
  0x000000010f849357: callq  0x000000010f7170a0  ; OopMap{off=636}
                                                ;*invokevirtual putVal
                                                ; - java.util.HashMap::put@9 (line 612)
                                                ;   {optimized virtual_call}
  0x000000010f84935c: add    $0x80,%rsp
  0x000000010f849363: pop    %rbp
  0x000000010f849364: test   %eax,-0x8dae26a(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f84936a: retq   
  0x000000010f84936b: mov    %rdi,0x8(%rsp)
  0x000000010f849370: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f849378: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop rdx=Oop rcx=Oop off=669}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::put@-1 (line 612)
                                                ;   {runtime_call}
  0x000000010f84937d: jmpq   0x000000010f849141
  0x000000010f849382: mov    %rdi,0x8(%rsp)
  0x000000010f849387: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f84938f: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop rdx=Oop rcx=Oop off=692}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::hash@-1 (line 339)
                                                ; - java.util.HashMap::put@2 (line 612)
                                                ;   {runtime_call}
  0x000000010f849394: jmpq   0x000000010f849185
  0x000000010f849399: callq  0x000000010f7cd0c0  ; OopMap{rdx=Oop [104]=Oop [88]=Oop off=702}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; - java.util.HashMap::put@2 (line 612)
                                                ;   {runtime_call}
  0x000000010f84939e: nop
  0x000000010f84939f: nop
  0x000000010f8493a0: mov    0x2a8(%r15),%rax
  0x000000010f8493a7: movabs $0x0,%r10
  0x000000010f8493b1: mov    %r10,0x2a8(%r15)
  0x000000010f8493b8: movabs $0x0,%r10
  0x000000010f8493c2: mov    %r10,0x2b0(%r15)
  0x000000010f8493c9: add    $0x80,%rsp
  0x000000010f8493d0: pop    %rbp
  0x000000010f8493d1: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f8493d6: hlt    
  0x000000010f8493d7: hlt    
  0x000000010f8493d8: hlt    
  0x000000010f8493d9: hlt    
  0x000000010f8493da: hlt    
  0x000000010f8493db: hlt    
  0x000000010f8493dc: hlt    
  0x000000010f8493dd: hlt    
  0x000000010f8493de: hlt    
  0x000000010f8493df: hlt    
[Stub Code]
  0x000000010f8493e0: nop                       ;   {no_reloc}
  0x000000010f8493e1: nop
  0x000000010f8493e2: nop
  0x000000010f8493e3: nop
  0x000000010f8493e4: nop
  0x000000010f8493e5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f8493ef: jmpq   0x000000010f8493ef  ;   {runtime_call}
  0x000000010f8493f4: nop
  0x000000010f8493f5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f8493ff: jmpq   0x000000010f8493ff  ;   {runtime_call}
[Exception Handler]
  0x000000010f849404: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f849409: mov    %rsp,-0x28(%rsp)
  0x000000010f84940e: sub    $0x80,%rsp
  0x000000010f849415: mov    %rax,0x78(%rsp)
  0x000000010f84941a: mov    %rcx,0x70(%rsp)
  0x000000010f84941f: mov    %rdx,0x68(%rsp)
  0x000000010f849424: mov    %rbx,0x60(%rsp)
  0x000000010f849429: mov    %rbp,0x50(%rsp)
  0x000000010f84942e: mov    %rsi,0x48(%rsp)
  0x000000010f849433: mov    %rdi,0x40(%rsp)
  0x000000010f849438: mov    %r8,0x38(%rsp)
  0x000000010f84943d: mov    %r9,0x30(%rsp)
  0x000000010f849442: mov    %r10,0x28(%rsp)
  0x000000010f849447: mov    %r11,0x20(%rsp)
  0x000000010f84944c: mov    %r12,0x18(%rsp)
  0x000000010f849451: mov    %r13,0x10(%rsp)
  0x000000010f849456: mov    %r14,0x8(%rsp)
  0x000000010f84945b: mov    %r15,(%rsp)
  0x000000010f84945f: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f849469: movabs $0x10f849409,%rsi  ;   {internal_word}
  0x000000010f849473: mov    %rsp,%rdx
  0x000000010f849476: and    $0xfffffffffffffff0,%rsp
  0x000000010f84947a: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f84947f: hlt    
[Deopt Handler Code]
  0x000000010f849480: movabs $0x10f849480,%r10  ;   {section_word}
  0x000000010f84948a: push   %r10
  0x000000010f84948c: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f849491: hlt    
  0x000000010f849492: hlt    
  0x000000010f849493: hlt    
  0x000000010f849494: hlt    
  0x000000010f849495: hlt    
  0x000000010f849496: hlt    
  0x000000010f849497: hlt    
Decoding compiled method 0x000000010f849650:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010eba3e08} 'read1' '([BII)I' in 'java/io/BufferedInputStream'
  # this:     rsi:rsi   = 'java/io/BufferedInputStream'
  # parm0:    rdx:rdx   = '[B'
  # parm1:    rcx       = int
  # parm2:    r8        = int
  #           [sp+0xa0]  (sp of caller)
  0x000000010f849860: mov    0x8(%rsi),%r10d
  0x000000010f849864: shl    $0x3,%r10
  0x000000010f849868: cmp    %rax,%r10
  0x000000010f84986b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f849871: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f84987c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f849880: mov    %eax,-0x14000(%rsp)
  0x000000010f849887: push   %rbp
  0x000000010f849888: sub    $0x90,%rsp
  0x000000010f84988f: mov    %rsi,0x50(%rsp)
  0x000000010f849894: mov    %rdx,0x60(%rsp)
  0x000000010f849899: mov    %ecx,0x5c(%rsp)
  0x000000010f84989d: mov    %r8d,0x58(%rsp)
  0x000000010f8498a2: movabs $0x10edfc640,%rdi  ;   {metadata(method data for {method} {0x000000010eba3e08} 'read1' '([BII)I' in 'java/io/BufferedInputStream')}
  0x000000010f8498ac: mov    0xdc(%rdi),%ebx
  0x000000010f8498b2: add    $0x8,%ebx
  0x000000010f8498b5: mov    %ebx,0xdc(%rdi)
  0x000000010f8498bb: movabs $0x10eba3e08,%rdi  ;   {metadata({method} {0x000000010eba3e08} 'read1' '([BII)I' in 'java/io/BufferedInputStream')}
  0x000000010f8498c5: and    $0x1ff8,%ebx
  0x000000010f8498cb: cmp    $0x0,%ebx
  0x000000010f8498ce: je     0x000000010f849f21  ;*aload_0
                                                ; - java.io.BufferedInputStream::read1@0 (line 277)

  0x000000010f8498d4: mov    0x10(%rsi),%edi    ;*getfield count
                                                ; - java.io.BufferedInputStream::read1@1 (line 277)

  0x000000010f8498d7: mov    0x14(%rsi),%ebx    ;*getfield pos
                                                ; - java.io.BufferedInputStream::read1@5 (line 277)

  0x000000010f8498da: sub    %ebx,%edi
  0x000000010f8498dc: cmp    $0x0,%edi
  0x000000010f8498df: movabs $0x10edfc640,%rbx  ;   {metadata(method data for {method} {0x000000010eba3e08} 'read1' '([BII)I' in 'java/io/BufferedInputStream')}
  0x000000010f8498e9: movabs $0x108,%rax
  0x000000010f8498f3: jg     0x000000010f849903
  0x000000010f8498f9: movabs $0x118,%rax
  0x000000010f849903: mov    (%rbx,%rax,1),%r9
  0x000000010f849907: lea    0x1(%r9),%r9
  0x000000010f84990b: mov    %r9,(%rbx,%rax,1)
  0x000000010f84990f: jg     0x000000010f849a85  ;*ifgt
                                                ; - java.io.BufferedInputStream::read1@13 (line 278)

  0x000000010f849915: mov    %rsi,%rdi
  0x000000010f849918: movabs $0x10edfc640,%rbx  ;   {metadata(method data for {method} {0x000000010eba3e08} 'read1' '([BII)I' in 'java/io/BufferedInputStream')}
  0x000000010f849922: addq   $0x1,0x128(%rbx)
  0x000000010f84992a: movabs $0x10edfb710,%rdi  ;   {metadata(method data for {method} {0x000000010eba3950} 'getBufIfOpen' '()[B' in 'java/io/BufferedInputStream')}
  0x000000010f849934: mov    0xdc(%rdi),%ebx
  0x000000010f84993a: add    $0x8,%ebx
  0x000000010f84993d: mov    %ebx,0xdc(%rdi)
  0x000000010f849943: movabs $0x10eba3950,%rdi  ;   {metadata({method} {0x000000010eba3950} 'getBufIfOpen' '()[B' in 'java/io/BufferedInputStream')}
  0x000000010f84994d: and    $0x7ffff8,%ebx
  0x000000010f849953: cmp    $0x0,%ebx
  0x000000010f849956: je     0x000000010f849f38
  0x000000010f84995c: mov    0x20(%rsi),%edi
  0x000000010f84995f: shl    $0x3,%rdi          ;*getfield buf
                                                ; - java.io.BufferedInputStream::getBufIfOpen@1 (line 168)
                                                ; - java.io.BufferedInputStream::read1@18 (line 283)

  0x000000010f849963: cmp    $0x0,%rdi
  0x000000010f849967: movabs $0x10edfb710,%rbx  ;   {metadata(method data for {method} {0x000000010eba3950} 'getBufIfOpen' '()[B' in 'java/io/BufferedInputStream')}
  0x000000010f849971: movabs $0x108,%rax
  0x000000010f84997b: jne    0x000000010f84998b
  0x000000010f849981: movabs $0x118,%rax
  0x000000010f84998b: mov    (%rbx,%rax,1),%r9
  0x000000010f84998f: lea    0x1(%r9),%r9
  0x000000010f849993: mov    %r9,(%rbx,%rax,1)
  0x000000010f849997: je     0x000000010f849e9e  ;*ifnonnull
                                                ; - java.io.BufferedInputStream::getBufIfOpen@6 (line 169)
                                                ; - java.io.BufferedInputStream::read1@18 (line 283)

  0x000000010f84999d: mov    0xc(%rdi),%edi     ;*arraylength
                                                ; - java.io.BufferedInputStream::read1@21 (line 283)
                                                ; implicit exception: dispatches to 0x000000010f849f4f
  0x000000010f8499a0: cmp    %edi,%r8d
  0x000000010f8499a3: movabs $0x10edfc640,%rdi  ;   {metadata(method data for {method} {0x000000010eba3e08} 'read1' '([BII)I' in 'java/io/BufferedInputStream')}
  0x000000010f8499ad: movabs $0x138,%rbx
  0x000000010f8499b7: jl     0x000000010f8499c7
  0x000000010f8499bd: movabs $0x148,%rbx
  0x000000010f8499c7: mov    (%rdi,%rbx,1),%rax
  0x000000010f8499cb: lea    0x1(%rax),%rax
  0x000000010f8499cf: mov    %rax,(%rdi,%rbx,1)
  0x000000010f8499d3: jl     0x000000010f849a15  ;*if_icmplt
                                                ; - java.io.BufferedInputStream::read1@22 (line 283)

  0x000000010f8499d9: mov    0x18(%rsi),%edi    ;*getfield markpos
                                                ; - java.io.BufferedInputStream::read1@26 (line 283)

  0x000000010f8499dc: cmp    $0x0,%edi
  0x000000010f8499df: movabs $0x10edfc640,%rdi  ;   {metadata(method data for {method} {0x000000010eba3e08} 'read1' '([BII)I' in 'java/io/BufferedInputStream')}
  0x000000010f8499e9: movabs $0x158,%rbx
  0x000000010f8499f3: jge    0x000000010f849a03
  0x000000010f8499f9: movabs $0x168,%rbx
  0x000000010f849a03: mov    (%rdi,%rbx,1),%rax
  0x000000010f849a07: lea    0x1(%rax),%rax
  0x000000010f849a0b: mov    %rax,(%rdi,%rbx,1)
  0x000000010f849a0f: jl     0x000000010f849b65  ;*ifge
                                                ; - java.io.BufferedInputStream::read1@29 (line 283)

  0x000000010f849a15: mov    %rsi,%rdi
  0x000000010f849a18: movabs $0x10edfc640,%rbx  ;   {metadata(method data for {method} {0x000000010eba3e08} 'read1' '([BII)I' in 'java/io/BufferedInputStream')}
  0x000000010f849a22: addq   $0x1,0x1b8(%rbx)
  0x000000010f849a2a: mov    %rsi,%rdi
  0x000000010f849a2d: mov    %rdi,%rsi          ;*invokespecial fill
                                                ; - java.io.BufferedInputStream::read1@44 (line 286)

  0x000000010f849a30: nop
  0x000000010f849a31: nop
  0x000000010f849a32: nop
  0x000000010f849a33: nop
  0x000000010f849a34: nop
  0x000000010f849a35: nop
  0x000000010f849a36: nop
  0x000000010f849a37: callq  0x000000010f7170a0  ; OopMap{[80]=Oop [96]=Oop off=476}
                                                ;*invokespecial fill
                                                ; - java.io.BufferedInputStream::read1@44 (line 286)
                                                ;   {optimized virtual_call}
  0x000000010f849a3c: mov    0x50(%rsp),%rsi
  0x000000010f849a41: mov    0x10(%rsi),%edx    ;*getfield count
                                                ; - java.io.BufferedInputStream::read1@48 (line 287)

  0x000000010f849a44: mov    0x14(%rsi),%ecx    ;*getfield pos
                                                ; - java.io.BufferedInputStream::read1@52 (line 287)

  0x000000010f849a47: sub    %ecx,%edx
  0x000000010f849a49: cmp    $0x0,%edx
  0x000000010f849a4c: movabs $0x10edfc640,%rcx  ;   {metadata(method data for {method} {0x000000010eba3e08} 'read1' '([BII)I' in 'java/io/BufferedInputStream')}
  0x000000010f849a56: movabs $0x1c8,%r8
  0x000000010f849a60: jg     0x000000010f849a70
  0x000000010f849a66: movabs $0x1d8,%r8
  0x000000010f849a70: mov    (%rcx,%r8,1),%rdi
  0x000000010f849a74: lea    0x1(%rdi),%rdi
  0x000000010f849a78: mov    %rdi,(%rcx,%r8,1)
  0x000000010f849a7c: jle    0x000000010f849d80  ;*ifgt
                                                ; - java.io.BufferedInputStream::read1@60 (line 288)

  0x000000010f849a82: mov    %rdx,%rdi          ;*iload
                                                ; - java.io.BufferedInputStream::read1@65 (line 290)

  0x000000010f849a85: cmp    0x58(%rsp),%edi
  0x000000010f849a89: movabs $0x10edfc640,%rdx  ;   {metadata(method data for {method} {0x000000010eba3e08} 'read1' '([BII)I' in 'java/io/BufferedInputStream')}
  0x000000010f849a93: movabs $0x1e8,%rcx
  0x000000010f849a9d: jge    0x000000010f849aad
  0x000000010f849aa3: movabs $0x1f8,%rcx
  0x000000010f849aad: mov    (%rdx,%rcx,1),%r8
  0x000000010f849ab1: lea    0x1(%r8),%r8
  0x000000010f849ab5: mov    %r8,(%rdx,%rcx,1)
  0x000000010f849ab9: jge    0x000000010f849ad4  ;*if_icmpge
                                                ; - java.io.BufferedInputStream::read1@68 (line 290)

  0x000000010f849abf: movabs $0x10edfc640,%rdx  ;   {metadata(method data for {method} {0x000000010eba3e08} 'read1' '([BII)I' in 'java/io/BufferedInputStream')}
  0x000000010f849ac9: incl   0x208(%rdx)
  0x000000010f849acf: jmpq   0x000000010f849ad8  ;*goto
                                                ; - java.io.BufferedInputStream::read1@73 (line 290)

  0x000000010f849ad4: mov    0x58(%rsp),%edi    ;*istore
                                                ; - java.io.BufferedInputStream::read1@77 (line 290)

  0x000000010f849ad8: mov    %rsi,%rdx
  0x000000010f849adb: movabs $0x10edfc640,%rcx  ;   {metadata(method data for {method} {0x000000010eba3e08} 'read1' '([BII)I' in 'java/io/BufferedInputStream')}
  0x000000010f849ae5: addq   $0x1,0x220(%rcx)
  0x000000010f849aed: movabs $0x10edfb710,%rdx  ;   {metadata(method data for {method} {0x000000010eba3950} 'getBufIfOpen' '()[B' in 'java/io/BufferedInputStream')}
  0x000000010f849af7: mov    0xdc(%rdx),%ecx
  0x000000010f849afd: add    $0x8,%ecx
  0x000000010f849b00: mov    %ecx,0xdc(%rdx)
  0x000000010f849b06: movabs $0x10eba3950,%rdx  ;   {metadata({method} {0x000000010eba3950} 'getBufIfOpen' '()[B' in 'java/io/BufferedInputStream')}
  0x000000010f849b10: and    $0x7ffff8,%ecx
  0x000000010f849b16: cmp    $0x0,%ecx
  0x000000010f849b19: je     0x000000010f849f54
  0x000000010f849b1f: mov    0x20(%rsi),%ebx
  0x000000010f849b22: shl    $0x3,%rbx          ;*getfield buf
                                                ; - java.io.BufferedInputStream::getBufIfOpen@1 (line 168)
                                                ; - java.io.BufferedInputStream::read1@80 (line 291)

  0x000000010f849b26: cmp    $0x0,%rbx
  0x000000010f849b2a: movabs $0x10edfb710,%rdx  ;   {metadata(method data for {method} {0x000000010eba3950} 'getBufIfOpen' '()[B' in 'java/io/BufferedInputStream')}
  0x000000010f849b34: movabs $0x108,%rcx
  0x000000010f849b3e: jne    0x000000010f849b4e
  0x000000010f849b44: movabs $0x118,%rcx
  0x000000010f849b4e: mov    (%rdx,%rcx,1),%r8
  0x000000010f849b52: lea    0x1(%r8),%r8
  0x000000010f849b56: mov    %r8,(%rdx,%rcx,1)
  0x000000010f849b5a: jne    0x000000010f849cb3
  0x000000010f849b60: jmpq   0x000000010f849e16  ;*ifnonnull
                                                ; - java.io.BufferedInputStream::getBufIfOpen@6 (line 169)
                                                ; - java.io.BufferedInputStream::read1@80 (line 291)

  0x000000010f849b65: mov    %rsi,%rdx
  0x000000010f849b68: movabs $0x10edfc640,%rcx  ;   {metadata(method data for {method} {0x000000010eba3e08} 'read1' '([BII)I' in 'java/io/BufferedInputStream')}
  0x000000010f849b72: addq   $0x1,0x178(%rcx)
  0x000000010f849b7a: movabs $0x10ee1a250,%rdx  ;   {metadata(method data for {method} {0x000000010eba38a0} 'getInIfOpen' '()Ljava/io/InputStream;' in 'java/io/BufferedInputStream')}
  0x000000010f849b84: mov    0xdc(%rdx),%ecx
  0x000000010f849b8a: add    $0x8,%ecx
  0x000000010f849b8d: mov    %ecx,0xdc(%rdx)
  0x000000010f849b93: movabs $0x10eba38a0,%rdx  ;   {metadata({method} {0x000000010eba38a0} 'getInIfOpen' '()Ljava/io/InputStream;' in 'java/io/BufferedInputStream')}
  0x000000010f849b9d: and    $0x7ffff8,%ecx
  0x000000010f849ba3: cmp    $0x0,%ecx
  0x000000010f849ba6: je     0x000000010f849f6b
  0x000000010f849bac: mov    0xc(%rsi),%esi
  0x000000010f849baf: shl    $0x3,%rsi          ;*getfield in
                                                ; - java.io.BufferedInputStream::getInIfOpen@1 (line 157)
                                                ; - java.io.BufferedInputStream::read1@33 (line 284)

  0x000000010f849bb3: cmp    $0x0,%rsi
  0x000000010f849bb7: movabs $0x10ee1a250,%rdx  ;   {metadata(method data for {method} {0x000000010eba38a0} 'getInIfOpen' '()Ljava/io/InputStream;' in 'java/io/BufferedInputStream')}
  0x000000010f849bc1: movabs $0x108,%rcx
  0x000000010f849bcb: jne    0x000000010f849bdb
  0x000000010f849bd1: movabs $0x118,%rcx
  0x000000010f849bdb: mov    (%rdx,%rcx,1),%r8
  0x000000010f849bdf: lea    0x1(%r8),%r8
  0x000000010f849be3: mov    %r8,(%rdx,%rcx,1)
  0x000000010f849be7: je     0x000000010f849d94  ;*ifnonnull
                                                ; - java.io.BufferedInputStream::getInIfOpen@6 (line 158)
                                                ; - java.io.BufferedInputStream::read1@33 (line 284)

  0x000000010f849bed: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x000000010f849f82
  0x000000010f849bf0: mov    %rsi,%rdx
  0x000000010f849bf3: movabs $0x10edfc640,%rcx  ;   {metadata(method data for {method} {0x000000010eba3e08} 'read1' '([BII)I' in 'java/io/BufferedInputStream')}
  0x000000010f849bfd: mov    0x8(%rdx),%edx
  0x000000010f849c00: shl    $0x3,%rdx
  0x000000010f849c04: cmp    0x190(%rcx),%rdx
  0x000000010f849c0b: jne    0x000000010f849c1a
  0x000000010f849c0d: addq   $0x1,0x198(%rcx)
  0x000000010f849c15: jmpq   0x000000010f849c80
  0x000000010f849c1a: cmp    0x1a0(%rcx),%rdx
  0x000000010f849c21: jne    0x000000010f849c30
  0x000000010f849c23: addq   $0x1,0x1a8(%rcx)
  0x000000010f849c2b: jmpq   0x000000010f849c80
  0x000000010f849c30: cmpq   $0x0,0x190(%rcx)
  0x000000010f849c3b: jne    0x000000010f849c54
  0x000000010f849c3d: mov    %rdx,0x190(%rcx)
  0x000000010f849c44: movq   $0x1,0x198(%rcx)
  0x000000010f849c4f: jmpq   0x000000010f849c80
  0x000000010f849c54: cmpq   $0x0,0x1a0(%rcx)
  0x000000010f849c5f: jne    0x000000010f849c78
  0x000000010f849c61: mov    %rdx,0x1a0(%rcx)
  0x000000010f849c68: movq   $0x1,0x1a8(%rcx)
  0x000000010f849c73: jmpq   0x000000010f849c80
  0x000000010f849c78: addq   $0x1,0x188(%rcx)
  0x000000010f849c80: mov    0x60(%rsp),%rdx
  0x000000010f849c85: mov    0x5c(%rsp),%ecx
  0x000000010f849c89: mov    0x58(%rsp),%r8d    ;*invokevirtual read
                                                ; - java.io.BufferedInputStream::read1@39 (line 284)

  0x000000010f849c8e: nop
  0x000000010f849c8f: nop
  0x000000010f849c90: nop
  0x000000010f849c91: nop
  0x000000010f849c92: nop
  0x000000010f849c93: nop
  0x000000010f849c94: nop
  0x000000010f849c95: movabs $0xffffffffffffffff,%rax
  0x000000010f849c9f: callq  0x000000010f7172e0  ; OopMap{off=1092}
                                                ;*invokevirtual read
                                                ; - java.io.BufferedInputStream::read1@39 (line 284)
                                                ;   {virtual_call}
  0x000000010f849ca4: add    $0x90,%rsp
  0x000000010f849cab: pop    %rbp
  0x000000010f849cac: test   %eax,-0x8daebb2(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f849cb2: retq                      ;*ireturn
                                                ; - java.io.BufferedInputStream::read1@42 (line 284)

  0x000000010f849cb3: mov    0x14(%rsi),%edx    ;*getfield pos
                                                ; - java.io.BufferedInputStream::read1@84 (line 291)

  0x000000010f849cb6: movabs $0x10edfc640,%rcx  ;   {metadata(method data for {method} {0x000000010eba3e08} 'read1' '([BII)I' in 'java/io/BufferedInputStream')}
  0x000000010f849cc0: addq   $0x1,0x230(%rcx)
  0x000000010f849cc8: mov    %rbx,%rsi
  0x000000010f849ccb: mov    0x60(%rsp),%rcx
  0x000000010f849cd0: mov    0x5c(%rsp),%r8d
  0x000000010f849cd5: mov    %rdi,%r9
  0x000000010f849cd8: mov    %edi,0x68(%rsp)
  0x000000010f849cdc: test   %rsi,%rsi
  0x000000010f849cdf: je     0x000000010f849f87
  0x000000010f849ce5: test   %rcx,%rcx
  0x000000010f849ce8: je     0x000000010f849f87
  0x000000010f849cee: test   %edx,%edx
  0x000000010f849cf0: jl     0x000000010f849f87
  0x000000010f849cf6: test   %r8d,%r8d
  0x000000010f849cf9: jl     0x000000010f849f87
  0x000000010f849cff: lea    (%rdx,%r9,1),%rdi
  0x000000010f849d03: cmp    0xc(%rsi),%edi
  0x000000010f849d06: ja     0x000000010f849f87
  0x000000010f849d0c: lea    (%r8,%r9,1),%rdi
  0x000000010f849d10: cmp    0xc(%rcx),%edi
  0x000000010f849d13: ja     0x000000010f849f87
  0x000000010f849d19: test   %r9d,%r9d
  0x000000010f849d1c: jl     0x000000010f849f87
  0x000000010f849d22: je     0x000000010f849d5e
  0x000000010f849d28: movslq %edx,%rdx
  0x000000010f849d2b: movslq %r8d,%r8
  0x000000010f849d2e: lea    0x10(%rsi,%rdx,1),%rdi
  0x000000010f849d33: lea    0x10(%rcx,%r8,1),%rsi
  0x000000010f849d38: mov    %r9,%rdx
  0x000000010f849d3b: test   $0xf,%esp
  0x000000010f849d41: je     0x000000010f849d59
  0x000000010f849d47: sub    $0x8,%rsp
  0x000000010f849d4b: callq  Stub::jbyte_arraycopy  ;   {runtime_call}
  0x000000010f849d50: add    $0x8,%rsp
  0x000000010f849d54: jmpq   0x000000010f849d5e
  0x000000010f849d59: callq  Stub::jbyte_arraycopy  ;*invokestatic arraycopy
                                                ; - java.io.BufferedInputStream::read1@91 (line 291)
                                                ;   {runtime_call}
  0x000000010f849d5e: mov    0x50(%rsp),%rsi
  0x000000010f849d63: mov    0x14(%rsi),%eax    ;*getfield pos
                                                ; - java.io.BufferedInputStream::read1@96 (line 292)

  0x000000010f849d66: add    0x68(%rsp),%eax
  0x000000010f849d6a: mov    %eax,0x14(%rsi)    ;*putfield pos
                                                ; - java.io.BufferedInputStream::read1@102 (line 292)

  0x000000010f849d6d: mov    0x68(%rsp),%eax
  0x000000010f849d71: add    $0x90,%rsp
  0x000000010f849d78: pop    %rbp
  0x000000010f849d79: test   %eax,-0x8daec7f(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f849d7f: retq                      ;*ireturn
                                                ; - java.io.BufferedInputStream::read1@107 (line 293)

  0x000000010f849d80: mov    $0xffffffff,%eax
  0x000000010f849d85: add    $0x90,%rsp
  0x000000010f849d8c: pop    %rbp
  0x000000010f849d8d: test   %eax,-0x8daec93(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f849d93: retq                      ;*ireturn
                                                ; - java.io.BufferedInputStream::read1@64 (line 288)

  0x000000010f849d94: nopl   0x0(%rax)
  0x000000010f849d98: jmpq   0x000000010f849fa0  ;   {no_reloc}
  0x000000010f849d9d: add    %al,(%rax)
  0x000000010f849d9f: add    %al,(%rax)
  0x000000010f849da1: add    %cl,-0x75(%rcx)
  0x000000010f849da4: rex.RXB (bad) 
  0x000000010f849da6: lea    0x20(%rax),%rdi
  0x000000010f849daa: cmp    0x70(%r15),%rdi
  0x000000010f849dae: ja     0x000000010f849faa
  0x000000010f849db4: mov    %rdi,0x60(%r15)
  0x000000010f849db8: mov    0xa8(%rdx),%rcx
  0x000000010f849dbf: mov    %rcx,(%rax)
  0x000000010f849dc2: mov    %rdx,%rcx
  0x000000010f849dc5: shr    $0x3,%rcx
  0x000000010f849dc9: mov    %ecx,0x8(%rax)
  0x000000010f849dcc: xor    %rcx,%rcx
  0x000000010f849dcf: mov    %ecx,0xc(%rax)
  0x000000010f849dd2: xor    %rcx,%rcx
  0x000000010f849dd5: mov    %rcx,0x10(%rax)
  0x000000010f849dd9: mov    %rcx,0x18(%rax)    ;*new  ; - java.io.BufferedInputStream::getInIfOpen@9 (line 159)
                                                ; - java.io.BufferedInputStream::read1@33 (line 284)

  0x000000010f849ddd: mov    %rax,%rdx
  0x000000010f849de0: movabs $0x10ee1a250,%rsi  ;   {metadata(method data for {method} {0x000000010eba38a0} 'getInIfOpen' '()Ljava/io/InputStream;' in 'java/io/BufferedInputStream')}
  0x000000010f849dea: addq   $0x1,0x128(%rsi)
  0x000000010f849df2: movabs $0x795968eb0,%rdx  ;   {oop("Stream closed")}
  0x000000010f849dfc: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.io.BufferedInputStream::getInIfOpen@15 (line 159)
                                                ; - java.io.BufferedInputStream::read1@33 (line 284)

  0x000000010f849dff: mov    %rax,0x70(%rsp)
  0x000000010f849e04: nop
  0x000000010f849e05: nop
  0x000000010f849e06: nop
  0x000000010f849e07: callq  0x000000010f7170a0  ; OopMap{[96]=Oop [112]=Oop off=1452}
                                                ;*invokespecial <init>
                                                ; - java.io.BufferedInputStream::getInIfOpen@15 (line 159)
                                                ; - java.io.BufferedInputStream::read1@33 (line 284)
                                                ;   {optimized virtual_call}
  0x000000010f849e0c: mov    0x70(%rsp),%rax
  0x000000010f849e11: jmpq   0x000000010f84a02e  ;*athrow
                                                ; - java.io.BufferedInputStream::getInIfOpen@18 (line 159)
                                                ; - java.io.BufferedInputStream::read1@33 (line 284)

  0x000000010f849e16: mov    %edi,0x68(%rsp)
  0x000000010f849e1a: nopw   0x0(%rax,%rax,1)
  0x000000010f849e20: jmpq   0x000000010f849fc6  ;   {no_reloc}
  0x000000010f849e25: add    %al,(%rax)
  0x000000010f849e27: add    %al,(%rax)
  0x000000010f849e29: add    %cl,-0x75(%rcx)
  0x000000010f849e2c: rex.RXB (bad) 
  0x000000010f849e2e: lea    0x20(%rax),%rdi
  0x000000010f849e32: cmp    0x70(%r15),%rdi
  0x000000010f849e36: ja     0x000000010f849fd0
  0x000000010f849e3c: mov    %rdi,0x60(%r15)
  0x000000010f849e40: mov    0xa8(%rdx),%rcx
  0x000000010f849e47: mov    %rcx,(%rax)
  0x000000010f849e4a: mov    %rdx,%rcx
  0x000000010f849e4d: shr    $0x3,%rcx
  0x000000010f849e51: mov    %ecx,0x8(%rax)
  0x000000010f849e54: xor    %rcx,%rcx
  0x000000010f849e57: mov    %ecx,0xc(%rax)
  0x000000010f849e5a: xor    %rcx,%rcx
  0x000000010f849e5d: mov    %rcx,0x10(%rax)
  0x000000010f849e61: mov    %rcx,0x18(%rax)    ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read1@80 (line 291)

  0x000000010f849e65: mov    %rax,%rdx
  0x000000010f849e68: movabs $0x10edfb710,%rsi  ;   {metadata(method data for {method} {0x000000010eba3950} 'getBufIfOpen' '()[B' in 'java/io/BufferedInputStream')}
  0x000000010f849e72: addq   $0x1,0x128(%rsi)
  0x000000010f849e7a: movabs $0x795968eb0,%rdx  ;   {oop("Stream closed")}
  0x000000010f849e84: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)
                                                ; - java.io.BufferedInputStream::read1@80 (line 291)

  0x000000010f849e87: mov    %rax,0x78(%rsp)
  0x000000010f849e8c: nop
  0x000000010f849e8d: nop
  0x000000010f849e8e: nop
  0x000000010f849e8f: callq  0x000000010f7170a0  ; OopMap{[96]=Oop [120]=Oop [80]=Oop off=1588}
                                                ;*invokespecial <init>
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)
                                                ; - java.io.BufferedInputStream::read1@80 (line 291)
                                                ;   {optimized virtual_call}
  0x000000010f849e94: mov    0x78(%rsp),%rax
  0x000000010f849e99: jmpq   0x000000010f84a02e  ;*athrow
                                                ; - java.io.BufferedInputStream::getBufIfOpen@18 (line 170)
                                                ; - java.io.BufferedInputStream::read1@80 (line 291)

  0x000000010f849e9e: xchg   %ax,%ax
  0x000000010f849ea0: jmpq   0x000000010f849fec  ;   {no_reloc}
  0x000000010f849ea5: add    %al,(%rax)
  0x000000010f849ea7: add    %al,(%rax)
  0x000000010f849ea9: add    %cl,-0x75(%rcx)
  0x000000010f849eac: rex.RXB (bad) 
  0x000000010f849eae: lea    0x20(%rax),%rdi
  0x000000010f849eb2: cmp    0x70(%r15),%rdi
  0x000000010f849eb6: ja     0x000000010f849ff6
  0x000000010f849ebc: mov    %rdi,0x60(%r15)
  0x000000010f849ec0: mov    0xa8(%rdx),%rcx
  0x000000010f849ec7: mov    %rcx,(%rax)
  0x000000010f849eca: mov    %rdx,%rcx
  0x000000010f849ecd: shr    $0x3,%rcx
  0x000000010f849ed1: mov    %ecx,0x8(%rax)
  0x000000010f849ed4: xor    %rcx,%rcx
  0x000000010f849ed7: mov    %ecx,0xc(%rax)
  0x000000010f849eda: xor    %rcx,%rcx
  0x000000010f849edd: mov    %rcx,0x10(%rax)
  0x000000010f849ee1: mov    %rcx,0x18(%rax)    ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read1@18 (line 283)

  0x000000010f849ee5: mov    %rax,%rdx
  0x000000010f849ee8: movabs $0x10edfb710,%rsi  ;   {metadata(method data for {method} {0x000000010eba3950} 'getBufIfOpen' '()[B' in 'java/io/BufferedInputStream')}
  0x000000010f849ef2: addq   $0x1,0x128(%rsi)
  0x000000010f849efa: movabs $0x795968eb0,%rdx  ;   {oop("Stream closed")}
  0x000000010f849f04: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)
                                                ; - java.io.BufferedInputStream::read1@18 (line 283)

  0x000000010f849f07: mov    %rax,0x80(%rsp)
  0x000000010f849f0f: callq  0x000000010f7170a0  ; OopMap{[96]=Oop [80]=Oop [128]=Oop off=1716}
                                                ;*invokespecial <init>
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)
                                                ; - java.io.BufferedInputStream::read1@18 (line 283)
                                                ;   {optimized virtual_call}
  0x000000010f849f14: mov    0x80(%rsp),%rax
  0x000000010f849f1c: jmpq   0x000000010f84a02e
  0x000000010f849f21: mov    %rdi,0x8(%rsp)
  0x000000010f849f26: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f849f2e: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [80]=Oop rdx=Oop [96]=Oop off=1747}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::read1@-1 (line 277)
                                                ;   {runtime_call}
  0x000000010f849f33: jmpq   0x000000010f8498d4
  0x000000010f849f38: mov    %rdi,0x8(%rsp)
  0x000000010f849f3d: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f849f45: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [80]=Oop rdx=Oop [96]=Oop off=1770}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::getBufIfOpen@-1 (line 168)
                                                ; - java.io.BufferedInputStream::read1@18 (line 283)
                                                ;   {runtime_call}
  0x000000010f849f4a: jmpq   0x000000010f84995c
  0x000000010f849f4f: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop [80]=Oop rdx=Oop [96]=Oop off=1780}
                                                ;*arraylength
                                                ; - java.io.BufferedInputStream::read1@21 (line 283)
                                                ;   {runtime_call}
  0x000000010f849f54: mov    %rdx,0x8(%rsp)
  0x000000010f849f59: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f849f61: callq  0x000000010f7d1a20  ; OopMap{[96]=Oop rsi=Oop [80]=Oop off=1798}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::getBufIfOpen@-1 (line 168)
                                                ; - java.io.BufferedInputStream::read1@80 (line 291)
                                                ;   {runtime_call}
  0x000000010f849f66: jmpq   0x000000010f849b1f
  0x000000010f849f6b: mov    %rdx,0x8(%rsp)
  0x000000010f849f70: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f849f78: callq  0x000000010f7d1a20  ; OopMap{[96]=Oop rsi=Oop [80]=Oop off=1821}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::getInIfOpen@-1 (line 157)
                                                ; - java.io.BufferedInputStream::read1@33 (line 284)
                                                ;   {runtime_call}
  0x000000010f849f7d: jmpq   0x000000010f849bac
  0x000000010f849f82: callq  0x000000010f7cd0c0  ; OopMap{[96]=Oop rsi=Oop off=1831}
                                                ;*invokevirtual read
                                                ; - java.io.BufferedInputStream::read1@39 (line 284)
                                                ;   {runtime_call}
  0x000000010f849f87: callq  0x000000010f717520  ; OopMap{[80]=Oop off=1836}
                                                ;*invokestatic arraycopy
                                                ; - java.io.BufferedInputStream::read1@91 (line 291)
                                                ;   {static_call}
  0x000000010f849f8c: jmpq   0x000000010f849d5e
  0x000000010f849f91: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f849f9b: mov    $0xa050f00,%eax
  0x000000010f849fa0: callq  0x000000010f7d08e0  ; OopMap{[96]=Oop off=1861}
                                                ;*new  ; - java.io.BufferedInputStream::getInIfOpen@9 (line 159)
                                                ; - java.io.BufferedInputStream::read1@33 (line 284)
                                                ;   {runtime_call}
  0x000000010f849fa5: jmpq   0x000000010f849d98
  0x000000010f849faa: mov    %rdx,%rdx
  0x000000010f849fad: callq  0x000000010f7cd820  ; OopMap{[96]=Oop off=1874}
                                                ;*new  ; - java.io.BufferedInputStream::getInIfOpen@9 (line 159)
                                                ; - java.io.BufferedInputStream::read1@33 (line 284)
                                                ;   {runtime_call}
  0x000000010f849fb2: jmpq   0x000000010f849ddd
  0x000000010f849fb7: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f849fc1: mov    $0xa050f00,%eax
  0x000000010f849fc6: callq  0x000000010f7d08e0  ; OopMap{[80]=Oop [96]=Oop off=1899}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read1@80 (line 291)
                                                ;   {runtime_call}
  0x000000010f849fcb: jmpq   0x000000010f849e20
  0x000000010f849fd0: mov    %rdx,%rdx
  0x000000010f849fd3: callq  0x000000010f7cd820  ; OopMap{[96]=Oop [80]=Oop off=1912}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read1@80 (line 291)
                                                ;   {runtime_call}
  0x000000010f849fd8: jmpq   0x000000010f849e65
  0x000000010f849fdd: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f849fe7: mov    $0xa050f00,%eax
  0x000000010f849fec: callq  0x000000010f7d08e0  ; OopMap{[80]=Oop [96]=Oop off=1937}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read1@18 (line 283)
                                                ;   {runtime_call}
  0x000000010f849ff1: jmpq   0x000000010f849ea0
  0x000000010f849ff6: mov    %rdx,%rdx
  0x000000010f849ff9: callq  0x000000010f7cd820  ; OopMap{[96]=Oop [80]=Oop off=1950}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read1@18 (line 283)
                                                ;   {runtime_call}
  0x000000010f849ffe: jmpq   0x000000010f849ee5
  0x000000010f84a003: nop
  0x000000010f84a004: nop
  0x000000010f84a005: mov    0x2a8(%r15),%rax
  0x000000010f84a00c: movabs $0x0,%r10
  0x000000010f84a016: mov    %r10,0x2a8(%r15)
  0x000000010f84a01d: movabs $0x0,%r10
  0x000000010f84a027: mov    %r10,0x2b0(%r15)
  0x000000010f84a02e: add    $0x90,%rsp
  0x000000010f84a035: pop    %rbp
  0x000000010f84a036: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f84a03b: hlt    
  0x000000010f84a03c: hlt    
  0x000000010f84a03d: hlt    
  0x000000010f84a03e: hlt    
  0x000000010f84a03f: hlt    
[Stub Code]
  0x000000010f84a040: nop                       ;   {no_reloc}
  0x000000010f84a041: nop
  0x000000010f84a042: nop
  0x000000010f84a043: nop
  0x000000010f84a044: nop
  0x000000010f84a045: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f84a04f: jmpq   0x000000010f84a04f  ;   {runtime_call}
  0x000000010f84a054: nop
  0x000000010f84a055: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f84a05f: jmpq   0x000000010f84a05f  ;   {runtime_call}
  0x000000010f84a064: nop
  0x000000010f84a065: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f84a06f: jmpq   0x000000010f84a06f  ;   {runtime_call}
  0x000000010f84a074: nop
  0x000000010f84a075: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f84a07f: jmpq   0x000000010f84a07f  ;   {runtime_call}
  0x000000010f84a084: nop
  0x000000010f84a085: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f84a08f: jmpq   0x000000010f84a08f  ;   {runtime_call}
  0x000000010f84a094: nop
  0x000000010f84a095: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f84a09f: jmpq   0x000000010f84a09f  ;   {runtime_call}
[Exception Handler]
  0x000000010f84a0a4: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f84a0a9: mov    %rsp,-0x28(%rsp)
  0x000000010f84a0ae: sub    $0x80,%rsp
  0x000000010f84a0b5: mov    %rax,0x78(%rsp)
  0x000000010f84a0ba: mov    %rcx,0x70(%rsp)
  0x000000010f84a0bf: mov    %rdx,0x68(%rsp)
  0x000000010f84a0c4: mov    %rbx,0x60(%rsp)
  0x000000010f84a0c9: mov    %rbp,0x50(%rsp)
  0x000000010f84a0ce: mov    %rsi,0x48(%rsp)
  0x000000010f84a0d3: mov    %rdi,0x40(%rsp)
  0x000000010f84a0d8: mov    %r8,0x38(%rsp)
  0x000000010f84a0dd: mov    %r9,0x30(%rsp)
  0x000000010f84a0e2: mov    %r10,0x28(%rsp)
  0x000000010f84a0e7: mov    %r11,0x20(%rsp)
  0x000000010f84a0ec: mov    %r12,0x18(%rsp)
  0x000000010f84a0f1: mov    %r13,0x10(%rsp)
  0x000000010f84a0f6: mov    %r14,0x8(%rsp)
  0x000000010f84a0fb: mov    %r15,(%rsp)
  0x000000010f84a0ff: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f84a109: movabs $0x10f84a0a9,%rsi  ;   {internal_word}
  0x000000010f84a113: mov    %rsp,%rdx
  0x000000010f84a116: and    $0xfffffffffffffff0,%rsp
  0x000000010f84a11a: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f84a11f: hlt    
[Deopt Handler Code]
  0x000000010f84a120: movabs $0x10f84a120,%r10  ;   {section_word}
  0x000000010f84a12a: push   %r10
  0x000000010f84a12c: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f84a131: hlt    
  0x000000010f84a132: hlt    
  0x000000010f84a133: hlt    
  0x000000010f84a134: hlt    
  0x000000010f84a135: hlt    
  0x000000010f84a136: hlt    
  0x000000010f84a137: hlt    
Decoding compiled method 0x000000010f843ad0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010edfaea0} 'readUTF' '()Ljava/lang/String;' in 'java/io/DataInputStream'
  #           [sp+0x40]  (sp of caller)
  0x000000010f843c40: mov    0x8(%rsi),%r10d
  0x000000010f843c44: shl    $0x3,%r10
  0x000000010f843c48: cmp    %rax,%r10
  0x000000010f843c4b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f843c51: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f843c5c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f843c60: mov    %eax,-0x14000(%rsp)
  0x000000010f843c67: push   %rbp
  0x000000010f843c68: sub    $0x30,%rsp
  0x000000010f843c6c: movabs $0x10edfcba8,%rdi  ;   {metadata(method data for {method} {0x000000010edfaea0} 'readUTF' '()Ljava/lang/String;' in 'java/io/DataInputStream')}
  0x000000010f843c76: mov    0xdc(%rdi),%ebx
  0x000000010f843c7c: add    $0x8,%ebx
  0x000000010f843c7f: mov    %ebx,0xdc(%rdi)
  0x000000010f843c85: movabs $0x10edfaea0,%rdi  ;   {metadata({method} {0x000000010edfaea0} 'readUTF' '()Ljava/lang/String;' in 'java/io/DataInputStream')}
  0x000000010f843c8f: and    $0x1ff8,%ebx
  0x000000010f843c95: cmp    $0x0,%ebx
  0x000000010f843c98: je     0x000000010f843cc8  ;*aload_0
                                                ; - java.io.DataInputStream::readUTF@0 (line 564)

  0x000000010f843c9e: movabs $0x10edfcba8,%rdi  ;   {metadata(method data for {method} {0x000000010edfaea0} 'readUTF' '()Ljava/lang/String;' in 'java/io/DataInputStream')}
  0x000000010f843ca8: addq   $0x1,0x108(%rdi)
  0x000000010f843cb0: nop
  0x000000010f843cb1: nop
  0x000000010f843cb2: nop
  0x000000010f843cb3: nop
  0x000000010f843cb4: nop
  0x000000010f843cb5: nop
  0x000000010f843cb6: nop
  0x000000010f843cb7: callq  0x000000010f717520  ; OopMap{off=124}
                                                ;*invokestatic readUTF
                                                ; - java.io.DataInputStream::readUTF@1 (line 564)
                                                ;   {static_call}
  0x000000010f843cbc: add    $0x30,%rsp
  0x000000010f843cc0: pop    %rbp
  0x000000010f843cc1: test   %eax,-0x8da8bc7(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f843cc7: retq   
  0x000000010f843cc8: mov    %rdi,0x8(%rsp)
  0x000000010f843ccd: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f843cd5: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=154}
                                                ;*synchronization entry
                                                ; - java.io.DataInputStream::readUTF@-1 (line 564)
                                                ;   {runtime_call}
  0x000000010f843cda: jmp    0x000000010f843c9e
  0x000000010f843cdc: nop
  0x000000010f843cdd: nop
  0x000000010f843cde: mov    0x2a8(%r15),%rax
  0x000000010f843ce5: movabs $0x0,%r10
  0x000000010f843cef: mov    %r10,0x2a8(%r15)
  0x000000010f843cf6: movabs $0x0,%r10
  0x000000010f843d00: mov    %r10,0x2b0(%r15)
  0x000000010f843d07: add    $0x30,%rsp
  0x000000010f843d0b: pop    %rbp
  0x000000010f843d0c: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f843d11: hlt    
  0x000000010f843d12: hlt    
  0x000000010f843d13: hlt    
  0x000000010f843d14: hlt    
  0x000000010f843d15: hlt    
  0x000000010f843d16: hlt    
  0x000000010f843d17: hlt    
  0x000000010f843d18: hlt    
  0x000000010f843d19: hlt    
  0x000000010f843d1a: hlt    
  0x000000010f843d1b: hlt    
  0x000000010f843d1c: hlt    
  0x000000010f843d1d: hlt    
  0x000000010f843d1e: hlt    
  0x000000010f843d1f: hlt    
[Stub Code]
  0x000000010f843d20: nop                       ;   {no_reloc}
  0x000000010f843d21: nop
  0x000000010f843d22: nop
  0x000000010f843d23: nop
  0x000000010f843d24: nop
  0x000000010f843d25: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f843d2f: jmpq   0x000000010f843d2f  ;   {runtime_call}
[Exception Handler]
  0x000000010f843d34: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f843d39: mov    %rsp,-0x28(%rsp)
  0x000000010f843d3e: sub    $0x80,%rsp
  0x000000010f843d45: mov    %rax,0x78(%rsp)
  0x000000010f843d4a: mov    %rcx,0x70(%rsp)
  0x000000010f843d4f: mov    %rdx,0x68(%rsp)
  0x000000010f843d54: mov    %rbx,0x60(%rsp)
  0x000000010f843d59: mov    %rbp,0x50(%rsp)
  0x000000010f843d5e: mov    %rsi,0x48(%rsp)
  0x000000010f843d63: mov    %rdi,0x40(%rsp)
  0x000000010f843d68: mov    %r8,0x38(%rsp)
  0x000000010f843d6d: mov    %r9,0x30(%rsp)
  0x000000010f843d72: mov    %r10,0x28(%rsp)
  0x000000010f843d77: mov    %r11,0x20(%rsp)
  0x000000010f843d7c: mov    %r12,0x18(%rsp)
  0x000000010f843d81: mov    %r13,0x10(%rsp)
  0x000000010f843d86: mov    %r14,0x8(%rsp)
  0x000000010f843d8b: mov    %r15,(%rsp)
  0x000000010f843d8f: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f843d99: movabs $0x10f843d39,%rsi  ;   {internal_word}
  0x000000010f843da3: mov    %rsp,%rdx
  0x000000010f843da6: and    $0xfffffffffffffff0,%rsp
  0x000000010f843daa: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f843daf: hlt    
[Deopt Handler Code]
  0x000000010f843db0: movabs $0x10f843db0,%r10  ;   {section_word}
  0x000000010f843dba: push   %r10
  0x000000010f843dbc: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f843dc1: hlt    
  0x000000010f843dc2: hlt    
  0x000000010f843dc3: hlt    
  0x000000010f843dc4: hlt    
  0x000000010f843dc5: hlt    
  0x000000010f843dc6: hlt    
  0x000000010f843dc7: hlt    
Decoding compiled method 0x000000010f84a750:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010edfa878} 'readUnsignedShort' '()I' in 'java/io/DataInputStream'
  #           [sp+0x50]  (sp of caller)
  0x000000010f84a8e0: mov    0x8(%rsi),%r10d
  0x000000010f84a8e4: shl    $0x3,%r10
  0x000000010f84a8e8: cmp    %rax,%r10
  0x000000010f84a8eb: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f84a8f1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f84a8fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f84a900: mov    %eax,-0x14000(%rsp)
  0x000000010f84a907: push   %rbp
  0x000000010f84a908: sub    $0x40,%rsp
  0x000000010f84a90c: movabs $0x10edfc240,%rdi  ;   {metadata(method data for {method} {0x000000010edfa878} 'readUnsignedShort' '()I' in 'java/io/DataInputStream')}
  0x000000010f84a916: mov    0xdc(%rdi),%ebx
  0x000000010f84a91c: add    $0x8,%ebx
  0x000000010f84a91f: mov    %ebx,0xdc(%rdi)
  0x000000010f84a925: movabs $0x10edfa878,%rdi  ;   {metadata({method} {0x000000010edfa878} 'readUnsignedShort' '()I' in 'java/io/DataInputStream')}
  0x000000010f84a92f: and    $0x1ff8,%ebx
  0x000000010f84a935: cmp    $0x0,%ebx
  0x000000010f84a938: je     0x000000010f84ab46  ;*aload_0
                                                ; - java.io.DataInputStream::readUnsignedShort@0 (line 337)

  0x000000010f84a93e: mov    0xc(%rsi),%edi
  0x000000010f84a941: shl    $0x3,%rdi          ;*getfield in
                                                ; - java.io.DataInputStream::readUnsignedShort@1 (line 337)

  0x000000010f84a945: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x000000010f84ab5d
  0x000000010f84a948: mov    %rdi,%rbx
  0x000000010f84a94b: movabs $0x10edfc240,%rax  ;   {metadata(method data for {method} {0x000000010edfa878} 'readUnsignedShort' '()I' in 'java/io/DataInputStream')}
  0x000000010f84a955: mov    0x8(%rbx),%ebx
  0x000000010f84a958: shl    $0x3,%rbx
  0x000000010f84a95c: cmp    0x110(%rax),%rbx
  0x000000010f84a963: jne    0x000000010f84a972
  0x000000010f84a965: addq   $0x1,0x118(%rax)
  0x000000010f84a96d: jmpq   0x000000010f84a9d8
  0x000000010f84a972: cmp    0x120(%rax),%rbx
  0x000000010f84a979: jne    0x000000010f84a988
  0x000000010f84a97b: addq   $0x1,0x128(%rax)
  0x000000010f84a983: jmpq   0x000000010f84a9d8
  0x000000010f84a988: cmpq   $0x0,0x110(%rax)
  0x000000010f84a993: jne    0x000000010f84a9ac
  0x000000010f84a995: mov    %rbx,0x110(%rax)
  0x000000010f84a99c: movq   $0x1,0x118(%rax)
  0x000000010f84a9a7: jmpq   0x000000010f84a9d8
  0x000000010f84a9ac: cmpq   $0x0,0x120(%rax)
  0x000000010f84a9b7: jne    0x000000010f84a9d0
  0x000000010f84a9b9: mov    %rbx,0x120(%rax)
  0x000000010f84a9c0: movq   $0x1,0x128(%rax)
  0x000000010f84a9cb: jmpq   0x000000010f84a9d8
  0x000000010f84a9d0: addq   $0x1,0x108(%rax)
  0x000000010f84a9d8: mov    %rsi,0x20(%rsp)
  0x000000010f84a9dd: mov    %rdi,%rsi          ;*invokevirtual read
                                                ; - java.io.DataInputStream::readUnsignedShort@4 (line 337)

  0x000000010f84a9e0: nop
  0x000000010f84a9e1: nop
  0x000000010f84a9e2: nop
  0x000000010f84a9e3: nop
  0x000000010f84a9e4: nop
  0x000000010f84a9e5: movabs $0xffffffffffffffff,%rax
  0x000000010f84a9ef: callq  0x000000010f7172e0  ; OopMap{[32]=Oop off=276}
                                                ;*invokevirtual read
                                                ; - java.io.DataInputStream::readUnsignedShort@4 (line 337)
                                                ;   {virtual_call}
  0x000000010f84a9f4: mov    0x20(%rsp),%rsi
  0x000000010f84a9f9: mov    0xc(%rsi),%esi
  0x000000010f84a9fc: shl    $0x3,%rsi          ;*getfield in
                                                ; - java.io.DataInputStream::readUnsignedShort@9 (line 338)

  0x000000010f84aa00: cmp    (%rsi),%rax        ;*invokevirtual read
                                                ; - java.io.DataInputStream::readUnsignedShort@12 (line 338)
                                                ; implicit exception: dispatches to 0x000000010f84ab62
  0x000000010f84aa03: mov    %rsi,%rdi
  0x000000010f84aa06: movabs $0x10edfc240,%rbx  ;   {metadata(method data for {method} {0x000000010edfa878} 'readUnsignedShort' '()I' in 'java/io/DataInputStream')}
  0x000000010f84aa10: mov    0x8(%rdi),%edi
  0x000000010f84aa13: shl    $0x3,%rdi
  0x000000010f84aa17: cmp    0x140(%rbx),%rdi
  0x000000010f84aa1e: jne    0x000000010f84aa2d
  0x000000010f84aa20: addq   $0x1,0x148(%rbx)
  0x000000010f84aa28: jmpq   0x000000010f84aa93
  0x000000010f84aa2d: cmp    0x150(%rbx),%rdi
  0x000000010f84aa34: jne    0x000000010f84aa43
  0x000000010f84aa36: addq   $0x1,0x158(%rbx)
  0x000000010f84aa3e: jmpq   0x000000010f84aa93
  0x000000010f84aa43: cmpq   $0x0,0x140(%rbx)
  0x000000010f84aa4e: jne    0x000000010f84aa67
  0x000000010f84aa50: mov    %rdi,0x140(%rbx)
  0x000000010f84aa57: movq   $0x1,0x148(%rbx)
  0x000000010f84aa62: jmpq   0x000000010f84aa93
  0x000000010f84aa67: cmpq   $0x0,0x150(%rbx)
  0x000000010f84aa72: jne    0x000000010f84aa8b
  0x000000010f84aa74: mov    %rdi,0x150(%rbx)
  0x000000010f84aa7b: movq   $0x1,0x158(%rbx)
  0x000000010f84aa86: jmpq   0x000000010f84aa93
  0x000000010f84aa8b: addq   $0x1,0x138(%rbx)
  0x000000010f84aa93: mov    %eax,0x28(%rsp)
  0x000000010f84aa97: nop
  0x000000010f84aa98: nop
  0x000000010f84aa99: nop
  0x000000010f84aa9a: nop
  0x000000010f84aa9b: nop
  0x000000010f84aa9c: nop
  0x000000010f84aa9d: movabs $0xffffffffffffffff,%rax
  0x000000010f84aaa7: callq  0x000000010f7172e0  ; OopMap{off=460}
                                                ;*invokevirtual read
                                                ; - java.io.DataInputStream::readUnsignedShort@12 (line 338)
                                                ;   {virtual_call}
  0x000000010f84aaac: mov    0x28(%rsp),%edx
  0x000000010f84aab0: or     %rax,%rdx
  0x000000010f84aab3: cmp    $0x0,%edx
  0x000000010f84aab6: movabs $0x10edfc240,%rdx  ;   {metadata(method data for {method} {0x000000010edfa878} 'readUnsignedShort' '()I' in 'java/io/DataInputStream')}
  0x000000010f84aac0: movabs $0x168,%rsi
  0x000000010f84aaca: jge    0x000000010f84aada
  0x000000010f84aad0: movabs $0x178,%rsi
  0x000000010f84aada: mov    (%rdx,%rsi,1),%rdi
  0x000000010f84aade: lea    0x1(%rdi),%rdi
  0x000000010f84aae2: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f84aae6: jl     0x000000010f84ab04  ;*ifge
                                                ; - java.io.DataInputStream::readUnsignedShort@19 (line 339)

  0x000000010f84aaec: mov    0x28(%rsp),%edx
  0x000000010f84aaf0: shl    $0x8,%edx
  0x000000010f84aaf3: add    %eax,%edx
  0x000000010f84aaf5: mov    %rdx,%rax
  0x000000010f84aaf8: add    $0x40,%rsp
  0x000000010f84aafc: pop    %rbp
  0x000000010f84aafd: test   %eax,-0x8dafa03(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f84ab03: retq                      ;*ireturn
                                                ; - java.io.DataInputStream::readUnsignedShort@38 (line 341)

  0x000000010f84ab04: nopl   0x0(%rax)
  0x000000010f84ab08: jmpq   0x000000010f84ab76  ;   {no_reloc}
  0x000000010f84ab0d: add    %al,(%rax)
  0x000000010f84ab0f: add    %al,(%rax)
  0x000000010f84ab11: add    %ch,%cl
  0x000000010f84ab13: imul   $0x8b480000,(%rax),%eax  ;*new
                                                ; - java.io.DataInputStream::readUnsignedShort@22 (line 340)

  0x000000010f84ab19: lock movabs $0x10edfc240,%rdi  ;   {metadata(method data for {method} {0x000000010edfa878} 'readUnsignedShort' '()I' in 'java/io/DataInputStream')}
  0x000000010f84ab24: addq   $0x1,0x188(%rdi)
  0x000000010f84ab2c: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.io.DataInputStream::readUnsignedShort@26 (line 340)

  0x000000010f84ab2f: mov    %rax,0x30(%rsp)
  0x000000010f84ab34: nop
  0x000000010f84ab35: nop
  0x000000010f84ab36: nop
  0x000000010f84ab37: callq  0x000000010f7170a0  ; OopMap{[48]=Oop off=604}
                                                ;*invokespecial <init>
                                                ; - java.io.DataInputStream::readUnsignedShort@26 (line 340)
                                                ;   {optimized virtual_call}
  0x000000010f84ab3c: mov    0x30(%rsp),%rax
  0x000000010f84ab41: jmpq   0x000000010f84abb5
  0x000000010f84ab46: mov    %rdi,0x8(%rsp)
  0x000000010f84ab4b: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f84ab53: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=632}
                                                ;*synchronization entry
                                                ; - java.io.DataInputStream::readUnsignedShort@-1 (line 337)
                                                ;   {runtime_call}
  0x000000010f84ab58: jmpq   0x000000010f84a93e
  0x000000010f84ab5d: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop rdi=Oop off=642}
                                                ;*invokevirtual read
                                                ; - java.io.DataInputStream::readUnsignedShort@4 (line 337)
                                                ;   {runtime_call}
  0x000000010f84ab62: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop off=647}
                                                ;*invokevirtual read
                                                ; - java.io.DataInputStream::readUnsignedShort@12 (line 338)
                                                ;   {runtime_call}
  0x000000010f84ab67: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f84ab71: mov    $0xa050f00,%eax
  0x000000010f84ab76: callq  0x000000010f7d08e0  ; OopMap{off=667}
                                                ;*new  ; - java.io.DataInputStream::readUnsignedShort@22 (line 340)
                                                ;   {runtime_call}
  0x000000010f84ab7b: jmp    0x000000010f84ab08
  0x000000010f84ab7d: nop
  0x000000010f84ab7e: nop
  0x000000010f84ab7f: nop
  0x000000010f84ab80: mov    %rdx,%rdx
  0x000000010f84ab83: callq  0x000000010f7cd560  ; OopMap{off=680}
                                                ;*new  ; - java.io.DataInputStream::readUnsignedShort@22 (line 340)
                                                ;   {runtime_call}
  0x000000010f84ab88: jmp    0x000000010f84ab17
  0x000000010f84ab8a: nop
  0x000000010f84ab8b: nop
  0x000000010f84ab8c: mov    0x2a8(%r15),%rax
  0x000000010f84ab93: movabs $0x0,%r10
  0x000000010f84ab9d: mov    %r10,0x2a8(%r15)
  0x000000010f84aba4: movabs $0x0,%r10
  0x000000010f84abae: mov    %r10,0x2b0(%r15)
  0x000000010f84abb5: add    $0x40,%rsp
  0x000000010f84abb9: pop    %rbp
  0x000000010f84abba: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f84abbf: hlt    
[Stub Code]
  0x000000010f84abc0: nop                       ;   {no_reloc}
  0x000000010f84abc1: nop
  0x000000010f84abc2: nop
  0x000000010f84abc3: nop
  0x000000010f84abc4: nop
  0x000000010f84abc5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f84abcf: jmpq   0x000000010f84abcf  ;   {runtime_call}
  0x000000010f84abd4: nop
  0x000000010f84abd5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f84abdf: jmpq   0x000000010f84abdf  ;   {runtime_call}
  0x000000010f84abe4: nop
  0x000000010f84abe5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f84abef: jmpq   0x000000010f84abef  ;   {runtime_call}
[Exception Handler]
  0x000000010f84abf4: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f84abf9: mov    %rsp,-0x28(%rsp)
  0x000000010f84abfe: sub    $0x80,%rsp
  0x000000010f84ac05: mov    %rax,0x78(%rsp)
  0x000000010f84ac0a: mov    %rcx,0x70(%rsp)
  0x000000010f84ac0f: mov    %rdx,0x68(%rsp)
  0x000000010f84ac14: mov    %rbx,0x60(%rsp)
  0x000000010f84ac19: mov    %rbp,0x50(%rsp)
  0x000000010f84ac1e: mov    %rsi,0x48(%rsp)
  0x000000010f84ac23: mov    %rdi,0x40(%rsp)
  0x000000010f84ac28: mov    %r8,0x38(%rsp)
  0x000000010f84ac2d: mov    %r9,0x30(%rsp)
  0x000000010f84ac32: mov    %r10,0x28(%rsp)
  0x000000010f84ac37: mov    %r11,0x20(%rsp)
  0x000000010f84ac3c: mov    %r12,0x18(%rsp)
  0x000000010f84ac41: mov    %r13,0x10(%rsp)
  0x000000010f84ac46: mov    %r14,0x8(%rsp)
  0x000000010f84ac4b: mov    %r15,(%rsp)
  0x000000010f84ac4f: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f84ac59: movabs $0x10f84abf9,%rsi  ;   {internal_word}
  0x000000010f84ac63: mov    %rsp,%rdx
  0x000000010f84ac66: and    $0xfffffffffffffff0,%rsp
  0x000000010f84ac6a: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f84ac6f: hlt    
[Deopt Handler Code]
  0x000000010f84ac70: movabs $0x10f84ac70,%r10  ;   {section_word}
  0x000000010f84ac7a: push   %r10
  0x000000010f84ac7c: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f84ac81: hlt    
  0x000000010f84ac82: hlt    
  0x000000010f84ac83: hlt    
  0x000000010f84ac84: hlt    
  0x000000010f84ac85: hlt    
  0x000000010f84ac86: hlt    
  0x000000010f84ac87: hlt    
Decoding compiled method 0x000000010f84ae90:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010eae8230} '<init>' '()V' in 'java/io/InputStream'
  #           [sp+0x40]  (sp of caller)
  0x000000010f84b000: mov    0x8(%rsi),%r10d
  0x000000010f84b004: shl    $0x3,%r10
  0x000000010f84b008: cmp    %rax,%r10
  0x000000010f84b00b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f84b011: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f84b01c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f84b020: mov    %eax,-0x14000(%rsp)
  0x000000010f84b027: push   %rbp
  0x000000010f84b028: sub    $0x30,%rsp
  0x000000010f84b02c: movabs $0x10ee1e180,%rdi  ;   {metadata(method data for {method} {0x000000010eae8230} '<init>' '()V' in 'java/io/InputStream')}
  0x000000010f84b036: mov    0xdc(%rdi),%ebx
  0x000000010f84b03c: add    $0x8,%ebx
  0x000000010f84b03f: mov    %ebx,0xdc(%rdi)
  0x000000010f84b045: movabs $0x10eae8230,%rdi  ;   {metadata({method} {0x000000010eae8230} '<init>' '()V' in 'java/io/InputStream')}
  0x000000010f84b04f: and    $0x1ff8,%ebx
  0x000000010f84b055: cmp    $0x0,%ebx
  0x000000010f84b058: je     0x000000010f84b0be  ;*aload_0
                                                ; - java.io.InputStream::<init>@0 (line 45)

  0x000000010f84b05e: mov    %rsi,%rdi
  0x000000010f84b061: movabs $0x10ee1e180,%rbx  ;   {metadata(method data for {method} {0x000000010eae8230} '<init>' '()V' in 'java/io/InputStream')}
  0x000000010f84b06b: addq   $0x1,0x108(%rbx)
  0x000000010f84b073: movabs $0x10ebdca10,%rdi  ;   {metadata(method data for {method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f84b07d: mov    0xdc(%rdi),%ebx
  0x000000010f84b083: add    $0x8,%ebx
  0x000000010f84b086: mov    %ebx,0xdc(%rdi)
  0x000000010f84b08c: movabs $0x10ea65480,%rdi  ;   {metadata({method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f84b096: and    $0x7ffff8,%ebx
  0x000000010f84b09c: cmp    $0x0,%ebx
  0x000000010f84b09f: je     0x000000010f84b0d2
  0x000000010f84b0a5: mov    %rsi,%rdi          ;*return
                                                ; - java.lang.Object::<init>@0 (line 37)
                                                ; - java.io.InputStream::<init>@1 (line 45)

  0x000000010f84b0a8: mov    %rsi,0x20(%rsp)
  0x000000010f84b0ad: callq  0x000000010f7cd2e0  ; OopMap{[32]=Oop off=178}
                                                ;*return
                                                ; - java.lang.Object::<init>@0 (line 37)
                                                ; - java.io.InputStream::<init>@1 (line 45)
                                                ;   {runtime_call}
  0x000000010f84b0b2: add    $0x30,%rsp
  0x000000010f84b0b6: pop    %rbp
  0x000000010f84b0b7: test   %eax,-0x8daffbd(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f84b0bd: retq   
  0x000000010f84b0be: mov    %rdi,0x8(%rsp)
  0x000000010f84b0c3: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f84b0cb: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=208}
                                                ;*synchronization entry
                                                ; - java.io.InputStream::<init>@-1 (line 45)
                                                ;   {runtime_call}
  0x000000010f84b0d0: jmp    0x000000010f84b05e
  0x000000010f84b0d2: mov    %rdi,0x8(%rsp)
  0x000000010f84b0d7: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f84b0df: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=228}
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 37)
                                                ; - java.io.InputStream::<init>@1 (line 45)
                                                ;   {runtime_call}
  0x000000010f84b0e4: jmp    0x000000010f84b0a5
  0x000000010f84b0e6: nop
  0x000000010f84b0e7: nop
  0x000000010f84b0e8: mov    0x2a8(%r15),%rax
  0x000000010f84b0ef: movabs $0x0,%r10
  0x000000010f84b0f9: mov    %r10,0x2a8(%r15)
  0x000000010f84b100: movabs $0x0,%r10
  0x000000010f84b10a: mov    %r10,0x2b0(%r15)
  0x000000010f84b111: add    $0x30,%rsp
  0x000000010f84b115: pop    %rbp
  0x000000010f84b116: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f84b11b: hlt    
  0x000000010f84b11c: hlt    
  0x000000010f84b11d: hlt    
  0x000000010f84b11e: hlt    
  0x000000010f84b11f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f84b120: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f84b125: mov    %rsp,-0x28(%rsp)
  0x000000010f84b12a: sub    $0x80,%rsp
  0x000000010f84b131: mov    %rax,0x78(%rsp)
  0x000000010f84b136: mov    %rcx,0x70(%rsp)
  0x000000010f84b13b: mov    %rdx,0x68(%rsp)
  0x000000010f84b140: mov    %rbx,0x60(%rsp)
  0x000000010f84b145: mov    %rbp,0x50(%rsp)
  0x000000010f84b14a: mov    %rsi,0x48(%rsp)
  0x000000010f84b14f: mov    %rdi,0x40(%rsp)
  0x000000010f84b154: mov    %r8,0x38(%rsp)
  0x000000010f84b159: mov    %r9,0x30(%rsp)
  0x000000010f84b15e: mov    %r10,0x28(%rsp)
  0x000000010f84b163: mov    %r11,0x20(%rsp)
  0x000000010f84b168: mov    %r12,0x18(%rsp)
  0x000000010f84b16d: mov    %r13,0x10(%rsp)
  0x000000010f84b172: mov    %r14,0x8(%rsp)
  0x000000010f84b177: mov    %r15,(%rsp)
  0x000000010f84b17b: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f84b185: movabs $0x10f84b125,%rsi  ;   {internal_word}
  0x000000010f84b18f: mov    %rsp,%rdx
  0x000000010f84b192: and    $0xfffffffffffffff0,%rsp
  0x000000010f84b196: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f84b19b: hlt    
[Deopt Handler Code]
  0x000000010f84b19c: movabs $0x10f84b19c,%r10  ;   {section_word}
  0x000000010f84b1a6: push   %r10
  0x000000010f84b1a8: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f84b1ad: hlt    
  0x000000010f84b1ae: hlt    
  0x000000010f84b1af: hlt    
Decoding compiled method 0x000000010f84b290:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ebed730} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader'
  # this:     rsi:rsi   = 'java/io/BufferedReader'
  # parm0:    rdx       = boolean
  #           [sp+0xf0]  (sp of caller)
  0x000000010f84b540: mov    0x8(%rsi),%r10d
  0x000000010f84b544: shl    $0x3,%r10
  0x000000010f84b548: cmp    %rax,%r10
  0x000000010f84b54b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f84b551: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f84b55c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f84b560: mov    %eax,-0x14000(%rsp)
  0x000000010f84b567: push   %rbp
  0x000000010f84b568: sub    $0xe0,%rsp
  0x000000010f84b56f: mov    %rsi,0x70(%rsp)
  0x000000010f84b574: movabs $0x10ee1e528,%rax  ;   {metadata(method data for {method} {0x000000010ebed730} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010f84b57e: mov    0xdc(%rax),%edi
  0x000000010f84b584: add    $0x8,%edi
  0x000000010f84b587: mov    %edi,0xdc(%rax)
  0x000000010f84b58d: movabs $0x10ebed730,%rax  ;   {metadata({method} {0x000000010ebed730} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010f84b597: and    $0x1ff8,%edi
  0x000000010f84b59d: cmp    $0x0,%edi
  0x000000010f84b5a0: je     0x000000010f84c8a2  ;*aconst_null
                                                ; - java.io.BufferedReader::readLine@0 (line 313)

  0x000000010f84b5a6: mov    0xc(%rsi),%edi
  0x000000010f84b5a9: shl    $0x3,%rdi          ;*getfield lock
                                                ; - java.io.BufferedReader::readLine@3 (line 316)

  0x000000010f84b5ad: mov    %rdi,0x88(%rsp)
  0x000000010f84b5b5: lea    0xb0(%rsp),%rbx
  0x000000010f84b5bd: mov    %rdi,0x8(%rbx)
  0x000000010f84b5c1: mov    (%rdi),%rax        ; implicit exception: dispatches to 0x000000010f84c8b9
  0x000000010f84b5c4: mov    %rax,%rcx
  0x000000010f84b5c7: and    $0x7,%rcx
  0x000000010f84b5cb: cmp    $0x5,%rcx
  0x000000010f84b5cf: jne    0x000000010f84b656
  0x000000010f84b5d5: mov    0x8(%rdi),%ecx
  0x000000010f84b5d8: shl    $0x3,%rcx
  0x000000010f84b5dc: mov    0xa8(%rcx),%rcx
  0x000000010f84b5e3: or     %r15,%rcx
  0x000000010f84b5e6: xor    %rax,%rcx
  0x000000010f84b5e9: and    $0xffffffffffffff87,%rcx
  0x000000010f84b5ed: je     0x000000010f84b67e
  0x000000010f84b5f3: test   $0x7,%rcx
  0x000000010f84b5fa: jne    0x000000010f84b643
  0x000000010f84b5fc: test   $0x300,%rcx
  0x000000010f84b603: jne    0x000000010f84b622
  0x000000010f84b605: and    $0x37f,%rax
  0x000000010f84b60c: mov    %rax,%rcx
  0x000000010f84b60f: or     %r15,%rcx
  0x000000010f84b612: lock cmpxchg %rcx,(%rdi)
  0x000000010f84b617: jne    0x000000010f84c8be
  0x000000010f84b61d: jmpq   0x000000010f84b67e
  0x000000010f84b622: mov    0x8(%rdi),%ecx
  0x000000010f84b625: shl    $0x3,%rcx
  0x000000010f84b629: mov    0xa8(%rcx),%rcx
  0x000000010f84b630: or     %r15,%rcx
  0x000000010f84b633: lock cmpxchg %rcx,(%rdi)
  0x000000010f84b638: jne    0x000000010f84c8be
  0x000000010f84b63e: jmpq   0x000000010f84b67e
  0x000000010f84b643: mov    0x8(%rdi),%ecx
  0x000000010f84b646: shl    $0x3,%rcx
  0x000000010f84b64a: mov    0xa8(%rcx),%rcx
  0x000000010f84b651: lock cmpxchg %rcx,(%rdi)
  0x000000010f84b656: mov    (%rdi),%rax
  0x000000010f84b659: or     $0x1,%rax
  0x000000010f84b65d: mov    %rax,(%rbx)
  0x000000010f84b660: lock cmpxchg %rbx,(%rdi)
  0x000000010f84b665: je     0x000000010f84b67e
  0x000000010f84b66b: sub    %rsp,%rax
  0x000000010f84b66e: and    $0xfffffffffffff007,%rax
  0x000000010f84b675: mov    %rax,(%rbx)
  0x000000010f84b678: jne    0x000000010f84c8be  ;*monitorenter
                                                ; - java.io.BufferedReader::readLine@9 (line 316)

  0x000000010f84b67e: mov    %rsi,%rbx
  0x000000010f84b681: movabs $0x10ee1e528,%rax  ;   {metadata(method data for {method} {0x000000010ebed730} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010f84b68b: addq   $0x1,0x108(%rax)
  0x000000010f84b693: movabs $0x10ee20010,%rbx  ;   {metadata(method data for {method} {0x000000010ebed008} 'ensureOpen' '()V' in 'java/io/BufferedReader')}
  0x000000010f84b69d: mov    0xdc(%rbx),%eax
  0x000000010f84b6a3: add    $0x8,%eax
  0x000000010f84b6a6: mov    %eax,0xdc(%rbx)
  0x000000010f84b6ac: movabs $0x10ebed008,%rbx  ;   {metadata({method} {0x000000010ebed008} 'ensureOpen' '()V' in 'java/io/BufferedReader')}
  0x000000010f84b6b6: and    $0x7ffff8,%eax
  0x000000010f84b6bc: cmp    $0x0,%eax
  0x000000010f84b6bf: je     0x000000010f84c8d1
  0x000000010f84b6c5: mov    0x28(%rsi),%ebx
  0x000000010f84b6c8: shl    $0x3,%rbx          ;*getfield in
                                                ; - java.io.BufferedReader::ensureOpen@1 (line 121)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)

  0x000000010f84b6cc: cmp    $0x0,%rbx
  0x000000010f84b6d0: movabs $0x10ee20010,%rbx  ;   {metadata(method data for {method} {0x000000010ebed008} 'ensureOpen' '()V' in 'java/io/BufferedReader')}
  0x000000010f84b6da: movabs $0x108,%rax
  0x000000010f84b6e4: jne    0x000000010f84b6f4
  0x000000010f84b6ea: movabs $0x118,%rax
  0x000000010f84b6f4: mov    (%rbx,%rax,1),%rcx
  0x000000010f84b6f8: lea    0x1(%rcx),%rcx
  0x000000010f84b6fc: mov    %rcx,(%rbx,%rax,1)
  0x000000010f84b700: je     0x000000010f84c673  ;*ifnonnull
                                                ; - java.io.BufferedReader::ensureOpen@4 (line 121)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)

  0x000000010f84b706: cmp    $0x0,%edx
  0x000000010f84b709: movabs $0x10ee1e528,%rbx  ;   {metadata(method data for {method} {0x000000010ebed730} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010f84b713: movabs $0x118,%rax
  0x000000010f84b71d: jne    0x000000010f84b72d
  0x000000010f84b723: movabs $0x128,%rax
  0x000000010f84b72d: mov    (%rbx,%rax,1),%rdx
  0x000000010f84b731: lea    0x1(%rdx),%rdx
  0x000000010f84b735: mov    %rdx,(%rbx,%rax,1)
  0x000000010f84b739: jne    0x000000010f84b77c  ;*ifne
                                                ; - java.io.BufferedReader::readLine@15 (line 318)

  0x000000010f84b73f: movsbl 0x24(%rsi),%ebx    ;*getfield skipLF
                                                ; - java.io.BufferedReader::readLine@19 (line 318)

  0x000000010f84b743: cmp    $0x0,%ebx
  0x000000010f84b746: movabs $0x10ee1e528,%rbx  ;   {metadata(method data for {method} {0x000000010ebed730} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010f84b750: movabs $0x138,%rax
  0x000000010f84b75a: je     0x000000010f84b76a
  0x000000010f84b760: movabs $0x148,%rax
  0x000000010f84b76a: mov    (%rbx,%rax,1),%rdx
  0x000000010f84b76e: lea    0x1(%rdx),%rdx
  0x000000010f84b772: mov    %rdx,(%rbx,%rax,1)
  0x000000010f84b776: je     0x000000010f84b796  ;*ifeq
                                                ; - java.io.BufferedReader::readLine@22 (line 318)

  0x000000010f84b77c: movabs $0x10ee1e528,%rbx  ;   {metadata(method data for {method} {0x000000010ebed730} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010f84b786: incl   0x158(%rbx)
  0x000000010f84b78c: mov    $0x1,%ebx
  0x000000010f84b791: jmpq   0x000000010f84b79b  ;*goto
                                                ; - java.io.BufferedReader::readLine@26 (line 318)

  0x000000010f84b796: mov    $0x0,%ebx          ;*istore
                                                ; - java.io.BufferedReader::readLine@30 (line 318)

  0x000000010f84b79b: movabs $0x0,%rax          ;*aload_0
                                                ; - java.io.BufferedReader::readLine@32 (line 323)
                                                ;   {oop(NULL)}
  0x000000010f84b7a5: mov    %ebx,0x78(%rsp)
  0x000000010f84b7a9: mov    %rax,0x80(%rsp)
  0x000000010f84b7b1: nopl   0x0(%rax)
  0x000000010f84b7b8: mov    0x18(%rsi),%edx    ;*getfield nextChar
                                                ; - java.io.BufferedReader::readLine@33 (line 323)

  0x000000010f84b7bb: mov    0x14(%rsi),%ecx    ;*getfield nChars
                                                ; - java.io.BufferedReader::readLine@37 (line 323)

  0x000000010f84b7be: cmp    %ecx,%edx
  0x000000010f84b7c0: movabs $0x10ee1e528,%rdx  ;   {metadata(method data for {method} {0x000000010ebed730} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010f84b7ca: movabs $0x170,%rcx
  0x000000010f84b7d4: jl     0x000000010f84b7e4
  0x000000010f84b7da: movabs $0x180,%rcx
  0x000000010f84b7e4: mov    (%rdx,%rcx,1),%r8
  0x000000010f84b7e8: lea    0x1(%r8),%r8
  0x000000010f84b7ec: mov    %r8,(%rdx,%rcx,1)
  0x000000010f84b7f0: jl     0x000000010f84b821  ;*if_icmplt
                                                ; - java.io.BufferedReader::readLine@40 (line 323)

  0x000000010f84b7f6: mov    %rsi,%rdx
  0x000000010f84b7f9: movabs $0x10ee1e528,%rcx  ;   {metadata(method data for {method} {0x000000010ebed730} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010f84b803: addq   $0x1,0x190(%rcx)
  0x000000010f84b80b: mov    %rsi,%rdx
  0x000000010f84b80e: mov    %rdx,%rsi          ;*invokespecial fill
                                                ; - java.io.BufferedReader::readLine@44 (line 324)

  0x000000010f84b811: nop
  0x000000010f84b812: nop
  0x000000010f84b813: nop
  0x000000010f84b814: nop
  0x000000010f84b815: nop
  0x000000010f84b816: nop
  0x000000010f84b817: callq  0x000000010f7170a0  ; OopMap{[112]=Oop [136]=Oop [128]=Oop [184]=Oop off=732}
                                                ;*invokespecial fill
                                                ; - java.io.BufferedReader::readLine@44 (line 324)
                                                ;   {optimized virtual_call}
  0x000000010f84b81c: mov    0x70(%rsp),%rsi
  0x000000010f84b821: mov    0x18(%rsi),%edx    ;*getfield nextChar
                                                ; - java.io.BufferedReader::readLine@48 (line 325)

  0x000000010f84b824: mov    0x14(%rsi),%edi    ;*getfield nChars
                                                ; - java.io.BufferedReader::readLine@52 (line 325)

  0x000000010f84b827: cmp    %edi,%edx
  0x000000010f84b829: movabs $0x10ee1e528,%rax  ;   {metadata(method data for {method} {0x000000010ebed730} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010f84b833: movabs $0x1a0,%rcx
  0x000000010f84b83d: jl     0x000000010f84b84d
  0x000000010f84b843: movabs $0x1b0,%rcx
  0x000000010f84b84d: mov    (%rax,%rcx,1),%rbx
  0x000000010f84b851: lea    0x1(%rbx),%rbx
  0x000000010f84b855: mov    %rbx,(%rax,%rcx,1)
  0x000000010f84b859: jge    0x000000010f84c2f2  ;*if_icmplt
                                                ; - java.io.BufferedReader::readLine@55 (line 325)

  0x000000010f84b85f: mov    0x78(%rsp),%ebx
  0x000000010f84b863: cmp    $0x0,%ebx
  0x000000010f84b866: movabs $0x10ee1e528,%rax  ;   {metadata(method data for {method} {0x000000010ebed730} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010f84b870: movabs $0x260,%rcx
  0x000000010f84b87a: je     0x000000010f84b88a
  0x000000010f84b880: movabs $0x270,%rcx
  0x000000010f84b88a: mov    (%rax,%rcx,1),%rbx
  0x000000010f84b88e: lea    0x1(%rbx),%rbx
  0x000000010f84b892: mov    %rbx,(%rax,%rcx,1)
  0x000000010f84b896: je     0x000000010f84b8f2  ;*ifeq
                                                ; - java.io.BufferedReader::readLine@90 (line 336)

  0x000000010f84b89c: mov    0x2c(%rsi),%eax
  0x000000010f84b89f: shl    $0x3,%rax          ;*getfield cb
                                                ; - java.io.BufferedReader::readLine@94 (line 336)

  0x000000010f84b8a3: movslq %edx,%rcx
  0x000000010f84b8a6: cmp    0xc(%rax),%edx     ; implicit exception: dispatches to 0x000000010f84c8e8
  0x000000010f84b8a9: jae    0x000000010f84c8f2
  0x000000010f84b8af: movzwl 0x10(%rax,%rcx,2),%eax  ;*caload
                                                ; - java.io.BufferedReader::readLine@101 (line 336)

  0x000000010f84b8b4: cmp    $0xa,%eax
  0x000000010f84b8b7: movabs $0x10ee1e528,%rax  ;   {metadata(method data for {method} {0x000000010ebed730} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010f84b8c1: movabs $0x280,%rcx
  0x000000010f84b8cb: jne    0x000000010f84b8db
  0x000000010f84b8d1: movabs $0x290,%rcx
  0x000000010f84b8db: mov    (%rax,%rcx,1),%rbx
  0x000000010f84b8df: lea    0x1(%rbx),%rbx
  0x000000010f84b8e3: mov    %rbx,(%rax,%rcx,1)
  0x000000010f84b8e7: jne    0x000000010f84b8f2  ;*if_icmpne
                                                ; - java.io.BufferedReader::readLine@104 (line 336)

  0x000000010f84b8ed: inc    %edx
  0x000000010f84b8ef: mov    %edx,0x18(%rsi)    ;*putfield nextChar
                                                ; - java.io.BufferedReader::readLine@114 (line 337)

  0x000000010f84b8f2: movb   $0x0,0x24(%rsi)    ;*putfield skipLF
                                                ; - java.io.BufferedReader::readLine@119 (line 338)

  0x000000010f84b8f6: mov    0x18(%rsi),%r8d    ;*getfield nextChar
                                                ; - java.io.BufferedReader::readLine@126 (line 342)

  0x000000010f84b8fa: mov    %r8,%r9
  0x000000010f84b8fd: mov    $0x0,%edx
  0x000000010f84b902: jmpq   0x000000010f84b9de  ;*iload
                                                ; - java.io.BufferedReader::readLine@131 (line 342)

  0x000000010f84b907: nop
  0x000000010f84b908: mov    0x2c(%rsi),%edx
  0x000000010f84b90b: shl    $0x3,%rdx          ;*getfield cb
                                                ; - java.io.BufferedReader::readLine@141 (line 343)

  0x000000010f84b90f: movslq %r9d,%rax
  0x000000010f84b912: cmp    0xc(%rdx),%r9d     ; implicit exception: dispatches to 0x000000010f84c8fb
  0x000000010f84b916: jae    0x000000010f84c905
  0x000000010f84b91c: movzwl 0x10(%rdx,%rax,2),%edx  ;*caload
                                                ; - java.io.BufferedReader::readLine@146 (line 343)

  0x000000010f84b921: cmp    $0xa,%edx
  0x000000010f84b924: movabs $0x10ee1e528,%rax  ;   {metadata(method data for {method} {0x000000010ebed730} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010f84b92e: movabs $0x2c0,%rcx
  0x000000010f84b938: je     0x000000010f84b948
  0x000000010f84b93e: movabs $0x2d0,%rcx
  0x000000010f84b948: mov    (%rax,%rcx,1),%rbx
  0x000000010f84b94c: lea    0x1(%rbx),%rbx
  0x000000010f84b950: mov    %rbx,(%rax,%rcx,1)
  0x000000010f84b954: je     0x000000010f84ba21  ;*if_icmpeq
                                                ; - java.io.BufferedReader::readLine@153 (line 344)

  0x000000010f84b95a: cmp    $0xd,%edx
  0x000000010f84b95d: movabs $0x10ee1e528,%rax  ;   {metadata(method data for {method} {0x000000010ebed730} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010f84b967: movabs $0x2e0,%rcx
  0x000000010f84b971: jne    0x000000010f84b981
  0x000000010f84b977: movabs $0x2f0,%rcx
  0x000000010f84b981: mov    (%rax,%rcx,1),%rbx
  0x000000010f84b985: lea    0x1(%rbx),%rbx
  0x000000010f84b989: mov    %rbx,(%rax,%rcx,1)
  0x000000010f84b98d: je     0x000000010f84ba21  ;*if_icmpne
                                                ; - java.io.BufferedReader::readLine@160 (line 344)

  0x000000010f84b993: inc    %r9d
  0x000000010f84b996: movabs $0x10ee1e528,%rax  ;   {metadata(method data for {method} {0x000000010ebed730} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010f84b9a0: mov    0xe0(%rax),%ecx
  0x000000010f84b9a6: add    $0x8,%ecx
  0x000000010f84b9a9: mov    %ecx,0xe0(%rax)
  0x000000010f84b9af: movabs $0x10ebed730,%rax  ;   {metadata({method} {0x000000010ebed730} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010f84b9b9: and    $0xfff8,%ecx
  0x000000010f84b9bf: cmp    $0x0,%ecx
  0x000000010f84b9c2: je     0x000000010f84c90e  ; OopMap{[136]=Oop [128]=Oop rsi=Oop [112]=Oop [184]=Oop off=1160}
                                                ;*goto
                                                ; - java.io.BufferedReader::readLine@172 (line 342)

  0x000000010f84b9c8: test   %eax,-0x8db08ce(%rip)        # 0x0000000106a9b100
                                                ;   {poll}
  0x000000010f84b9ce: movabs $0x10ee1e528,%rax  ;   {metadata(method data for {method} {0x000000010ebed730} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010f84b9d8: incl   0x318(%rax)        ;*goto
                                                ; - java.io.BufferedReader::readLine@172 (line 342)

  0x000000010f84b9de: cmp    %edi,%r9d
  0x000000010f84b9e1: movabs $0x10ee1e528,%rax  ;   {metadata(method data for {method} {0x000000010ebed730} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010f84b9eb: movabs $0x2a0,%rcx
  0x000000010f84b9f5: jge    0x000000010f84ba05
  0x000000010f84b9fb: movabs $0x2b0,%rcx
  0x000000010f84ba05: mov    (%rax,%rcx,1),%rbx
  0x000000010f84ba09: lea    0x1(%rbx),%rbx
  0x000000010f84ba0d: mov    %rbx,(%rax,%rcx,1)
  0x000000010f84ba11: jl     0x000000010f84b908  ;*if_icmpge
                                                ; - java.io.BufferedReader::readLine@137 (line 342)

  0x000000010f84ba17: mov    $0x0,%edi
  0x000000010f84ba1c: jmpq   0x000000010f84ba36  ;*aload_0
                                                ; - java.io.BufferedReader::readLine@175 (line 350)

  0x000000010f84ba21: movabs $0x10ee1e528,%rdi  ;   {metadata(method data for {method} {0x000000010ebed730} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010f84ba2b: incl   0x300(%rdi)
  0x000000010f84ba31: mov    $0x1,%edi          ;*goto
                                                ; - java.io.BufferedReader::readLine@166 (line 346)

  0x000000010f84ba36: mov    %r9d,0x18(%rsi)    ;*putfield nextChar
                                                ; - java.io.BufferedReader::readLine@183 (line 351)

  0x000000010f84ba3a: cmp    $0x0,%edi
  0x000000010f84ba3d: movabs $0x10ee1e528,%rdi  ;   {metadata(method data for {method} {0x000000010ebed730} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010f84ba47: movabs $0x330,%rax
  0x000000010f84ba51: je     0x000000010f84ba61
  0x000000010f84ba57: movabs $0x340,%rax
  0x000000010f84ba61: mov    (%rdi,%rax,1),%rcx
  0x000000010f84ba65: lea    0x1(%rcx),%rcx
  0x000000010f84ba69: mov    %rcx,(%rdi,%rax,1)
  0x000000010f84ba6d: mov    0x80(%rsp),%rax
  0x000000010f84ba75: jne    0x000000010f84bf03  ;*ifeq
                                                ; - java.io.BufferedReader::readLine@188 (line 353)

  0x000000010f84ba7b: cmp    $0x0,%rax
  0x000000010f84ba7f: movabs $0x10ee1e528,%rdx  ;   {metadata(method data for {method} {0x000000010ebed730} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010f84ba89: movabs $0x418,%rdi
  0x000000010f84ba93: jne    0x000000010f84baa3
  0x000000010f84ba99: movabs $0x428,%rdi
  0x000000010f84baa3: mov    (%rdx,%rdi,1),%rcx
  0x000000010f84baa7: lea    0x1(%rcx),%rcx
  0x000000010f84baab: mov    %rcx,(%rdx,%rdi,1)
  0x000000010f84baaf: je     0x000000010f84babd  ;*ifnonnull
                                                ; - java.io.BufferedReader::readLine@265 (line 368)

  0x000000010f84bab5: mov    %rsi,%r11
  0x000000010f84bab8: jmpq   0x000000010f84bc80  ;*aload_2
                                                ; - java.io.BufferedReader::readLine@279 (line 370)

  0x000000010f84babd: movabs $0x7c000d838,%rdx  ;   {metadata('java/lang/StringBuffer')}
  0x000000010f84bac7: mov    %rsi,%r11
  0x000000010f84baca: mov    0x60(%r15),%rax
  0x000000010f84bace: lea    0x18(%rax),%rdi
  0x000000010f84bad2: cmp    0x70(%r15),%rdi
  0x000000010f84bad6: ja     0x000000010f84c925
  0x000000010f84badc: mov    %rdi,0x60(%r15)
  0x000000010f84bae0: mov    0xa8(%rdx),%rcx
  0x000000010f84bae7: mov    %rcx,(%rax)
  0x000000010f84baea: mov    %rdx,%rcx
  0x000000010f84baed: shr    $0x3,%rcx
  0x000000010f84baf1: mov    %ecx,0x8(%rax)
  0x000000010f84baf4: xor    %rcx,%rcx
  0x000000010f84baf7: mov    %ecx,0xc(%rax)
  0x000000010f84bafa: xor    %rcx,%rcx
  0x000000010f84bafd: mov    %rcx,0x10(%rax)
  0x000000010f84bb01: mov    %rax,%r13          ;*new  ; - java.io.BufferedReader::readLine@268 (line 369)

  0x000000010f84bb04: movabs $0x7955bab40,%rbx  ;   {oop(a 'java/lang/Class' = 'java/io/BufferedReader')}
  0x000000010f84bb0e: mov    0x74(%rbx),%ebx    ;*getstatic defaultExpectedLineLength
                                                ; - java.io.BufferedReader::readLine@272 (line 369)

  0x000000010f84bb11: mov    %r13,%rdx
  0x000000010f84bb14: movabs $0x10ee1e528,%rsi  ;   {metadata(method data for {method} {0x000000010ebed730} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010f84bb1e: addq   $0x1,0x438(%rsi)
  0x000000010f84bb26: movabs $0x10ee231c8,%rdx  ;   {metadata(method data for {method} {0x000000010ead5948} '<init>' '(I)V' in 'java/lang/StringBuffer')}
  0x000000010f84bb30: mov    0xdc(%rdx),%esi
  0x000000010f84bb36: add    $0x8,%esi
  0x000000010f84bb39: mov    %esi,0xdc(%rdx)
  0x000000010f84bb3f: movabs $0x10ead5948,%rdx  ;   {metadata({method} {0x000000010ead5948} '<init>' '(I)V' in 'java/lang/StringBuffer')}
  0x000000010f84bb49: and    $0x7ffff8,%esi
  0x000000010f84bb4f: cmp    $0x0,%esi
  0x000000010f84bb52: je     0x000000010f84c932
  0x000000010f84bb58: mov    %r13,%rdx
  0x000000010f84bb5b: movabs $0x10ee231c8,%rsi  ;   {metadata(method data for {method} {0x000000010ead5948} '<init>' '(I)V' in 'java/lang/StringBuffer')}
  0x000000010f84bb65: addq   $0x1,0x108(%rsi)
  0x000000010f84bb6d: movabs $0x10ec9a3e8,%rdx  ;   {metadata(method data for {method} {0x000000010eada260} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f84bb77: mov    0xdc(%rdx),%esi
  0x000000010f84bb7d: add    $0x8,%esi
  0x000000010f84bb80: mov    %esi,0xdc(%rdx)
  0x000000010f84bb86: movabs $0x10eada260,%rdx  ;   {metadata({method} {0x000000010eada260} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f84bb90: and    $0x7ffff8,%esi
  0x000000010f84bb96: cmp    $0x0,%esi
  0x000000010f84bb99: je     0x000000010f84c949
  0x000000010f84bb9f: mov    %r13,%rdx
  0x000000010f84bba2: movabs $0x10ec9a3e8,%rsi  ;   {metadata(method data for {method} {0x000000010eada260} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010f84bbac: addq   $0x1,0x108(%rsi)
  0x000000010f84bbb4: movabs $0x10ebdca10,%rdx  ;   {metadata(method data for {method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f84bbbe: mov    0xdc(%rdx),%esi
  0x000000010f84bbc4: add    $0x8,%esi
  0x000000010f84bbc7: mov    %esi,0xdc(%rdx)
  0x000000010f84bbcd: movabs $0x10ea65480,%rdx  ;   {metadata({method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f84bbd7: and    $0x7ffff8,%esi
  0x000000010f84bbdd: cmp    $0x0,%esi
  0x000000010f84bbe0: je     0x000000010f84c960
  0x000000010f84bbe6: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000000010f84bbf0: movslq %ebx,%rbx
  0x000000010f84bbf3: mov    %rbx,%rdi
  0x000000010f84bbf6: cmp    $0xffffff,%rbx
  0x000000010f84bbfd: ja     0x000000010f84c977
  0x000000010f84bc03: movabs $0x17,%rsi
  0x000000010f84bc0d: lea    (%rsi,%rbx,2),%rsi
  0x000000010f84bc11: and    $0xfffffffffffffff8,%rsi
  0x000000010f84bc15: mov    0x60(%r15),%rax
  0x000000010f84bc19: lea    (%rax,%rsi,1),%rsi
  0x000000010f84bc1d: cmp    0x70(%r15),%rsi
  0x000000010f84bc21: ja     0x000000010f84c977
  0x000000010f84bc27: mov    %rsi,0x60(%r15)
  0x000000010f84bc2b: sub    %rax,%rsi
  0x000000010f84bc2e: movq   $0x1,(%rax)
  0x000000010f84bc35: mov    %rdx,%rcx
  0x000000010f84bc38: shr    $0x3,%rcx
  0x000000010f84bc3c: mov    %ecx,0x8(%rax)
  0x000000010f84bc3f: mov    %ebx,0xc(%rax)
  0x000000010f84bc42: sub    $0x10,%rsi
  0x000000010f84bc46: je     0x000000010f84bc5d
  0x000000010f84bc4c: xor    %rbx,%rbx
  0x000000010f84bc4f: shr    $0x3,%rsi
  0x000000010f84bc53: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000010f84bc58: dec    %rsi
  0x000000010f84bc5b: jne    0x000000010f84bc53  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::<init>@6 (line 68)
                                                ; - java.lang.StringBuffer::<init>@2 (line 128)
                                                ; - java.io.BufferedReader::readLine@275 (line 369)

  0x000000010f84bc5d: mov    %rax,%r10
  0x000000010f84bc60: shr    $0x3,%r10
  0x000000010f84bc64: mov    %r10d,0x10(%r13)
  0x000000010f84bc68: mov    %r13,%rax
  0x000000010f84bc6b: shr    $0x9,%rax
  0x000000010f84bc6f: movabs $0x1065b9000,%rdx
  0x000000010f84bc79: movb   $0x0,(%rax,%rdx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::<init>@8 (line 68)
                                                ; - java.lang.StringBuffer::<init>@2 (line 128)
                                                ; - java.io.BufferedReader::readLine@275 (line 369)

  0x000000010f84bc7d: mov    %r13,%rax          ;*aload_2
                                                ; - java.io.BufferedReader::readLine@279 (line 370)

  0x000000010f84bc80: mov    0x2c(%r11),%edx
  0x000000010f84bc84: shl    $0x3,%rdx          ;*getfield cb
                                                ; - java.io.BufferedReader::readLine@281 (line 370)

  0x000000010f84bc88: cmp    (%rax),%rax        ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@289 (line 370)
                                                ; implicit exception: dispatches to 0x000000010f84c981
  0x000000010f84bc8b: mov    %rax,%rcx
  0x000000010f84bc8e: movabs $0x10ee1e528,%rsi  ;   {metadata(method data for {method} {0x000000010ebed730} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010f84bc98: mov    0x8(%rcx),%ecx
  0x000000010f84bc9b: shl    $0x3,%rcx
  0x000000010f84bc9f: cmp    0x450(%rsi),%rcx
  0x000000010f84bca6: jne    0x000000010f84bcb5
  0x000000010f84bca8: addq   $0x1,0x458(%rsi)
  0x000000010f84bcb0: jmpq   0x000000010f84bd1b
  0x000000010f84bcb5: cmp    0x460(%rsi),%rcx
  0x000000010f84bcbc: jne    0x000000010f84bccb
  0x000000010f84bcbe: addq   $0x1,0x468(%rsi)
  0x000000010f84bcc6: jmpq   0x000000010f84bd1b
  0x000000010f84bccb: cmpq   $0x0,0x450(%rsi)
  0x000000010f84bcd6: jne    0x000000010f84bcef
  0x000000010f84bcd8: mov    %rcx,0x450(%rsi)
  0x000000010f84bcdf: movq   $0x1,0x458(%rsi)
  0x000000010f84bcea: jmpq   0x000000010f84bd1b
  0x000000010f84bcef: cmpq   $0x0,0x460(%rsi)
  0x000000010f84bcfa: jne    0x000000010f84bd13
  0x000000010f84bcfc: mov    %rcx,0x460(%rsi)
  0x000000010f84bd03: movq   $0x1,0x468(%rsi)
  0x000000010f84bd0e: jmpq   0x000000010f84bd1b
  0x000000010f84bd13: addq   $0x1,0x448(%rsi)
  0x000000010f84bd1b: sub    %r8d,%r9d
  0x000000010f84bd1e: lea    0xc0(%rsp),%rcx
  0x000000010f84bd26: mov    %rax,%rdi
  0x000000010f84bd29: mov    %rdi,0x8(%rcx)
  0x000000010f84bd2d: mov    (%rdi),%rax
  0x000000010f84bd30: mov    %rax,%rsi
  0x000000010f84bd33: and    $0x7,%rsi
  0x000000010f84bd37: cmp    $0x5,%rsi
  0x000000010f84bd3b: jne    0x000000010f84bdc2
  0x000000010f84bd41: mov    0x8(%rdi),%esi
  0x000000010f84bd44: shl    $0x3,%rsi
  0x000000010f84bd48: mov    0xa8(%rsi),%rsi
  0x000000010f84bd4f: or     %r15,%rsi
  0x000000010f84bd52: xor    %rax,%rsi
  0x000000010f84bd55: and    $0xffffffffffffff87,%rsi
  0x000000010f84bd59: je     0x000000010f84bdea
  0x000000010f84bd5f: test   $0x7,%rsi
  0x000000010f84bd66: jne    0x000000010f84bdaf
  0x000000010f84bd68: test   $0x300,%rsi
  0x000000010f84bd6f: jne    0x000000010f84bd8e
  0x000000010f84bd71: and    $0x37f,%rax
  0x000000010f84bd78: mov    %rax,%rsi
  0x000000010f84bd7b: or     %r15,%rsi
  0x000000010f84bd7e: lock cmpxchg %rsi,(%rdi)
  0x000000010f84bd83: jne    0x000000010f84c986
  0x000000010f84bd89: jmpq   0x000000010f84bdea
  0x000000010f84bd8e: mov    0x8(%rdi),%esi
  0x000000010f84bd91: shl    $0x3,%rsi
  0x000000010f84bd95: mov    0xa8(%rsi),%rsi
  0x000000010f84bd9c: or     %r15,%rsi
  0x000000010f84bd9f: lock cmpxchg %rsi,(%rdi)
  0x000000010f84bda4: jne    0x000000010f84c986
  0x000000010f84bdaa: jmpq   0x000000010f84bdea
  0x000000010f84bdaf: mov    0x8(%rdi),%esi
  0x000000010f84bdb2: shl    $0x3,%rsi
  0x000000010f84bdb6: mov    0xa8(%rsi),%rsi
  0x000000010f84bdbd: lock cmpxchg %rsi,(%rdi)
  0x000000010f84bdc2: mov    (%rdi),%rax
  0x000000010f84bdc5: or     $0x1,%rax
  0x000000010f84bdc9: mov    %rax,(%rcx)
  0x000000010f84bdcc: lock cmpxchg %rcx,(%rdi)
  0x000000010f84bdd1: je     0x000000010f84bdea
  0x000000010f84bdd7: sub    %rsp,%rax
  0x000000010f84bdda: and    $0xfffffffffffff007,%rax
  0x000000010f84bde1: mov    %rax,(%rcx)
  0x000000010f84bde4: jne    0x000000010f84c986  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)

  0x000000010f84bdea: movabs $0x10ee21618,%rcx  ;   {metadata(method data for {method} {0x000000010ead66f8} 'append' '([CII)Ljava/lang/StringBuffer;' in 'java/lang/StringBuffer')}
  0x000000010f84bdf4: mov    0xdc(%rcx),%esi
  0x000000010f84bdfa: add    $0x8,%esi
  0x000000010f84bdfd: mov    %esi,0xdc(%rcx)
  0x000000010f84be03: movabs $0x10ead66f8,%rcx  ;   {metadata({method} {0x000000010ead66f8} 'append' '([CII)Ljava/lang/StringBuffer;' in 'java/lang/StringBuffer')}
  0x000000010f84be0d: and    $0x7ffff8,%esi
  0x000000010f84be13: cmp    $0x0,%esi
  0x000000010f84be16: je     0x000000010f84c999
  0x000000010f84be1c: movl   $0x0,0x14(%rdi)
  0x000000010f84be23: mov    %rdi,%rax
  0x000000010f84be26: shr    $0x9,%rax
  0x000000010f84be2a: movabs $0x1065b9000,%rcx
  0x000000010f84be34: movb   $0x0,(%rax,%rcx,1)  ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::append@2 (line 366)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)

  0x000000010f84be38: mov    %rdi,%rax
  0x000000010f84be3b: movabs $0x10ee21618,%rcx  ;   {metadata(method data for {method} {0x000000010ead66f8} 'append' '([CII)Ljava/lang/StringBuffer;' in 'java/lang/StringBuffer')}
  0x000000010f84be45: addq   $0x1,0x108(%rcx)
  0x000000010f84be4d: mov    %r8,%rcx
  0x000000010f84be50: mov    %r9,%r8
  0x000000010f84be53: mov    %rdi,%rsi          ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@9 (line 367)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)

  0x000000010f84be56: mov    %rdi,0x90(%rsp)
  0x000000010f84be5e: nop
  0x000000010f84be5f: callq  0x000000010f7170a0  ; OopMap{[136]=Oop [112]=Oop [144]=Oop [184]=Oop [200]=Oop off=2340}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@9 (line 367)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)
                                                ;   {optimized virtual_call}
  0x000000010f84be64: lea    0xc0(%rsp),%rax
  0x000000010f84be6c: mov    0x8(%rax),%rsi
  0x000000010f84be70: mov    (%rsi),%rdx
  0x000000010f84be73: and    $0x7,%rdx
  0x000000010f84be77: cmp    $0x5,%rdx
  0x000000010f84be7b: je     0x000000010f84be98
  0x000000010f84be81: mov    (%rax),%rdx
  0x000000010f84be84: test   %rdx,%rdx
  0x000000010f84be87: je     0x000000010f84be98
  0x000000010f84be8d: lock cmpxchg %rdx,(%rsi)
  0x000000010f84be92: jne    0x000000010f84c9b0  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)

  0x000000010f84be98: movabs $0x10ee1e528,%rdx  ;   {metadata(method data for {method} {0x000000010ebed730} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010f84bea2: mov    0xe0(%rdx),%esi
  0x000000010f84bea8: add    $0x8,%esi
  0x000000010f84beab: mov    %esi,0xe0(%rdx)
  0x000000010f84beb1: movabs $0x10ebed730,%rdx  ;   {metadata({method} {0x000000010ebed730} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010f84bebb: and    $0xfff8,%esi
  0x000000010f84bec1: cmp    $0x0,%esi
  0x000000010f84bec4: je     0x000000010f84c9c6  ; OopMap{[136]=Oop [112]=Oop [144]=Oop [184]=Oop off=2442}
                                                ;*goto
                                                ; - java.io.BufferedReader::readLine@293 (line 371)

  0x000000010f84beca: test   %eax,-0x8db0dd0(%rip)        # 0x0000000106a9b100
                                                ;   {poll}
  0x000000010f84bed0: movabs $0x10ee1e528,%rdx  ;   {metadata(method data for {method} {0x000000010ebed730} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010f84beda: incl   0x478(%rdx)
  0x000000010f84bee0: mov    0x90(%rsp),%rax
  0x000000010f84bee8: mov    $0x0,%ebx
  0x000000010f84beed: mov    %ebx,0x78(%rsp)
  0x000000010f84bef1: mov    %rax,0x80(%rsp)
  0x000000010f84bef9: mov    0x70(%rsp),%rsi
  0x000000010f84befe: jmpq   0x000000010f84b7b8  ;*goto
                                                ; - java.io.BufferedReader::readLine@293 (line 371)

  0x000000010f84bf03: cmp    $0x0,%rax
  0x000000010f84bf07: movabs $0x10ee1e528,%rsi  ;   {metadata(method data for {method} {0x000000010ebed730} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010f84bf11: movabs $0x350,%rdi
  0x000000010f84bf1b: jne    0x000000010f84bf2b
  0x000000010f84bf21: movabs $0x360,%rdi
  0x000000010f84bf2b: mov    (%rsi,%rdi,1),%rcx
  0x000000010f84bf2f: lea    0x1(%rcx),%rcx
  0x000000010f84bf33: mov    %rcx,(%rsi,%rdi,1)
  0x000000010f84bf37: mov    %edx,0x7c(%rsp)
  0x000000010f84bf3b: mov    0x70(%rsp),%rsi
  0x000000010f84bf40: jne    0x000000010f84bfe1  ;*ifnonnull
                                                ; - java.io.BufferedReader::readLine@192 (line 355)

  0x000000010f84bf46: movabs $0x7c00016d0,%rdx  ;   {metadata('java/lang/String')}
  0x000000010f84bf50: mov    %rsi,%r11
  0x000000010f84bf53: mov    0x60(%r15),%rax
  0x000000010f84bf57: lea    0x18(%rax),%rdi
  0x000000010f84bf5b: cmp    0x70(%r15),%rdi
  0x000000010f84bf5f: ja     0x000000010f84c9dd
  0x000000010f84bf65: mov    %rdi,0x60(%r15)
  0x000000010f84bf69: mov    0xa8(%rdx),%rcx
  0x000000010f84bf70: mov    %rcx,(%rax)
  0x000000010f84bf73: mov    %rdx,%rcx
  0x000000010f84bf76: shr    $0x3,%rcx
  0x000000010f84bf7a: mov    %ecx,0x8(%rax)
  0x000000010f84bf7d: xor    %rcx,%rcx
  0x000000010f84bf80: mov    %ecx,0xc(%rax)
  0x000000010f84bf83: xor    %rcx,%rcx
  0x000000010f84bf86: mov    %rcx,0x10(%rax)    ;*new  ; - java.io.BufferedReader::readLine@195 (line 356)

  0x000000010f84bf8a: mov    0x2c(%r11),%edx
  0x000000010f84bf8e: shl    $0x3,%rdx          ;*getfield cb
                                                ; - java.io.BufferedReader::readLine@200 (line 356)

  0x000000010f84bf92: mov    %rax,%rcx
  0x000000010f84bf95: movabs $0x10ee1e528,%rsi  ;   {metadata(method data for {method} {0x000000010ebed730} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010f84bf9f: addq   $0x1,0x370(%rsi)
  0x000000010f84bfa7: sub    %r8d,%r9d
  0x000000010f84bfaa: mov    %r8,%rcx
  0x000000010f84bfad: mov    %r9,%r8
  0x000000010f84bfb0: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.io.BufferedReader::readLine@208 (line 356)

  0x000000010f84bfb3: mov    %rax,0x98(%rsp)
  0x000000010f84bfbb: nop
  0x000000010f84bfbc: nop
  0x000000010f84bfbd: nop
  0x000000010f84bfbe: nop
  0x000000010f84bfbf: callq  0x000000010f7170a0  ; OopMap{[136]=Oop [112]=Oop [152]=Oop [184]=Oop off=2692}
                                                ;*invokespecial <init>
                                                ; - java.io.BufferedReader::readLine@208 (line 356)
                                                ;   {optimized virtual_call}
  0x000000010f84bfc4: movabs $0x10ee1e528,%rax  ;   {metadata(method data for {method} {0x000000010ebed730} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010f84bfce: incl   0x380(%rax)
  0x000000010f84bfd4: mov    0x98(%rsp),%rsi
  0x000000010f84bfdc: jmpq   0x000000010f84c29f  ;*goto
                                                ; - java.io.BufferedReader::readLine@213 (line 356)

  0x000000010f84bfe1: mov    0x2c(%rsi),%edx
  0x000000010f84bfe4: shl    $0x3,%rdx          ;*getfield cb
                                                ; - java.io.BufferedReader::readLine@218 (line 358)

  0x000000010f84bfe8: cmp    (%rax),%rax        ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@226 (line 358)
                                                ; implicit exception: dispatches to 0x000000010f84c9ea
  0x000000010f84bfeb: mov    %rax,%rcx
  0x000000010f84bfee: movabs $0x10ee1e528,%rdi  ;   {metadata(method data for {method} {0x000000010ebed730} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010f84bff8: mov    0x8(%rcx),%ecx
  0x000000010f84bffb: shl    $0x3,%rcx
  0x000000010f84bfff: cmp    0x3a0(%rdi),%rcx
  0x000000010f84c006: jne    0x000000010f84c015
  0x000000010f84c008: addq   $0x1,0x3a8(%rdi)
  0x000000010f84c010: jmpq   0x000000010f84c07b
  0x000000010f84c015: cmp    0x3b0(%rdi),%rcx
  0x000000010f84c01c: jne    0x000000010f84c02b
  0x000000010f84c01e: addq   $0x1,0x3b8(%rdi)
  0x000000010f84c026: jmpq   0x000000010f84c07b
  0x000000010f84c02b: cmpq   $0x0,0x3a0(%rdi)
  0x000000010f84c036: jne    0x000000010f84c04f
  0x000000010f84c038: mov    %rcx,0x3a0(%rdi)
  0x000000010f84c03f: movq   $0x1,0x3a8(%rdi)
  0x000000010f84c04a: jmpq   0x000000010f84c07b
  0x000000010f84c04f: cmpq   $0x0,0x3b0(%rdi)
  0x000000010f84c05a: jne    0x000000010f84c073
  0x000000010f84c05c: mov    %rcx,0x3b0(%rdi)
  0x000000010f84c063: movq   $0x1,0x3b8(%rdi)
  0x000000010f84c06e: jmpq   0x000000010f84c07b
  0x000000010f84c073: addq   $0x1,0x398(%rdi)
  0x000000010f84c07b: sub    %r8d,%r9d
  0x000000010f84c07e: lea    0xc0(%rsp),%rcx
  0x000000010f84c086: mov    %rax,%rdi
  0x000000010f84c089: mov    %rdi,0x8(%rcx)
  0x000000010f84c08d: mov    (%rdi),%rax
  0x000000010f84c090: mov    %rax,%rbx
  0x000000010f84c093: and    $0x7,%rbx
  0x000000010f84c097: cmp    $0x5,%rbx
  0x000000010f84c09b: jne    0x000000010f84c122
  0x000000010f84c0a1: mov    0x8(%rdi),%ebx
  0x000000010f84c0a4: shl    $0x3,%rbx
  0x000000010f84c0a8: mov    0xa8(%rbx),%rbx
  0x000000010f84c0af: or     %r15,%rbx
  0x000000010f84c0b2: xor    %rax,%rbx
  0x000000010f84c0b5: and    $0xffffffffffffff87,%rbx
  0x000000010f84c0b9: je     0x000000010f84c14a
  0x000000010f84c0bf: test   $0x7,%rbx
  0x000000010f84c0c6: jne    0x000000010f84c10f
  0x000000010f84c0c8: test   $0x300,%rbx
  0x000000010f84c0cf: jne    0x000000010f84c0ee
  0x000000010f84c0d1: and    $0x37f,%rax
  0x000000010f84c0d8: mov    %rax,%rbx
  0x000000010f84c0db: or     %r15,%rbx
  0x000000010f84c0de: lock cmpxchg %rbx,(%rdi)
  0x000000010f84c0e3: jne    0x000000010f84c9ef
  0x000000010f84c0e9: jmpq   0x000000010f84c14a
  0x000000010f84c0ee: mov    0x8(%rdi),%ebx
  0x000000010f84c0f1: shl    $0x3,%rbx
  0x000000010f84c0f5: mov    0xa8(%rbx),%rbx
  0x000000010f84c0fc: or     %r15,%rbx
  0x000000010f84c0ff: lock cmpxchg %rbx,(%rdi)
  0x000000010f84c104: jne    0x000000010f84c9ef
  0x000000010f84c10a: jmpq   0x000000010f84c14a
  0x000000010f84c10f: mov    0x8(%rdi),%ebx
  0x000000010f84c112: shl    $0x3,%rbx
  0x000000010f84c116: mov    0xa8(%rbx),%rbx
  0x000000010f84c11d: lock cmpxchg %rbx,(%rdi)
  0x000000010f84c122: mov    (%rdi),%rax
  0x000000010f84c125: or     $0x1,%rax
  0x000000010f84c129: mov    %rax,(%rcx)
  0x000000010f84c12c: lock cmpxchg %rcx,(%rdi)
  0x000000010f84c131: je     0x000000010f84c14a
  0x000000010f84c137: sub    %rsp,%rax
  0x000000010f84c13a: and    $0xfffffffffffff007,%rax
  0x000000010f84c141: mov    %rax,(%rcx)
  0x000000010f84c144: jne    0x000000010f84c9ef  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)

  0x000000010f84c14a: movabs $0x10ee21618,%rcx  ;   {metadata(method data for {method} {0x000000010ead66f8} 'append' '([CII)Ljava/lang/StringBuffer;' in 'java/lang/StringBuffer')}
  0x000000010f84c154: mov    0xdc(%rcx),%ebx
  0x000000010f84c15a: add    $0x8,%ebx
  0x000000010f84c15d: mov    %ebx,0xdc(%rcx)
  0x000000010f84c163: movabs $0x10ead66f8,%rcx  ;   {metadata({method} {0x000000010ead66f8} 'append' '([CII)Ljava/lang/StringBuffer;' in 'java/lang/StringBuffer')}
  0x000000010f84c16d: and    $0x7ffff8,%ebx
  0x000000010f84c173: cmp    $0x0,%ebx
  0x000000010f84c176: je     0x000000010f84ca02
  0x000000010f84c17c: movl   $0x0,0x14(%rdi)
  0x000000010f84c183: mov    %rdi,%rax
  0x000000010f84c186: shr    $0x9,%rax
  0x000000010f84c18a: movabs $0x1065b9000,%rcx
  0x000000010f84c194: movb   $0x0,(%rax,%rcx,1)  ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::append@2 (line 366)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)

  0x000000010f84c198: mov    %rdi,%rax
  0x000000010f84c19b: movabs $0x10ee21618,%rcx  ;   {metadata(method data for {method} {0x000000010ead66f8} 'append' '([CII)Ljava/lang/StringBuffer;' in 'java/lang/StringBuffer')}
  0x000000010f84c1a5: addq   $0x1,0x108(%rcx)
  0x000000010f84c1ad: mov    %r8,%rcx
  0x000000010f84c1b0: mov    %r9,%r8
  0x000000010f84c1b3: mov    %rdi,%rsi          ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@9 (line 367)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)

  0x000000010f84c1b6: mov    %rdi,0x80(%rsp)
  0x000000010f84c1be: nop
  0x000000010f84c1bf: callq  0x000000010f7170a0  ; OopMap{[136]=Oop [128]=Oop [112]=Oop [184]=Oop [200]=Oop off=3204}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@9 (line 367)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)
                                                ;   {optimized virtual_call}
  0x000000010f84c1c4: lea    0xc0(%rsp),%rax
  0x000000010f84c1cc: mov    0x8(%rax),%rdi
  0x000000010f84c1d0: mov    (%rdi),%rsi
  0x000000010f84c1d3: and    $0x7,%rsi
  0x000000010f84c1d7: cmp    $0x5,%rsi
  0x000000010f84c1db: je     0x000000010f84c1f8
  0x000000010f84c1e1: mov    (%rax),%rsi
  0x000000010f84c1e4: test   %rsi,%rsi
  0x000000010f84c1e7: je     0x000000010f84c1f8
  0x000000010f84c1ed: lock cmpxchg %rsi,(%rdi)
  0x000000010f84c1f2: jne    0x000000010f84ca19  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)

  0x000000010f84c1f8: mov    0x80(%rsp),%rax
  0x000000010f84c200: movabs $0x10ee1e528,%rsi  ;   {metadata(method data for {method} {0x000000010ebed730} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010f84c20a: mov    0x8(%rax),%eax
  0x000000010f84c20d: shl    $0x3,%rax
  0x000000010f84c211: cmp    0x3d0(%rsi),%rax
  0x000000010f84c218: jne    0x000000010f84c227
  0x000000010f84c21a: addq   $0x1,0x3d8(%rsi)
  0x000000010f84c222: jmpq   0x000000010f84c28d
  0x000000010f84c227: cmp    0x3e0(%rsi),%rax
  0x000000010f84c22e: jne    0x000000010f84c23d
  0x000000010f84c230: addq   $0x1,0x3e8(%rsi)
  0x000000010f84c238: jmpq   0x000000010f84c28d
  0x000000010f84c23d: cmpq   $0x0,0x3d0(%rsi)
  0x000000010f84c248: jne    0x000000010f84c261
  0x000000010f84c24a: mov    %rax,0x3d0(%rsi)
  0x000000010f84c251: movq   $0x1,0x3d8(%rsi)
  0x000000010f84c25c: jmpq   0x000000010f84c28d
  0x000000010f84c261: cmpq   $0x0,0x3e0(%rsi)
  0x000000010f84c26c: jne    0x000000010f84c285
  0x000000010f84c26e: mov    %rax,0x3e0(%rsi)
  0x000000010f84c275: movq   $0x1,0x3e8(%rsi)
  0x000000010f84c280: jmpq   0x000000010f84c28d
  0x000000010f84c285: addq   $0x1,0x3c8(%rsi)
  0x000000010f84c28d: mov    0x80(%rsp),%rsi    ;*invokevirtual toString
                                                ; - java.io.BufferedReader::readLine@231 (line 359)

  0x000000010f84c295: nop
  0x000000010f84c296: nop
  0x000000010f84c297: callq  0x000000010f7170a0  ; OopMap{[136]=Oop [128]=Oop [112]=Oop [184]=Oop off=3420}
                                                ;*invokevirtual toString
                                                ; - java.io.BufferedReader::readLine@231 (line 359)
                                                ;   {optimized virtual_call}
  0x000000010f84c29c: mov    %rax,%rsi          ;*aload_0
                                                ; - java.io.BufferedReader::readLine@236 (line 361)

  0x000000010f84c29f: mov    0x7c(%rsp),%edi
  0x000000010f84c2a3: mov    0x70(%rsp),%rbx
  0x000000010f84c2a8: mov    0x18(%rbx),%eax    ;*getfield nextChar
                                                ; - java.io.BufferedReader::readLine@238 (line 361)

  0x000000010f84c2ab: inc    %eax
  0x000000010f84c2ad: mov    %eax,0x18(%rbx)    ;*putfield nextChar
                                                ; - java.io.BufferedReader::readLine@243 (line 361)

  0x000000010f84c2b0: cmp    $0xd,%edi
  0x000000010f84c2b3: movabs $0x10ee1e528,%rax  ;   {metadata(method data for {method} {0x000000010ebed730} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010f84c2bd: movabs $0x3f8,%rdi
  0x000000010f84c2c7: jne    0x000000010f84c2d7
  0x000000010f84c2cd: movabs $0x408,%rdi
  0x000000010f84c2d7: mov    (%rax,%rdi,1),%rdx
  0x000000010f84c2db: lea    0x1(%rdx),%rdx
  0x000000010f84c2df: mov    %rdx,(%rax,%rdi,1)
  0x000000010f84c2e3: jne    0x000000010f84c62d  ;*if_icmpne
                                                ; - java.io.BufferedReader::readLine@250 (line 362)

  0x000000010f84c2e9: movb   $0x1,0x24(%rbx)    ;*putfield skipLF
                                                ; - java.io.BufferedReader::readLine@255 (line 363)

  0x000000010f84c2ed: jmpq   0x000000010f84c62d  ;*aload
                                                ; - java.io.BufferedReader::readLine@258 (line 365)

  0x000000010f84c2f2: mov    0x80(%rsp),%rsi
  0x000000010f84c2fa: cmp    $0x0,%rsi
  0x000000010f84c2fe: movabs $0x10ee1e528,%rax  ;   {metadata(method data for {method} {0x000000010ebed730} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010f84c308: movabs $0x1c0,%rdi
  0x000000010f84c312: je     0x000000010f84c322
  0x000000010f84c318: movabs $0x1d0,%rdi
  0x000000010f84c322: mov    (%rax,%rdi,1),%rbx
  0x000000010f84c326: lea    0x1(%rbx),%rbx
  0x000000010f84c32a: mov    %rbx,(%rax,%rdi,1)
  0x000000010f84c32e: je     0x000000010f84c500  ;*ifnull
                                                ; - java.io.BufferedReader::readLine@59 (line 326)

  0x000000010f84c334: cmp    (%rsi),%rax        ;*invokevirtual length
                                                ; - java.io.BufferedReader::readLine@63 (line 326)
                                                ; implicit exception: dispatches to 0x000000010f84ca2f
  0x000000010f84c337: mov    %rsi,%rax
  0x000000010f84c33a: movabs $0x10ee1e528,%rdi  ;   {metadata(method data for {method} {0x000000010ebed730} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010f84c344: mov    0x8(%rax),%eax
  0x000000010f84c347: shl    $0x3,%rax
  0x000000010f84c34b: cmp    0x1e8(%rdi),%rax
  0x000000010f84c352: jne    0x000000010f84c361
  0x000000010f84c354: addq   $0x1,0x1f0(%rdi)
  0x000000010f84c35c: jmpq   0x000000010f84c3c7
  0x000000010f84c361: cmp    0x1f8(%rdi),%rax
  0x000000010f84c368: jne    0x000000010f84c377
  0x000000010f84c36a: addq   $0x1,0x200(%rdi)
  0x000000010f84c372: jmpq   0x000000010f84c3c7
  0x000000010f84c377: cmpq   $0x0,0x1e8(%rdi)
  0x000000010f84c382: jne    0x000000010f84c39b
  0x000000010f84c384: mov    %rax,0x1e8(%rdi)
  0x000000010f84c38b: movq   $0x1,0x1f0(%rdi)
  0x000000010f84c396: jmpq   0x000000010f84c3c7
  0x000000010f84c39b: cmpq   $0x0,0x1f8(%rdi)
  0x000000010f84c3a6: jne    0x000000010f84c3bf
  0x000000010f84c3a8: mov    %rax,0x1f8(%rdi)
  0x000000010f84c3af: movq   $0x1,0x200(%rdi)
  0x000000010f84c3ba: jmpq   0x000000010f84c3c7
  0x000000010f84c3bf: addq   $0x1,0x1e0(%rdi)
  0x000000010f84c3c7: lea    0xc0(%rsp),%rdi
  0x000000010f84c3cf: mov    %rsi,0x8(%rdi)
  0x000000010f84c3d3: mov    (%rsi),%rax
  0x000000010f84c3d6: mov    %rax,%rbx
  0x000000010f84c3d9: and    $0x7,%rbx
  0x000000010f84c3dd: cmp    $0x5,%rbx
  0x000000010f84c3e1: jne    0x000000010f84c468
  0x000000010f84c3e7: mov    0x8(%rsi),%ebx
  0x000000010f84c3ea: shl    $0x3,%rbx
  0x000000010f84c3ee: mov    0xa8(%rbx),%rbx
  0x000000010f84c3f5: or     %r15,%rbx
  0x000000010f84c3f8: xor    %rax,%rbx
  0x000000010f84c3fb: and    $0xffffffffffffff87,%rbx
  0x000000010f84c3ff: je     0x000000010f84c490
  0x000000010f84c405: test   $0x7,%rbx
  0x000000010f84c40c: jne    0x000000010f84c455
  0x000000010f84c40e: test   $0x300,%rbx
  0x000000010f84c415: jne    0x000000010f84c434
  0x000000010f84c417: and    $0x37f,%rax
  0x000000010f84c41e: mov    %rax,%rbx
  0x000000010f84c421: or     %r15,%rbx
  0x000000010f84c424: lock cmpxchg %rbx,(%rsi)
  0x000000010f84c429: jne    0x000000010f84ca34
  0x000000010f84c42f: jmpq   0x000000010f84c490
  0x000000010f84c434: mov    0x8(%rsi),%ebx
  0x000000010f84c437: shl    $0x3,%rbx
  0x000000010f84c43b: mov    0xa8(%rbx),%rbx
  0x000000010f84c442: or     %r15,%rbx
  0x000000010f84c445: lock cmpxchg %rbx,(%rsi)
  0x000000010f84c44a: jne    0x000000010f84ca34
  0x000000010f84c450: jmpq   0x000000010f84c490
  0x000000010f84c455: mov    0x8(%rsi),%ebx
  0x000000010f84c458: shl    $0x3,%rbx
  0x000000010f84c45c: mov    0xa8(%rbx),%rbx
  0x000000010f84c463: lock cmpxchg %rbx,(%rsi)
  0x000000010f84c468: mov    (%rsi),%rax
  0x000000010f84c46b: or     $0x1,%rax
  0x000000010f84c46f: mov    %rax,(%rdi)
  0x000000010f84c472: lock cmpxchg %rdi,(%rsi)
  0x000000010f84c477: je     0x000000010f84c490
  0x000000010f84c47d: sub    %rsp,%rax
  0x000000010f84c480: and    $0xfffffffffffff007,%rax
  0x000000010f84c487: mov    %rax,(%rdi)
  0x000000010f84c48a: jne    0x000000010f84ca34  ;*synchronization entry
                                                ; - java.lang.StringBuffer::length@-1 (line 163)
                                                ; - java.io.BufferedReader::readLine@63 (line 326)

  0x000000010f84c490: mov    0xc(%rsi),%edi     ;*getfield count
                                                ; - java.lang.StringBuffer::length@1 (line 163)
                                                ; - java.io.BufferedReader::readLine@63 (line 326)

  0x000000010f84c493: lea    0xc0(%rsp),%rax
  0x000000010f84c49b: mov    0x8(%rax),%rdx
  0x000000010f84c49f: mov    (%rdx),%rbx
  0x000000010f84c4a2: and    $0x7,%rbx
  0x000000010f84c4a6: cmp    $0x5,%rbx
  0x000000010f84c4aa: je     0x000000010f84c4c7
  0x000000010f84c4b0: mov    (%rax),%rbx
  0x000000010f84c4b3: test   %rbx,%rbx
  0x000000010f84c4b6: je     0x000000010f84c4c7
  0x000000010f84c4bc: lock cmpxchg %rbx,(%rdx)
  0x000000010f84c4c1: jne    0x000000010f84ca47  ;*synchronization entry
                                                ; - java.lang.StringBuffer::length@-1 (line 163)
                                                ; - java.io.BufferedReader::readLine@63 (line 326)

  0x000000010f84c4c7: cmp    $0x0,%edi
  0x000000010f84c4ca: movabs $0x10ee1e528,%rax  ;   {metadata(method data for {method} {0x000000010ebed730} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010f84c4d4: movabs $0x210,%rdi
  0x000000010f84c4de: jle    0x000000010f84c4ee
  0x000000010f84c4e4: movabs $0x220,%rdi
  0x000000010f84c4ee: mov    (%rax,%rdi,1),%rbx
  0x000000010f84c4f2: lea    0x1(%rbx),%rbx
  0x000000010f84c4f6: mov    %rbx,(%rax,%rdi,1)
  0x000000010f84c4fa: jg     0x000000010f84c54d  ;*ifle
                                                ; - java.io.BufferedReader::readLine@66 (line 326)

  0x000000010f84c500: lea    0xb0(%rsp),%rax
  0x000000010f84c508: mov    0x8(%rax),%rdi
  0x000000010f84c50c: mov    (%rdi),%rsi
  0x000000010f84c50f: and    $0x7,%rsi
  0x000000010f84c513: cmp    $0x5,%rsi
  0x000000010f84c517: je     0x000000010f84c534
  0x000000010f84c51d: mov    (%rax),%rsi
  0x000000010f84c520: test   %rsi,%rsi
  0x000000010f84c523: je     0x000000010f84c534
  0x000000010f84c529: lock cmpxchg %rsi,(%rdi)
  0x000000010f84c52e: jne    0x000000010f84ca5d  ;*monitorexit
                                                ; - java.io.BufferedReader::readLine@80 (line 329)

  0x000000010f84c534: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000010f84c53e: add    $0xe0,%rsp
  0x000000010f84c545: pop    %rbp
  0x000000010f84c546: test   %eax,-0x8db144c(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f84c54c: retq                      ;*areturn
                                                ; - java.io.BufferedReader::readLine@81 (line 329)

  0x000000010f84c54d: mov    %rsi,%rax
  0x000000010f84c550: movabs $0x10ee1e528,%rdi  ;   {metadata(method data for {method} {0x000000010ebed730} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010f84c55a: mov    0x8(%rax),%eax
  0x000000010f84c55d: shl    $0x3,%rax
  0x000000010f84c561: cmp    0x238(%rdi),%rax
  0x000000010f84c568: jne    0x000000010f84c577
  0x000000010f84c56a: addq   $0x1,0x240(%rdi)
  0x000000010f84c572: jmpq   0x000000010f84c5dd
  0x000000010f84c577: cmp    0x248(%rdi),%rax
  0x000000010f84c57e: jne    0x000000010f84c58d
  0x000000010f84c580: addq   $0x1,0x250(%rdi)
  0x000000010f84c588: jmpq   0x000000010f84c5dd
  0x000000010f84c58d: cmpq   $0x0,0x238(%rdi)
  0x000000010f84c598: jne    0x000000010f84c5b1
  0x000000010f84c59a: mov    %rax,0x238(%rdi)
  0x000000010f84c5a1: movq   $0x1,0x240(%rdi)
  0x000000010f84c5ac: jmpq   0x000000010f84c5dd
  0x000000010f84c5b1: cmpq   $0x0,0x248(%rdi)
  0x000000010f84c5bc: jne    0x000000010f84c5d5
  0x000000010f84c5be: mov    %rax,0x248(%rdi)
  0x000000010f84c5c5: movq   $0x1,0x250(%rdi)
  0x000000010f84c5d0: jmpq   0x000000010f84c5dd
  0x000000010f84c5d5: addq   $0x1,0x230(%rdi)
  0x000000010f84c5dd: nop
  0x000000010f84c5de: nop
  0x000000010f84c5df: callq  0x000000010f7170a0  ; OopMap{[136]=Oop [184]=Oop off=4260}
                                                ;*invokevirtual toString
                                                ; - java.io.BufferedReader::readLine@70 (line 327)
                                                ;   {optimized virtual_call}
  0x000000010f84c5e4: mov    %rax,%rdx          ;*invokevirtual toString
                                                ; - java.io.BufferedReader::readLine@70 (line 327)

  0x000000010f84c5e7: lea    0xb0(%rsp),%rax
  0x000000010f84c5ef: mov    0x8(%rax),%rdi
  0x000000010f84c5f3: mov    (%rdi),%rsi
  0x000000010f84c5f6: and    $0x7,%rsi
  0x000000010f84c5fa: cmp    $0x5,%rsi
  0x000000010f84c5fe: je     0x000000010f84c61b
  0x000000010f84c604: mov    (%rax),%rsi
  0x000000010f84c607: test   %rsi,%rsi
  0x000000010f84c60a: je     0x000000010f84c61b
  0x000000010f84c610: lock cmpxchg %rsi,(%rdi)
  0x000000010f84c615: jne    0x000000010f84ca73  ;*monitorexit
                                                ; - java.io.BufferedReader::readLine@75 (line 327)

  0x000000010f84c61b: mov    %rdx,%rax
  0x000000010f84c61e: add    $0xe0,%rsp
  0x000000010f84c625: pop    %rbp
  0x000000010f84c626: test   %eax,-0x8db152c(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f84c62c: retq                      ;*areturn
                                                ; - java.io.BufferedReader::readLine@76 (line 327)

  0x000000010f84c62d: lea    0xb0(%rsp),%rax
  0x000000010f84c635: mov    0x8(%rax),%rdi
  0x000000010f84c639: mov    (%rdi),%rdx
  0x000000010f84c63c: and    $0x7,%rdx
  0x000000010f84c640: cmp    $0x5,%rdx
  0x000000010f84c644: je     0x000000010f84c661
  0x000000010f84c64a: mov    (%rax),%rdx
  0x000000010f84c64d: test   %rdx,%rdx
  0x000000010f84c650: je     0x000000010f84c661
  0x000000010f84c656: lock cmpxchg %rdx,(%rdi)
  0x000000010f84c65b: jne    0x000000010f84ca89  ;*monitorexit
                                                ; - java.io.BufferedReader::readLine@262 (line 365)

  0x000000010f84c661: mov    %rsi,%rax
  0x000000010f84c664: add    $0xe0,%rsp
  0x000000010f84c66b: pop    %rbp
  0x000000010f84c66c: test   %eax,-0x8db1572(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f84c672: retq                      ;*areturn
                                                ; - java.io.BufferedReader::readLine@263 (line 365)

  0x000000010f84c673: mov    %edx,0xa8(%rsp)
  0x000000010f84c67a: nopw   0x0(%rax,%rax,1)
  0x000000010f84c680: jmpq   0x000000010f84caae  ;   {no_reloc}
  0x000000010f84c685: add    %al,(%rax)
  0x000000010f84c687: add    %al,(%rax)
  0x000000010f84c689: add    %cl,-0x75(%rcx)
  0x000000010f84c68c: rex.RXB (bad) 
  0x000000010f84c68e: lea    0x20(%rax),%rdi
  0x000000010f84c692: cmp    0x70(%r15),%rdi
  0x000000010f84c696: ja     0x000000010f84cab8
  0x000000010f84c69c: mov    %rdi,0x60(%r15)
  0x000000010f84c6a0: mov    0xa8(%rdx),%rcx
  0x000000010f84c6a7: mov    %rcx,(%rax)
  0x000000010f84c6aa: mov    %rdx,%rcx
  0x000000010f84c6ad: shr    $0x3,%rcx
  0x000000010f84c6b1: mov    %ecx,0x8(%rax)
  0x000000010f84c6b4: xor    %rcx,%rcx
  0x000000010f84c6b7: mov    %ecx,0xc(%rax)
  0x000000010f84c6ba: xor    %rcx,%rcx
  0x000000010f84c6bd: mov    %rcx,0x10(%rax)
  0x000000010f84c6c1: mov    %rcx,0x18(%rax)    ;*new  ; - java.io.BufferedReader::ensureOpen@7 (line 122)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)

  0x000000010f84c6c5: mov    %rax,%rdx
  0x000000010f84c6c8: movabs $0x10ee20010,%rsi  ;   {metadata(method data for {method} {0x000000010ebed008} 'ensureOpen' '()V' in 'java/io/BufferedReader')}
  0x000000010f84c6d2: addq   $0x1,0x128(%rsi)
  0x000000010f84c6da: movabs $0x795968eb0,%rdx  ;   {oop("Stream closed")}
  0x000000010f84c6e4: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.io.BufferedReader::ensureOpen@13 (line 122)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)

  0x000000010f84c6e7: mov    %rax,0xa0(%rsp)
  0x000000010f84c6ef: callq  0x000000010f7170a0  ; OopMap{[136]=Oop [112]=Oop [160]=Oop [184]=Oop off=4532}
                                                ;*invokespecial <init>
                                                ; - java.io.BufferedReader::ensureOpen@13 (line 122)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)
                                                ;   {optimized virtual_call}
  0x000000010f84c6f4: mov    0xa0(%rsp),%rax    ; OopMap{[136]=Oop [112]=Oop [184]=Oop rax=Oop off=4540}
                                                ;*athrow
                                                ; - java.io.BufferedReader::ensureOpen@16 (line 122)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)

  0x000000010f84c6fc: movabs $0x10f84c6fc,%rdx  ;   {section_word}
  0x000000010f84c706: callq  0x000000010f7cece0  ;   {runtime_call}
  0x000000010f84c70b: nop                       ;*athrow
                                                ; - java.io.BufferedReader::ensureOpen@16 (line 122)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)

  0x000000010f84c70c: mov    0x2a8(%r15),%rax
  0x000000010f84c713: xor    %r10,%r10
  0x000000010f84c716: mov    %r10,0x2a8(%r15)
  0x000000010f84c71d: xor    %r10,%r10
  0x000000010f84c720: mov    %r10,0x2b0(%r15)
  0x000000010f84c727: mov    %rax,%rdx
  0x000000010f84c72a: lea    0xc0(%rsp),%rax
  0x000000010f84c732: mov    0x8(%rax),%rbx
  0x000000010f84c736: mov    (%rbx),%rdi
  0x000000010f84c739: and    $0x7,%rdi
  0x000000010f84c73d: cmp    $0x5,%rdi
  0x000000010f84c741: je     0x000000010f84c75e
  0x000000010f84c747: mov    (%rax),%rdi
  0x000000010f84c74a: test   %rdi,%rdi
  0x000000010f84c74d: je     0x000000010f84c75e
  0x000000010f84c753: lock cmpxchg %rdi,(%rbx)
  0x000000010f84c758: jne    0x000000010f84cac5  ;*synchronization entry
                                                ; - java.lang.StringBuffer::length@-1 (line 163)
                                                ; - java.io.BufferedReader::readLine@63 (line 326)

  0x000000010f84c75e: mov    %rdx,%rax          ; OopMap{rsi=Oop [136]=Oop [184]=Oop rax=Oop off=4641}
                                                ;*invokevirtual length
                                                ; - java.io.BufferedReader::readLine@63 (line 326)

  0x000000010f84c761: movabs $0x10f84c761,%rdx  ;   {section_word}
  0x000000010f84c76b: callq  0x000000010f7cece0  ;   {runtime_call}
  0x000000010f84c770: nop                       ;*invokevirtual length
                                                ; - java.io.BufferedReader::readLine@63 (line 326)

  0x000000010f84c771: mov    0x2a8(%r15),%rax
  0x000000010f84c778: xor    %r10,%r10
  0x000000010f84c77b: mov    %r10,0x2a8(%r15)
  0x000000010f84c782: xor    %r10,%r10
  0x000000010f84c785: mov    %r10,0x2b0(%r15)
  0x000000010f84c78c: mov    %rax,%rdx
  0x000000010f84c78f: lea    0xc0(%rsp),%rax
  0x000000010f84c797: mov    0x8(%rax),%rcx
  0x000000010f84c79b: mov    (%rcx),%rbx
  0x000000010f84c79e: and    $0x7,%rbx
  0x000000010f84c7a2: cmp    $0x5,%rbx
  0x000000010f84c7a6: je     0x000000010f84c7c3
  0x000000010f84c7ac: mov    (%rax),%rbx
  0x000000010f84c7af: test   %rbx,%rbx
  0x000000010f84c7b2: je     0x000000010f84c7c3
  0x000000010f84c7b8: lock cmpxchg %rbx,(%rcx)
  0x000000010f84c7bd: jne    0x000000010f84cadb  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)

  0x000000010f84c7c3: mov    %rdx,%rax          ; OopMap{[112]=Oop [136]=Oop rsi=Oop [184]=Oop rax=Oop off=4742}
                                                ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@226 (line 358)

  0x000000010f84c7c6: movabs $0x10f84c7c6,%rdx  ;   {section_word}
  0x000000010f84c7d0: callq  0x000000010f7cece0  ;   {runtime_call}
  0x000000010f84c7d5: nop                       ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@226 (line 358)

  0x000000010f84c7d6: mov    0x88(%rsp),%rbx
  0x000000010f84c7de: mov    0x70(%rsp),%rsi
  0x000000010f84c7e3: mov    0x2a8(%r15),%rax
  0x000000010f84c7ea: xor    %r10,%r10
  0x000000010f84c7ed: mov    %r10,0x2a8(%r15)
  0x000000010f84c7f4: xor    %r10,%r10
  0x000000010f84c7f7: mov    %r10,0x2b0(%r15)
  0x000000010f84c7fe: mov    %rax,%rdx
  0x000000010f84c801: lea    0xc0(%rsp),%rax
  0x000000010f84c809: mov    0x8(%rax),%r8
  0x000000010f84c80d: mov    (%r8),%rcx
  0x000000010f84c810: and    $0x7,%rcx
  0x000000010f84c814: cmp    $0x5,%rcx
  0x000000010f84c818: je     0x000000010f84c835
  0x000000010f84c81e: mov    (%rax),%rcx
  0x000000010f84c821: test   %rcx,%rcx
  0x000000010f84c824: je     0x000000010f84c835
  0x000000010f84c82a: lock cmpxchg %rcx,(%r8)
  0x000000010f84c82f: jne    0x000000010f84caf1  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)

  0x000000010f84c835: mov    %rdx,%rax          ; OopMap{rdi=Oop rsi=Oop [112]=Oop rbx=Oop [136]=Oop [184]=Oop rax=Oop off=4856}
                                                ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@289 (line 370)

  0x000000010f84c838: movabs $0x10f84c838,%rdx  ;   {section_word}
  0x000000010f84c842: callq  0x000000010f7cece0  ;   {runtime_call}
  0x000000010f84c847: nop                       ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@289 (line 370)

  0x000000010f84c848: mov    0x2a8(%r15),%rax
  0x000000010f84c84f: xor    %r10,%r10
  0x000000010f84c852: mov    %r10,0x2a8(%r15)
  0x000000010f84c859: xor    %r10,%r10
  0x000000010f84c85c: mov    %r10,0x2b0(%r15)
  0x000000010f84c863: mov    %rax,%rsi
  0x000000010f84c866: lea    0xb0(%rsp),%rax
  0x000000010f84c86e: mov    0x8(%rax),%rbx
  0x000000010f84c872: mov    (%rbx),%rdi
  0x000000010f84c875: and    $0x7,%rdi
  0x000000010f84c879: cmp    $0x5,%rdi
  0x000000010f84c87d: je     0x000000010f84c89a
  0x000000010f84c883: mov    (%rax),%rdi
  0x000000010f84c886: test   %rdi,%rdi
  0x000000010f84c889: je     0x000000010f84c89a
  0x000000010f84c88f: lock cmpxchg %rdi,(%rbx)
  0x000000010f84c894: jne    0x000000010f84cb07  ;*monitorexit
                                                ; - java.io.BufferedReader::readLine@300 (line 372)

  0x000000010f84c89a: mov    %rsi,%rax
  0x000000010f84c89d: jmpq   0x000000010f84cb66
  0x000000010f84c8a2: mov    %rax,0x8(%rsp)
  0x000000010f84c8a7: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f84c8af: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [112]=Oop off=4980}
                                                ;*synchronization entry
                                                ; - java.io.BufferedReader::readLine@-1 (line 313)
                                                ;   {runtime_call}
  0x000000010f84c8b4: jmpq   0x000000010f84b5a6
  0x000000010f84c8b9: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop [112]=Oop rdi=Oop [136]=Oop off=4990}
                                                ;*monitorenter
                                                ; - java.io.BufferedReader::readLine@9 (line 316)
                                                ;   {runtime_call}
  0x000000010f84c8be: mov    %rdi,0x8(%rsp)
  0x000000010f84c8c3: mov    %rbx,(%rsp)
  0x000000010f84c8c7: callq  0x000000010f7cfc60  ; OopMap{rsi=Oop [112]=Oop rdi=Oop [136]=Oop [184]=Oop off=5004}
                                                ;*monitorenter
                                                ; - java.io.BufferedReader::readLine@9 (line 316)
                                                ;   {runtime_call}
  0x000000010f84c8cc: jmpq   0x000000010f84b67e
  0x000000010f84c8d1: mov    %rbx,0x8(%rsp)
  0x000000010f84c8d6: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f84c8de: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [112]=Oop rdi=Oop [136]=Oop [184]=Oop off=5027}
                                                ;*synchronization entry
                                                ; - java.io.BufferedReader::ensureOpen@-1 (line 121)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)
                                                ;   {runtime_call}
  0x000000010f84c8e3: jmpq   0x000000010f84b6c5
  0x000000010f84c8e8: callq  0x000000010f7cd0c0  ; OopMap{[136]=Oop [128]=Oop rsi=Oop [112]=Oop rax=Oop [184]=Oop off=5037}
                                                ;*caload
                                                ; - java.io.BufferedReader::readLine@101 (line 336)
                                                ;   {runtime_call}
  0x000000010f84c8ed: callq  0x000000010f7cd0c0  ; OopMap{[136]=Oop [128]=Oop rsi=Oop [112]=Oop rax=Oop [184]=Oop off=5042}
                                                ;*caload
                                                ; - java.io.BufferedReader::readLine@101 (line 336)
                                                ;   {runtime_call}
  0x000000010f84c8f2: mov    %rdx,(%rsp)
  0x000000010f84c8f6: callq  0x000000010f7cca00  ; OopMap{[136]=Oop [128]=Oop rsi=Oop [112]=Oop rax=Oop [184]=Oop off=5051}
                                                ;*caload
                                                ; - java.io.BufferedReader::readLine@101 (line 336)
                                                ;   {runtime_call}
  0x000000010f84c8fb: callq  0x000000010f7cd0c0  ; OopMap{[136]=Oop [128]=Oop rsi=Oop [112]=Oop rdx=Oop [184]=Oop off=5056}
                                                ;*caload
                                                ; - java.io.BufferedReader::readLine@146 (line 343)
                                                ;   {runtime_call}
  0x000000010f84c900: callq  0x000000010f7cd0c0  ; OopMap{[136]=Oop [128]=Oop rsi=Oop [112]=Oop rdx=Oop [184]=Oop off=5061}
                                                ;*caload
                                                ; - java.io.BufferedReader::readLine@146 (line 343)
                                                ;   {runtime_call}
  0x000000010f84c905: mov    %r9,(%rsp)
  0x000000010f84c909: callq  0x000000010f7cca00  ; OopMap{[136]=Oop [128]=Oop rsi=Oop [112]=Oop rdx=Oop [184]=Oop off=5070}
                                                ;*caload
                                                ; - java.io.BufferedReader::readLine@146 (line 343)
                                                ;   {runtime_call}
  0x000000010f84c90e: mov    %rax,0x8(%rsp)
  0x000000010f84c913: movq   $0xac,(%rsp)
  0x000000010f84c91b: callq  0x000000010f7d1a20  ; OopMap{[136]=Oop [128]=Oop rsi=Oop [112]=Oop [184]=Oop off=5088}
                                                ;*goto
                                                ; - java.io.BufferedReader::readLine@172 (line 342)
                                                ;   {runtime_call}
  0x000000010f84c920: jmpq   0x000000010f84b9c8
  0x000000010f84c925: mov    %rdx,%rdx
  0x000000010f84c928: callq  0x000000010f7cd820  ; OopMap{[136]=Oop r11=Oop [112]=Oop [184]=Oop off=5101}
                                                ;*new  ; - java.io.BufferedReader::readLine@268 (line 369)
                                                ;   {runtime_call}
  0x000000010f84c92d: jmpq   0x000000010f84bb01
  0x000000010f84c932: mov    %rdx,0x8(%rsp)
  0x000000010f84c937: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f84c93f: callq  0x000000010f7d1a20  ; OopMap{[136]=Oop r11=Oop [112]=Oop r13=Oop [184]=Oop off=5124}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::<init>@-1 (line 128)
                                                ; - java.io.BufferedReader::readLine@275 (line 369)
                                                ;   {runtime_call}
  0x000000010f84c944: jmpq   0x000000010f84bb58
  0x000000010f84c949: mov    %rdx,0x8(%rsp)
  0x000000010f84c94e: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f84c956: callq  0x000000010f7d1a20  ; OopMap{[136]=Oop r11=Oop [112]=Oop r13=Oop [184]=Oop off=5147}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::<init>@-1 (line 67)
                                                ; - java.lang.StringBuffer::<init>@2 (line 128)
                                                ; - java.io.BufferedReader::readLine@275 (line 369)
                                                ;   {runtime_call}
  0x000000010f84c95b: jmpq   0x000000010f84bb9f
  0x000000010f84c960: mov    %rdx,0x8(%rsp)
  0x000000010f84c965: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f84c96d: callq  0x000000010f7d1a20  ; OopMap{[136]=Oop r11=Oop [112]=Oop r13=Oop [184]=Oop off=5170}
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::<init>@1 (line 67)
                                                ; - java.lang.StringBuffer::<init>@2 (line 128)
                                                ; - java.io.BufferedReader::readLine@275 (line 369)
                                                ;   {runtime_call}
  0x000000010f84c972: jmpq   0x000000010f84bbe6
  0x000000010f84c977: callq  0x000000010f7ce120  ; OopMap{[136]=Oop r11=Oop [112]=Oop r13=Oop [184]=Oop off=5180}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::<init>@6 (line 68)
                                                ; - java.lang.StringBuffer::<init>@2 (line 128)
                                                ; - java.io.BufferedReader::readLine@275 (line 369)
                                                ;   {runtime_call}
  0x000000010f84c97c: jmpq   0x000000010f84bc5d
  0x000000010f84c981: callq  0x000000010f7cd0c0  ; OopMap{[136]=Oop r11=Oop [112]=Oop rax=Oop rdx=Oop [184]=Oop off=5190}
                                                ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@289 (line 370)
                                                ;   {runtime_call}
  0x000000010f84c986: mov    %rdi,0x8(%rsp)
  0x000000010f84c98b: mov    %rcx,(%rsp)
  0x000000010f84c98f: callq  0x000000010f7cfc60  ; OopMap{[136]=Oop r11=Oop [112]=Oop rdx=Oop rdi=Oop [184]=Oop [200]=Oop off=5204}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)
                                                ;   {runtime_call}
  0x000000010f84c994: jmpq   0x000000010f84bdea
  0x000000010f84c999: mov    %rcx,0x8(%rsp)
  0x000000010f84c99e: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f84c9a6: callq  0x000000010f7d1a20  ; OopMap{[136]=Oop r11=Oop [112]=Oop rdx=Oop rdi=Oop [184]=Oop [200]=Oop off=5227}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)
                                                ;   {runtime_call}
  0x000000010f84c9ab: jmpq   0x000000010f84be1c
  0x000000010f84c9b0: lea    0xc0(%rsp),%rax
  0x000000010f84c9b8: mov    %rax,(%rsp)
  0x000000010f84c9bc: callq  0x000000010f7d00a0  ;   {runtime_call}
  0x000000010f84c9c1: jmpq   0x000000010f84be98
  0x000000010f84c9c6: mov    %rdx,0x8(%rsp)
  0x000000010f84c9cb: movq   $0x125,(%rsp)
  0x000000010f84c9d3: callq  0x000000010f7d1a20  ; OopMap{[136]=Oop [112]=Oop [144]=Oop [184]=Oop off=5272}
                                                ;*goto
                                                ; - java.io.BufferedReader::readLine@293 (line 371)
                                                ;   {runtime_call}
  0x000000010f84c9d8: jmpq   0x000000010f84beca
  0x000000010f84c9dd: mov    %rdx,%rdx
  0x000000010f84c9e0: callq  0x000000010f7cd820  ; OopMap{[136]=Oop r11=Oop [112]=Oop [184]=Oop off=5285}
                                                ;*new  ; - java.io.BufferedReader::readLine@195 (line 356)
                                                ;   {runtime_call}
  0x000000010f84c9e5: jmpq   0x000000010f84bf8a
  0x000000010f84c9ea: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop [112]=Oop rax=Oop [136]=Oop rdx=Oop [184]=Oop off=5295}
                                                ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@226 (line 358)
                                                ;   {runtime_call}
  0x000000010f84c9ef: mov    %rdi,0x8(%rsp)
  0x000000010f84c9f4: mov    %rcx,(%rsp)
  0x000000010f84c9f8: callq  0x000000010f7cfc60  ; OopMap{rsi=Oop [112]=Oop [136]=Oop rdx=Oop rdi=Oop [184]=Oop [200]=Oop off=5309}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)
                                                ;   {runtime_call}
  0x000000010f84c9fd: jmpq   0x000000010f84c14a
  0x000000010f84ca02: mov    %rcx,0x8(%rsp)
  0x000000010f84ca07: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f84ca0f: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop [112]=Oop [136]=Oop rdx=Oop rdi=Oop [184]=Oop [200]=Oop off=5332}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)
                                                ;   {runtime_call}
  0x000000010f84ca14: jmpq   0x000000010f84c17c
  0x000000010f84ca19: lea    0xc0(%rsp),%rax
  0x000000010f84ca21: mov    %rax,(%rsp)
  0x000000010f84ca25: callq  0x000000010f7d00a0  ;   {runtime_call}
  0x000000010f84ca2a: jmpq   0x000000010f84c1f8
  0x000000010f84ca2f: callq  0x000000010f7cd0c0  ; OopMap{[136]=Oop rsi=Oop [184]=Oop off=5364}
                                                ;*invokevirtual length
                                                ; - java.io.BufferedReader::readLine@63 (line 326)
                                                ;   {runtime_call}
  0x000000010f84ca34: mov    %rsi,0x8(%rsp)
  0x000000010f84ca39: mov    %rdi,(%rsp)
  0x000000010f84ca3d: callq  0x000000010f7cfc60  ; OopMap{[136]=Oop rsi=Oop [184]=Oop [200]=Oop off=5378}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::length@-1 (line 163)
                                                ; - java.io.BufferedReader::readLine@63 (line 326)
                                                ;   {runtime_call}
  0x000000010f84ca42: jmpq   0x000000010f84c490
  0x000000010f84ca47: lea    0xc0(%rsp),%rax
  0x000000010f84ca4f: mov    %rax,(%rsp)
  0x000000010f84ca53: callq  0x000000010f7d00a0  ;   {runtime_call}
  0x000000010f84ca58: jmpq   0x000000010f84c4c7
  0x000000010f84ca5d: lea    0xb0(%rsp),%rax
  0x000000010f84ca65: mov    %rax,(%rsp)
  0x000000010f84ca69: callq  0x000000010f7d00a0  ;   {runtime_call}
  0x000000010f84ca6e: jmpq   0x000000010f84c534
  0x000000010f84ca73: lea    0xb0(%rsp),%rax
  0x000000010f84ca7b: mov    %rax,(%rsp)
  0x000000010f84ca7f: callq  0x000000010f7d00a0  ;   {runtime_call}
  0x000000010f84ca84: jmpq   0x000000010f84c61b
  0x000000010f84ca89: lea    0xb0(%rsp),%rax
  0x000000010f84ca91: mov    %rax,(%rsp)
  0x000000010f84ca95: callq  0x000000010f7d00a0  ;   {runtime_call}
  0x000000010f84ca9a: jmpq   0x000000010f84c661
  0x000000010f84ca9f: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f84caa9: mov    $0xa050f00,%eax
  0x000000010f84caae: callq  0x000000010f7d08e0  ; OopMap{[112]=Oop [136]=Oop [184]=Oop off=5491}
                                                ;*new  ; - java.io.BufferedReader::ensureOpen@7 (line 122)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)
                                                ;   {runtime_call}
  0x000000010f84cab3: jmpq   0x000000010f84c680
  0x000000010f84cab8: mov    %rdx,%rdx
  0x000000010f84cabb: callq  0x000000010f7cd820  ; OopMap{[136]=Oop [112]=Oop [184]=Oop off=5504}
                                                ;*new  ; - java.io.BufferedReader::ensureOpen@7 (line 122)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)
                                                ;   {runtime_call}
  0x000000010f84cac0: jmpq   0x000000010f84c6c5
  0x000000010f84cac5: lea    0xc0(%rsp),%rax
  0x000000010f84cacd: mov    %rax,(%rsp)
  0x000000010f84cad1: callq  0x000000010f7d00a0  ;   {runtime_call}
  0x000000010f84cad6: jmpq   0x000000010f84c75e
  0x000000010f84cadb: lea    0xc0(%rsp),%rax
  0x000000010f84cae3: mov    %rax,(%rsp)
  0x000000010f84cae7: callq  0x000000010f7d00a0  ;   {runtime_call}
  0x000000010f84caec: jmpq   0x000000010f84c7c3
  0x000000010f84caf1: lea    0xc0(%rsp),%rax
  0x000000010f84caf9: mov    %rax,(%rsp)
  0x000000010f84cafd: callq  0x000000010f7d00a0  ;   {runtime_call}
  0x000000010f84cb02: jmpq   0x000000010f84c835
  0x000000010f84cb07: lea    0xb0(%rsp),%rax
  0x000000010f84cb0f: mov    %rax,(%rsp)
  0x000000010f84cb13: callq  0x000000010f7d00a0  ;   {runtime_call}
  0x000000010f84cb18: jmpq   0x000000010f84c89a
  0x000000010f84cb1d: mov    0x90(%rsp),%rdi
  0x000000010f84cb25: jmpq   0x000000010f84c7d6
  0x000000010f84cb2a: mov    0x7c(%rsp),%edi
  0x000000010f84cb2e: mov    0x80(%rsp),%rsi
  0x000000010f84cb36: jmpq   0x000000010f84c771
  0x000000010f84cb3b: nop
  0x000000010f84cb3c: nop
  0x000000010f84cb3d: mov    0x2a8(%r15),%rax
  0x000000010f84cb44: movabs $0x0,%r10
  0x000000010f84cb4e: mov    %r10,0x2a8(%r15)
  0x000000010f84cb55: movabs $0x0,%r10
  0x000000010f84cb5f: mov    %r10,0x2b0(%r15)
  0x000000010f84cb66: add    $0xe0,%rsp
  0x000000010f84cb6d: pop    %rbp
  0x000000010f84cb6e: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f84cb73: hlt    
  0x000000010f84cb74: hlt    
  0x000000010f84cb75: hlt    
  0x000000010f84cb76: hlt    
  0x000000010f84cb77: hlt    
  0x000000010f84cb78: hlt    
  0x000000010f84cb79: hlt    
  0x000000010f84cb7a: hlt    
  0x000000010f84cb7b: hlt    
  0x000000010f84cb7c: hlt    
  0x000000010f84cb7d: hlt    
  0x000000010f84cb7e: hlt    
  0x000000010f84cb7f: hlt    
[Stub Code]
  0x000000010f84cb80: nop                       ;   {no_reloc}
  0x000000010f84cb81: nop
  0x000000010f84cb82: nop
  0x000000010f84cb83: nop
  0x000000010f84cb84: nop
  0x000000010f84cb85: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f84cb8f: jmpq   0x000000010f84cb8f  ;   {runtime_call}
  0x000000010f84cb94: nop
  0x000000010f84cb95: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f84cb9f: jmpq   0x000000010f84cb9f  ;   {runtime_call}
  0x000000010f84cba4: nop
  0x000000010f84cba5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f84cbaf: jmpq   0x000000010f84cbaf  ;   {runtime_call}
  0x000000010f84cbb4: nop
  0x000000010f84cbb5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f84cbbf: jmpq   0x000000010f84cbbf  ;   {runtime_call}
  0x000000010f84cbc4: nop
  0x000000010f84cbc5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f84cbcf: jmpq   0x000000010f84cbcf  ;   {runtime_call}
  0x000000010f84cbd4: nop
  0x000000010f84cbd5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f84cbdf: jmpq   0x000000010f84cbdf  ;   {runtime_call}
  0x000000010f84cbe4: nop
  0x000000010f84cbe5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f84cbef: jmpq   0x000000010f84cbef  ;   {runtime_call}
[Exception Handler]
  0x000000010f84cbf4: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f84cbf9: mov    %rsp,-0x28(%rsp)
  0x000000010f84cbfe: sub    $0x80,%rsp
  0x000000010f84cc05: mov    %rax,0x78(%rsp)
  0x000000010f84cc0a: mov    %rcx,0x70(%rsp)
  0x000000010f84cc0f: mov    %rdx,0x68(%rsp)
  0x000000010f84cc14: mov    %rbx,0x60(%rsp)
  0x000000010f84cc19: mov    %rbp,0x50(%rsp)
  0x000000010f84cc1e: mov    %rsi,0x48(%rsp)
  0x000000010f84cc23: mov    %rdi,0x40(%rsp)
  0x000000010f84cc28: mov    %r8,0x38(%rsp)
  0x000000010f84cc2d: mov    %r9,0x30(%rsp)
  0x000000010f84cc32: mov    %r10,0x28(%rsp)
  0x000000010f84cc37: mov    %r11,0x20(%rsp)
  0x000000010f84cc3c: mov    %r12,0x18(%rsp)
  0x000000010f84cc41: mov    %r13,0x10(%rsp)
  0x000000010f84cc46: mov    %r14,0x8(%rsp)
  0x000000010f84cc4b: mov    %r15,(%rsp)
  0x000000010f84cc4f: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f84cc59: movabs $0x10f84cbf9,%rsi  ;   {internal_word}
  0x000000010f84cc63: mov    %rsp,%rdx
  0x000000010f84cc66: and    $0xfffffffffffffff0,%rsp
  0x000000010f84cc6a: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f84cc6f: hlt    
[Deopt Handler Code]
  0x000000010f84cc70: movabs $0x10f84cc70,%r10  ;   {section_word}
  0x000000010f84cc7a: push   %r10
  0x000000010f84cc7c: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f84cc81: hlt    
  0x000000010f84cc82: hlt    
  0x000000010f84cc83: hlt    
  0x000000010f84cc84: hlt    
  0x000000010f84cc85: hlt    
  0x000000010f84cc86: hlt    
  0x000000010f84cc87: hlt    
Decoding compiled method 0x000000010f84de10:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010ec02c10} 'wordIndex' '(I)I' in 'java/util/BitSet'
  # parm0:    rsi       = int
  #           [sp+0x40]  (sp of caller)
  0x000000010f84df60: mov    %eax,-0x14000(%rsp)
  0x000000010f84df67: push   %rbp
  0x000000010f84df68: sub    $0x30,%rsp
  0x000000010f84df6c: movabs $0x10ec3a3b8,%rax  ;   {metadata(method data for {method} {0x000000010ec02c10} 'wordIndex' '(I)I' in 'java/util/BitSet')}
  0x000000010f84df76: mov    0xdc(%rax),%edi
  0x000000010f84df7c: add    $0x8,%edi
  0x000000010f84df7f: mov    %edi,0xdc(%rax)
  0x000000010f84df85: movabs $0x10ec02c10,%rax  ;   {metadata({method} {0x000000010ec02c10} 'wordIndex' '(I)I' in 'java/util/BitSet')}
  0x000000010f84df8f: and    $0x1ff8,%edi
  0x000000010f84df95: cmp    $0x0,%edi
  0x000000010f84df98: je     0x000000010f84dfb0  ;*iload_0
                                                ; - java.util.BitSet::wordIndex@0 (line 112)

  0x000000010f84df9e: sar    $0x6,%esi
  0x000000010f84dfa1: mov    %rsi,%rax
  0x000000010f84dfa4: add    $0x30,%rsp
  0x000000010f84dfa8: pop    %rbp
  0x000000010f84dfa9: test   %eax,-0x8db2eaf(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f84dfaf: retq   
  0x000000010f84dfb0: mov    %rax,0x8(%rsp)
  0x000000010f84dfb5: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f84dfbd: callq  0x000000010f7d1a20  ; OopMap{off=98}
                                                ;*synchronization entry
                                                ; - java.util.BitSet::wordIndex@-1 (line 112)
                                                ;   {runtime_call}
  0x000000010f84dfc2: jmp    0x000000010f84df9e
  0x000000010f84dfc4: nop
  0x000000010f84dfc5: nop
  0x000000010f84dfc6: mov    0x2a8(%r15),%rax
  0x000000010f84dfcd: movabs $0x0,%r10
  0x000000010f84dfd7: mov    %r10,0x2a8(%r15)
  0x000000010f84dfde: movabs $0x0,%r10
  0x000000010f84dfe8: mov    %r10,0x2b0(%r15)
  0x000000010f84dfef: add    $0x30,%rsp
  0x000000010f84dff3: pop    %rbp
  0x000000010f84dff4: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f84dff9: hlt    
  0x000000010f84dffa: hlt    
  0x000000010f84dffb: hlt    
  0x000000010f84dffc: hlt    
  0x000000010f84dffd: hlt    
  0x000000010f84dffe: hlt    
  0x000000010f84dfff: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f84e000: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f84e005: mov    %rsp,-0x28(%rsp)
  0x000000010f84e00a: sub    $0x80,%rsp
  0x000000010f84e011: mov    %rax,0x78(%rsp)
  0x000000010f84e016: mov    %rcx,0x70(%rsp)
  0x000000010f84e01b: mov    %rdx,0x68(%rsp)
  0x000000010f84e020: mov    %rbx,0x60(%rsp)
  0x000000010f84e025: mov    %rbp,0x50(%rsp)
  0x000000010f84e02a: mov    %rsi,0x48(%rsp)
  0x000000010f84e02f: mov    %rdi,0x40(%rsp)
  0x000000010f84e034: mov    %r8,0x38(%rsp)
  0x000000010f84e039: mov    %r9,0x30(%rsp)
  0x000000010f84e03e: mov    %r10,0x28(%rsp)
  0x000000010f84e043: mov    %r11,0x20(%rsp)
  0x000000010f84e048: mov    %r12,0x18(%rsp)
  0x000000010f84e04d: mov    %r13,0x10(%rsp)
  0x000000010f84e052: mov    %r14,0x8(%rsp)
  0x000000010f84e057: mov    %r15,(%rsp)
  0x000000010f84e05b: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f84e065: movabs $0x10f84e005,%rsi  ;   {internal_word}
  0x000000010f84e06f: mov    %rsp,%rdx
  0x000000010f84e072: and    $0xfffffffffffffff0,%rsp
  0x000000010f84e076: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f84e07b: hlt    
[Deopt Handler Code]
  0x000000010f84e07c: movabs $0x10f84e07c,%r10  ;   {section_word}
  0x000000010f84e086: push   %r10
  0x000000010f84e088: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f84e08d: hlt    
  0x000000010f84e08e: hlt    
  0x000000010f84e08f: hlt    
Decoding compiled method 0x000000010f84e110:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ec02d18} 'checkInvariants' '()V' in 'java/util/BitSet'
  #           [sp+0x40]  (sp of caller)
  0x000000010f84e280: mov    0x8(%rsi),%r10d
  0x000000010f84e284: shl    $0x3,%r10
  0x000000010f84e288: cmp    %rax,%r10
  0x000000010f84e28b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f84e291: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f84e29c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f84e2a0: mov    %eax,-0x14000(%rsp)
  0x000000010f84e2a7: push   %rbp
  0x000000010f84e2a8: sub    $0x30,%rsp
  0x000000010f84e2ac: movabs $0x10ec3a4d8,%rdi  ;   {metadata(method data for {method} {0x000000010ec02d18} 'checkInvariants' '()V' in 'java/util/BitSet')}
  0x000000010f84e2b6: mov    0xdc(%rdi),%ebx
  0x000000010f84e2bc: add    $0x8,%ebx
  0x000000010f84e2bf: mov    %ebx,0xdc(%rdi)
  0x000000010f84e2c5: movabs $0x10ec02d18,%rdi  ;   {metadata({method} {0x000000010ec02d18} 'checkInvariants' '()V' in 'java/util/BitSet')}
  0x000000010f84e2cf: and    $0x1ff8,%ebx
  0x000000010f84e2d5: cmp    $0x0,%ebx
  0x000000010f84e2d8: je     0x000000010f84e31a  ;*getstatic $assertionsDisabled
                                                ; - java.util.BitSet::checkInvariants@0 (line 119)

  0x000000010f84e2de: movabs $0x10ec3a4d8,%rsi  ;   {metadata(method data for {method} {0x000000010ec02d18} 'checkInvariants' '()V' in 'java/util/BitSet')}
  0x000000010f84e2e8: incl   0x108(%rsi)        ;*ifne
                                                ; - java.util.BitSet::checkInvariants@3 (line 119)

  0x000000010f84e2ee: movabs $0x10ec3a4d8,%rsi  ;   {metadata(method data for {method} {0x000000010ec02d18} 'checkInvariants' '()V' in 'java/util/BitSet')}
  0x000000010f84e2f8: incl   0x178(%rsi)        ;*ifne
                                                ; - java.util.BitSet::checkInvariants@40 (line 120)

  0x000000010f84e2fe: movabs $0x10ec3a4d8,%rsi  ;   {metadata(method data for {method} {0x000000010ec02d18} 'checkInvariants' '()V' in 'java/util/BitSet')}
  0x000000010f84e308: incl   0x1e8(%rsi)        ;*ifne
                                                ; - java.util.BitSet::checkInvariants@73 (line 121)

  0x000000010f84e30e: add    $0x30,%rsp
  0x000000010f84e312: pop    %rbp
  0x000000010f84e313: test   %eax,-0x8db3219(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f84e319: retq   
  0x000000010f84e31a: mov    %rdi,0x8(%rsp)
  0x000000010f84e31f: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f84e327: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=172}
                                                ;*synchronization entry
                                                ; - java.util.BitSet::checkInvariants@-1 (line 119)
                                                ;   {runtime_call}
  0x000000010f84e32c: jmp    0x000000010f84e2de
  0x000000010f84e32e: nop
  0x000000010f84e32f: nop
  0x000000010f84e330: mov    0x2a8(%r15),%rax
  0x000000010f84e337: movabs $0x0,%r10
  0x000000010f84e341: mov    %r10,0x2a8(%r15)
  0x000000010f84e348: movabs $0x0,%r10
  0x000000010f84e352: mov    %r10,0x2b0(%r15)
  0x000000010f84e359: add    $0x30,%rsp
  0x000000010f84e35d: pop    %rbp
  0x000000010f84e35e: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f84e363: hlt    
  0x000000010f84e364: hlt    
  0x000000010f84e365: hlt    
  0x000000010f84e366: hlt    
  0x000000010f84e367: hlt    
  0x000000010f84e368: hlt    
  0x000000010f84e369: hlt    
  0x000000010f84e36a: hlt    
  0x000000010f84e36b: hlt    
  0x000000010f84e36c: hlt    
  0x000000010f84e36d: hlt    
  0x000000010f84e36e: hlt    
  0x000000010f84e36f: hlt    
  0x000000010f84e370: hlt    
  0x000000010f84e371: hlt    
  0x000000010f84e372: hlt    
  0x000000010f84e373: hlt    
  0x000000010f84e374: hlt    
  0x000000010f84e375: hlt    
  0x000000010f84e376: hlt    
  0x000000010f84e377: hlt    
  0x000000010f84e378: hlt    
  0x000000010f84e379: hlt    
  0x000000010f84e37a: hlt    
  0x000000010f84e37b: hlt    
  0x000000010f84e37c: hlt    
  0x000000010f84e37d: hlt    
  0x000000010f84e37e: hlt    
  0x000000010f84e37f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f84e380: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f84e385: mov    %rsp,-0x28(%rsp)
  0x000000010f84e38a: sub    $0x80,%rsp
  0x000000010f84e391: mov    %rax,0x78(%rsp)
  0x000000010f84e396: mov    %rcx,0x70(%rsp)
  0x000000010f84e39b: mov    %rdx,0x68(%rsp)
  0x000000010f84e3a0: mov    %rbx,0x60(%rsp)
  0x000000010f84e3a5: mov    %rbp,0x50(%rsp)
  0x000000010f84e3aa: mov    %rsi,0x48(%rsp)
  0x000000010f84e3af: mov    %rdi,0x40(%rsp)
  0x000000010f84e3b4: mov    %r8,0x38(%rsp)
  0x000000010f84e3b9: mov    %r9,0x30(%rsp)
  0x000000010f84e3be: mov    %r10,0x28(%rsp)
  0x000000010f84e3c3: mov    %r11,0x20(%rsp)
  0x000000010f84e3c8: mov    %r12,0x18(%rsp)
  0x000000010f84e3cd: mov    %r13,0x10(%rsp)
  0x000000010f84e3d2: mov    %r14,0x8(%rsp)
  0x000000010f84e3d7: mov    %r15,(%rsp)
  0x000000010f84e3db: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f84e3e5: movabs $0x10f84e385,%rsi  ;   {internal_word}
  0x000000010f84e3ef: mov    %rsp,%rdx
  0x000000010f84e3f2: and    $0xfffffffffffffff0,%rsp
  0x000000010f84e3f6: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f84e3fb: hlt    
[Deopt Handler Code]
  0x000000010f84e3fc: movabs $0x10f84e3fc,%r10  ;   {section_word}
  0x000000010f84e406: push   %r10
  0x000000010f84e408: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f84e40d: hlt    
  0x000000010f84e40e: hlt    
  0x000000010f84e40f: hlt    
Decoding compiled method 0x000000010f84e4d0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010ec2a5d8} 'of' '(I)Ljava/lang/CharacterData;' in 'java/lang/CharacterData'
  # parm0:    rsi       = int
  #           [sp+0x40]  (sp of caller)
  0x000000010f84e680: mov    %eax,-0x14000(%rsp)
  0x000000010f84e687: push   %rbp
  0x000000010f84e688: sub    $0x30,%rsp
  0x000000010f84e68c: movabs $0x10ec3b7f8,%rax  ;   {metadata(method data for {method} {0x000000010ec2a5d8} 'of' '(I)Ljava/lang/CharacterData;' in 'java/lang/CharacterData')}
  0x000000010f84e696: mov    0xdc(%rax),%edi
  0x000000010f84e69c: add    $0x8,%edi
  0x000000010f84e69f: mov    %edi,0xdc(%rax)
  0x000000010f84e6a5: movabs $0x10ec2a5d8,%rax  ;   {metadata({method} {0x000000010ec2a5d8} 'of' '(I)Ljava/lang/CharacterData;' in 'java/lang/CharacterData')}
  0x000000010f84e6af: and    $0x1ff8,%edi
  0x000000010f84e6b5: cmp    $0x0,%edi
  0x000000010f84e6b8: je     0x000000010f84e83c  ;*iload_0
                                                ; - java.lang.CharacterData::of@0 (line 77)

  0x000000010f84e6be: mov    %rsi,%rax
  0x000000010f84e6c1: shr    $0x8,%eax
  0x000000010f84e6c4: cmp    $0x0,%eax
  0x000000010f84e6c7: movabs $0x10ec3b7f8,%rax  ;   {metadata(method data for {method} {0x000000010ec2a5d8} 'of' '(I)Ljava/lang/CharacterData;' in 'java/lang/CharacterData')}
  0x000000010f84e6d1: movabs $0x108,%rdi
  0x000000010f84e6db: jne    0x000000010f84e6eb
  0x000000010f84e6e1: movabs $0x118,%rdi
  0x000000010f84e6eb: mov    (%rax,%rdi,1),%rbx
  0x000000010f84e6ef: lea    0x1(%rbx),%rbx
  0x000000010f84e6f3: mov    %rbx,(%rax,%rdi,1)
  0x000000010f84e6f7: je     0x000000010f84e826  ;*ifne
                                                ; - java.lang.CharacterData::of@4 (line 77)

  0x000000010f84e6fd: shr    $0x10,%esi
  0x000000010f84e700: cmp    $0x0,%esi
  0x000000010f84e703: je     0x000000010f84e7fe
  0x000000010f84e709: cmp    $0x1,%esi
  0x000000010f84e70c: je     0x000000010f84e7d6
  0x000000010f84e712: cmp    $0x2,%esi
  0x000000010f84e715: je     0x000000010f84e7ae
  0x000000010f84e71b: cmp    $0xe,%esi
  0x000000010f84e71e: je     0x000000010f84e786
  0x000000010f84e724: cmp    $0xf,%esi
  0x000000010f84e727: je     0x000000010f84e736
  0x000000010f84e72d: cmp    $0x10,%esi
  0x000000010f84e730: jne    0x000000010f84e75e  ;*tableswitch
                                                ; - java.lang.CharacterData::of@15 (line 80)

  0x000000010f84e736: xchg   %ax,%ax
  0x000000010f84e738: jmpq   0x000000010f84e8b0  ;   {no_reloc}
  0x000000010f84e73d: add    %al,(%rax)
  0x000000010f84e73f: add    %al,(%rax)
  0x000000010f84e741: add    %ah,0xf(%rsi)
  0x000000010f84e744: (bad)  
  0x000000010f84e745: add    %r8b,(%rax)
  0x000000010f84e748: jmpq   0x000000010f84e8ca  ; implicit exception: dispatches to 0x000000010f84e8ba
  0x000000010f84e74d: nop
  0x000000010f84e74e: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)

  0x000000010f84e752: add    $0x30,%rsp
  0x000000010f84e756: pop    %rbp
  0x000000010f84e757: test   %eax,-0x8db365d(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f84e75d: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@115 (line 91)

  0x000000010f84e75e: xchg   %ax,%ax
  0x000000010f84e760: jmpq   0x000000010f84e931  ;   {no_reloc}
  0x000000010f84e765: add    %al,(%rax)
  0x000000010f84e767: add    %al,(%rax)
  0x000000010f84e769: add    %ah,0xf(%rsi)
  0x000000010f84e76c: (bad)  
  0x000000010f84e76d: add    %r8b,(%rax)
  0x000000010f84e770: jmpq   0x000000010f84e94b  ; implicit exception: dispatches to 0x000000010f84e93b
  0x000000010f84e775: nop
  0x000000010f84e776: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)

  0x000000010f84e77a: add    $0x30,%rsp
  0x000000010f84e77e: pop    %rbp
  0x000000010f84e77f: test   %eax,-0x8db3685(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f84e785: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@119 (line 93)

  0x000000010f84e786: xchg   %ax,%ax
  0x000000010f84e788: jmpq   0x000000010f84e9b2  ;   {no_reloc}
  0x000000010f84e78d: add    %al,(%rax)
  0x000000010f84e78f: add    %al,(%rax)
  0x000000010f84e791: add    %ah,0xf(%rsi)
  0x000000010f84e794: (bad)  
  0x000000010f84e795: add    %r8b,(%rax)
  0x000000010f84e798: jmpq   0x000000010f84e9cc  ; implicit exception: dispatches to 0x000000010f84e9bc
  0x000000010f84e79d: nop
  0x000000010f84e79e: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)

  0x000000010f84e7a2: add    $0x30,%rsp
  0x000000010f84e7a6: pop    %rbp
  0x000000010f84e7a7: test   %eax,-0x8db36ad(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f84e7ad: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@111 (line 88)

  0x000000010f84e7ae: xchg   %ax,%ax
  0x000000010f84e7b0: jmpq   0x000000010f84ea33  ;   {no_reloc}
  0x000000010f84e7b5: add    %al,(%rax)
  0x000000010f84e7b7: add    %al,(%rax)
  0x000000010f84e7b9: add    %ah,0xf(%rsi)
  0x000000010f84e7bc: (bad)  
  0x000000010f84e7bd: add    %r8b,(%rax)
  0x000000010f84e7c0: jmpq   0x000000010f84ea4d  ; implicit exception: dispatches to 0x000000010f84ea3d
  0x000000010f84e7c5: nop
  0x000000010f84e7c6: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)

  0x000000010f84e7ca: add    $0x30,%rsp
  0x000000010f84e7ce: pop    %rbp
  0x000000010f84e7cf: test   %eax,-0x8db36d5(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f84e7d5: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@107 (line 86)

  0x000000010f84e7d6: xchg   %ax,%ax
  0x000000010f84e7d8: jmpq   0x000000010f84eab4  ;   {no_reloc}
  0x000000010f84e7dd: add    %al,(%rax)
  0x000000010f84e7df: add    %al,(%rax)
  0x000000010f84e7e1: add    %ah,0xf(%rsi)
  0x000000010f84e7e4: (bad)  
  0x000000010f84e7e5: add    %r8b,(%rax)
  0x000000010f84e7e8: jmpq   0x000000010f84eace  ; implicit exception: dispatches to 0x000000010f84eabe
  0x000000010f84e7ed: nop
  0x000000010f84e7ee: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)

  0x000000010f84e7f2: add    $0x30,%rsp
  0x000000010f84e7f6: pop    %rbp
  0x000000010f84e7f7: test   %eax,-0x8db36fd(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f84e7fd: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@103 (line 84)

  0x000000010f84e7fe: xchg   %ax,%ax
  0x000000010f84e800: jmpq   0x000000010f84eb35  ;   {no_reloc}
  0x000000010f84e805: add    %al,(%rax)
  0x000000010f84e807: add    %al,(%rax)
  0x000000010f84e809: add    %ah,0xf(%rsi)
  0x000000010f84e80c: (bad)  
  0x000000010f84e80d: add    %r8b,(%rax)
  0x000000010f84e810: jmpq   0x000000010f84eb4f  ; implicit exception: dispatches to 0x000000010f84eb3f
  0x000000010f84e815: nop
  0x000000010f84e816: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)

  0x000000010f84e81a: add    $0x30,%rsp
  0x000000010f84e81e: pop    %rbp
  0x000000010f84e81f: test   %eax,-0x8db3725(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f84e825: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@99 (line 82)

  0x000000010f84e826: movabs $0x7955d00d0,%rax  ;   {oop(a 'java/lang/CharacterDataLatin1')}
  0x000000010f84e830: add    $0x30,%rsp
  0x000000010f84e834: pop    %rbp
  0x000000010f84e835: test   %eax,-0x8db373b(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f84e83b: retq   
  0x000000010f84e83c: mov    %rax,0x8(%rsp)
  0x000000010f84e841: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f84e849: callq  0x000000010f7d1a20  ; OopMap{off=462}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterData::of@-1 (line 77)
                                                ;   {runtime_call}
  0x000000010f84e84e: jmpq   0x000000010f84e6be
  0x000000010f84e853: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000010f84e85d: push   %rax
  0x000000010f84e85e: push   %rbx
  0x000000010f84e85f: mov    0x48(%rax),%rbx
  0x000000010f84e863: push   %rdi
  0x000000010f84e864: push   %rsi
  0x000000010f84e865: push   %rdx
  0x000000010f84e866: push   %rcx
  0x000000010f84e867: push   %r8
  0x000000010f84e869: push   %r9
  0x000000010f84e86b: push   %r10
  0x000000010f84e86d: mov    %rsp,%r10
  0x000000010f84e870: and    $0xfffffffffffffff0,%rsp
  0x000000010f84e874: push   %r10
  0x000000010f84e876: push   %r11
  0x000000010f84e878: mov    $0x10d,%edi
  0x000000010f84e87d: movabs $0x7fff203204e5,%r10  ;   {runtime_call}
  0x000000010f84e887: callq  *%r10
  0x000000010f84e88a: pop    %r11
  0x000000010f84e88c: pop    %rsp
  0x000000010f84e88d: pop    %r10
  0x000000010f84e88f: pop    %r9
  0x000000010f84e891: pop    %r8
  0x000000010f84e893: pop    %rcx
  0x000000010f84e894: pop    %rdx
  0x000000010f84e895: pop    %rsi
  0x000000010f84e896: pop    %rdi
  0x000000010f84e897: cmp    0x118(%rbx),%rax
  0x000000010f84e89e: pop    %rbx
  0x000000010f84e89f: pop    %rax
  0x000000010f84e8a0: jne    0x000000010f84e8b0
  0x000000010f84e8a6: jmpq   0x000000010f84e742
  0x000000010f84e8ab: mov    $0xa535d00,%eax
  0x000000010f84e8b0: callq  0x000000010f7d0ce0  ; OopMap{off=565}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ;   {runtime_call}
  0x000000010f84e8b5: jmpq   0x000000010f84e738
  0x000000010f84e8ba: callq  0x000000010f7cd0c0  ; OopMap{rax=Oop off=575}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ;   {runtime_call}
  0x000000010f84e8bf: mov    0x0(%rax),%eax
  0x000000010f84e8c5: mov    $0x6050b00,%eax
  0x000000010f84e8ca: callq  0x000000010f7d04e0  ; OopMap{rax=Oop off=591}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ;   {runtime_call}
  0x000000010f84e8cf: jmpq   0x000000010f84e748
  0x000000010f84e8d4: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000010f84e8de: push   %rax
  0x000000010f84e8df: push   %rbx
  0x000000010f84e8e0: mov    0x48(%rax),%rbx
  0x000000010f84e8e4: push   %rdi
  0x000000010f84e8e5: push   %rsi
  0x000000010f84e8e6: push   %rdx
  0x000000010f84e8e7: push   %rcx
  0x000000010f84e8e8: push   %r8
  0x000000010f84e8ea: push   %r9
  0x000000010f84e8ec: push   %r10
  0x000000010f84e8ee: mov    %rsp,%r10
  0x000000010f84e8f1: and    $0xfffffffffffffff0,%rsp
  0x000000010f84e8f5: push   %r10
  0x000000010f84e8f7: push   %r11
  0x000000010f84e8f9: mov    $0x10d,%edi
  0x000000010f84e8fe: movabs $0x7fff203204e5,%r10  ;   {runtime_call}
  0x000000010f84e908: callq  *%r10
  0x000000010f84e90b: pop    %r11
  0x000000010f84e90d: pop    %rsp
  0x000000010f84e90e: pop    %r10
  0x000000010f84e910: pop    %r9
  0x000000010f84e912: pop    %r8
  0x000000010f84e914: pop    %rcx
  0x000000010f84e915: pop    %rdx
  0x000000010f84e916: pop    %rsi
  0x000000010f84e917: pop    %rdi
  0x000000010f84e918: cmp    0x118(%rbx),%rax
  0x000000010f84e91f: pop    %rbx
  0x000000010f84e920: pop    %rax
  0x000000010f84e921: jne    0x000000010f84e931
  0x000000010f84e927: jmpq   0x000000010f84e76a
  0x000000010f84e92c: mov    $0xa535d00,%eax
  0x000000010f84e931: callq  0x000000010f7d0ce0  ; OopMap{off=694}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ;   {runtime_call}
  0x000000010f84e936: jmpq   0x000000010f84e760
  0x000000010f84e93b: callq  0x000000010f7cd0c0  ; OopMap{rax=Oop off=704}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ;   {runtime_call}
  0x000000010f84e940: mov    0x0(%rax),%eax
  0x000000010f84e946: mov    $0x6050b00,%eax
  0x000000010f84e94b: callq  0x000000010f7d04e0  ; OopMap{rax=Oop off=720}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ;   {runtime_call}
  0x000000010f84e950: jmpq   0x000000010f84e770
  0x000000010f84e955: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000010f84e95f: push   %rax
  0x000000010f84e960: push   %rbx
  0x000000010f84e961: mov    0x48(%rax),%rbx
  0x000000010f84e965: push   %rdi
  0x000000010f84e966: push   %rsi
  0x000000010f84e967: push   %rdx
  0x000000010f84e968: push   %rcx
  0x000000010f84e969: push   %r8
  0x000000010f84e96b: push   %r9
  0x000000010f84e96d: push   %r10
  0x000000010f84e96f: mov    %rsp,%r10
  0x000000010f84e972: and    $0xfffffffffffffff0,%rsp
  0x000000010f84e976: push   %r10
  0x000000010f84e978: push   %r11
  0x000000010f84e97a: mov    $0x10d,%edi
  0x000000010f84e97f: movabs $0x7fff203204e5,%r10  ;   {runtime_call}
  0x000000010f84e989: callq  *%r10
  0x000000010f84e98c: pop    %r11
  0x000000010f84e98e: pop    %rsp
  0x000000010f84e98f: pop    %r10
  0x000000010f84e991: pop    %r9
  0x000000010f84e993: pop    %r8
  0x000000010f84e995: pop    %rcx
  0x000000010f84e996: pop    %rdx
  0x000000010f84e997: pop    %rsi
  0x000000010f84e998: pop    %rdi
  0x000000010f84e999: cmp    0x118(%rbx),%rax
  0x000000010f84e9a0: pop    %rbx
  0x000000010f84e9a1: pop    %rax
  0x000000010f84e9a2: jne    0x000000010f84e9b2
  0x000000010f84e9a8: jmpq   0x000000010f84e792
  0x000000010f84e9ad: mov    $0xa535d00,%eax
  0x000000010f84e9b2: callq  0x000000010f7d0ce0  ; OopMap{off=823}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ;   {runtime_call}
  0x000000010f84e9b7: jmpq   0x000000010f84e788
  0x000000010f84e9bc: callq  0x000000010f7cd0c0  ; OopMap{rax=Oop off=833}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ;   {runtime_call}
  0x000000010f84e9c1: mov    0x0(%rax),%eax
  0x000000010f84e9c7: mov    $0x6050b00,%eax
  0x000000010f84e9cc: callq  0x000000010f7d04e0  ; OopMap{rax=Oop off=849}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ;   {runtime_call}
  0x000000010f84e9d1: jmpq   0x000000010f84e798
  0x000000010f84e9d6: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000010f84e9e0: push   %rax
  0x000000010f84e9e1: push   %rbx
  0x000000010f84e9e2: mov    0x48(%rax),%rbx
  0x000000010f84e9e6: push   %rdi
  0x000000010f84e9e7: push   %rsi
  0x000000010f84e9e8: push   %rdx
  0x000000010f84e9e9: push   %rcx
  0x000000010f84e9ea: push   %r8
  0x000000010f84e9ec: push   %r9
  0x000000010f84e9ee: push   %r10
  0x000000010f84e9f0: mov    %rsp,%r10
  0x000000010f84e9f3: and    $0xfffffffffffffff0,%rsp
  0x000000010f84e9f7: push   %r10
  0x000000010f84e9f9: push   %r11
  0x000000010f84e9fb: mov    $0x10d,%edi
  0x000000010f84ea00: movabs $0x7fff203204e5,%r10  ;   {runtime_call}
  0x000000010f84ea0a: callq  *%r10
  0x000000010f84ea0d: pop    %r11
  0x000000010f84ea0f: pop    %rsp
  0x000000010f84ea10: pop    %r10
  0x000000010f84ea12: pop    %r9
  0x000000010f84ea14: pop    %r8
  0x000000010f84ea16: pop    %rcx
  0x000000010f84ea17: pop    %rdx
  0x000000010f84ea18: pop    %rsi
  0x000000010f84ea19: pop    %rdi
  0x000000010f84ea1a: cmp    0x118(%rbx),%rax
  0x000000010f84ea21: pop    %rbx
  0x000000010f84ea22: pop    %rax
  0x000000010f84ea23: jne    0x000000010f84ea33
  0x000000010f84ea29: jmpq   0x000000010f84e7ba
  0x000000010f84ea2e: mov    $0xa535d00,%eax
  0x000000010f84ea33: callq  0x000000010f7d0ce0  ; OopMap{off=952}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ;   {runtime_call}
  0x000000010f84ea38: jmpq   0x000000010f84e7b0
  0x000000010f84ea3d: callq  0x000000010f7cd0c0  ; OopMap{rax=Oop off=962}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ;   {runtime_call}
  0x000000010f84ea42: mov    0x0(%rax),%eax
  0x000000010f84ea48: mov    $0x6050b00,%eax
  0x000000010f84ea4d: callq  0x000000010f7d04e0  ; OopMap{rax=Oop off=978}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ;   {runtime_call}
  0x000000010f84ea52: jmpq   0x000000010f84e7c0
  0x000000010f84ea57: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000010f84ea61: push   %rax
  0x000000010f84ea62: push   %rbx
  0x000000010f84ea63: mov    0x48(%rax),%rbx
  0x000000010f84ea67: push   %rdi
  0x000000010f84ea68: push   %rsi
  0x000000010f84ea69: push   %rdx
  0x000000010f84ea6a: push   %rcx
  0x000000010f84ea6b: push   %r8
  0x000000010f84ea6d: push   %r9
  0x000000010f84ea6f: push   %r10
  0x000000010f84ea71: mov    %rsp,%r10
  0x000000010f84ea74: and    $0xfffffffffffffff0,%rsp
  0x000000010f84ea78: push   %r10
  0x000000010f84ea7a: push   %r11
  0x000000010f84ea7c: mov    $0x10d,%edi
  0x000000010f84ea81: movabs $0x7fff203204e5,%r10  ;   {runtime_call}
  0x000000010f84ea8b: callq  *%r10
  0x000000010f84ea8e: pop    %r11
  0x000000010f84ea90: pop    %rsp
  0x000000010f84ea91: pop    %r10
  0x000000010f84ea93: pop    %r9
  0x000000010f84ea95: pop    %r8
  0x000000010f84ea97: pop    %rcx
  0x000000010f84ea98: pop    %rdx
  0x000000010f84ea99: pop    %rsi
  0x000000010f84ea9a: pop    %rdi
  0x000000010f84ea9b: cmp    0x118(%rbx),%rax
  0x000000010f84eaa2: pop    %rbx
  0x000000010f84eaa3: pop    %rax
  0x000000010f84eaa4: jne    0x000000010f84eab4
  0x000000010f84eaaa: jmpq   0x000000010f84e7e2
  0x000000010f84eaaf: mov    $0xa535d00,%eax
  0x000000010f84eab4: callq  0x000000010f7d0ce0  ; OopMap{off=1081}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ;   {runtime_call}
  0x000000010f84eab9: jmpq   0x000000010f84e7d8
  0x000000010f84eabe: callq  0x000000010f7cd0c0  ; OopMap{rax=Oop off=1091}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ;   {runtime_call}
  0x000000010f84eac3: mov    0x0(%rax),%eax
  0x000000010f84eac9: mov    $0x6050b00,%eax
  0x000000010f84eace: callq  0x000000010f7d04e0  ; OopMap{rax=Oop off=1107}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ;   {runtime_call}
  0x000000010f84ead3: jmpq   0x000000010f84e7e8
  0x000000010f84ead8: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000010f84eae2: push   %rax
  0x000000010f84eae3: push   %rbx
  0x000000010f84eae4: mov    0x48(%rax),%rbx
  0x000000010f84eae8: push   %rdi
  0x000000010f84eae9: push   %rsi
  0x000000010f84eaea: push   %rdx
  0x000000010f84eaeb: push   %rcx
  0x000000010f84eaec: push   %r8
  0x000000010f84eaee: push   %r9
  0x000000010f84eaf0: push   %r10
  0x000000010f84eaf2: mov    %rsp,%r10
  0x000000010f84eaf5: and    $0xfffffffffffffff0,%rsp
  0x000000010f84eaf9: push   %r10
  0x000000010f84eafb: push   %r11
  0x000000010f84eafd: mov    $0x10d,%edi
  0x000000010f84eb02: movabs $0x7fff203204e5,%r10  ;   {runtime_call}
  0x000000010f84eb0c: callq  *%r10
  0x000000010f84eb0f: pop    %r11
  0x000000010f84eb11: pop    %rsp
  0x000000010f84eb12: pop    %r10
  0x000000010f84eb14: pop    %r9
  0x000000010f84eb16: pop    %r8
  0x000000010f84eb18: pop    %rcx
  0x000000010f84eb19: pop    %rdx
  0x000000010f84eb1a: pop    %rsi
  0x000000010f84eb1b: pop    %rdi
  0x000000010f84eb1c: cmp    0x118(%rbx),%rax
  0x000000010f84eb23: pop    %rbx
  0x000000010f84eb24: pop    %rax
  0x000000010f84eb25: jne    0x000000010f84eb35
  0x000000010f84eb2b: jmpq   0x000000010f84e80a
  0x000000010f84eb30: mov    $0xa535d00,%eax
  0x000000010f84eb35: callq  0x000000010f7d0ce0  ; OopMap{off=1210}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)
                                                ;   {runtime_call}
  0x000000010f84eb3a: jmpq   0x000000010f84e800
  0x000000010f84eb3f: callq  0x000000010f7cd0c0  ; OopMap{rax=Oop off=1220}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)
                                                ;   {runtime_call}
  0x000000010f84eb44: mov    0x0(%rax),%eax
  0x000000010f84eb4a: mov    $0x6050b00,%eax
  0x000000010f84eb4f: callq  0x000000010f7d04e0  ; OopMap{rax=Oop off=1236}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)
                                                ;   {runtime_call}
  0x000000010f84eb54: jmpq   0x000000010f84e810
  0x000000010f84eb59: nop
  0x000000010f84eb5a: nop
  0x000000010f84eb5b: mov    0x2a8(%r15),%rax
  0x000000010f84eb62: movabs $0x0,%r10
  0x000000010f84eb6c: mov    %r10,0x2a8(%r15)
  0x000000010f84eb73: movabs $0x0,%r10
  0x000000010f84eb7d: mov    %r10,0x2b0(%r15)
  0x000000010f84eb84: add    $0x30,%rsp
  0x000000010f84eb88: pop    %rbp
  0x000000010f84eb89: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f84eb8e: hlt    
  0x000000010f84eb8f: hlt    
  0x000000010f84eb90: hlt    
  0x000000010f84eb91: hlt    
  0x000000010f84eb92: hlt    
  0x000000010f84eb93: hlt    
  0x000000010f84eb94: hlt    
  0x000000010f84eb95: hlt    
  0x000000010f84eb96: hlt    
  0x000000010f84eb97: hlt    
  0x000000010f84eb98: hlt    
  0x000000010f84eb99: hlt    
  0x000000010f84eb9a: hlt    
  0x000000010f84eb9b: hlt    
  0x000000010f84eb9c: hlt    
  0x000000010f84eb9d: hlt    
  0x000000010f84eb9e: hlt    
  0x000000010f84eb9f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f84eba0: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f84eba5: mov    %rsp,-0x28(%rsp)
  0x000000010f84ebaa: sub    $0x80,%rsp
  0x000000010f84ebb1: mov    %rax,0x78(%rsp)
  0x000000010f84ebb6: mov    %rcx,0x70(%rsp)
  0x000000010f84ebbb: mov    %rdx,0x68(%rsp)
  0x000000010f84ebc0: mov    %rbx,0x60(%rsp)
  0x000000010f84ebc5: mov    %rbp,0x50(%rsp)
  0x000000010f84ebca: mov    %rsi,0x48(%rsp)
  0x000000010f84ebcf: mov    %rdi,0x40(%rsp)
  0x000000010f84ebd4: mov    %r8,0x38(%rsp)
  0x000000010f84ebd9: mov    %r9,0x30(%rsp)
  0x000000010f84ebde: mov    %r10,0x28(%rsp)
  0x000000010f84ebe3: mov    %r11,0x20(%rsp)
  0x000000010f84ebe8: mov    %r12,0x18(%rsp)
  0x000000010f84ebed: mov    %r13,0x10(%rsp)
  0x000000010f84ebf2: mov    %r14,0x8(%rsp)
  0x000000010f84ebf7: mov    %r15,(%rsp)
  0x000000010f84ebfb: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f84ec05: movabs $0x10f84eba5,%rsi  ;   {internal_word}
  0x000000010f84ec0f: mov    %rsp,%rdx
  0x000000010f84ec12: and    $0xfffffffffffffff0,%rsp
  0x000000010f84ec16: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f84ec1b: hlt    
[Deopt Handler Code]
  0x000000010f84ec1c: movabs $0x10f84ec1c,%r10  ;   {section_word}
  0x000000010f84ec26: push   %r10
  0x000000010f84ec28: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f84ec2d: hlt    
  0x000000010f84ec2e: hlt    
  0x000000010f84ec2f: hlt    
Decoding compiled method 0x000000010f84ef90:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ec2acb0} 'getProperties' '(I)I' in 'java/lang/CharacterDataLatin1'
  # this:     rsi:rsi   = 'java/lang/CharacterDataLatin1'
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x000000010f84f100: mov    0x8(%rsi),%r10d
  0x000000010f84f104: shl    $0x3,%r10
  0x000000010f84f108: cmp    %rax,%r10
  0x000000010f84f10b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f84f111: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f84f11c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f84f120: mov    %eax,-0x14000(%rsp)
  0x000000010f84f127: push   %rbp
  0x000000010f84f128: sub    $0x30,%rsp
  0x000000010f84f12c: movabs $0x10ec3bc28,%rax  ;   {metadata(method data for {method} {0x000000010ec2acb0} 'getProperties' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x000000010f84f136: mov    0xdc(%rax),%edi
  0x000000010f84f13c: add    $0x8,%edi
  0x000000010f84f13f: mov    %edi,0xdc(%rax)
  0x000000010f84f145: movabs $0x10ec2acb0,%rax  ;   {metadata({method} {0x000000010ec2acb0} 'getProperties' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x000000010f84f14f: and    $0x1ff8,%edi
  0x000000010f84f155: cmp    $0x0,%edi
  0x000000010f84f158: je     0x000000010f84f18a  ;*iload_1
                                                ; - java.lang.CharacterDataLatin1::getProperties@0 (line 71)

  0x000000010f84f15e: and    $0xffff,%edx
  0x000000010f84f164: movabs $0x7955d00e0,%rax  ;   {oop([I)}
  0x000000010f84f16e: movslq %edx,%rsi
  0x000000010f84f171: cmp    0xc(%rax),%edx     ; implicit exception: dispatches to 0x000000010f84f19e
  0x000000010f84f174: jae    0x000000010f84f1a8
  0x000000010f84f17a: mov    0x10(%rax,%rsi,4),%eax  ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)

  0x000000010f84f17e: add    $0x30,%rsp
  0x000000010f84f182: pop    %rbp
  0x000000010f84f183: test   %eax,-0x8db4089(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f84f189: retq   
  0x000000010f84f18a: mov    %rax,0x8(%rsp)
  0x000000010f84f18f: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f84f197: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=156}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::getProperties@-1 (line 71)
                                                ;   {runtime_call}
  0x000000010f84f19c: jmp    0x000000010f84f15e
  0x000000010f84f19e: callq  0x000000010f7cd0c0  ; OopMap{rax=Oop off=163}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x000000010f84f1a3: callq  0x000000010f7cd0c0  ; OopMap{rax=Oop off=168}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x000000010f84f1a8: mov    %rdx,(%rsp)
  0x000000010f84f1ac: callq  0x000000010f7cca00  ; OopMap{rax=Oop off=177}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x000000010f84f1b1: nop
  0x000000010f84f1b2: nop
  0x000000010f84f1b3: mov    0x2a8(%r15),%rax
  0x000000010f84f1ba: movabs $0x0,%r10
  0x000000010f84f1c4: mov    %r10,0x2a8(%r15)
  0x000000010f84f1cb: movabs $0x0,%r10
  0x000000010f84f1d5: mov    %r10,0x2b0(%r15)
  0x000000010f84f1dc: add    $0x30,%rsp
  0x000000010f84f1e0: pop    %rbp
  0x000000010f84f1e1: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f84f1e6: hlt    
  0x000000010f84f1e7: hlt    
  0x000000010f84f1e8: hlt    
  0x000000010f84f1e9: hlt    
  0x000000010f84f1ea: hlt    
  0x000000010f84f1eb: hlt    
  0x000000010f84f1ec: hlt    
  0x000000010f84f1ed: hlt    
  0x000000010f84f1ee: hlt    
  0x000000010f84f1ef: hlt    
  0x000000010f84f1f0: hlt    
  0x000000010f84f1f1: hlt    
  0x000000010f84f1f2: hlt    
  0x000000010f84f1f3: hlt    
  0x000000010f84f1f4: hlt    
  0x000000010f84f1f5: hlt    
  0x000000010f84f1f6: hlt    
  0x000000010f84f1f7: hlt    
  0x000000010f84f1f8: hlt    
  0x000000010f84f1f9: hlt    
  0x000000010f84f1fa: hlt    
  0x000000010f84f1fb: hlt    
  0x000000010f84f1fc: hlt    
  0x000000010f84f1fd: hlt    
  0x000000010f84f1fe: hlt    
  0x000000010f84f1ff: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f84f200: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f84f205: mov    %rsp,-0x28(%rsp)
  0x000000010f84f20a: sub    $0x80,%rsp
  0x000000010f84f211: mov    %rax,0x78(%rsp)
  0x000000010f84f216: mov    %rcx,0x70(%rsp)
  0x000000010f84f21b: mov    %rdx,0x68(%rsp)
  0x000000010f84f220: mov    %rbx,0x60(%rsp)
  0x000000010f84f225: mov    %rbp,0x50(%rsp)
  0x000000010f84f22a: mov    %rsi,0x48(%rsp)
  0x000000010f84f22f: mov    %rdi,0x40(%rsp)
  0x000000010f84f234: mov    %r8,0x38(%rsp)
  0x000000010f84f239: mov    %r9,0x30(%rsp)
  0x000000010f84f23e: mov    %r10,0x28(%rsp)
  0x000000010f84f243: mov    %r11,0x20(%rsp)
  0x000000010f84f248: mov    %r12,0x18(%rsp)
  0x000000010f84f24d: mov    %r13,0x10(%rsp)
  0x000000010f84f252: mov    %r14,0x8(%rsp)
  0x000000010f84f257: mov    %r15,(%rsp)
  0x000000010f84f25b: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f84f265: movabs $0x10f84f205,%rsi  ;   {internal_word}
  0x000000010f84f26f: mov    %rsp,%rdx
  0x000000010f84f272: and    $0xfffffffffffffff0,%rsp
  0x000000010f84f276: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f84f27b: hlt    
[Deopt Handler Code]
  0x000000010f84f27c: movabs $0x10f84f27c,%r10  ;   {section_word}
  0x000000010f84f286: push   %r10
  0x000000010f84f288: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f84f28d: hlt    
  0x000000010f84f28e: hlt    
  0x000000010f84f28f: hlt    
Decoding compiled method 0x000000010f84f390:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010eb01610} 'toLowerCase' '(I)I' in 'java/lang/Character'
  # parm0:    rsi       = int
  #           [sp+0x40]  (sp of caller)
  0x000000010f84f500: mov    %eax,-0x14000(%rsp)
  0x000000010f84f507: push   %rbp
  0x000000010f84f508: sub    $0x30,%rsp
  0x000000010f84f50c: movabs $0x10ec3b670,%rdi  ;   {metadata(method data for {method} {0x000000010eb01610} 'toLowerCase' '(I)I' in 'java/lang/Character')}
  0x000000010f84f516: mov    0xdc(%rdi),%ebx
  0x000000010f84f51c: add    $0x8,%ebx
  0x000000010f84f51f: mov    %ebx,0xdc(%rdi)
  0x000000010f84f525: movabs $0x10eb01610,%rdi  ;   {metadata({method} {0x000000010eb01610} 'toLowerCase' '(I)I' in 'java/lang/Character')}
  0x000000010f84f52f: and    $0x1ff8,%ebx
  0x000000010f84f535: cmp    $0x0,%ebx
  0x000000010f84f538: je     0x000000010f84f620  ;*iload_0
                                                ; - java.lang.Character::toLowerCase@0 (line 6374)

  0x000000010f84f53e: movabs $0x10ec3b670,%rdi  ;   {metadata(method data for {method} {0x000000010eb01610} 'toLowerCase' '(I)I' in 'java/lang/Character')}
  0x000000010f84f548: addq   $0x1,0x108(%rdi)
  0x000000010f84f550: mov    %rsi,%rdi
  0x000000010f84f553: mov    %rdi,%rsi          ;*invokestatic of
                                                ; - java.lang.Character::toLowerCase@1 (line 6374)

  0x000000010f84f556: mov    %edi,0x20(%rsp)
  0x000000010f84f55a: nop
  0x000000010f84f55b: nop
  0x000000010f84f55c: nop
  0x000000010f84f55d: nop
  0x000000010f84f55e: nop
  0x000000010f84f55f: callq  0x000000010f717520  ; OopMap{off=100}
                                                ;*invokestatic of
                                                ; - java.lang.Character::toLowerCase@1 (line 6374)
                                                ;   {static_call}
  0x000000010f84f564: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x000000010f84f637
  0x000000010f84f567: mov    %rax,%rdx
  0x000000010f84f56a: movabs $0x10ec3b670,%rsi  ;   {metadata(method data for {method} {0x000000010eb01610} 'toLowerCase' '(I)I' in 'java/lang/Character')}
  0x000000010f84f574: mov    0x8(%rdx),%edx
  0x000000010f84f577: shl    $0x3,%rdx
  0x000000010f84f57b: cmp    0x120(%rsi),%rdx
  0x000000010f84f582: jne    0x000000010f84f591
  0x000000010f84f584: addq   $0x1,0x128(%rsi)
  0x000000010f84f58c: jmpq   0x000000010f84f5f7
  0x000000010f84f591: cmp    0x130(%rsi),%rdx
  0x000000010f84f598: jne    0x000000010f84f5a7
  0x000000010f84f59a: addq   $0x1,0x138(%rsi)
  0x000000010f84f5a2: jmpq   0x000000010f84f5f7
  0x000000010f84f5a7: cmpq   $0x0,0x120(%rsi)
  0x000000010f84f5b2: jne    0x000000010f84f5cb
  0x000000010f84f5b4: mov    %rdx,0x120(%rsi)
  0x000000010f84f5bb: movq   $0x1,0x128(%rsi)
  0x000000010f84f5c6: jmpq   0x000000010f84f5f7
  0x000000010f84f5cb: cmpq   $0x0,0x130(%rsi)
  0x000000010f84f5d6: jne    0x000000010f84f5ef
  0x000000010f84f5d8: mov    %rdx,0x130(%rsi)
  0x000000010f84f5df: movq   $0x1,0x138(%rsi)
  0x000000010f84f5ea: jmpq   0x000000010f84f5f7
  0x000000010f84f5ef: addq   $0x1,0x118(%rsi)
  0x000000010f84f5f7: mov    0x20(%rsp),%edx
  0x000000010f84f5fb: mov    %rax,%rsi          ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6374)

  0x000000010f84f5fe: nop
  0x000000010f84f5ff: nop
  0x000000010f84f600: nop
  0x000000010f84f601: nop
  0x000000010f84f602: nop
  0x000000010f84f603: nop
  0x000000010f84f604: nop
  0x000000010f84f605: movabs $0xffffffffffffffff,%rax
  0x000000010f84f60f: callq  0x000000010f7172e0  ; OopMap{off=276}
                                                ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6374)
                                                ;   {virtual_call}
  0x000000010f84f614: add    $0x30,%rsp
  0x000000010f84f618: pop    %rbp
  0x000000010f84f619: test   %eax,-0x8db451f(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f84f61f: retq   
  0x000000010f84f620: mov    %rdi,0x8(%rsp)
  0x000000010f84f625: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f84f62d: callq  0x000000010f7d1a20  ; OopMap{off=306}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toLowerCase@-1 (line 6374)
                                                ;   {runtime_call}
  0x000000010f84f632: jmpq   0x000000010f84f53e
  0x000000010f84f637: callq  0x000000010f7cd0c0  ; OopMap{rax=Oop off=316}
                                                ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6374)
                                                ;   {runtime_call}
  0x000000010f84f63c: nop
  0x000000010f84f63d: nop
  0x000000010f84f63e: mov    0x2a8(%r15),%rax
  0x000000010f84f645: movabs $0x0,%r10
  0x000000010f84f64f: mov    %r10,0x2a8(%r15)
  0x000000010f84f656: movabs $0x0,%r10
  0x000000010f84f660: mov    %r10,0x2b0(%r15)
  0x000000010f84f667: add    $0x30,%rsp
  0x000000010f84f66b: pop    %rbp
  0x000000010f84f66c: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f84f671: hlt    
  0x000000010f84f672: hlt    
  0x000000010f84f673: hlt    
  0x000000010f84f674: hlt    
  0x000000010f84f675: hlt    
  0x000000010f84f676: hlt    
  0x000000010f84f677: hlt    
  0x000000010f84f678: hlt    
  0x000000010f84f679: hlt    
  0x000000010f84f67a: hlt    
  0x000000010f84f67b: hlt    
  0x000000010f84f67c: hlt    
  0x000000010f84f67d: hlt    
  0x000000010f84f67e: hlt    
  0x000000010f84f67f: hlt    
[Stub Code]
  0x000000010f84f680: nop                       ;   {no_reloc}
  0x000000010f84f681: nop
  0x000000010f84f682: nop
  0x000000010f84f683: nop
  0x000000010f84f684: nop
  0x000000010f84f685: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f84f68f: jmpq   0x000000010f84f68f  ;   {runtime_call}
  0x000000010f84f694: nop
  0x000000010f84f695: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f84f69f: jmpq   0x000000010f84f69f  ;   {runtime_call}
[Exception Handler]
  0x000000010f84f6a4: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f84f6a9: mov    %rsp,-0x28(%rsp)
  0x000000010f84f6ae: sub    $0x80,%rsp
  0x000000010f84f6b5: mov    %rax,0x78(%rsp)
  0x000000010f84f6ba: mov    %rcx,0x70(%rsp)
  0x000000010f84f6bf: mov    %rdx,0x68(%rsp)
  0x000000010f84f6c4: mov    %rbx,0x60(%rsp)
  0x000000010f84f6c9: mov    %rbp,0x50(%rsp)
  0x000000010f84f6ce: mov    %rsi,0x48(%rsp)
  0x000000010f84f6d3: mov    %rdi,0x40(%rsp)
  0x000000010f84f6d8: mov    %r8,0x38(%rsp)
  0x000000010f84f6dd: mov    %r9,0x30(%rsp)
  0x000000010f84f6e2: mov    %r10,0x28(%rsp)
  0x000000010f84f6e7: mov    %r11,0x20(%rsp)
  0x000000010f84f6ec: mov    %r12,0x18(%rsp)
  0x000000010f84f6f1: mov    %r13,0x10(%rsp)
  0x000000010f84f6f6: mov    %r14,0x8(%rsp)
  0x000000010f84f6fb: mov    %r15,(%rsp)
  0x000000010f84f6ff: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f84f709: movabs $0x10f84f6a9,%rsi  ;   {internal_word}
  0x000000010f84f713: mov    %rsp,%rdx
  0x000000010f84f716: and    $0xfffffffffffffff0,%rsp
  0x000000010f84f71a: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f84f71f: hlt    
[Deopt Handler Code]
  0x000000010f84f720: movabs $0x10f84f720,%r10  ;   {section_word}
  0x000000010f84f72a: push   %r10
  0x000000010f84f72c: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f84f731: hlt    
  0x000000010f84f732: hlt    
  0x000000010f84f733: hlt    
  0x000000010f84f734: hlt    
  0x000000010f84f735: hlt    
  0x000000010f84f736: hlt    
  0x000000010f84f737: hlt    
Decoding compiled method 0x000000010f84f850:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ec2b480} 'toLowerCase' '(I)I' in 'java/lang/CharacterDataLatin1'
  # this:     rsi:rsi   = 'java/lang/CharacterDataLatin1'
  # parm0:    rdx       = int
  #           [sp+0x50]  (sp of caller)
  0x000000010f84f9c0: mov    0x8(%rsi),%r10d
  0x000000010f84f9c4: shl    $0x3,%r10
  0x000000010f84f9c8: cmp    %rax,%r10
  0x000000010f84f9cb: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f84f9d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f84f9dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f84f9e0: mov    %eax,-0x14000(%rsp)
  0x000000010f84f9e7: push   %rbp
  0x000000010f84f9e8: sub    $0x40,%rsp
  0x000000010f84f9ec: movabs $0x10ec3ba68,%rax  ;   {metadata(method data for {method} {0x000000010ec2b480} 'toLowerCase' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x000000010f84f9f6: mov    0xdc(%rax),%edi
  0x000000010f84f9fc: add    $0x8,%edi
  0x000000010f84f9ff: mov    %edi,0xdc(%rax)
  0x000000010f84fa05: movabs $0x10ec2b480,%rax  ;   {metadata({method} {0x000000010ec2b480} 'toLowerCase' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x000000010f84fa0f: and    $0x1ff8,%edi
  0x000000010f84fa15: cmp    $0x0,%edi
  0x000000010f84fa18: je     0x000000010f84fb26  ;*iload_1
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@0 (line 133)

  0x000000010f84fa1e: movabs $0x10ec3ba68,%rax  ;   {metadata(method data for {method} {0x000000010ec2b480} 'toLowerCase' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x000000010f84fa28: addq   $0x1,0x118(%rax)
  0x000000010f84fa30: movabs $0x10ec3bc28,%rax  ;   {metadata(method data for {method} {0x000000010ec2acb0} 'getProperties' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x000000010f84fa3a: mov    0xdc(%rax),%esi
  0x000000010f84fa40: add    $0x8,%esi
  0x000000010f84fa43: mov    %esi,0xdc(%rax)
  0x000000010f84fa49: movabs $0x10ec2acb0,%rax  ;   {metadata({method} {0x000000010ec2acb0} 'getProperties' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x000000010f84fa53: and    $0x7ffff8,%esi
  0x000000010f84fa59: cmp    $0x0,%esi
  0x000000010f84fa5c: je     0x000000010f84fb3d
  0x000000010f84fa62: mov    %rdx,%rax
  0x000000010f84fa65: and    $0xffff,%eax
  0x000000010f84fa6b: movabs $0x7955d00e0,%rsi  ;   {oop([I)}
  0x000000010f84fa75: movslq %eax,%rdi
  0x000000010f84fa78: cmp    0xc(%rsi),%eax     ; implicit exception: dispatches to 0x000000010f84fb54
  0x000000010f84fa7b: jae    0x000000010f84fb5e
  0x000000010f84fa81: mov    0x10(%rsi,%rdi,4),%eax  ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)

  0x000000010f84fa85: mov    %rax,%rsi
  0x000000010f84fa88: and    $0x20000,%esi
  0x000000010f84fa8e: cmp    $0x0,%esi
  0x000000010f84fa91: movabs $0x10ec3ba68,%rsi  ;   {metadata(method data for {method} {0x000000010ec2b480} 'toLowerCase' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x000000010f84fa9b: movabs $0x138,%rdi
  0x000000010f84faa5: je     0x000000010f84fab5
  0x000000010f84faab: movabs $0x148,%rdi
  0x000000010f84fab5: mov    (%rsi,%rdi,1),%rbx
  0x000000010f84fab9: lea    0x1(%rbx),%rbx
  0x000000010f84fabd: mov    %rbx,(%rsi,%rdi,1)
  0x000000010f84fac1: je     0x000000010f84fb17  ;*ifeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@12 (line 136)

  0x000000010f84fac7: mov    %rax,%rsi
  0x000000010f84faca: and    $0x7fc0000,%esi
  0x000000010f84fad0: cmp    $0x7fc0000,%esi
  0x000000010f84fad6: movabs $0x10ec3ba68,%rsi  ;   {metadata(method data for {method} {0x000000010ec2b480} 'toLowerCase' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x000000010f84fae0: movabs $0x158,%rdi
  0x000000010f84faea: je     0x000000010f84fafa
  0x000000010f84faf0: movabs $0x168,%rdi
  0x000000010f84fafa: mov    (%rsi,%rdi,1),%rbx
  0x000000010f84fafe: lea    0x1(%rbx),%rbx
  0x000000010f84fb02: mov    %rbx,(%rsi,%rdi,1)
  0x000000010f84fb06: je     0x000000010f84fb17  ;*if_icmpeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@21 (line 136)

  0x000000010f84fb0c: shl    $0x5,%eax
  0x000000010f84fb0f: sar    $0x17,%eax
  0x000000010f84fb12: add    %edx,%eax
  0x000000010f84fb14: mov    %rax,%rdx          ;*iload_2
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@37 (line 141)

  0x000000010f84fb17: mov    %rdx,%rax
  0x000000010f84fb1a: add    $0x40,%rsp
  0x000000010f84fb1e: pop    %rbp
  0x000000010f84fb1f: test   %eax,-0x8db4a25(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f84fb25: retq   
  0x000000010f84fb26: mov    %rax,0x8(%rsp)
  0x000000010f84fb2b: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f84fb33: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=376}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@-1 (line 133)
                                                ;   {runtime_call}
  0x000000010f84fb38: jmpq   0x000000010f84fa1e
  0x000000010f84fb3d: mov    %rax,0x8(%rsp)
  0x000000010f84fb42: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f84fb4a: callq  0x000000010f7d1a20  ; OopMap{off=399}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::getProperties@-1 (line 71)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x000000010f84fb4f: jmpq   0x000000010f84fa62
  0x000000010f84fb54: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop off=409}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x000000010f84fb59: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop off=414}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x000000010f84fb5e: mov    %rax,(%rsp)
  0x000000010f84fb62: callq  0x000000010f7cca00  ; OopMap{rsi=Oop off=423}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x000000010f84fb67: nop
  0x000000010f84fb68: nop
  0x000000010f84fb69: mov    0x2a8(%r15),%rax
  0x000000010f84fb70: movabs $0x0,%r10
  0x000000010f84fb7a: mov    %r10,0x2a8(%r15)
  0x000000010f84fb81: movabs $0x0,%r10
  0x000000010f84fb8b: mov    %r10,0x2b0(%r15)
  0x000000010f84fb92: add    $0x40,%rsp
  0x000000010f84fb96: pop    %rbp
  0x000000010f84fb97: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f84fb9c: hlt    
  0x000000010f84fb9d: hlt    
  0x000000010f84fb9e: hlt    
  0x000000010f84fb9f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f84fba0: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f84fba5: mov    %rsp,-0x28(%rsp)
  0x000000010f84fbaa: sub    $0x80,%rsp
  0x000000010f84fbb1: mov    %rax,0x78(%rsp)
  0x000000010f84fbb6: mov    %rcx,0x70(%rsp)
  0x000000010f84fbbb: mov    %rdx,0x68(%rsp)
  0x000000010f84fbc0: mov    %rbx,0x60(%rsp)
  0x000000010f84fbc5: mov    %rbp,0x50(%rsp)
  0x000000010f84fbca: mov    %rsi,0x48(%rsp)
  0x000000010f84fbcf: mov    %rdi,0x40(%rsp)
  0x000000010f84fbd4: mov    %r8,0x38(%rsp)
  0x000000010f84fbd9: mov    %r9,0x30(%rsp)
  0x000000010f84fbde: mov    %r10,0x28(%rsp)
  0x000000010f84fbe3: mov    %r11,0x20(%rsp)
  0x000000010f84fbe8: mov    %r12,0x18(%rsp)
  0x000000010f84fbed: mov    %r13,0x10(%rsp)
  0x000000010f84fbf2: mov    %r14,0x8(%rsp)
  0x000000010f84fbf7: mov    %r15,(%rsp)
  0x000000010f84fbfb: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f84fc05: movabs $0x10f84fba5,%rsi  ;   {internal_word}
  0x000000010f84fc0f: mov    %rsp,%rdx
  0x000000010f84fc12: and    $0xfffffffffffffff0,%rsp
  0x000000010f84fc16: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f84fc1b: hlt    
[Deopt Handler Code]
  0x000000010f84fc1c: movabs $0x10f84fc1c,%r10  ;   {section_word}
  0x000000010f84fc26: push   %r10
  0x000000010f84fc28: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f84fc2d: hlt    
  0x000000010f84fc2e: hlt    
  0x000000010f84fc2f: hlt    
Decoding compiled method 0x000000010f84fdd0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010eb01578} 'toLowerCase' '(C)C' in 'java/lang/Character'
  # parm0:    rsi       = char
  #           [sp+0x50]  (sp of caller)
  0x000000010f84ff60: mov    %eax,-0x14000(%rsp)
  0x000000010f84ff67: push   %rbp
  0x000000010f84ff68: sub    $0x40,%rsp
  0x000000010f84ff6c: movabs $0x10ec3b518,%rdi  ;   {metadata(method data for {method} {0x000000010eb01578} 'toLowerCase' '(C)C' in 'java/lang/Character')}
  0x000000010f84ff76: mov    0xdc(%rdi),%ebx
  0x000000010f84ff7c: add    $0x8,%ebx
  0x000000010f84ff7f: mov    %ebx,0xdc(%rdi)
  0x000000010f84ff85: movabs $0x10eb01578,%rdi  ;   {metadata({method} {0x000000010eb01578} 'toLowerCase' '(C)C' in 'java/lang/Character')}
  0x000000010f84ff8f: and    $0x1ff8,%ebx
  0x000000010f84ff95: cmp    $0x0,%ebx
  0x000000010f84ff98: je     0x000000010f8500cc  ;*iload_0
                                                ; - java.lang.Character::toLowerCase@0 (line 6345)

  0x000000010f84ff9e: movabs $0x10ec3b518,%rdi  ;   {metadata(method data for {method} {0x000000010eb01578} 'toLowerCase' '(C)C' in 'java/lang/Character')}
  0x000000010f84ffa8: addq   $0x1,0x108(%rdi)
  0x000000010f84ffb0: movabs $0x10ec3b670,%rdi  ;   {metadata(method data for {method} {0x000000010eb01610} 'toLowerCase' '(I)I' in 'java/lang/Character')}
  0x000000010f84ffba: mov    0xdc(%rdi),%ebx
  0x000000010f84ffc0: add    $0x8,%ebx
  0x000000010f84ffc3: mov    %ebx,0xdc(%rdi)
  0x000000010f84ffc9: movabs $0x10eb01610,%rdi  ;   {metadata({method} {0x000000010eb01610} 'toLowerCase' '(I)I' in 'java/lang/Character')}
  0x000000010f84ffd3: and    $0x7ffff8,%ebx
  0x000000010f84ffd9: cmp    $0x0,%ebx
  0x000000010f84ffdc: je     0x000000010f8500e3
  0x000000010f84ffe2: movabs $0x10ec3b670,%rdi  ;   {metadata(method data for {method} {0x000000010eb01610} 'toLowerCase' '(I)I' in 'java/lang/Character')}
  0x000000010f84ffec: addq   $0x1,0x108(%rdi)
  0x000000010f84fff4: mov    %rsi,%rdi
  0x000000010f84fff7: mov    %rdi,%rsi          ;*invokestatic of
                                                ; - java.lang.Character::toLowerCase@1 (line 6374)
                                                ; - java.lang.Character::toLowerCase@1 (line 6345)

  0x000000010f84fffa: mov    %edi,0x28(%rsp)
  0x000000010f84fffe: nop
  0x000000010f84ffff: callq  0x000000010f717520  ; OopMap{off=164}
                                                ;*invokestatic of
                                                ; - java.lang.Character::toLowerCase@1 (line 6374)
                                                ; - java.lang.Character::toLowerCase@1 (line 6345)
                                                ;   {static_call}
  0x000000010f850004: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x000000010f8500fa
  0x000000010f850007: mov    %rax,%rdx
  0x000000010f85000a: movabs $0x10ec3b670,%rsi  ;   {metadata(method data for {method} {0x000000010eb01610} 'toLowerCase' '(I)I' in 'java/lang/Character')}
  0x000000010f850014: mov    0x8(%rdx),%edx
  0x000000010f850017: shl    $0x3,%rdx
  0x000000010f85001b: cmp    0x120(%rsi),%rdx
  0x000000010f850022: jne    0x000000010f850031
  0x000000010f850024: addq   $0x1,0x128(%rsi)
  0x000000010f85002c: jmpq   0x000000010f850097
  0x000000010f850031: cmp    0x130(%rsi),%rdx
  0x000000010f850038: jne    0x000000010f850047
  0x000000010f85003a: addq   $0x1,0x138(%rsi)
  0x000000010f850042: jmpq   0x000000010f850097
  0x000000010f850047: cmpq   $0x0,0x120(%rsi)
  0x000000010f850052: jne    0x000000010f85006b
  0x000000010f850054: mov    %rdx,0x120(%rsi)
  0x000000010f85005b: movq   $0x1,0x128(%rsi)
  0x000000010f850066: jmpq   0x000000010f850097
  0x000000010f85006b: cmpq   $0x0,0x130(%rsi)
  0x000000010f850076: jne    0x000000010f85008f
  0x000000010f850078: mov    %rdx,0x130(%rsi)
  0x000000010f85007f: movq   $0x1,0x138(%rsi)
  0x000000010f85008a: jmpq   0x000000010f850097
  0x000000010f85008f: addq   $0x1,0x118(%rsi)
  0x000000010f850097: mov    0x28(%rsp),%edx
  0x000000010f85009b: mov    %rax,%rsi          ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6374)
                                                ; - java.lang.Character::toLowerCase@1 (line 6345)

  0x000000010f85009e: nop
  0x000000010f85009f: nop
  0x000000010f8500a0: nop
  0x000000010f8500a1: nop
  0x000000010f8500a2: nop
  0x000000010f8500a3: nop
  0x000000010f8500a4: nop
  0x000000010f8500a5: movabs $0xffffffffffffffff,%rax
  0x000000010f8500af: callq  0x000000010f7172e0  ; OopMap{off=340}
                                                ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6374)
                                                ; - java.lang.Character::toLowerCase@1 (line 6345)
                                                ;   {virtual_call}
  0x000000010f8500b4: and    $0xffff,%eax
  0x000000010f8500ba: and    $0xffff,%eax
  0x000000010f8500c0: add    $0x40,%rsp
  0x000000010f8500c4: pop    %rbp
  0x000000010f8500c5: test   %eax,-0x8db4fcb(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f8500cb: retq   
  0x000000010f8500cc: mov    %rdi,0x8(%rsp)
  0x000000010f8500d1: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f8500d9: callq  0x000000010f7d1a20  ; OopMap{off=382}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toLowerCase@-1 (line 6345)
                                                ;   {runtime_call}
  0x000000010f8500de: jmpq   0x000000010f84ff9e
  0x000000010f8500e3: mov    %rdi,0x8(%rsp)
  0x000000010f8500e8: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f8500f0: callq  0x000000010f7d1a20  ; OopMap{off=405}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toLowerCase@-1 (line 6374)
                                                ; - java.lang.Character::toLowerCase@1 (line 6345)
                                                ;   {runtime_call}
  0x000000010f8500f5: jmpq   0x000000010f84ffe2
  0x000000010f8500fa: callq  0x000000010f7cd0c0  ; OopMap{rax=Oop off=415}
                                                ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6374)
                                                ; - java.lang.Character::toLowerCase@1 (line 6345)
                                                ;   {runtime_call}
  0x000000010f8500ff: nop
  0x000000010f850100: nop
  0x000000010f850101: mov    0x2a8(%r15),%rax
  0x000000010f850108: movabs $0x0,%r10
  0x000000010f850112: mov    %r10,0x2a8(%r15)
  0x000000010f850119: movabs $0x0,%r10
  0x000000010f850123: mov    %r10,0x2b0(%r15)
  0x000000010f85012a: add    $0x40,%rsp
  0x000000010f85012e: pop    %rbp
  0x000000010f85012f: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f850134: hlt    
  0x000000010f850135: hlt    
  0x000000010f850136: hlt    
  0x000000010f850137: hlt    
  0x000000010f850138: hlt    
  0x000000010f850139: hlt    
  0x000000010f85013a: hlt    
  0x000000010f85013b: hlt    
  0x000000010f85013c: hlt    
  0x000000010f85013d: hlt    
  0x000000010f85013e: hlt    
  0x000000010f85013f: hlt    
[Stub Code]
  0x000000010f850140: nop                       ;   {no_reloc}
  0x000000010f850141: nop
  0x000000010f850142: nop
  0x000000010f850143: nop
  0x000000010f850144: nop
  0x000000010f850145: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f85014f: jmpq   0x000000010f85014f  ;   {runtime_call}
  0x000000010f850154: nop
  0x000000010f850155: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f85015f: jmpq   0x000000010f85015f  ;   {runtime_call}
[Exception Handler]
  0x000000010f850164: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f850169: mov    %rsp,-0x28(%rsp)
  0x000000010f85016e: sub    $0x80,%rsp
  0x000000010f850175: mov    %rax,0x78(%rsp)
  0x000000010f85017a: mov    %rcx,0x70(%rsp)
  0x000000010f85017f: mov    %rdx,0x68(%rsp)
  0x000000010f850184: mov    %rbx,0x60(%rsp)
  0x000000010f850189: mov    %rbp,0x50(%rsp)
  0x000000010f85018e: mov    %rsi,0x48(%rsp)
  0x000000010f850193: mov    %rdi,0x40(%rsp)
  0x000000010f850198: mov    %r8,0x38(%rsp)
  0x000000010f85019d: mov    %r9,0x30(%rsp)
  0x000000010f8501a2: mov    %r10,0x28(%rsp)
  0x000000010f8501a7: mov    %r11,0x20(%rsp)
  0x000000010f8501ac: mov    %r12,0x18(%rsp)
  0x000000010f8501b1: mov    %r13,0x10(%rsp)
  0x000000010f8501b6: mov    %r14,0x8(%rsp)
  0x000000010f8501bb: mov    %r15,(%rsp)
  0x000000010f8501bf: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f8501c9: movabs $0x10f850169,%rsi  ;   {internal_word}
  0x000000010f8501d3: mov    %rsp,%rdx
  0x000000010f8501d6: and    $0xfffffffffffffff0,%rsp
  0x000000010f8501da: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f8501df: hlt    
[Deopt Handler Code]
  0x000000010f8501e0: movabs $0x10f8501e0,%r10  ;   {section_word}
  0x000000010f8501ea: push   %r10
  0x000000010f8501ec: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f8501f1: hlt    
  0x000000010f8501f2: hlt    
  0x000000010f8501f3: hlt    
  0x000000010f8501f4: hlt    
  0x000000010f8501f5: hlt    
  0x000000010f8501f6: hlt    
  0x000000010f8501f7: hlt    
Decoding compiled method 0x000000010f850350:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010eb7fc80} 'copyOf' '([BI)[B' in 'java/util/Arrays'
  # parm0:    rsi:rsi   = '[B'
  # parm1:    rdx       = int
  #           [sp+0x70]  (sp of caller)
  0x000000010f8504e0: mov    %eax,-0x14000(%rsp)
  0x000000010f8504e7: push   %rbp
  0x000000010f8504e8: sub    $0x60,%rsp
  0x000000010f8504ec: mov    %rsi,%r8
  0x000000010f8504ef: mov    %rdx,%r9
  0x000000010f8504f2: movabs $0x10ec815b8,%rbx  ;   {metadata(method data for {method} {0x000000010eb7fc80} 'copyOf' '([BI)[B' in 'java/util/Arrays')}
  0x000000010f8504fc: mov    0xdc(%rbx),%edx
  0x000000010f850502: add    $0x8,%edx
  0x000000010f850505: mov    %edx,0xdc(%rbx)
  0x000000010f85050b: movabs $0x10eb7fc80,%rbx  ;   {metadata({method} {0x000000010eb7fc80} 'copyOf' '([BI)[B' in 'java/util/Arrays')}
  0x000000010f850515: and    $0x1ff8,%edx
  0x000000010f85051b: cmp    $0x0,%edx
  0x000000010f85051e: je     0x000000010f8506ca  ;*iload_1
                                                ; - java.util.Arrays::copyOf@0 (line 3236)

  0x000000010f850524: mov    %r9,%rbx
  0x000000010f850527: movabs $0x7c00007a8,%rdx  ;   {metadata({type array byte})}
  0x000000010f850531: movslq %ebx,%rbx
  0x000000010f850534: mov    %rbx,%rdi
  0x000000010f850537: cmp    $0xffffff,%rbx
  0x000000010f85053e: ja     0x000000010f8506e1
  0x000000010f850544: movabs $0x17,%rsi
  0x000000010f85054e: lea    (%rsi,%rbx,1),%rsi
  0x000000010f850552: and    $0xfffffffffffffff8,%rsi
  0x000000010f850556: mov    0x60(%r15),%rax
  0x000000010f85055a: lea    (%rax,%rsi,1),%rsi
  0x000000010f85055e: cmp    0x70(%r15),%rsi
  0x000000010f850562: ja     0x000000010f8506e1
  0x000000010f850568: mov    %rsi,0x60(%r15)
  0x000000010f85056c: sub    %rax,%rsi
  0x000000010f85056f: movq   $0x1,(%rax)
  0x000000010f850576: mov    %rdx,%rcx
  0x000000010f850579: shr    $0x3,%rcx
  0x000000010f85057d: mov    %ecx,0x8(%rax)
  0x000000010f850580: mov    %ebx,0xc(%rax)
  0x000000010f850583: sub    $0x10,%rsi
  0x000000010f850587: je     0x000000010f85059e
  0x000000010f85058d: xor    %rbx,%rbx
  0x000000010f850590: shr    $0x3,%rsi
  0x000000010f850594: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000010f850599: dec    %rsi
  0x000000010f85059c: jne    0x000000010f850594  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3236)

  0x000000010f85059e: mov    0xc(%r8),%esi      ;*arraylength
                                                ; - java.util.Arrays::copyOf@9 (line 3237)
                                                ; implicit exception: dispatches to 0x000000010f8506eb
  0x000000010f8505a2: movabs $0x10ec815b8,%rdx  ;   {metadata(method data for {method} {0x000000010eb7fc80} 'copyOf' '([BI)[B' in 'java/util/Arrays')}
  0x000000010f8505ac: addq   $0x1,0x108(%rdx)
  0x000000010f8505b4: movabs $0x10ec2f708,%rdx  ;   {metadata(method data for {method} {0x000000010eb5b7d8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010f8505be: mov    0xdc(%rdx),%ecx
  0x000000010f8505c4: add    $0x8,%ecx
  0x000000010f8505c7: mov    %ecx,0xdc(%rdx)
  0x000000010f8505cd: movabs $0x10eb5b7d8,%rdx  ;   {metadata({method} {0x000000010eb5b7d8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010f8505d7: and    $0x7ffff8,%ecx
  0x000000010f8505dd: cmp    $0x0,%ecx
  0x000000010f8505e0: je     0x000000010f8506f0
  0x000000010f8505e6: cmp    %r9d,%esi
  0x000000010f8505e9: movabs $0x10ec2f708,%rdx  ;   {metadata(method data for {method} {0x000000010eb5b7d8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010f8505f3: movabs $0x108,%rcx
  0x000000010f8505fd: jg     0x000000010f85060d
  0x000000010f850603: movabs $0x118,%rcx
  0x000000010f85060d: mov    (%rdx,%rcx,1),%rdi
  0x000000010f850611: lea    0x1(%rdi),%rdi
  0x000000010f850615: mov    %rdi,(%rdx,%rcx,1)
  0x000000010f850619: jg     0x000000010f850632  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3238)

  0x000000010f85061f: movabs $0x10ec2f708,%rdx  ;   {metadata(method data for {method} {0x000000010eb5b7d8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010f850629: incl   0x128(%rdx)
  0x000000010f85062f: mov    %rsi,%r9           ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3238)

  0x000000010f850632: movabs $0x10ec815b8,%rsi  ;   {metadata(method data for {method} {0x000000010eb7fc80} 'copyOf' '([BI)[B' in 'java/util/Arrays')}
  0x000000010f85063c: addq   $0x1,0x118(%rsi)
  0x000000010f850644: mov    %r8,%rsi
  0x000000010f850647: mov    $0x0,%edx
  0x000000010f85064c: mov    %rax,%rcx
  0x000000010f85064f: mov    $0x0,%r8d
  0x000000010f850655: mov    %rax,0x50(%rsp)
  0x000000010f85065a: lea    (%rdx,%r9,1),%rdi
  0x000000010f85065e: cmp    0xc(%rsi),%edi
  0x000000010f850661: ja     0x000000010f850707
  0x000000010f850667: lea    (%r8,%r9,1),%rdi
  0x000000010f85066b: cmp    0xc(%rcx),%edi
  0x000000010f85066e: ja     0x000000010f850707
  0x000000010f850674: test   %r9d,%r9d
  0x000000010f850677: jl     0x000000010f850707
  0x000000010f85067d: je     0x000000010f8506b9
  0x000000010f850683: movslq %edx,%rdx
  0x000000010f850686: movslq %r8d,%r8
  0x000000010f850689: lea    0x10(%rsi,%rdx,1),%rdi
  0x000000010f85068e: lea    0x10(%rcx,%r8,1),%rsi
  0x000000010f850693: mov    %r9,%rdx
  0x000000010f850696: test   $0xf,%esp
  0x000000010f85069c: je     0x000000010f8506b4
  0x000000010f8506a2: sub    $0x8,%rsp
  0x000000010f8506a6: callq  Stub::jbyte_disjoint_arraycopy
                                                ;   {runtime_call}
  0x000000010f8506ab: add    $0x8,%rsp
  0x000000010f8506af: jmpq   0x000000010f8506b9
  0x000000010f8506b4: callq  Stub::jbyte_disjoint_arraycopy
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3237)
                                                ;   {runtime_call}
  0x000000010f8506b9: mov    0x50(%rsp),%rax
  0x000000010f8506be: add    $0x60,%rsp
  0x000000010f8506c2: pop    %rbp
  0x000000010f8506c3: test   %eax,-0x8db55c9(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f8506c9: retq   
  0x000000010f8506ca: mov    %rbx,0x8(%rsp)
  0x000000010f8506cf: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f8506d7: callq  0x000000010f7d1a20  ; OopMap{r8=Oop off=508}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3236)
                                                ;   {runtime_call}
  0x000000010f8506dc: jmpq   0x000000010f850524
  0x000000010f8506e1: callq  0x000000010f7ce120  ; OopMap{r8=Oop off=518}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3236)
                                                ;   {runtime_call}
  0x000000010f8506e6: jmpq   0x000000010f85059e
  0x000000010f8506eb: callq  0x000000010f7cd0c0  ; OopMap{r8=Oop rax=Oop off=528}
                                                ;*arraylength
                                                ; - java.util.Arrays::copyOf@9 (line 3237)
                                                ;   {runtime_call}
  0x000000010f8506f0: mov    %rdx,0x8(%rsp)
  0x000000010f8506f5: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f8506fd: callq  0x000000010f7d1a20  ; OopMap{r8=Oop rax=Oop off=546}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3238)
                                                ;   {runtime_call}
  0x000000010f850702: jmpq   0x000000010f8505e6
  0x000000010f850707: callq  0x000000010f717520  ; OopMap{[80]=Oop off=556}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3237)
                                                ;   {static_call}
  0x000000010f85070c: jmp    0x000000010f8506b9
  0x000000010f85070e: nop
  0x000000010f85070f: nop
  0x000000010f850710: mov    0x2a8(%r15),%rax
  0x000000010f850717: movabs $0x0,%r10
  0x000000010f850721: mov    %r10,0x2a8(%r15)
  0x000000010f850728: movabs $0x0,%r10
  0x000000010f850732: mov    %r10,0x2b0(%r15)
  0x000000010f850739: add    $0x60,%rsp
  0x000000010f85073d: pop    %rbp
  0x000000010f85073e: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f850743: hlt    
  0x000000010f850744: hlt    
  0x000000010f850745: hlt    
  0x000000010f850746: hlt    
  0x000000010f850747: hlt    
  0x000000010f850748: hlt    
  0x000000010f850749: hlt    
  0x000000010f85074a: hlt    
  0x000000010f85074b: hlt    
  0x000000010f85074c: hlt    
  0x000000010f85074d: hlt    
  0x000000010f85074e: hlt    
  0x000000010f85074f: hlt    
  0x000000010f850750: hlt    
  0x000000010f850751: hlt    
  0x000000010f850752: hlt    
  0x000000010f850753: hlt    
  0x000000010f850754: hlt    
  0x000000010f850755: hlt    
  0x000000010f850756: hlt    
  0x000000010f850757: hlt    
  0x000000010f850758: hlt    
  0x000000010f850759: hlt    
  0x000000010f85075a: hlt    
  0x000000010f85075b: hlt    
  0x000000010f85075c: hlt    
  0x000000010f85075d: hlt    
  0x000000010f85075e: hlt    
  0x000000010f85075f: hlt    
[Stub Code]
  0x000000010f850760: nop                       ;   {no_reloc}
  0x000000010f850761: nop
  0x000000010f850762: nop
  0x000000010f850763: nop
  0x000000010f850764: nop
  0x000000010f850765: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f85076f: jmpq   0x000000010f85076f  ;   {runtime_call}
[Exception Handler]
  0x000000010f850774: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f850779: mov    %rsp,-0x28(%rsp)
  0x000000010f85077e: sub    $0x80,%rsp
  0x000000010f850785: mov    %rax,0x78(%rsp)
  0x000000010f85078a: mov    %rcx,0x70(%rsp)
  0x000000010f85078f: mov    %rdx,0x68(%rsp)
  0x000000010f850794: mov    %rbx,0x60(%rsp)
  0x000000010f850799: mov    %rbp,0x50(%rsp)
  0x000000010f85079e: mov    %rsi,0x48(%rsp)
  0x000000010f8507a3: mov    %rdi,0x40(%rsp)
  0x000000010f8507a8: mov    %r8,0x38(%rsp)
  0x000000010f8507ad: mov    %r9,0x30(%rsp)
  0x000000010f8507b2: mov    %r10,0x28(%rsp)
  0x000000010f8507b7: mov    %r11,0x20(%rsp)
  0x000000010f8507bc: mov    %r12,0x18(%rsp)
  0x000000010f8507c1: mov    %r13,0x10(%rsp)
  0x000000010f8507c6: mov    %r14,0x8(%rsp)
  0x000000010f8507cb: mov    %r15,(%rsp)
  0x000000010f8507cf: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f8507d9: movabs $0x10f850779,%rsi  ;   {internal_word}
  0x000000010f8507e3: mov    %rsp,%rdx
  0x000000010f8507e6: and    $0xfffffffffffffff0,%rsp
  0x000000010f8507ea: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f8507ef: hlt    
[Deopt Handler Code]
  0x000000010f8507f0: movabs $0x10f8507f0,%r10  ;   {section_word}
  0x000000010f8507fa: push   %r10
  0x000000010f8507fc: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f850801: hlt    
  0x000000010f850802: hlt    
  0x000000010f850803: hlt    
  0x000000010f850804: hlt    
  0x000000010f850805: hlt    
  0x000000010f850806: hlt    
  0x000000010f850807: hlt    
Decoding compiled method 0x000000010f850990:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010eaf20a8} 'getAuthority' '()Ljava/lang/String;' in 'java/net/URL'
  #           [sp+0x40]  (sp of caller)
  0x000000010f850ae0: mov    0x8(%rsi),%r10d
  0x000000010f850ae4: shl    $0x3,%r10
  0x000000010f850ae8: cmp    %rax,%r10
  0x000000010f850aeb: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f850af1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f850afc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f850b00: mov    %eax,-0x14000(%rsp)
  0x000000010f850b07: push   %rbp
  0x000000010f850b08: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.net.URL::getAuthority@0 (line 768)

  0x000000010f850b0c: mov    0x24(%rsi),%eax
  0x000000010f850b0f: shl    $0x3,%rax          ;*getfield authority
                                                ; - java.net.URL::getAuthority@1 (line 768)

  0x000000010f850b13: add    $0x30,%rsp
  0x000000010f850b17: pop    %rbp
  0x000000010f850b18: test   %eax,-0x8db5a1e(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f850b1e: retq   
  0x000000010f850b1f: nop
  0x000000010f850b20: nop
  0x000000010f850b21: mov    0x2a8(%r15),%rax
  0x000000010f850b28: movabs $0x0,%r10
  0x000000010f850b32: mov    %r10,0x2a8(%r15)
  0x000000010f850b39: movabs $0x0,%r10
  0x000000010f850b43: mov    %r10,0x2b0(%r15)
  0x000000010f850b4a: add    $0x30,%rsp
  0x000000010f850b4e: pop    %rbp
  0x000000010f850b4f: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f850b54: hlt    
  0x000000010f850b55: hlt    
  0x000000010f850b56: hlt    
  0x000000010f850b57: hlt    
  0x000000010f850b58: hlt    
  0x000000010f850b59: hlt    
  0x000000010f850b5a: hlt    
  0x000000010f850b5b: hlt    
  0x000000010f850b5c: hlt    
  0x000000010f850b5d: hlt    
  0x000000010f850b5e: hlt    
  0x000000010f850b5f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f850b60: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f850b65: mov    %rsp,-0x28(%rsp)
  0x000000010f850b6a: sub    $0x80,%rsp
  0x000000010f850b71: mov    %rax,0x78(%rsp)
  0x000000010f850b76: mov    %rcx,0x70(%rsp)
  0x000000010f850b7b: mov    %rdx,0x68(%rsp)
  0x000000010f850b80: mov    %rbx,0x60(%rsp)
  0x000000010f850b85: mov    %rbp,0x50(%rsp)
  0x000000010f850b8a: mov    %rsi,0x48(%rsp)
  0x000000010f850b8f: mov    %rdi,0x40(%rsp)
  0x000000010f850b94: mov    %r8,0x38(%rsp)
  0x000000010f850b99: mov    %r9,0x30(%rsp)
  0x000000010f850b9e: mov    %r10,0x28(%rsp)
  0x000000010f850ba3: mov    %r11,0x20(%rsp)
  0x000000010f850ba8: mov    %r12,0x18(%rsp)
  0x000000010f850bad: mov    %r13,0x10(%rsp)
  0x000000010f850bb2: mov    %r14,0x8(%rsp)
  0x000000010f850bb7: mov    %r15,(%rsp)
  0x000000010f850bbb: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f850bc5: movabs $0x10f850b65,%rsi  ;   {internal_word}
  0x000000010f850bcf: mov    %rsp,%rdx
  0x000000010f850bd2: and    $0xfffffffffffffff0,%rsp
  0x000000010f850bd6: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f850bdb: hlt    
[Deopt Handler Code]
  0x000000010f850bdc: movabs $0x10f850bdc,%r10  ;   {section_word}
  0x000000010f850be6: push   %r10
  0x000000010f850be8: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f850bed: hlt    
  0x000000010f850bee: hlt    
  0x000000010f850bef: hlt    
Decoding compiled method 0x000000010f850c90:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010eaeaaa0} 'getPath' '()Ljava/lang/String;' in 'java/io/File'
  #           [sp+0x40]  (sp of caller)
  0x000000010f850de0: mov    0x8(%rsi),%r10d
  0x000000010f850de4: shl    $0x3,%r10
  0x000000010f850de8: cmp    %rax,%r10
  0x000000010f850deb: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f850df1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f850dfc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f850e00: mov    %eax,-0x14000(%rsp)
  0x000000010f850e07: push   %rbp
  0x000000010f850e08: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.io.File::getPath@0 (line 512)

  0x000000010f850e0c: mov    0x10(%rsi),%eax
  0x000000010f850e0f: shl    $0x3,%rax          ;*getfield path
                                                ; - java.io.File::getPath@1 (line 512)

  0x000000010f850e13: add    $0x30,%rsp
  0x000000010f850e17: pop    %rbp
  0x000000010f850e18: test   %eax,-0x8db5d1e(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f850e1e: retq   
  0x000000010f850e1f: nop
  0x000000010f850e20: nop
  0x000000010f850e21: mov    0x2a8(%r15),%rax
  0x000000010f850e28: movabs $0x0,%r10
  0x000000010f850e32: mov    %r10,0x2a8(%r15)
  0x000000010f850e39: movabs $0x0,%r10
  0x000000010f850e43: mov    %r10,0x2b0(%r15)
  0x000000010f850e4a: add    $0x30,%rsp
  0x000000010f850e4e: pop    %rbp
  0x000000010f850e4f: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f850e54: hlt    
  0x000000010f850e55: hlt    
  0x000000010f850e56: hlt    
  0x000000010f850e57: hlt    
  0x000000010f850e58: hlt    
  0x000000010f850e59: hlt    
  0x000000010f850e5a: hlt    
  0x000000010f850e5b: hlt    
  0x000000010f850e5c: hlt    
  0x000000010f850e5d: hlt    
  0x000000010f850e5e: hlt    
  0x000000010f850e5f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f850e60: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f850e65: mov    %rsp,-0x28(%rsp)
  0x000000010f850e6a: sub    $0x80,%rsp
  0x000000010f850e71: mov    %rax,0x78(%rsp)
  0x000000010f850e76: mov    %rcx,0x70(%rsp)
  0x000000010f850e7b: mov    %rdx,0x68(%rsp)
  0x000000010f850e80: mov    %rbx,0x60(%rsp)
  0x000000010f850e85: mov    %rbp,0x50(%rsp)
  0x000000010f850e8a: mov    %rsi,0x48(%rsp)
  0x000000010f850e8f: mov    %rdi,0x40(%rsp)
  0x000000010f850e94: mov    %r8,0x38(%rsp)
  0x000000010f850e99: mov    %r9,0x30(%rsp)
  0x000000010f850e9e: mov    %r10,0x28(%rsp)
  0x000000010f850ea3: mov    %r11,0x20(%rsp)
  0x000000010f850ea8: mov    %r12,0x18(%rsp)
  0x000000010f850ead: mov    %r13,0x10(%rsp)
  0x000000010f850eb2: mov    %r14,0x8(%rsp)
  0x000000010f850eb7: mov    %r15,(%rsp)
  0x000000010f850ebb: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f850ec5: movabs $0x10f850e65,%rsi  ;   {internal_word}
  0x000000010f850ecf: mov    %rsp,%rdx
  0x000000010f850ed2: and    $0xfffffffffffffff0,%rsp
  0x000000010f850ed6: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f850edb: hlt    
[Deopt Handler Code]
  0x000000010f850edc: movabs $0x10f850edc,%r10  ;   {section_word}
  0x000000010f850ee6: push   %r10
  0x000000010f850ee8: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f850eed: hlt    
  0x000000010f850eee: hlt    
  0x000000010f850eef: hlt    
Decoding compiled method 0x000000010f850f90:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ea8dc78} 'get' '()Ljava/lang/Object;' in 'java/lang/ref/SoftReference'
  #           [sp+0x40]  (sp of caller)
  0x000000010f851100: mov    0x8(%rsi),%r10d
  0x000000010f851104: shl    $0x3,%r10
  0x000000010f851108: cmp    %rax,%r10
  0x000000010f85110b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f851111: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f85111c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f851120: mov    %eax,-0x14000(%rsp)
  0x000000010f851127: push   %rbp
  0x000000010f851128: sub    $0x30,%rsp
  0x000000010f85112c: movabs $0x10ec8a2b0,%rax  ;   {metadata(method data for {method} {0x000000010ea8dc78} 'get' '()Ljava/lang/Object;' in 'java/lang/ref/SoftReference')}
  0x000000010f851136: mov    0xdc(%rax),%edi
  0x000000010f85113c: add    $0x8,%edi
  0x000000010f85113f: mov    %edi,0xdc(%rax)
  0x000000010f851145: movabs $0x10ea8dc78,%rax  ;   {metadata({method} {0x000000010ea8dc78} 'get' '()Ljava/lang/Object;' in 'java/lang/ref/SoftReference')}
  0x000000010f85114f: and    $0x1ff8,%edi
  0x000000010f851155: cmp    $0x0,%edi
  0x000000010f851158: je     0x000000010f85120f  ;*aload_0
                                                ; - java.lang.ref.SoftReference::get@0 (line 112)

  0x000000010f85115e: mov    %rsi,%rax
  0x000000010f851161: movabs $0x10ec8a2b0,%rdi  ;   {metadata(method data for {method} {0x000000010ea8dc78} 'get' '()Ljava/lang/Object;' in 'java/lang/ref/SoftReference')}
  0x000000010f85116b: addq   $0x1,0x108(%rdi)
  0x000000010f851173: mov    0xc(%rsi),%eax
  0x000000010f851176: shl    $0x3,%rax          ;*invokespecial get
                                                ; - java.lang.ref.SoftReference::get@1 (line 112)

  0x000000010f85117a: cmp    $0x0,%rax
  0x000000010f85117e: movabs $0x10ec8a2b0,%rdi  ;   {metadata(method data for {method} {0x000000010ea8dc78} 'get' '()Ljava/lang/Object;' in 'java/lang/ref/SoftReference')}
  0x000000010f851188: movabs $0x118,%rbx
  0x000000010f851192: je     0x000000010f8511a2
  0x000000010f851198: movabs $0x128,%rbx
  0x000000010f8511a2: mov    (%rdi,%rbx,1),%rdx
  0x000000010f8511a6: lea    0x1(%rdx),%rdx
  0x000000010f8511aa: mov    %rdx,(%rdi,%rbx,1)
  0x000000010f8511ae: je     0x000000010f851203  ;*ifnull
                                                ; - java.lang.ref.SoftReference::get@6 (line 113)

  0x000000010f8511b4: mov    0x20(%rsi),%rdi    ;*getfield timestamp
                                                ; - java.lang.ref.SoftReference::get@10 (line 113)

  0x000000010f8511b8: movabs $0x7955818a0,%rbx  ;   {oop(a 'java/lang/Class' = 'java/lang/ref/SoftReference')}
  0x000000010f8511c2: mov    0x68(%rbx),%rdx    ;*getstatic clock
                                                ; - java.lang.ref.SoftReference::get@13 (line 113)

  0x000000010f8511c6: cmp    %rdx,%rdi
  0x000000010f8511c9: movabs $0x10ec8a2b0,%rdi  ;   {metadata(method data for {method} {0x000000010ea8dc78} 'get' '()Ljava/lang/Object;' in 'java/lang/ref/SoftReference')}
  0x000000010f8511d3: movabs $0x148,%rbx
  0x000000010f8511dd: jne    0x000000010f8511ed
  0x000000010f8511e3: movabs $0x138,%rbx
  0x000000010f8511ed: mov    (%rdi,%rbx,1),%rcx
  0x000000010f8511f1: lea    0x1(%rcx),%rcx
  0x000000010f8511f5: mov    %rcx,(%rdi,%rbx,1)
  0x000000010f8511f9: je     0x000000010f851203  ;*lcmp
                                                ; - java.lang.ref.SoftReference::get@16 (line 113)

  0x000000010f8511ff: mov    %rdx,0x20(%rsi)    ;*putfield timestamp
                                                ; - java.lang.ref.SoftReference::get@24 (line 114)

  0x000000010f851203: add    $0x30,%rsp
  0x000000010f851207: pop    %rbp
  0x000000010f851208: test   %eax,-0x8db610e(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f85120e: retq   
  0x000000010f85120f: mov    %rax,0x8(%rsp)
  0x000000010f851214: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f85121c: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=289}
                                                ;*synchronization entry
                                                ; - java.lang.ref.SoftReference::get@-1 (line 112)
                                                ;   {runtime_call}
  0x000000010f851221: jmpq   0x000000010f85115e
  0x000000010f851226: nop
  0x000000010f851227: nop
  0x000000010f851228: mov    0x2a8(%r15),%rax
  0x000000010f85122f: movabs $0x0,%r10
  0x000000010f851239: mov    %r10,0x2a8(%r15)
  0x000000010f851240: movabs $0x0,%r10
  0x000000010f85124a: mov    %r10,0x2b0(%r15)
  0x000000010f851251: add    $0x30,%rsp
  0x000000010f851255: pop    %rbp
  0x000000010f851256: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f85125b: hlt    
  0x000000010f85125c: hlt    
  0x000000010f85125d: hlt    
  0x000000010f85125e: hlt    
  0x000000010f85125f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f851260: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f851265: mov    %rsp,-0x28(%rsp)
  0x000000010f85126a: sub    $0x80,%rsp
  0x000000010f851271: mov    %rax,0x78(%rsp)
  0x000000010f851276: mov    %rcx,0x70(%rsp)
  0x000000010f85127b: mov    %rdx,0x68(%rsp)
  0x000000010f851280: mov    %rbx,0x60(%rsp)
  0x000000010f851285: mov    %rbp,0x50(%rsp)
  0x000000010f85128a: mov    %rsi,0x48(%rsp)
  0x000000010f85128f: mov    %rdi,0x40(%rsp)
  0x000000010f851294: mov    %r8,0x38(%rsp)
  0x000000010f851299: mov    %r9,0x30(%rsp)
  0x000000010f85129e: mov    %r10,0x28(%rsp)
  0x000000010f8512a3: mov    %r11,0x20(%rsp)
  0x000000010f8512a8: mov    %r12,0x18(%rsp)
  0x000000010f8512ad: mov    %r13,0x10(%rsp)
  0x000000010f8512b2: mov    %r14,0x8(%rsp)
  0x000000010f8512b7: mov    %r15,(%rsp)
  0x000000010f8512bb: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f8512c5: movabs $0x10f851265,%rsi  ;   {internal_word}
  0x000000010f8512cf: mov    %rsp,%rdx
  0x000000010f8512d2: and    $0xfffffffffffffff0,%rsp
  0x000000010f8512d6: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f8512db: hlt    
[Deopt Handler Code]
  0x000000010f8512dc: movabs $0x10f8512dc,%r10  ;   {section_word}
  0x000000010f8512e6: push   %r10
  0x000000010f8512e8: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f8512ed: hlt    
  0x000000010f8512ee: hlt    
  0x000000010f8512ef: hlt    
Decoding compiled method 0x000000010f851410:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ebccf50} 'prefixLength' '(Ljava/lang/String;)I' in 'java/io/UnixFileSystem'
  # this:     rsi:rsi   = 'java/io/UnixFileSystem'
  # parm0:    rdx:rdx   = 'java/lang/String'
  #           [sp+0x60]  (sp of caller)
  0x000000010f8515a0: mov    0x8(%rsi),%r10d
  0x000000010f8515a4: shl    $0x3,%r10
  0x000000010f8515a8: cmp    %rax,%r10
  0x000000010f8515ab: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f8515b1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f8515bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f8515c0: mov    %eax,-0x14000(%rsp)
  0x000000010f8515c7: push   %rbp
  0x000000010f8515c8: sub    $0x50,%rsp
  0x000000010f8515cc: movabs $0x10ec8aec8,%rax  ;   {metadata(method data for {method} {0x000000010ebccf50} 'prefixLength' '(Ljava/lang/String;)I' in 'java/io/UnixFileSystem')}
  0x000000010f8515d6: mov    0xdc(%rax),%edi
  0x000000010f8515dc: add    $0x8,%edi
  0x000000010f8515df: mov    %edi,0xdc(%rax)
  0x000000010f8515e5: movabs $0x10ebccf50,%rax  ;   {metadata({method} {0x000000010ebccf50} 'prefixLength' '(Ljava/lang/String;)I' in 'java/io/UnixFileSystem')}
  0x000000010f8515ef: and    $0x1ff8,%edi
  0x000000010f8515f5: cmp    $0x0,%edi
  0x000000010f8515f8: je     0x000000010f8518ee  ;*aload_1
                                                ; - java.io.UnixFileSystem::prefixLength@0 (line 97)

  0x000000010f8515fe: cmp    (%rdx),%rax        ;*invokevirtual length
                                                ; - java.io.UnixFileSystem::prefixLength@1 (line 97)
                                                ; implicit exception: dispatches to 0x000000010f851905
  0x000000010f851601: mov    %rdx,%rax
  0x000000010f851604: movabs $0x10ec8aec8,%rsi  ;   {metadata(method data for {method} {0x000000010ebccf50} 'prefixLength' '(Ljava/lang/String;)I' in 'java/io/UnixFileSystem')}
  0x000000010f85160e: mov    0x8(%rax),%eax
  0x000000010f851611: shl    $0x3,%rax
  0x000000010f851615: cmp    0x110(%rsi),%rax
  0x000000010f85161c: jne    0x000000010f85162b
  0x000000010f85161e: addq   $0x1,0x118(%rsi)
  0x000000010f851626: jmpq   0x000000010f851691
  0x000000010f85162b: cmp    0x120(%rsi),%rax
  0x000000010f851632: jne    0x000000010f851641
  0x000000010f851634: addq   $0x1,0x128(%rsi)
  0x000000010f85163c: jmpq   0x000000010f851691
  0x000000010f851641: cmpq   $0x0,0x110(%rsi)
  0x000000010f85164c: jne    0x000000010f851665
  0x000000010f85164e: mov    %rax,0x110(%rsi)
  0x000000010f851655: movq   $0x1,0x118(%rsi)
  0x000000010f851660: jmpq   0x000000010f851691
  0x000000010f851665: cmpq   $0x0,0x120(%rsi)
  0x000000010f851670: jne    0x000000010f851689
  0x000000010f851672: mov    %rax,0x120(%rsi)
  0x000000010f851679: movq   $0x1,0x128(%rsi)
  0x000000010f851684: jmpq   0x000000010f851691
  0x000000010f851689: addq   $0x1,0x108(%rsi)
  0x000000010f851691: movabs $0x10ec39558,%rax  ;   {metadata(method data for {method} {0x000000010ea68c60} 'length' '()I' in 'java/lang/String')}
  0x000000010f85169b: mov    0xdc(%rax),%esi
  0x000000010f8516a1: add    $0x8,%esi
  0x000000010f8516a4: mov    %esi,0xdc(%rax)
  0x000000010f8516aa: movabs $0x10ea68c60,%rax  ;   {metadata({method} {0x000000010ea68c60} 'length' '()I' in 'java/lang/String')}
  0x000000010f8516b4: and    $0x7ffff8,%esi
  0x000000010f8516ba: cmp    $0x0,%esi
  0x000000010f8516bd: je     0x000000010f85190a
  0x000000010f8516c3: mov    0xc(%rdx),%eax
  0x000000010f8516c6: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - java.io.UnixFileSystem::prefixLength@1 (line 97)

  0x000000010f8516ca: mov    0xc(%rax),%esi     ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.io.UnixFileSystem::prefixLength@1 (line 97)
                                                ; implicit exception: dispatches to 0x000000010f851921
  0x000000010f8516cd: cmp    $0x0,%esi
  0x000000010f8516d0: movabs $0x10ec8aec8,%rdi  ;   {metadata(method data for {method} {0x000000010ebccf50} 'prefixLength' '(Ljava/lang/String;)I' in 'java/io/UnixFileSystem')}
  0x000000010f8516da: movabs $0x138,%rbx
  0x000000010f8516e4: jne    0x000000010f8516f4
  0x000000010f8516ea: movabs $0x148,%rbx
  0x000000010f8516f4: mov    (%rdi,%rbx,1),%rcx
  0x000000010f8516f8: lea    0x1(%rcx),%rcx
  0x000000010f8516fc: mov    %rcx,(%rdi,%rbx,1)
  0x000000010f851700: je     0x000000010f851893  ;*ifne
                                                ; - java.io.UnixFileSystem::prefixLength@4 (line 97)

  0x000000010f851706: mov    %rdx,%rdi
  0x000000010f851709: movabs $0x10ec8aec8,%rbx  ;   {metadata(method data for {method} {0x000000010ebccf50} 'prefixLength' '(Ljava/lang/String;)I' in 'java/io/UnixFileSystem')}
  0x000000010f851713: mov    0x8(%rdi),%edi
  0x000000010f851716: shl    $0x3,%rdi
  0x000000010f85171a: cmp    0x160(%rbx),%rdi
  0x000000010f851721: jne    0x000000010f851730
  0x000000010f851723: addq   $0x1,0x168(%rbx)
  0x000000010f85172b: jmpq   0x000000010f851796
  0x000000010f851730: cmp    0x170(%rbx),%rdi
  0x000000010f851737: jne    0x000000010f851746
  0x000000010f851739: addq   $0x1,0x178(%rbx)
  0x000000010f851741: jmpq   0x000000010f851796
  0x000000010f851746: cmpq   $0x0,0x160(%rbx)
  0x000000010f851751: jne    0x000000010f85176a
  0x000000010f851753: mov    %rdi,0x160(%rbx)
  0x000000010f85175a: movq   $0x1,0x168(%rbx)
  0x000000010f851765: jmpq   0x000000010f851796
  0x000000010f85176a: cmpq   $0x0,0x170(%rbx)
  0x000000010f851775: jne    0x000000010f85178e
  0x000000010f851777: mov    %rdi,0x170(%rbx)
  0x000000010f85177e: movq   $0x1,0x178(%rbx)
  0x000000010f851789: jmpq   0x000000010f851796
  0x000000010f85178e: addq   $0x1,0x158(%rbx)
  0x000000010f851796: movabs $0x10ebeb488,%rdi  ;   {metadata(method data for {method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f8517a0: mov    0xdc(%rdi),%ebx
  0x000000010f8517a6: add    $0x8,%ebx
  0x000000010f8517a9: mov    %ebx,0xdc(%rdi)
  0x000000010f8517af: movabs $0x10ea68db0,%rdi  ;   {metadata({method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f8517b9: and    $0x7ffff8,%ebx
  0x000000010f8517bf: cmp    $0x0,%ebx
  0x000000010f8517c2: je     0x000000010f851926
  0x000000010f8517c8: movabs $0x10ebeb488,%rdx  ;   {metadata(method data for {method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f8517d2: incl   0x118(%rdx)        ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.UnixFileSystem::prefixLength@11 (line 98)

  0x000000010f8517d8: cmp    $0x0,%esi
  0x000000010f8517db: movabs $0x10ebeb488,%rdx  ;   {metadata(method data for {method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f8517e5: movabs $0x128,%rsi
  0x000000010f8517ef: jg     0x000000010f8517ff
  0x000000010f8517f5: movabs $0x138,%rsi
  0x000000010f8517ff: mov    (%rdx,%rsi,1),%rdi
  0x000000010f851803: lea    0x1(%rdi),%rdi
  0x000000010f851807: mov    %rdi,(%rdx,%rsi,1)
  0x000000010f85180b: jle    0x000000010f8518a4  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.UnixFileSystem::prefixLength@11 (line 98)

  0x000000010f851811: cmpl   $0x0,0xc(%rax)
  0x000000010f851818: jbe    0x000000010f85193d
  0x000000010f85181e: movzwl 0x10(%rax),%eax    ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.UnixFileSystem::prefixLength@11 (line 98)

  0x000000010f851822: and    $0xffff,%eax
  0x000000010f851828: cmp    $0x2f,%eax
  0x000000010f85182b: movabs $0x10ec8aec8,%rax  ;   {metadata(method data for {method} {0x000000010ebccf50} 'prefixLength' '(Ljava/lang/String;)I' in 'java/io/UnixFileSystem')}
  0x000000010f851835: movabs $0x188,%rdx
  0x000000010f85183f: jne    0x000000010f85184f
  0x000000010f851845: movabs $0x198,%rdx
  0x000000010f85184f: mov    (%rax,%rdx,1),%rsi
  0x000000010f851853: lea    0x1(%rsi),%rsi
  0x000000010f851857: mov    %rsi,(%rax,%rdx,1)
  0x000000010f85185b: jne    0x000000010f851882  ;*if_icmpne
                                                ; - java.io.UnixFileSystem::prefixLength@16 (line 98)

  0x000000010f851861: movabs $0x10ec8aec8,%rax  ;   {metadata(method data for {method} {0x000000010ebccf50} 'prefixLength' '(Ljava/lang/String;)I' in 'java/io/UnixFileSystem')}
  0x000000010f85186b: incl   0x1a8(%rax)
  0x000000010f851871: mov    $0x1,%eax          ;*goto
                                                ; - java.io.UnixFileSystem::prefixLength@20 (line 98)

  0x000000010f851876: add    $0x50,%rsp
  0x000000010f85187a: pop    %rbp
  0x000000010f85187b: test   %eax,-0x8db6781(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f851881: retq   
  0x000000010f851882: mov    $0x0,%eax
  0x000000010f851887: add    $0x50,%rsp
  0x000000010f85188b: pop    %rbp
  0x000000010f85188c: test   %eax,-0x8db6792(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f851892: retq                      ;*ireturn
                                                ; - java.io.UnixFileSystem::prefixLength@24 (line 98)

  0x000000010f851893: mov    $0x0,%eax
  0x000000010f851898: add    $0x50,%rsp
  0x000000010f85189c: pop    %rbp
  0x000000010f85189d: test   %eax,-0x8db67a3(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f8518a3: retq                      ;*ireturn
                                                ; - java.io.UnixFileSystem::prefixLength@8 (line 97)

  0x000000010f8518a4: nopl   0x0(%rax)
  0x000000010f8518a8: jmpq   0x000000010f851959  ;   {no_reloc}
  0x000000010f8518ad: add    %al,(%rax)
  0x000000010f8518af: add    %al,(%rax)
  0x000000010f8518b1: add    %ch,%cl
  0x000000010f8518b3: lods   %ds:(%rsi),%al
  0x000000010f8518b4: add    %al,(%rax)
  0x000000010f8518b6: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.io.UnixFileSystem::prefixLength@11 (line 98)

  0x000000010f8518b9: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x000000010ea68db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010f8518bc: mov    %dh,0x10e(%rsi,%rdi,4)
  0x000000010f8518c3: add    %cl,-0x7d(%rax)
  0x000000010f8518c6: xchg   %cl,0x1(%rax)
  0x000000010f8518c9: add    %al,(%rax)
  0x000000010f8518cb: add    %edi,0x0(%rdx)
  0x000000010f8518d1: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - java.io.UnixFileSystem::prefixLength@11 (line 98)

  0x000000010f8518d4: mov    %rax,0x38(%rsp)
  0x000000010f8518d9: nop
  0x000000010f8518da: nop
  0x000000010f8518db: nop
  0x000000010f8518dc: nop
  0x000000010f8518dd: nop
  0x000000010f8518de: nop
  0x000000010f8518df: callq  0x000000010f7170a0  ; OopMap{[56]=Oop off=836}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - java.io.UnixFileSystem::prefixLength@11 (line 98)
                                                ;   {optimized virtual_call}
  0x000000010f8518e4: mov    0x38(%rsp),%rax
  0x000000010f8518e9: jmpq   0x000000010f85199b
  0x000000010f8518ee: mov    %rax,0x8(%rsp)
  0x000000010f8518f3: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f8518fb: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop rdx=Oop off=864}
                                                ;*synchronization entry
                                                ; - java.io.UnixFileSystem::prefixLength@-1 (line 97)
                                                ;   {runtime_call}
  0x000000010f851900: jmpq   0x000000010f8515fe
  0x000000010f851905: callq  0x000000010f7cd0c0  ; OopMap{rdx=Oop off=874}
                                                ;*invokevirtual length
                                                ; - java.io.UnixFileSystem::prefixLength@1 (line 97)
                                                ;   {runtime_call}
  0x000000010f85190a: mov    %rax,0x8(%rsp)
  0x000000010f85190f: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f851917: callq  0x000000010f7d1a20  ; OopMap{rdx=Oop off=892}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ; - java.io.UnixFileSystem::prefixLength@1 (line 97)
                                                ;   {runtime_call}
  0x000000010f85191c: jmpq   0x000000010f8516c3
  0x000000010f851921: callq  0x000000010f7cd0c0  ; OopMap{rdx=Oop rax=Oop off=902}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.io.UnixFileSystem::prefixLength@1 (line 97)
                                                ;   {runtime_call}
  0x000000010f851926: mov    %rdi,0x8(%rsp)
  0x000000010f85192b: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f851933: callq  0x000000010f7d1a20  ; OopMap{rdx=Oop rax=Oop off=920}
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - java.io.UnixFileSystem::prefixLength@11 (line 98)
                                                ;   {runtime_call}
  0x000000010f851938: jmpq   0x000000010f8517c8
  0x000000010f85193d: movq   $0x0,(%rsp)
  0x000000010f851945: callq  0x000000010f7cca00  ; OopMap{rax=Oop off=938}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.UnixFileSystem::prefixLength@11 (line 98)
                                                ;   {runtime_call}
  0x000000010f85194a: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010f851954: mov    $0xa050f00,%eax
  0x000000010f851959: callq  0x000000010f7d08e0  ; OopMap{off=958}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.io.UnixFileSystem::prefixLength@11 (line 98)
                                                ;   {runtime_call}
  0x000000010f85195e: jmpq   0x000000010f8518a8
  0x000000010f851963: mov    %rdx,%rdx
  0x000000010f851966: callq  0x000000010f7cd560  ; OopMap{off=971}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.io.UnixFileSystem::prefixLength@11 (line 98)
                                                ;   {runtime_call}
  0x000000010f85196b: jmpq   0x000000010f8518b7
  0x000000010f851970: nop
  0x000000010f851971: nop
  0x000000010f851972: mov    0x2a8(%r15),%rax
  0x000000010f851979: movabs $0x0,%r10
  0x000000010f851983: mov    %r10,0x2a8(%r15)
  0x000000010f85198a: movabs $0x0,%r10
  0x000000010f851994: mov    %r10,0x2b0(%r15)
  0x000000010f85199b: add    $0x50,%rsp
  0x000000010f85199f: pop    %rbp
  0x000000010f8519a0: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f8519a5: hlt    
  0x000000010f8519a6: hlt    
  0x000000010f8519a7: hlt    
  0x000000010f8519a8: hlt    
  0x000000010f8519a9: hlt    
  0x000000010f8519aa: hlt    
  0x000000010f8519ab: hlt    
  0x000000010f8519ac: hlt    
  0x000000010f8519ad: hlt    
  0x000000010f8519ae: hlt    
  0x000000010f8519af: hlt    
  0x000000010f8519b0: hlt    
  0x000000010f8519b1: hlt    
  0x000000010f8519b2: hlt    
  0x000000010f8519b3: hlt    
  0x000000010f8519b4: hlt    
  0x000000010f8519b5: hlt    
  0x000000010f8519b6: hlt    
  0x000000010f8519b7: hlt    
  0x000000010f8519b8: hlt    
  0x000000010f8519b9: hlt    
  0x000000010f8519ba: hlt    
  0x000000010f8519bb: hlt    
  0x000000010f8519bc: hlt    
  0x000000010f8519bd: hlt    
  0x000000010f8519be: hlt    
  0x000000010f8519bf: hlt    
[Stub Code]
  0x000000010f8519c0: nop                       ;   {no_reloc}
  0x000000010f8519c1: nop
  0x000000010f8519c2: nop
  0x000000010f8519c3: nop
  0x000000010f8519c4: nop
  0x000000010f8519c5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f8519cf: jmpq   0x000000010f8519cf  ;   {runtime_call}
[Exception Handler]
  0x000000010f8519d4: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f8519d9: mov    %rsp,-0x28(%rsp)
  0x000000010f8519de: sub    $0x80,%rsp
  0x000000010f8519e5: mov    %rax,0x78(%rsp)
  0x000000010f8519ea: mov    %rcx,0x70(%rsp)
  0x000000010f8519ef: mov    %rdx,0x68(%rsp)
  0x000000010f8519f4: mov    %rbx,0x60(%rsp)
  0x000000010f8519f9: mov    %rbp,0x50(%rsp)
  0x000000010f8519fe: mov    %rsi,0x48(%rsp)
  0x000000010f851a03: mov    %rdi,0x40(%rsp)
  0x000000010f851a08: mov    %r8,0x38(%rsp)
  0x000000010f851a0d: mov    %r9,0x30(%rsp)
  0x000000010f851a12: mov    %r10,0x28(%rsp)
  0x000000010f851a17: mov    %r11,0x20(%rsp)
  0x000000010f851a1c: mov    %r12,0x18(%rsp)
  0x000000010f851a21: mov    %r13,0x10(%rsp)
  0x000000010f851a26: mov    %r14,0x8(%rsp)
  0x000000010f851a2b: mov    %r15,(%rsp)
  0x000000010f851a2f: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f851a39: movabs $0x10f8519d9,%rsi  ;   {internal_word}
  0x000000010f851a43: mov    %rsp,%rdx
  0x000000010f851a46: and    $0xfffffffffffffff0,%rsp
  0x000000010f851a4a: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f851a4f: hlt    
[Deopt Handler Code]
  0x000000010f851a50: movabs $0x10f851a50,%r10  ;   {section_word}
  0x000000010f851a5a: push   %r10
  0x000000010f851a5c: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f851a61: hlt    
  0x000000010f851a62: hlt    
  0x000000010f851a63: hlt    
  0x000000010f851a64: hlt    
  0x000000010f851a65: hlt    
  0x000000010f851a66: hlt    
  0x000000010f851a67: hlt    
Decoding compiled method 0x000000010f851d10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010eaea130} 'isInvalid' '()Z' in 'java/io/File'
  #           [sp+0x60]  (sp of caller)
  0x000000010f851ea0: mov    0x8(%rsi),%r10d
  0x000000010f851ea4: shl    $0x3,%r10
  0x000000010f851ea8: cmp    %rax,%r10
  0x000000010f851eab: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f851eb1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f851ebc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f851ec0: mov    %eax,-0x14000(%rsp)
  0x000000010f851ec7: push   %rbp
  0x000000010f851ec8: sub    $0x50,%rsp
  0x000000010f851ecc: movabs $0x10ec998d0,%rdx  ;   {metadata(method data for {method} {0x000000010eaea130} 'isInvalid' '()Z' in 'java/io/File')}
  0x000000010f851ed6: mov    0xdc(%rdx),%ecx
  0x000000010f851edc: add    $0x8,%ecx
  0x000000010f851edf: mov    %ecx,0xdc(%rdx)
  0x000000010f851ee5: movabs $0x10eaea130,%rdx  ;   {metadata({method} {0x000000010eaea130} 'isInvalid' '()Z' in 'java/io/File')}
  0x000000010f851eef: and    $0x1ff8,%ecx
  0x000000010f851ef5: cmp    $0x0,%ecx
  0x000000010f851ef8: je     0x000000010f8521b3  ;*aload_0
                                                ; - java.io.File::isInvalid@0 (line 186)

  0x000000010f851efe: mov    0x14(%rsi),%edx
  0x000000010f851f01: shl    $0x3,%rdx          ;*getfield status
                                                ; - java.io.File::isInvalid@1 (line 186)

  0x000000010f851f05: cmp    $0x0,%rdx
  0x000000010f851f09: movabs $0x10ec998d0,%rdx  ;   {metadata(method data for {method} {0x000000010eaea130} 'isInvalid' '()Z' in 'java/io/File')}
  0x000000010f851f13: movabs $0x108,%rcx
  0x000000010f851f1d: jne    0x000000010f851f2d
  0x000000010f851f23: movabs $0x118,%rcx
  0x000000010f851f2d: mov    (%rdx,%rcx,1),%rdi
  0x000000010f851f31: lea    0x1(%rdi),%rdi
  0x000000010f851f35: mov    %rdi,(%rdx,%rcx,1)
  0x000000010f851f39: jne    0x000000010f85213b  ;*ifnonnull
                                                ; - java.io.File::isInvalid@4 (line 186)

  0x000000010f851f3f: mov    0x10(%rsi),%edi
  0x000000010f851f42: shl    $0x3,%rdi          ;*getfield path
                                                ; - java.io.File::isInvalid@9 (line 187)

  0x000000010f851f46: cmp    (%rdi),%rax        ;*invokevirtual indexOf
                                                ; - java.io.File::isInvalid@13 (line 187)
                                                ; implicit exception: dispatches to 0x000000010f8521ca
  0x000000010f851f49: mov    %rdi,%rdx
  0x000000010f851f4c: movabs $0x10ec998d0,%rcx  ;   {metadata(method data for {method} {0x000000010eaea130} 'isInvalid' '()Z' in 'java/io/File')}
  0x000000010f851f56: mov    0x8(%rdx),%edx
  0x000000010f851f59: shl    $0x3,%rdx
  0x000000010f851f5d: cmp    0x130(%rcx),%rdx
  0x000000010f851f64: jne    0x000000010f851f73
  0x000000010f851f66: addq   $0x1,0x138(%rcx)
  0x000000010f851f6e: jmpq   0x000000010f851fd9
  0x000000010f851f73: cmp    0x140(%rcx),%rdx
  0x000000010f851f7a: jne    0x000000010f851f89
  0x000000010f851f7c: addq   $0x1,0x148(%rcx)
  0x000000010f851f84: jmpq   0x000000010f851fd9
  0x000000010f851f89: cmpq   $0x0,0x130(%rcx)
  0x000000010f851f94: jne    0x000000010f851fad
  0x000000010f851f96: mov    %rdx,0x130(%rcx)
  0x000000010f851f9d: movq   $0x1,0x138(%rcx)
  0x000000010f851fa8: jmpq   0x000000010f851fd9
  0x000000010f851fad: cmpq   $0x0,0x140(%rcx)
  0x000000010f851fb8: jne    0x000000010f851fd1
  0x000000010f851fba: mov    %rdx,0x140(%rcx)
  0x000000010f851fc1: movq   $0x1,0x148(%rcx)
  0x000000010f851fcc: jmpq   0x000000010f851fd9
  0x000000010f851fd1: addq   $0x1,0x128(%rcx)
  0x000000010f851fd9: movabs $0x10ec3ac50,%rdx  ;   {metadata(method data for {method} {0x000000010ea6a098} 'indexOf' '(I)I' in 'java/lang/String')}
  0x000000010f851fe3: mov    0xdc(%rdx),%ecx
  0x000000010f851fe9: add    $0x8,%ecx
  0x000000010f851fec: mov    %ecx,0xdc(%rdx)
  0x000000010f851ff2: movabs $0x10ea6a098,%rdx  ;   {metadata({method} {0x000000010ea6a098} 'indexOf' '(I)I' in 'java/lang/String')}
  0x000000010f851ffc: and    $0x7ffff8,%ecx
  0x000000010f852002: cmp    $0x0,%ecx
  0x000000010f852005: je     0x000000010f8521cf
  0x000000010f85200b: mov    %rdi,%rdx
  0x000000010f85200e: movabs $0x10ec3ac50,%rcx  ;   {metadata(method data for {method} {0x000000010ea6a098} 'indexOf' '(I)I' in 'java/lang/String')}
  0x000000010f852018: mov    0x8(%rdx),%edx
  0x000000010f85201b: shl    $0x3,%rdx
  0x000000010f85201f: cmp    0x110(%rcx),%rdx
  0x000000010f852026: jne    0x000000010f852035
  0x000000010f852028: addq   $0x1,0x118(%rcx)
  0x000000010f852030: jmpq   0x000000010f85209b
  0x000000010f852035: cmp    0x120(%rcx),%rdx
  0x000000010f85203c: jne    0x000000010f85204b
  0x000000010f85203e: addq   $0x1,0x128(%rcx)
  0x000000010f852046: jmpq   0x000000010f85209b
  0x000000010f85204b: cmpq   $0x0,0x110(%rcx)
  0x000000010f852056: jne    0x000000010f85206f
  0x000000010f852058: mov    %rdx,0x110(%rcx)
  0x000000010f85205f: movq   $0x1,0x118(%rcx)
  0x000000010f85206a: jmpq   0x000000010f85209b
  0x000000010f85206f: cmpq   $0x0,0x120(%rcx)
  0x000000010f85207a: jne    0x000000010f852093
  0x000000010f85207c: mov    %rdx,0x120(%rcx)
  0x000000010f852083: movq   $0x1,0x128(%rcx)
  0x000000010f85208e: jmpq   0x000000010f85209b
  0x000000010f852093: addq   $0x1,0x108(%rcx)
  0x000000010f85209b: mov    $0x0,%edx
  0x000000010f8520a0: mov    $0x0,%ecx
  0x000000010f8520a5: mov    %rsi,0x40(%rsp)
  0x000000010f8520aa: mov    %rdi,%rsi          ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3 (line 1503)
                                                ; - java.io.File::isInvalid@13 (line 187)

  0x000000010f8520ad: nop
  0x000000010f8520ae: nop
  0x000000010f8520af: callq  0x000000010f7170a0  ; OopMap{[64]=Oop off=532}
                                                ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3 (line 1503)
                                                ; - java.io.File::isInvalid@13 (line 187)
                                                ;   {optimized virtual_call}
  0x000000010f8520b4: cmp    $0x0,%eax
  0x000000010f8520b7: movabs $0x10ec998d0,%rax  ;   {metadata(method data for {method} {0x000000010eaea130} 'isInvalid' '()Z' in 'java/io/File')}
  0x000000010f8520c1: movabs $0x158,%rsi
  0x000000010f8520cb: jge    0x000000010f8520db
  0x000000010f8520d1: movabs $0x168,%rsi
  0x000000010f8520db: mov    (%rax,%rsi,1),%rdi
  0x000000010f8520df: lea    0x1(%rdi),%rdi
  0x000000010f8520e3: mov    %rdi,(%rax,%rsi,1)
  0x000000010f8520e7: jge    0x000000010f85210c  ;*ifge
                                                ; - java.io.File::isInvalid@16 (line 187)

  0x000000010f8520ed: movabs $0x10ec998d0,%rax  ;   {metadata(method data for {method} {0x000000010eaea130} 'isInvalid' '()Z' in 'java/io/File')}
  0x000000010f8520f7: incl   0x178(%rax)
  0x000000010f8520fd: movabs $0x7955b5f80,%rax  ;   {oop(a 'java/io/File$PathStatus')}
  0x000000010f852107: jmpq   0x000000010f852116  ;*goto
                                                ; - java.io.File::isInvalid@22 (line 187)

  0x000000010f85210c: movabs $0x7955b5f30,%rax  ;   {oop(a 'java/io/File$PathStatus')}
  0x000000010f852116: mov    0x40(%rsp),%rsi
  0x000000010f85211b: mov    %rax,%r10
  0x000000010f85211e: shr    $0x3,%r10
  0x000000010f852122: mov    %r10d,0x14(%rsi)
  0x000000010f852126: mov    %rsi,%rax
  0x000000010f852129: shr    $0x9,%rax
  0x000000010f85212d: movabs $0x1065b9000,%rdi
  0x000000010f852137: movb   $0x0,(%rax,%rdi,1)  ;*putfield status
                                                ; - java.io.File::isInvalid@28 (line 187)

  0x000000010f85213b: mov    0x14(%rsi),%eax
  0x000000010f85213e: shl    $0x3,%rax          ;*getfield status
                                                ; - java.io.File::isInvalid@32 (line 190)

  0x000000010f852142: movabs $0x7955b5f30,%r10  ;   {oop(a 'java/io/File$PathStatus')}
  0x000000010f85214c: cmp    %r10,%rax
  0x000000010f85214f: movabs $0x10ec998d0,%rax  ;   {metadata(method data for {method} {0x000000010eaea130} 'isInvalid' '()Z' in 'java/io/File')}
  0x000000010f852159: movabs $0x190,%rsi
  0x000000010f852163: jne    0x000000010f852173
  0x000000010f852169: movabs $0x1a0,%rsi
  0x000000010f852173: mov    (%rax,%rsi,1),%rdi
  0x000000010f852177: lea    0x1(%rdi),%rdi
  0x000000010f85217b: mov    %rdi,(%rax,%rsi,1)
  0x000000010f85217f: jne    0x000000010f85219f  ;*if_acmpne
                                                ; - java.io.File::isInvalid@38 (line 190)

  0x000000010f852185: movabs $0x10ec998d0,%rax  ;   {metadata(method data for {method} {0x000000010eaea130} 'isInvalid' '()Z' in 'java/io/File')}
  0x000000010f85218f: incl   0x1b0(%rax)
  0x000000010f852195: mov    $0x1,%eax
  0x000000010f85219a: jmpq   0x000000010f8521a4  ;*goto
                                                ; - java.io.File::isInvalid@42 (line 190)

  0x000000010f85219f: mov    $0x0,%eax          ;*ireturn
                                                ; - java.io.File::isInvalid@46 (line 190)

  0x000000010f8521a4: and    $0x1,%eax
  0x000000010f8521a7: add    $0x50,%rsp
  0x000000010f8521ab: pop    %rbp
  0x000000010f8521ac: test   %eax,-0x8db70b2(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f8521b2: retq   
  0x000000010f8521b3: mov    %rdx,0x8(%rsp)
  0x000000010f8521b8: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f8521c0: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=805}
                                                ;*synchronization entry
                                                ; - java.io.File::isInvalid@-1 (line 186)
                                                ;   {runtime_call}
  0x000000010f8521c5: jmpq   0x000000010f851efe
  0x000000010f8521ca: callq  0x000000010f7cd0c0  ; OopMap{rsi=Oop rdi=Oop off=815}
                                                ;*invokevirtual indexOf
                                                ; - java.io.File::isInvalid@13 (line 187)
                                                ;   {runtime_call}
  0x000000010f8521cf: mov    %rdx,0x8(%rsp)
  0x000000010f8521d4: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f8521dc: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop rdi=Oop off=833}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1503)
                                                ; - java.io.File::isInvalid@13 (line 187)
                                                ;   {runtime_call}
  0x000000010f8521e1: jmpq   0x000000010f85200b
  0x000000010f8521e6: nop
  0x000000010f8521e7: nop
  0x000000010f8521e8: mov    0x2a8(%r15),%rax
  0x000000010f8521ef: movabs $0x0,%r10
  0x000000010f8521f9: mov    %r10,0x2a8(%r15)
  0x000000010f852200: movabs $0x0,%r10
  0x000000010f85220a: mov    %r10,0x2b0(%r15)
  0x000000010f852211: add    $0x50,%rsp
  0x000000010f852215: pop    %rbp
  0x000000010f852216: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f85221b: hlt    
  0x000000010f85221c: hlt    
  0x000000010f85221d: hlt    
  0x000000010f85221e: hlt    
  0x000000010f85221f: hlt    
[Stub Code]
  0x000000010f852220: nop                       ;   {no_reloc}
  0x000000010f852221: nop
  0x000000010f852222: nop
  0x000000010f852223: nop
  0x000000010f852224: nop
  0x000000010f852225: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f85222f: jmpq   0x000000010f85222f  ;   {runtime_call}
[Exception Handler]
  0x000000010f852234: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f852239: mov    %rsp,-0x28(%rsp)
  0x000000010f85223e: sub    $0x80,%rsp
  0x000000010f852245: mov    %rax,0x78(%rsp)
  0x000000010f85224a: mov    %rcx,0x70(%rsp)
  0x000000010f85224f: mov    %rdx,0x68(%rsp)
  0x000000010f852254: mov    %rbx,0x60(%rsp)
  0x000000010f852259: mov    %rbp,0x50(%rsp)
  0x000000010f85225e: mov    %rsi,0x48(%rsp)
  0x000000010f852263: mov    %rdi,0x40(%rsp)
  0x000000010f852268: mov    %r8,0x38(%rsp)
  0x000000010f85226d: mov    %r9,0x30(%rsp)
  0x000000010f852272: mov    %r10,0x28(%rsp)
  0x000000010f852277: mov    %r11,0x20(%rsp)
  0x000000010f85227c: mov    %r12,0x18(%rsp)
  0x000000010f852281: mov    %r13,0x10(%rsp)
  0x000000010f852286: mov    %r14,0x8(%rsp)
  0x000000010f85228b: mov    %r15,(%rsp)
  0x000000010f85228f: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f852299: movabs $0x10f852239,%rsi  ;   {internal_word}
  0x000000010f8522a3: mov    %rsp,%rdx
  0x000000010f8522a6: and    $0xfffffffffffffff0,%rsp
  0x000000010f8522aa: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f8522af: hlt    
[Deopt Handler Code]
  0x000000010f8522b0: movabs $0x10f8522b0,%r10  ;   {section_word}
  0x000000010f8522ba: push   %r10
  0x000000010f8522bc: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f8522c1: hlt    
  0x000000010f8522c2: hlt    
  0x000000010f8522c3: hlt    
  0x000000010f8522c4: hlt    
  0x000000010f8522c5: hlt    
  0x000000010f8522c6: hlt    
  0x000000010f8522c7: hlt    
Decoding compiled method 0x000000010f8524d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010eb51558} 'newNode' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' in 'java/util/HashMap'
  # this:     rsi:rsi   = 'java/util/HashMap'
  # parm0:    rdx       = int
  # parm1:    rcx:rcx   = 'java/lang/Object'
  # parm2:    r8:r8     = 'java/lang/Object'
  # parm3:    r9:r9     = 'java/util/HashMap$Node'
  #           [sp+0x70]  (sp of caller)
  0x000000010f852640: mov    0x8(%rsi),%r10d
  0x000000010f852644: shl    $0x3,%r10
  0x000000010f852648: cmp    %rax,%r10
  0x000000010f85264b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f852651: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f85265c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f852660: mov    %eax,-0x14000(%rsp)
  0x000000010f852667: push   %rbp
  0x000000010f852668: sub    $0x60,%rsp
  0x000000010f85266c: mov    %rdx,%rbx
  0x000000010f85266f: mov    %rcx,%r11
  0x000000010f852672: movabs $0x10ee1e2b0,%rdx  ;   {metadata(method data for {method} {0x000000010eb51558} 'newNode' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000010f85267c: mov    0xdc(%rdx),%edi
  0x000000010f852682: add    $0x8,%edi
  0x000000010f852685: mov    %edi,0xdc(%rdx)
  0x000000010f85268b: movabs $0x10eb51558,%rdx  ;   {metadata({method} {0x000000010eb51558} 'newNode' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000010f852695: and    $0x1ff8,%edi
  0x000000010f85269b: cmp    $0x0,%edi
  0x000000010f85269e: je     0x000000010f8527d2
  0x000000010f8526a4: movabs $0x7c001c310,%rdx  ;   {metadata('java/util/HashMap$Node')}
  0x000000010f8526ae: mov    0x60(%r15),%rax
  0x000000010f8526b2: lea    0x20(%rax),%rdi
  0x000000010f8526b6: cmp    0x70(%r15),%rdi
  0x000000010f8526ba: ja     0x000000010f8527e9
  0x000000010f8526c0: mov    %rdi,0x60(%r15)
  0x000000010f8526c4: mov    0xa8(%rdx),%rcx
  0x000000010f8526cb: mov    %rcx,(%rax)
  0x000000010f8526ce: mov    %rdx,%rcx
  0x000000010f8526d1: shr    $0x3,%rcx
  0x000000010f8526d5: mov    %ecx,0x8(%rax)
  0x000000010f8526d8: xor    %rcx,%rcx
  0x000000010f8526db: mov    %ecx,0xc(%rax)
  0x000000010f8526de: xor    %rcx,%rcx
  0x000000010f8526e1: mov    %rcx,0x10(%rax)
  0x000000010f8526e5: mov    %rcx,0x18(%rax)    ;*new  ; - java.util.HashMap::newNode@0 (line 1750)

  0x000000010f8526e9: mov    %rax,%rsi
  0x000000010f8526ec: movabs $0x10ee1e2b0,%rdi  ;   {metadata(method data for {method} {0x000000010eb51558} 'newNode' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000010f8526f6: addq   $0x1,0x108(%rdi)
  0x000000010f8526fe: movabs $0x10ed24058,%rsi  ;   {metadata(method data for {method} {0x000000010eb53bf8} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' in 'java/util/HashMap$Node')}
  0x000000010f852708: mov    0xdc(%rsi),%edi
  0x000000010f85270e: add    $0x8,%edi
  0x000000010f852711: mov    %edi,0xdc(%rsi)
  0x000000010f852717: movabs $0x10eb53bf8,%rsi  ;   {metadata({method} {0x000000010eb53bf8} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' in 'java/util/HashMap$Node')}
  0x000000010f852721: and    $0x7ffff8,%edi
  0x000000010f852727: cmp    $0x0,%edi
  0x000000010f85272a: je     0x000000010f8527f6
  0x000000010f852730: mov    %rax,%rsi
  0x000000010f852733: movabs $0x10ed24058,%rdi  ;   {metadata(method data for {method} {0x000000010eb53bf8} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' in 'java/util/HashMap$Node')}
  0x000000010f85273d: addq   $0x1,0x108(%rdi)
  0x000000010f852745: movabs $0x10ebdca10,%rsi  ;   {metadata(method data for {method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f85274f: mov    0xdc(%rsi),%edi
  0x000000010f852755: add    $0x8,%edi
  0x000000010f852758: mov    %edi,0xdc(%rsi)
  0x000000010f85275e: movabs $0x10ea65480,%rsi  ;   {metadata({method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f852768: and    $0x7ffff8,%edi
  0x000000010f85276e: cmp    $0x0,%edi
  0x000000010f852771: je     0x000000010f85280d
  0x000000010f852777: mov    %ebx,0xc(%rax)     ;*putfield hash
                                                ; - java.util.HashMap$Node::<init>@6 (line 286)
                                                ; - java.util.HashMap::newNode@9 (line 1750)

  0x000000010f85277a: mov    %r11,%r10
  0x000000010f85277d: shr    $0x3,%r10
  0x000000010f852781: mov    %r10d,0x10(%rax)
  0x000000010f852785: mov    %rax,%rsi
  0x000000010f852788: shr    $0x9,%rsi
  0x000000010f85278c: movabs $0x1065b9000,%rdi
  0x000000010f852796: movb   $0x0,(%rsi,%rdi,1)  ;*putfield key
                                                ; - java.util.HashMap$Node::<init>@11 (line 287)
                                                ; - java.util.HashMap::newNode@9 (line 1750)

  0x000000010f85279a: mov    %r8,%r10
  0x000000010f85279d: shr    $0x3,%r10
  0x000000010f8527a1: mov    %r10d,0x14(%rax)
  0x000000010f8527a5: mov    %rax,%rsi
  0x000000010f8527a8: shr    $0x9,%rsi
  0x000000010f8527ac: movb   $0x0,(%rsi,%rdi,1)  ;*putfield value
                                                ; - java.util.HashMap$Node::<init>@16 (line 288)
                                                ; - java.util.HashMap::newNode@9 (line 1750)

  0x000000010f8527b0: mov    %r9,%r10
  0x000000010f8527b3: shr    $0x3,%r10
  0x000000010f8527b7: mov    %r10d,0x18(%rax)
  0x000000010f8527bb: mov    %rax,%rsi
  0x000000010f8527be: shr    $0x9,%rsi
  0x000000010f8527c2: movb   $0x0,(%rsi,%rdi,1)  ;*putfield next
                                                ; - java.util.HashMap$Node::<init>@22 (line 289)
                                                ; - java.util.HashMap::newNode@9 (line 1750)

  0x000000010f8527c6: add    $0x60,%rsp
  0x000000010f8527ca: pop    %rbp
  0x000000010f8527cb: test   %eax,-0x8db76d1(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f8527d1: retq   
  0x000000010f8527d2: mov    %rdx,0x8(%rsp)
  0x000000010f8527d7: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f8527df: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop r11=Oop r8=Oop r9=Oop off=420}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::newNode@-1 (line 1750)
                                                ;   {runtime_call}
  0x000000010f8527e4: jmpq   0x000000010f8526a4
  0x000000010f8527e9: mov    %rdx,%rdx
  0x000000010f8527ec: callq  0x000000010f7cd820  ; OopMap{r11=Oop r8=Oop r9=Oop off=433}
                                                ;*new  ; - java.util.HashMap::newNode@0 (line 1750)
                                                ;   {runtime_call}
  0x000000010f8527f1: jmpq   0x000000010f8526e9
  0x000000010f8527f6: mov    %rsi,0x8(%rsp)
  0x000000010f8527fb: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f852803: callq  0x000000010f7d1a20  ; OopMap{r11=Oop r8=Oop r9=Oop rax=Oop off=456}
                                                ;*synchronization entry
                                                ; - java.util.HashMap$Node::<init>@-1 (line 285)
                                                ; - java.util.HashMap::newNode@9 (line 1750)
                                                ;   {runtime_call}
  0x000000010f852808: jmpq   0x000000010f852730
  0x000000010f85280d: mov    %rsi,0x8(%rsp)
  0x000000010f852812: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f85281a: callq  0x000000010f7d1a20  ; OopMap{r11=Oop r8=Oop r9=Oop rax=Oop off=479}
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 37)
                                                ; - java.util.HashMap$Node::<init>@1 (line 285)
                                                ; - java.util.HashMap::newNode@9 (line 1750)
                                                ;   {runtime_call}
  0x000000010f85281f: jmpq   0x000000010f852777
  0x000000010f852824: nop
  0x000000010f852825: nop
  0x000000010f852826: mov    0x2a8(%r15),%rax
  0x000000010f85282d: movabs $0x0,%r10
  0x000000010f852837: mov    %r10,0x2a8(%r15)
  0x000000010f85283e: movabs $0x0,%r10
  0x000000010f852848: mov    %r10,0x2b0(%r15)
  0x000000010f85284f: add    $0x60,%rsp
  0x000000010f852853: pop    %rbp
  0x000000010f852854: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f852859: hlt    
  0x000000010f85285a: hlt    
  0x000000010f85285b: hlt    
  0x000000010f85285c: hlt    
  0x000000010f85285d: hlt    
  0x000000010f85285e: hlt    
  0x000000010f85285f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f852860: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f852865: mov    %rsp,-0x28(%rsp)
  0x000000010f85286a: sub    $0x80,%rsp
  0x000000010f852871: mov    %rax,0x78(%rsp)
  0x000000010f852876: mov    %rcx,0x70(%rsp)
  0x000000010f85287b: mov    %rdx,0x68(%rsp)
  0x000000010f852880: mov    %rbx,0x60(%rsp)
  0x000000010f852885: mov    %rbp,0x50(%rsp)
  0x000000010f85288a: mov    %rsi,0x48(%rsp)
  0x000000010f85288f: mov    %rdi,0x40(%rsp)
  0x000000010f852894: mov    %r8,0x38(%rsp)
  0x000000010f852899: mov    %r9,0x30(%rsp)
  0x000000010f85289e: mov    %r10,0x28(%rsp)
  0x000000010f8528a3: mov    %r11,0x20(%rsp)
  0x000000010f8528a8: mov    %r12,0x18(%rsp)
  0x000000010f8528ad: mov    %r13,0x10(%rsp)
  0x000000010f8528b2: mov    %r14,0x8(%rsp)
  0x000000010f8528b7: mov    %r15,(%rsp)
  0x000000010f8528bb: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f8528c5: movabs $0x10f852865,%rsi  ;   {internal_word}
  0x000000010f8528cf: mov    %rsp,%rdx
  0x000000010f8528d2: and    $0xfffffffffffffff0,%rsp
  0x000000010f8528d6: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f8528db: hlt    
[Deopt Handler Code]
  0x000000010f8528dc: movabs $0x10f8528dc,%r10  ;   {section_word}
  0x000000010f8528e6: push   %r10
  0x000000010f8528e8: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f8528ed: hlt    
  0x000000010f8528ee: hlt    
  0x000000010f8528ef: hlt    
Decoding compiled method 0x000000010f852a90:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010eb51920} 'afterNodeInsertion' '(Z)V' in 'java/util/HashMap'
  # this:     rsi:rsi   = 'java/util/HashMap'
  # parm0:    rdx       = boolean
  #           [sp+0x40]  (sp of caller)
  0x000000010f852be0: mov    0x8(%rsi),%r10d
  0x000000010f852be4: shl    $0x3,%r10
  0x000000010f852be8: cmp    %rax,%r10
  0x000000010f852beb: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f852bf1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f852bfc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f852c00: mov    %eax,-0x14000(%rsp)
  0x000000010f852c07: push   %rbp
  0x000000010f852c08: sub    $0x30,%rsp
  0x000000010f852c0c: movabs $0x10ee1e400,%rdi  ;   {metadata(method data for {method} {0x000000010eb51920} 'afterNodeInsertion' '(Z)V' in 'java/util/HashMap')}
  0x000000010f852c16: mov    0xdc(%rdi),%ebx
  0x000000010f852c1c: add    $0x8,%ebx
  0x000000010f852c1f: mov    %ebx,0xdc(%rdi)
  0x000000010f852c25: movabs $0x10eb51920,%rdi  ;   {metadata({method} {0x000000010eb51920} 'afterNodeInsertion' '(Z)V' in 'java/util/HashMap')}
  0x000000010f852c2f: and    $0x1ff8,%ebx
  0x000000010f852c35: cmp    $0x0,%ebx
  0x000000010f852c38: je     0x000000010f852c4a  ;*return
                                                ; - java.util.HashMap::afterNodeInsertion@0 (line 1783)

  0x000000010f852c3e: add    $0x30,%rsp
  0x000000010f852c42: pop    %rbp
  0x000000010f852c43: test   %eax,-0x8db7b49(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f852c49: retq   
  0x000000010f852c4a: mov    %rdi,0x8(%rsp)
  0x000000010f852c4f: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f852c57: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=124}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::afterNodeInsertion@-1 (line 1783)
                                                ;   {runtime_call}
  0x000000010f852c5c: jmp    0x000000010f852c3e
  0x000000010f852c5e: nop
  0x000000010f852c5f: nop
  0x000000010f852c60: mov    0x2a8(%r15),%rax
  0x000000010f852c67: movabs $0x0,%r10
  0x000000010f852c71: mov    %r10,0x2a8(%r15)
  0x000000010f852c78: movabs $0x0,%r10
  0x000000010f852c82: mov    %r10,0x2b0(%r15)
  0x000000010f852c89: add    $0x30,%rsp
  0x000000010f852c8d: pop    %rbp
  0x000000010f852c8e: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f852c93: hlt    
  0x000000010f852c94: hlt    
  0x000000010f852c95: hlt    
  0x000000010f852c96: hlt    
  0x000000010f852c97: hlt    
  0x000000010f852c98: hlt    
  0x000000010f852c99: hlt    
  0x000000010f852c9a: hlt    
  0x000000010f852c9b: hlt    
  0x000000010f852c9c: hlt    
  0x000000010f852c9d: hlt    
  0x000000010f852c9e: hlt    
  0x000000010f852c9f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f852ca0: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f852ca5: mov    %rsp,-0x28(%rsp)
  0x000000010f852caa: sub    $0x80,%rsp
  0x000000010f852cb1: mov    %rax,0x78(%rsp)
  0x000000010f852cb6: mov    %rcx,0x70(%rsp)
  0x000000010f852cbb: mov    %rdx,0x68(%rsp)
  0x000000010f852cc0: mov    %rbx,0x60(%rsp)
  0x000000010f852cc5: mov    %rbp,0x50(%rsp)
  0x000000010f852cca: mov    %rsi,0x48(%rsp)
  0x000000010f852ccf: mov    %rdi,0x40(%rsp)
  0x000000010f852cd4: mov    %r8,0x38(%rsp)
  0x000000010f852cd9: mov    %r9,0x30(%rsp)
  0x000000010f852cde: mov    %r10,0x28(%rsp)
  0x000000010f852ce3: mov    %r11,0x20(%rsp)
  0x000000010f852ce8: mov    %r12,0x18(%rsp)
  0x000000010f852ced: mov    %r13,0x10(%rsp)
  0x000000010f852cf2: mov    %r14,0x8(%rsp)
  0x000000010f852cf7: mov    %r15,(%rsp)
  0x000000010f852cfb: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f852d05: movabs $0x10f852ca5,%rsi  ;   {internal_word}
  0x000000010f852d0f: mov    %rsp,%rdx
  0x000000010f852d12: and    $0xfffffffffffffff0,%rsp
  0x000000010f852d16: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f852d1b: hlt    
[Deopt Handler Code]
  0x000000010f852d1c: movabs $0x10f852d1c,%r10  ;   {section_word}
  0x000000010f852d26: push   %r10
  0x000000010f852d28: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f852d2d: hlt    
  0x000000010f852d2e: hlt    
  0x000000010f852d2f: hlt    
Decoding compiled method 0x000000010f852dd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010eafb208} 'position' '()I' in 'java/nio/Buffer'
  #           [sp+0x40]  (sp of caller)
  0x000000010f852f20: mov    0x8(%rsi),%r10d
  0x000000010f852f24: shl    $0x3,%r10
  0x000000010f852f28: cmp    %rax,%r10
  0x000000010f852f2b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f852f31: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f852f3c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f852f40: mov    %eax,-0x14000(%rsp)
  0x000000010f852f47: push   %rbp
  0x000000010f852f48: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.nio.Buffer::position@0 (line 226)

  0x000000010f852f4c: mov    0x18(%rsi),%eax    ;*getfield position
                                                ; - java.nio.Buffer::position@1 (line 226)

  0x000000010f852f4f: add    $0x30,%rsp
  0x000000010f852f53: pop    %rbp
  0x000000010f852f54: test   %eax,-0x8db7e5a(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f852f5a: retq   
  0x000000010f852f5b: nop
  0x000000010f852f5c: nop
  0x000000010f852f5d: mov    0x2a8(%r15),%rax
  0x000000010f852f64: movabs $0x0,%r10
  0x000000010f852f6e: mov    %r10,0x2a8(%r15)
  0x000000010f852f75: movabs $0x0,%r10
  0x000000010f852f7f: mov    %r10,0x2b0(%r15)
  0x000000010f852f86: add    $0x30,%rsp
  0x000000010f852f8a: pop    %rbp
  0x000000010f852f8b: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f852f90: hlt    
  0x000000010f852f91: hlt    
  0x000000010f852f92: hlt    
  0x000000010f852f93: hlt    
  0x000000010f852f94: hlt    
  0x000000010f852f95: hlt    
  0x000000010f852f96: hlt    
  0x000000010f852f97: hlt    
  0x000000010f852f98: hlt    
  0x000000010f852f99: hlt    
  0x000000010f852f9a: hlt    
  0x000000010f852f9b: hlt    
  0x000000010f852f9c: hlt    
  0x000000010f852f9d: hlt    
  0x000000010f852f9e: hlt    
  0x000000010f852f9f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f852fa0: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f852fa5: mov    %rsp,-0x28(%rsp)
  0x000000010f852faa: sub    $0x80,%rsp
  0x000000010f852fb1: mov    %rax,0x78(%rsp)
  0x000000010f852fb6: mov    %rcx,0x70(%rsp)
  0x000000010f852fbb: mov    %rdx,0x68(%rsp)
  0x000000010f852fc0: mov    %rbx,0x60(%rsp)
  0x000000010f852fc5: mov    %rbp,0x50(%rsp)
  0x000000010f852fca: mov    %rsi,0x48(%rsp)
  0x000000010f852fcf: mov    %rdi,0x40(%rsp)
  0x000000010f852fd4: mov    %r8,0x38(%rsp)
  0x000000010f852fd9: mov    %r9,0x30(%rsp)
  0x000000010f852fde: mov    %r10,0x28(%rsp)
  0x000000010f852fe3: mov    %r11,0x20(%rsp)
  0x000000010f852fe8: mov    %r12,0x18(%rsp)
  0x000000010f852fed: mov    %r13,0x10(%rsp)
  0x000000010f852ff2: mov    %r14,0x8(%rsp)
  0x000000010f852ff7: mov    %r15,(%rsp)
  0x000000010f852ffb: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f853005: movabs $0x10f852fa5,%rsi  ;   {internal_word}
  0x000000010f85300f: mov    %rsp,%rdx
  0x000000010f853012: and    $0xfffffffffffffff0,%rsp
  0x000000010f853016: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f85301b: hlt    
[Deopt Handler Code]
  0x000000010f85301c: movabs $0x10f85301c,%r10  ;   {section_word}
  0x000000010f853026: push   %r10
  0x000000010f853028: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f85302d: hlt    
  0x000000010f85302e: hlt    
  0x000000010f85302f: hlt    
Decoding compiled method 0x000000010f8530d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ebd1ff8} 'newNode' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' in 'java/util/LinkedHashMap'
  # this:     rsi:rsi   = 'java/util/LinkedHashMap'
  # parm0:    rdx       = int
  # parm1:    rcx:rcx   = 'java/lang/Object'
  # parm2:    r8:r8     = 'java/lang/Object'
  # parm3:    r9:r9     = 'java/util/HashMap$Node'
  #           [sp+0xa0]  (sp of caller)
  0x000000010f853260: mov    0x8(%rsi),%r10d
  0x000000010f853264: shl    $0x3,%r10
  0x000000010f853268: cmp    %rax,%r10
  0x000000010f85326b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f853271: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f85327c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f853280: mov    %eax,-0x14000(%rsp)
  0x000000010f853287: push   %rbp
  0x000000010f853288: sub    $0x90,%rsp
  0x000000010f85328f: mov    %rsi,%rbx
  0x000000010f853292: mov    %rdx,%r11
  0x000000010f853295: mov    %rcx,%r13
  0x000000010f853298: movabs $0x10ee45f58,%rdx  ;   {metadata(method data for {method} {0x000000010ebd1ff8} 'newNode' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' in 'java/util/LinkedHashMap')}
  0x000000010f8532a2: mov    0xdc(%rdx),%esi
  0x000000010f8532a8: add    $0x8,%esi
  0x000000010f8532ab: mov    %esi,0xdc(%rdx)
  0x000000010f8532b1: movabs $0x10ebd1ff8,%rdx  ;   {metadata({method} {0x000000010ebd1ff8} 'newNode' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' in 'java/util/LinkedHashMap')}
  0x000000010f8532bb: and    $0x1ff8,%esi
  0x000000010f8532c1: cmp    $0x0,%esi
  0x000000010f8532c4: je     0x000000010f853554
  0x000000010f8532ca: movabs $0x7c002ca20,%rdx  ;   {metadata('java/util/LinkedHashMap$Entry')}
  0x000000010f8532d4: mov    0x60(%r15),%rax
  0x000000010f8532d8: lea    0x28(%rax),%rdi
  0x000000010f8532dc: cmp    0x70(%r15),%rdi
  0x000000010f8532e0: ja     0x000000010f85356b
  0x000000010f8532e6: mov    %rdi,0x60(%r15)
  0x000000010f8532ea: mov    0xa8(%rdx),%rcx
  0x000000010f8532f1: mov    %rcx,(%rax)
  0x000000010f8532f4: mov    %rdx,%rcx
  0x000000010f8532f7: shr    $0x3,%rcx
  0x000000010f8532fb: mov    %ecx,0x8(%rax)
  0x000000010f8532fe: xor    %rcx,%rcx
  0x000000010f853301: mov    %ecx,0xc(%rax)
  0x000000010f853304: xor    %rcx,%rcx
  0x000000010f853307: mov    %rcx,0x10(%rax)
  0x000000010f85330b: mov    %rcx,0x18(%rax)
  0x000000010f85330f: mov    %rcx,0x20(%rax)    ;*new  ; - java.util.LinkedHashMap::newNode@0 (line 256)

  0x000000010f853313: mov    %rax,%rsi
  0x000000010f853316: movabs $0x10ee45f58,%rdi  ;   {metadata(method data for {method} {0x000000010ebd1ff8} 'newNode' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' in 'java/util/LinkedHashMap')}
  0x000000010f853320: addq   $0x1,0x108(%rdi)
  0x000000010f853328: movabs $0x10ee460b8,%rsi  ;   {metadata(method data for {method} {0x000000010ebd8750} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' in 'java/util/LinkedHashMap$Entry')}
  0x000000010f853332: mov    0xdc(%rsi),%edi
  0x000000010f853338: add    $0x8,%edi
  0x000000010f85333b: mov    %edi,0xdc(%rsi)
  0x000000010f853341: movabs $0x10ebd8750,%rsi  ;   {metadata({method} {0x000000010ebd8750} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' in 'java/util/LinkedHashMap$Entry')}
  0x000000010f85334b: and    $0x7ffff8,%edi
  0x000000010f853351: cmp    $0x0,%edi
  0x000000010f853354: je     0x000000010f853578
  0x000000010f85335a: mov    %rax,%rsi
  0x000000010f85335d: movabs $0x10ee460b8,%rdi  ;   {metadata(method data for {method} {0x000000010ebd8750} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' in 'java/util/LinkedHashMap$Entry')}
  0x000000010f853367: addq   $0x1,0x108(%rdi)
  0x000000010f85336f: movabs $0x10ed24058,%rsi  ;   {metadata(method data for {method} {0x000000010eb53bf8} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' in 'java/util/HashMap$Node')}
  0x000000010f853379: mov    0xdc(%rsi),%edi
  0x000000010f85337f: add    $0x8,%edi
  0x000000010f853382: mov    %edi,0xdc(%rsi)
  0x000000010f853388: movabs $0x10eb53bf8,%rsi  ;   {metadata({method} {0x000000010eb53bf8} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' in 'java/util/HashMap$Node')}
  0x000000010f853392: and    $0x7ffff8,%edi
  0x000000010f853398: cmp    $0x0,%edi
  0x000000010f85339b: je     0x000000010f85358f
  0x000000010f8533a1: mov    %rax,%rsi
  0x000000010f8533a4: movabs $0x10ed24058,%rdi  ;   {metadata(method data for {method} {0x000000010eb53bf8} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' in 'java/util/HashMap$Node')}
  0x000000010f8533ae: addq   $0x1,0x108(%rdi)
  0x000000010f8533b6: movabs $0x10ebdca10,%rsi  ;   {metadata(method data for {method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f8533c0: mov    0xdc(%rsi),%edi
  0x000000010f8533c6: add    $0x8,%edi
  0x000000010f8533c9: mov    %edi,0xdc(%rsi)
  0x000000010f8533cf: movabs $0x10ea65480,%rsi  ;   {metadata({method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f8533d9: and    $0x7ffff8,%edi
  0x000000010f8533df: cmp    $0x0,%edi
  0x000000010f8533e2: je     0x000000010f8535a6
  0x000000010f8533e8: mov    %r11d,0xc(%rax)    ;*putfield hash
                                                ; - java.util.HashMap$Node::<init>@6 (line 286)
                                                ; - java.util.LinkedHashMap$Entry::<init>@6 (line 195)
                                                ; - java.util.LinkedHashMap::newNode@9 (line 256)

  0x000000010f8533ec: mov    %r13,%r10
  0x000000010f8533ef: shr    $0x3,%r10
  0x000000010f8533f3: mov    %r10d,0x10(%rax)
  0x000000010f8533f7: mov    %rax,%rsi
  0x000000010f8533fa: shr    $0x9,%rsi
  0x000000010f8533fe: movabs $0x1065b9000,%rdi
  0x000000010f853408: movb   $0x0,(%rsi,%rdi,1)  ;*putfield key
                                                ; - java.util.HashMap$Node::<init>@11 (line 287)
                                                ; - java.util.LinkedHashMap$Entry::<init>@6 (line 195)
                                                ; - java.util.LinkedHashMap::newNode@9 (line 256)

  0x000000010f85340c: mov    %r8,%r10
  0x000000010f85340f: shr    $0x3,%r10
  0x000000010f853413: mov    %r10d,0x14(%rax)
  0x000000010f853417: mov    %rax,%rsi
  0x000000010f85341a: shr    $0x9,%rsi
  0x000000010f85341e: movb   $0x0,(%rsi,%rdi,1)  ;*putfield value
                                                ; - java.util.HashMap$Node::<init>@16 (line 288)
                                                ; - java.util.LinkedHashMap$Entry::<init>@6 (line 195)
                                                ; - java.util.LinkedHashMap::newNode@9 (line 256)

  0x000000010f853422: mov    %r9,%r10
  0x000000010f853425: shr    $0x3,%r10
  0x000000010f853429: mov    %r10d,0x18(%rax)
  0x000000010f85342d: mov    %rax,%rsi
  0x000000010f853430: shr    $0x9,%rsi
  0x000000010f853434: movb   $0x0,(%rsi,%rdi,1)  ;*putfield next
                                                ; - java.util.HashMap$Node::<init>@22 (line 289)
                                                ; - java.util.LinkedHashMap$Entry::<init>@6 (line 195)
                                                ; - java.util.LinkedHashMap::newNode@9 (line 256)

  0x000000010f853438: mov    %rbx,%rsi
  0x000000010f85343b: movabs $0x10ee45f58,%rdx  ;   {metadata(method data for {method} {0x000000010ebd1ff8} 'newNode' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' in 'java/util/LinkedHashMap')}
  0x000000010f853445: addq   $0x1,0x118(%rdx)
  0x000000010f85344d: movabs $0x10ee46208,%rsi  ;   {metadata(method data for {method} {0x000000010ebd1dd8} 'linkNodeLast' '(Ljava/util/LinkedHashMap$Entry;)V' in 'java/util/LinkedHashMap')}
  0x000000010f853457: mov    0xdc(%rsi),%edx
  0x000000010f85345d: add    $0x8,%edx
  0x000000010f853460: mov    %edx,0xdc(%rsi)
  0x000000010f853466: movabs $0x10ebd1dd8,%rsi  ;   {metadata({method} {0x000000010ebd1dd8} 'linkNodeLast' '(Ljava/util/LinkedHashMap$Entry;)V' in 'java/util/LinkedHashMap')}
  0x000000010f853470: and    $0x7ffff8,%edx
  0x000000010f853476: cmp    $0x0,%edx
  0x000000010f853479: je     0x000000010f8535bd
  0x000000010f85347f: mov    0x34(%rbx),%esi
  0x000000010f853482: shl    $0x3,%rsi          ;*getfield tail
                                                ; - java.util.LinkedHashMap::linkNodeLast@1 (line 223)
                                                ; - java.util.LinkedHashMap::newNode@17 (line 258)

  0x000000010f853486: mov    %rax,%r10
  0x000000010f853489: shr    $0x3,%r10
  0x000000010f85348d: mov    %r10d,0x34(%rbx)
  0x000000010f853491: mov    %rbx,%rdx
  0x000000010f853494: shr    $0x9,%rdx
  0x000000010f853498: movb   $0x0,(%rdx,%rdi,1)  ;*putfield tail
                                                ; - java.util.LinkedHashMap::linkNodeLast@7 (line 224)
                                                ; - java.util.LinkedHashMap::newNode@17 (line 258)

  0x000000010f85349c: cmp    $0x0,%rsi
  0x000000010f8534a0: movabs $0x10ee46208,%rdi  ;   {metadata(method data for {method} {0x000000010ebd1dd8} 'linkNodeLast' '(Ljava/util/LinkedHashMap$Entry;)V' in 'java/util/LinkedHashMap')}
  0x000000010f8534aa: movabs $0x108,%rdx
  0x000000010f8534b4: jne    0x000000010f8534c4
  0x000000010f8534ba: movabs $0x118,%rdx
  0x000000010f8534c4: mov    (%rdi,%rdx,1),%rcx
  0x000000010f8534c8: lea    0x1(%rcx),%rcx
  0x000000010f8534cc: mov    %rcx,(%rdi,%rdx,1)
  0x000000010f8534d0: jne    0x000000010f853512  ;*ifnonnull
                                                ; - java.util.LinkedHashMap::linkNodeLast@11 (line 225)
                                                ; - java.util.LinkedHashMap::newNode@17 (line 258)

  0x000000010f8534d6: mov    %rax,%r10
  0x000000010f8534d9: shr    $0x3,%r10
  0x000000010f8534dd: mov    %r10d,0x30(%rbx)
  0x000000010f8534e1: shr    $0x9,%rbx
  0x000000010f8534e5: movabs $0x1065b9000,%rsi
  0x000000010f8534ef: movb   $0x0,(%rbx,%rsi,1)  ;*putfield head
                                                ; - java.util.LinkedHashMap::linkNodeLast@16 (line 226)
                                                ; - java.util.LinkedHashMap::newNode@17 (line 258)

  0x000000010f8534f3: movabs $0x10ee46208,%rsi  ;   {metadata(method data for {method} {0x000000010ebd1dd8} 'linkNodeLast' '(Ljava/util/LinkedHashMap$Entry;)V' in 'java/util/LinkedHashMap')}
  0x000000010f8534fd: incl   0x128(%rsi)        ;*goto
                                                ; - java.util.LinkedHashMap::linkNodeLast@19 (line 226)
                                                ; - java.util.LinkedHashMap::newNode@17 (line 258)

  0x000000010f853503: add    $0x90,%rsp
  0x000000010f85350a: pop    %rbp
  0x000000010f85350b: test   %eax,-0x8db8411(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f853511: retq   
  0x000000010f853512: mov    %rsi,%r10
  0x000000010f853515: shr    $0x3,%r10
  0x000000010f853519: mov    %r10d,0x1c(%rax)
  0x000000010f85351d: mov    %rax,%rdi
  0x000000010f853520: shr    $0x9,%rdi
  0x000000010f853524: movabs $0x1065b9000,%rbx
  0x000000010f85352e: movb   $0x0,(%rdi,%rbx,1)  ;*putfield before
                                                ; - java.util.LinkedHashMap::linkNodeLast@24 (line 228)
                                                ; - java.util.LinkedHashMap::newNode@17 (line 258)

  0x000000010f853532: mov    %rax,%r10
  0x000000010f853535: shr    $0x3,%r10
  0x000000010f853539: mov    %r10d,0x20(%rsi)   ; implicit exception: dispatches to 0x000000010f8535d4
  0x000000010f85353d: shr    $0x9,%rsi
  0x000000010f853541: movb   $0x0,(%rsi,%rbx,1)  ;*putfield after
                                                ; - java.util.LinkedHashMap::linkNodeLast@29 (line 229)
                                                ; - java.util.LinkedHashMap::newNode@17 (line 258)

  0x000000010f853545: add    $0x90,%rsp
  0x000000010f85354c: pop    %rbp
  0x000000010f85354d: test   %eax,-0x8db8453(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f853553: retq   
  0x000000010f853554: mov    %rdx,0x8(%rsp)
  0x000000010f853559: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f853561: callq  0x000000010f7d1a20  ; OopMap{rbx=Oop r13=Oop r8=Oop r9=Oop off=774}
                                                ;*synchronization entry
                                                ; - java.util.LinkedHashMap::newNode@-1 (line 256)
                                                ;   {runtime_call}
  0x000000010f853566: jmpq   0x000000010f8532ca
  0x000000010f85356b: mov    %rdx,%rdx
  0x000000010f85356e: callq  0x000000010f7cd820  ; OopMap{rbx=Oop r13=Oop r8=Oop r9=Oop off=787}
                                                ;*new  ; - java.util.LinkedHashMap::newNode@0 (line 256)
                                                ;   {runtime_call}
  0x000000010f853573: jmpq   0x000000010f853313
  0x000000010f853578: mov    %rsi,0x8(%rsp)
  0x000000010f85357d: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f853585: callq  0x000000010f7d1a20  ; OopMap{rbx=Oop r13=Oop r8=Oop r9=Oop rax=Oop off=810}
                                                ;*synchronization entry
                                                ; - java.util.LinkedHashMap$Entry::<init>@-1 (line 195)
                                                ; - java.util.LinkedHashMap::newNode@9 (line 256)
                                                ;   {runtime_call}
  0x000000010f85358a: jmpq   0x000000010f85335a
  0x000000010f85358f: mov    %rsi,0x8(%rsp)
  0x000000010f853594: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f85359c: callq  0x000000010f7d1a20  ; OopMap{rbx=Oop r13=Oop r8=Oop r9=Oop rax=Oop off=833}
                                                ;*synchronization entry
                                                ; - java.util.HashMap$Node::<init>@-1 (line 285)
                                                ; - java.util.LinkedHashMap$Entry::<init>@6 (line 195)
                                                ; - java.util.LinkedHashMap::newNode@9 (line 256)
                                                ;   {runtime_call}
  0x000000010f8535a1: jmpq   0x000000010f8533a1
  0x000000010f8535a6: mov    %rsi,0x8(%rsp)
  0x000000010f8535ab: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f8535b3: callq  0x000000010f7d1a20  ; OopMap{rbx=Oop r13=Oop r8=Oop r9=Oop rax=Oop off=856}
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 37)
                                                ; - java.util.HashMap$Node::<init>@1 (line 285)
                                                ; - java.util.LinkedHashMap$Entry::<init>@6 (line 195)
                                                ; - java.util.LinkedHashMap::newNode@9 (line 256)
                                                ;   {runtime_call}
  0x000000010f8535b8: jmpq   0x000000010f8533e8
  0x000000010f8535bd: mov    %rsi,0x8(%rsp)
  0x000000010f8535c2: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f8535ca: callq  0x000000010f7d1a20  ; OopMap{rbx=Oop rax=Oop off=879}
                                                ;*synchronization entry
                                                ; - java.util.LinkedHashMap::linkNodeLast@-1 (line 223)
                                                ; - java.util.LinkedHashMap::newNode@17 (line 258)
                                                ;   {runtime_call}
  0x000000010f8535cf: jmpq   0x000000010f85347f
  0x000000010f8535d4: callq  0x000000010f7cd0c0  ; OopMap{rax=Oop rsi=Oop off=889}
                                                ;*putfield after
                                                ; - java.util.LinkedHashMap::linkNodeLast@29 (line 229)
                                                ; - java.util.LinkedHashMap::newNode@17 (line 258)
                                                ;   {runtime_call}
  0x000000010f8535d9: nop
  0x000000010f8535da: nop
  0x000000010f8535db: mov    0x2a8(%r15),%rax
  0x000000010f8535e2: movabs $0x0,%r10
  0x000000010f8535ec: mov    %r10,0x2a8(%r15)
  0x000000010f8535f3: movabs $0x0,%r10
  0x000000010f8535fd: mov    %r10,0x2b0(%r15)
  0x000000010f853604: add    $0x90,%rsp
  0x000000010f85360b: pop    %rbp
  0x000000010f85360c: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f853611: hlt    
  0x000000010f853612: hlt    
  0x000000010f853613: hlt    
  0x000000010f853614: hlt    
  0x000000010f853615: hlt    
  0x000000010f853616: hlt    
  0x000000010f853617: hlt    
  0x000000010f853618: hlt    
  0x000000010f853619: hlt    
  0x000000010f85361a: hlt    
  0x000000010f85361b: hlt    
  0x000000010f85361c: hlt    
  0x000000010f85361d: hlt    
  0x000000010f85361e: hlt    
  0x000000010f85361f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f853620: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f853625: mov    %rsp,-0x28(%rsp)
  0x000000010f85362a: sub    $0x80,%rsp
  0x000000010f853631: mov    %rax,0x78(%rsp)
  0x000000010f853636: mov    %rcx,0x70(%rsp)
  0x000000010f85363b: mov    %rdx,0x68(%rsp)
  0x000000010f853640: mov    %rbx,0x60(%rsp)
  0x000000010f853645: mov    %rbp,0x50(%rsp)
  0x000000010f85364a: mov    %rsi,0x48(%rsp)
  0x000000010f85364f: mov    %rdi,0x40(%rsp)
  0x000000010f853654: mov    %r8,0x38(%rsp)
  0x000000010f853659: mov    %r9,0x30(%rsp)
  0x000000010f85365e: mov    %r10,0x28(%rsp)
  0x000000010f853663: mov    %r11,0x20(%rsp)
  0x000000010f853668: mov    %r12,0x18(%rsp)
  0x000000010f85366d: mov    %r13,0x10(%rsp)
  0x000000010f853672: mov    %r14,0x8(%rsp)
  0x000000010f853677: mov    %r15,(%rsp)
  0x000000010f85367b: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f853685: movabs $0x10f853625,%rsi  ;   {internal_word}
  0x000000010f85368f: mov    %rsp,%rdx
  0x000000010f853692: and    $0xfffffffffffffff0,%rsp
  0x000000010f853696: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f85369b: hlt    
[Deopt Handler Code]
  0x000000010f85369c: movabs $0x10f85369c,%r10  ;   {section_word}
  0x000000010f8536a6: push   %r10
  0x000000010f8536a8: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f8536ad: hlt    
  0x000000010f8536ae: hlt    
  0x000000010f8536af: hlt    
Decoding compiled method 0x000000010f856b50:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ebd2c10} 'removeEldestEntry' '(Ljava/util/Map$Entry;)Z' in 'java/util/LinkedHashMap'
  # this:     rsi:rsi   = 'java/util/LinkedHashMap'
  # parm0:    rdx:rdx   = 'java/util/Map$Entry'
  #           [sp+0x40]  (sp of caller)
  0x000000010f856ca0: mov    0x8(%rsi),%r10d
  0x000000010f856ca4: shl    $0x3,%r10
  0x000000010f856ca8: cmp    %rax,%r10
  0x000000010f856cab: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f856cb1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f856cbc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f856cc0: mov    %eax,-0x14000(%rsp)
  0x000000010f856cc7: push   %rbp
  0x000000010f856cc8: sub    $0x30,%rsp         ;*iconst_0
                                                ; - java.util.LinkedHashMap::removeEldestEntry@0 (line 509)

  0x000000010f856ccc: mov    $0x0,%eax
  0x000000010f856cd1: add    $0x30,%rsp
  0x000000010f856cd5: pop    %rbp
  0x000000010f856cd6: test   %eax,-0x8dbbbdc(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f856cdc: retq   
  0x000000010f856cdd: nop
  0x000000010f856cde: nop
  0x000000010f856cdf: mov    0x2a8(%r15),%rax
  0x000000010f856ce6: movabs $0x0,%r10
  0x000000010f856cf0: mov    %r10,0x2a8(%r15)
  0x000000010f856cf7: movabs $0x0,%r10
  0x000000010f856d01: mov    %r10,0x2b0(%r15)
  0x000000010f856d08: add    $0x30,%rsp
  0x000000010f856d0c: pop    %rbp
  0x000000010f856d0d: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f856d12: hlt    
  0x000000010f856d13: hlt    
  0x000000010f856d14: hlt    
  0x000000010f856d15: hlt    
  0x000000010f856d16: hlt    
  0x000000010f856d17: hlt    
  0x000000010f856d18: hlt    
  0x000000010f856d19: hlt    
  0x000000010f856d1a: hlt    
  0x000000010f856d1b: hlt    
  0x000000010f856d1c: hlt    
  0x000000010f856d1d: hlt    
  0x000000010f856d1e: hlt    
  0x000000010f856d1f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f856d20: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f856d25: mov    %rsp,-0x28(%rsp)
  0x000000010f856d2a: sub    $0x80,%rsp
  0x000000010f856d31: mov    %rax,0x78(%rsp)
  0x000000010f856d36: mov    %rcx,0x70(%rsp)
  0x000000010f856d3b: mov    %rdx,0x68(%rsp)
  0x000000010f856d40: mov    %rbx,0x60(%rsp)
  0x000000010f856d45: mov    %rbp,0x50(%rsp)
  0x000000010f856d4a: mov    %rsi,0x48(%rsp)
  0x000000010f856d4f: mov    %rdi,0x40(%rsp)
  0x000000010f856d54: mov    %r8,0x38(%rsp)
  0x000000010f856d59: mov    %r9,0x30(%rsp)
  0x000000010f856d5e: mov    %r10,0x28(%rsp)
  0x000000010f856d63: mov    %r11,0x20(%rsp)
  0x000000010f856d68: mov    %r12,0x18(%rsp)
  0x000000010f856d6d: mov    %r13,0x10(%rsp)
  0x000000010f856d72: mov    %r14,0x8(%rsp)
  0x000000010f856d77: mov    %r15,(%rsp)
  0x000000010f856d7b: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f856d85: movabs $0x10f856d25,%rsi  ;   {internal_word}
  0x000000010f856d8f: mov    %rsp,%rdx
  0x000000010f856d92: and    $0xfffffffffffffff0,%rsp
  0x000000010f856d96: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f856d9b: hlt    
[Deopt Handler Code]
  0x000000010f856d9c: movabs $0x10f856d9c,%r10  ;   {section_word}
  0x000000010f856da6: push   %r10
  0x000000010f856da8: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f856dad: hlt    
  0x000000010f856dae: hlt    
  0x000000010f856daf: hlt    
Decoding compiled method 0x000000010f856e10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ead6838} 'append' '(C)Ljava/lang/StringBuffer;' in 'java/lang/StringBuffer'
  # this:     rsi:rsi   = 'java/lang/StringBuffer'
  # parm0:    rdx       = char
  #           [sp+0x70]  (sp of caller)
  0x000000010f856f80: mov    0x8(%rsi),%r10d
  0x000000010f856f84: shl    $0x3,%r10
  0x000000010f856f88: cmp    %r10,%rax
  0x000000010f856f8b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f856f91: data16 xchg %ax,%ax
  0x000000010f856f94: nopl   0x0(%rax,%rax,1)
  0x000000010f856f9c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f856fa0: mov    %eax,-0x14000(%rsp)
  0x000000010f856fa7: push   %rbp
  0x000000010f856fa8: sub    $0x60,%rsp
  0x000000010f856fac: mov    %edx,0x18(%rsp)
  0x000000010f856fb0: mov    %rsi,0x20(%rsp)
  0x000000010f856fb5: mov    (%rsi),%rax
  0x000000010f856fb8: mov    %rax,%r10
  0x000000010f856fbb: and    $0x7,%r10
  0x000000010f856fbf: cmp    $0x5,%r10
  0x000000010f856fc3: jne    0x000000010f8572aa
  0x000000010f856fc9: mov    $0xf8001b07,%r11d  ;   {metadata('java/lang/StringBuffer')}
  0x000000010f856fcf: movabs $0x0,%r10
  0x000000010f856fd9: lea    (%r10,%r11,8),%r10
  0x000000010f856fdd: mov    0xa8(%r10),%r10
  0x000000010f856fe4: mov    %r10,%r11
  0x000000010f856fe7: or     %r15,%r11
  0x000000010f856fea: mov    %r11,%r8
  0x000000010f856fed: xor    %rax,%r8
  0x000000010f856ff0: test   $0xffffffffffffff87,%r8
  0x000000010f856ff7: jne    0x000000010f857311  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)

  0x000000010f856ffd: mov    0x20(%rsp),%r10
  0x000000010f857002: mov    0x10(%r10),%ebx    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000010f857006: mov    %r12d,0x14(%r10)   ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::append@2 (line 380)

  0x000000010f85700a: mov    0xc(%r12,%rbx,8),%r8d  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; implicit exception: dispatches to 0x000000010f85747d
  0x000000010f85700f: mov    0xc(%r10),%r10d    ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000010f857013: mov    %r10d,%r11d
  0x000000010f857016: sub    %r8d,%r11d
  0x000000010f857019: mov    %rbx,%r9
  0x000000010f85701c: shl    $0x3,%r9           ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000010f857020: inc    %r11d
  0x000000010f857023: mov    %r10d,%edi
  0x000000010f857026: inc    %edi               ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@6 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000010f857028: test   %r11d,%r11d
  0x000000010f85702b: jg     0x000000010f857080  ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000010f85702d: mov    0x20(%rsp),%r11
  0x000000010f857032: mov    %edi,0xc(%r11)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000010f857036: test   %r9,%r9
  0x000000010f857039: je     0x000000010f857263
  0x000000010f85703f: mov    0xc(%r9),%r11d
  0x000000010f857043: cmp    %r11d,%r10d
  0x000000010f857046: jae    0x000000010f85727d
  0x000000010f85704c: mov    0x18(%rsp),%r8d
  0x000000010f857051: mov    %r8w,0x10(%r9,%r10,2)
  0x000000010f857057: mov    $0x7,%r10d
  0x000000010f85705d: mov    0x20(%rsp),%r11
  0x000000010f857062: and    (%r11),%r10
  0x000000010f857065: cmp    $0x5,%r10
  0x000000010f857069: jne    0x000000010f85733c  ;*areturn
                                                ; - java.lang.StringBuffer::append@12 (line 382)

  0x000000010f85706f: mov    0x20(%rsp),%rax
  0x000000010f857074: add    $0x60,%rsp
  0x000000010f857078: pop    %rbp
  0x000000010f857079: test   %eax,-0x8dbc07f(%rip)        # 0x0000000106a9b000
                                                ;   {poll_return}
  0x000000010f85707f: retq   
  0x000000010f857080: mov    %r8d,%r11d
  0x000000010f857083: shl    %r11d              ;*ishl
                                                ; - java.lang.AbstractStringBuilder::newCapacity@6 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000010f857086: mov    %r11d,%edx
  0x000000010f857089: sub    %r10d,%edx
  0x000000010f85708c: inc    %edx
  0x000000010f85708e: test   %edx,%edx
  0x000000010f857090: jl     0x000000010f8571c2  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000010f857096: add    $0x2,%r11d         ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000010f85709a: test   %r11d,%r11d
  0x000000010f85709d: jle    0x000000010f857427  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000010f8570a3: mov    $0x7ffffff7,%ebp
  0x000000010f8570a8: sub    %r11d,%ebp         ;*isub
                                                ; - java.lang.AbstractStringBuilder::newCapacity@25 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000010f8570ab: test   %ebp,%ebp
  0x000000010f8570ad: jl     0x000000010f857455  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000010f8570b3: cmp    $0x80000,%r11d
  0x000000010f8570ba: ja     0x000000010f8573e2
  0x000000010f8570c0: movslq %r11d,%r10
  0x000000010f8570c3: shl    %r10
  0x000000010f8570c6: add    $0x17,%r10
  0x000000010f8570ca: mov    %r10,%rdx
  0x000000010f8570cd: and    $0xfffffffffffffff8,%rdx
  0x000000010f8570d1: cmp    $0x80000,%r11d
  0x000000010f8570d8: ja     0x000000010f857210
  0x000000010f8570de: mov    0x60(%r15),%rbp
  0x000000010f8570e2: mov    %rbp,%rcx
  0x000000010f8570e5: add    %rdx,%rcx
  0x000000010f8570e8: cmp    0x70(%r15),%rcx
  0x000000010f8570ec: jae    0x000000010f857210
  0x000000010f8570f2: mov    %rcx,0x60(%r15)
  0x000000010f8570f6: prefetchw 0xc0(%rcx)
  0x000000010f8570fd: movq   $0x1,0x0(%rbp)
  0x000000010f857105: prefetchw 0x100(%rcx)
  0x000000010f85710c: movl   $0xf8000041,0x8(%rbp)  ;   {metadata({type array char})}
  0x000000010f857113: mov    %r11d,0xc(%rbp)
  0x000000010f857117: prefetchw 0x140(%rcx)
  0x000000010f85711e: prefetchw 0x180(%rcx)     ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000010f857125: cmp    %r11d,%r8d
  0x000000010f857128: mov    %r11d,%r9d
  0x000000010f85712b: cmovl  %r8d,%r9d          ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000010f85712f: mov    %rbp,%r13
  0x000000010f857132: add    $0x10,%r13         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000010f857136: lea    (%r12,%rbx,8),%rsi  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000010f85713a: shr    $0x3,%r10
  0x000000010f85713e: mov    %r10,%rcx
  0x000000010f857141: add    $0xfffffffffffffffe,%rcx
  0x000000010f857145: cmp    %r9d,%r8d
  0x000000010f857148: jb     0x000000010f8573ea
  0x000000010f85714e: cmp    %r9d,%r11d
  0x000000010f857151: jb     0x000000010f8573ea
  0x000000010f857157: test   %r9d,%r9d
  0x000000010f85715a: jle    0x000000010f857415
  0x000000010f857160: lea    0x10(%r12,%rbx,8),%r8
  0x000000010f857165: cmp    %r11d,%r9d
  0x000000010f857168: jl     0x000000010f8571ca
  0x000000010f85716a: add    $0xfffffffffffffff0,%rdx
  0x000000010f85716e: shr    $0x3,%rdx
  0x000000010f857172: mov    %r8,%rdi
  0x000000010f857175: mov    %r13,%rsi
  0x000000010f857178: movabs $0x10f723ac0,%r10
  0x000000010f857182: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000010f857185: mov    0x20(%rsp),%r10
  0x000000010f85718a: mov    0xc(%r10),%r10d    ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000010f85718e: mov    %rbp,%r8
  0x000000010f857191: shr    $0x3,%r8
  0x000000010f857195: mov    0x20(%rsp),%r11
  0x000000010f85719a: mov    %r8d,0x10(%r11)    ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000010f85719e: mov    %r10d,%edi
  0x000000010f8571a1: inc    %edi               ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000010f8571a3: mov    0x20(%rsp),%r11
  0x000000010f8571a8: shr    $0x9,%r11
  0x000000010f8571ac: movabs $0x1065b9000,%r8
  0x000000010f8571b6: mov    %r12b,(%r8,%r11,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000010f8571ba: mov    %rbp,%r9
  0x000000010f8571bd: jmpq   0x000000010f85702d
  0x000000010f8571c2: mov    %edi,%r11d
  0x000000010f8571c5: jmpq   0x000000010f85709a
  0x000000010f8571ca: movslq %r9d,%rdx
  0x000000010f8571cd: mov    %rdx,%r11
  0x000000010f8571d0: shl    %r11
  0x000000010f8571d3: add    $0x10,%r11
  0x000000010f8571d7: mov    %r11,%r9
  0x000000010f8571da: and    $0xfffffffffffffff9,%r9
  0x000000010f8571de: mov    %rbp,%rdi
  0x000000010f8571e1: add    %r9,%rdi
  0x000000010f8571e4: shr    $0x3,%r11
  0x000000010f8571e8: sub    %r11,%r10
  0x000000010f8571eb: mov    %r10,%rcx
  0x000000010f8571ee: xor    %rax,%rax
  0x000000010f8571f1: shl    $0x3,%rcx
  0x000000010f8571f5: rep rex.W stos %al,%es:(%rdi)
  0x000000010f8571f8: mov    %r8,%rdi
  0x000000010f8571fb: mov    %r13,%rsi
  0x000000010f8571fe: movabs $0x10f723800,%r10
  0x000000010f857208: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000010f85720b: jmpq   0x000000010f857185
  0x000000010f857210: mov    %r8d,0x40(%rsp)
  0x000000010f857215: mov    %ebx,0x1c(%rsp)
  0x000000010f857219: mov    %rdx,0x10(%rsp)
  0x000000010f85721e: mov    %r10,0x8(%rsp)
  0x000000010f857223: mov    %r11d,(%rsp)
  0x000000010f857227: mov    0x20(%rsp),%rbp    ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000010f85722c: movabs $0x7c0000208,%rsi  ;   {metadata({type array char})}
  0x000000010f857236: mov    %r11d,%edx
  0x000000010f857239: mov    %r9,0x38(%rsp)
  0x000000010f85723e: nop
  0x000000010f85723f: callq  0x000000010f7d3a60  ; OopMap{rbp=Oop [28]=NarrowOop [32]=Oop [56]=Oop off=708}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x000000010f857244: mov    (%rsp),%r11d
  0x000000010f857248: mov    0x8(%rsp),%r10
  0x000000010f85724d: mov    0x10(%rsp),%rdx
  0x000000010f857252: mov    %rax,%rbp
  0x000000010f857255: mov    0x1c(%rsp),%ebx
  0x000000010f857259: mov    0x40(%rsp),%r8d
  0x000000010f85725e: jmpq   0x000000010f857125
  0x000000010f857263: mov    $0xfffffff6,%esi
  0x000000010f857268: mov    %r11,%rbp
  0x000000010f85726b: mov    %r10d,0x4(%rsp)
  0x000000010f857270: data16 xchg %ax,%ax
  0x000000010f857273: callq  0x000000010f7166a0  ; OopMap{rbp=Oop off=760}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x000000010f857278: callq  0x000000010948a904  ;   {runtime_call}
  0x000000010f85727d: mov    $0xffffffe4,%esi
  0x000000010f857282: mov    0x20(%rsp),%rbp
  0x000000010f857287: mov    0x18(%rsp),%r11d
  0x000000010f85728c: mov    %r11d,0x10(%rsp)
  0x000000010f857291: mov    %r9,0x18(%rsp)
  0x000000010f857296: mov    %r10d,0x14(%rsp)
  0x000000010f85729b: callq  0x000000010f7166a0  ; OopMap{rbp=Oop [24]=Oop off=800}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x000000010f8572a0: callq  0x000000010948a904  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x000000010f8572a5: lock cmpxchg %r10,(%rsi)
  0x000000010f8572aa: lea    0x50(%rsp),%rbx
  0x000000010f8572af: mov    (%rsi),%rax
  0x000000010f8572b2: test   $0x2,%rax
  0x000000010f8572b8: jne    0x000000010f8572de
  0x000000010f8572ba: or     $0x1,%rax
  0x000000010f8572be: mov    %rax,(%rbx)
  0x000000010f8572c1: lock cmpxchg %rbx,(%rsi)
  0x000000010f8572c6: je     0x000000010f8572f7
  0x000000010f8572cc: sub    %rsp,%rax
  0x000000010f8572cf: and    $0xfffffffffffff007,%rax
  0x000000010f8572d6: mov    %rax,(%rbx)
  0x000000010f8572d9: jmpq   0x000000010f8572f7
  0x000000010f8572de: movq   $0x3,(%rbx)
  0x000000010f8572e5: mov    %rax,%rbx
  0x000000010f8572e8: mov    0x16(%rbx),%rax
  0x000000010f8572ec: test   %rax,%rax
  0x000000010f8572ef: jne    0x000000010f8572f7
  0x000000010f8572f1: lock cmpxchg %r15,0x16(%rbx)
  0x000000010f8572f7: je     0x000000010f856ffd
  0x000000010f8572fd: lea    0x50(%rsp),%rdx
  0x000000010f857302: mov    %rsi,0x8(%rsp)
  0x000000010f857307: callq  0x000000010f7d58e0  ; OopMap{[8]=Oop [32]=Oop off=908}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ;   {runtime_call}
  0x000000010f85730c: jmpq   0x000000010f856ffd
  0x000000010f857311: test   $0x7,%r8
  0x000000010f857318: jne    0x000000010f8572a5
  0x000000010f85731a: test   $0x300,%r8
  0x000000010f857321: jne    0x000000010f857330
  0x000000010f857323: and    $0x37f,%rax
  0x000000010f85732a: mov    %rax,%r11
  0x000000010f85732d: or     %r15,%r11
  0x000000010f857330: lock cmpxchg %r11,(%rsi)
  0x000000010f857335: jne    0x000000010f8572fd
  0x000000010f857337: jmpq   0x000000010f856ffd
  0x000000010f85733c: lea    0x50(%rsp),%rax
  0x000000010f857341: cmpq   $0x0,(%rax)
  0x000000010f857348: je     0x000000010f8573c2
  0x000000010f85734e: mov    (%r11),%r10
  0x000000010f857351: test   $0x2,%r10
  0x000000010f857358: je     0x000000010f8573ba
  0x000000010f85735a: mov    0x16(%r10),%rax
  0x000000010f85735e: xor    %r15,%rax
  0x000000010f857361: or     0x26(%r10),%rax
  0x000000010f857365: jne    0x000000010f8573c2
  0x000000010f857367: mov    0x36(%r10),%rax
  0x000000010f85736b: or     0x3e(%r10),%rax
  0x000000010f85736f: jne    0x000000010f85737b
  0x000000010f857371: movq   $0x0,0x16(%r10)
  0x000000010f857379: jmp    0x000000010f8573c2
  0x000000010f85737b: cmpq   $0x0,0x46(%r10)
  0x000000010f857383: je     0x000000010f8573ae
  0x000000010f857385: movq   $0x0,0x16(%r10)
  0x000000010f85738d: lock addl $0x0,(%rsp)
  0x000000010f857392: cmpq   $0x0,0x46(%r10)
  0x000000010f85739a: jne    0x000000010f8573b3
  0x000000010f85739c: movabs $0x0,%rax
  0x000000010f8573a6: lock cmpxchg %r15,0x16(%r10)
  0x000000010f8573ac: jne    0x000000010f8573b3
  0x000000010f8573ae: or     $0x1,%eax
  0x000000010f8573b1: jmp    0x000000010f8573c2
  0x000000010f8573b3: test   $0x0,%eax
  0x000000010f8573b8: jmp    0x000000010f8573c2
  0x000000010f8573ba: mov    (%rax),%r10
  0x000000010f8573bd: lock cmpxchg %r10,(%r11)
  0x000000010f8573c2: je     0x000000010f85706f
  0x000000010f8573c8: mov    %r11,%rdi
  0x000000010f8573cb: lea    0x50(%rsp),%rsi    ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)

  0x000000010f8573d0: movabs $0x1094eabea,%r10
  0x000000010f8573da: callq  *%r10              ;*areturn
                                                ; - java.lang.StringBuffer::append@12 (line 382)

  0x000000010f8573dd: jmpq   0x000000010f85706f
  0x000000010f8573e2: movslq %r11d,%r10         ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000010f8573e5: jmpq   0x000000010f8570c3
  0x000000010f8573ea: mov    %r13,%rdi
  0x000000010f8573ed: xor    %rax,%rax
  0x000000010f8573f0: shl    $0x3,%rcx
  0x000000010f8573f4: rep rex.W stos %al,%es:(%rdi)
  0x000000010f8573f7: xor    %edx,%edx
  0x000000010f8573f9: mov    %rbp,%rcx
  0x000000010f8573fc: xor    %r8d,%r8d
  0x000000010f8573ff: rex.W pushq 0x20(%rsp)
  0x000000010f857404: rex.W popq (%rsp)
  0x000000010f857408: data16 xchg %ax,%ax
  0x000000010f85740b: callq  0x000000010f7d2a60  ; OopMap{rbp=Oop [0]=Oop [32]=Oop off=1168}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x000000010f857410: jmpq   0x000000010f857185
  0x000000010f857415: mov    %r13,%rdi
  0x000000010f857418: xor    %rax,%rax
  0x000000010f85741b: shl    $0x3,%rcx
  0x000000010f85741f: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000010f857422: jmpq   0x000000010f857185  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000010f857427: mov    $0xffffff65,%esi
  0x000000010f85742c: mov    0x20(%rsp),%rbp
  0x000000010f857431: mov    0x18(%rsp),%r10d
  0x000000010f857436: mov    %r10d,0x10(%rsp)
  0x000000010f85743b: mov    %ebx,0x14(%rsp)
  0x000000010f85743f: mov    %edi,0x28(%rsp)
  0x000000010f857443: mov    %r11d,0x30(%rsp)
  0x000000010f857448: data16 xchg %ax,%ax
  0x000000010f85744b: callq  0x000000010f7166a0  ; OopMap{rbp=Oop [20]=NarrowOop off=1232}
                                                ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x000000010f857450: callq  0x000000010948a904  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x000000010f857455: mov    $0xffffff65,%esi
  0x000000010f85745a: rex.W pushq 0x20(%rsp)
  0x000000010f85745f: rex.W popq (%rsp)
  0x000000010f857463: mov    %ebx,0x1c(%rsp)
  0x000000010f857467: mov    %edi,0x30(%rsp)
  0x000000010f85746b: mov    %r11d,0x34(%rsp)
  0x000000010f857470: data16 xchg %ax,%ax
  0x000000010f857473: callq  0x000000010f7166a0  ; OopMap{[0]=Oop [28]=NarrowOop off=1272}
                                                ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x000000010f857478: callq  0x000000010948a904  ;   {runtime_call}
  0x000000010f85747d: mov    $0xfffffff6,%esi
  0x000000010f857482: mov    %r10,%rbp
  0x000000010f857485: xchg   %ax,%ax
  0x000000010f857487: callq  0x000000010f7166a0  ; OopMap{rbp=Oop off=1292}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x000000010f85748c: callq  0x000000010948a904  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x000000010f857491: mov    %rax,%rbx
  0x000000010f857494: jmp    0x000000010f857499  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000010f857496: mov    %rax,%rbx          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000010f857499: mov    $0x7,%r10d
  0x000000010f85749f: mov    0x20(%rsp),%r11
  0x000000010f8574a4: and    (%r11),%r10
  0x000000010f8574a7: cmp    $0x5,%r10
  0x000000010f8574ab: jne    0x000000010f8574ba
  0x000000010f8574ad: mov    %rbx,%rsi
  0x000000010f8574b0: add    $0x60,%rsp
  0x000000010f8574b4: pop    %rbp
  0x000000010f8574b5: jmpq   0x000000010f7d2b60  ;   {runtime_call}
  0x000000010f8574ba: lea    0x50(%rsp),%rax
  0x000000010f8574bf: cmpq   $0x0,(%rax)
  0x000000010f8574c6: je     0x000000010f857540
  0x000000010f8574cc: mov    (%r11),%r10
  0x000000010f8574cf: test   $0x2,%r10
  0x000000010f8574d6: je     0x000000010f857538
  0x000000010f8574d8: mov    0x16(%r10),%rax
  0x000000010f8574dc: xor    %r15,%rax
  0x000000010f8574df: or     0x26(%r10),%rax
  0x000000010f8574e3: jne    0x000000010f857540
  0x000000010f8574e5: mov    0x36(%r10),%rax
  0x000000010f8574e9: or     0x3e(%r10),%rax
  0x000000010f8574ed: jne    0x000000010f8574f9
  0x000000010f8574ef: movq   $0x0,0x16(%r10)
  0x000000010f8574f7: jmp    0x000000010f857540
  0x000000010f8574f9: cmpq   $0x0,0x46(%r10)
  0x000000010f857501: je     0x000000010f85752c
  0x000000010f857503: movq   $0x0,0x16(%r10)
  0x000000010f85750b: lock addl $0x0,(%rsp)
  0x000000010f857510: cmpq   $0x0,0x46(%r10)
  0x000000010f857518: jne    0x000000010f857531
  0x000000010f85751a: movabs $0x0,%rax
  0x000000010f857524: lock cmpxchg %r15,0x16(%r10)
  0x000000010f85752a: jne    0x000000010f857531
  0x000000010f85752c: or     $0x1,%eax
  0x000000010f85752f: jmp    0x000000010f857540
  0x000000010f857531: test   $0x0,%eax
  0x000000010f857536: jmp    0x000000010f857540
  0x000000010f857538: mov    (%rax),%r10
  0x000000010f85753b: lock cmpxchg %r10,(%r11)
  0x000000010f857540: je     0x000000010f8574ad
  0x000000010f857546: mov    %r11,%rdi
  0x000000010f857549: lea    0x50(%rsp),%rsi    ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)

  0x000000010f85754e: movabs $0x1094eabea,%r10
  0x000000010f857558: callq  *%r10
  0x000000010f85755b: jmpq   0x000000010f8574ad
[Exception Handler]
[Stub Code]
  0x000000010f857560: jmpq   0x000000010f73fba0  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010f857565: callq  0x000000010f85756a
  0x000000010f85756a: subq   $0x5,(%rsp)
  0x000000010f85756f: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f857574: hlt    
  0x000000010f857575: hlt    
  0x000000010f857576: hlt    
  0x000000010f857577: hlt    
Decoding compiled method 0x000000010f856650:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ebd8750} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' in 'java/util/LinkedHashMap$Entry'
  # this:     rsi:rsi   = 'java/util/LinkedHashMap$Entry'
  # parm0:    rdx       = int
  # parm1:    rcx:rcx   = 'java/lang/Object'
  # parm2:    r8:r8     = 'java/lang/Object'
  # parm3:    r9:r9     = 'java/util/HashMap$Node'
  #           [sp+0x70]  (sp of caller)
  0x000000010f8567c0: mov    0x8(%rsi),%r10d
  0x000000010f8567c4: shl    $0x3,%r10
  0x000000010f8567c8: cmp    %rax,%r10
  0x000000010f8567cb: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f8567d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f8567dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f8567e0: mov    %eax,-0x14000(%rsp)
  0x000000010f8567e7: push   %rbp
  0x000000010f8567e8: sub    $0x60,%rsp
  0x000000010f8567ec: movabs $0x10ee460b8,%rdi  ;   {metadata(method data for {method} {0x000000010ebd8750} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' in 'java/util/LinkedHashMap$Entry')}
  0x000000010f8567f6: mov    0xdc(%rdi),%ebx
  0x000000010f8567fc: add    $0x8,%ebx
  0x000000010f8567ff: mov    %ebx,0xdc(%rdi)
  0x000000010f856805: movabs $0x10ebd8750,%rdi  ;   {metadata({method} {0x000000010ebd8750} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' in 'java/util/LinkedHashMap$Entry')}
  0x000000010f85680f: and    $0x1ff8,%ebx
  0x000000010f856815: cmp    $0x0,%ebx
  0x000000010f856818: je     0x000000010f856904  ;*aload_0
                                                ; - java.util.LinkedHashMap$Entry::<init>@0 (line 195)

  0x000000010f85681e: mov    %rsi,%rdi
  0x000000010f856821: movabs $0x10ee460b8,%rbx  ;   {metadata(method data for {method} {0x000000010ebd8750} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' in 'java/util/LinkedHashMap$Entry')}
  0x000000010f85682b: addq   $0x1,0x108(%rbx)
  0x000000010f856833: movabs $0x10ed24058,%rdi  ;   {metadata(method data for {method} {0x000000010eb53bf8} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' in 'java/util/HashMap$Node')}
  0x000000010f85683d: mov    0xdc(%rdi),%ebx
  0x000000010f856843: add    $0x8,%ebx
  0x000000010f856846: mov    %ebx,0xdc(%rdi)
  0x000000010f85684c: movabs $0x10eb53bf8,%rdi  ;   {metadata({method} {0x000000010eb53bf8} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' in 'java/util/HashMap$Node')}
  0x000000010f856856: and    $0x7ffff8,%ebx
  0x000000010f85685c: cmp    $0x0,%ebx
  0x000000010f85685f: je     0x000000010f85691b
  0x000000010f856865: mov    %rsi,%rdi
  0x000000010f856868: movabs $0x10ed24058,%rbx  ;   {metadata(method data for {method} {0x000000010eb53bf8} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' in 'java/util/HashMap$Node')}
  0x000000010f856872: addq   $0x1,0x108(%rbx)
  0x000000010f85687a: movabs $0x10ebdca10,%rdi  ;   {metadata(method data for {method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f856884: mov    0xdc(%rdi),%ebx
  0x000000010f85688a: add    $0x8,%ebx
  0x000000010f85688d: mov    %ebx,0xdc(%rdi)
  0x000000010f856893: movabs $0x10ea65480,%rdi  ;   {metadata({method} {0x000000010ea65480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010f85689d: and    $0x7ffff8,%ebx
  0x000000010f8568a3: cmp    $0x0,%ebx
  0x000000010f8568a6: je     0x000000010f856932
  0x000000010f8568ac: mov    %edx,0xc(%rsi)     ;*putfield hash
                                                ; - java.util.HashMap$Node::<init>@6 (line 286)
                                                ; - java.util.LinkedHashMap$Entry::<init>@6 (line 195)

  0x000000010f8568af: mov    %rcx,%r10
  0x000000010f8568b2: shr    $0x3,%r10
  0x000000010f8568b6: mov    %r10d,0x10(%rsi)
  0x000000010f8568ba: mov    %rsi,%rdi
  0x000000010f8568bd: shr    $0x9,%rdi
  0x000000010f8568c1: movabs $0x1065b9000,%rbx
  0x000000010f8568cb: movb   $0x0,(%rdi,%rbx,1)  ;*putfield key
                                                ; - java.util.HashMap$Node::<init>@11 (line 287)
                                                ; - java.util.LinkedHashMap$Entry::<init>@6 (line 195)

  0x000000010f8568cf: mov    %r8,%r10
  0x000000010f8568d2: shr    $0x3,%r10
  0x000000010f8568d6: mov    %r10d,0x14(%rsi)
  0x000000010f8568da: mov    %rsi,%rdi
  0x000000010f8568dd: shr    $0x9,%rdi
  0x000000010f8568e1: movb   $0x0,(%rdi,%rbx,1)  ;*putfield value
                                                ; - java.util.HashMap$Node::<init>@16 (line 288)
                                                ; - java.util.LinkedHashMap$Entry::<init>@6 (line 195)

  0x000000010f8568e5: mov    %r9,%r10
  0x000000010f8568e8: shr    $0x3,%r10
  0x000000010f8568ec: mov    %r10d,0x18(%rsi)
  0x000000010f8568f0: shr    $0x9,%rsi
  0x000000010f8568f4: movb   $0x0,(%rsi,%rbx,1)  ;*putfield next
                                                ; - java.util.HashMap$Node::<init>@22 (line 289)
                                                ; - java.util.LinkedHashMap$Entry::<init>@6 (line 195)

  0x000000010f8568f8: add    $0x60,%rsp
  0x000000010f8568fc: pop    %rbp
  0x000000010f8568fd: test   %eax,-0x8dbb803(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f856903: retq   
  0x000000010f856904: mov    %rdi,0x8(%rsp)
  0x000000010f856909: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f856911: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop rcx=Oop r8=Oop r9=Oop off=342}
                                                ;*synchronization entry
                                                ; - java.util.LinkedHashMap$Entry::<init>@-1 (line 195)
                                                ;   {runtime_call}
  0x000000010f856916: jmpq   0x000000010f85681e
  0x000000010f85691b: mov    %rdi,0x8(%rsp)
  0x000000010f856920: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f856928: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop rcx=Oop r8=Oop r9=Oop off=365}
                                                ;*synchronization entry
                                                ; - java.util.HashMap$Node::<init>@-1 (line 285)
                                                ; - java.util.LinkedHashMap$Entry::<init>@6 (line 195)
                                                ;   {runtime_call}
  0x000000010f85692d: jmpq   0x000000010f856865
  0x000000010f856932: mov    %rdi,0x8(%rsp)
  0x000000010f856937: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f85693f: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop rcx=Oop r8=Oop r9=Oop off=388}
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 37)
                                                ; - java.util.HashMap$Node::<init>@1 (line 285)
                                                ; - java.util.LinkedHashMap$Entry::<init>@6 (line 195)
                                                ;   {runtime_call}
  0x000000010f856944: jmpq   0x000000010f8568ac
  0x000000010f856949: nop
  0x000000010f85694a: nop
  0x000000010f85694b: mov    0x2a8(%r15),%rax
  0x000000010f856952: movabs $0x0,%r10
  0x000000010f85695c: mov    %r10,0x2a8(%r15)
  0x000000010f856963: movabs $0x0,%r10
  0x000000010f85696d: mov    %r10,0x2b0(%r15)
  0x000000010f856974: add    $0x60,%rsp
  0x000000010f856978: pop    %rbp
  0x000000010f856979: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f85697e: hlt    
  0x000000010f85697f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f856980: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f856985: mov    %rsp,-0x28(%rsp)
  0x000000010f85698a: sub    $0x80,%rsp
  0x000000010f856991: mov    %rax,0x78(%rsp)
  0x000000010f856996: mov    %rcx,0x70(%rsp)
  0x000000010f85699b: mov    %rdx,0x68(%rsp)
  0x000000010f8569a0: mov    %rbx,0x60(%rsp)
  0x000000010f8569a5: mov    %rbp,0x50(%rsp)
  0x000000010f8569aa: mov    %rsi,0x48(%rsp)
  0x000000010f8569af: mov    %rdi,0x40(%rsp)
  0x000000010f8569b4: mov    %r8,0x38(%rsp)
  0x000000010f8569b9: mov    %r9,0x30(%rsp)
  0x000000010f8569be: mov    %r10,0x28(%rsp)
  0x000000010f8569c3: mov    %r11,0x20(%rsp)
  0x000000010f8569c8: mov    %r12,0x18(%rsp)
  0x000000010f8569cd: mov    %r13,0x10(%rsp)
  0x000000010f8569d2: mov    %r14,0x8(%rsp)
  0x000000010f8569d7: mov    %r15,(%rsp)
  0x000000010f8569db: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f8569e5: movabs $0x10f856985,%rsi  ;   {internal_word}
  0x000000010f8569ef: mov    %rsp,%rdx
  0x000000010f8569f2: and    $0xfffffffffffffff0,%rsp
  0x000000010f8569f6: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f8569fb: hlt    
[Deopt Handler Code]
  0x000000010f8569fc: movabs $0x10f8569fc,%r10  ;   {section_word}
  0x000000010f856a06: push   %r10
  0x000000010f856a08: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f856a0d: hlt    
  0x000000010f856a0e: hlt    
  0x000000010f856a0f: hlt    
Decoding compiled method 0x000000010f856150:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ebd1dd8} 'linkNodeLast' '(Ljava/util/LinkedHashMap$Entry;)V' in 'java/util/LinkedHashMap'
  # this:     rsi:rsi   = 'java/util/LinkedHashMap'
  # parm0:    rdx:rdx   = 'java/util/LinkedHashMap$Entry'
  #           [sp+0x40]  (sp of caller)
  0x000000010f8562c0: mov    0x8(%rsi),%r10d
  0x000000010f8562c4: shl    $0x3,%r10
  0x000000010f8562c8: cmp    %rax,%r10
  0x000000010f8562cb: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f8562d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f8562dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f8562e0: mov    %eax,-0x14000(%rsp)
  0x000000010f8562e7: push   %rbp
  0x000000010f8562e8: sub    $0x30,%rsp
  0x000000010f8562ec: movabs $0x10ee46208,%rdi  ;   {metadata(method data for {method} {0x000000010ebd1dd8} 'linkNodeLast' '(Ljava/util/LinkedHashMap$Entry;)V' in 'java/util/LinkedHashMap')}
  0x000000010f8562f6: mov    0xdc(%rdi),%ebx
  0x000000010f8562fc: add    $0x8,%ebx
  0x000000010f8562ff: mov    %ebx,0xdc(%rdi)
  0x000000010f856305: movabs $0x10ebd1dd8,%rdi  ;   {metadata({method} {0x000000010ebd1dd8} 'linkNodeLast' '(Ljava/util/LinkedHashMap$Entry;)V' in 'java/util/LinkedHashMap')}
  0x000000010f85630f: and    $0x1ff8,%ebx
  0x000000010f856315: cmp    $0x0,%ebx
  0x000000010f856318: je     0x000000010f8563f7  ;*aload_0
                                                ; - java.util.LinkedHashMap::linkNodeLast@0 (line 223)

  0x000000010f85631e: mov    0x34(%rsi),%edi
  0x000000010f856321: shl    $0x3,%rdi          ;*getfield tail
                                                ; - java.util.LinkedHashMap::linkNodeLast@1 (line 223)

  0x000000010f856325: mov    %rdx,%r10
  0x000000010f856328: shr    $0x3,%r10
  0x000000010f85632c: mov    %r10d,0x34(%rsi)
  0x000000010f856330: mov    %rsi,%rbx
  0x000000010f856333: shr    $0x9,%rbx
  0x000000010f856337: movabs $0x1065b9000,%rax
  0x000000010f856341: movb   $0x0,(%rbx,%rax,1)  ;*putfield tail
                                                ; - java.util.LinkedHashMap::linkNodeLast@7 (line 224)

  0x000000010f856345: cmp    $0x0,%rdi
  0x000000010f856349: movabs $0x10ee46208,%rbx  ;   {metadata(method data for {method} {0x000000010ebd1dd8} 'linkNodeLast' '(Ljava/util/LinkedHashMap$Entry;)V' in 'java/util/LinkedHashMap')}
  0x000000010f856353: movabs $0x108,%rax
  0x000000010f85635d: jne    0x000000010f85636d
  0x000000010f856363: movabs $0x118,%rax
  0x000000010f85636d: mov    (%rbx,%rax,1),%rcx
  0x000000010f856371: lea    0x1(%rcx),%rcx
  0x000000010f856375: mov    %rcx,(%rbx,%rax,1)
  0x000000010f856379: jne    0x000000010f8563b8  ;*ifnonnull
                                                ; - java.util.LinkedHashMap::linkNodeLast@11 (line 225)

  0x000000010f85637f: mov    %rdx,%r10
  0x000000010f856382: shr    $0x3,%r10
  0x000000010f856386: mov    %r10d,0x30(%rsi)
  0x000000010f85638a: shr    $0x9,%rsi
  0x000000010f85638e: movabs $0x1065b9000,%rdi
  0x000000010f856398: movb   $0x0,(%rsi,%rdi,1)  ;*putfield head
                                                ; - java.util.LinkedHashMap::linkNodeLast@16 (line 226)

  0x000000010f85639c: movabs $0x10ee46208,%rsi  ;   {metadata(method data for {method} {0x000000010ebd1dd8} 'linkNodeLast' '(Ljava/util/LinkedHashMap$Entry;)V' in 'java/util/LinkedHashMap')}
  0x000000010f8563a6: incl   0x128(%rsi)        ;*goto
                                                ; - java.util.LinkedHashMap::linkNodeLast@19 (line 226)

  0x000000010f8563ac: add    $0x30,%rsp
  0x000000010f8563b0: pop    %rbp
  0x000000010f8563b1: test   %eax,-0x8dbb2b7(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f8563b7: retq   
  0x000000010f8563b8: mov    %rdi,%r10
  0x000000010f8563bb: shr    $0x3,%r10
  0x000000010f8563bf: mov    %r10d,0x1c(%rdx)   ; implicit exception: dispatches to 0x000000010f85640e
  0x000000010f8563c3: mov    %rdx,%rsi
  0x000000010f8563c6: shr    $0x9,%rsi
  0x000000010f8563ca: movabs $0x1065b9000,%rbx
  0x000000010f8563d4: movb   $0x0,(%rsi,%rbx,1)  ;*putfield before
                                                ; - java.util.LinkedHashMap::linkNodeLast@24 (line 228)

  0x000000010f8563d8: mov    %rdx,%r10
  0x000000010f8563db: shr    $0x3,%r10
  0x000000010f8563df: mov    %r10d,0x20(%rdi)   ; implicit exception: dispatches to 0x000000010f856413
  0x000000010f8563e3: shr    $0x9,%rdi
  0x000000010f8563e7: movb   $0x0,(%rdi,%rbx,1)  ;*putfield after
                                                ; - java.util.LinkedHashMap::linkNodeLast@29 (line 229)

  0x000000010f8563eb: add    $0x30,%rsp
  0x000000010f8563ef: pop    %rbp
  0x000000010f8563f0: test   %eax,-0x8dbb2f6(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f8563f6: retq   
  0x000000010f8563f7: mov    %rdi,0x8(%rsp)
  0x000000010f8563fc: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f856404: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop rdx=Oop off=329}
                                                ;*synchronization entry
                                                ; - java.util.LinkedHashMap::linkNodeLast@-1 (line 223)
                                                ;   {runtime_call}
  0x000000010f856409: jmpq   0x000000010f85631e
  0x000000010f85640e: callq  0x000000010f7cd0c0  ; OopMap{rdi=Oop rdx=Oop off=339}
                                                ;*putfield before
                                                ; - java.util.LinkedHashMap::linkNodeLast@24 (line 228)
                                                ;   {runtime_call}
  0x000000010f856413: callq  0x000000010f7cd0c0  ; OopMap{rdi=Oop off=344}
                                                ;*putfield after
                                                ; - java.util.LinkedHashMap::linkNodeLast@29 (line 229)
                                                ;   {runtime_call}
  0x000000010f856418: nop
  0x000000010f856419: nop
  0x000000010f85641a: mov    0x2a8(%r15),%rax
  0x000000010f856421: movabs $0x0,%r10
  0x000000010f85642b: mov    %r10,0x2a8(%r15)
  0x000000010f856432: movabs $0x0,%r10
  0x000000010f85643c: mov    %r10,0x2b0(%r15)
  0x000000010f856443: add    $0x30,%rsp
  0x000000010f856447: pop    %rbp
  0x000000010f856448: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f85644d: hlt    
  0x000000010f85644e: hlt    
  0x000000010f85644f: hlt    
  0x000000010f856450: hlt    
  0x000000010f856451: hlt    
  0x000000010f856452: hlt    
  0x000000010f856453: hlt    
  0x000000010f856454: hlt    
  0x000000010f856455: hlt    
  0x000000010f856456: hlt    
  0x000000010f856457: hlt    
  0x000000010f856458: hlt    
  0x000000010f856459: hlt    
  0x000000010f85645a: hlt    
  0x000000010f85645b: hlt    
  0x000000010f85645c: hlt    
  0x000000010f85645d: hlt    
  0x000000010f85645e: hlt    
  0x000000010f85645f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f856460: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f856465: mov    %rsp,-0x28(%rsp)
  0x000000010f85646a: sub    $0x80,%rsp
  0x000000010f856471: mov    %rax,0x78(%rsp)
  0x000000010f856476: mov    %rcx,0x70(%rsp)
  0x000000010f85647b: mov    %rdx,0x68(%rsp)
  0x000000010f856480: mov    %rbx,0x60(%rsp)
  0x000000010f856485: mov    %rbp,0x50(%rsp)
  0x000000010f85648a: mov    %rsi,0x48(%rsp)
  0x000000010f85648f: mov    %rdi,0x40(%rsp)
  0x000000010f856494: mov    %r8,0x38(%rsp)
  0x000000010f856499: mov    %r9,0x30(%rsp)
  0x000000010f85649e: mov    %r10,0x28(%rsp)
  0x000000010f8564a3: mov    %r11,0x20(%rsp)
  0x000000010f8564a8: mov    %r12,0x18(%rsp)
  0x000000010f8564ad: mov    %r13,0x10(%rsp)
  0x000000010f8564b2: mov    %r14,0x8(%rsp)
  0x000000010f8564b7: mov    %r15,(%rsp)
  0x000000010f8564bb: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f8564c5: movabs $0x10f856465,%rsi  ;   {internal_word}
  0x000000010f8564cf: mov    %rsp,%rdx
  0x000000010f8564d2: and    $0xfffffffffffffff0,%rsp
  0x000000010f8564d6: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f8564db: hlt    
[Deopt Handler Code]
  0x000000010f8564dc: movabs $0x10f8564dc,%r10  ;   {section_word}
  0x000000010f8564e6: push   %r10
  0x000000010f8564e8: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f8564ed: hlt    
  0x000000010f8564ee: hlt    
  0x000000010f8564ef: hlt    
Decoding compiled method 0x000000010f8557d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010ebd23a8} 'afterNodeInsertion' '(Z)V' in 'java/util/LinkedHashMap'
  # this:     rsi:rsi   = 'java/util/LinkedHashMap'
  # parm0:    rdx       = boolean
  #           [sp+0x90]  (sp of caller)
  0x000000010f855980: mov    0x8(%rsi),%r10d
  0x000000010f855984: shl    $0x3,%r10
  0x000000010f855988: cmp    %rax,%r10
  0x000000010f85598b: jne    0x000000010f716e60  ;   {runtime_call}
  0x000000010f855991: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010f85599c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010f8559a0: mov    %eax,-0x14000(%rsp)
  0x000000010f8559a7: push   %rbp
  0x000000010f8559a8: sub    $0x80,%rsp
  0x000000010f8559af: movabs $0x10ee46368,%rdi  ;   {metadata(method data for {method} {0x000000010ebd23a8} 'afterNodeInsertion' '(Z)V' in 'java/util/LinkedHashMap')}
  0x000000010f8559b9: mov    0xdc(%rdi),%ebx
  0x000000010f8559bf: add    $0x8,%ebx
  0x000000010f8559c2: mov    %ebx,0xdc(%rdi)
  0x000000010f8559c8: movabs $0x10ebd23a8,%rdi  ;   {metadata({method} {0x000000010ebd23a8} 'afterNodeInsertion' '(Z)V' in 'java/util/LinkedHashMap')}
  0x000000010f8559d2: and    $0x1ff8,%ebx
  0x000000010f8559d8: cmp    $0x0,%ebx
  0x000000010f8559db: je     0x000000010f855d83  ;*iload_1
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@0 (line 299)

  0x000000010f8559e1: cmp    $0x0,%edx
  0x000000010f8559e4: movabs $0x10ee46368,%rdx  ;   {metadata(method data for {method} {0x000000010ebd23a8} 'afterNodeInsertion' '(Z)V' in 'java/util/LinkedHashMap')}
  0x000000010f8559ee: movabs $0x108,%rdi
  0x000000010f8559f8: je     0x000000010f855a08
  0x000000010f8559fe: movabs $0x118,%rdi
  0x000000010f855a08: mov    (%rdx,%rdi,1),%rbx
  0x000000010f855a0c: lea    0x1(%rbx),%rbx
  0x000000010f855a10: mov    %rbx,(%rdx,%rdi,1)
  0x000000010f855a14: je     0x000000010f855d74  ;*ifeq
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@1 (line 299)

  0x000000010f855a1a: mov    0x30(%rsi),%edi
  0x000000010f855a1d: shl    $0x3,%rdi          ;*getfield head
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@5 (line 299)

  0x000000010f855a21: cmp    $0x0,%rdi
  0x000000010f855a25: movabs $0x10ee46368,%rdx  ;   {metadata(method data for {method} {0x000000010ebd23a8} 'afterNodeInsertion' '(Z)V' in 'java/util/LinkedHashMap')}
  0x000000010f855a2f: movabs $0x128,%rbx
  0x000000010f855a39: je     0x000000010f855a49
  0x000000010f855a3f: movabs $0x138,%rbx
  0x000000010f855a49: mov    (%rdx,%rbx,1),%rax
  0x000000010f855a4d: lea    0x1(%rax),%rax
  0x000000010f855a51: mov    %rax,(%rdx,%rbx,1)
  0x000000010f855a55: je     0x000000010f855d74  ;*ifnull
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@10 (line 299)

  0x000000010f855a5b: mov    %rsi,%rdx
  0x000000010f855a5e: movabs $0x10ee46368,%rbx  ;   {metadata(method data for {method} {0x000000010ebd23a8} 'afterNodeInsertion' '(Z)V' in 'java/util/LinkedHashMap')}
  0x000000010f855a68: mov    0x8(%rdx),%edx
  0x000000010f855a6b: shl    $0x3,%rdx
  0x000000010f855a6f: cmp    0x150(%rbx),%rdx
  0x000000010f855a76: jne    0x000000010f855a85
  0x000000010f855a78: addq   $0x1,0x158(%rbx)
  0x000000010f855a80: jmpq   0x000000010f855aeb
  0x000000010f855a85: cmp    0x160(%rbx),%rdx
  0x000000010f855a8c: jne    0x000000010f855a9b
  0x000000010f855a8e: addq   $0x1,0x168(%rbx)
  0x000000010f855a96: jmpq   0x000000010f855aeb
  0x000000010f855a9b: cmpq   $0x0,0x150(%rbx)
  0x000000010f855aa6: jne    0x000000010f855abf
  0x000000010f855aa8: mov    %rdx,0x150(%rbx)
  0x000000010f855aaf: movq   $0x1,0x158(%rbx)
  0x000000010f855aba: jmpq   0x000000010f855aeb
  0x000000010f855abf: cmpq   $0x0,0x160(%rbx)
  0x000000010f855aca: jne    0x000000010f855ae3
  0x000000010f855acc: mov    %rdx,0x160(%rbx)
  0x000000010f855ad3: movq   $0x1,0x168(%rbx)
  0x000000010f855ade: jmpq   0x000000010f855aeb
  0x000000010f855ae3: addq   $0x1,0x148(%rbx)
  0x000000010f855aeb: mov    %rdi,%rdx
  0x000000010f855aee: mov    %rsi,%rbx
  0x000000010f855af1: mov    %rbx,%rsi          ;*invokevirtual removeEldestEntry
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@15 (line 299)

  0x000000010f855af4: mov    %rbx,0x60(%rsp)
  0x000000010f855af9: mov    %rdi,0x58(%rsp)
  0x000000010f855afe: nop
  0x000000010f855aff: nop
  0x000000010f855b00: nop
  0x000000010f855b01: nop
  0x000000010f855b02: nop
  0x000000010f855b03: nop
  0x000000010f855b04: nop
  0x000000010f855b05: movabs $0xffffffffffffffff,%rax
  0x000000010f855b0f: callq  0x000000010f7172e0  ; OopMap{[96]=Oop [88]=Oop off=404}
                                                ;*invokevirtual removeEldestEntry
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@15 (line 299)
                                                ;   {virtual_call}
  0x000000010f855b14: cmp    $0x0,%eax
  0x000000010f855b17: movabs $0x10ee46368,%rsi  ;   {metadata(method data for {method} {0x000000010ebd23a8} 'afterNodeInsertion' '(Z)V' in 'java/util/LinkedHashMap')}
  0x000000010f855b21: movabs $0x178,%rdi
  0x000000010f855b2b: je     0x000000010f855b3b
  0x000000010f855b31: movabs $0x188,%rdi
  0x000000010f855b3b: mov    (%rsi,%rdi,1),%rbx
  0x000000010f855b3f: lea    0x1(%rbx),%rbx
  0x000000010f855b43: mov    %rbx,(%rsi,%rdi,1)
  0x000000010f855b47: je     0x000000010f855d74  ;*ifeq
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@18 (line 299)

  0x000000010f855b4d: mov    0x58(%rsp),%rdi
  0x000000010f855b52: mov    0x10(%rdi),%edi    ; implicit exception: dispatches to 0x000000010f855d9a
  0x000000010f855b55: shl    $0x3,%rdi          ;*getfield key
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@22 (line 300)

  0x000000010f855b59: movabs $0x10ee46368,%rsi  ;   {metadata(method data for {method} {0x000000010ebd23a8} 'afterNodeInsertion' '(Z)V' in 'java/util/LinkedHashMap')}
  0x000000010f855b63: addq   $0x1,0x198(%rsi)
  0x000000010f855b6b: movabs $0x10ec3b368,%rsi  ;   {metadata(method data for {method} {0x000000010eb4ecf0} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x000000010f855b75: mov    0xdc(%rsi),%ebx
  0x000000010f855b7b: add    $0x8,%ebx
  0x000000010f855b7e: mov    %ebx,0xdc(%rsi)
  0x000000010f855b84: movabs $0x10eb4ecf0,%rsi  ;   {metadata({method} {0x000000010eb4ecf0} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x000000010f855b8e: and    $0x7ffff8,%ebx
  0x000000010f855b94: cmp    $0x0,%ebx
  0x000000010f855b97: je     0x000000010f855d9f
  0x000000010f855b9d: cmp    $0x0,%rdi
  0x000000010f855ba1: movabs $0x10ec3b368,%rsi  ;   {metadata(method data for {method} {0x000000010eb4ecf0} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x000000010f855bab: movabs $0x108,%rbx
  0x000000010f855bb5: jne    0x000000010f855bc5
  0x000000010f855bbb: movabs $0x118,%rbx
  0x000000010f855bc5: mov    (%rsi,%rbx,1),%rax
  0x000000010f855bc9: lea    0x1(%rax),%rax
  0x000000010f855bcd: mov    %rax,(%rsi,%rbx,1)
  0x000000010f855bd1: jne    0x000000010f855bf6  ;*ifnonnull
                                                ; - java.util.HashMap::hash@1 (line 339)
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@28 (line 301)

  0x000000010f855bd7: movabs $0x10ec3b368,%rsi  ;   {metadata(method data for {method} {0x000000010eb4ecf0} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x000000010f855be1: incl   0x128(%rsi)
  0x000000010f855be7: mov    $0x0,%esi
  0x000000010f855bec: mov    %rdi,0x68(%rsp)
  0x000000010f855bf1: jmpq   0x000000010f855cb0  ;*goto
                                                ; - java.util.HashMap::hash@5 (line 339)
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@28 (line 301)

  0x000000010f855bf6: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x000000010f855db6
  0x000000010f855bf9: mov    %rdi,%rsi
  0x000000010f855bfc: movabs $0x10ec3b368,%rbx  ;   {metadata(method data for {method} {0x000000010eb4ecf0} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x000000010f855c06: mov    0x8(%rsi),%esi
  0x000000010f855c09: shl    $0x3,%rsi
  0x000000010f855c0d: cmp    0x148(%rbx),%rsi
  0x000000010f855c14: jne    0x000000010f855c23
  0x000000010f855c16: addq   $0x1,0x150(%rbx)
  0x000000010f855c1e: jmpq   0x000000010f855c89
  0x000000010f855c23: cmp    0x158(%rbx),%rsi
  0x000000010f855c2a: jne    0x000000010f855c39
  0x000000010f855c2c: addq   $0x1,0x160(%rbx)
  0x000000010f855c34: jmpq   0x000000010f855c89
  0x000000010f855c39: cmpq   $0x0,0x148(%rbx)
  0x000000010f855c44: jne    0x000000010f855c5d
  0x000000010f855c46: mov    %rsi,0x148(%rbx)
  0x000000010f855c4d: movq   $0x1,0x150(%rbx)
  0x000000010f855c58: jmpq   0x000000010f855c89
  0x000000010f855c5d: cmpq   $0x0,0x158(%rbx)
  0x000000010f855c68: jne    0x000000010f855c81
  0x000000010f855c6a: mov    %rsi,0x158(%rbx)
  0x000000010f855c71: movq   $0x1,0x160(%rbx)
  0x000000010f855c7c: jmpq   0x000000010f855c89
  0x000000010f855c81: addq   $0x1,0x140(%rbx)
  0x000000010f855c89: mov    %rdi,%rsi          ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@28 (line 301)

  0x000000010f855c8c: mov    %rdi,0x68(%rsp)
  0x000000010f855c91: nop
  0x000000010f855c92: nop
  0x000000010f855c93: nop
  0x000000010f855c94: nop
  0x000000010f855c95: movabs $0xffffffffffffffff,%rax
  0x000000010f855c9f: callq  0x000000010f7172e0  ; OopMap{[96]=Oop [104]=Oop off=804}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@28 (line 301)
                                                ;   {virtual_call}
  0x000000010f855ca4: mov    %rax,%rdx
  0x000000010f855ca7: shr    $0x10,%edx
  0x000000010f855caa: xor    %rax,%rdx
  0x000000010f855cad: mov    %rdx,%rsi          ;*ireturn
                                                ; - java.util.HashMap::hash@19 (line 339)
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@28 (line 301)

  0x000000010f855cb0: mov    0x68(%rsp),%rdi
  0x000000010f855cb5: mov    0x60(%rsp),%rbx
  0x000000010f855cba: mov    %rbx,%rdx
  0x000000010f855cbd: movabs $0x10ee46368,%rcx  ;   {metadata(method data for {method} {0x000000010ebd23a8} 'afterNodeInsertion' '(Z)V' in 'java/util/LinkedHashMap')}
  0x000000010f855cc7: mov    0x8(%rdx),%edx
  0x000000010f855cca: shl    $0x3,%rdx
  0x000000010f855cce: cmp    0x1b0(%rcx),%rdx
  0x000000010f855cd5: jne    0x000000010f855ce4
  0x000000010f855cd7: addq   $0x1,0x1b8(%rcx)
  0x000000010f855cdf: jmpq   0x000000010f855d4a
  0x000000010f855ce4: cmp    0x1c0(%rcx),%rdx
  0x000000010f855ceb: jne    0x000000010f855cfa
  0x000000010f855ced: addq   $0x1,0x1c8(%rcx)
  0x000000010f855cf5: jmpq   0x000000010f855d4a
  0x000000010f855cfa: cmpq   $0x0,0x1b0(%rcx)
  0x000000010f855d05: jne    0x000000010f855d1e
  0x000000010f855d07: mov    %rdx,0x1b0(%rcx)
  0x000000010f855d0e: movq   $0x1,0x1b8(%rcx)
  0x000000010f855d19: jmpq   0x000000010f855d4a
  0x000000010f855d1e: cmpq   $0x0,0x1c0(%rcx)
  0x000000010f855d29: jne    0x000000010f855d42
  0x000000010f855d2b: mov    %rdx,0x1c0(%rcx)
  0x000000010f855d32: movq   $0x1,0x1c8(%rcx)
  0x000000010f855d3d: jmpq   0x000000010f855d4a
  0x000000010f855d42: addq   $0x1,0x1a8(%rcx)
  0x000000010f855d4a: mov    %rsi,%rdx
  0x000000010f855d4d: mov    %rdi,%rcx
  0x000000010f855d50: movabs $0x0,%r8           ;   {oop(NULL)}
  0x000000010f855d5a: mov    $0x0,%r9d
  0x000000010f855d60: mov    $0x1,%edi
  0x000000010f855d65: mov    %rbx,%rsi          ;*invokevirtual removeNode
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@35 (line 301)

  0x000000010f855d68: nop
  0x000000010f855d69: nop
  0x000000010f855d6a: nop
  0x000000010f855d6b: nop
  0x000000010f855d6c: nop
  0x000000010f855d6d: nop
  0x000000010f855d6e: nop
  0x000000010f855d6f: callq  0x000000010f7170a0  ; OopMap{off=1012}
                                                ;*invokevirtual removeNode
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@35 (line 301)
                                                ;   {optimized virtual_call}
  0x000000010f855d74: add    $0x80,%rsp
  0x000000010f855d7b: pop    %rbp
  0x000000010f855d7c: test   %eax,-0x8dbac82(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f855d82: retq   
  0x000000010f855d83: mov    %rdi,0x8(%rsp)
  0x000000010f855d88: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f855d90: callq  0x000000010f7d1a20  ; OopMap{rsi=Oop off=1045}
                                                ;*synchronization entry
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@-1 (line 299)
                                                ;   {runtime_call}
  0x000000010f855d95: jmpq   0x000000010f8559e1
  0x000000010f855d9a: callq  0x000000010f7cd0c0  ; OopMap{[96]=Oop off=1055}
                                                ;*getfield key
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@22 (line 300)
                                                ;   {runtime_call}
  0x000000010f855d9f: mov    %rsi,0x8(%rsp)
  0x000000010f855da4: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f855dac: callq  0x000000010f7d1a20  ; OopMap{[96]=Oop rdi=Oop off=1073}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::hash@-1 (line 339)
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@28 (line 301)
                                                ;   {runtime_call}
  0x000000010f855db1: jmpq   0x000000010f855b9d
  0x000000010f855db6: callq  0x000000010f7cd0c0  ; OopMap{[96]=Oop rdi=Oop off=1083}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@28 (line 301)
                                                ;   {runtime_call}
  0x000000010f855dbb: nop
  0x000000010f855dbc: nop
  0x000000010f855dbd: mov    0x2a8(%r15),%rax
  0x000000010f855dc4: movabs $0x0,%r10
  0x000000010f855dce: mov    %r10,0x2a8(%r15)
  0x000000010f855dd5: movabs $0x0,%r10
  0x000000010f855ddf: mov    %r10,0x2b0(%r15)
  0x000000010f855de6: add    $0x80,%rsp
  0x000000010f855ded: pop    %rbp
  0x000000010f855dee: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f855df3: hlt    
  0x000000010f855df4: hlt    
  0x000000010f855df5: hlt    
  0x000000010f855df6: hlt    
  0x000000010f855df7: hlt    
  0x000000010f855df8: hlt    
  0x000000010f855df9: hlt    
  0x000000010f855dfa: hlt    
  0x000000010f855dfb: hlt    
  0x000000010f855dfc: hlt    
  0x000000010f855dfd: hlt    
  0x000000010f855dfe: hlt    
  0x000000010f855dff: hlt    
[Stub Code]
  0x000000010f855e00: nop                       ;   {no_reloc}
  0x000000010f855e01: nop
  0x000000010f855e02: nop
  0x000000010f855e03: nop
  0x000000010f855e04: nop
  0x000000010f855e05: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f855e0f: jmpq   0x000000010f855e0f  ;   {runtime_call}
  0x000000010f855e14: nop
  0x000000010f855e15: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f855e1f: jmpq   0x000000010f855e1f  ;   {runtime_call}
  0x000000010f855e24: nop
  0x000000010f855e25: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010f855e2f: jmpq   0x000000010f855e2f  ;   {runtime_call}
[Exception Handler]
  0x000000010f855e34: callq  0x000000010f7cf120  ;   {runtime_call}
  0x000000010f855e39: mov    %rsp,-0x28(%rsp)
  0x000000010f855e3e: sub    $0x80,%rsp
  0x000000010f855e45: mov    %rax,0x78(%rsp)
  0x000000010f855e4a: mov    %rcx,0x70(%rsp)
  0x000000010f855e4f: mov    %rdx,0x68(%rsp)
  0x000000010f855e54: mov    %rbx,0x60(%rsp)
  0x000000010f855e59: mov    %rbp,0x50(%rsp)
  0x000000010f855e5e: mov    %rsi,0x48(%rsp)
  0x000000010f855e63: mov    %rdi,0x40(%rsp)
  0x000000010f855e68: mov    %r8,0x38(%rsp)
  0x000000010f855e6d: mov    %r9,0x30(%rsp)
  0x000000010f855e72: mov    %r10,0x28(%rsp)
  0x000000010f855e77: mov    %r11,0x20(%rsp)
  0x000000010f855e7c: mov    %r12,0x18(%rsp)
  0x000000010f855e81: mov    %r13,0x10(%rsp)
  0x000000010f855e86: mov    %r14,0x8(%rsp)
  0x000000010f855e8b: mov    %r15,(%rsp)
  0x000000010f855e8f: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f855e99: movabs $0x10f855e39,%rsi  ;   {internal_word}
  0x000000010f855ea3: mov    %rsp,%rdx
  0x000000010f855ea6: and    $0xfffffffffffffff0,%rsp
  0x000000010f855eaa: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f855eaf: hlt    
[Deopt Handler Code]
  0x000000010f855eb0: movabs $0x10f855eb0,%r10  ;   {section_word}
  0x000000010f855eba: push   %r10
  0x000000010f855ebc: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f855ec1: hlt    
  0x000000010f855ec2: hlt    
  0x000000010f855ec3: hlt    
  0x000000010f855ec4: hlt    
  0x000000010f855ec5: hlt    
  0x000000010f855ec6: hlt    
  0x000000010f855ec7: hlt    
Decoding compiled method 0x000000010f855390:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010ec289b0} 'isUpper' '(C)Z' in 'sun/util/locale/LocaleUtils'
  # parm0:    rsi       = char
  #           [sp+0x40]  (sp of caller)
  0x000000010f855500: mov    %eax,-0x14000(%rsp)
  0x000000010f855507: push   %rbp
  0x000000010f855508: sub    $0x30,%rsp
  0x000000010f85550c: movabs $0x10ee474a8,%rax  ;   {metadata(method data for {method} {0x000000010ec289b0} 'isUpper' '(C)Z' in 'sun/util/locale/LocaleUtils')}
  0x000000010f855516: mov    0xdc(%rax),%edi
  0x000000010f85551c: add    $0x8,%edi
  0x000000010f85551f: mov    %edi,0xdc(%rax)
  0x000000010f855525: movabs $0x10ec289b0,%rax  ;   {metadata({method} {0x000000010ec289b0} 'isUpper' '(C)Z' in 'sun/util/locale/LocaleUtils')}
  0x000000010f85552f: and    $0x1ff8,%edi
  0x000000010f855535: cmp    $0x0,%edi
  0x000000010f855538: je     0x000000010f8555de  ;*iload_0
                                                ; - sun.util.locale.LocaleUtils::isUpper@0 (line 160)

  0x000000010f85553e: cmp    $0x41,%esi
  0x000000010f855541: movabs $0x10ee474a8,%rax  ;   {metadata(method data for {method} {0x000000010ec289b0} 'isUpper' '(C)Z' in 'sun/util/locale/LocaleUtils')}
  0x000000010f85554b: movabs $0x108,%rdi
  0x000000010f855555: jl     0x000000010f855565
  0x000000010f85555b: movabs $0x118,%rdi
  0x000000010f855565: mov    (%rax,%rdi,1),%rbx
  0x000000010f855569: lea    0x1(%rbx),%rbx
  0x000000010f85556d: mov    %rbx,(%rax,%rdi,1)
  0x000000010f855571: jl     0x000000010f8555b0  ;*if_icmplt
                                                ; - sun.util.locale.LocaleUtils::isUpper@3 (line 160)

  0x000000010f855577: cmp    $0x5a,%esi
  0x000000010f85557a: movabs $0x10ee474a8,%rax  ;   {metadata(method data for {method} {0x000000010ec289b0} 'isUpper' '(C)Z' in 'sun/util/locale/LocaleUtils')}
  0x000000010f855584: movabs $0x128,%rsi
  0x000000010f85558e: jg     0x000000010f85559e
  0x000000010f855594: movabs $0x138,%rsi
  0x000000010f85559e: mov    (%rax,%rsi,1),%rdi
  0x000000010f8555a2: lea    0x1(%rdi),%rdi
  0x000000010f8555a6: mov    %rdi,(%rax,%rsi,1)
  0x000000010f8555aa: jle    0x000000010f8555ba  ;*if_icmpgt
                                                ; - sun.util.locale.LocaleUtils::isUpper@9 (line 160)

  0x000000010f8555b0: mov    $0x0,%eax
  0x000000010f8555b5: jmpq   0x000000010f8555cf  ;*ireturn
                                                ; - sun.util.locale.LocaleUtils::isUpper@17 (line 160)

  0x000000010f8555ba: movabs $0x10ee474a8,%rax  ;   {metadata(method data for {method} {0x000000010ec289b0} 'isUpper' '(C)Z' in 'sun/util/locale/LocaleUtils')}
  0x000000010f8555c4: incl   0x148(%rax)
  0x000000010f8555ca: mov    $0x1,%eax          ;*goto
                                                ; - sun.util.locale.LocaleUtils::isUpper@13 (line 160)

  0x000000010f8555cf: and    $0x1,%eax
  0x000000010f8555d2: add    $0x30,%rsp
  0x000000010f8555d6: pop    %rbp
  0x000000010f8555d7: test   %eax,-0x8dba4dd(%rip)        # 0x0000000106a9b100
                                                ;   {poll_return}
  0x000000010f8555dd: retq   
  0x000000010f8555de: mov    %rax,0x8(%rsp)
  0x000000010f8555e3: movq   $0xffffffffffffffff,(%rsp)
  0x000000010f8555eb: callq  0x000000010f7d1a20  ; OopMap{off=240}
                                                ;*synchronization entry
                                                ; - sun.util.locale.LocaleUtils::isUpper@-1 (line 160)
                                                ;   {runtime_call}
  0x000000010f8555f0: jmpq   0x000000010f85553e
  0x000000010f8555f5: nop
  0x000000010f8555f6: nop
  0x000000010f8555f7: mov    0x2a8(%r15),%rax
  0x000000010f8555fe: movabs $0x0,%r10
  0x000000010f855608: mov    %r10,0x2a8(%r15)
  0x000000010f85560f: movabs $0x0,%r10
  0x000000010f855619: mov    %r10,0x2b0(%r15)
  0x000000010f855620: add    $0x30,%rsp
  0x000000010f855624: pop    %rbp
  0x000000010f855625: jmpq   0x000000010f73f560  ;   {runtime_call}
  0x000000010f85562a: hlt    
  0x000000010f85562b: hlt    
  0x000000010f85562c: hlt    
  0x000000010f85562d: hlt    
  0x000000010f85562e: hlt    
  0x000000010f85562f: hlt    
  0x000000010f855630: hlt    
  0x000000010f855631: hlt    
  0x000000010f855632: hlt    
  0x000000010f855633: hlt    
  0x000000010f855634: hlt    
  0x000000010f855635: hlt    
  0x000000010f855636: hlt    
  0x000000010f855637: hlt    
  0x000000010f855638: hlt    
  0x000000010f855639: hlt    
  0x000000010f85563a: hlt    
  0x000000010f85563b: hlt    
  0x000000010f85563c: hlt    
  0x000000010f85563d: hlt    
  0x000000010f85563e: hlt    
  0x000000010f85563f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010f855640: callq  0x000000010f7cf120  ;   {no_reloc}
  0x000000010f855645: mov    %rsp,-0x28(%rsp)
  0x000000010f85564a: sub    $0x80,%rsp
  0x000000010f855651: mov    %rax,0x78(%rsp)
  0x000000010f855656: mov    %rcx,0x70(%rsp)
  0x000000010f85565b: mov    %rdx,0x68(%rsp)
  0x000000010f855660: mov    %rbx,0x60(%rsp)
  0x000000010f855665: mov    %rbp,0x50(%rsp)
  0x000000010f85566a: mov    %rsi,0x48(%rsp)
  0x000000010f85566f: mov    %rdi,0x40(%rsp)
  0x000000010f855674: mov    %r8,0x38(%rsp)
  0x000000010f855679: mov    %r9,0x30(%rsp)
  0x000000010f85567e: mov    %r10,0x28(%rsp)
  0x000000010f855683: mov    %r11,0x20(%rsp)
  0x000000010f855688: mov    %r12,0x18(%rsp)
  0x000000010f85568d: mov    %r13,0x10(%rsp)
  0x000000010f855692: mov    %r14,0x8(%rsp)
  0x000000010f855697: mov    %r15,(%rsp)
  0x000000010f85569b: movabs $0x1095de684,%rdi  ;   {external_word}
  0x000000010f8556a5: movabs $0x10f855645,%rsi  ;   {internal_word}
  0x000000010f8556af: mov    %rsp,%rdx
  0x000000010f8556b2: and    $0xfffffffffffffff0,%rsp
  0x000000010f8556b6: callq  0x00000001094071f6  ;   {runtime_call}
  0x000000010f8556bb: hlt    
[Deopt Handler Code]
  0x000000010f8556bc: movabs $0x10f8556bc,%r10  ;   {section_word}
  0x000000010f8556c6: push   %r10
  0x000000010f8556c8: jmpq   0x000000010f718500  ;   {runtime_call}
  0x000000010f8556cd: hlt    
  0x000000010f8556ce: hlt    
  0x000000010f8556cf: hlt    
3771
