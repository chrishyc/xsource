<?xml version="1.0" encoding="UTF-8"?>
<beans default-lazy-init="false" xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx">


    <context:property-placeholder location="jdbc.properties"/>

    <!--外部配置bean使用xml方式-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!--事务配置 xml方式-->
    <bean id="transactionManager1" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--定制事务细节，传播行为、隔离级别等-->
    <!--解析的标签为advice时，会使用TxAdviceBeanDefinitionParser解析器，此解析器生成的BeanDefinition包含TransactionInterceptor-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager1">
        <tx:attributes>
            <!--一般性配置-->
            <tx:method name="*" read-only="false"
                       propagation="REQUIRED" isolation="DEFAULT" timeout="-1"/>
            <!--针对查询的覆盖性配置-->
            <tx:method name="query*" read-only="true"
                       propagation="SUPPORTS"/>
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <!-- advice-ref指向增强=横切逻辑+方位-->
        <!--advisor会生成对应的eanDefinition-->
        <aop:advisor advice-ref="txAdvice" pointcut="execution(* tx.xml.XmlService.*(..))"/>
    </aop:config>
    <bean id="service" class="tx.xml.XmlService"/>

    <!--    <tx:annotation-driven transaction-manager="transactionManager1"/>-->

</beans>
