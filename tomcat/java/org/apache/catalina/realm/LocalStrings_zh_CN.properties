# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

combinedRealm.authFail=无法使用域[{1}]对用户[{0}]进行身份验证
combinedRealm.authSuccess=认证用户[{0}]，权限[{1}]

dataSourceRealm.getPassword.exception=获取用户名[{0}]对应的密码失败。
dataSourceRealm.getRoles.exception=:)检索角色[{0}]异常

jaasCallback.username=返回用户名 [{0}]

jaasRealm.authenticateFailure=用户 [{0}] 认证失败
jaasRealm.authenticateSuccess=用户名 [{0}] 已被成功认证为身份 [{1}] -- 主体也已创建
jaasRealm.failedLogin=由于登录失败，用户名 [{0}] 无法授权
jaasRealm.loginContextCreated=为用户名创建的JAAS 登陆上下文[{0}]
jaasRealm.loginException=登录异常，认证用户名  [{0}]

jdbcRealm.authenticateFailure=用户名称[{0}]未校验成功
jdbcRealm.open=打开数据库连接时发生异常

jndiRealm.authenticateFailure=用户名[{0}]没有成功认证
jndiRealm.authenticateSuccess=用户名[{0}]成功认证
jndiRealm.cipherSuites=启用 [{0}] 作为 TLS 连接的加密套件。
jndiRealm.exception=执行认证异常
jndiRealm.negotiatedTls=使用协议[{0}]协商的TLS连接
jndiRealm.open=打开目录服务器链接异常

lockOutRealm.authLockedUser=尝试对锁定的用户[{0}]进行身份验证

memoryRealm.loadExist=内存数据库文件[{0}]无法读取
memoryRealm.loadPath=从内存数据库文件 [{0}] 加载用户
memoryRealm.readXml=读取内存数据库文件时出现异常
memoryRealm.xmlFeatureEncoding=配置Digester以允许XML文件中的java编码名称的异常。只支持IANA编码名称。

realmBase.authenticateFailure=用户名 [{0}] 认证失败
realmBase.createUsernameRetriever.ClassCastException=类[{0}] 不是一个X509UsernameRetriever.
realmBase.digest=对用户凭证摘要发生错误
realmBase.forbidden=已拒绝访问所请求的资源
realmBase.hasRoleFailure=用户[{0}]没有角色[{1}]
realmBase.hasRoleSuccess=用户名[{0}] 有角色[{1}]

userDatabaseRealm.noDatabase=未找到key[{0}]对应的UserDatabase组件。
