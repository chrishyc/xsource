<?xml version='1.0' encoding='UTF-8'?>
<hotspot_log version='160 1' process='76627' time_ms='1618272662250'>
<vm_version>
<name>
Java HotSpot(TM) 64-Bit Server VM
</name>
<release>
25.212-b10
</release>
<info>
Java HotSpot(TM) 64-Bit Server VM (25.212-b10) for bsd-amd64 JRE (1.8.0_212-b10), built on Apr  1 2019 23:10:56 by &quot;java_re&quot; with gcc 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2336.11.00)
</info>
</vm_version>
<vm_arguments>
<args>
-XX:+UnlockDiagnosticVMOptions -XX:+TraceClassLoading -XX:+PrintAssembly -XX:+LogCompilation -XX:LogFile=volatileTest.log -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=56504:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8 
</args>
<command>
jdk.VolatileTest
</command>
<launcher>
SUN_STANDARD
</launcher>
<properties>
java.vm.specification.name=Java Virtual Machine Specification
java.vm.version=25.212-b10
java.vm.name=Java HotSpot(TM) 64-Bit Server VM
java.vm.info=mixed mode, sharing
java.ext.dirs=/Users/chris/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java
java.endorsed.dirs=/Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/endorsed
sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib
java.library.path=/Users/chris/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
java.home=/Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre
java.class.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/deploy.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/ext/cldrdata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/ext/dnsns.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/ext/jaccess.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/ext/jfxrt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/ext/localedata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/ext/nashorn.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/ext/sunec.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/ext/sunjce_provider.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/ext/sunpkcs11.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/ext/zipfs.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/javaws.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/jfxswt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/management-agent.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/plugin.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/lib/ant-javafx.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/lib/dt.jar
sun.boot.class.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/classes
java.vm.specification.vendor=Oracle Corporation
java.vm.specification.version=1.8
java.vm.vendor=Oracle Corporation
file.encoding=UTF-8
sun.java.command=jdk.VolatileTest
sun.java.launcher=SUN_STANDARD
</properties>
</vm_arguments>
<tty>
<writer thread='3075'/>
[Opened /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Object from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.Serializable from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Comparable from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.CharSequence from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.String from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.AnnotatedElement from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.GenericDeclaration from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.Type from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Class from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Cloneable from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassLoader from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.System from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Throwable from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Error from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ThreadDeath from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Exception from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.RuntimeException from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.SecurityManager from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.ProtectionDomain from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.AccessControlContext from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.SecureClassLoader from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ReflectiveOperationException from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassNotFoundException from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.LinkageError from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.NoClassDefFoundError from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassCastException from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ArrayStoreException from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.VirtualMachineError from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.OutOfMemoryError from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.StackOverflowError from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.IllegalMonitorStateException from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.Reference from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.SoftReference from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.WeakReference from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.FinalReference from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.PhantomReference from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Cleaner from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.Finalizer from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.ReferenceQueue from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Runnable from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Thread from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Thread$UncaughtExceptionHandler from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ThreadGroup from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Map from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Dictionary from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Hashtable from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Properties from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.AccessibleObject from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.Member from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.Field from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.Parameter from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.Executable from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.Method from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.Constructor from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.MagicAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.MethodAccessor from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.MethodAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.ConstructorAccessor from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.ConstructorAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.DelegatingClassLoader from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.ConstantPool from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.FieldAccessor from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.FieldAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.UnsafeFieldAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.UnsafeStaticFieldAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.annotation.Annotation from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.CallerSensitive from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandle from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.DirectMethodHandle from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MemberName from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleNatives from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.LambdaForm from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodType from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.BootstrapMethodError from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.CallSite from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.ConstantCallSite from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MutableCallSite from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.VolatileCallSite from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Appendable from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.AbstractStringBuilder from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.StringBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.StringBuilder from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Unsafe from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.AutoCloseable from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.Closeable from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.InputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ByteArrayInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.File from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.URLClassLoader from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.URL from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.jar.Manifest from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Launcher from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Launcher$AppClassLoader from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Launcher$ExtClassLoader from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.CodeSource from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.StackTraceElement from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.Buffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Boolean from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Character from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Number from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Float from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Double from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Byte from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Short from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Integer from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Long from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.NullPointerException from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ArithmeticException from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ObjectStreamField from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Comparator from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.String$CaseInsensitiveComparator from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.Guard from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.Permission from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.BasicPermission from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.RuntimePermission from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.AccessController from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.ReflectPermission from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.PrivilegedAction from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.ReflectionFactory$GetReflectionFactoryAction from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.cert.Certificate from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Iterable from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collection from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.List from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.RandomAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.AbstractCollection from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.AbstractList from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Vector from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Stack from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.ReflectionFactory from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.Reference$Lock from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.Reference$ReferenceHandler from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.InterruptedException from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.ArrayList from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Set from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.AbstractSet from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections$EmptySet from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections$EmptyList from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.AbstractMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections$EmptyMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections$UnmodifiableCollection from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections$UnmodifiableList from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections$UnmodifiableRandomAccessList from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.ReferenceQueue$Null from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.ReferenceQueue$Lock from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JavaLangRefAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.Reference$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.SharedSecrets from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.IncompatibleClassChangeError from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.NoSuchMethodError from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.Reflection from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.HashMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Map$Entry from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.HashMap$Node from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.VM from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Hashtable$Entry from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Math from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.Finalizer$FinalizerThread from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.charset.Charset from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.charset.spi.CharsetProvider from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.FastCharsetProvider from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.StandardCharsets from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.util.PreHashedMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.StandardCharsets$Aliases from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.StandardCharsets$Classes from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.StandardCharsets$Cache from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ThreadLocal from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicInteger from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Class$3 from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Class$ReflectionData from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Class$Atomic from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.generics.repository.AbstractRepository from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.generics.repository.GenericDeclRepository from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.generics.repository.ClassRepository from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Class$AnnotationData from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.annotation.AnnotationType from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.WeakHashMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassValue$ClassValueMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.Modifier from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.LangReflectAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.ReflectAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Arrays from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.HistoricallyNamedCharset from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.Unicode from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.UTF_8 from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Class$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.ReflectionFactory$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.NativeConstructorAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.DelegatingConstructorAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.StringCoding from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ThreadLocal$ThreadLocalMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ThreadLocal$ThreadLocalMap$Entry from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.StringCoding$StringDecoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.ArrayDecoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.charset.CharsetDecoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.UTF_8$Decoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.charset.CodingErrorAction from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Hashtable$EntrySet from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections$SynchronizedCollection from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections$SynchronizedSet from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Objects from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Enumeration from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Iterator from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Hashtable$Enumerator from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Runtime from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Version from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FileInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FileDescriptor from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JavaIOFileDescriptorAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FileDescriptor$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.Flushable from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.OutputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FileOutputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FilterInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.BufferedInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicReferenceFieldUpdater from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.PrivilegedExceptionAction from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.misc.ReflectUtil from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FilterOutputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.PrintStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.BufferedOutputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.Writer from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.OutputStreamWriter from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.StreamEncoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.action.GetPropertyAction from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.ArrayEncoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.charset.CharsetEncoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.UTF_8$Encoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.ByteBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.HeapByteBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.Bits from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.ByteOrder from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicLong from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JavaNioAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.Bits$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.BufferedWriter from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.DefaultFileSystem from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FileSystem from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.UnixFileSystem from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ExpiringCache from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.LinkedHashMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ExpiringCache$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Enum from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.File$PathStatus from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.file.Watchable from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.file.Path from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.StringCoding$StringEncoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassLoader$3 from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ExpiringCache$Entry from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.LinkedHashMap$Entry from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassLoader$NativeLibrary from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Terminator from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.SignalHandler from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Terminator$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Signal from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.NativeSignalHandler from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Integer$IntegerCache from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.OSEnvironment from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JavaLangAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.System$2 from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.IllegalArgumentException from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Compiler from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Compiler$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.URLStreamHandlerFactory from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Launcher$Factory from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.util.Debug from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassLoader$ParallelLoaders from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.WeakHashMap$Entry from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections$SetFromMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.WeakHashMap$KeySet from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JavaNetAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.URLClassLoader$7 from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Launcher$ExtClassLoader$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.StringTokenizer from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.MetaIndex from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Readable from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.Reader from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.BufferedReader from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.InputStreamReader from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FileReader from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.StreamDecoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.CharBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.HeapCharBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.charset.CoderResult from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.charset.CoderResult$Cache from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.charset.CoderResult$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.charset.CoderResult$2 from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.Array from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.HashMap$TreeNode from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FileInputStream$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.www.ParseUtil from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.BitSet from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Locale from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.util.locale.LocaleObjectCache from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Locale$Cache from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.locks.Lock from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.locks.ReentrantLock from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$Segment from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$Node from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$CounterCell from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$CollectionView from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$KeySetView from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$ValuesView from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$EntrySetView from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.util.locale.BaseLocale from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.util.locale.BaseLocale$Cache from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.util.locale.BaseLocale$Key from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.util.locale.LocaleObjectCache$CacheEntry from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Locale$LocaleKey from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.util.locale.LocaleUtils from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.CharacterData from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.CharacterDataLatin1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.Parts from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.URLStreamHandler from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.www.protocol.file.Handler from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JavaSecurityAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.ProtectionDomain$JavaSecurityAccessImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JavaSecurityProtectionDomainAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.ProtectionDomain$2 from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.ProtectionDomain$Key from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.Principal from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.HashSet from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.URLClassPath from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.www.protocol.jar.Handler from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Launcher$AppClassLoader$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.SystemClassLoaderAction from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.InternalError from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.instrument.Instrumentation from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.instrument.InstrumentationImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.instrument.TransformerManager from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.instrument.TransformerManager$TransformerInfo from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.URLClassLoader$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.util.URLUtil from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.URLClassPath$3 from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.URLClassPath$Loader from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.URLClassPath$JarLoader from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.ZipConstants from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.ZipFile from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JavaUtilZipFileAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.ZipFile$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.URLClassPath$JarLoader$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.FileURLMapper from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.jar.JarFile from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JavaUtilJarAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.jar.JavaUtilJarAccessImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.charset.StandardCharsets from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.US_ASCII from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.ISO_8859_1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.UTF_16BE from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.UTF_16LE from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.UTF_16 from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Queue from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Deque from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.ArrayDeque from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.ZipCoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.PerfCounter from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Perf$GetPerfAction from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Perf from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.PerfCounter$CoreCounters from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.ch.DirectBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.MappedByteBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.DirectByteBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.LongBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.DirectLongBufferU from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JarIndex from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.ExtensionDependency from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.ZipEntry from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.jar.JarEntry from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.jar.JarFile$JarFileEntry from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.ZipFile$ZipFileInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.Inflater from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.ZStreamRef from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.InflaterInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.ZipFile$ZipFileInflaterInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.IOUtils from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.AbstractSequentialList from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.LinkedList from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.LinkedList$Node from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.URLClassPath$FileLoader from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.ZipUtils from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.TimeUnit from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.TimeUnit$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.TimeUnit$2 from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.TimeUnit$3 from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.TimeUnit$4 from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.TimeUnit$5 from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.TimeUnit$6 from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.TimeUnit$7 from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.file.attribute.FileTime from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.jar.JarVerifier from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.CodeSigner from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.jar.JarVerifier$3 from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ByteArrayOutputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.jar.Attributes from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.jar.Manifest$FastInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.jar.Attributes$Name from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.ASCIICaseInsensitiveComparator from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.IOException from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FileNotFoundException from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.PrivilegedActionException from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.ThreadLocalCoders from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.ThreadLocalCoders$Cache from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.ThreadLocalCoders$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.ThreadLocalCoders$2 from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Resource from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.URLClassPath$JarLoader$2 from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Package from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.ByteBuffered from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.PermissionCollection from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.Permissions from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.URLConnection from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.www.URLConnection from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.www.protocol.file.FileURLConnection from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.www.MessageHeader from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FilePermission from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FilePermission$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FilePermissionCollection from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.AllPermission from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.UnresolvedPermission from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.BasicPermissionCollection from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded com.intellij.rt.execution.application.AppMainV2$Agent from file:/Applications/IntelliJ%20IDEA.app/Contents/lib/idea_rt.jar]
[Loaded sun.instrument.InstrumentationImpl$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.NativeMethodAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.DelegatingMethodAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded com.intellij.rt.execution.application.AppMainV2 from file:/Applications/IntelliJ%20IDEA.app/Contents/lib/idea_rt.jar]
[Loaded java.lang.reflect.InvocationTargetException from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.NoSuchMethodException from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$ForwardingNode from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded com.intellij.rt.execution.application.AppMainV2$1 from file:/Applications/IntelliJ%20IDEA.app/Contents/lib/idea_rt.jar]
<writer thread='14339'/>
[Loaded java.net.Socket from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.SocketAddress from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.InetSocketAddress from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.InetAddress from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.InetSocketAddress$InetSocketAddressHolder from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.action.GetBooleanAction from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.InetAddress$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.InetAddress$InetAddressHolder from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.InetAddress$Cache from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.InetAddress$Cache$Type from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.InetAddressImplFactory from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.InetAddressImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.Inet6AddressImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='17667'/>
<thread_logfile thread='17667' filename='/var/folders/b0/c4mym3sn3cd2z0kmw8pqhqdr0000gn/T//hs_c17667_pid76627.log'/>
<writer thread='14339'/>
[Loaded sun.net.spi.nameservice.NameService from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.InetAddress$2 from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.util.IPAddressUtil from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.Inet4Address from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.SocksConsts from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.SocketOptions from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.SocketImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.AbstractPlainSocketImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.PlainSocketImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.SocksSocketImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.AbstractPlainSocketImpl$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.Inet6Address from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.Inet6Address$Inet6AddressHolder from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.SocketException from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.SocksSocketImpl$3 from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.ProxySelector from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.spi.DefaultProxySelector from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.spi.DefaultProxySelector$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.NetProperties from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.NetProperties$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Properties$LineReader from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.URI from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.URI$Parser from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.spi.DefaultProxySelector$NonProxyInfo from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.spi.DefaultProxySelector$3 from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.Proxy from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.Proxy$Type from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.ArrayList$Itr from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.NetHooks from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.NetHooks$Provider from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.sdp.SdpProvider from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.NetworkInterface from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.NetworkInterface$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='14851'/>
<thread_logfile thread='14851' filename='/var/folders/b0/c4mym3sn3cd2z0kmw8pqhqdr0000gn/T//hs_c14851_pid76627.log'/>
<writer thread='14339'/>
Loaded disassembler from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/server/hsdis-amd64.dylib
Decoding compiled method 0x0000000104072ed0:
Code:
[Disassembling for mach=&apos;i386:x86-64&apos;]
[Entry Point]
  # {method} {0x0000000117419930} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx       = int
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8        = int
  # parm4:    r9        = int
  #           [sp+0x60]  (sp of caller)
  0x0000000104073040: mov    0x8(%rsi),%r10d
  0x0000000104073044: shl    $0x3,%r10
  0x0000000104073048: cmp    %r10,%rax
  0x000000010407304b: je     0x0000000104073058
  0x0000000104073051: jmpq   0x0000000104045e60  ;   {runtime_call}
  0x0000000104073056: xchg   %ax,%ax
[Verified Entry Point]
  0x0000000104073058: mov    %eax,-0x14000(%rsp)
  0x000000010407305f: push   %rbp
  0x0000000104073060: mov    %rsp,%rbp
  0x0000000104073063: sub    $0x50,%rsp
  0x0000000104073067: mov    %r9,(%rsp)
  0x000000010407306b: mov    %r8,%r9
  0x000000010407306e: mov    %rcx,0x18(%rsp)
  0x0000000104073073: cmp    $0x0,%rcx
  0x0000000104073077: lea    0x18(%rsp),%r8
  0x000000010407307c: cmove  0x18(%rsp),%r8
  0x0000000104073082: mov    %rdx,%rcx
  0x0000000104073085: mov    %rsi,0x8(%rsp)
  0x000000010407308a: cmp    $0x0,%rsi
  0x000000010407308e: lea    0x8(%rsp),%rdx
  0x0000000104073093: cmove  0x8(%rsp),%rdx
  0x0000000104073099: movabs $0x795580c78,%r14  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x00000001040730a3: mov    %r14,0x38(%rsp)
  0x00000001040730a8: lea    0x38(%rsp),%r14
  0x00000001040730ad: mov    %r14,%rsi          ; OopMap{[24]=Oop [8]=Oop [56]=Oop off=112}
  0x00000001040730b0: movabs $0x1040730b0,%r10  ;   {section_word}
  0x00000001040730ba: mov    %r10,0x1e0(%r15)
  0x00000001040730c1: mov    %rsp,0x1d8(%r15)
  0x00000001040730c8: cmpb   $0x0,-0x371dd15(%rip)        # 0x00000001009553ba
                                                ;   {external_word}
  0x00000001040730cf: je     0x0000000104073113
  0x00000001040730d5: push   %rsi
  0x00000001040730d6: push   %rdx
  0x00000001040730d7: push   %rcx
  0x00000001040730d8: push   %r8
  0x00000001040730da: push   %r9
  0x00000001040730dc: movabs $0x117419930,%rsi  ;   {metadata({method} {0x0000000117419930} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x00000001040730e6: mov    %r15,%rdi
  0x00000001040730e9: test   $0xf,%esp
  0x00000001040730ef: je     0x0000000104073107
  0x00000001040730f5: sub    $0x8,%rsp
  0x00000001040730f9: callq  0x0000000100550064  ;   {runtime_call}
  0x00000001040730fe: add    $0x8,%rsp
  0x0000000104073102: jmpq   0x000000010407310c
  0x0000000104073107: callq  0x0000000100550064  ;   {runtime_call}
  0x000000010407310c: pop    %r9
  0x000000010407310e: pop    %r8
  0x0000000104073110: pop    %rcx
  0x0000000104073111: pop    %rdx
  0x0000000104073112: pop    %rsi
  0x0000000104073113: lea    0x1f8(%r15),%rdi
  0x000000010407311a: movl   $0x4,0x270(%r15)
  0x0000000104073125: callq  0x00000001003a9ea4  ;   {runtime_call}
  0x000000010407312a: vzeroupper 
  0x000000010407312d: movl   $0x5,0x270(%r15)
  0x0000000104073138: lock addl $0x0,(%rsp)
  0x000000010407313d: cmpl   $0x0,-0x37133d7(%rip)        # 0x000000010095fd70
                                                ;   {external_word}
  0x0000000104073147: jne    0x000000010407315b
  0x000000010407314d: cmpl   $0x0,0x30(%r15)
  0x0000000104073155: je     0x0000000104073174
  0x000000010407315b: mov    %r15,%rdi
  0x000000010407315e: mov    %rsp,%r12
  0x0000000104073161: sub    $0x0,%rsp
  0x0000000104073165: and    $0xfffffffffffffff0,%rsp
  0x0000000104073169: callq  0x00000001005d2e1e  ;   {runtime_call}
  0x000000010407316e: mov    %r12,%rsp
  0x0000000104073171: xor    %r12,%r12
  0x0000000104073174: movl   $0x8,0x270(%r15)
  0x000000010407317f: cmpl   $0x1,0x29c(%r15)
  0x000000010407318a: je     0x0000000104073212
  0x0000000104073190: cmpb   $0x0,-0x371dddd(%rip)        # 0x00000001009553ba
                                                ;   {external_word}
  0x0000000104073197: je     0x00000001040731cd
  0x000000010407319d: movabs $0x117419930,%rsi  ;   {metadata({method} {0x0000000117419930} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x00000001040731a7: mov    %r15,%rdi
  0x00000001040731aa: test   $0xf,%esp
  0x00000001040731b0: je     0x00000001040731c8
  0x00000001040731b6: sub    $0x8,%rsp
  0x00000001040731ba: callq  0x000000010054ffd6  ;   {runtime_call}
  0x00000001040731bf: add    $0x8,%rsp
  0x00000001040731c3: jmpq   0x00000001040731cd
  0x00000001040731c8: callq  0x000000010054ffd6  ;   {runtime_call}
  0x00000001040731cd: movabs $0x0,%r10
  0x00000001040731d7: mov    %r10,0x1d8(%r15)
  0x00000001040731de: movabs $0x0,%r10
  0x00000001040731e8: mov    %r10,0x1e0(%r15)
  0x00000001040731ef: mov    0x38(%r15),%rcx
  0x00000001040731f3: movl   $0x0,0x100(%rcx)
  0x00000001040731fd: leaveq 
  0x00000001040731fe: cmpq   $0x0,0x8(%r15)
  0x0000000104073206: jne    0x000000010407320d
  0x000000010407320c: retq   
  0x000000010407320d: jmpq   Stub::forward exception  ;   {runtime_call}
  0x0000000104073212: mov    %rsp,%r12
  0x0000000104073215: sub    $0x0,%rsp
  0x0000000104073219: and    $0xfffffffffffffff0,%rsp
  0x000000010407321d: callq  0x000000010054dd1c  ;   {runtime_call}
  0x0000000104073222: mov    %r12,%rsp
  0x0000000104073225: xor    %r12,%r12
  0x0000000104073228: jmpq   0x0000000104073190
  0x000000010407322d: hlt    
  0x000000010407322e: hlt    
  0x000000010407322f: hlt    
<nmethod compile_id='1' compile_kind='c2n' level='0' entry='0x0000000104073040' size='864' address='0x0000000104072ed0' relocation_offset='296' consts_offset='864' insts_offset='368' method='java/lang/System arraycopy (Ljava/lang/Object;ILjava/lang/Object;II)V' bytes='0' count='7040' iicount='7040' stamp='0.458'/>
[Loaded java.net.InterfaceAddress from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.DefaultInterface from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.NetworkInterface$2 from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='17155'/>
<thread_logfile thread='17155' filename='/var/folders/b0/c4mym3sn3cd2z0kmw8pqhqdr0000gn/T//hs_c17155_pid76627.log'/>
<writer thread='3075'/>
[Loaded java.lang.invoke.MethodHandleImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleImpl$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
<task_queued compile_id='2' method='java/util/Arrays copyOf ([CI)[C' bytes='19' count='768' iicount='768' level='3' stamp='0.464' comment='tiered' hot_count='768'/>
<writer thread='17155'/>
Decoding compiled method 0x0000000104103d10:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000011751af20} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;
  # parm0:    rsi:rsi   = &apos;[C&apos;
  # parm1:    rdx       = int
  #           [sp+0x70]  (sp of caller)
  0x0000000104103ea0: mov    %eax,-0x14000(%rsp)
  0x0000000104103ea7: push   %rbp
  0x0000000104103ea8: sub    $0x60,%rsp
  0x0000000104103eac: mov    %rsi,%r8
  0x0000000104103eaf: mov    %rdx,%r9
  0x0000000104103eb2: movabs $0x117627690,%rbx  ;   {metadata(method data for {method} {0x000000011751af20} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000104103ebc: mov    0xdc(%rbx),%edx
  0x0000000104103ec2: add    $0x8,%edx
  0x0000000104103ec5: mov    %edx,0xdc(%rbx)
  0x0000000104103ecb: movabs $0x11751af20,%rbx  ;   {metadata({method} {0x000000011751af20} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000104103ed5: and    $0x1ff8,%edx
  0x0000000104103edb: cmp    $0x0,%edx
  0x0000000104103ede: je     0x000000010410408a  ;*iload_1
                                                ; - java.util.Arrays::copyOf@0 (line 3332)

  0x0000000104103ee4: mov    %r9,%rbx
  0x0000000104103ee7: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000104103ef1: movslq %ebx,%rbx
  0x0000000104103ef4: mov    %rbx,%rdi
  0x0000000104103ef7: cmp    $0xffffff,%rbx
  0x0000000104103efe: ja     0x00000001041040a1
  0x0000000104103f04: movabs $0x17,%rsi
  0x0000000104103f0e: lea    (%rsi,%rbx,2),%rsi
  0x0000000104103f12: and    $0xfffffffffffffff8,%rsi
  0x0000000104103f16: mov    0x60(%r15),%rax
  0x0000000104103f1a: lea    (%rax,%rsi,1),%rsi
  0x0000000104103f1e: cmp    0x70(%r15),%rsi
  0x0000000104103f22: ja     0x00000001041040a1
  0x0000000104103f28: mov    %rsi,0x60(%r15)
  0x0000000104103f2c: sub    %rax,%rsi
  0x0000000104103f2f: movq   $0x1,(%rax)
  0x0000000104103f36: mov    %rdx,%rcx
  0x0000000104103f39: shr    $0x3,%rcx
  0x0000000104103f3d: mov    %ecx,0x8(%rax)
  0x0000000104103f40: mov    %ebx,0xc(%rax)
  0x0000000104103f43: sub    $0x10,%rsi
  0x0000000104103f47: je     0x0000000104103f5e
  0x0000000104103f4d: xor    %rbx,%rbx
  0x0000000104103f50: shr    $0x3,%rsi
  0x0000000104103f54: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000104103f59: dec    %rsi
  0x0000000104103f5c: jne    0x0000000104103f54  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)

  0x0000000104103f5e: mov    0xc(%r8),%esi      ;*arraylength
                                                ; - java.util.Arrays::copyOf@9 (line 3333)
                                                ; implicit exception: dispatches to 0x00000001041040ab
  0x0000000104103f62: movabs $0x117627690,%rdx  ;   {metadata(method data for {method} {0x000000011751af20} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000104103f6c: addq   $0x1,0x108(%rdx)
  0x0000000104103f74: movabs $0x1175ca708,%rdx  ;   {metadata(method data for {method} {0x00000001174f67d8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000104103f7e: mov    0xdc(%rdx),%ecx
  0x0000000104103f84: add    $0x8,%ecx
  0x0000000104103f87: mov    %ecx,0xdc(%rdx)
  0x0000000104103f8d: movabs $0x1174f67d8,%rdx  ;   {metadata({method} {0x00000001174f67d8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000104103f97: and    $0x7ffff8,%ecx
  0x0000000104103f9d: cmp    $0x0,%ecx
  0x0000000104103fa0: je     0x00000001041040b0
  0x0000000104103fa6: cmp    %r9d,%esi
  0x0000000104103fa9: movabs $0x1175ca708,%rdx  ;   {metadata(method data for {method} {0x00000001174f67d8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000104103fb3: movabs $0x108,%rcx
  0x0000000104103fbd: jg     0x0000000104103fcd
  0x0000000104103fc3: movabs $0x118,%rcx
  0x0000000104103fcd: mov    (%rdx,%rcx,1),%rdi
  0x0000000104103fd1: lea    0x1(%rdi),%rdi
  0x0000000104103fd5: mov    %rdi,(%rdx,%rcx,1)
  0x0000000104103fd9: jg     0x0000000104103ff2  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)

  0x0000000104103fdf: movabs $0x1175ca708,%rdx  ;   {metadata(method data for {method} {0x00000001174f67d8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000104103fe9: incl   0x128(%rdx)
  0x0000000104103fef: mov    %rsi,%r9           ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)

  0x0000000104103ff2: movabs $0x117627690,%rsi  ;   {metadata(method data for {method} {0x000000011751af20} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000104103ffc: addq   $0x1,0x118(%rsi)
  0x0000000104104004: mov    %r8,%rsi
  0x0000000104104007: mov    $0x0,%edx
  0x000000010410400c: mov    %rax,%rcx
  0x000000010410400f: mov    $0x0,%r8d
  0x0000000104104015: mov    %rax,0x50(%rsp)
  0x000000010410401a: lea    (%rdx,%r9,1),%rdi
  0x000000010410401e: cmp    0xc(%rsi),%edi
  0x0000000104104021: ja     0x00000001041040c7
  0x0000000104104027: lea    (%r8,%r9,1),%rdi
  0x000000010410402b: cmp    0xc(%rcx),%edi
  0x000000010410402e: ja     0x00000001041040c7
  0x0000000104104034: test   %r9d,%r9d
  0x0000000104104037: jl     0x00000001041040c7
  0x000000010410403d: je     0x0000000104104079
  0x0000000104104043: movslq %edx,%rdx
  0x0000000104104046: movslq %r8d,%r8
  0x0000000104104049: lea    0x10(%rsi,%rdx,2),%rdi
  0x000000010410404e: lea    0x10(%rcx,%r8,2),%rsi
  0x0000000104104053: mov    %r9,%rdx
  0x0000000104104056: test   $0xf,%esp
  0x000000010410405c: je     0x0000000104104074
  0x0000000104104062: sub    $0x8,%rsp
  0x0000000104104066: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x000000010410406b: add    $0x8,%rsp
  0x000000010410406f: jmpq   0x0000000104104079
  0x0000000104104074: callq  Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ;   {runtime_call}
  0x0000000104104079: mov    0x50(%rsp),%rax
  0x000000010410407e: add    $0x60,%rsp
  0x0000000104104082: pop    %rbp
  0x0000000104104083: test   %eax,-0x30a3f89(%rip)        # 0x0000000101060100
                                                ;   {poll_return}
  0x0000000104104089: retq   
  0x000000010410408a: mov    %rbx,0x8(%rsp)
  0x000000010410408f: movq   $0xffffffffffffffff,(%rsp)
  0x0000000104104097: callq  0x0000000104102d20  ; OopMap{r8=Oop off=508}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ;   {runtime_call}
  0x000000010410409c: jmpq   0x0000000104103ee4
  0x00000001041040a1: callq  0x0000000104070920  ; OopMap{r8=Oop off=518}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ;   {runtime_call}
  0x00000001041040a6: jmpq   0x0000000104103f5e
  0x00000001041040ab: callq  0x0000000104072100  ; OopMap{r8=Oop rax=Oop off=528}
                                                ;*arraylength
                                                ; - java.util.Arrays::copyOf@9 (line 3333)
                                                ;   {runtime_call}
  0x00000001041040b0: mov    %rdx,0x8(%rsp)
  0x00000001041040b5: movq   $0xffffffffffffffff,(%rsp)
  0x00000001041040bd: callq  0x0000000104102d20  ; OopMap{r8=Oop rax=Oop off=546}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ;   {runtime_call}
  0x00000001041040c2: jmpq   0x0000000104103fa6
  0x00000001041040c7: callq  0x0000000104046520  ; OopMap{[80]=Oop off=556}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ;   {static_call}
  0x00000001041040cc: jmp    0x0000000104104079
  0x00000001041040ce: nop
  0x00000001041040cf: nop
  0x00000001041040d0: mov    0x2a8(%r15),%rax
  0x00000001041040d7: movabs $0x0,%r10
  0x00000001041040e1: mov    %r10,0x2a8(%r15)
  0x00000001041040e8: movabs $0x0,%r10
  0x00000001041040f2: mov    %r10,0x2b0(%r15)
  0x00000001041040f9: add    $0x60,%rsp
  0x00000001041040fd: pop    %rbp
  0x00000001041040fe: jmpq   0x0000000104072c60  ;   {runtime_call}
  0x0000000104104103: hlt    
  0x0000000104104104: hlt    
  0x0000000104104105: hlt    
  0x0000000104104106: hlt    
  0x0000000104104107: hlt    
  0x0000000104104108: hlt    
  0x0000000104104109: hlt    
  0x000000010410410a: hlt    
  0x000000010410410b: hlt    
  0x000000010410410c: hlt    
  0x000000010410410d: hlt    
  0x000000010410410e: hlt    
  0x000000010410410f: hlt    
  0x0000000104104110: hlt    
  0x0000000104104111: hlt    
  0x0000000104104112: hlt    
  0x0000000104104113: hlt    
  0x0000000104104114: hlt    
  0x0000000104104115: hlt    
  0x0000000104104116: hlt    
  0x0000000104104117: hlt    
  0x0000000104104118: hlt    
  0x0000000104104119: hlt    
  0x000000010410411a: hlt    
  0x000000010410411b: hlt    
  0x000000010410411c: hlt    
  0x000000010410411d: hlt    
  0x000000010410411e: hlt    
  0x000000010410411f: hlt    
[Stub Code]
  0x0000000104104120: nop                       ;   {no_reloc}
  0x0000000104104121: nop
  0x0000000104104122: nop
  0x0000000104104123: nop
  0x0000000104104124: nop
  0x0000000104104125: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010410412f: jmpq   0x000000010410412f  ;   {runtime_call}
[Exception Handler]
  0x0000000104104134: callq  0x0000000104100420  ;   {runtime_call}
  0x0000000104104139: mov    %rsp,-0x28(%rsp)
  0x000000010410413e: sub    $0x80,%rsp
  0x0000000104104145: mov    %rax,0x78(%rsp)
  0x000000010410414a: mov    %rcx,0x70(%rsp)
  0x000000010410414f: mov    %rdx,0x68(%rsp)
  0x0000000104104154: mov    %rbx,0x60(%rsp)
  0x0000000104104159: mov    %rbp,0x50(%rsp)
  0x000000010410415e: mov    %rsi,0x48(%rsp)
  0x0000000104104163: mov    %rdi,0x40(%rsp)
  0x0000000104104168: mov    %r8,0x38(%rsp)
  0x000000010410416d: mov    %r9,0x30(%rsp)
  0x0000000104104172: mov    %r10,0x28(%rsp)
  0x0000000104104177: mov    %r11,0x20(%rsp)
  0x000000010410417c: mov    %r12,0x18(%rsp)
  0x0000000104104181: mov    %r13,0x10(%rsp)
  0x0000000104104186: mov    %r14,0x8(%rsp)
  0x000000010410418b: mov    %r15,(%rsp)
  0x000000010410418f: movabs $0x100641684,%rdi  ;   {external_word}
  0x0000000104104199: movabs $0x104104139,%rsi  ;   {internal_word}
  0x00000001041041a3: mov    %rsp,%rdx
  0x00000001041041a6: and    $0xfffffffffffffff0,%rsp
  0x00000001041041aa: callq  0x000000010046a1f6  ;   {runtime_call}
  0x00000001041041af: hlt    
[Deopt Handler Code]
  0x00000001041041b0: movabs $0x1041041b0,%r10  ;   {section_word}
  0x00000001041041ba: push   %r10
<writer thread='3075'/>
[Loaded java.util.function.Function from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='17155'/>
  0x00000001041041bc: jmpq   0x0000000104047500  ;   {runtime_call}
  0x00000001041041c1: hlt    
  0x00000001041041c2: hlt    
  0x00000001041041c3: hlt    
  0x00000001041041c4: hlt    
  0x00000001041041c5: hlt    
  0x00000001041041c6: hlt    
  0x00000001041041c7: hlt    
<nmethod compile_id='2' compiler='C1' level='3' entry='0x0000000104103ea0' size='1584' address='0x0000000104103d10' relocation_offset='296' insts_offset='400' stub_offset='1040' scopes_data_offset='1224' scopes_pcs_offset='1352' dependencies_offset='1560' nul_chk_table_offset='1568' method='java/util/Arrays copyOf ([CI)[C' bytes='19' count='768' iicount='768' stamp='0.468'/>
<writer thread='14339'/>
<task_queued compile_id='3' compile_kind='osr' method='java/lang/String indexOf (II)I' bytes='70' count='1845' backedge_count='108544' iicount='1845' osr_bci='37' stamp='0.468' comment='tiered' hot_count='108544'/>
<writer thread='3075'/>
[Loaded java.lang.invoke.MethodHandleImpl$2 from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='14339'/>
[Loaded java.net.Socket$2 from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='3075'/>
[Loaded java.lang.invoke.MethodHandleImpl$3 from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='14339'/>
[Loaded java.net.SocketInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='3075'/>
[Loaded java.lang.ClassValue from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleImpl$4 from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassValue$Entry from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassValue$Identity from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassValue$Version from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='14339'/>
[Loaded sun.nio.cs.US_ASCII$Decoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='3075'/>
[Loaded java.lang.invoke.MemberName$Factory from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleStatics from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleStatics$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
<blob name='MethodHandlesAdapterBlob' size='32000'>
<sect index='1' size='32000' free='31628'/>
</blob>
<task_queued compile_id='4' compile_kind='osr' method='java/lang/String hashCode ()I' bytes='55' count='1782' backedge_count='60416' iicount='1782' osr_bci='24' stamp='0.471' comment='tiered' hot_count='60416'/>
<task_queued compile_id='5' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='2750' backedge_count='5121' iicount='2750' level='3' stamp='0.471' comment='tiered' hot_count='2750'/>
[Loaded sun.misc.PostVMInitHook from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='17155'/>
Decoding compiled method 0x000000010410c8d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000117404618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000010410ca60: mov    0x8(%rsi),%r10d
  0x000000010410ca64: shl    $0x3,%r10
  0x000000010410ca68: cmp    %rax,%r10
  0x000000010410ca6b: jne    0x0000000104045e60  ;   {runtime_call}
  0x000000010410ca71: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010410ca7c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010410ca80: mov    %eax,-0x14000(%rsp)
  0x000000010410ca87: push   %rbp
  0x000000010410ca88: sub    $0x30,%rsp
  0x000000010410ca8c: movabs $0x1175d59e8,%rax  ;   {metadata(method data for {method} {0x0000000117404618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000010410ca96: mov    0xdc(%rax),%edi
  0x000000010410ca9c: add    $0x8,%edi
  0x000000010410ca9f: mov    %edi,0xdc(%rax)
  0x000000010410caa5: movabs $0x117404618,%rax  ;   {metadata({method} {0x0000000117404618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000010410caaf: and    $0x1ff8,%edi
  0x000000010410cab5: cmp    $0x0,%edi
  0x000000010410cab8: je     0x000000010410ce86  ;*aload_0
                                                ; - java.lang.String::equals@0 (line 977)

  0x000000010410cabe: cmp    %rdx,%rsi
  0x000000010410cac1: movabs $0x1175d59e8,%rax  ;   {metadata(method data for {method} {0x0000000117404618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000010410cacb: movabs $0x108,%rdi
  0x000000010410cad5: jne    
<writer thread='3075'/>
[Loaded sun.misc.PostVMInitHook$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='17155'/>
0x000000010410cae5
  0x000000010410cadb: movabs $0x118,%rdi
  0x000000010410cae5: mov    (%rax,%rdi,1),%rbx
  0x000000010410cae9: lea    0x1(%rbx),%rbx
  0x000000010410caed: mov    %rbx,(%rax,%rdi,1)
  0x000000010410caf1: je     0x000000010410ce75  ;*if_acmpne
                                                ; - java.lang.String::equals@2 (line 977)

  0x000000010410caf7: cmp    $0x0,%rdx
  0x000000010410cafb: jne    0x000000010410cb16
  0x000000010410cafd: movabs $0x1175d59e8,%rbx  ;   {metadata(method data for {method} {0x0000000117404618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000010410cb07: orl    $0x100,0x120(%rbx)
  0x000000010410cb11: jmpq   0x000000010410cbd6
  0x000000010410cb16: movabs $0x7c00016d0,%rcx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000010410cb20: mov    0x8(%rdx),%edi
  0x000000010410cb23: shl    $0x3,%rdi
  0x000000010410cb27: cmp    %rdi,%rcx
  0x000000010410cb2a: jne    0x000000010410cbba
  0x000000010410cb30: movabs $0x1175d59e8,%rbx  ;   {metadata(method data for {method} {0x0000000117404618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000010410cb3a: mov    0x8(%rdx),%ecx
  0x000000010410cb3d: shl    $0x3,%rcx
  0x000000010410cb41: cmp    0x130(%rbx),%rcx
  0x000000010410cb48: jne    0x000000010410cb57
  0x000000010410cb4a: addq   $0x1,0x138(%rbx)
  0x000000010410cb52: jmpq   0x000000010410cbdb
  0x000000010410cb57: cmp    0x140(%rbx),%rcx
  0x000000010410cb5e: jne    0x000000010410cb6d
  0x000000010410cb60: addq   $0x1,0x148(%rbx)
  0x000000010410cb68: jmpq   0x000000010410cbdb
  0x000000010410cb6d: cmpq   $0x0,0x130(%rbx)
  0x000000010410cb78: jne    0x000000010410cb91
  0x000000010410cb7a: mov    %rcx,0x130(%rbx)
  0x000000010410cb81: movq   $0x1,0x138(%rbx)
  0x000000010410cb8c: jmpq   0x000000010410cbdb
  0x000000010410cb91: cmpq   $0x0,0x140(%rbx)
  0x000000010410cb9c: jne    0x000000010410cbb5
  0x000000010410cb9e: mov    %rcx,0x140(%rbx)
  0x000000010410cba5: movq   $0x1,0x148(%rbx)
  0x000000010410cbb0: jmpq   0x000000010410cbdb
  0x000000010410cbb5: jmpq   0x000000010410cbdb
  0x000000010410cbba: movabs $0x1175d59e8,%rbx  ;   {metadata(method data for {method} {0x0000000117404618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000010410cbc4: subq   $0x1,0x128(%rbx)
  0x000000010410cbcc: jmpq   0x000000010410cbd6
  0x000000010410cbd1: jmpq   0x000000010410cbdb
  0x000000010410cbd6: xor    %rax,%rax
  0x000000010410cbd9: jmp    0x000000010410cbe5
  0x000000010410cbdb: movabs $0x1,%rax          ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)

  0x000000010410cbe5: cmp    $0x0,%eax
  0x000000010410cbe8: movabs $0x1175d59e8,%rax  ;   {metadata(method data for {method} {0x0000000117404618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000010410cbf2: movabs $0x158,%rdi
  0x000000010410cbfc: je     0x000000010410cc0c
  0x000000010410cc02: movabs $0x168,%rdi
  0x000000010410cc0c: mov    (%rax,%rdi,1),%rbx
  0x000000010410cc10: lea    0x1(%rbx),%rbx
  0x000000010410cc14: mov    %rbx,(%rax,%rdi,1)
  0x000000010410cc18: je     0x000000010410ce64  ;*ifeq
                                                ; - java.lang.String::equals@11 (line 980)

  0x000000010410cc1e: cmp    $0x0,%rdx
  0x000000010410cc22: jne    0x000000010410cc3d
  0x000000010410cc24: movabs $0x1175d59e8,%rbx  ;   {metadata(method data for {method} {0x0000000117404618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000010410cc2e: orl    $0x100,0x170(%rbx)
  0x000000010410cc38: jmpq   0x000000010410ccfd
  0x000000010410cc3d: movabs $0x7c00016d0,%rax  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000010410cc47: mov    0x8(%rdx),%edi
  0x000000010410cc4a: shl    $0x3,%rdi
  0x000000010410cc4e: cmp    %rdi,%rax
  0x000000010410cc51: jne    0x000000010410cce1
  0x000000010410cc57: movabs $0x1175d59e8,%rbx  ;   {metadata(method data for {method} {0x0000000117404618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000010410cc61: mov    0x8(%rdx),%eax
  0x000000010410cc64: shl    $0x3,%rax
  0x000000010410cc68: cmp    0x180(%rbx),%rax
  0x000000010410cc6f: jne    0x000000010410cc7e
  0x000000010410cc71: addq   $0x1,0x188(%rbx)
  0x000000010410cc79: jmpq   0x000000010410ccfd
  0x000000010410cc7e: cmp    0x190(%rbx),%rax
  0x000000010410cc85: jne    0x000000010410cc94
  0x000000010410cc87: addq   $0x1,0x198(%rbx)
  0x000000010410cc8f: jmpq   0x000000010410ccfd
  0x000000010410cc94: cmpq   $0x0,0x180(%rbx)
  0x000000010410cc9f: jne    0x000000010410ccb8
  0x000000010410cca1: mov    %rax,0x180(%rbx)
  0x000000010410cca8: movq   $0x1,0x188(%rbx)
  0x000000010410ccb3: jmpq   0x000000010410ccfd
  0x000000010410ccb8: cmpq   $0x0,0x190(%rbx)
  0x000000010410ccc3: jne    0x000000010410ccdc
  0x000000010410ccc5: mov    %rax,0x190(%rbx)
  0x000000010410cccc: movq   $0x1,0x198(%rbx)
  0x000000010410ccd7: jmpq   0x000000010410ccfd
  0x000000010410ccdc: jmpq   0x000000010410ccfd
  0x000000010410cce1: movabs $0x1175d59e8,%rbx  ;   {metadata(method data for {method} {0x0000000117404618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000010410cceb: subq   $0x1,0x178(%rbx)
  0x000000010410ccf3: jmpq   0x000000010410ce9d
  0x000000010410ccf8: jmpq   0x000000010410ccfd
  0x000000010410ccfd: mov    %rdx,%rax          ;*checkcast
                                                ; - java.lang.String::equals@15 (line 981)

  0x000000010410cd00: mov    0xc(%rsi),%esi
  0x000000010410cd03: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::equals@20 (line 982)

  0x000000010410cd07: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)
                                                ; implicit exception: dispatches to 0x000000010410cea6
  0x000000010410cd0a: mov    0xc(%rax),%eax     ; implicit exception: dispatches to 0x000000010410ceab
  0x000000010410cd0d: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::equals@27 (line 983)

  0x000000010410cd11: mov    0xc(%rax),%ebx     ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ; implicit exception: dispatches to 0x000000010410ceb0
  0x000000010410cd14: cmp    %ebx,%edi
  0x000000010410cd16: movabs $0x1175d59e8,%rbx  ;   {metadata(method data for {method} {0x0000000117404618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000010410cd20: movabs $0x1a8,%rdx
  0x000000010410cd2a: jne    0x000000010410cd3a
  0x000000010410cd30: movabs $0x1b8,%rdx
  0x000000010410cd3a: mov    (%rbx,%rdx,1),%rcx
  0x000000010410cd3e: lea    0x1(%rcx),%rcx
  0x000000010410cd42: mov    %rcx,(%rbx,%rdx,1)
  0x000000010410cd46: jne    0x000000010410ce64  ;*if_icmpne
                                                ; - java.lang.String::equals@31 (line 983)

  0x000000010410cd4c: mov    $0x0,%ebx
  0x000000010410cd51: jmpq   0x000000010410cdff  ;*iload_3
                                                ; - java.lang.String::equals@49 (line 987)

  0x000000010410cd56: xchg   %ax,%ax
  0x000000010410cd58: movslq %ebx,%rdi
  0x000000010410cd5b: cmp    0xc(%rsi),%ebx
  0x000000010410cd5e: jae    0x000000010410ceb5
  0x000000010410cd64: movzwl 0x10(%rsi,%rdi,2),%edi  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x000000010410cd69: movslq %ebx,%rcx
  0x000000010410cd6c: cmp    0xc(%rax),%ebx
  0x000000010410cd6f: jae    0x000000010410cebe
  0x000000010410cd75: movzwl 0x10(%rax,%rcx,2),%ecx  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x000000010410cd7a: cmp    %ecx,%edi
  0x000000010410cd7c: movabs $0x1175d59e8,%rdi  ;   {metadata(method data for {method} {0x0000000117404618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000010410cd86: movabs $0x1e8,%rcx
  0x000000010410cd90: je     0x000000010410cda0
  0x000000010410cd96: movabs $0x1f8,%rcx
  0x000000010410cda0: mov    (%rdi,%rcx,1),%r8
  0x000000010410cda4: lea    0x1(%r8),%r8
  0x000000010410cda8: mov    %r8,(%rdi,%rcx,1)
  0x000000010410cdac: jne    0x000000010410ce42  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x000000010410cdb2: inc    %ebx
  0x000000010410cdb4: movabs $0x1175d59e8,%rdi  ;   {metadata(method data for {method} {0x0000000117404618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000010410cdbe: mov    0xe0(%rdi),%ecx
  0x000000010410cdc4: add    $0x8,%ecx
  0x000000010410cdc7: mov    %ecx,0xe0(%rdi)
  0x000000010410cdcd: movabs $0x117404618,%rdi  ;   {metadata({method} {0x0000000117404618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000010410cdd7: and    $0xfff8,%ecx
  0x000000010410cddd: cmp    $0x0,%ecx
  0x000000010410cde0: je     0x000000010410cec7  ; OopMap{rax=Oop rsi=Oop off=902}
                                                ;*goto
                                                ; - java.lang.String::equals@74 (line 990)

  0x000000010410cde6: test   %eax,-0x30accec(%rip)        # 0x0000000101060100
                                                ;   {poll}
  0x000000010410cdec: movabs $0x1175d59e8,%rdi  ;   {metadata(method data for {method} {0x0000000117404618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000010410cdf6: incl   0x208(%rdi)
  0x000000010410cdfc: mov    %rdx,%rdi          ;*goto
                                                ; - java.lang.String::equals@74 (line 990)

  0x000000010410cdff: mov    %rdi,%rdx
  0x000000010410ce02: dec    %edx
  0x000000010410ce04: cmp    $0x0,%edi
  0x000000010410ce07: movabs $0x1175d59e8,%rdi  ;   {metadata(method data for {method} {0x0000000117404618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000010410ce11: movabs $0x1c8,%rcx
  0x000000010410ce1b: je     0x000000010410ce2b
  0x000000010410ce21: movabs $0x1d8,%rcx
  0x000000010410ce2b: mov    (%rdi,%rcx,1),%r8
  0x000000010410ce2f: lea    0x1(%r8),%r8
  0x000000010410ce33: mov    %r8,(%rdi,%rcx,1)
  0x000000010410ce37: je     0x000000010410ce53
  0x000000010410ce3d: jmpq   0x000000010410cd58  ;*ifeq
                                                ; - java.lang.String::equals@53 (line 987)

  0x000000010410ce42: mov    $0x0,%eax
  0x000000010410ce47: add    $0x30,%rsp
  0x000000010410ce4b: pop    %rbp
  0x000000010410ce4c: test   %eax,-0x30acd52(%rip)        # 0x0000000101060100
                                                ;   {poll_return}
  0x000000010410ce52: retq                      ;*ireturn
                                                ; - java.lang.String::equals@70 (line 989)

  0x000000010410ce53: mov    $0x1,%eax
  0x000000010410ce58: add    $0x30,%rsp
  0x000000010410ce5c: pop    %rbp
  0x000000010410ce5d: test   %eax,-0x30acd63(%rip)        # 0x0000000101060100
                                                ;   {poll_return}
  0x000000010410ce63: retq                      ;*ireturn
                                                ; - java.lang.String::equals@78 (line 992)

  0x000000010410ce64: mov    $0x0,%eax
  0x000000010410ce69: add    $0x30,%rsp
  0x000000010410ce6d: pop    %rbp
  0x000000010410ce6e: test   %eax,-0x30acd74(%rip)        # 0x0000000101060100
                                                ;   {poll_return}
  0x000000010410ce74: retq                      ;*ireturn
                                                ; - java.lang.String::equals@80 (line 995)

  0x000000010410ce75: mov    $0x1,%eax
  0x000000010410ce7a: add    $0x30,%rsp
  0x000000010410ce7e: pop    %rbp
  0x000000010410ce7f: test   %eax,-0x30acd85(%rip)        # 0x0000000101060100
                                                ;   {poll_return}
  0x000000010410ce85: retq   
  0x000000010410ce86: mov    %rax,0x8(%rsp)
  0x000000010410ce8b: movq   $0xffffffffffffffff,(%rsp)
  0x000000010410ce93: callq  0x0000000104102d20  ; OopMap{rsi=Oop rdx=Oop off=1080}
                                                ;*synchronization entry
                                                ; - java.lang.String::equals@-1 (line 977)
                                                ;   {runtime_call}
  0x000000010410ce98: jmpq   0x000000010410cabe
  0x000000010410ce9d: mov    %rdx,(%rsp)
  0x000000010410cea1: callq  0x0000000104100780  ; OopMap{rsi=Oop off=1094}
                                                ;*checkcast
                                                ; - java.lang.String::equals@15 (line 981)
                                                ;   {runtime_call}
  0x000000010410cea6: callq  0x0000000104072100  ; OopMap{rax=Oop rsi=Oop off=1099}
                                                ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)
                                                ;   {runtime_call}
  0x000000010410ceab: callq  0x0000000104072100  ; OopMap{rsi=Oop off=1104}
                                                ;*getfield value
                                                ; - java.lang.String::equals@27 (line 983)
                                                ;   {runtime_call}
  0x000000010410ceb0: callq  0x0000000104072100  ; OopMap{rsi=Oop rax=Oop off=1109}
                                                ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ;   {runtime_call}
  0x000000010410ceb5: mov    %rbx,(%rsp)
  0x000000010410ceb9: callq  0x00000001040727c0  ; OopMap{rax=Oop rsi=Oop off=1118}
                                                ;*caload
                                                ; - java.lang.String::equals@60 (line 988)
                                                ;   {runtime_call}
  0x000000010410cebe: mov    %rbx,(%rsp)
  0x000000010410cec2: callq  0x00000001040727c0  ; OopMap{rax=Oop rsi=Oop off=1127}
                                                ;*caload
                                                ; - java.lang.String::equals@65 (line 988)
                                                ;   {runtime_call}
  0x000000010410cec7: mov    %rdi,0x8(%rsp)
  0x000000010410cecc: movq   $0x4a,(%rsp)
  0x000000010410ced4: callq  0x0000000104102d20  ; OopMap{rax=Oop rsi=Oop off=1145}
                                                ;*goto
                                                ; - java.lang.String::equals@74 (line 990)
                                                ;   {runtime_call}
  0x000000010410ced9: jmpq   0x000000010410cde6
  0x000000010410cede: nop
  0x000000010410cedf: nop
  0x000000010410cee0: mov    0x2a8(%r15),%rax
  0x000000010410cee7: movabs $0x0,%r10
  0x000000010410cef1: mov    %r10,0x2a8(%r15)
  0x000000010410cef8: movabs $0x0,%r10
  0x000000010410cf02: mov    %r10,0x2b0(%r15)
  0x000000010410cf09: add    $0x30,%rsp
  0x000000010410cf0d: pop    %rbp
  0x000000010410cf0e: jmpq   0x0000000104072c60  ;   {runtime_call}
  0x000000010410cf13: hlt    
  0x000000010410cf14: hlt    
  0x000000010410cf15: hlt    
  0x000000010410cf16: hlt    
  0x000000010410cf17: hlt    
  0x000000010410cf18: hlt    
  0x000000010410cf19: hlt    
  0x000000010410cf1a: hlt    
  0x000000010410cf1b: hlt    
  0x000000010410cf1c: hlt    
  0x000000010410cf1d: hlt    
  0x000000010410cf1e: hlt    
  0x000000010410cf1f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010410cf20: callq  0x0000000104100420  ;   {no_reloc}
  0x000000010410cf25: mov    %rsp,-0x28(%rsp)
  0x000000010410cf2a: sub    $0x80,%rsp
  0x000000010410cf31: mov    %rax,0x78(%rsp)
  0x000000010410cf36: mov    %rcx,0x70(%rsp)
  0x000000010410cf3b: mov    %rdx,0x68(%rsp)
  0x000000010410cf40: mov    %rbx,0x60(%rsp)
  0x000000010410cf45: mov    %rbp,0x50(%rsp)
  0x000000010410cf4a: mov    %rsi,0x48(%rsp)
  0x000000010410cf4f: mov    %rdi,0x40(%rsp)
  0x000000010410cf54: mov    %r8,0x38(%rsp)
  0x000000010410cf59: mov    %r9,0x30(%rsp)
  0x000000010410cf5e: mov    %r10,0x28(%rsp)
  0x000000010410cf63: mov    %r11,0x20(%rsp)
  0x000000010410cf68: mov    %r12,0x18(%rsp)
  0x000000010410cf6d: mov    %r13,0x10(%rsp)
  0x000000010410cf72: mov    %r14,0x8(%rsp)
  0x000000010410cf77: mov    %r15,(%rsp)
  0x000000010410cf7b: movabs $0x100641684,%rdi  ;   {external_word}
  0x000000010410cf85: movabs $0x10410cf25,%rsi  ;   {internal_word}
  0x000000010410cf8f: mov    %rsp,%rdx
  0x000000010410cf92: and    $0xfffffffffffffff0,%rsp
  0x000000010410cf96: callq  0x000000010046a1f6  ;   {runtime_call}
  0x000000010410cf9b: hlt    
[Deopt Handler Code]
  0x000000010410cf9c: movabs $0x10410cf9c,%r10  ;   {section_word}
  0x000000010410cfa6: push   %r10
  0x000000010410cfa8: jmpq   0x0000000104047500  ;   {runtime_call}
  0x000000010410cfad: hlt    
  0x000000010410cfae: hlt    
  0x000000010410cfaf: hlt    
<nmethod compile_id='5' compiler='C1' level='3' entry='0x000000010410ca60' size='2504' address='0x000000010410c8d0' relocation_offset='296' insts_offset='400' stub_offset='1616' scopes_data_offset='1768' scopes_pcs_offset='1984' dependencies_offset='2464' nul_chk_table_offset='2472' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='2781' backedge_count='5341' iicount='2781' stamp='0.478'/>
<writer thread='14851'/>
Decoding compiled method 0x0000000104112f50:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000117405000} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  0x00000001041130a0: callq  0x00000001004ed904  ;   {runtime_call}
  0x00000001041130a5: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000001041130b0: mov    %eax,-0x14000(%rsp)
  0x00000001041130b7: push   %rbp
  0x00000001041130b8: sub    $0x30,%rsp
  0x00000001041130bc: mov    (%rsi),%r13d
  0x00000001041130bf: mov    0x10(%rsi),%ebx
  0x00000001041130c2: mov    0x18(%rsi),%rbp
  0x00000001041130c6: mov    0x8(%rsi),%r14
  0x00000001041130ca: mov    %rsi,%rdi
  0x00000001041130cd: movabs $0x10054cb52,%r10
  0x00000001041130d7: callq  *%r10
  0x00000001041130da: test   %rbp,%rbp
  0x00000001041130dd: je     0x0000000104113276
  0x00000001041130e3: mov    0x8(%rbp),%r11d
  0x00000001041130e7: cmp    $0xf80002da,%r11d  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00000001041130ee: jne    0x00000001041132a5
  0x00000001041130f4: mov    %rbp,%r10
  0x00000001041130f7: test   %r14,%r14
  0x00000001041130fa: je     0x000000010411327e
  0x0000000104113100: mov    0x8(%r14),%r11d
  0x0000000104113104: cmp    $0xf8000041,%r11d  ;   {metadata({type array char})}
  0x000000010411310b: jne    0x00000001041132a5  ;*iload_3
                                                ; - java.lang.String::hashCode@24 (line 1470)

  0x0000000104113111: mov    0xc(%r10),%r8d     ;*getfield value
                                                ; - java.lang.String::hashCode@26 (line 1470)
                                                ; implicit exception: dispatches to 0x00000001041132c1
  0x0000000104113115: mov    0xc(%r12,%r8,8),%r11d  ;*arraylength
                                                ; - java.lang.String::hashCode@29 (line 1470)
                                                ; implicit exception: dispatches to 0x00000001041132c1
  0x000000010411311a: cmp    %r11d,%r13d
  0x000000010411311d: jge    0x0000000104113264  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x0000000104113123: mov    %r13d,%r9d
  0x0000000104113126: inc    %r9d
  0x0000000104113129: xor    %ecx,%ecx
  0x000000010411312b: cmp    %ecx,%r9d
  0x000000010411312e: cmovl  %ecx,%r9d
  0x0000000104113132: cmp    %r11d,%r9d
  0x0000000104113135: cmovg  %r11d,%r9d
  0x0000000104113139: mov    0xc(%r14),%eax     ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)
                                                ; implicit exception: dispatches to 0x00000001041132e1
  0x000000010411313d: mov    %ebx,%ebp
  0x000000010411313f: shl    $0x5,%ebp
  0x0000000104113142: sub    %ebx,%ebp          ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1471)

  0x0000000104113144: cmp    %eax,%r13d
  0x0000000104113147: jae    0x0000000104113286  ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x000000010411314d: movzwl 0x10(%r14,%r13,2),%ebx
  0x0000000104113153: add    %ebp,%ebx          ;*iadd
                                                ; - java.lang.String::hashCode@40 (line 1471)

  0x0000000104113155: inc    %r13d              ;*iinc
                                                ; - java.lang.String::hashCode@42 (line 1470)

  0x0000000104113158: cmp    %r9d,%r13d
  0x000000010411315b: jl     0x0000000104113139  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x000000010411315d: cmp    %eax,%r11d
  0x0000000104113160: mov    %r11d,%r8d
  0x0000000104113163: cmovg  %eax,%r8d
  0x0000000104113167: mov    %r8d,%edx
  0x000000010411316a: add    $0xfffffff9,%edx
  0x000000010411316d: mov    $0x80000000,%r9d
  0x0000000104113173: cmp    %edx,%r8d
  0x0000000104113176: cmovl  %r9d,%edx
  0x000000010411317a: cmp    %edx,%r13d
  0x000000010411317d: jge    0x0000000104113241
  0x0000000104113183: mov    %ebx,(%rsp)
  0x0000000104113186: vmovq  %r10,%xmm0
  0x000000010411318b: vmovd  %r11d,%xmm2        ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x0000000104113190: movzwl 0x10(%r14,%r13,2),%r10d
  0x0000000104113196: movslq %r13d,%rsi
  0x0000000104113199: movzwl 0x12(%r14,%rsi,2),%ebx
  0x000000010411319f: movzwl 0x1e(%r14,%rsi,2),%r11d
  0x00000001041131a5: movzwl 0x1c(%r14,%rsi,2),%r9d
  0x00000001041131ab: movzwl 0x1a(%r14,%rsi,2),%r8d
  0x00000001041131b1: movzwl 0x18(%r14,%rsi,2),%edi
  0x00000001041131b7: movzwl 0x16(%r14,%rsi,2),%ecx
  0x00000001041131bd: movzwl 0x14(%r14,%rsi,2),%esi
  0x00000001041131c3: mov    (%rsp),%ebp
  0x00000001041131c6: shl    $0x5,%ebp
  0x00000001041131c9: sub    (%rsp),%ebp
  0x00000001041131cc: add    %r10d,%ebp
  0x00000001041131cf: mov    %ebp,%r10d
  0x00000001041131d2: shl    $0x5,%r10d
  0x00000001041131d6: sub    %ebp,%r10d
  0x00000001041131d9: add    %ebx,%r10d
  0x00000001041131dc: mov    %r10d,%ebp
  0x00000001041131df: shl    $0x5,%ebp
  0x00000001041131e2: sub    %r10d,%ebp
  0x00000001041131e5: add    %esi,%ebp
  0x00000001041131e7: mov    %ebp,%r10d
  0x00000001041131ea: shl    $0x5,%r10d
  0x00000001041131ee: sub    %ebp,%r10d
  0x00000001041131f1: add    %ecx,%r10d
  0x00000001041131f4: mov    %r10d,%ecx
  0x00000001041131f7: shl    $0x5,%ecx
  0x00000001041131fa: sub    %r10d,%ecx
  0x00000001041131fd: add    %edi,%ecx
  0x00000001041131ff: mov    %ecx,%ebx
  0x0000000104113201: shl    $0x5,%ebx
  0x0000000104113204: sub    %ecx,%ebx
  0x0000000104113206: add    %r8d,%ebx
  0x0000000104113209: mov    %ebx,%r10d
  0x000000010411320c: shl    $0x5,%r10d
  0x0000000104113210: sub    %ebx,%r10d
  0x0000000104113213: add    %r9d,%r10d
  0x0000000104113216: mov    %r10d,%r8d
  0x0000000104113219: shl    $0x5,%r8d
  0x000000010411321d: sub    %r10d,%r8d
  0x0000000104113220: add    %r11d,%r8d         ;*iadd
                                                ; - java.lang.String::hashCode@40 (line 1471)

  0x0000000104113223: mov    %r8d,(%rsp)
  0x0000000104113227: add    $0x8,%r13d         ;*iinc
                                                ; - java.lang.String::hashCode@42 (line 1470)

  0x000000010411322b: cmp    %edx,%r13d
  0x000000010411322e: jl     0x0000000104113190  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x0000000104113234: mov    %r8d,%ebx
  0x0000000104113237: vmovq  %xmm0,%r10
  0x000000010411323c: vmovd  %xmm2,%r11d
  0x0000000104113241: cmp    %r11d,%r13d
  0x0000000104113244: jge    0x0000000104113264
  0x0000000104113246: xchg   %ax,%ax            ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x0000000104113248: mov    %ebx,%ebp
  0x000000010411324a: shl    $0x5,%ebp
  0x000000010411324d: sub    %ebx,%ebp          ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1471)

  0x000000010411324f: cmp    %eax,%r13d
  0x0000000104113252: jae    0x0000000104113286  ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x0000000104113254: movzwl 0x10(%r14,%r13,2),%ebx
  0x000000010411325a: add    %ebp,%ebx          ;*iadd
                                                ; - java.lang.String::hashCode@40 (line 1471)

  0x000000010411325c: inc    %r13d              ;*iinc
                                                ; - java.lang.String::hashCode@42 (line 1470)

  0x000000010411325f: cmp    %r11d,%r13d
  0x0000000104113262: jl     0x0000000104113248  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x0000000104113264: mov    %ebx,0x10(%r10)    ;*putfield hash
                                                ; - java.lang.String::hashCode@50 (line 1473)

  0x0000000104113268: mov    %ebx,%eax
  0x000000010411326a: add    $0x30,%rsp
  0x000000010411326e: pop    %rbp
  0x000000010411326f: test   %eax,-0x30b3275(%rip)        # 0x0000000101060000
                                                ;   {poll_return}
  0x0000000104113275: retq   
  0x0000000104113276: xor    %r10d,%r10d
  0x0000000104113279: jmpq   0x00000001041130f7
  0x000000010411327e: xor    %r14d,%r14d
  0x0000000104113281: jmpq   0x0000000104113111
  0x0000000104113286: mov    $0xffffffe4,%esi
  0x000000010411328b: mov    %r14,0x10(%rsp)
  0x0000000104113290: mov    %r13d,0xc(%rsp)
  0x0000000104113295: mov    %r10,0x18(%rsp)
  0x000000010411329a: nop
  0x000000010411329b: callq  0x00000001040456a0  ; OopMap{[16]=Oop [24]=Oop off=512}
                                                ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)
                                                ;   {runtime_call}
  0x00000001041132a0: callq  0x00000001004ed904  ;   {runtime_call}
  0x00000001041132a5: mov    $0xffffff9d,%esi
  0x00000001041132aa: mov    %ebx,(%rsp)
  0x00000001041132ad: mov    %r14,0x8(%rsp)
  0x00000001041132b2: mov    %r13d,0x4(%rsp)
  0x00000001041132b7: callq  0x00000001040456a0  ; OopMap{rbp=Oop [8]=Oop off=540}
                                                ;*iload_3
                                                ; - java.lang.String::hashCode@24 (line 1470)
                                                ;   {runtime_call}
  0x00000001041132bc: callq  0x00000001004ed904  ;   {runtime_call}
  0x00000001041132c1: mov    $0xffffff86,%esi
  0x00000001041132c6: mov    %ebx,%ebp
  0x00000001041132c8: mov    %r14,(%rsp)
  0x00000001041132cc: mov    %r13d,0x8(%rsp)
  0x00000001041132d1: mov    %r10,0x10(%rsp)
  0x00000001041132d6: nop
  0x00000001041132d7: callq  0x00000001040456a0  ; OopMap{[0]=Oop [16]=Oop off=572}
                                                ;*iload_3
                                                ; - java.lang.String::hashCode@24 (line 1470)
                                                ;   {runtime_call}
  0x00000001041132dc: callq  0x00000001004ed904  ;   {runtime_call}
  0x00000001041132e1: mov    $0xfffffff6,%esi
  0x00000001041132e6: mov    %r13d,%ebp
  0x00000001041132e9: xchg   %ax,%ax
  0x00000001041132eb: callq  0x00000001040456a0  ; OopMap{off=592}
                                                ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)
                                                ;   {runtime_call}
  0x00000001041132f0: callq  0x00000001004ed904  ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)
                                                ;   {runtime_call}
  0x00000001041132f5: hlt    
  0x00000001041132f6: hlt    
  0x00000001041132f7: hlt    
  0x00000001041132f8: hlt    
  0x00000001041132f9: hlt    
  0x00000001041132fa: hlt    
  0x00000001041132fb: hlt    
  0x00000001041132fc: hlt    
  0x00000001041132fd: hlt    
  0x00000001041132fe: hlt    
  0x00000001041132ff: hlt    
[Exception Handler]
[Stub Code]
  0x0000000104113300: jmpq   0x000000010406eda0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000104113305: callq  0x000000010411330a
  0x000000010411330a: subq   $0x5,(%rsp)
  0x000000010411330f: jmpq   0x0000000104047500  ;   {runtime_call}
  0x0000000104113314: hlt    
  0x0000000104113315: hlt    
  0x0000000104113316: hlt    
  0x0000000104113317: hlt    
<nmethod compile_id='4' compile_kind='osr' compiler='C2' level='4' entry='0x00000001041130a0' size='1616' address='0x0000000104112f50' relocation_offset='296' insts_offset='336' stub_offset='944' scopes_data_offset='992' scopes_pcs_offset='1128' dependencies_offset='1576' nul_chk_table_offset='1584' method='java/lang/String hashCode ()I' bytes='55' count='1800' backedge_count='60697' iicount='1800' stamp='0.482'/>
<writer thread='17667'/>
Decoding compiled method 0x000000010410e150:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000117405180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;
  0x000000010410e2a0: callq  0x00000001004ed904  ;   {runtime_call}
  0x000000010410e2a5: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010410e2b0: mov    %eax,-0x14000(%rsp)
  0x000000010410e2b7: push   %rbp
  0x000000010410e2b8: sub    $0x30,%rsp
  0x000000010410e2bc: mov    (%rsi),%ebx
  0x000000010410e2be: mov    0x8(%rsi),%r14
  0x000000010410e2c2: mov    0x20(%rsi),%r13d
  0x000000010410e2c6: mov    0x10(%rsi),%ebp
  0x000000010410e2c9: mov    %rsi,%rdi
  0x000000010410e2cc: movabs $0x10054cb52,%r10
  0x000000010410e2d6: callq  *%r10
  0x000000010410e2d9: test   %r14,%r14
  0x000000010410e2dc: je     0x000000010410e423
  0x000000010410e2e2: mov    0x8(%r14),%r11d
  0x000000010410e2e6: cmp    $0xf8000041,%r11d  ;   {metadata({type array char})}
  0x000000010410e2ed: jne    0x000000010410e469  ;*iload
                                                ; - java.lang.String::indexOf@37 (line 1558)

  0x000000010410e2f3: mov    %r14,%r10
  0x000000010410e2f6: add    $0xc,%r10          ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010410e2fa: cmp    %ebp,%ebx
  0x000000010410e2fc: jge    0x000000010410e3ee  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x000000010410e302: mov    %ebx,%r11d
  0x000000010410e305: inc    %r11d
  0x000000010410e308: xor    %r8d,%r8d
  0x000000010410e30b: cmp    %r8d,%r11d
  0x000000010410e30e: cmovl  %r8d,%r11d
  0x000000010410e312: cmp    %ebp,%r11d
  0x000000010410e315: cmovg  %ebp,%r11d
  0x000000010410e319: test   %r14,%r14
  0x000000010410e31c: je     0x000000010410e431
  0x000000010410e322: mov    (%r10),%r9d
  0x000000010410e325: cmp    %r9d,%ebx
  0x000000010410e328: jae    0x000000010410e445  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010410e32e: movzwl 0x10(%r14,%rbx,2),%r8d
  0x000000010410e334: cmp    %r13d,%r8d
  0x000000010410e337: je     0x000000010410e3f3  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010410e33d: inc    %ebx               ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x000000010410e33f: cmp    %r11d,%ebx
  0x000000010410e342: jl     0x000000010410e319  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x000000010410e344: cmp    %r9d,%ebp
  0x000000010410e347: mov    %ebp,%r11d
  0x000000010410e34a: cmovg  %r9d,%r11d
  0x000000010410e34e: mov    %r11d,%edi
  0x000000010410e351: add    $0xfffffff9,%edi
  0x000000010410e354: mov    $0x80000000,%r8d
  0x000000010410e35a: cmp    %edi,%r11d
  0x000000010410e35d: cmovl  %r8d,%edi
  0x000000010410e361: cmp    %edi,%ebx
  0x000000010410e363: jge    0x000000010410e3d2
  0x000000010410e365: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010410e370: movzwl 0x10(%r14,%rbx,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010410e376: cmp    %r13d,%r11d
  0x000000010410e379: je     0x000000010410e3f3  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010410e37b: movslq %ebx,%r10
  0x000000010410e37e: movzwl 0x12(%r14,%r10,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010410e384: cmp    %r13d,%r11d
  0x000000010410e387: je     0x000000010410e401  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010410e389: movzwl 0x14(%r14,%r10,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010410e38f: cmp    %r13d,%r11d
  0x000000010410e392: je     0x000000010410e405  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010410e394: movzwl 0x16(%r14,%r10,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010410e39a: cmp    %r13d,%r11d
  0x000000010410e39d: je     0x000000010410e40a  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010410e39f: movzwl 0x18(%r14,%r10,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010410e3a5: cmp    %r13d,%r11d
  0x000000010410e3a8: je     0x000000010410e40f  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010410e3aa: movzwl 0x1a(%r14,%r10,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010410e3b0: cmp    %r13d,%r11d
  0x000000010410e3b3: je     0x000000010410e414  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010410e3b5: movzwl 0x1c(%r14,%r10,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010410e3bb: cmp    %r13d,%r11d
  0x000000010410e3be: je     0x000000010410e419  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010410e3c0: movzwl 0x1e(%r14,%r10,2),%r10d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010410e3c6: cmp    %r13d,%r10d
  0x000000010410e3c9: je     0x000000010410e41e  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010410e3cb: add    $0x8,%ebx          ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x000000010410e3ce: cmp    %edi,%ebx
  0x000000010410e3d0: jl     0x000000010410e370  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x000000010410e3d2: cmp    %ebp,%ebx
  0x000000010410e3d4: jge    0x000000010410e3ee
  0x000000010410e3d6: xchg   %ax,%ax
  0x000000010410e3d8: cmp    %r9d,%ebx
  0x000000010410e3db: jae    0x000000010410e44a  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010410e3dd: movzwl 0x10(%r14,%rbx,2),%r11d
  0x000000010410e3e3: cmp    %r13d,%r11d
  0x000000010410e3e6: je     0x000000010410e3f3  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010410e3e8: inc    %ebx               ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x000000010410e3ea: cmp    %ebp,%ebx
  0x000000010410e3ec: jl     0x000000010410e3d8  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x000000010410e3ee: mov    $0xffffffff,%ebx   ;*iload
                                                ; - java.lang.String::indexOf@37 (line 1558)

  0x000000010410e3f3: mov    %ebx,%eax
  0x000000010410e3f5: add    $0x30,%rsp
  0x000000010410e3f9: pop    %rbp
  0x000000010410e3fa: test   %eax,-0x30ae400(%rip)        # 0x0000000101060000
                                                ;   {poll_return}
  0x000000010410e400: retq   
  0x000000010410e401: inc    %ebx
  0x000000010410e403: jmp    0x000000010410e3f3
  0x000000010410e405: add    $0x2,%ebx
  0x000000010410e408: jmp    0x000000010410e3f3
  0x000000010410e40a: add    $0x3,%ebx
  0x000000010410e40d: jmp    0x000000010410e3f3
  0x000000010410e40f: add    $0x4,%ebx
  0x000000010410e412: jmp    0x000000010410e3f3
  0x000000010410e414: add    $0x5,%ebx
  0x000000010410e417: jmp    0x000000010410e3f3
  0x000000010410e419: add    $0x6,%ebx
  0x000000010410e41c: jmp    0x000000010410e3f3
  0x000000010410e41e: add    $0x7,%ebx          ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x000000010410e421: jmp    0x000000010410e3f3
  0x000000010410e423: xor    %r14d,%r14d
  0x000000010410e426: mov    $0xc,%r10d
  0x000000010410e42c: jmpq   0x000000010410e2fa
  0x000000010410e431: mov    $0xfffffff6,%esi
  0x000000010410e436: mov    %ebx,%ebp
  0x000000010410e438: data16 xchg %ax,%ax
  0x000000010410e43b: callq  0x00000001040456a0  ; OopMap{off=416}
                                                ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)
                                                ;   {runtime_call}
  0x000000010410e440: callq  0x00000001004ed904  ;   {runtime_call}
  0x000000010410e445: mov    %ebx,(%rsp)
  0x000000010410e448: jmp    0x000000010410e44d
  0x000000010410e44a: mov    %ebx,(%rsp)
  0x000000010410e44d: mov    $0xffffffe4,%esi
  0x000000010410e452: mov    %r13d,0x4(%rsp)
  0x000000010410e457: mov    %r14,0x10(%rsp)
  0x000000010410e45c: data16 xchg %ax,%ax
  0x000000010410e45f: callq  0x00000001040456a0  ; OopMap{[16]=Oop off=452}
                                                ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)
                                                ;   {runtime_call}
  0x000000010410e464: callq  0x00000001004ed904  ;   {runtime_call}
  0x000000010410e469: mov    $0xffffff9d,%esi
  0x000000010410e46e: mov    %r13d,(%rsp)
  0x000000010410e472: mov    %r14,0x8(%rsp)
  0x000000010410e477: mov    %ebx,0x4(%rsp)
  0x000000010410e47b: callq  0x00000001040456a0  ; OopMap{[8]=Oop off=480}
                                                ;*iload
                                                ; - java.lang.String::indexOf@37 (line 1558)
                                                ;   {runtime_call}
  0x000000010410e480: callq  0x00000001004ed904  ;*iload
                                                ; - java.lang.String::indexOf@37 (line 1558)
                                                ;   {runtime_call}
  0x000000010410e485: hlt    
  0x000000010410e486: hlt    
  0x000000010410e487: hlt    
  0x000000010410e488: hlt    
  0x000000010410e489: hlt    
  0x000000010410e48a: hlt    
  0x000000010410e48b: hlt    
  0x000000010410e48c: hlt    
  0x000000010410e48d: hlt    
  0x000000010410e48e: hlt    
  0x000000010410e48f: hlt    
  0x000000010410e490: hlt    
  0x000000010410e491: hlt    
  0x000000010410e492: hlt    
  0x000000010410e493: hlt    
  0x000000010410e494: hlt    
  0x000000010410e495: hlt    
  0x000000010410e496: hlt    
  0x000000010410e497: hlt    
  0x000000010410e498: hlt    
  0x000000010410e499: hlt    
  0x000000010410e49a: hlt    
  0x000000010410e49b: hlt    
  0x000000010410e49c: hlt    
  0x000000010410e49d: hlt    
  0x000000010410e49e: hlt    
  0x000000010410e49f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010410e4a0: jmpq   0x000000010406eda0  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010410e4a5: callq  0x000000010410e4aa
  0x000000010410e4aa: subq   $0x5,(%rsp)
  0x000000010410e4af: jmpq   0x0000000104047500  ;   {runtime_call}
  0x000000010410e4b4: hlt    
  0x000000010410e4b5: hlt    
  0x000000010410e4b6: hlt    
  0x000000010410e4b7: hlt    
<nmethod compile_id='3' compile_kind='osr' compiler='C2' level='4' entry='0x000000010410e2a0' size='1592' address='0x000000010410e150' relocation_offset='296' insts_offset='336' stub_offset='848' scopes_data_offset='888' scopes_pcs_offset='992' dependencies_offset='1584' method='java/lang/String indexOf (II)I' bytes='70' count='1845' backedge_count='108545' iicount='1845' stamp='0.486'/>
<writer thread='3075'/>
<task_queued compile_id='6' method='java/lang/Math min (II)I' bytes='11' count='6912' iicount='6912' stamp='0.486' comment='tiered' hot_count='6912'/>
<task_queued compile_id='7' method='java/lang/String charAt (I)C' bytes='29' count='58112' iicount='58112' stamp='0.486' comment='tiered' hot_count='58112'/>
<task_queued compile_id='8' method='java/io/UnixFileSystem normalize (Ljava/lang/String;)Ljava/lang/String;' bytes='75' count='596' backedge_count='50176' iicount='596' level='3' stamp='0.486' comment='tiered' hot_count='596'/>
<writer thread='14851'/>
Decoding compiled method 0x000000010410df50:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000001174f67d8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;
  # parm0:    rsi       = int
  # parm1:    rdx       = int
  #           [sp+0x20]  (sp of caller)
  0x000000010410e080: sub    $0x18,
<writer thread='3075'/>
[Loaded sun.usagetracker.UsageTrackerClient from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='14851'/>
%rsp
  0x000000010410e087: mov    %rbp,0x10(%rsp)    ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)

  0x000000010410e08c: cmp    %edx,%esi
  0x000000010410e08e: mov    %edx,%eax
  0x000000010410e090: cmovle %esi,%eax          ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)

  0x000000010410e093: add    $0x10,%rsp
  0x000000010410e097: pop    %rbp
  0x000000010410e098: test   %eax,-0x30ae09e(%rip)        # 0x0000000101060000
                                                ;   {poll_return}
  0x000000010410e09e: retq   
  0x000000010410e09f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010410e0a0: jmpq   0x000000010406eda0  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010410e0a5: callq  0x000000010410e0aa
  0x000000010410e0aa: subq   $0x5,(%rsp)
  0x000000010410e0af: jmpq   0x0000000104047500  ;   {runtime_call}
  0x000000010410e0b4: hlt    
  0x000000010410e0b5: hlt    
  0x000000010410e0b6: hlt    
  0x000000010410e0b7: hlt    
<nmethod compile_id='6' compiler='C2' level='4' entry='0x000000010410e080' size='456' address='0x000000010410df50' relocation_offset='296' insts_offset='304' stub_offset='336' scopes_data_offset='368' scopes_pcs_offset='384' dependencies_offset='448' method='java/lang/Math min (II)I' bytes='11' count='6917' iicount='6917' stamp='0.487'/>
<writer thread='17667'/>
Decoding compiled method 0x000000010410ea50:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000117403db0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  #           [sp+0x30]  (sp of caller)
  0x000000010410eba0: mov    0x8(%rsi),%r10d
  0x000000010410eba4: shl    $0x3,%r10
  0x000000010410eba8: cmp    %r10,%rax
  0x000000010410ebab: jne    0x0000000104045e60  ;   {runtime_call}
  0x000000010410ebb1: data16 xchg %ax,%ax
  0x000000010410ebb4: nopl   0x0(%rax,%rax,1)
  0x000000010410ebbc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010410ebc0: mov    %eax,-0x14000(%rsp)
  0x000000010410ebc7: push   %rbp
  0x000000010410ebc8: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)

  0x000000010410ebcc: test   %edx,%edx
  0x000000010410ebce: jl     0x000000010410ec0d  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)

  0x000000010410ebd0: mov    0xc(%rsi),%r10d    ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)

  0x000000010410ebd4: mov    0xc(%r12,%r10,8),%ebp  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; implicit exception: dispatches to 0x000000010410ec3d
  0x000000010410ebd9: cmp    %ebp,%edx
  0x000000010410ebdb: jge    0x000000010410ec25  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)

  0x000000010410ebdd: cmp    %ebp,%edx
  0x000000010410ebdf: jae    0x000000010410ebf7
  0x000000010410ebe1: shl    $0x3,%r10
  0x000000010410ebe5: movzwl 0x10(%r10,%rdx,2),%eax
  0x000000010410ebeb: add    $0x20,%rsp
  0x000000010410ebef: pop    %rbp
  0x000000010410ebf0: test   %eax,-0x30aebf6(%rip)        # 0x0000000101060000
                                                ;   {poll_return}
  0x000000010410ebf6: retq   
  0x000000010410ebf7: mov    $0xffffffe4,%esi
  0x000000010410ebfc: mov    %edx,%ebp
  0x000000010410ebfe: mov    %r10d,(%rsp)
  0x000000010410ec02: nop
  0x000000010410ec03: callq  0x00000001040456a0  ; OopMap{[0]=NarrowOop off=104}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ;   {runtime_call}
  0x000000010410ec08: callq  0x00000001004ed904  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ;   {runtime_call}
  0x000000010410ec0d: mov    %rsi,%rbp
  0x000000010410ec10: mov    %edx,0x4(%rsp)
  0x000000010410ec14: mov    $0xffffff65,%esi
  0x000000010410ec19: xchg   %ax,%ax
  0x000000010410ec1b: callq  0x00000001040456a0  ; OopMap{rbp=Oop off=128}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ;   {runtime_call}
  0x000000010410ec20: callq  0x00000001004ed904  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ;   {runtime_call}
  0x000000010410ec25: mov    %rsi,(%rsp)
  0x000000010410ec29: mov    %edx,0xc(%rsp)
  0x000000010410ec2d: mov    $0xffffff65,%esi
  0x000000010410ec32: nop
  0x000000010410ec33: callq  0x00000001040456a0  ; OopMap{[0]=Oop off=152}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ;   {runtime_call}
  0x000000010410ec38: callq  0x00000001004ed904  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ;   {runtime_call}
<writer thread='3075'/>
[Loaded java.util.concurrent.atomic.AtomicBoolean from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='17667'/>
  0x000000010410ec3d: mov    $0xfffffff6,%esi
  0x000000010410ec42: nop
  0x000000010410ec43: callq  0x00000001040456a0  ; OopMap{off=168}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ;   {runtime_call}
  0x000000010410ec48: callq  0x00000001004ed904  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ;   {runtime_call}
  0x000000010410ec4d: hlt    
  0x000000010410ec4e: hlt    
  0x000000010410ec4f: hlt    
  0x000000010410ec50: hlt    
  0x000000010410ec51: hlt    
  0x000000010410ec52: hlt    
  0x000000010410ec53: hlt    
  0x000000010410ec54: hlt    
  0x000000010410ec55: hlt    
  0x000000010410ec56: hlt    
  0x000000010410ec57: hlt    
  0x000000010410ec58: hlt    
  0x000000010410ec59: hlt    
  0x000000010410ec5a: hlt    
  0x000000010410ec5b: hlt    
  0x000000010410ec5c: hlt    
  0x000000010410ec5d: hlt    
  0x000000010410ec5e: hlt    
  0x000000010410ec5f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010410ec60: jmpq   0x000000010406eda0  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010410ec65: callq  0x000000010410ec6a
  0x000000010410ec6a: subq   $0x5,(%rsp)
  0x000000010410ec6f: jmpq   0x0000000104047500  ;   {runtime_call}
  0x000000010410ec74: hlt    
  0x000000010410ec75: hlt    
  0x000000010410ec76: hlt    
  0x000000010410ec77: hlt    
<nmethod compile_id='7' compiler='C2' level='4' entry='0x000000010410eba0' size='928' address='0x000000010410ea50' relocation_offset='296' insts_offset='336' stub_offset='528' scopes_data_offset='560' scopes_pcs_offset='664' dependencies_offset='904' nul_chk_table_offset='912' method='java/lang/String charAt (I)C' bytes='29' count='58174' iicount='58174' stamp='0.490'/>
<writer thread='3075'/>
[Loaded sun.usagetracker.UsageTrackerClient$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
<task_queued compile_id='9' method='java/lang/StringBuilder toString ()Ljava/lang/String;' bytes='17' count='512' iicount='512' level='3' stamp='0.490' comment='tiered' hot_count='512'/>
[Loaded sun.usagetracker.UsageTrackerClient$4 from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
<task_queued compile_id='10' method='java/util/Hashtable get (Ljava/lang/Object;)Ljava/lang/Object;' bytes='69' count='256' backedge_count='47' iicount='256' level='3' stamp='0.490' comment='tiered' hot_count='256'/>
<task_queued compile_id='11' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='1664' iicount='1664' level='3' stamp='0.490' comment='tiered' hot_count='1664'/>
<writer thread='17155'/>
Decoding compiled method 0x000000010410d2d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000117567ea8} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/UnixFileSystem&apos;
  # this:     rsi:rsi   = &apos;java/io/UnixFileSystem&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  #           [sp+0x90]  (sp of caller)
  0x000000010410d4a0: mov    0x8(%rsi),%r10d
  0x000000010410d4a4: shl    $0x3,%r10
  0x000000010410d4a8: cmp    %rax,%r10
  0x000000010410d4ab: jne    0x0000000104045e60  ;   {runtime_call}
  0x000000010410d4b1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010410d4bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010410d4c0: mov    %eax,-0x14000(%rsp)
  0x000000010410d4c7: push   %rbp
  0x000000010410d4c8: sub    $0x80,%rsp
  0x000000010410d4cf: movabs $0x117615a08,%rcx
<writer thread='3075'/>
[Loaded sun.usagetracker.UsageTrackerClient$3 from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='17155'/>
  ;   {metadata(method data for {method} {0x0000000117567ea8} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/UnixFileSystem&apos;)}
  0x000000010410d4d9: mov    0xdc(%rcx),%r8d
  0x000000010410d4e0: add    $0x8,%r8d
  0x000000010410d4e4: mov    %r8d,0xdc(%rcx)
  0x000000010410d4eb: movabs $0x117567ea8,%rcx  ;   {metadata({method} {0x0000000117567ea8} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/UnixFileSystem&apos;)}
  0x000000010410d4f5: and    $0x1ff8,%r8d
  0x000000010410d4fc: cmp    $0x0,%r8d
  0x000000010410d500: je     0x000000010410d956  ;*aload_1
                                                ; - java.io.UnixFileSystem::normalize@0 (line 84)

  0x000000010410d506: cmp    (%rdx),%rax        ;*invokevirtual length
                                                ; - java.io.UnixFileSystem::normalize@1 (line 84)
                                                ; implicit exception: dispatches to 0x000000010410d96d
  0x000000010410d509: mov    %rdx,%rcx
  0x000000010410d50c: movabs $0x117615a08,%r8   ;   {metadata(method data for {method} {0x0000000117567ea8} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/UnixFileSystem&apos;)}
  0x000000010410d516: mov    0x8(%rcx),%ecx
  0x000000010410d519: shl    $0x3,%rcx
  0x000000010410d51d: cmp    0x110(%r8),%rcx
  0x000000010410d524: jne    0x000000010410d533
  0x000000010410d526: addq   $0x1,0x118(%r8)
  0x000000010410d52e: jmpq   0x000000010410d599
  0x000000010410d533: cmp    0x120(%r8),%rcx
  0x000000010410d53a: jne    0x000000010410d549
  0x000000010410d53c: addq   $0x1,0x128(%r8)
  0x000000010410d544: jmpq   0x000000010410d599
  0x000000010410d549: cmpq   $0x0,0x110(%r8)
  0x000000010410d554: jne    0x000000010410d56d
  0x000000010410d556: mov    %rcx,0x110(%r8)
  0x000000010410d55d: movq   $0x1,0x118(%r8)
  0x000000010410d568: jmpq   0x000000010410d599
  0x000000010410d56d: cmpq   $0x0,0x120(%r8)
  0x000000010410d578: jne    0x000000010410d591
  0x000000010410d57a: mov    %rcx,0x120(%r8)
  0x000000010410d581: movq   $0x1,0x128(%r8)
  0x000000010410d58c: jmpq   0x000000010410d599
  0x000000010410d591: addq   $0x1,0x108(%r8)
  0x000000010410d599: movabs $0x1175d4558,%rcx  ;   {metadata(method data for {method} {0x0000000117403c60} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x000000010410d5a3: mov    0xdc(%rcx),%r8d
  0x000000010410d5aa: add    $0x8,%r8d
  0x000000010410d5ae: mov    %r8d,0xdc(%rcx)
  0x000000010410d5b5: movabs $0x117403c60,%rcx  ;   {metadata({method} {0x0000000117403c60} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x000000010410d5bf: and    $0x7ffff8,%r8d
  0x000000010410d5c6: cmp    $0x0,%r8d
  0x000000010410d5ca: je     0x000000010410d972
  0x000000010410d5d0: mov    0xc(%rdx),%ecx
  0x000000010410d5d3: shl    $0x3,%rcx          ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - java.io.UnixFileSystem::normalize@1 (line 84)

  0x000000010410d5d7: mov    0xc(%rcx),%edi     ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.io.UnixFileSystem::normalize@1 (line 84)
                                                ; implicit exception: dispatches to 0x000000010410d989
  0x000000010410d5da: mov    $0x0,%ebx
  0x000000010410d5df: mov    $0x0,%ecx          ;*iload
                                                ; - java.io.UnixFileSystem::normalize@10 (line 86)

  0x000000010410d5e4: nopl   0x0(%rax)
  0x000000010410d5e8: cmp    %edi,%ebx
  0x000000010410d5ea: movabs $0x117615a08,%r8   ;   {metadata(method data for {method} {0x0000000117567ea8} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/UnixFileSystem&apos;)}
  0x000000010410d5f4: movabs $0x138,%rax
  0x000000010410d5fe: jge    0x000000010410d60e
  0x000000010410d604: movabs $0x148,%rax
  0x000000010410d60e: mov    (%r8,%rax,1),%r9
  0x000000010410d612: lea    0x1(%r9),%r9
  0x000000010410d616: mov    %r9,(%r8,%rax,1)
  0x000000010410d61a: jge    0x000000010410d841  ;*if_icmpge
                                                ; - java.io.UnixFileSystem::normalize@13 (line 86)

  0x000000010410d620: mov    %rdx,%r8
  0x000000010410d623: movabs $0x117615a08,%rax  ;   {metadata(method data for {method} {0x0000000117567ea8} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/UnixFileSystem&apos;)}
  0x000000010410d62d: mov    0x8(%r8),%r8d
  0x000000010410d631: shl    $0x3,%r8
  0x000000010410d635: cmp    0x160(%rax),%r8
  0x000000010410d63c: jne    0x000000010410d64b
  0x000000010410d63e: addq   $0x1,0x168(%rax)
  0x000000010410d646: jmpq   0x000000010410d6b1
  0x000000010410d64b: cmp    0x170(%rax),%r8
  0x000000010410d652: jne    0x000000010410d661
  0x000000010410d654: addq   $0x1,0x178(%rax)
  0x000000010410d65c: jmpq   0x000000010410d6b1
  0x000000010410d661: cmpq   $0x0,0x160(%rax)
  0x000000010410d66c: jne    0x000000010410d685
  0x000000010410d66e: mov    %r8,0x160(%rax)
  0x000000010410d675: movq   $0x1,0x168(%rax)
  0x000000010410d680: jmpq   0x000000010410d6b1
  0x000000010410d685: cmpq   $0x0,0x170(%rax)
  0x000000010410d690: jne    0x000000010410d6a9
  0x000000010410d692: mov    %r8,0x170(%rax)
  0x000000010410d699: movq   $0x1,0x178(%rax)
  0x000000010410d6a4: jmpq   0x000000010410d6b1
  0x000000010410d6a9: addq   $0x1,0x158(%rax)
  0x000000010410d6b1: movabs $0x117586488,%r8   ;   {metadata(method data for {method} {0x0000000117403db0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x000000010410d6bb: mov    0xdc(%r8),%eax
  0x000000010410d6c2: add    $0x8,%eax
  0x000000010410d6c5: mov    %eax,0xdc(%r8)
  0x000000010410d6cc: movabs $0x117403db0,%r8   ;   {metadata({method} {0x0000000117403db0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x000000010410d6d6: and    $0x7ffff8,%eax
  0x000000010410d6dc: cmp    $0x0,%eax
  0x000000010410d6df: je     0x000000010410d98e
  0x000000010410d6e5: cmp    $0x0,%ebx
  0x000000010410d6e8: movabs $0x117586488,%r8   ;   {metadata(method data for {method} {0x0000000117403db0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x000000010410d6f2: movabs $0x108,%rax
  0x000000010410d6fc: jl     0x000000010410d70c
  0x000000010410d702: movabs $0x118,%rax
  0x000000010410d70c: mov    (%r8,%rax,1),%r9
  0x000000010410d710: lea    0x1(%r9),%r9
  0x000000010410d714: mov    %r9,(%r8,%rax,1)
  0x000000010410d718: jl     0x000000010410d8fb  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)

  0x000000010410d71e: mov    0xc(%rdx),%r8d
  0x000000010410d722: shl    $0x3,%r8           ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)

  0x000000010410d726: mov    0xc(%r8),%eax      ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)
                                                ; implicit exception: dispatches to 0x000000010410d9a5
  0x000000010410d72a: cmp    %eax,%ebx
  0x000000010410d72c: movabs $0x117586488,%rax  ;   {metadata(method data for {method} {0x0000000117403db0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x000000010410d736: movabs $0x128,%r9
  0x000000010410d740: jl     0x000000010410d750
  0x000000010410d746: movabs $0x138,%r9
  0x000000010410d750: mov    (%rax,%r9,1),%r11
  0x000000010410d754: lea    0x1(%r11),%r11
  0x000000010410d758: mov    %r11,(%rax,%r9,1)
  0x000000010410d75c: jge    0x000000010410d8fb  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)

  0x000000010410d762: movslq %ebx,%rax
  0x000000010410d765: cmp    0xc(%r8),%ebx
  0x000000010410d769: jae    0x000000010410d9aa
  0x000000010410d76f: movzwl 0x10(%r8,%rax,2),%r8d  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)

  0x000000010410d775: and    $0xffff,%r8d
  0x000000010410d77c: cmp    $0x2f,%ecx
  0x000000010410d77f: movabs $0x117615a08,%rcx  ;   {metadata(method data for {method} {0x0000000117567ea8} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/UnixFileSystem&apos;)}
  0x000000010410d789: movabs $0x188,%rax
  0x000000010410d793: jne    0x000000010410d7a3
  0x000000010410d799: movabs $0x198,%rax
  0x000000010410d7a3: mov    (%rcx,%rax,1),%r9
  0x000000010410d7a7: lea    0x1(%r9),%r9
  0x000000010410d7ab: mov    %r9,(%rcx,%rax,1)
  0x000000010410d7af: jne    0x000000010410d7ef  ;*if_icmpne
                                                ; - java.io.UnixFileSystem::normalize@27 (line 88)

  0x000000010410d7b5: cmp    $0x2f,%r8d
  0x000000010410d7b9: movabs $0x117615a08,%rcx  ;   {metadata(method data for {method} {0x0000000117567ea8} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/UnixFileSystem&apos;)}
  0x000000010410d7c3: movabs $0x1a8,%rax
  0x000000010410d7cd: jne    0x000000010410d7dd
  0x000000010410d7d3: movabs $0x1b8,%rax
  0x000000010410d7dd: mov    (%rcx,%rax,1),%r9
  0x000000010410d7e1: lea    0x1(%r9),%r9
  0x000000010410d7e5: mov    %r9,(%rcx,%rax,1)
  0x000000010410d7e9: je     0x000000010410d8c5  ;*if_icmpne
                                                ; - java.io.UnixFileSystem::normalize@34 (line 88)

  0x000000010410d7ef: inc    %ebx
  0x000000010410d7f1: movabs $0x117615a08,%rcx  ;   {metadata(method data for {method} {0x0000000117567ea8} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/UnixFileSystem&apos;)}
  0x000000010410d7fb: mov    0xe0(%rcx),%eax
  0x000000010410d801: add    $0x8,%eax
  0x000000010410d804: mov    %eax,0xe0(%rcx)
  0x000000010410d80a: movabs $0x117567ea8,%rcx  ;   {metadata({method} {0x0000000117567ea8} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/UnixFileSystem&apos;)}
  0x000000010410d814: and    $0xfff8,%eax
  0x000000010410d81a: cmp    $0x0,%eax
  0x000000010410d81d: je     0x000000010410d9b3  ; OopMap{rsi=Oop rdx=Oop off=899}
                                                ;*goto
                                                ; - java.io.UnixFileSystem::normalize@54 (line 86)

  0x000000010410d823: test   %eax,-0x30ad729(%rip)        # 0x0000000101060100
                                                ;   {poll}
  0x000000010410d829: movabs $0x117615a08,%rcx  ;   {metadata(method data for {method} {0x0000000117567ea8} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/UnixFileSystem&apos;)}
  0x000000010410d833: incl   0x1d8(%rcx)
  0x000000010410d839: mov    %r8,%rcx
  0x000000010410d83c: jmpq   0x000000010410d5e8  ;*goto
                                                ; - java.io.UnixFileSystem::normalize@54 (line 86)

  0x000000010410d841: cmp    $0x2f,%ecx
  0x000000010410d844: movabs $0x117615a08,%rcx  ;   {metadata(method data for {method} {0x0000000117567ea8} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/UnixFileSystem&apos;)}
  0x000000010410d84e: movabs $0x1f0,%r8
  0x000000010410d858: jne    0x000000010410d868
  0x000000010410d85e: movabs $0x200,%r8
  0x000000010410d868: mov    (%rcx,%r8,1),%rbx
  0x000000010410d86c: lea    0x1(%rbx),%rbx
  0x000000010410d870: mov    %rbx,(%rcx,%r8,1)
  0x000000010410d874: jne    0x000000010410d8b3  ;*if_icmpne
                                                ; - java.io.UnixFileSystem::normalize@60 (line 92)

  0x000000010410d87a: mov    %rsi,%rcx
  0x000000010410d87d: movabs $0x117615a08,%r8   ;   {metadata(method data for {method} {0x0000000117567ea8} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/UnixFileSystem&apos;)}
  0x000000010410d887: addq   $0x1,0x210(%r8)
  0x000000010410d88f: mov    %rdi,%r8
  0x000000010410d892: dec    %r8d
  0x000000010410d895: mov    %rdi,%rcx          ;*invokespecial normalize
                                                ; - java.io.UnixFileSystem::normalize@69 (line 92)

  0x000000010410d898: nop
  0x000000010410d899: nop
  0x000000010410d89a: nop
  0x000000010410d89b: nop
  0x000000010410d89c: nop
  0x000000010410d89d: nop
  0x000000010410d89e: nop
  0x000000010410d89f: callq  0x00000001040460a0  ; OopMap{off=1028}
                                                ;*invokespecial normalize
                                                ; - java.io.UnixFileSystem::normalize@69 (line 92)
                                                ;   {optimized virtual_call}
  0x000000010410d8a4: add    $0x80,%rsp
  0x000000010410d8ab: pop    %rbp
  0x000000010410d8ac: test   %eax,-0x30ad7b2(%rip)        # 0x0000000101060100
                                                ;   {poll_return}
  0x000000010410d8b2: retq                      ;*areturn
                                                ; - java.io.UnixFileSystem::normalize@72 (line 92)

  0x000000010410d8b3: mov    %rdx,%rax
  0x000000010410d8b6: add    $0x80,%rsp
  0x000000010410d8bd: pop    %rbp
  0x000000010410d8be: test   %eax,-0x30ad7c4(%rip)        # 0x0000000101060100
                                                ;   {poll_return}
  0x000000010410d8c4: retq                      ;*areturn
                                                ; - java.io.UnixFileSystem::normalize@74 (line 93)

  0x000000010410d8c5: mov    %rsi,%rcx
  0x000000010410d8c8: movabs $0x117615a08,%r8   ;   {metadata(method data for {method} {0x0000000117567ea8} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/UnixFileSystem&apos;)}
  0x000000010410d8d2: addq   $0x1,0x1c8(%r8)
  0x000000010410d8da: dec    %ebx
  0x000000010410d8dc: mov    %rdi,%rcx
  0x000000010410d8df: mov    %rbx,%r8           ;*invokespecial normalize
                                                ; - java.io.UnixFileSystem::normalize@44 (line 89)

  0x000000010410d8e2: nop
  0x000000010410d8e3: nop
  0x000000010410d8e4: nop
  0x000000010410d8e5: nop
  0x000000010410d8e6: nop
  0x000000010410d8e7: callq  0x00000001040460a0  ; OopMap{off=1100}
                                                ;*invokespecial normalize
                                                ; - java.io.UnixFileSystem::normalize@44 (line 89)
                                                ;   {optimized virtual_call}
  0x000000010410d8ec: add    $0x80,%rsp
  0x000000010410d8f3: pop    %rbp
  0x000000010410d8f4: test   %eax,-0x30ad7fa(%rip)        # 0x0000000101060100
                                                ;   {poll_return}
  0x000000010410d8fa: retq                      ;*areturn
                                                ; - java.io.UnixFileSystem::normalize@47 (line 89)

  0x000000010410d8fb: mov    %ecx,0x6c(%rsp)
  0x000000010410d8ff: mov    %edi,0x68(%rsp)
  0x000000010410d903: mov    %rdx,0x60(%rsp)
  0x000000010410d908: mov    %rsi,0x58(%rsp)
  0x000000010410d90d: data16 xchg %ax,%ax
  0x000000010410d910: jmpq   0x000000010410d9d9  ;   {no_reloc}
  0x000000010410d915: add    %al,(%rax)
  0x000000010410d917: add    %al,(%rax)
  0x000000010410d919: add    %ch,%cl
  0x000000010410d91b: (bad)  
  0x000000010410d91c: add    %al,(%rax)
  0x000000010410d91e: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)

  0x000000010410d921: rorb   -0x47(%rcx)        ;   {metadata(method data for {method} {0x0000000117403db0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x000000010410d924: mov    %ah,0x17(%rax,%rbx,2)
  0x000000010410d928: add    %eax,(%rax)
  0x000000010410d92a: add    %al,(%rax)
  0x000000010410d92c: addq   $0x1,0x148(%r9)
  0x000000010410d934: mov    %rbx,%rdx
  0x000000010410d937: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)

  0x000000010410d93a: mov    %ebx,0x70(%rsp)
  0x000000010410d93e: mov    %rax,0x50(%rsp)
  0x000000010410d943: nop
  0x000000010410d944: nop
  0x000000010410d945: nop
  0x000000010410d946: nop
  0x000000010410d947: callq  0x00000001040460a0  ; OopMap{[80]=Oop [96]=Oop [88]=Oop off=1196}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)
                                                ;   {optimized virtual_call}
  0x000000010410d94c: mov    0x50(%rsp),%rax
  0x000000010410d951: jmpq   0x000000010410da1b
  0x000000010410d956: mov    %rcx,0x8(%rsp)
  0x000000010410d95b: movq   $0xffffffffffffffff,(%rsp)
  0x000000010410d963: callq  0x0000000104102d20  ; OopMap{rsi=Oop rdx=Oop off=1224}
                                                ;*synchronization entry
                                                ; - java.io.UnixFileSystem::normalize@-1 (line 84)
                                                ;   {runtime_call}
  0x000000010410d968: jmpq   0x000000010410d506
  0x000000010410d96d: callq  0x0000000104072100  ; OopMap{rsi=Oop rdx=Oop off=1234}
                                                ;*invokevirtual length
                                                ; - java.io.UnixFileSystem::normalize@1 (line 84)
                                                ;   {runtime_call}
  0x000000010410d972: mov    %rcx,0x8(%rsp)
  0x000000010410d977: movq   $0xffffffffffffffff,(%rsp)
  0x000000010410d97f: callq  0x0000000104102d20  ; OopMap{rsi=Oop rdx=Oop off=1252}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ; - java.io.UnixFileSystem::normalize@1 (line 84)
                                                ;   {runtime_call}
  0x000000010410d984: jmpq   0x000000010410d5d0
  0x000000010410d989: callq  0x0000000104072100  ; OopMap{rsi=Oop rdx=Oop off=1262}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.io.UnixFileSystem::normalize@1 (line 84)
                                                ;   {runtime_call}
  0x000000010410d98e: mov    %r8,0x8(%rsp)
  0x000000010410d993: movq   $0xffffffffffffffff,(%rsp)
  0x000000010410d99b: callq  0x0000000104102d20  ; OopMap{rsi=Oop rdx=Oop off=1280}
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)
                                                ;   {runtime_call}
  0x000000010410d9a0: jmpq   0x000000010410d6e5
  0x000000010410d9a5: callq  0x0000000104072100  ; OopMap{rsi=Oop rdx=Oop r8=Oop off=1290}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)
                                                ;   {runtime_call}
  0x000000010410d9aa: mov    %rbx,(%rsp)
  0x000000010410d9ae: callq  0x00000001040727c0  ; OopMap{rsi=Oop rdx=Oop r8=Oop off=1299}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)
                                                ;   {runtime_call}
  0x000000010410d9b3: mov    %rcx,0x8(%rsp)
  0x000000010410d9b8: movq   $0x36,(%rsp)
  0x000000010410d9c0: callq  0x0000000104102d20  ; OopMap{rsi=Oop rdx=Oop off=1317}
                                                ;*goto
                                                ; - java.io.UnixFileSystem::normalize@54 (line 86)
                                                ;   {runtime_call}
  0x000000010410d9c5: jmpq   0x000000010410d823
  0x000000010410d9ca: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010410d9d4: mov    $0xa050f00,%eax
  0x000000010410d9d9: callq  0x0000000104101be0  ; OopMap{[88]=Oop [96]=Oop off=1342}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)
                                                ;   {runtime_call}
  0x000000010410d9de: jmpq   0x000000010410d910
  0x000000010410d9e3: mov    %rdx,%rdx
  0x000000010410d9e6: callq  0x00000001040716a0  ; OopMap{[88]=Oop [96]=Oop off=1355}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)
                                                ;   {runtime_call}
  0x000000010410d9eb: jmpq   0x000000010410d91f
  0x000000010410d9f0: nop
  0x000000010410d9f1: nop
  0x000000010410d9f2: mov    0x2a8(%r15),%rax
  0x000000010410d9f9: movabs $0x0,%r10
  0x000000010410da03: mov    %r10,0x2a8(%r15)
  0x000000010410da0a: movabs $0x0,%r10
  0x000000010410da14: mov    %r10,0x2b0(%r15)
  0x000000010410da1b: add    $0x80,%rsp
  0x000000010410da22: pop    %rbp
  0x000000010410da23: jmpq   0x0000000104072c60  ;   {runtime_call}
  0x000000010410da28: hlt    
  0x000000010410da29: hlt    
  0x000000010410da2a: hlt    
  0x000000010410da2b: hlt    
  0x000000010410da2c: hlt    
  0x000000010410da2d: hlt    
  0x000000010410da2e: hlt    
  0x000000010410da2f: hlt    
  0x000000010410da30: hlt    
  0x000000010410da31: hlt    
  0x000000010410da32: hlt    
  0x000000010410da33: hlt    
  0x000000010410da34: hlt    
  0x000000010410da35: hlt    
  0x000000010410da36: hlt    
  0x000000010410da37: hlt    
  0x000000010410da38: hlt    
  0x000000010410da39: hlt    
  0x000000010410da3a: hlt    
  0x000000010410da3b: hlt    
  0x000000010410da3c: hlt    
  0x000000010410da3d: hlt    
  0x000000010410da3e: hlt    
  0x000000010410da3f: hlt    
[Stub Code]
  0x000000010410da40: nop                       ;   {no_reloc}
  0x000000010410da41: nop
  0x000000010410da42: nop
  0x000000010410da43: nop
  0x000000010410da44: nop
  0x000000010410da45: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010410da4f: jmpq   0x000000010410da4f  ;   {runtime_call}
  0x000000010410da54: nop
  0x000000010410da55: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010410da5f: jmpq   0x000000010410da5f  ;   {runtime_call}
  0x000000010410da64: nop
  0x000000010410da65: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010410da6f: jmpq   0x000000010410da6f  ;   {runtime_call}
[Exception Handler]
  0x000000010410da74: callq  0x0000000104100420  ;   {runtime_call}
  0x000000010410da79: mov    %rsp,-0x28(%rsp)
  0x000000010410da7e: sub    $0x80,%rsp
  0x000000010410da85: mov    %rax,0x78(%rsp)
  0x000000010410da8a: mov    %rcx,0x70(%rsp)
  0x000000010410da8f: mov    %rdx,0x68(%rsp)
  0x000000010410da94: mov    %rbx,0x60(%rsp)
  0x000000010410da99: mov    %rbp,0x50(%rsp)
  0x000000010410da9e: mov    %rsi,0x48(%rsp)
  0x000000010410daa3: mov    %rdi,0x40(%rsp)
  0x000000010410daa8: mov    %r8,0x38(%rsp)
  0x000000010410daad: mov    %r9,0x30(%rsp)
  0x000000010410dab2: mov    %r10,0x28(%rsp)
  0x000000010410dab7: mov    %r11,0x20(%rsp)
  0x000000010410dabc: mov    %r12,0x18(%rsp)
  0x000000010410dac1: mov    %r13,0x10(%rsp)
  0x000000010410dac6: mov    %r14,0x8(%rsp)
  0x000000010410dacb: mov    %r15,(%rsp)
  0x000000010410dacf: movabs $0x100641684,%rdi  ;   {external_word}
  0x000000010410dad9: movabs $0x10410da79,%rsi  ;   {internal_word}
  0x000000010410dae3: mov    %rsp,%rdx
  0x000000010410dae6: and    $0xfffffffffffffff0,%rsp
  0x000000010410daea: callq  0x000000010046a1f6  ;   {runtime_call}
  0x000000010410daef: hlt    
[Deopt Handler Code]
  0x000000010410daf0: movabs $0x10410daf0,%r10  ;   {section_word}
  0x000000010410dafa: push   %r10
  0x000000010410dafc: jmpq   0x0000000104047500  ;   {runtime_call}
  0x000000010410db01: hlt    
  0x000000010410db02: hlt    
  0x000000010410db03: hlt    
  0x000000010410db04: hlt    
  0x000000010410db05: hlt    
  0x000000010410db06: hlt    
  0x000000010410db07: hlt    
<nmethod compile_id='8' compiler='C1' level='3' entry='0x000000010410d4a0' size='3168' address='0x000000010410d2d0' relocation_offset='296' insts_offset='464' stub_offset='1904' scopes_data_offset='2136' scopes_pcs_offset='2520' dependencies_offset='3128' nul_chk_table_offset='3136' method='java/io/UnixFileSystem normalize (Ljava/lang/String;)Ljava/lang/String;' bytes='75' count='596' backedge_count='50232' iicount='596' stamp='0.498'/>
Decoding compiled method 0x0000000104112410:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000117439080} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;
  # this:     rsi:rsi   = &apos;java/util/Hashtable&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  #           [sp+0x70]  (sp of caller)
  0x00000001041125c0: mov    0x8(%rsi),%r10d
  0x00000001041125c4: shl    $0x3,%r10
  0x00000001041125c8: cmp    %rax,%r10
  0x00000001041125cb: jne    0x0000000104045e60  ;   {runtime_call}
  0x00000001041125d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000001041125dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000001041125e0: mov    %eax,-0x14000(%rsp)
  0x00000001041125e7: push   %rbp
  0x00000001041125e8: sub    $0x60,%rsp
  0x00000001041125ec: mov    %rdx,0x28(%rsp)
  0x00000001041125f1: lea    0x40(%rsp),%rdi
  0x00000001041125f6: mov    %rsi,0x8(%rdi)
  0x00000001041125fa: mov    (%rsi),%rax
  0x00000001041125fd: mov    %rax,%rbx
  0x0000000104112600: and    $0x7,%rbx
  0x0000000104112604: cmp    $0x5,%rbx
  0x0000000104112608: jne    0x000000010411268f
  0x000000010411260e: mov    0x8(%rsi),%ebx
  0x0000000104112611: shl    $0x3,%rbx
  0x0000000104112615: mov    0xa8(%rbx),%rbx
  0x000000010411261c: or     %r15,%rbx
  0x000000010411261f: xor    %rax,%rbx
  0x0000000104112622: and    $0xffffffffffffff87,%rbx
  0x0000000104112626: je     0x00000001041126b7
  0x000000010411262c: test   $0x7,%rbx
  0x0000000104112633: jne    0x000000010411267c
  0x0000000104112635: test   $0x300,%rbx
  0x000000010411263c: jne    0x000000010411265b
  0x000000010411263e: and    $0x37f,%rax
  0x0000000104112645: mov    %rax,%rbx
  0x0000000104112648: or     %r15,%rbx
  0x000000010411264b: lock cmpxchg %rbx,(%rsi)
  0x0000000104112650: jne    0x0000000104112a33
  0x0000000104112656: jmpq   0x00000001041126b7
  0x000000010411265b: mov    0x8(%rsi),%ebx
  0x000000010411265e: shl    $0x3,%rbx
  0x0000000104112662: mov    0xa8(%rbx),%rbx
  0x0000000104112669: or     %r15,%rbx
  0x000000010411266c: lock cmpxchg %rbx,(%rsi)
  0x0000000104112671: jne    0x0000000104112a33
  0x0000000104112677: jmpq   0x00000001041126b7
  0x000000010411267c: mov    0x8(%rsi),%ebx
  0x000000010411267f: shl    $0x3,%rbx
  0x0000000104112683: mov    0xa8(%rbx),%rbx
  0x000000010411268a: lock cmpxchg %rbx,(%rsi)
  0x000000010411268f: mov    (%rsi),%rax
  0x0000000104112692: or     $0x1,%rax
  0x0000000104112696: mov    %rax,(%rdi)
  0x0000000104112699: lock cmpxchg %rdi,(%rsi)
  0x000000010411269e: je     0x00000001041126b7
  0x00000001041126a4: sub    %rsp,%rax
  0x00000001041126a7: and    $0xfffffffffffff007,%rax
  0x00000001041126ae: mov    %rax,(%rdi)
  0x00000001041126b1: jne    0x0000000104112a33
  0x00000001041126b7: movabs $0x1176b69b8,%rdi  ;   {metadata(method data for {method} {0x0000000117439080} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x00000001041126c1: mov    0xdc(%rdi),%ebx
  0x00000001041126c7: add    $0x8,%ebx
  0x00000001041126ca: mov    %ebx,0xdc(%rdi)
  0x00000001041126d0: movabs $0x117439080,%rdi  ;   {metadata({method} {0x0000000117439080} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x00000001041126da: and    $0x1ff8,%ebx
  0x00000001041126e0: cmp    $0x0,%ebx
  0x00000001041126e3: je     0x0000000104112a46  ;*aload_0
                                                ; - java.util.Hashtable::get@0 (line 363)

  0x00000001041126e9: mov    0x1c(%rsi),%edi
  0x00000001041126ec: shl    $0x3,%rdi          ;*getfield table
                                                ; - java.util.Hashtable::get@1 (line 363)

  0x00000001041126f0: cmp    (%rdx),%rax        ; implicit exception: dispatches to 0x0000000104112a5d
  0x00000001041126f3: mov    %rdx,%rsi
  0x00000001041126f6: movabs $0x1176b69b8,%rbx  ;   {metadata(method data for {method} {0x0000000117439080} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x0000000104112700: mov    0x8(%rsi),%esi
  0x0000000104112703: shl    $0x3,%rsi
  0x0000000104112707: cmp    0x110(%rbx),%rsi
  0x000000010411270e: jne    0x000000010411271d
  0x0000000104112710: addq   $0x1,0x118(%rbx)
  0x0000000104112718: jmpq   0x0000000104112783
  0x000000010411271d: cmp    0x120(%rbx),%rsi
  0x0000000104112724: jne    0x0000000104112733
  0x0000000104112726: addq   $0x1,0x128(%rbx)
  0x000000010411272e: jmpq   0x0000000104112783
  0x0000000104112733: cmpq   $0x0,0x110(%rbx)
  0x000000010411273e: jne    0x0000000104112757
  0x0000000104112740: mov    %rsi,0x110(%rbx)
  0x0000000104112747: movq   $0x1,0x118(%rbx)
  0x0000000104112752: jmpq   0x0000000104112783
  0x0000000104112757: cmpq   $0x0,0x120(%rbx)
  0x0000000104112762: jne    0x000000010411277b
  0x0000000104112764: mov    %rsi,0x120(%rbx)
  0x000000010411276b: movq   $0x1,0x128(%rbx)
  0x0000000104112776: jmpq   0x0000000104112783
  0x000000010411277b: addq   $0x1,0x108(%rbx)
  0x0000000104112783: mov    %rdx,%rsi          ;*invokevirtual hashCode
                                                ; - java.util.Hashtable::get@6 (line 364)

  0x0000000104112786: mov    %rdi,0x20(%rsp)
  0x000000010411278b: nop
  0x000000010411278c: nop
  0x000000010411278d: movabs $0xffffffffffffffff,%rax
  0x0000000104112797: callq  0x00000001040462e0  ; OopMap{[32]=Oop [40]=Oop [72]=Oop off=476}
                                                ;*invokevirtual hashCode
                                                ; - java.util.Hashtable::get@6 (line 364)
                                                ;   {virtual_call}
  0x000000010411279c: mov    %eax,0x38(%rsp)
  0x00000001041127a0: mov    0x20(%rsp),%rdi
  0x00000001041127a5: mov    0xc(%rdi),%esi     ;*arraylength
                                                ; - java.util.Hashtable::get@15 (line 365)
                                                ; implicit exception: dispatches to 0x0000000104112a62
  0x00000001041127a8: mov    %rax,%rdx
  0x00000001041127ab: and    $0x7fffffff,%edx
  0x00000001041127b1: mov    %rax,%rbx
  0x00000001041127b4: mov    %rdx,%rax
  0x00000001041127b7: cmp    $0x80000000,%eax
  0x00000001041127bd: jne    0x00000001041127ce
  0x00000001041127c3: xor    %edx,%edx
  0x00000001041127c5: cmp    $0xffffffff,%esi
  0x00000001041127c8: je     0x00000001041127d1
  0x00000001041127ce: cltd   
  0x00000001041127cf: idiv   %esi               ;*irem
                                                ; - java.util.Hashtable::get@16 (line 365)
                                                ; implicit exception: dispatches to 0x0000000104112a67
  0x00000001041127d1: movslq %edx,%rdx
  0x00000001041127d4: mov    0x10(%rdi,%rdx,4),%edx
  0x00000001041127d8: shl    $0x3,%rdx          ;*aaload
                                                ; - java.util.Hashtable::get@22 (line 366)

  0x00000001041127dc: nopl   0x0(%rax)
  0x00000001041127e0: mov    0x28(%rsp),%rdi
  0x00000001041127e5: cmp    $0x0,%rdx
  0x00000001041127e9: movabs $0x1176b69b8,%rsi  ;   {metadata(method data for {method} {0x0000000117439080} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x00000001041127f3: movabs $0x138,%rax
  0x00000001041127fd: je     0x000000010411280d
  0x0000000104112803: movabs $0x148,%rax
  0x000000010411280d: mov    (%rsi,%rax,1),%rcx
  0x0000000104112811: lea    0x1(%rcx),%rcx
  0x0000000104112815: mov    %rcx,(%rsi,%rax,1)
  0x0000000104112819: je     0x00000001041129ec  ;*ifnull
                                                ; - java.util.Hashtable::get@27 (line 366)

  0x000000010411281f: mov    0xc(%rdx),%esi     ;*getfield hash
                                                ; - java.util.Hashtable::get@32 (line 367)
                                                ; implicit exception: dispatches to 0x0000000104112a6c
  0x0000000104112822: cmp    %ebx,%esi
  0x0000000104112824: movabs $0x1176b69b8,%rsi  ;   {metadata(method data for {method} {0x0000000117439080} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x000000010411282e: movabs $0x158,%rax
  0x0000000104112838: jne    0x0000000104112848
  0x000000010411283e: movabs $0x168,%rax
  0x0000000104112848: mov    (%rsi,%rax,1),%rcx
  0x000000010411284c: lea    0x1(%rcx),%rcx
  0x0000000104112850: mov    %rcx,(%rsi,%rax,1)
  0x0000000104112854: jne    0x000000010411294a  ;*if_icmpne
                                                ; - java.util.Hashtable::get@36 (line 367)

  0x000000010411285a: mov    0x10(%rdx),%esi
  0x000000010411285d: shl    $0x3,%rsi          ;*getfield key
                                                ; - java.util.Hashtable::get@41 (line 367)

  0x0000000104112861: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x0000000104112a71
  0x0000000104112864: mov    %rsi,%rbx
  0x0000000104112867: movabs $0x1176b69b8,%rcx  ;   {metadata(method data for {method} {0x0000000117439080} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x0000000104112871: mov    0x8(%rbx),%ebx
  0x0000000104112874: shl    $0x3,%rbx
  0x0000000104112878: cmp    0x180(%rcx),%rbx
  0x000000010411287f: jne    0x000000010411288e
  0x0000000104112881: addq   $0x1,0x188(%rcx)
  0x0000000104112889: jmpq   0x00000001041128f4
  0x000000010411288e: cmp    0x190(%rcx),%rbx
  0x0000000104112895: jne    0x00000001041128a4
  0x0000000104112897: addq   $0x1,0x198(%rcx)
  0x000000010411289f: jmpq   0x00000001041128f4
  0x00000001041128a4: cmpq   $0x0,0x180(%rcx)
  0x00000001041128af: jne    0x00000001041128c8
  0x00000001041128b1: mov    %rbx,0x180(%rcx)
  0x00000001041128b8: movq   $0x1,0x188(%rcx)
  0x00000001041128c3: jmpq   0x00000001041128f4
  0x00000001041128c8: cmpq   $0x0,0x190(%rcx)
  0x00000001041128d3: jne    0x00000001041128ec
  0x00000001041128d5: mov    %rbx,0x190(%rcx)
  0x00000001041128dc: movq   $0x1,0x198(%rcx)
  0x00000001041128e7: jmpq   0x00000001041128f4
  0x00000001041128ec: addq   $0x1,0x178(%rcx)
  0x00000001041128f4: mov    %rdx,0x30(%rsp)
  0x00000001041128f9: mov    %rdi,%rdx          ;*invokevirtual equals
                                                ; - java.util.Hashtable::get@45 (line 367)

  0x00000001041128fc: nop
  0x00000001041128fd: movabs $0xffffffffffffffff,%rax
  0x0000000104112907: callq  0x00000001040462e0  ; OopMap{[48]=Oop [40]=Oop [72]=Oop off=844}
                                                ;*invokevirtual equals
                                                ; - java.util.Hashtable::get@45 (line 367)
                                                ;   {virtual_call}
  0x000000010411290c: cmp    $0x0,%eax
  0x000000010411290f: movabs $0x1176b69b8,%rax  ;   {metadata(method data for {method} {0x0000000117439080} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x0000000104112919: movabs $0x1a8,%rsi
  0x0000000104112923: je     0x0000000104112933
  0x0000000104112929: movabs $0x1b8,%rsi
  0x0000000104112933: mov    (%rax,%rsi,1),%rdi
  0x0000000104112937: lea    0x1(%rdi),%rdi
  0x000000010411293b: mov    %rdi,(%rax,%rsi,1)
  0x000000010411293f: mov    0x30(%rsp),%rdx
  0x0000000104112944: jne    0x00000001041129a5  ;*ifeq
                                                ; - java.util.Hashtable::get@48 (line 367)

  0x000000010411294a: mov    0x18(%rdx),%eax
  0x000000010411294d: shl    $0x3,%rax          ;*getfield next
                                                ; - java.util.Hashtable::get@59 (line 366)

  0x0000000104112951: movabs $0x1176b69b8,%rsi  ;   {metadata(method data for {method} {0x0000000117439080} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x000000010411295b: mov    0xe0(%rsi),%edi
  0x0000000104112961: add    $0x8,%edi
  0x0000000104112964: mov    %edi,0xe0(%rsi)
  0x000000010411296a: movabs $0x117439080,%rsi  ;   {metadata({method} {0x0000000117439080} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x0000000104112974: and    $0xfff8,%edi
  0x000000010411297a: cmp    $0x0,%edi
  0x000000010411297d: je     0x0000000104112a76  ; OopMap{[40]=Oop rax=Oop [72]=Oop off=963}
                                                ;*goto
                                                ; - java.util.Hashtable::get@64 (line 366)

  0x0000000104112983: test   %eax,-0x30b2889(%rip)        # 0x0000000101060100
                                                ;   {poll}
  0x0000000104112989: movabs $0x1176b69b8,%rsi  ;   {metadata(method data for {method} {0x0000000117439080} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x0000000104112993: incl   0x1c8(%rsi)
  0x0000000104112999: mov    %rax,%rdx
  0x000000010411299c: mov    0x38(%rsp),%ebx
  0x00000001041129a0: jmpq   0x00000001041127e0  ;*goto
                                                ; - java.util.Hashtable::get@64 (line 366)

  0x00000001041129a5: mov    0x14(%rdx),%esi
  0x00000001041129a8: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.util.Hashtable::get@53 (line 368)

  0x00000001041129ac: lea    0x40(%rsp),%rax
  0x00000001041129b1: mov    0x8(%rax),%rbx
  0x00000001041129b5: mov    (%rbx),%rdi
  0x00000001041129b8: and    $0x7,%rdi
  0x00000001041129bc: cmp    $0x5,%rdi
  0x00000001041129c0: je     0x00000001041129dd
  0x00000001041129c6: mov    (%rax),%rdi
  0x00000001041129c9: test   %rdi,%rdi
  0x00000001041129cc: je     0x00000001041129dd
  0x00000001041129d2: lock cmpxchg %rdi,(%rbx)
  0x00000001041129d7: jne    0x0000000104112a8d
  0x00000001041129dd: mov    %rsi,%rax
  0x00000001041129e0: add    $0x60,%rsp
  0x00000001041129e4: pop    %rbp
  0x00000001041129e5: test   %eax,-0x30b28eb(%rip)        # 0x0000000101060100
                                                ;   {poll_return}
  0x00000001041129eb: retq                      ;*areturn
                                                ; - java.util.Hashtable::get@56 (line 368)

  0x00000001041129ec: lea    0x40(%rsp),%rax
  0x00000001041129f1: mov    0x8(%rax),%rdi
  0x00000001041129f5: mov    (%rdi),%rsi
  0x00000001041129f8: and    $0x7,%rsi
  0x00000001041129fc: cmp    $0x5,%rsi
  0x0000000104112a00: je     0x0000000104112a1d
  0x0000000104112a06: mov    (%rax),%rsi
  0x0000000104112a09: test   %rsi,%rsi
  0x0000000104112a0c: je     0x0000000104112a1d
  0x0000000104112a12: lock cmpxchg %rsi,(%rdi)
  0x0000000104112a17: jne    0x0000000104112aa0  ;*areturn
                                                ; - java.util.Hashtable::get@68 (line 371)

  0x0000000104112a1d: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000104112a27: add    $0x60,%rsp
  0x0000000104112a2b: pop    %rbp
  0x0000000104112a2c: test   %eax,-0x30b2932(%rip)        # 0x0000000101060100
                                                ;   {poll_return}
  0x0000000104112a32: retq   
  0x0000000104112a33: mov    %rsi,0x8(%rsp)
  0x0000000104112a38: mov    %rdi,(%rsp)
  0x0000000104112a3c: callq  0x0000000104100f60  ; OopMap{rsi=Oop rdx=Oop [40]=Oop [72]=Oop off=1153}
                                                ;*synchronization entry
                                                ; - java.util.Hashtable::get@-1 (line 363)
                                                ;   {runtime_call}
  0x0000000104112a41: jmpq   0x00000001041126b7
  0x0000000104112a46: mov    %rdi,0x8(%rsp)
  0x0000000104112a4b: movq   $0xffffffffffffffff,(%rsp)
  0x0000000104112a53: callq  0x0000000104102d20  ; OopMap{rsi=Oop rdx=Oop [40]=Oop [72]=Oop off=1176}
                                                ;*synchronization entry
                                                ; - java.util.Hashtable::get@-1 (line 363)
                                                ;   {runtime_call}
  0x0000000104112a58: jmpq   0x00000001041126e9
  0x0000000104112a5d: callq  0x0000000104072100  ; OopMap{rdx=Oop [40]=Oop rdi=Oop [72]=Oop off=1186}
                                                ;*invokevirtual hashCode
                                                ; - java.util.Hashtable::get@6 (line 364)
                                                ;   {runtime_call}
  0x0000000104112a62: callq  0x0000000104072100  ; OopMap{[40]=Oop rdi=Oop [72]=Oop off=1191}
                                                ;*arraylength
                                                ; - java.util.Hashtable::get@15 (line 365)
                                                ;   {runtime_call}
  0x0000000104112a67: callq  0x0000000104072340  ; OopMap{[40]=Oop rdi=Oop [72]=Oop off=1196}
                                                ;*irem
                                                ; - java.util.Hashtable::get@16 (line 365)
                                                ;   {runtime_call}
  0x0000000104112a6c: callq  0x0000000104072100  ; OopMap{rdx=Oop rdi=Oop [40]=Oop [72]=Oop off=1201}
                                                ;*getfield hash
                                                ; - java.util.Hashtable::get@32 (line 367)
                                                ;   {runtime_call}
  0x0000000104112a71: callq  0x0000000104072100  ; OopMap{rdx=Oop rdi=Oop [40]=Oop rsi=Oop [72]=Oop off=1206}
                                                ;*invokevirtual equals
                                                ; - java.util.Hashtable::get@45 (line 367)
                                                ;   {runtime_call}
  0x0000000104112a76: mov    %rsi,0x8(%rsp)
  0x0000000104112a7b: movq   $0x40,(%rsp)
  0x0000000104112a83: callq  0x0000000104102d20  ; OopMap{[40]=Oop rax=Oop [72]=Oop off=1224}
                                                ;*goto
                                                ; - java.util.Hashtable::get@64 (line 366)
                                                ;   {runtime_call}
  0x0000000104112a88: jmpq   0x0000000104112983
  0x0000000104112a8d: lea    0x40(%rsp),%rax
  0x0000000104112a92: mov    %rax,(%rsp)
  0x0000000104112a96: callq  0x00000001041013a0  ;   {runtime_call}
  0x0000000104112a9b: jmpq   0x00000001041129dd
  0x0000000104112aa0: lea    0x40(%rsp),%rax
  0x0000000104112aa5: mov    %rax,(%rsp)
  0x0000000104112aa9: callq  0x00000001041013a0  ;   {runtime_call}
  0x0000000104112aae: jmpq   0x0000000104112a1d
  0x0000000104112ab3: nop
  0x0000000104112ab4: nop
  0x0000000104112ab5: mov    0x2a8(%r15),%rax
  0x0000000104112abc: movabs $0x0,%r10
  0x0000000104112ac6: mov    %r10,0x2a8(%r15)
  0x0000000104112acd: movabs $0x0,%r10
  0x0000000104112ad7: mov    %r10,0x2b0(%r15)
  0x0000000104112ade: mov    %rax,%rbx
  0x0000000104112ae1: lea    0x40(%rsp),%rax
  0x0000000104112ae6: mov    0x8(%rax),%rsi
  0x0000000104112aea: mov    (%rsi),%rdi
  0x0000000104112aed: and    $0x7,%rdi
  0x0000000104112af1: cmp    $0x5,%rdi
  0x0000000104112af5: je     0x0000000104112b12
  0x0000000104112afb: mov    (%rax),%rdi
  0x0000000104112afe: test   %rdi,%rdi
  0x0000000104112b01: je     0x0000000104112b12
  0x0000000104112b07: lock cmpxchg %rdi,(%rsi)
  0x0000000104112b0c: jne    0x0000000104112b1f
  0x0000000104112b12: mov    %rbx,%rax
  0x0000000104112b15: add    $0x60,%rsp
  0x0000000104112b19: pop    %rbp
  0x0000000104112b1a: jmpq   0x0000000104072c60  ;   {runtime_call}
  0x0000000104112b1f: lea    0x40(%rsp),%rax
  0x0000000104112b24: mov    %rax,(%rsp)
  0x0000000104112b28: callq  0x00000001041013a0  ;   {runtime_call}
  0x0000000104112b2d: jmp    0x0000000104112b12
  0x0000000104112b2f: hlt    
  0x0000000104112b30: hlt    
  0x0000000104112b31: hlt    
  0x0000000104112b32: hlt    
  0x0000000104112b33: hlt    
  0x0000000104112b34: hlt    
  0x0000000104112b35: hlt    
  0x0000000104112b36: hlt    
  0x0000000104112b37: hlt    
  0x0000000104112b38: hlt    
  0x0000000104112b39: hlt    
  0x0000000104112b3a: hlt    
  0x0000000104112b3b: hlt    
  0x0000000104112b3c: hlt    
  0x0000000104112b3d: hlt    
  0x0000000104112b3e: hlt    
  0x0000000104112b3f: hlt    
[Stub Code]
  0x0000000104112b40: nop                       ;   {no_reloc}
  0x0000000104112b41: nop
  0x0000000104112b42: nop
  0x0000000104112b43: nop
  0x0000000104112b44: nop
  0x0000000104112b45: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000104112b4f: jmpq   0x0000000104112b4f  ;   {runtime_call}
  0x0000000104112b54: nop
  0x0000000104112b55: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000104112b5f: jmpq   0x0000000104112b5f  ;   {runtime_call}
[Exception Handler]
  0x0000000104112b64: callq  0x0000000104100420  ;   {runtime_call}
  0x0000000104112b69: mov    %rsp,-0x28(%rsp)
  0x0000000104112b6e: sub    $0x80,%rsp
  0x0000000104112b75: mov    %rax,0x78(%rsp)
  0x0000000104112b7a: mov    %rcx,0x70(%rsp)
  0x0000000104112b7f: mov    %rdx,0x68(%rsp)
  0x0000000104112b84: mov    %rbx,0x60(%rsp)
  0x0000000104112b89: mov    %rbp,0x50(%rsp)
  0x0000000104112b8e: mov    %rsi,0x48(%rsp)
  0x0000000104112b93: mov    %rdi,0x40(%rsp)
  0x0000000104112b98: mov    %r8,0x38(%rsp)
  0x0000000104112b9d: mov    %r9,0x30(%rsp)
  0x0000000104112ba2: mov    %r10,0x28(%rsp)
  0x0000000104112ba7: mov    %r11,0x20(%rsp)
  0x0000000104112bac: mov    %r12,0x18(%rsp)
  0x0000000104112bb1: mov    %r13,0x10(%rsp)
  0x0000000104112bb6: mov    %r14,0x8(%rsp)
  0x0000000104112bbb: mov    %r15,(%rsp)
  0x0000000104112bbf: movabs $0x100641684,%rdi  ;   {external_word}
  0x0000000104112bc9: movabs $0x104112b69,%rsi  ;   {internal_word}
  0x0000000104112bd3: mov    %rsp,%rdx
  0x0000000104112bd6: and    $0xfffffffffffffff0,%rsp
  0x0000000104112bda: callq  0x000000010046a1f6  ;   {runtime_call}
  0x0000000104112bdf: hlt    
[Deopt Handler Code]
  0x0000000104112be0: movabs $0x104112be0,%r10  ;   {section_word}
  0x0000000104112bea: push   %r10
  0x0000000104112bec: jmpq   0x0000000104047500  ;   {runtime_call}
  0x0000000104112bf1: hlt    
  0x0000000104112bf2: hlt    
  0x0000000104112bf3: hlt    
  0x0000000104112bf4: hlt    
  0x0000000104112bf5: hlt    
  0x0000000104112bf6: hlt    
  0x0000000104112bf7: hlt    
<nmethod compile_id='10' compiler='C1' level='3' entry='0x00000001041125c0' size='2816' address='0x0000000104112410' relocation_offset='296' insts_offset='432' stub_offset='1840' scopes_data_offset='2032' scopes_pcs_offset='2280' dependencies_offset='2760' nul_chk_table_offset='2768' method='java/util/Hashtable get (Ljava/lang/Object;)Ljava/lang/Object;' bytes='69' count='260' backedge_count='51' iicount='260' stamp='0.506'/>
Decoding compiled method 0x0000000104111950:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000001174031a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;[C&apos;
  # parm1:    rcx       = int
  # parm2:    r8        = int
  #           [sp+0x70]  (sp of caller)
  0x0000000104111b20: mov    0x8(%rsi),%r10d
  0x0000000104111b24: shl    $0x3,%r10
  0x0000000104111b28: cmp    %rax,%r10
  0x0000000104111b2b: jne    0x0000000104045e60  ;   {runtime_call}
  0x0000000104111b31: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000104111b3c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000104111b40: mov    %eax,-0x14000(%rsp)
  0x0000000104111b47: push   %rbp
  0x0000000104111b48: sub    $0x60,%rsp
  0x0000000104111b4c: movabs $0x1175d4ef0,%rdi  ;   {metadata(method data for {method} {0x00000001174031a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000104111b56: mov    0xdc(%rdi),%ebx
  0x0000000104111b5c: add    $0x8,%ebx
  0x0000000104111b5f: mov    %ebx,0xdc(%rdi)
  0x0000000104111b65: movabs $0x1174031a0,%rdi  ;   {metadata({method} {0x00000001174031a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000104111b6f: and    $0x1ff8,%ebx
  0x0000000104111b75: cmp    $0x0,%ebx
  0x0000000104111b78: je     0x0000000104111e46  ;*aload_0
                                                ; - java.lang.String::&lt;init&gt;@0 (line 190)

  0x0000000104111b7e: mov    %rsi,%rdi
  0x0000000104111b81: movabs $0x1175d4ef0,%rbx  ;   {metadata(method data for {method} {0x00000001174031a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000104111b8b: addq   $0x1,0x108(%rbx)
  0x0000000104111b93: movabs $0x117577a10,%rdi  ;   {metadata(method data for {method} {0x0000000117400480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000104111b9d: mov    0xdc(%rdi),%ebx
  0x0000000104111ba3: add    $0x8,%ebx
  0x0000000104111ba6: mov    %ebx,0xdc(%rdi)
  0x0000000104111bac: movabs $0x117400480,%rdi  ;   {metadata({method} {0x0000000117400480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000104111bb6: and    $0x7ffff8,%ebx
  0x0000000104111bbc: cmp    $0x0,%ebx
  0x0000000104111bbf: je     0x0000000104111e5d
  0x0000000104111bc5: cmp    $0x0,%ecx
  0x0000000104111bc8: movabs $0x1175d4ef0,%rdi  ;   {metadata(method data for {method} {0x00000001174031a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000104111bd2: movabs $0x118,%rbx
  0x0000000104111bdc: jge    0x0000000104111bec
  0x0000000104111be2: movabs $0x128,%rbx
  0x0000000104111bec: mov    (%rdi,%rbx,1),%rax
  0x0000000104111bf0: lea    0x1(%rax),%rax
  0x0000000104111bf4: mov    %rax,(%rdi,%rbx,1)
  0x0000000104111bf8: jl     0x0000000104111e06  ;*ifge
                                                ; - java.lang.String::&lt;init&gt;@5 (line 191)

  0x0000000104111bfe: cmp    $0x0,%r8d
  0x0000000104111c02: movabs $0x1175d4ef0,%rdi  ;   {metadata(method data for {method} {0x00000001174031a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000104111c0c: movabs $0x148,%rbx
  0x0000000104111c16: jg     0x0000000104111c26
  0x0000000104111c1c: movabs $0x158,%rbx
  0x0000000104111c26: mov    (%rdi,%rbx,1),%rax
  0x0000000104111c2a: lea    0x1(%rax),%rax
  0x0000000104111c2e: mov    %rax,(%rdi,%rbx,1)
  0x0000000104111c32: jg     0x0000000104111cad  ;*ifgt
                                                ; - java.lang.String::&lt;init&gt;@18 (line 194)

  0x0000000104111c38: cmp    $0x0,%r8d
  0x0000000104111c3c: movabs $0x1175d4ef0,%rdi  ;   {metadata(method data for {method} {0x00000001174031a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000104111c46: movabs $0x168,%rbx
  0x0000000104111c50: jge    0x0000000104111c60
  0x0000000104111c56: movabs $0x178,%rbx
  0x0000000104111c60: mov    (%rdi,%rbx,1),%rax
  0x0000000104111c64: lea    0x1(%rax),%rax
  0x0000000104111c68: mov    %rax,(%rdi,%rbx,1)
  0x0000000104111c6c: jl     0x0000000104111dc6  ;*ifge
                                                ; - java.lang.String::&lt;init&gt;@22 (line 195)

  0x0000000104111c72: mov    0xc(%rdx),%edi     ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@36 (line 198)
                                                ; implicit exception: dispatches to 0x0000000104111e74
  0x0000000104111c75: cmp    %edi,%ecx
  0x0000000104111c77: movabs $0x1175d4ef0,%rdi  ;   {metadata(method data for {method} {0x00000001174031a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000104111c81: movabs $0x198,%rbx
  0x0000000104111c8b: jg     0x0000000104111c9b
  0x0000000104111c91: movabs $0x1a8,%rbx
  0x0000000104111c9b: mov    (%rdi,%rbx,1),%rax
  0x0000000104111c9f: lea    0x1(%rax),%rax
  0x0000000104111ca3: mov    %rax,(%rdi,%rbx,1)
  0x0000000104111ca7: jle    0x0000000104111d42  ;*if_icmpgt
                                                ; - java.lang.String::&lt;init&gt;@37 (line 198)

  0x0000000104111cad: mov    0xc(%rdx),%edi     ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ; implicit exception: dispatches to 0x0000000104111e79
  0x0000000104111cb0: sub    %r8d,%edi
  0x0000000104111cb3: cmp    %edi,%ecx
  0x0000000104111cb5: movabs $0x1175d4ef0,%rdi  ;   {metadata(method data for {method} {0x00000001174031a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000104111cbf: movabs $0x1b8,%rbx
  0x0000000104111cc9: jle    0x0000000104111cd9
  0x0000000104111ccf: movabs $0x1c8,%rbx
  0x0000000104111cd9: mov    (%rdi,%rbx,1),%rax
  0x0000000104111cdd: lea    0x1(%rax),%rax
  0x0000000104111ce1: mov    %rax,(%rdi,%rbx,1)
  0x0000000104111ce5: jg     0x0000000104111d7c  ;*if_icmple
                                                ; - java.lang.String::&lt;init&gt;@55 (line 204)

  0x0000000104111ceb: mov    %rsi,0x38(%rsp)
  0x0000000104111cf0: movabs $0x1175d4ef0,%rdi  ;   {metadata(method data for {method} {0x00000001174031a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000104111cfa: addq   $0x1,0x1e8(%rdi)
  0x0000000104111d02: add    %ecx,%r8d
  0x0000000104111d05: mov    %rdx,%rsi
  0x0000000104111d08: mov    %rcx,%rdx
  0x0000000104111d0b: mov    %r8,%rcx           ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)

  0x0000000104111d0e: nop
  0x0000000104111d0f: callq  0x0000000104046520  ; OopMap{[56]=Oop off=500}
                                                ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ;   {static_call}
  0x0000000104111d14: mov    0x38(%rsp),%rsi
  0x0000000104111d19: mov    %rax,%r10
  0x0000000104111d1c: shr    $0x3,%r10
  0x0000000104111d20: mov    %r10d,0xc(%rsi)
  0x0000000104111d24: shr    $0x9,%rsi
  0x0000000104111d28: movabs $0xfda96000,%rdx
  0x0000000104111d32: movb   $0x0,(%rsi,%rdx,1)  ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@78 (line 207)

  0x0000000104111d36: add    $0x60,%rsp
  0x0000000104111d3a: pop    %rbp
  0x0000000104111d3b: test   %eax,-0x30b1c41(%rip)        # 0x0000000101060100
                                                ;   {poll_return}
  0x0000000104111d41: retq                      ;*return
                                                ; - java.lang.String::&lt;init&gt;@81 (line 208)

  0x0000000104111d42: movabs $0x79558a680,%rdx  ;   {oop(&quot;&quot;)}
  0x0000000104111d4c: mov    0xc(%rdx),%edx     ; implicit exception: dispatches to 0x0000000104111e7e
  0x0000000104111d4f: shl    $0x3,%rdx          ;*getfield value
                                                ; - java.lang.String::&lt;init&gt;@43 (line 199)

  0x0000000104111d53: mov    %rdx,%r10
  0x0000000104111d56: shr    $0x3,%r10
  0x0000000104111d5a: mov    %r10d,0xc(%rsi)
  0x0000000104111d5e: shr    $0x9,%rsi
  0x0000000104111d62: movabs $0xfda96000,%rdx
  0x0000000104111d6c: movb   $0x0,(%rsi,%rdx,1)  ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@46 (line 199)

  0x0000000104111d70: add    $0x60,%rsp
  0x0000000104111d74: pop    %rbp
  0x0000000104111d75: test   %eax,-0x30b1c7b(%rip)        # 0x0000000101060100
                                                ;   {poll_return}
  0x0000000104111d7b: retq                      ;*return
                                                ; - java.lang.String::&lt;init&gt;@49 (line 200)

  0x0000000104111d7c: nopl   0x0(%rax)
  0x0000000104111d80: jmpq   0x0000000104111e92  ;   {no_reloc}
  0x0000000104111d85: add    %al,(%rax)
  0x0000000104111d87: add    %al,(%rax)
  0x0000000104111d89: add    %ch,%cl
  0x0000000104111d8b: or     $0x48000001,%eax   ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)

  0x0000000104111d90: mov    %eax,%edx
  0x0000000104111d92: movabs $0x1175d4ef0,%rsi  ;   {metadata(method data for {method} {0x00000001174031a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000104111d9c: addq   $0x1,0x1d8(%rsi)
  0x0000000104111da4: add    %ecx,%r8d
  0x0000000104111da7: mov    %r8,%rdx
  0x0000000104111daa: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@65 (line 205)

  0x0000000104111dad: mov    %rax,0x40(%rsp)
  0x0000000104111db2: nop
  0x0000000104111db3: nop
  0x0000000104111db4: nop
  0x0000000104111db5: nop
  0x0000000104111db6: nop
  0x0000000104111db7: callq  0x00000001040460a0  ; OopMap{[64]=Oop off=668}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@65 (line 205)
                                                ;   {optimized virtual_call}
  0x0000000104111dbc: mov    0x40(%rsp),%rax
  0x0000000104111dc1: jmpq   0x0000000104111f20  ;*athrow
                                                ; - java.lang.String::&lt;init&gt;@68 (line 205)

  0x0000000104111dc6: xchg   %ax,%ax
  0x0000000104111dc8: jmpq   0x0000000104111eb8  ;   {no_reloc}
  0x0000000104111dcd: add    %al,(%rax)
  0x0000000104111dcf: add    %al,(%rax)
  0x0000000104111dd1: add    %ch,%cl
  0x0000000104111dd3: jmp    0x0000000104111dd5
  0x0000000104111dd5: add    %al,(%rax)         ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)

  0x0000000104111dd7: mov    %rax,%rdx
  0x0000000104111dda: movabs $0x1175d4ef0,%rsi  ;   {metadata(method data for {method} {0x00000001174031a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000104111de4: addq   $0x1,0x188(%rsi)
  0x0000000104111dec: mov    %r8,%rdx
  0x0000000104111def: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@30 (line 196)

  0x0000000104111df2: mov    %rax,0x48(%rsp)
  0x0000000104111df7: callq  0x00000001040460a0  ; OopMap{[72]=Oop off=732}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@30 (line 196)
                                                ;   {optimized virtual_call}
  0x0000000104111dfc: mov    0x48(%rsp),%rax
  0x0000000104111e01: jmpq   0x0000000104111f20  ;*athrow
                                                ; - java.lang.String::&lt;init&gt;@33 (line 196)

  0x0000000104111e06: xchg   %ax,%ax
  0x0000000104111e08: jmpq   0x0000000104111ede  ;   {no_reloc}
  0x0000000104111e0d: add    %al,(%rax)
  0x0000000104111e0f: add    %al,(%rax)
  0x0000000104111e11: add    %ch,%cl
  0x0000000104111e13: roll   (%rax)
  0x0000000104111e15: add    %al,(%rax)         ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)

  0x0000000104111e17: mov    %rax,%rdx
  0x0000000104111e1a: movabs $0x1175d4ef0,%rsi  ;   {metadata(method data for {method} {0x00000001174031a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000104111e24: addq   $0x1,0x138(%rsi)
  0x0000000104111e2c: mov    %rcx,%rdx
  0x0000000104111e2f: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@13 (line 192)

  0x0000000104111e32: mov    %rax,0x50(%rsp)
  0x0000000104111e37: callq  0x00000001040460a0  ; OopMap{[80]=Oop off=796}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@13 (line 192)
                                                ;   {optimized virtual_call}
  0x0000000104111e3c: mov    0x50(%rsp),%rax
  0x0000000104111e41: jmpq   0x0000000104111f20
  0x0000000104111e46: mov    %rdi,0x8(%rsp)
  0x0000000104111e4b: movq   $0xffffffffffffffff,(%rsp)
  0x0000000104111e53: callq  0x0000000104102d20  ; OopMap{rsi=Oop rdx=Oop off=824}
                                                ;*synchronization entry
                                                ; - java.lang.String::&lt;init&gt;@-1 (line 190)
                                                ;   {runtime_call}
  0x0000000104111e58: jmpq   0x0000000104111b7e
  0x0000000104111e5d: mov    %rdi,0x8(%rsp)
  0x0000000104111e62: movq   $0xffffffffffffffff,(%rsp)
  0x0000000104111e6a: callq  0x0000000104102d20  ; OopMap{rsi=Oop rdx=Oop off=847}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 190)
                                                ;   {runtime_call}
  0x0000000104111e6f: jmpq   0x0000000104111bc5
  0x0000000104111e74: callq  0x0000000104072100  ; OopMap{rsi=Oop rdx=Oop off=857}
                                                ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@36 (line 198)
                                                ;   {runtime_call}
  0x0000000104111e79: callq  0x0000000104072100  ; OopMap{rsi=Oop rdx=Oop off=862}
                                                ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ;   {runtime_call}
  0x0000000104111e7e: callq  0x0000000104072100  ; OopMap{rsi=Oop off=867}
                                                ;*getfield value
                                                ; - java.lang.String::&lt;init&gt;@43 (line 199)
                                                ;   {runtime_call}
  0x0000000104111e83: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000104111e8d: mov    $0xa050f00,%eax
  0x0000000104111e92: callq  0x0000000104101be0  ; OopMap{off=887}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)
                                                ;   {runtime_call}
  0x0000000104111e97: jmpq   0x0000000104111d80
  0x0000000104111e9c: mov    %rdx,%rdx
  0x0000000104111e9f: callq  0x00000001040716a0  ; OopMap{off=900}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)
                                                ;   {runtime_call}
  0x0000000104111ea4: jmpq   0x0000000104111d8f
  0x0000000104111ea9: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000104111eb3: mov    $0xa050f00,%eax
  0x0000000104111eb8: callq  0x0000000104101be0  ; OopMap{off=925}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)
                                                ;   {runtime_call}
  0x0000000104111ebd: jmpq   0x0000000104111dc8
  0x0000000104111ec2: mov    %rdx,%rdx
  0x0000000104111ec5: callq  0x00000001040716a0  ; OopMap{off=938}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)
                                                ;   {runtime_call}
  0x0000000104111eca: jmpq   0x0000000104111dd7
  0x0000000104111ecf: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000104111ed9: mov    $0xa050f00,%eax
  0x0000000104111ede: callq  0x0000000104101be0  ; OopMap{off=963}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)
                                                ;   {runtime_call}
  0x0000000104111ee3: jmpq   0x0000000104111e08
  0x0000000104111ee8: mov    %rdx,%rdx
  0x0000000104111eeb: callq  0x00000001040716a0  ; OopMap{off=976}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)
                                                ;   {runtime_call}
  0x0000000104111ef0: jmpq   0x0000000104111e17
  0x0000000104111ef5: nop
  0x0000000104111ef6: nop
  0x0000000104111ef7: mov    0x2a8(%r15),%rax
  0x0000000104111efe: movabs $0x0,%r10
  0x0000000104111f08: mov    %r10,0x2a8(%r15)
  0x0000000104111f0f: movabs $0x0,%r10
  0x0000000104111f19: mov    %r10,0x2b0(%r15)
  0x0000000104111f20: add    $0x60,%rsp
  0x0000000104111f24: pop    %rbp
  0x0000000104111f25: jmpq   0x0000000104072c60  ;   {runtime_call}
  0x0000000104111f2a: hlt    
  0x0000000104111f2b: hlt    
  0x0000000104111f2c: hlt    
  0x0000000104111f2d: hlt    
  0x0000000104111f2e: hlt    
  0x0000000104111f2f: hlt    
  0x0000000104111f30: hlt    
  0x0000000104111f31: hlt    
  0x0000000104111f32: hlt    
  0x0000000104111f33: hlt    
  0x0000000104111f34: hlt    
  0x0000000104111f35: hlt    
  0x0000000104111f36: hlt    
  0x0000000104111f37: hlt    
  0x0000000104111f38: hlt    
  0x0000000104111f39: hlt    
  0x0000000104111f3a: hlt    
  0x0000000104111f3b: hlt    
  0x0000000104111f3c: hlt    
  0x0000000104111f3d: hlt    
  0x0000000104111f3e: hlt    
  0x0000000104111f3f: hlt    
[Stub Code]
  0x0000000104111f40: nop                       ;   {no_reloc}
  0x0000000104111f41: nop
  0x0000000104111f42: nop
  0x0000000104111f43: nop
  0x0000000104111f44: nop
  0x0000000104111f45: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000104111f4f: jmpq   0x0000000104111f4f  ;   {runtime_call}
  0x0000000104111f54: nop
  0x0000000104111f55: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000104111f5f: jmpq   0x0000000104111f5f  ;   {runtime_call}
  0x0000000104111f64: nop
  0x0000000104111f65: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000104111f6f: jmpq   0x0000000104111f6f  ;   {runtime_call}
  0x0000000104111f74: nop
  0x0000000104111f75: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000104111f7f: jmpq   0x0000000104111f7f  ;   {runtime_call}
[Exception Handler]
  0x0000000104111f84: callq  0x0000000104100420  ;   {runtime_call}
  0x0000000104111f89: mov    %rsp,-0x28(%rsp)
  0x0000000104111f8e: sub    $0x80,%rsp
  0x0000000104111f95: mov    %rax,0x78(%rsp)
  0x0000000104111f9a: mov    %rcx,0x70(%rsp)
  0x0000000104111f9f: mov    %rdx,0x68(%rsp)
  0x0000000104111fa4: mov    %rbx,0x60(%rsp)
  0x0000000104111fa9: mov    %rbp,0x50(%rsp)
  0x0000000104111fae: mov    %rsi,0x48(%rsp)
  0x0000000104111fb3: mov    %rdi,0x40(%rsp)
  0x0000000104111fb8: mov    %r8,0x38(%rsp)
  0x0000000104111fbd: mov    %r9,0x30(%rsp)
  0x0000000104111fc2: mov    %r10,0x28(%rsp)
  0x0000000104111fc7: mov    %r11,0x20(%rsp)
  0x0000000104111fcc: mov    %r12,0x18(%rsp)
  0x0000000104111fd1: mov    %r13,0x10(%rsp)
  0x0000000104111fd6: mov    %r14,0x8(%rsp)
  0x0000000104111fdb: mov    %r15,(%rsp)
  0x0000000104111fdf: movabs $0x100641684,%rdi  ;   {external_word}
  0x0000000104111fe9: movabs $0x104111f89,%rsi  ;   {internal_word}
  0x0000000104111ff3: mov    %rsp,%rdx
  0x0000000104111ff6: and    $0xfffffffffffffff0,%rsp
  0x0000000104111ffa: callq  0x000000010046a1f6  ;   {runtime_call}
  0x0000000104111fff: hlt    
[Deopt Handler Code]
  0x0000000104112000: movabs $0x104112000,%r10  ;   {section_word}
  0x000000010411200a: push   %r10
  0x000000010411200c: jmpq   0x0000000104047500  ;   {runtime_call}
  0x0000000104112011: hlt    
  0x0000000104112012: hlt    
  0x0000000104112013: hlt    
  0x0000000104112014: hlt    
  0x0000000104112015: hlt    
  0x0000000104112016: hlt    
  0x0000000104112017: hlt    
<nmethod compile_id='11' compiler='C1' level='3' entry='0x0000000104111b20' size='2704' address='0x0000000104111950' relocation_offset='296' insts_offset='464' stub_offset='1520' scopes_data_offset='1752' scopes_pcs_offset='2040' dependencies_offset='2664' nul_chk_table_offset='2672' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='1671' iicount='1671' stamp='0.513'/>
Decoding compiled method 0x00000001041114d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000011747a5f8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;
  #           [sp+0x50]  (sp of caller)
  0x0000000104111640: mov    0x8(%rsi),%r10d
  0x0000000104111644: shl    $0x3,%r10
  0x0000000104111648: cmp    %rax,%r10
  0x000000010411164b: jne    0x0000000104045e60  ;   {runtime_call}
  0x0000000104111651: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010411165c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000104111660: mov    %eax,-0x14000(%rsp)
  0x0000000104111667: push   %rbp
  0x0000000104111668: sub    $0x40,%rsp
  0x000000010411166c: mov    %rsi,%r8
  0x000000010411166f: movabs $0x1176b5990,%rdx  ;   {metadata(method data for {method} {0x000000011747a5f8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000104111679: mov    0xdc(%rdx),%esi
  0x000000010411167f: add    $0x8,%esi
  0x0000000104111682: mov    %esi,0xdc(%rdx)
  0x0000000104111688: movabs $0x11747a5f8,%rdx  ;   {metadata({method} {0x000000011747a5f8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000104111692: and    $0x1ff8,%esi
  0x0000000104111698: cmp    $0x0,%esi
  0x000000010411169b: je     0x000000010411172d
  0x00000001041116a1: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00000001041116ab: mov    0x60(%r15),%rax
  0x00000001041116af: lea    0x18(%rax),%rdi
  0x00000001041116b3: cmp    0x70(%r15),%rdi
  0x00000001041116b7: ja     0x0000000104111744
  0x00000001041116bd: mov    %rdi,0x60(%r15)
  0x00000001041116c1: mov    0xa8(%rdx),%rcx
  0x00000001041116c8: mov    %rcx,(%rax)
  0x00000001041116cb: mov    %rdx,%rcx
  0x00000001041116ce: shr    $0x3,%rcx
  0x00000001041116d2: mov    %ecx,0x8(%rax)
  0x00000001041116d5: xor    %rcx,%rcx
  0x00000001041116d8: mov    %ecx,0xc(%rax)
  0x00000001041116db: xor    %rcx,%rcx
  0x00000001041116de: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)

  0x00000001041116e2: mov    0x10(%r8),%edx
  0x00000001041116e6: shl    $0x3,%rdx          ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 407)

  0x00000001041116ea: mov    0xc(%r8),%r8d      ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 407)

  0x00000001041116ee: mov    %rax,%rcx
  0x00000001041116f1: movabs $0x1176b5990,%rsi  ;   {metadata(method data for {method} {0x000000011747a5f8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000001041116fb: addq   $0x1,0x108(%rsi)
  0x0000000104111703: mov    $0x0,%ecx
  0x0000000104111708: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)

  0x000000010411170b: mov    %rax,0x30(%rsp)
  0x0000000104111710: nop
  0x0000000104111711: nop
  0x0000000104111712: nop
  0x0000000104111713: nop
  0x0000000104111714: nop
  0x0000000104111715: nop
  0x0000000104111716: nop
  0x0000000104111717: callq  0x00000001040460a0  ; OopMap{[48]=Oop off=220}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ;   {optimized virtual_call}
  0x000000010411171c: mov    0x30(%rsp),%rax
  0x0000000104111721: add    $0x40,%rsp
  0x0000000104111725: pop    %rbp
  0x0000000104111726: test   %eax,-0x30b162c(%rip)        # 0x0000000101060100
                                                ;   {poll_return}
  0x000000010411172c: retq   
  0x000000010411172d: mov    %rdx,0x8(%rsp)
  0x0000000104111732: movq   $0xffffffffffffffff,(%rsp)
  0x000000010411173a: callq  0x0000000104102d20  ; OopMap{r8=Oop off=255}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ;   {runtime_call}
  0x000000010411173f: jmpq   0x00000001041116a1
  0x0000000104111744: mov    %rdx,%rdx
  0x0000000104111747: callq  0x0000000104071260  ; OopMap{r8=Oop off=268}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ;   {runtime_call}
  0x000000010411174c: jmp    0x00000001041116e2
  0x000000010411174e: nop
  0x000000010411174f: nop
  0x0000000104111750: mov    0x2a8(%r15),%rax
  0x0000000104111757: movabs $0x0,%r10
  0x0000000104111761: mov    %r10,0x2a8(%r15)
  0x0000000104111768: movabs $0x0,%r10
  0x0000000104111772: mov    %r10,0x2b0(%r15)
  0x0000000104111779: add    $0x40,%rsp
  0x000000010411177d: pop    %rbp
  0x000000010411177e: jmpq   0x0000000104072c60  ;   {runtime_call}
  0x0000000104111783: hlt    
  0x0000000104111784: hlt    
  0x0000000104111785: hlt    
  0x0000000104111786: hlt    
  0x0000000104111787: hlt    
  0x0000000104111788: hlt    
  0x0000000104111789: hlt    
  0x000000010411178a: hlt    
  0x000000010411178b: hlt    
  0x000000010411178c: hlt    
  0x000000010411178d: hlt    
  0x000000010411178e: hlt    
  0x000000010411178f: hlt    
  0x0000000104111790: hlt    
  0x0000000104111791: hlt    
  0x0000000104111792: hlt    
  0x0000000104111793: hlt    
  0x0000000104111794: hlt    
  0x0000000104111795: hlt    
  0x0000000104111796: hlt    
  0x0000000104111797: hlt    
  0x0000000104111798: hlt    
  0x0000000104111799: hlt    
  0x000000010411179a: hlt    
  0x000000010411179b: hlt    
  0x000000010411179c: hlt    
  0x000000010411179d: hlt    
  0x000000010411179e: hlt    
  0x000000010411179f: hlt    
[Stub Code]
  0x00000001041117a0: nop                       ;   {no_reloc}
  0x00000001041117a1: nop
  0x00000001041117a2: nop
  0x00000001041117a3: nop
  0x00000001041117a4: nop
  0x00000001041117a5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000001041117af: jmpq   0x00000001041117af  ;   {runtime_call}
[Exception Handler]
  0x00000001041117b4: callq  0x0000000104100420  ;   {runtime_call}
  0x00000001041117b9: mov    %rsp,-0x28(%rsp)
  0x00000001041117be: sub    $0x80,%rsp
  0x00000001041117c5: mov    %rax,0x78(%rsp)
  0x00000001041117ca: mov    %rcx,0x70(%rsp)
  0x00000001041117cf: mov    %rdx,0x68(%rsp)
  0x00000001041117d4: mov    %rbx,0x60(%rsp)
  0x00000001041117d9: mov    %rbp,0x50(%rsp)
  0x00000001041117de: mov    %rsi,0x48(%rsp)
  0x00000001041117e3: mov    %rdi,0x40(%rsp)
  0x00000001041117e8: mov    %r8,0x38(%rsp)
  0x00000001041117ed: mov    %r9,0x30(%rsp)
  0x00000001041117f2: mov    %r10,0x28(%rsp)
  0x00000001041117f7: mov    %r11,0x20(%rsp)
  0x00000001041117fc: mov    %r12,0x18(%rsp)
  0x0000000104111801: mov    %r13,0x10(%rsp)
  0x0000000104111806: mov    %r14,0x8(%rsp)
  0x000000010411180b: mov    %r15,(%rsp)
  0x000000010411180f: movabs $0x100641684,%rdi  ;   {external_word}
  0x0000000104111819: movabs $0x1041117b9,%rsi  ;   {internal_word}
  0x0000000104111823: mov    %rsp,%rdx
  0x0000000104111826: and    $0xfffffffffffffff0,%rsp
  0x000000010411182a: callq  0x000000010046a1f6  ;   {runtime_call}
  0x000000010411182f: hlt    
[Deopt Handler Code]
  0x0000000104111830: movabs $0x104111830,%r10  ;   {section_word}
  0x000000010411183a: push   %r10
  0x000000010411183c: jmpq   0x0000000104047500  ;   {runtime_call}
  0x0000000104111841: hlt    
  0x0000000104111842: hlt    
  0x0000000104111843: hlt    
  0x0000000104111844: hlt    
  0x0000000104111845: hlt    
  0x0000000104111846: hlt    
  0x0000000104111847: hlt    
<nmethod compile_id='9' compiler='C1' level='3' entry='0x0000000104111640' size='1104' address='0x00000001041114d0' relocation_offset='296' insts_offset='368' stub_offset='720' scopes_data_offset='896' scopes_pcs_offset='952' dependencies_offset='1096' method='java/lang/StringBuilder toString ()Ljava/lang/String;' bytes='17' count='514' iicount='514' stamp='0.516'/>
<writer thread='3075'/>
<task_queued compile_id='12' method='java/lang/String length ()I' bytes='6' count='5376' iicount='5376' level='3' stamp='0.516' comment='tiered' hot_count='5376'/>
<writer thread='17155'/>
Decoding compiled method 0x0000000104111110:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000117403c60} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000104111280: mov    0x8(%rsi),%r10d
  0x0000000104111284: shl    $0x3,%r10
  0x0000000104111288: cmp    %rax,%r10
  0x000000010411128b: jne    0x0000000104045e60  ;   {runtime_call}
  0x0000000104111291: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010411129c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000001041112a0: mov    %eax,-0x14000(%rsp)
  0x00000001041112a7: push   %rbp
  0x00000001041112a8: sub    $0x30,%rsp
  0x00000001041112ac: movabs $0x1175d4558,%rax  ;   {metadata(method data for {method} {0x0000000117403c60} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00000001041112b6: mov    0xdc(%rax),%edi
  0x00000001041112bc: add    $0x8,%edi
  0x00000001041112bf: mov    %edi,0xdc(%rax)
  0x00000001041112c5: movabs $0x117403c60,%rax  ;   {metadata({method} {0x0000000117403c60} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00000001041112cf: and    $0x1ff8,%edi
  0x00000001041112d5: cmp    $0x0,%edi
  0x00000001041112d8: je     0x00000001041112f4  ;*aload_0
                                                ; - java.lang.String::length@0 (line 623)

  0x00000001041112de: mov    0xc(%rsi),%eax
  0x00000001041112e1: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)

  0x00000001041112e5: mov    0xc(%rax),%eax     ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; implicit exception: dispatches to 0x0000000104111308
  0x00000001041112e8: add    $0x30,%rsp
  0x00000001041112ec: pop    %rbp
  0x00000001041112ed: test   %eax,-0x30b11f3(%rip)        # 0x0000000101060100
                                                ;   {poll_return}
  0x00000001041112f3: retq   
  0x00000001041112f4: mov    %rax,0x8(%rsp)
  0x00000001041112f9: movq   $0xffffffffffffffff,(%rsp)
  0x0000000104111301: callq  0x0000000104102d20  ; OopMap{rsi=Oop off=134}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ;   {runtime_call}
  0x0000000104111306: jmp    0x00000001041112de
  0x0000000104111308: callq  0x0000000104072100  ; OopMap{off=141}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ;   {runtime_call}
  0x000000010411130d: nop
  0x000000010411130e: nop
  0x000000010411130f: mov    0x2a8(%r15),%rax
  0x0000000104111316: movabs $0x0,%r10
  0x0000000104111320: mov    %r10,0x2a8(%r15)
  0x0000000104111327: movabs $0x0,%r10
  0x0000000104111331: mov    %r10,0x2b0(%r15)
  0x0000000104111338: add    $0x30,%rsp
  0x000000010411133c: pop    %rbp
  0x000000010411133d: jmpq   0x0000000104072c60  ;   {runtime_call}
  0x0000000104111342: hlt    
  0x0000000104111343: hlt    
  0x0000000104111344: hlt    
  0x0000000104111345: hlt    
  0x0000000104111346: hlt    
  0x0000000104111347: hlt    
  0x0000000104111348: hlt    
  0x0000000104111349: hlt    
  0x000000010411134a: hlt    
  0x000000010411134b: hlt    
  0x000000010411134c: hlt    
  0x000000010411134d: hlt    
  0x000000010411134e: hlt    
  0x000000010411134f: hlt    
  0x0000000104111350: hlt    
  0x0000000104111351: hlt    
  0x0000000104111352: hlt    
  0x0000000104111353: hlt    
  0x0000000104111354: hlt    
  0x0000000104111355: hlt    
  0x0000000104111356: hlt    
  0x0000000104111357: hlt    
  0x0000000104111358: hlt    
  0x0000000104111359: hlt    
  0x000000010411135a: hlt    
  0x000000010411135b: hlt    
  0x000000010411135c: hlt    
  0x000000010411135d: hlt    
  0x000000010411135e: hlt    
  0x000000010411135f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000104111360: callq  0x0000000104100420  ;   {no_reloc}
  0x0000000104111365: mov    %rsp,-0x28(%rsp)
  0x000000010411136a: sub    $0x80,%rsp
  0x0000000104111371: mov    %rax,0x78(%rsp)
  0x0000000104111376: mov    %rcx,0x70(%rsp)
  0x000000010411137b: mov    %rdx,0x68(%rsp)
  0x0000000104111380: mov    %rbx,0x60(%rsp)
  0x0000000104111385: mov    %rbp,0x50(%rsp)
  0x000000010411138a: mov    %rsi,0x48(%rsp)
  0x000000010411138f: mov    %rdi,0x40(%rsp)
  0x0000000104111394: mov    %r8,0x38(%rsp)
  0x0000000104111399: mov    %r9,0x30(%rsp)
  0x000000010411139e: mov    %r10,0x28(%rsp)
  0x00000001041113a3: mov    %r11,0x20(%rsp)
  0x00000001041113a8: mov    %r12,0x18(%rsp)
  0x00000001041113ad: mov    %r13,0x10(%rsp)
  0x00000001041113b2: mov    %r14,0x8(%rsp)
  0x00000001041113b7: mov    %r15,(%rsp)
  0x00000001041113bb: movabs $0x100641684,%rdi  ;   {external_word}
  0x00000001041113c5: movabs $0x104111365,%rsi  ;   {internal_word}
  0x00000001041113cf: mov    %rsp,%rdx
  0x00000001041113d2: and    $0xfffffffffffffff0,%rsp
  0x00000001041113d6: callq  0x000000010046a1f6  ;   {runtime_call}
  0x00000001041113db: hlt    
[Deopt Handler Code]
  0x00000001041113dc: movabs $0x1041113dc,%r10  ;   {section_word}
  0x00000001041113e6: push   %r10
  0x00000001041113e8: jmpq   0x0000000104047500  ;   {runtime_call}
  0x00000001041113ed: hlt    
  0x00000001041113ee: hlt    
  0x00000001041113ef: hlt    
<nmethod compile_id='12' compiler='C1' level='3' entry='0x0000000104111280' size='920' address='0x0000000104111110' relocation_offset='296' insts_offset='368' stub_offset='592' scopes_data_offset='744' scopes_pcs_offset='784' dependencies_offset='896' nul_chk_table_offset='904' method='java/lang/String length ()I' bytes='6' count='5448' iicount='5448' stamp='0.518'/>
<writer thread='3075'/>
<task_queued compile_id='13' method='java/lang/StringBuilder &lt;init&gt; ()V' bytes='7' count='512' iicount='512' level='3' stamp='0.518' comment='tiered' hot_count='512'/>
<writer thread='17155'/>
Decoding compiled method 0x0000000104110bd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000117478f30} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;
  #           [sp+0x50]  (sp of caller)
  0x0000000104110d40: mov    0x8(%rsi),%r10d
  0x0000000104110d44: shl    $0x3,%r10
  0x0000000104110d48: cmp    %rax,%r10
  0x0000000104110d4b: jne    0x0000000104045e60  ;   {runtime_call}
  0x0000000104110d51: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000104110d5c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000104110d60: mov    %eax,-0x14000(%rsp)
  0x0000000104110d67: push   %rbp
  0x0000000104110d68: sub    $0x40,%rsp
  0x0000000104110d6c: mov    %rsi,%r8
  0x0000000104110d6f: movabs $0x1176b6db0,%rbx  ;   {metadata(method data for {method} {0x0000000117478f30} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000104110d79: mov    0xdc(%rbx),%edx
  0x0000000104110d7f: add    $0x8,%edx
  0x0000000104110d82: mov    %edx,0xdc(%rbx)
  0x0000000104110d88: movabs $0x117478f30,%rbx  ;   {metadata({method} {0x0000000117478f30} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000104110d92: and    $0x1ff8,%edx
  0x0000000104110d98: cmp    $0x0,%edx
  0x0000000104110d9b: je     0x0000000104110ed5  ;*aload_0
                                                ; - java.lang.StringBuilder::&lt;init&gt;@0 (line 89)

  0x0000000104110da1: mov    %r8,%rbx
  0x0000000104110da4: movabs $0x1176b6db0,%rdx  ;   {metadata(method data for {method} {0x0000000117478f30} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000104110dae: addq   $0x1,0x108(%rdx)
  0x0000000104110db6: movabs $0x1176353e8,%rbx  ;   {metadata(method data for {method} {0x0000000117475260} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000104110dc0: mov    0xdc(%rbx),%edx
  0x0000000104110dc6: add    $0x8,%edx
  0x0000000104110dc9: mov    %edx,0xdc(%rbx)
  0x0000000104110dcf: movabs $0x117475260,%rbx  ;   {metadata({method} {0x0000000117475260} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000104110dd9: and    $0x7ffff8,%edx
  0x0000000104110ddf: cmp    $0x0,%edx
  0x0000000104110de2: je     0x0000000104110eec
  0x0000000104110de8: mov    %r8,%rbx
  0x0000000104110deb: movabs $0x1176353e8,%rdx  ;   {metadata(method data for {method} {0x0000000117475260} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000104110df5: addq   $0x1,0x108(%rdx)
  0x0000000104110dfd: movabs $0x117577a10,%rbx  ;   {metadata(method data for {method} {0x0000000117400480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000104110e07: mov    0xdc(%rbx),%edx
  0x0000000104110e0d: add    $0x8,%edx
  0x0000000104110e10: mov    %edx,0xdc(%rbx)
  0x0000000104110e16: movabs $0x117400480,%rbx  ;   {metadata({method} {0x0000000117400480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000104110e20: and    $0x7ffff8,%edx
  0x0000000104110e26: cmp    $0x0,%edx
  0x0000000104110e29: je     0x0000000104110f03
  0x0000000104110e2f: mov    $0x10,%ebx
  0x0000000104110e34: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000104110e3e: movslq %ebx,%rbx
  0x0000000104110e41: mov    %rbx,%rdi
  0x0000000104110e44: cmp    $0xffffff,%rbx
  0x0000000104110e4b: ja     0x0000000104110f1a
  0x0000000104110e51: movabs $0x17,%rsi
  0x0000000104110e5b: lea    (%rsi,%rbx,2),%rsi
  0x0000000104110e5f: and    $0xfffffffffffffff8,%rsi
  0x0000000104110e63: mov    0x60(%r15),%rax
  0x0000000104110e67: lea    (%rax,%rsi,1),%rsi
  0x0000000104110e6b: cmp    0x70(%r15),%rsi
  0x0000000104110e6f: ja     0x0000000104110f1a
  0x0000000104110e75: mov    %rsi,0x60(%r15)
  0x0000000104110e79: sub    %rax,%rsi
  0x0000000104110e7c: movq   $0x1,(%rax)
  0x0000000104110e83: mov    %rdx,%rcx
  0x0000000104110e86: shr    $0x3,%rcx
  0x0000000104110e8a: mov    %ecx,0x8(%rax)
  0x0000000104110e8d: mov    %ebx,0xc(%rax)
  0x0000000104110e90: sub    $0x10,%rsi
  0x0000000104110e94: je     0x0000000104110eab
  0x0000000104110e9a: xor    %rbx,%rbx
  0x0000000104110e9d: shr    $0x3,%rsi
  0x0000000104110ea1: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000104110ea6: dec    %rsi
  0x0000000104110ea9: jne    0x0000000104110ea1  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)

  0x0000000104110eab: mov    %rax,%r10
  0x0000000104110eae: shr    $0x3,%r10
  0x0000000104110eb2: mov    %r10d,0x10(%r8)
  0x0000000104110eb6: shr    $0x9,%r8
  0x0000000104110eba: movabs $0xfda96000,%rsi
  0x0000000104110ec4: movb   $0x0,(%r8,%rsi,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)

  0x0000000104110ec9: add    $0x40,%rsp
  0x0000000104110ecd: pop    %rbp
  0x0000000104110ece: test   %eax,-0x30b0dd4(%rip)        # 0x0000000101060100
                                                ;   {poll_return}
  0x0000000104110ed4: retq   
  0x0000000104110ed5: mov    %rbx,0x8(%rsp)
  0x0000000104110eda: movq   $0xffffffffffffffff,(%rsp)
  0x0000000104110ee2: callq  0x0000000104102d20  ; OopMap{r8=Oop off=423}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 89)
                                                ;   {runtime_call}
  0x0000000104110ee7: jmpq   0x0000000104110da1
  0x0000000104110eec: mov    %rbx,0x8(%rsp)
  0x0000000104110ef1: movq   $0xffffffffffffffff,(%rsp)
  0x0000000104110ef9: callq  0x0000000104102d20  ; OopMap{r8=Oop off=446}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ;   {runtime_call}
  0x0000000104110efe: jmpq   0x0000000104110de8
  0x0000000104110f03: mov    %rbx,0x8(%rsp)
  0x0000000104110f08: movq   $0xffffffffffffffff,(%rsp)
  0x0000000104110f10: callq  0x0000000104102d20  ; OopMap{r8=Oop off=469}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ;   {runtime_call}
  0x0000000104110f15: jmpq   0x0000000104110e2f
  0x0000000104110f1a: callq  0x0000000104070920  ; OopMap{r8=Oop off=479}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ;   {runtime_call}
  0x0000000104110f1f: jmp    0x0000000104110eab
  0x0000000104110f21: nop
  0x0000000104110f22: nop
  0x0000000104110f23: mov    0x2a8(%r15),%rax
  0x0000000104110f2a: movabs $0x0,%r10
  0x0000000104110f34: mov    %r10,0x2a8(%r15)
  0x0000000104110f3b: movabs $0x0,%r10
  0x0000000104110f45: mov    %r10,0x2b0(%r15)
  0x0000000104110f4c: add    $0x40,%rsp
  0x0000000104110f50: pop    %rbp
  0x0000000104110f51: jmpq   0x0000000104072c60  ;   {runtime_call}
  0x0000000104110f56: hlt    
  0x0000000104110f57: hlt    
  0x0000000104110f58: hlt    
  0x0000000104110f59: hlt    
  0x0000000104110f5a: hlt    
  0x0000000104110f5b: hlt    
  0x0000000104110f5c: hlt    
  0x0000000104110f5d: hlt    
  0x0000000104110f5e: hlt    
  0x0000000104110f5f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000104110f60: callq  0x0000000104100420  ;   {no_reloc}
  0x0000000104110f65: mov    %rsp,-0x28(%rsp)
  0x0000000104110f6a: sub    $0x80,%rsp
  0x0000000104110f71: mov    %rax,0x78(%rsp)
  0x0000000104110f76: mov    %rcx,0x70(%rsp)
  0x0000000104110f7b: mov    %rdx,0x68(%rsp)
  0x0000000104110f80: mov    %rbx,0x60(%rsp)
  0x0000000104110f85: mov    %rbp,0x50(%rsp)
  0x0000000104110f8a: mov    %rsi,0x48(%rsp)
  0x0000000104110f8f: mov    %rdi,0x40(%rsp)
  0x0000000104110f94: mov    %r8,0x38(%rsp)
  0x0000000104110f99: mov    %r9,0x30(%rsp)
  0x0000000104110f9e: mov    %r10,0x28(%rsp)
  0x0000000104110fa3: mov    %r11,0x20(%rsp)
  0x0000000104110fa8: mov    %r12,0x18(%rsp)
  0x0000000104110fad: mov    %r13,0x10(%rsp)
  0x0000000104110fb2: mov    %r14,0x8(%rsp)
  0x0000000104110fb7: mov    %r15,(%rsp)
  0x0000000104110fbb: movabs $0x100641684,%rdi  ;   {external_word}
  0x0000000104110fc5: movabs $0x104110f65,%rsi  ;   {internal_word}
  0x0000000104110fcf: mov    %rsp,%rdx
  0x0000000104110fd2: and    $0xfffffffffffffff0,%rsp
  0x0000000104110fd6: callq  0x000000010046a1f6  ;   {runtime_call}
  0x0000000104110fdb: hlt    
[Deopt Handler Code]
  0x0000000104110fdc: movabs $0x104110fdc,%r10  ;   {section_word}
  0x0000000104110fe6: push   %r10
  0x0000000104110fe8: jmpq   0x0000000104047500  ;   {runtime_call}
  0x0000000104110fed: hlt    
  0x0000000104110fee: hlt    
  0x0000000104110fef: hlt    
<nmethod compile_id='13' compiler='C1' level='3' entry='0x0000000104110d40' size='1312' address='0x0000000104110bd0' relocation_offset='296' insts_offset='368' stub_offset='912' scopes_data_offset='1080' scopes_pcs_offset='1160' dependencies_offset='1304' method='java/lang/StringBuilder &lt;init&gt; ()V' bytes='7' count='513' iicount='513' stamp='0.521'/>
<writer thread='3075'/>
[Loaded java.io.FileOutputStream$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.launcher.LauncherHelper from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
<task_queued compile_id='14' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='1392' backedge_count='2908' iicount='1392' level='3' stamp='0.522' comment='tiered' hot_count='1392'/>
<task_queued compile_id='15' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='768' iicount='768' level='3' stamp='0.522' comment='tiered' hot_count='768'/>
<task_queued compile_id='16' method='java/lang/String endsWith (Ljava/lang/String;)Z' bytes='17' count='640' iicount='640' level='3' stamp='0.522' comment='tiered' hot_count='640'/>
<task_queued compile_id='17' method='java/util/ArrayList size ()I' bytes='5' count='768' iicount='768' level='1' stamp='0.522' comment='tiered' hot_count='768'/>
<task_queued compile_id='18' method='java/lang/String toCharArray ()[C' bytes='25' count='896' iicount='896' level='3' stamp='0.522' comment='tiered' hot_count='896'/>
<task_queued compile_id='19' compile_kind='osr' method='sun/nio/cs/UTF_8$Encoder encode ([CII[B)I' bytes='359' count='1445' backedge_count='90112' iicount='1445' osr_bci='20' stamp='0.522' comment='tiered' hot_count='90112'/>
<writer thread='17155'/>
Decoding compiled method 0x0000000104110290:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000117404df8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  # parm1:    rcx       = int
  #           [sp+0x40]  (sp of caller)
  0x0000000104110400: mov    0x8(%rsi),%r10d
  0x0000000104110404: shl    $0x3,%r10
  0x0000000104110408: cmp    %rax,%r10
  0x000000010411040b: jne    0x0000000104045e60  ;   {runtime_call}
  0x0000000104110411: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010411041c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000104110420: mov    %eax,-0x14000(%rsp)
  0x0000000104110427: push   %rbp
  0x0000000104110428: sub    $0x30,%rsp
  0x000000010411042c: movabs $0x1176156c8,%rax  ;   {metadata(method data for {method} {0x0000000117404df8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000104110436: mov    0xdc(%rax),%edi
  0x000000010411043c: add    $0x8,%edi
  0x000000010411043f: mov    %edi,0xdc(%rax)
  0x0000000104110445: movabs $0x117404df8,%rax  ;   {metadata({method} {0x0000000117404df8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000010411044f: and    $0x1ff8,%edi
  0x0000000104110455: cmp    $0x0,%edi
  0x0000000104110458: je     0x000000010411060d  ;*aload_0
                                                ; - java.lang.String::startsWith@0 (line 1403)

  0x000000010411045e: mov    0xc(%rsi),%eax
  0x0000000104110461: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::startsWith@1 (line 1403)

  0x0000000104110465: mov    0xc(%rdx),%esi     ; implicit exception: dispatches to 0x0000000104110624
  0x0000000104110468: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::startsWith@9 (line 1405)

  0x000000010411046c: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - java.lang.String::startsWith@21 (line 1407)
                                                ; implicit exception: dispatches to 0x0000000104110629
  0x000000010411046f: cmp    $0x0,%ecx
  0x0000000104110472: movabs $0x1176156c8,%rbx  ;   {metadata(method data for {method} {0x0000000117404df8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000010411047c: movabs $0x108,%rdx
  0x0000000104110486: jl     0x0000000104110496
  0x000000010411048c: movabs $0x118,%rdx
  0x0000000104110496: mov    (%rbx,%rdx,1),%r8
  0x000000010411049a: lea    0x1(%r8),%r8
  0x000000010411049e: mov    %r8,(%rbx,%rdx,1)
  0x00000001041104a2: jl     0x00000001041105da  ;*iflt
                                                ; - java.lang.String::startsWith@25 (line 1409)

  0x00000001041104a8: mov    0xc(%rax),%ebx     ;*arraylength
                                                ; - java.lang.String::startsWith@33 (line 1409)
                                                ; implicit exception: dispatches to 0x000000010411062e
  0x00000001041104ab: sub    %edi,%ebx
  0x00000001041104ad: cmp    %ebx,%ecx
  0x00000001041104af: movabs $0x1176156c8,%rbx  ;   {metadata(method data for {method} {0x0000000117404df8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000001041104b9: movabs $0x128,%rdx
  0x00000001041104c3: jle    0x00000001041104d3
  0x00000001041104c9: movabs $0x138,%rdx
  0x00000001041104d3: mov    (%rbx,%rdx,1),%r8
  0x00000001041104d7: lea    0x1(%r8),%r8
  0x00000001041104db: mov    %r8,(%rbx,%rdx,1)
  0x00000001041104df: jg     0x00000001041105da  ;*if_icmple
                                                ; - java.lang.String::startsWith@37 (line 1409)

  0x00000001041104e5: mov    $0x0,%ebx
  0x00000001041104ea: jmpq   0x000000010411059a  ;*iinc
                                                ; - java.lang.String::startsWith@42 (line 1412)

  0x00000001041104ef: nop
  0x00000001041104f0: mov    %rcx,%rdx
  0x00000001041104f3: inc    %edx
  0x00000001041104f5: movslq %ecx,%r8
  0x00000001041104f8: cmp    0xc(%rax),%ecx
  0x00000001041104fb: jae    0x0000000104110633
  0x0000000104110501: movzwl 0x10(%rax,%r8,2),%ecx  ;*caload
                                                ; - java.lang.String::startsWith@56 (line 1413)

  0x0000000104110507: mov    %rbx,%r8
  0x000000010411050a: inc    %r8d
  0x000000010411050d: movslq %ebx,%r9
  0x0000000104110510: cmp    0xc(%rsi),%ebx
  0x0000000104110513: jae    0x000000010411063c
  0x0000000104110519: movzwl 0x10(%rsi,%r9,2),%ebx  ;*caload
                                                ; - java.lang.String::startsWith@64 (line 1413)

  0x000000010411051f: movabs $0x1176156c8,%r9   ;   {metadata(method data for {method} {0x0000000117404df8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000104110529: mov    0xe0(%r9),%r11d
  0x0000000104110530: add    $0x8,%r11d
  0x0000000104110534: mov    %r11d,0xe0(%r9)
  0x000000010411053b: movabs $0x117404df8,%r9   ;   {metadata({method} {0x0000000117404df8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000104110545: and    $0xfff8,%r11d
  0x000000010411054c: cmp    $0x0,%r11d
  0x0000000104110550: je     0x0000000104110645  ; OopMap{rsi=Oop rax=Oop off=342}
                                                ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)

  0x0000000104110556: test   %eax,-0x30b045c(%rip)        # 0x0000000101060100
                                                ;   {poll}
  0x000000010411055c: cmp    %ebx,%ecx
  0x000000010411055e: movabs $0x1176156c8,%rbx  ;   {metadata(method data for {method} {0x0000000117404df8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000104110568: movabs $0x168,%rcx
  0x0000000104110572: je     0x0000000104110582
  0x0000000104110578: movabs $0x178,%rcx
  0x0000000104110582: mov    (%rbx,%rcx,1),%r9
  0x0000000104110586: lea    0x1(%r9),%r9
  0x000000010411058a: mov    %r9,(%rbx,%rcx,1)
  0x000000010411058e: jne    0x00000001041105eb  ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)

  0x0000000104110594: mov    %r8,%rbx
  0x0000000104110597: mov    %rdx,%rcx          ;*iinc
                                                ; - java.lang.String::startsWith@42 (line 1412)

  0x000000010411059a: dec    %edi
  0x000000010411059c: cmp    $0x0,%edi
  0x000000010411059f: movabs $0x1176156c8,%rdx  ;   {metadata(method data for {method} {0x0000000117404df8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000001041105a9: movabs $0x148,%r8
  0x00000001041105b3: jl     0x00000001041105c3
  0x00000001041105b9: movabs $0x158,%r8
  0x00000001041105c3: mov    (%rdx,%r8,1),%r9
  0x00000001041105c7: lea    0x1(%r9),%r9
  0x00000001041105cb: mov    %r9,(%rdx,%r8,1)
  0x00000001041105cf: jl     0x00000001041105fc
  0x00000001041105d5: jmpq   0x00000001041104f0  ;*iflt
                                                ; - java.lang.String::startsWith@47 (line 1412)

  0x00000001041105da: mov    $0x0,%eax
  0x00000001041105df: add    $0x30,%rsp
  0x00000001041105e3: pop    %rbp
  0x00000001041105e4: test   %eax,-0x30b04ea(%rip)        # 0x0000000101060100
                                                ;   {poll_return}
  0x00000001041105ea: retq                      ;*ireturn
                                                ; - java.lang.String::startsWith@41 (line 1410)

  0x00000001041105eb: mov    $0x0,%eax
  0x00000001041105f0: add    $0x30,%rsp
  0x00000001041105f4: pop    %rbp
  0x00000001041105f5: test   %eax,-0x30b04fb(%rip)        # 0x0000000101060100
                                                ;   {poll_return}
  0x00000001041105fb: retq                      ;*ireturn
                                                ; - java.lang.String::startsWith@69 (line 1414)

  0x00000001041105fc: mov    $0x1,%eax
  0x0000000104110601: add    $0x30,%rsp
  0x0000000104110605: pop    %rbp
  0x0000000104110606: test   %eax,-0x30b050c(%rip)        # 0x0000000101060100
                                                ;   {poll_return}
  0x000000010411060c: retq   
  0x000000010411060d: mov    %rax,0x8(%rsp)
  0x0000000104110612: movq   $0xffffffffffffffff,(%rsp)
  0x000000010411061a: callq  0x0000000104102d20  ; OopMap{rsi=Oop rdx=Oop off=543}
                                                ;*synchronization entry
                                                ; - java.lang.String::startsWith@-1 (line 1403)
                                                ;   {runtime_call}
  0x000000010411061f: jmpq   0x000000010411045e
  0x0000000104110624: callq  0x0000000104072100  ; OopMap{rax=Oop off=553}
                                                ;*getfield value
                                                ; - java.lang.String::startsWith@9 (line 1405)
                                                ;   {runtime_call}
  0x0000000104110629: callq  0x0000000104072100  ; OopMap{rax=Oop rsi=Oop off=558}
                                                ;*arraylength
                                                ; - java.lang.String::startsWith@21 (line 1407)
                                                ;   {runtime_call}
  0x000000010411062e: callq  0x0000000104072100  ; OopMap{rsi=Oop rax=Oop off=563}
                                                ;*arraylength
                                                ; - java.lang.String::startsWith@33 (line 1409)
                                                ;   {runtime_call}
  0x0000000104110633: mov    %rcx,(%rsp)
  0x0000000104110637: callq  0x00000001040727c0  ; OopMap{rsi=Oop rax=Oop off=572}
                                                ;*caload
                                                ; - java.lang.String::startsWith@56 (line 1413)
                                                ;   {runtime_call}
  0x000000010411063c: mov    %rbx,(%rsp)
  0x0000000104110640: callq  0x00000001040727c0  ; OopMap{rsi=Oop rax=Oop off=581}
                                                ;*caload
                                                ; - java.lang.String::startsWith@64 (line 1413)
                                                ;   {runtime_call}
  0x0000000104110645: mov    %r9,0x8(%rsp)
  0x000000010411064a: movq   $0x41,(%rsp)
  0x0000000104110652: callq  0x0000000104102d20  ; OopMap{rsi=Oop rax=Oop off=599}
                                                ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)
                                                ;   {runtime_call}
  0x0000000104110657: jmpq   0x0000000104110556
  0x000000010411065c: nop
  0x000000010411065d: nop
  0x000000010411065e: mov    0x2a8(%r15),%rax
  0x0000000104110665: movabs $0x0,%r10
  0x000000010411066f: mov    %r10,0x2a8(%r15)
  0x0000000104110676: movabs $0x0,%r10
  0x0000000104110680: mov    %r10,0x2b0(%r15)
  0x0000000104110687: add    $0x30,%rsp
  0x000000010411068b: pop    %rbp
  0x000000010411068c: jmpq   0x0000000104072c60  ;   {runtime_call}
  0x0000000104110691: hlt    
  0x0000000104110692: hlt    
  0x0000000104110693: hlt    
  0x0000000104110694: hlt    
  0x0000000104110695: hlt    
  0x0000000104110696: hlt    
  0x0000000104110697: hlt    
  0x0000000104110698: hlt    
  0x0000000104110699: hlt    
  0x000000010411069a: hlt    
  0x000000010411069b: hlt    
  0x000000010411069c: hlt    
  0x000000010411069d: hlt    
  0x000000010411069e: hlt    
  0x000000010411069f: hlt    
[Exception Handler]
[Stub Code]
  0x00000001041106a0: callq  0x0000000104100420  ;   {no_reloc}
  0x00000001041106a5: mov    %rsp,-0x28(%rsp)
  0x00000001041106aa: sub    $0x80,%rsp
  0x00000001041106b1: mov    %rax,0x78(%rsp)
  0x00000001041106b6: mov    %rcx,0x70(%rsp)
  0x00000001041106bb: mov    %rdx,0x68(%rsp)
  0x00000001041106c0: mov    %rbx,0x60(%rsp)
  0x00000001041106c5: mov    %rbp,0x50(%rsp)
  0x00000001041106ca: mov    %rsi,0x48(%rsp)
  0x00000001041106cf: mov    %rdi,0x40(%rsp)
  0x00000001041106d4: mov    %r8,0x38(%rsp)
  0x00000001041106d9: mov    %r9,0x30(%rsp)
  0x00000001041106de: mov    %r10,0x28(%rsp)
  0x00000001041106e3: mov    %r11,0x20(%rsp)
  0x00000001041106e8: mov    %r12,0x18(%rsp)
  0x00000001041106ed: mov    %r13,0x10(%rsp)
  0x00000001041106f2: mov    %r14,0x8(%rsp)
  0x00000001041106f7: mov    %r15,(%rsp)
  0x00000001041106fb: movabs $0x100641684,%rdi  ;   {external_word}
  0x0000000104110705: movabs $0x1041106a5,%rsi  ;   {internal_word}
  0x000000010411070f: mov    %rsp,%rdx
  0x0000000104110712: and    $0xfffffffffffffff0,%rsp
  0x0000000104110716: callq  0x000000010046a1f6  ;   {runtime_call}
  0x000000010411071b: hlt    
[Deopt Handler Code]
  0x000000010411071c: movabs $0x10411071c,%r10  ;   {section_word}
  0x0000000104110726: push   %r10
  0x0000000104110728: jmpq   0x0000000104047500  ;   {runtime_call}
  0x000000010411072d: hlt    
  0x000000010411072e: hlt    
  0x000000010411072f: hlt    
<nmethod compile_id='14' compiler='C1' level='3' entry='0x0000000104110400' size='1824' address='0x0000000104110290' relocation_offset='296' insts_offset='368' stub_offset='1040' scopes_data_offset='1192' scopes_pcs_offset='1384' dependencies_offset='1784' nul_chk_table_offset='1792' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='1490' backedge_count='3031' iicount='1490' stamp='0.526'/>
Decoding compiled method 0x000000010410fe50:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000117404e90} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000010410ffc0: mov    0x8(%rsi),%r10d
  0x000000010410ffc4: shl    $0x3,%r10
  0x000000010410ffc8: cmp    %rax,%r10
  0x000000010410ffcb: jne    0x0000000104045e60  ;   {runtime_call}
  0x000000010410ffd1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010410ffdc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010410ffe0: mov    %eax,-0x14000(%rsp)
  0x000000010410ffe7: push   %rbp
  0x000000010410ffe8: sub    $0x30,%rsp
  0x000000010410ffec: movabs $0x117653090,%rcx  ;   {metadata(method data for {method} {0x0000000117404e90} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000010410fff6: mov    0xdc(%rcx),%edi
  0x000000010410fffc: add    $0x8,%edi
  0x000000010410ffff: mov    %edi,0xdc(%rcx)
  0x0000000104110005: movabs $0x117404e90,%rcx  ;   {metadata({method} {0x0000000117404e90} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000010411000f: and    $0x1ff8,%edi
  0x0000000104110015: cmp    $0x0,%edi
  0x0000000104110018: je     0x00000001041100cb  ;*aload_0
                                                ; - java.lang.String::startsWith@0 (line 1434)

  0x000000010411001e: mov    %rsi,%rcx
  0x0000000104110021: movabs $0x117653090,%rdi  ;   {metadata(method data for {method} {0x0000000117404e90} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000010411002b: mov    0x8(%rcx),%ecx
  0x000000010411002e: shl    $0x3,%rcx
  0x0000000104110032: cmp    0x110(%rdi),%rcx
  0x0000000104110039: jne    0x0000000104110048
  0x000000010411003b: addq   $0x1,0x118(%rdi)
  0x0000000104110043: jmpq   0x00000001041100ae
  0x0000000104110048: cmp    0x120(%rdi),%rcx
  0x000000010411004f: jne    0x000000010411005e
  0x0000000104110051: addq   $0x1,0x128(%rdi)
  0x0000000104110059: jmpq   0x00000001041100ae
  0x000000010411005e: cmpq   $0x0,0x110(%rdi)
  0x0000000104110069: jne    0x0000000104110082
  0x000000010411006b: mov    %rcx,0x110(%rdi)
  0x0000000104110072: movq   $0x1,0x118(%rdi)
  0x000000010411007d: jmpq   0x00000001041100ae
  0x0000000104110082: cmpq   $0x0,0x120(%rdi)
  0x000000010411008d: jne    0x00000001041100a6
  0x000000010411008f: mov    %rcx,0x120(%rdi)
  0x0000000104110096: movq   $0x1,0x128(%rdi)
  0x00000001041100a1: jmpq   0x00000001041100ae
  0x00000001041100a6: addq   $0x1,0x108(%rdi)
  0x00000001041100ae: mov    $0x0,%ecx          ;*invokevirtual startsWith
                                                ; - java.lang.String::startsWith@3 (line 1434)

  0x00000001041100b3: nop
  0x00000001041100b4: nop
  0x00000001041100b5: nop
  0x00000001041100b6: nop
  0x00000001041100b7: callq  0x00000001040460a0  ; OopMap{off=252}
                                                ;*invokevirtual startsWith
                                                ; - java.lang.String::startsWith@3 (line 1434)
                                                ;   {optimized virtual_call}
  0x00000001041100bc: and    $0x1,%eax
  0x00000001041100bf: add    $0x30,%rsp
  0x00000001041100c3: pop    %rbp
  0x00000001041100c4: test   %eax,-0x30affca(%rip)        # 0x0000000101060100
                                                ;   {poll_return}
  0x00000001041100ca: retq   
  0x00000001041100cb: mov    %rcx,0x8(%rsp)
  0x00000001041100d0: movq   $0xffffffffffffffff,(%rsp)
  0x00000001041100d8: callq  0x0000000104102d20  ; OopMap{rsi=Oop rdx=Oop off=285}
                                                ;*synchronization entry
                                                ; - java.lang.String::startsWith@-1 (line 1434)
                                                ;   {runtime_call}
  0x00000001041100dd: jmpq   0x000000010411001e
  0x00000001041100e2: nop
  0x00000001041100e3: nop
  0x00000001041100e4: mov    0x2a8(%r15),%rax
  0x00000001041100eb: movabs $0x0,%r10
  0x00000001041100f5: mov    %r10,0x2a8(%r15)
  0x00000001041100fc: movabs $0x0,%r10
  0x0000000104110106: mov    %r10,0x2b0(%r15)
  0x000000010411010d: add    $0x30,%rsp
  0x0000000104110111: pop    %rbp
  0x0000000104110112: jmpq   0x0000000104072c60  ;   {runtime_call}
  0x0000000104110117: hlt    
  0x0000000104110118: hlt    
  0x0000000104110119: hlt    
  0x000000010411011a: hlt    
  0x000000010411011b: hlt    
  0x000000010411011c: hlt    
  0x000000010411011d: hlt    
  0x000000010411011e: hlt    
  0x000000010411011f: hlt    
[Stub Code]
  0x0000000104110120: nop                       ;   {no_reloc}
  0x0000000104110121: nop
  0x0000000104110122: nop
  0x0000000104110123: nop
  0x0000000104110124: nop
  0x0000000104110125: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010411012f: jmpq   0x000000010411012f  ;   {runtime_call}
[Exception Handler]
  0x0000000104110134: callq  0x0000000104100420  ;   {runtime_call}
  0x0000000104110139: mov    %rsp,-0x28(%rsp)
  0x000000010411013e: sub    $0x80,%rsp
  0x0000000104110145: mov    %rax,0x78(%rsp)
  0x000000010411014a: mov    %rcx,0x70(%rsp)
  0x000000010411014f: mov    %rdx,0x68(%rsp)
  0x0000000104110154: mov    %rbx,0x60(%rsp)
  0x0000000104110159: mov    %rbp,0x50(%rsp)
  0x000000010411015e: mov    %rsi,0x48(%rsp)
  0x0000000104110163: mov    %rdi,0x40(%rsp)
  0x0000000104110168: mov    %r8,0x38(%rsp)
  0x000000010411016d: mov    %r9,0x30(%rsp)
  0x0000000104110172: mov    %r10,0x28(%rsp)
  0x0000000104110177: mov    %r11,0x20(%rsp)
  0x000000010411017c: mov    %r12,0x18(%rsp)
  0x0000000104110181: mov    %r13,0x10(%rsp)
  0x0000000104110186: mov    %r14,0x8(%rsp)
  0x000000010411018b: mov    %r15,(%rsp)
  0x000000010411018f: movabs $0x100641684,%rdi  ;   {external_word}
  0x0000000104110199: movabs $0x104110139,%rsi  ;   {internal_word}
  0x00000001041101a3: mov    %rsp,%rdx
  0x00000001041101a6: and    $0xfffffffffffffff0,%rsp
  0x00000001041101aa: callq  0x000000010046a1f6  ;   {runtime_call}
  0x00000001041101af: hlt    
[Deopt Handler Code]
  0x00000001041101b0: movabs $0x1041101b0,%r10  ;   {section_word}
  0x00000001041101ba: push   %r10
  0x00000001041101bc: jmpq   0x0000000104047500  ;   {runtime_call}
  0x00000001041101c1: hlt    
  0x00000001041101c2: hlt    
  0x00000001041101c3: hlt    
  0x00000001041101c4: hlt    
  0x00000001041101c5: hlt    
  0x00000001041101c6: hlt    
  0x00000001041101c7: hlt    
<nmethod compile_id='15' compiler='C1' level='3' entry='0x000000010410ffc0' size='1040' address='0x000000010410fe50' relocation_offset='296' insts_offset='368' stub_offset='720' scopes_data_offset='896' scopes_pcs_offset='936' dependencies_offset='1032' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='846' iicount='846' stamp='0.528'/>
Decoding compiled method 0x000000010410fb50:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000001174d1338} &apos;size&apos; &apos;()I&apos; in &apos;java/util/ArrayList&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000010410fca0: mov    0x8(%rsi),%r10d
  0x000000010410fca4: shl    $0x3,%r10
  0x000000010410fca8: cmp    %rax,%r10
  0x000000010410fcab: jne    0x0000000104045e60  ;   {runtime_call}
  0x000000010410fcb1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010410fcbc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010410fcc0: mov    %eax,-0x14000(%rsp)
  0x000000010410fcc7: push   %rbp
  0x000000010410fcc8: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.util.ArrayList::size@0 (line 282)

  0x000000010410fccc: mov    0x10(%rsi),%eax    ;*getfield size
                                                ; - java.util.ArrayList::size@1 (line 282)

  0x000000010410fccf: add    $0x30,%rsp
  0x000000010410fcd3: pop    %rbp
  0x000000010410fcd4: test   %eax,-0x30afbda(%rip)        # 0x0000000101060100
                                                ;   {poll_return}
  0x000000010410fcda: retq   
  0x000000010410fcdb: nop
  0x000000010410fcdc: nop
  0x000000010410fcdd: mov    0x2a8(%r15),%rax
  0x000000010410fce4: movabs $0x0,%r10
  0x000000010410fcee: mov    %r10,0x2a8(%r15)
  0x000000010410fcf5: movabs $0x0,%r10
  0x000000010410fcff: mov    %r10,0x2b0(%r15)
  0x000000010410fd06: add    $0x30,%rsp
  0x000000010410fd0a: pop    %rbp
  0x000000010410fd0b: jmpq   0x0000000104072c60  ;   {runtime_call}
  0x000000010410fd10: hlt    
  0x000000010410fd11: hlt    
  0x000000010410fd12: hlt    
  0x000000010410fd13: hlt    
  0x000000010410fd14: hlt    
  0x000000010410fd15: hlt    
  0x000000010410fd16: hlt    
  0x000000010410fd17: hlt    
  0x000000010410fd18: hlt    
  0x000000010410fd19: hlt    
  0x000000010410fd1a: hlt    
  0x000000010410fd1b: hlt    
  0x000000010410fd1c: hlt    
  0x000000010410fd1d: hlt    
  0x000000010410fd1e: hlt    
  0x000000010410fd1f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010410fd20: callq  0x0000000104100420  ;   {no_reloc}
  0x000000010410fd25: mov    %rsp,-0x28(%rsp)
  0x000000010410fd2a: sub    $0x80,%rsp
  0x000000010410fd31: mov    %rax,0x78(%rsp)
  0x000000010410fd36: mov    %rcx,0x70(%rsp)
  0x000000010410fd3b: mov    %rdx,0x68(%rsp)
  0x000000010410fd40: mov    %rbx,0x60(%rsp)
  0x000000010410fd45: mov    %rbp,0x50(%rsp)
  0x000000010410fd4a: mov    %rsi,0x48(%rsp)
  0x000000010410fd4f: mov    %rdi,0x40(%rsp)
  0x000000010410fd54: mov    %r8,0x38(%rsp)
  0x000000010410fd59: mov    %r9,0x30(%rsp)
  0x000000010410fd5e: mov    %r10,0x28(%rsp)
  0x000000010410fd63: mov    %r11,0x20(%rsp)
  0x000000010410fd68: mov    %r12,0x18(%rsp)
  0x000000010410fd6d: mov    %r13,0x10(%rsp)
  0x000000010410fd72: mov    %r14,0x8(%rsp)
  0x000000010410fd77: mov    %r15,(%rsp)
  0x000000010410fd7b: movabs $0x100641684,%rdi  ;   {external_word}
  0x000000010410fd85: movabs $0x10410fd25,%rsi  ;   {internal_word}
  0x000000010410fd8f: mov    %rsp,%rdx
  0x000000010410fd92: and    $0xfffffffffffffff0,%rsp
  0x000000010410fd96: callq  0x000000010046a1f6  ;   {runtime_call}
  0x000000010410fd9b: hlt    
[Deopt Handler Code]
  0x000000010410fd9c: movabs $0x10410fd9c,%r10  ;   {section_word}
  0x000000010410fda6: push   %r10
  0x000000010410fda8: jmpq   0x0000000104047500  ;   {runtime_call}
  0x000000010410fdad: hlt    
  0x000000010410fdae: hlt    
  0x000000010410fdaf: hlt    
<nmethod compile_id='17' compiler='C1' level='1' entry='0x000000010410fca0' size='704' address='0x000000010410fb50' relocation_offset='296' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' method='java/util/ArrayList size ()I' bytes='5' count='785' iicount='785' stamp='0.530'/>
Decoding compiled method 0x000000010410f610:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000117406ee8} &apos;toCharArray&apos; &apos;()[C&apos; in &apos;java/lang/String&apos;
  #           [sp+0x50]  (sp of caller)
  0x000000010410f780: mov    0x8(%rsi),%r10d
  0x000000010410f784: shl    $0x3,%r10
  0x000000010410f788: cmp    %rax,%r10
  0x000000010410f78b: jne    0x0000000104045e60  ;   {runtime_call}
  0x000000010410f791: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010410f79c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010410f7a0: mov    %eax,-0x14000(%rsp)
  0x000000010410f7a7: push   %rbp
  0x000000010410f7a8: sub    $0x40,%rsp
  0x000000010410f7ac: mov    %rsi,%r8
  0x000000010410f7af: movabs $0x117635520,%rbx  ;   {metadata(method data for {method} {0x0000000117406ee8} &apos;toCharArray&apos; &apos;()[C&apos; in &apos;java/lang/String&apos;)}
  0x000000010410f7b9: mov    0xdc(%rbx),%edx
  0x000000010410f7bf: add    $0x8,%edx
  0x000000010410f7c2: mov    %edx,0xdc(%rbx)
  0x000000010410f7c8: movabs $0x117406ee8,%rbx  ;   {metadata({method} {0x0000000117406ee8} &apos;toCharArray&apos; &apos;()[C&apos; in &apos;java/lang/String&apos;)}
  0x000000010410f7d2: and    $0x1ff8,%edx
  0x000000010410f7d8: cmp    $0x0,%edx
  0x000000010410f7db: je     0x000000010410f8e6  ;*aload_0
                                                ; - java.lang.String::toCharArray@0 (line 2899)

  0x000000010410f7e1: mov    0xc(%r8),%r9d
  0x000000010410f7e5: shl    $0x3,%r9           ;*getfield value
                                                ; - java.lang.String::toCharArray@1 (line 2899)

  0x000000010410f7e9: mov    0xc(%r9),%r11d     ;*arraylength
                                                ; - java.lang.String::toCharArray@4 (line 2899)
                                                ; implicit exception: dispatches to 0x000000010410f8fd
  0x000000010410f7ed: mov    %r11,%rbx
  0x000000010410f7f0: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000000010410f7fa: movslq %ebx,%rbx
  0x000000010410f7fd: mov    %rbx,%rdi
  0x000000010410f800: cmp    $0xffffff,%rbx
  0x000000010410f807: ja     0x000000010410f902
  0x000000010410f80d: movabs $0x17,%rsi
  0x000000010410f817: lea    (%rsi,%rbx,2),%rsi
  0x000000010410f81b: and    $0xfffffffffffffff8,%rsi
  0x000000010410f81f: mov    0x60(%r15),%rax
  0x000000010410f823: lea    (%rax,%rsi,1),%rsi
  0x000000010410f827: cmp    0x70(%r15),%rsi
  0x000000010410f82b: ja     0x000000010410f902
  0x000000010410f831: mov    %rsi,0x60(%r15)
  0x000000010410f835: sub    %rax,%rsi
  0x000000010410f838: movq   $0x1,(%rax)
  0x000000010410f83f: mov    %rdx,%rcx
  0x000000010410f842: shr    $0x3,%rcx
  0x000000010410f846: mov    %ecx,0x8(%rax)
  0x000000010410f849: mov    %ebx,0xc(%rax)
  0x000000010410f84c: sub    $0x10,%rsi
  0x000000010410f850: je     0x000000010410f867
  0x000000010410f856: xor    %rbx,%rbx
  0x000000010410f859: shr    $0x3,%rsi
  0x000000010410f85d: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000010410f862: dec    %rsi
  0x000000010410f865: jne    0x000000010410f85d  ;*newarray
                                                ; - java.lang.String::toCharArray@5 (line 2899)

  0x000000010410f867: movabs $0x117635520,%rsi  ;   {metadata(method data for {method} {0x0000000117406ee8} &apos;toCharArray&apos; &apos;()[C&apos; in &apos;java/lang/String&apos;)}
  0x000000010410f871: addq   $0x1,0x108(%rsi)
  0x000000010410f879: mov    %r9,%rsi
  0x000000010410f87c: mov    $0x0,%edx
  0x000000010410f881: mov    %rax,%rcx
  0x000000010410f884: mov    $0x0,%r8d
  0x000000010410f88a: mov    %r11,%r9
  0x000000010410f88d: mov    %rax,0x30(%rsp)
  0x000000010410f892: lea    (%r8,%r9,1),%rdi
  0x000000010410f896: cmp    0xc(%rcx),%edi
  0x000000010410f899: ja     0x000000010410f90c
  0x000000010410f89f: movslq %edx,%rdx
  0x000000010410f8a2: movslq %r8d,%r8
  0x000000010410f8a5: lea    0x10(%rsi,%rdx,2),%rdi
  0x000000010410f8aa: lea    0x10(%rcx,%r8,2),%rsi
  0x000000010410f8af: mov    %r9,%rdx
  0x000000010410f8b2: test   $0xf,%esp
  0x000000010410f8b8: je     0x000000010410f8d0
  0x000000010410f8be: sub    $0x8,%rsp
  0x000000010410f8c2: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x000000010410f8c7: add    $0x8,%rsp
  0x000000010410f8cb: jmpq   0x000000010410f8d5
  0x000000010410f8d0: callq  Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy
                                                ; - java.lang.String::toCharArray@20 (line 2900)
                                                ;   {runtime_call}
  0x000000010410f8d5: mov    0x30(%rsp),%rax
  0x000000010410f8da: add    $0x40,%rsp
  0x000000010410f8de: pop    %rbp
  0x000000010410f8df: test   %eax,-0x30af7e5(%rip)        # 0x0000000101060100
                                                ;   {poll_return}
  0x000000010410f8e5: retq   
  0x000000010410f8e6: mov    %rbx,0x8(%rsp)
  0x000000010410f8eb: movq   $0xffffffffffffffff,(%rsp)
  0x000000010410f8f3: callq  0x0000000104102d20  ; OopMap{r8=Oop off=376}
                                                ;*synchronization entry
                                                ; - java.lang.String::toCharArray@-1 (line 2899)
                                                ;   {runtime_call}
  0x000000010410f8f8: jmpq   0x000000010410f7e1
  0x000000010410f8fd: callq  0x0000000104072100  ; OopMap{r8=Oop r9=Oop off=386}
                                                ;*arraylength
                                                ; - java.lang.String::toCharArray@4 (line 2899)
                                                ;   {runtime_call}
  0x000000010410f902: callq  0x0000000104070920  ; OopMap{r8=Oop r9=Oop off=391}
                                                ;*newarray
                                                ; - java.lang.String::toCharArray@5 (line 2899)
                                                ;   {runtime_call}
  0x000000010410f907: jmpq   0x000000010410f867
  0x000000010410f90c: nop
  0x000000010410f90d: nop
  0x000000010410f90e: nop
  0x000000010410f90f: callq  0x0000000104046520  ; OopMap{[48]=Oop off=404}
                                                ;*invokestatic arraycopy
                                                ; - java.lang.String::toCharArray@20 (line 2900)
                                                ;   {static_call}
  0x000000010410f914: jmp    0x000000010410f8d5
  0x000000010410f916: nop
  0x000000010410f917: nop
  0x000000010410f918: mov    0x2a8(%r15),%rax
  0x000000010410f91f: movabs $0x0,%r10
  0x000000010410f929: mov    %r10,0x2a8(%r15)
  0x000000010410f930: movabs $0x0,%r10
  0x000000010410f93a: mov    %r10,0x2b0(%r15)
  0x000000010410f941: add    $0x40,%rsp
  0x000000010410f945: pop    %rbp
  0x000000010410f946: jmpq   0x0000000104072c60  ;   {runtime_call}
  0x000000010410f94b: hlt    
  0x000000010410f94c: hlt    
  0x000000010410f94d: hlt    
  0x000000010410f94e: hlt    
  0x000000010410f94f: hlt    
  0x000000010410f950: hlt    
  0x000000010410f951: hlt    
  0x000000010410f952: hlt    
  0x000000010410f953: hlt    
  0x000000010410f954: hlt    
  0x000000010410f955: hlt    
  0x000000010410f956: hlt    
  0x000000010410f957: hlt    
  0x000000010410f958: hlt    
  0x000000010410f959: hlt    
  0x000000010410f95a: hlt    
  0x000000010410f95b: hlt    
  0x000000010410f95c: hlt    
  0x000000010410f95d: hlt    
  0x000000010410f95e: hlt    
  0x000000010410f95f: hlt    
[Stub Code]
  0x000000010410f960: nop                       ;   {no_reloc}
  0x000000010410f961: nop
  0x000000010410f962: nop
  0x000000010410f963: nop
  0x000000010410f964: nop
  0x000000010410f965: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010410f96f: jmpq   0x000000010410f96f  ;   {runtime_call}
[Exception Handler]
  0x000000010410f974: callq  0x0000000104100420  ;   {runtime_call}
  0x000000010410f979: mov    %rsp,-0x28(%rsp)
  0x000000010410f97e: sub    $0x80,%rsp
  0x000000010410f985: mov    %rax,0x78(%rsp)
  0x000000010410f98a: mov    %rcx,0x70(%rsp)
  0x000000010410f98f: mov    %rdx,0x68(%rsp)
  0x000000010410f994: mov    %rbx,0x60(%rsp)
  0x000000010410f999: mov    %rbp,0x50(%rsp)
  0x000000010410f99e: mov    %rsi,0x48(%rsp)
  0x000000010410f9a3: mov    %rdi,0x40(%rsp)
  0x000000010410f9a8: mov    %r8,0x38(%rsp)
  0x000000010410f9ad: mov    %r9,0x30(%rsp)
  0x000000010410f9b2: mov    %r10,0x28(%rsp)
  0x000000010410f9b7: mov    %r11,0x20(%rsp)
  0x000000010410f9bc: mov    %r12,0x18(%rsp)
  0x000000010410f9c1: mov    %r13,0x10(%rsp)
  0x000000010410f9c6: mov    %r14,0x8(%rsp)
  0x000000010410f9cb: mov    %r15,(%rsp)
  0x000000010410f9cf: movabs $0x100641684,%rdi  ;   {external_word}
  0x000000010410f9d9: movabs $0x10410f979,%rsi  ;   {internal_word}
  0x000000010410f9e3: mov    %rsp,%rdx
  0x000000010410f9e6: and    $0xfffffffffffffff0,%rsp
  0x000000010410f9ea: callq  0x000000010046a1f6  ;   {runtime_call}
  0x000000010410f9ef: hlt    
[Deopt Handler Code]
  0x000000010410f9f0: movabs $0x10410f9f0,%r10  ;   {section_word}
  0x000000010410f9fa: push   %r10
  0x000000010410f9fc: jmpq   0x0000000104047500  ;   {runtime_call}
  0x000000010410fa01: hlt    
  0x000000010410fa02: hlt    
  0x000000010410fa03: hlt    
  0x000000010410fa04: hlt    
  0x000000010410fa05: hlt    
  0x000000010410fa06: hlt    
  0x000000010410fa07: hlt    
<nmethod compile_id='18' compiler='C1' level='3' entry='0x000000010410f780' size='1296' address='0x000000010410f610' relocation_offset='296' insts_offset='368' stub_offset='848' scopes_data_offset='1024' scopes_pcs_offset='1096' dependencies_offset='1272' nul_chk_table_offset='1280' method='java/lang/String toCharArray ()[C' bytes='25' count='908' iicount='908' stamp='0.533'/>
Decoding compiled method 0x000000010410f110:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000117404f30} &apos;endsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000010410f280: mov    0x8(%rsi),%r10d
  0x000000010410f284: shl    $0x3,%r10
  0x000000010410f288: cmp    %rax,%r10
  0x000000010410f28b: jne    0x0000000104045e60  ;   {runtime_call}
  0x000000010410f291: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010410f29c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010410f2a0: mov    %eax,-0x14000(%rsp)
  0x000000010410f2a7: push   %rbp
  0x000000010410f2a8: sub    $0x30,%rsp
  0x000000010410f2ac: movabs $0x117627390,%rcx  ;   {metadata(method data for {method} {0x0000000117404f30} &apos;endsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000010410f2b6: mov    0xdc(%rcx),%edi
  0x000000010410f2bc: add    $0x8,%edi
  0x000000010410f2bf: mov    %edi,0xdc(%rcx)
  0x000000010410f2c5: movabs $0x117404f30,%rcx  ;   {metadata({method} {0x0000000117404f30} &apos;endsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000010410f2cf: and    $0x1ff8,%edi
  0x000000010410f2d5: cmp    $0x0,%edi
  0x000000010410f2d8: je     0x000000010410f39b  ;*aload_0
                                                ; - java.lang.String::endsWith@0 (line 1449)

  0x000000010410f2de: mov    0xc(%rsi),%ecx
  0x000000010410f2e1: shl    $0x3,%rcx          ;*getfield value
                                                ; - java.lang.String::endsWith@3 (line 1449)

  0x000000010410f2e5: mov    0xc(%rcx),%ecx     ;*arraylength
                                                ; - java.lang.String::endsWith@6 (line 1449)
                                                ; implicit exception: dispatches to 0x000000010410f3b2
  0x000000010410f2e8: mov    0xc(%rdx),%edi     ; implicit exception: dispatches to 0x000000010410f3b7
  0x000000010410f2eb: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.String::endsWith@8 (line 1449)

  0x000000010410f2ef: mov    0xc(%rdi),%edi     ;*arraylength
                                                ; - java.lang.String::endsWith@11 (line 1449)
                                                ; implicit exception: dispatches to 0x000000010410f3bc
  0x000000010410f2f2: mov    %rsi,%rbx
  0x000000010410f2f5: movabs $0x117627390,%rax  ;   {metadata(method data for {method} {0x0000000117404f30} &apos;endsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000010410f2ff: mov    0x8(%rbx),%ebx
  0x000000010410f302: shl    $0x3,%rbx
  0x000000010410f306: cmp    0x110(%rax),%rbx
  0x000000010410f30d: jne    0x000000010410f31c
  0x000000010410f30f: addq   $0x1,0x118(%rax)
  0x000000010410f317: jmpq   0x000000010410f382
  0x000000010410f31c: cmp    0x120(%rax),%rbx
  0x000000010410f323: jne    0x000000010410f332
  0x000000010410f325: addq   $0x1,0x128(%rax)
  0x000000010410f32d: jmpq   0x000000010410f382
  0x000000010410f332: cmpq   $0x0,0x110(%rax)
  0x000000010410f33d: jne    0x000000010410f356
  0x000000010410f33f: mov    %rbx,0x110(%rax)
  0x000000010410f346: movq   $0x1,0x118(%rax)
  0x000000010410f351: jmpq   0x000000010410f382
  0x000000010410f356: cmpq   $0x0,0x120(%rax)
  0x000000010410f361: jne    0x000000010410f37a
  0x000000010410f363: mov    %rbx,0x120(%rax)
  0x000000010410f36a: movq   $0x1,0x128(%rax)
  0x000000010410f375: jmpq   0x000000010410f382
  0x000000010410f37a: addq   $0x1,0x108(%rax)
  0x000000010410f382: sub    %edi,%ecx
  0x000000010410f384: nop
  0x000000010410f385: nop
  0x000000010410f386: nop
  0x000000010410f387: callq  0x00000001040460a0  ; OopMap{off=268}
                                                ;*invokevirtual startsWith
                                                ; - java.lang.String::endsWith@13 (line 1449)
                                                ;   {optimized virtual_call}
  0x000000010410f38c: and    $0x1,%eax
  0x000000010410f38f: add    $0x30,%rsp
  0x000000010410f393: pop    %rbp
  0x000000010410f394: test   %eax,-0x30af29a(%rip)        # 0x0000000101060100
                                                ;   {poll_return}
  0x000000010410f39a: retq   
  0x000000010410f39b: mov    %rcx,0x8(%rsp)
  0x000000010410f3a0: movq   $0xffffffffffffffff,(%rsp)
  0x000000010410f3a8: callq  0x0000000104102d20  ; OopMap{rsi=Oop rdx=Oop off=301}
                                                ;*synchronization entry
                                                ; - java.lang.String::endsWith@-1 (line 1449)
                                                ;   {runtime_call}
  0x000000010410f3ad: jmpq   0x000000010410f2de
  0x000000010410f3b2: callq  0x0000000104072100  ; OopMap{rsi=Oop rdx=Oop off=311}
                                                ;*arraylength
                                                ; - java.lang.String::endsWith@6 (line 1449)
                                                ;   {runtime_call}
  0x000000010410f3b7: callq  0x0000000104072100  ; OopMap{rsi=Oop rdx=Oop off=316}
                                                ;*getfield value
                                                ; - java.lang.String::endsWith@8 (line 1449)
                                                ;   {runtime_call}
  0x000000010410f3bc: callq  0x0000000104072100  ; OopMap{rsi=Oop rdx=Oop off=321}
                                                ;*arraylength
                                                ; - java.lang.String::endsWith@11 (line 1449)
                                                ;   {runtime_call}
  0x000000010410f3c1: nop
  0x000000010410f3c2: nop
  0x000000010410f3c3: mov    0x2a8(%r15),%rax
  0x000000010410f3ca: movabs $0x0,%r10
  0x000000010410f3d4: mov    %r10,0x2a8(%r15)
  0x000000010410f3db: movabs $0x0,%r10
  0x000000010410f3e5: mov    %r10,0x2b0(%r15)
  0x000000010410f3ec: add    $0x30,%rsp
  0x000000010410f3f0: pop    %rbp
  0x000000010410f3f1: jmpq   0x0000000104072c60  ;   {runtime_call}
  0x000000010410f3f6: hlt    
  0x000000010410f3f7: hlt    
  0x000000010410f3f8: hlt    
  0x000000010410f3f9: hlt    
  0x000000010410f3fa: hlt    
  0x000000010410f3fb: hlt    
  0x000000010410f3fc: hlt    
  0x000000010410f3fd: hlt    
  0x000000010410f3fe: hlt    
  0x000000010410f3ff: hlt    
[Stub Code]
  0x000000010410f400: nop                       ;   {no_reloc}
  0x000000010410f401: nop
  0x000000010410f402: nop
  0x000000010410f403: nop
  0x000000010410f404: nop
  0x000000010410f405: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010410f40f: jmpq   0x000000010410f40f  ;   {runtime_call}
[Exception Handler]
  0x000000010410f414: callq  0x0000000104100420  ;   {runtime_call}
  0x000000010410f419: mov    %rsp,-0x28(%rsp)
  0x000000010410f41e: sub    $0x80,%rsp
  0x000000010410f425: mov    %rax,0x78(%rsp)
  0x000000010410f42a: mov    %rcx,0x70(%rsp)
  0x000000010410f42f: mov    %rdx,0x68(%rsp)
  0x000000010410f434: mov    %rbx,0x60(%rsp)
  0x000000010410f439: mov    %rbp,0x50(%rsp)
  0x000000010410f43e: mov    %rsi,0x48(%rsp)
  0x000000010410f443: mov    %rdi,0x40(%rsp)
  0x000000010410f448: mov    %r8,0x38(%rsp)
  0x000000010410f44d: mov    %r9,0x30(%rsp)
  0x000000010410f452: mov    %r10,0x28(%rsp)
  0x000000010410f457: mov    %r11,0x20(%rsp)
  0x000000010410f45c: mov    %r12,0x18(%rsp)
  0x000000010410f461: mov    %r13,0x10(%rsp)
  0x000000010410f466: mov    %r14,0x8(%rsp)
  0x000000010410f46b: mov    %r15,(%rsp)
  0x000000010410f46f: movabs $0x100641684,%rdi  ;   {external_word}
  0x000000010410f479: movabs $0x10410f419,%rsi  ;   {internal_word}
  0x000000010410f483: mov    %rsp,%rdx
  0x000000010410f486: and    $0xfffffffffffffff0,%rsp
  0x000000010410f48a: callq  0x000000010046a1f6  ;   {runtime_call}
  0x000000010410f48f: hlt    
[Deopt Handler Code]
  0x000000010410f490: movabs $0x10410f490,%r10  ;   {section_word}
  0x000000010410f49a: push   %r10
  0x000000010410f49c: jmpq   0x0000000104047500  ;   {runtime_call}
  0x000000010410f4a1: hlt    
  0x000000010410f4a2: hlt    
  0x000000010410f4a3: hlt    
  0x000000010410f4a4: hlt    
  0x000000010410f4a5: hlt    
  0x000000010410f4a6: hlt    
  0x000000010410f4a7: hlt    
<nmethod compile_id='16' compiler='C1' level='3' entry='0x000000010410f280' size='1232' address='0x000000010410f110' relocation_offset='296' insts_offset='368' stub_offset='752' scopes_data_offset='928' scopes_pcs_offset='1000' dependencies_offset='1192' nul_chk_table_offset='1200' method='java/lang/String endsWith (Ljava/lang/String;)Z' bytes='17' count='644' iicount='644' stamp='0.539'/>
<writer thread='3075'/>
<task_queued compile_id='20' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='9088' iicount='9088' stamp='0.540' comment='tiered' hot_count='9088'/>
<writer thread='14851'/>
Decoding compiled method 0x0000000104116610:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000011754fd90} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;
  0x0000000104116780: callq  0x00000001004ed904  ;   {runtime_call}
  0x0000000104116785: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000104116790: mov    %eax,-0x14000(%rsp)
  0x0000000104116797: push   %rbp
  0x0000000104116798: sub    $0x50,%rsp
  0x000000010411679c: mov    0x10(%rsi),%r14d
  0x00000001041167a0: mov    0x18(%rsi),%r10d
  0x00000001041167a4: mov    %r10d,0x8(%rsp)
  0x00000001041167a9: mov    0x48(%rsi),%rbp
  0x00000001041167ad: mov    0x40(%rsi),%r10
  0x00000001041167b1: mov    %r10,(%rsp)
  0x00000001041167b5: mov    0x20(%rsi),%r11d
  0x00000001041167b9: mov    %r11d,0x24(%rsp)
  0x00000001041167be: mov    0x28(%rsi),%r13
  0x00000001041167c2: mov    0x38(%rsi),%ebx
  0x00000001041167c5: mov    %rsi,%rdi
  0x00000001041167c8: movabs $0x10054cb52,%r10
  0x00000001041167d2: callq  *%r10
  0x00000001041167d5: test   %rbp,%rbp
  0x00000001041167d8: je     0x00000001041169f3
  0x00000001041167de: mov    %rbp,%r8
  0x00000001041167e1: mov    0x8(%rbp),%r11d
  0x00000001041167e5: cmp    $0xf80051d9,%r11d  ;   {metadata(&apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x00000001041167ec: jne    0x0000000104116af5
  0x00000001041167f2: mov    %rbp,%rax
  0x00000001041167f5: mov    (%rsp),%r9
  0x00000001041167f9: test   %r9,%r9
  0x00000001041167fc: je     0x00000001041169fd
  0x0000000104116802: mov    0x8(%r9),%r10d
  0x0000000104116806: cmp    $0xf8000041,%r10d  ;   {metadata({type array char})}
  0x000000010411680d: jne    0x0000000104116af9
  0x0000000104116813: mov    %r9,%r11
  0x0000000104116816: test   %r13,%r13
  0x0000000104116819: je     0x0000000104116a05
  0x000000010411681f: mov    0x8(%r13),%r10d
  0x0000000104116823: cmp    $0xf80000f5,%r10d  ;   {metadata({type array byte})}
  0x000000010411682a: jne    0x0000000104116af9  ;*iload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@20 (line 709)

  0x0000000104116830: mov    %r13,%rbp
  0x0000000104116833: add    $0xc,%rbp          ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x0000000104116837: mov    0x8(%rsp),%edi
  0x000000010411683b: cmp    %r14d,%edi
  0x000000010411683e: jge    0x00000001041169db  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@24 (line 709)

  0x0000000104116844: mov    %ebx,%r10d
  0x0000000104116847: sub    %edi,%r10d         ;*iload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@20 (line 709)

  0x000000010411684a: mov    %edi,%r9d
  0x000000010411684d: sub    %ebx,%r9d
  0x0000000104116850: mov    %edi,%r8d
  0x0000000104116853: inc    %r8d
  0x0000000104116856: cmp    %r9d,%r8d
  0x0000000104116859: cmovl  %r9d,%r8d
  0x000000010411685d: xor    %r9d,%r9d
  0x0000000104116860: cmp    %r9d,%r8d
  0x0000000104116863: cmovl  %r9d,%r8d
  0x0000000104116867: cmp    %r14d,%r8d
  0x000000010411686a: mov    %r14d,%ecx
  0x000000010411686d: cmovg  %r14d,%r8d         ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x0000000104116871: mov    %edi,%ebx
  0x0000000104116873: add    %r10d,%ebx
  0x0000000104116876: mov    0xc(%r11),%r14d    ; implicit exception: dispatches to 0x0000000104116b6f
  0x000000010411687a: cmp    %r14d,%ebx
  0x000000010411687d: jae    0x0000000104116a61
  0x0000000104116883: movzwl 0x10(%r11,%rbx,2),%edx  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x0000000104116889: cmp    $0x80,%edx
  0x000000010411688f: jge    0x0000000104116b24  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x0000000104116895: test   %r13,%r13
  0x0000000104116898: je     0x0000000104116a99
  0x000000010411689e: vmovq  %rax,%xmm0
  0x00000001041168a3: mov    0x0(%rbp),%esi     ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x00000001041168a6: mov    %edi,%r9d
  0x00000001041168a9: inc    %r9d               ;*iinc
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@40 (line 710)

  0x00000001041168ac: cmp    %esi,%edi
  0x00000001041168ae: jae    0x0000000104116ab1
  0x00000001041168b4: movslq %edi,%rdi
  0x00000001041168b7: mov    %dl,0x10(%r13,%rdi,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x00000001041168bc: cmp    %r8d,%r9d
  0x00000001041168bf: jge    0x00000001041168c6  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@24 (line 709)

  0x00000001041168c1: mov    %r9d,%edi
  0x00000001041168c4: jmp    0x0000000104116871
  0x00000001041168c6: mov    %r14d,%edi
  0x00000001041168c9: sub    %r10d,%edi
  0x00000001041168cc: cmp    %esi,%edi
  0x00000001041168ce: cmovg  %esi,%edi
  0x00000001041168d1: cmp    %ecx,%edi
  0x00000001041168d3: cmovg  %ecx,%edi
  0x00000001041168d6: mov    %edi,%r8d
  0x00000001041168d9: add    $0xfffffffd,%r8d
  0x00000001041168dd: mov    $0x80000000,%eax
  0x00000001041168e2: cmp    %r8d,%edi
  0x00000001041168e5: cmovl  %eax,%r8d
  0x00000001041168e9: cmp    %r8d,%r9d
  0x00000001041168ec: jge    0x0000000104116b1d
  0x00000001041168f2: jmp    0x0000000104116902
  0x00000001041168f4: nopl   0x0(%rax,%rax,1)
  0x00000001041168fc: data16 data16 xchg %ax,%ax
  0x0000000104116900: mov    %ebp,%ecx          ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x0000000104116902: mov    %r9d,%ebx
  0x0000000104116905: add    %r10d,%ebx
  0x0000000104116908: movzwl 0x10(%r11,%rbx,2),%edi  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x000000010411690e: cmp    $0x80,%edi
  0x0000000104116914: jge    0x0000000104116a1b  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x000000010411691a: mov    %ecx,%ebp
  0x000000010411691c: movslq %ebx,%rcx
  0x000000010411691f: movzwl 0x12(%r11,%rcx,2),%edx  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x0000000104116925: movslq %r9d,%rcx
  0x0000000104116928: mov    %dil,0x10(%r13,%rcx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x000000010411692d: cmp    $0x80,%edx
  0x0000000104116933: jge    0x0000000104116a1f  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x0000000104116939: mov    %r10d,%ebx
  0x000000010411693c: add    %r9d,%ebx
  0x000000010411693f: movslq %r9d,%rcx
  0x0000000104116942: mov    %dl,0x11(%r13,%rcx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x0000000104116947: movslq %ebx,%rdx
  0x000000010411694a: movzwl 0x14(%r11,%rdx,2),%edi  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x0000000104116950: cmp    $0x80,%edi
  0x0000000104116956: jge    0x0000000104116a12  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x000000010411695c: mov    %dil,0x12(%r13,%rcx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x0000000104116961: movzwl 0x16(%r11,%rdx,2),%edx  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x0000000104116967: cmp    $0x80,%edx
  0x000000010411696d: jge    0x0000000104116a26  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x0000000104116973: mov    %dl,0x13(%r13,%rcx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x0000000104116978: add    $0x4,%r9d          ;*iinc
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@40 (line 710)

  0x000000010411697c: cmp    %r8d,%r9d
  0x000000010411697f: jl     0x0000000104116900  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@24 (line 709)

  0x0000000104116985: add    $0x4,%ebx          ;*iinc
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@45 (line 710)

  0x0000000104116988: mov    %ebp,%ecx
  0x000000010411698a: cmp    %ecx,%r9d
  0x000000010411698d: jge    0x00000001041169d3  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x000000010411698f: mov    %r9d,%ebx
  0x0000000104116992: add    %r10d,%ebx
  0x0000000104116995: cmp    %r14d,%ebx
  0x0000000104116998: jae    0x0000000104116a66
  0x000000010411699e: movzwl 0x10(%r11,%rbx,2),%edx  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x00000001041169a4: cmp    $0x80,%edx
  0x00000001041169aa: jge    0x0000000104116b65  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x00000001041169b0: mov    %r9d,%edi
  0x00000001041169b3: inc    %edi               ;*iinc
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@40 (line 710)

  0x00000001041169b5: cmp    %esi,%r9d
  0x00000001041169b8: jae    0x0000000104116abf
  0x00000001041169be: movslq %r9d,%r8
  0x00000001041169c1: mov    %dl,0x10(%r13,%r8,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x00000001041169c6: cmp    %ecx,%edi
  0x00000001041169c8: jge    0x00000001041169cf  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@24 (line 709)

  0x00000001041169ca: mov    %edi,%r9d
  0x00000001041169cd: jmp    0x000000010411698f
  0x00000001041169cf: inc    %ebx               ;*iinc
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@45 (line 710)

  0x00000001041169d1: jmp    0x00000001041169d6
  0x00000001041169d3: mov    %r9d,%edi
  0x00000001041169d6: vmovq  %xmm0,%rax
  0x00000001041169db: cmp    0x24(%rsp),%ebx
  0x00000001041169df: jl     0x0000000104116b2c  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@57 (line 712)

  0x00000001041169e5: mov    %edi,%eax
  0x00000001041169e7: add    $0x50,%rsp
  0x00000001041169eb: pop    %rbp
  0x00000001041169ec: test   %eax,-0x30b69f2(%rip)        # 0x0000000101060000
                                                ;   {poll_return}
  0x00000001041169f2: retq   
  0x00000001041169f3: xor    %eax,%eax
  0x00000001041169f5: mov    %rbp,%r8
  0x00000001041169f8: jmpq   0x00000001041167f5
  0x00000001041169fd: xor    %r11d,%r11d
  0x0000000104116a00: jmpq   0x0000000104116816
  0x0000000104116a05: mov    $0xc,%ebp
  0x0000000104116a0a: xor    %r13d,%r13d
  0x0000000104116a0d: jmpq   0x0000000104116837
  0x0000000104116a12: add    $0x2,%ebx          ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x0000000104116a15: add    $0x2,%r9d          ;*iinc
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@40 (line 710)

  0x0000000104116a19: mov    %ebp,%ecx
  0x0000000104116a1b: mov    %edi,%edx
  0x0000000104116a1d: jmp    0x0000000104116a2f
  0x0000000104116a1f: inc    %ebx               ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x0000000104116a21: inc    %r9d               ;*iinc
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@40 (line 710)

  0x0000000104116a24: jmp    0x0000000104116a2d
  0x0000000104116a26: add    $0x3,%ebx          ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x0000000104116a29: add    $0x3,%r9d          ;*iinc
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@40 (line 710)

  0x0000000104116a2d: mov    %ebp,%ecx
  0x0000000104116a2f: vmovq  %xmm0,%rax         ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x0000000104116a34: mov    $0xffffff65,%esi
  0x0000000104116a39: mov    %r11,%rbp
  0x0000000104116a3c: mov    %ebx,(%rsp)
  0x0000000104116a3f: mov    %r13,0x8(%rsp)
  0x0000000104116a44: mov    %r9d,0x4(%rsp)
  0x0000000104116a49: mov    %edx,0x10(%rsp)
  0x0000000104116a4d: mov    %rax,0x18(%rsp)
  0x0000000104116a52: mov    %ecx,0x20(%rsp)
  0x0000000104116a56: nop
  0x0000000104116a57: callq  0x00000001040456a0  ; OopMap{rbp=Oop [8]=Oop [24]=Oop off=732}
                                                ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)
                                                ;   {runtime_call}
  0x0000000104116a5c: callq  0x00000001004ed904  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)
                                                ;   {runtime_call}
  0x0000000104116a61: mov    %edi,%r9d
  0x0000000104116a64: jmp    0x0000000104116a6b
  0x0000000104116a66: vmovq  %xmm0,%rax
  0x0000000104116a6b: mov    $0xffffffe4,%esi
  0x0000000104116a70: mov    %r13,0x8(%rsp)
  0x0000000104116a75: mov    %r9d,0x4(%rsp)
  0x0000000104116a7a: mov    %r11,0x10(%rsp)
  0x0000000104116a7f: mov    %ebx,0x18(%rsp)
  0x0000000104116a83: mov    %rax,0x28(%rsp)
  0x0000000104116a88: mov    %ecx,0x20(%rsp)
  0x0000000104116a8c: data16 xchg %ax,%ax
  0x0000000104116a8f: callq  0x00000001040456a0  ; OopMap{[8]=Oop [16]=Oop [40]=Oop off=788}
                                                ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)
                                                ;   {runtime_call}
  0x0000000104116a94: callq  0x00000001004ed904  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)
                                                ;   {runtime_call}
  0x0000000104116a99: movsbl %dl,%ebp           ;*i2b  ; - sun.nio.cs.UTF_8$Encoder::encode@49 (line 710)

  0x0000000104116a9c: mov    $0xfffffff6,%esi
  0x0000000104116aa1: mov    %edi,(%rsp)
  0x0000000104116aa4: data16 xchg %ax,%ax
  0x0000000104116aa7: callq  0x00000001040456a0  ; OopMap{off=812}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)
                                                ;   {runtime_call}
  0x0000000104116aac: callq  0x00000001004ed904  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)
                                                ;   {runtime_call}
  0x0000000104116ab1: movsbl %dl,%ebp           ;*i2b  ; - sun.nio.cs.UTF_8$Encoder::encode@49 (line 710)

  0x0000000104116ab4: inc    %ebx               ;*iinc
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@45 (line 710)

  0x0000000104116ab6: mov    %r9d,(%rsp)
  0x0000000104116aba: mov    %edi,%r9d
  0x0000000104116abd: jmp    0x0000000104116ac7
  0x0000000104116abf: movsbl %dl,%ebp           ;*i2b  ; - sun.nio.cs.UTF_8$Encoder::encode@49 (line 710)

  0x0000000104116ac2: inc    %ebx               ;*iinc
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@45 (line 710)

  0x0000000104116ac4: mov    %edi,(%rsp)
  0x0000000104116ac7: mov    $0xffffffe4,%esi
  0x0000000104116acc: mov    %r11,0x8(%rsp)
  0x0000000104116ad1: mov    %ebx,0x4(%rsp)
  0x0000000104116ad5: mov    %r13,0x18(%rsp)
  0x0000000104116ada: mov    %r9d,0x20(%rsp)
  0x0000000104116adf: vmovsd %xmm0,0x28(%rsp)
  0x0000000104116ae5: mov    %ecx,0x30(%rsp)
  0x0000000104116ae9: xchg   %ax,%ax
  0x0000000104116aeb: callq  0x00000001040456a0  ; OopMap{[8]=Oop [24]=Oop [40]=Oop off=880}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)
                                                ;   {runtime_call}
  0x0000000104116af0: callq  0x00000001004ed904  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)
                                                ;   {runtime_call}
  0x0000000104116af5: mov    (%rsp),%r9
  0x0000000104116af9: mov    $0xffffff9d,%esi
  0x0000000104116afe: mov    %ebx,%ebp
  0x0000000104116b00: mov    %r13,(%rsp)
  0x0000000104116b04: mov    %r8,0x10(%rsp)
  0x0000000104116b09: mov    %r9,0x18(%rsp)
  0x0000000104116b0e: mov    %r14d,0x20(%rsp)
  0x0000000104116b13: callq  0x00000001040456a0  ; OopMap{[0]=Oop [16]=Oop [24]=Oop off=920}
                                                ;*iload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@20 (line 709)
                                                ;   {runtime_call}
  0x0000000104116b18: callq  0x00000001004ed904  ;*iload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@20 (line 709)
                                                ;   {runtime_call}
  0x0000000104116b1d: inc    %ebx               ;*iinc
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@45 (line 710)

  0x0000000104116b1f: jmpq   0x000000010411698a
  0x0000000104116b24: mov    %edi,%r9d
  0x0000000104116b27: jmpq   0x0000000104116a34  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@24 (line 709)

  0x0000000104116b2c: mov    $0xffffff65,%esi
  0x0000000104116b31: mov    %r11,%rbp
  0x0000000104116b34: mov    %r13,0x8(%rsp)
  0x0000000104116b39: mov    %edi,0x4(%rsp)
  0x0000000104116b3d: mov    %ebx,0x10(%rsp)
  0x0000000104116b41: mov    %rax,0x18(%rsp)
  0x0000000104116b46: mov    %rax,-0x8(%rsp)
  0x0000000104116b4b: mov    0x24(%rsp),%eax
  0x0000000104116b4f: mov    %eax,0x14(%rsp)
  0x0000000104116b53: mov    -0x8(%rsp),%rax
  0x0000000104116b58: data16 xchg %ax,%ax
  0x0000000104116b5b: callq  0x00000001040456a0  ; OopMap{rbp=Oop [8]=Oop [24]=Oop off=992}
                                                ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@57 (line 712)
                                                ;   {runtime_call}
  0x0000000104116b60: callq  0x00000001004ed904  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@57 (line 712)
                                                ;   {runtime_call}
  0x0000000104116b65: vmovq  %xmm0,%rax
  0x0000000104116b6a: jmpq   0x0000000104116a34
  0x0000000104116b6f: mov    $0xfffffff6,%esi
  0x0000000104116b74: mov    %ebx,%ebp
  0x0000000104116b76: nop
  0x0000000104116b77: callq  0x00000001040456a0  ; OopMap{off=1020}
                                                ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)
                                                ;   {runtime_call}
  0x0000000104116b7c: callq  0x00000001004ed904  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)
                                                ;   {runtime_call}
  0x0000000104116b81: hlt    
  0x0000000104116b82: hlt    
  0x0000000104116b83: hlt    
  0x0000000104116b84: hlt    
  0x0000000104116b85: hlt    
  0x0000000104116b86: hlt    
  0x0000000104116b87: hlt    
  0x0000000104116b88: hlt    
  0x0000000104116b89: hlt    
  0x0000000104116b8a: hlt    
  0x0000000104116b8b: hlt    
  0x0000000104116b8c: hlt    
  0x0000000104116b8d: hlt    
  0x0000000104116b8e: hlt    
  0x0000000104116b8f: hlt    
  0x0000000104116b90: hlt    
  0x0000000104116b91: hlt    
  0x0000000104116b92: hlt    
  0x0000000104116b93: hlt    
  0x0000000104116b94: hlt    
  0x0000000104116b95: hlt    
  0x0000000104116b96: hlt    
  0x0000000104116b97: hlt    
  0x0000000104116b98: hlt    
  0x0000000104116b99: hlt    
  0x0000000104116b9a: hlt    
  0x0000000104116b9b: hlt    
  0x0000000104116b9c: hlt    
  0x0000000104116b9d: hlt    
  0x0000000104116b9e: hlt    
  0x0000000104116b9f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000104116ba0: jmpq   0x000000010406eda0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000104116ba5: callq  0x0000000104116baa
  0x0000000104116baa: subq   $0x5,(%rsp)
  0x0000000104116baf: jmpq   0x0000000104047500  ;   {runtime_call}
  0x0000000104116bb4: hlt    
  0x0000000104116bb5: hlt    
  0x0000000104116bb6: hlt    
  0x0000000104116bb7: hlt    
<nmethod compile_id='19' compile_kind='osr' compiler='C2' level='4' entry='0x0000000104116780' size='2832' address='0x0000000104116610' relocation_offset='296' insts_offset='368' stub_offset='1424' scopes_data_offset='1480' scopes_pcs_offset='1768' dependencies_offset='2808' nul_chk_table_offset='2816' method='sun/nio/cs/UTF_8$Encoder encode ([CII[B)I' bytes='359' count='1451' backedge_count='90320' iicount='1451' stamp='0.547'/>
<writer thread='17667'/>
Decoding compiled method 0x000000010410ee10:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000117400480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;
  #           [sp+0x20]  (sp of caller)
  0x000000010410ef60: mov    0x8(%rsi),%r10d
  0x000000010410ef64: shl    $0x3,%r10
  0x000000010410ef68: cmp    %r10,%rax
  0x000000010410ef6b: jne    0x0000000104045e60  ;   {runtime_call}
  0x000000010410ef71: data16 xchg %ax,%ax
  0x000000010410ef74: nopl   0x0(%rax,%rax,1)
  0x000000010410ef7c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010410ef80: mov    %eax,-0x14000(%rsp)
  0x000000010410ef87: push   %rbp
  0x000000010410ef88: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)

  0x000000010410ef8c: mov    0x8(%rsi),%r11d
  0x000000010410ef90: movabs $0x0,%r10
  0x000000010410ef9a: lea    (%r10,%r11,8),%r10
  0x000000010410ef9e: mov    $0x40000000,%r8d
  0x000000010410efa4: test   %r8d,0x9c(%r10)
  0x000000010410efab: je     0x000000010410efb8  ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)

  0x000000010410efad: mov    %rsi,%rbp
  0x000000010410efb0: data16 xchg %ax,%ax
  0x000000010410efb3: callq  0x0000000104070020  ; OopMap{rbp=Oop off=88}
                                                ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ;   {runtime_call}
  0x000000010410efb8: add    $0x10,%rsp
  0x000000010410efbc: pop    %rbp
  0x000000010410efbd: test   %eax,-0x30aefc3(%rip)        # 0x0000000101060000
                                                ;   {poll_return}
  0x000000010410efc3: retq                      ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)

  0x000000010410efc4: mov    %rax,%rsi
  0x000000010410efc7: add    $0x10,%rsp
  0x000000010410efcb: pop    %rbp
  0x000000010410efcc: jmpq   0x0000000104071b20  ;   {runtime_call}
  0x000000010410efd1: hlt    
  0x000000010410efd2: hlt    
  0x000000010410efd3: hlt    
  0x000000010410efd4: hlt    
  0x000000010410efd5: hlt    
  0x000000010410efd6: hlt    
  0x000000010410efd7: hlt    
  0x000000010410efd8: hlt    
  0x000000010410efd9: hlt    
  0x000000010410efda: hlt    
  0x000000010410efdb: hlt    
  0x000000010410efdc: hlt    
  0x000000010410efdd: hlt    
  0x000000010410efde: hlt    
  0x000000010410efdf: hlt    
[Exception Handler]
[Stub Code]
  0x000000010410efe0: jmpq   0x000000010406eda0  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010410efe5: callq  0x000000010410efea
  0x000000010410efea: subq   $0x5,(%rsp)
  0x000000010410efef: jmpq   0x0000000104047500  ;   {runtime_call}
  0x000000010410eff4: hlt    
  0x000000010410eff5: hlt    
  0x000000010410eff6: hlt    
  0x000000010410eff7: hlt    
<nmethod compile_id='20' compiler='C2' level='4' entry='0x000000010410ef60' size='648' address='0x000000010410ee10' relocation_offset='296' insts_offset='336' stub_offset='464' scopes_data_offset='496' scopes_pcs_offset='520' dependencies_offset='616' handler_table_offset='624' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='9093' iicount='9093' stamp='0.551'/>
<writer thread='3075'/>
<task_queued compile_id='21' method='java/lang/AbstractStringBuilder newCapacity (I)I' bytes='39' count='768' iicount='768' level='3' stamp='0.551' comment='tiered' hot_count='768'/>
<task_queued compile_id='22' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='348' backedge_count='28672' iicount='348' level='3' stamp='0.551' comment='tiered' hot_count='348'/>
[Loaded sun.misc.URLClassPath$FileLoader$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='17155'/>
Decoding compiled method 0x0000000104115e10:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000001174755a0} &apos;newCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rsi:rsi   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    rdx       = int
  #           [sp+0x50]  (sp of caller)
  0x0000000104115fa0: mov    0x8(%rsi),%r10d
  0x0000000104115fa4: shl    $0x3,%r10
  0x0000000104115fa8: cmp    %rax,%r10
  0x0000000104115fab: jne    0x0000000104045e60  ;   {runtime_call}
  0x0000000104115fb1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000104115fbc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000104115fc0: mov    %eax,-0x14000(%rsp)
  0x0000000104115fc7: push   %rbp
  0x0000000104115fc8: sub    $0x40,%rsp
  0x0000000104115fcc: movabs $0x117633678,%rax  ;   {metadata(method data for {method} {0x00000001174755a0} &apos;newCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000104115fd6: mov    0xdc(%rax),%edi
  0x0000000104115fdc: add    $0x8,%edi
  0x0000000104115fdf: mov    %edi,0xdc(%rax)
  0x0000000104115fe5: movabs $0x1174755a0,%rax  ;   {metadata({method} {0x00000001174755a0} &apos;newCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000104115fef: and    $0x1ff8,%edi
  0x0000000104115ff5: cmp    $0x0,%edi
  0x0000000104115ff8: je     0x000000010411623e  ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::newCapacity@0 (line 150)

  0x0000000104115ffe: mov    0x10(%rsi),%eax
  0x0000000104116001: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::newCapacity@1 (line 150)

  0x0000000104116005: mov    0xc(%rax),%eax     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::newCapacity@4 (line 150)
                                                ; implicit exception: dispatches to 0x0000000104116255
  0x0000000104116008: shl    %eax
  0x000000010411600a: add    $0x2,%eax
  0x000000010411600d: mov    %rax,%rdi
  0x0000000104116010: sub    %edx,%edi
  0x0000000104116012: cmp    $0x0,%edi
  0x0000000104116015: movabs $0x117633678,%rdi  ;   {metadata(method data for {method} {0x00000001174755a0} &apos;newCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000010411601f: movabs $0x108,%rcx
  0x0000000104116029: jge    0x0000000104116039
  0x000000010411602f: movabs $0x118,%rcx
  0x0000000104116039: mov    (%rdi,%rcx,1),%rbx
  0x000000010411603d: lea    0x1(%rbx),%rbx
  0x0000000104116041: mov    %rbx,(%rdi,%rcx,1)
  0x0000000104116045: jge    0x000000010411604e  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)

  0x000000010411604b: mov    %rdx,%rax          ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)

  0x000000010411604e: cmp    $0x0,%eax
  0x0000000104116051: movabs $0x117633678,%rdi  ;   {metadata(method data for {method} {0x00000001174755a0} &apos;newCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000010411605b: movabs $0x128,%rcx
  0x0000000104116065: jle    0x0000000104116075
  0x000000010411606b: movabs $0x138,%rcx
  0x0000000104116075: mov    (%rdi,%rcx,1),%rbx
  0x0000000104116079: lea    0x1(%rbx),%rbx
  0x000000010411607d: mov    %rbx,(%rdi,%rcx,1)
  0x0000000104116081: jle    0x00000001041160c7  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)

  0x0000000104116087: mov    $0x7ffffff7,%edi
  0x000000010411608c: sub    %eax,%edi
  0x000000010411608e: cmp    $0x0,%edi
  0x0000000104116091: movabs $0x117633678,%rdi  ;   {metadata(method data for {method} {0x00000001174755a0} &apos;newCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000010411609b: movabs $0x148,%rcx
  0x00000001041160a5: jge    0x00000001041160b5
  0x00000001041160ab: movabs $0x158,%rcx
  0x00000001041160b5: mov    (%rdi,%rcx,1),%rbx
  0x00000001041160b9: lea    0x1(%rbx),%rbx
  0x00000001041160bd: mov    %rbx,(%rdi,%rcx,1)
  0x00000001041160c1: jge    0x00000001041161b6  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)

  0x00000001041160c7: movabs $0x117633678,%rax  ;   {metadata(method data for {method} {0x00000001174755a0} &apos;newCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000001041160d1: addq   $0x1,0x168(%rax)
  0x00000001041160d9: movabs $0x1176bbdf8,%rax  ;   {metadata(method data for {method} {0x0000000117475650} &apos;hugeCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000001041160e3: mov    0xdc(%rax),%esi
  0x00000001041160e9: add    $0x8,%esi
  0x00000001041160ec: mov    %esi,0xdc(%rax)
  0x00000001041160f2: movabs $0x117475650,%rax  ;   {metadata({method} {0x0000000117475650} &apos;hugeCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000001041160fc: and    $0x7ffff8,%esi
  0x0000000104116102: cmp    $0x0,%esi
  0x0000000104116105: je     0x000000010411625a
  0x000000010411610b: mov    $0x7fffffff,%eax
  0x0000000104116110: sub    %edx,%eax
  0x0000000104116112: cmp    $0x0,%eax
  0x0000000104116115: movabs $0x1176bbdf8,%rax  ;   {metadata(method data for {method} {0x0000000117475650} &apos;hugeCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000010411611f: movabs $0x108,%rsi
  0x0000000104116129: jge    0x0000000104116139
  0x000000010411612f: movabs $0x118,%rsi
  0x0000000104116139: mov    (%rax,%rsi,1),%rdi
  0x000000010411613d: lea    0x1(%rdi),%rdi
  0x0000000104116141: mov    %rdi,(%rax,%rsi,1)
  0x0000000104116145: jl     0x00000001041161c8  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::hugeCapacity@4 (line 160)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)

  0x000000010411614b: cmp    $0x7ffffff7,%edx
  0x0000000104116151: movabs $0x1176bbdf8,%rax  ;   {metadata(method data for {method} {0x0000000117475650} &apos;hugeCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000010411615b: movabs $0x138,%rsi
  0x0000000104116165: jle    0x0000000104116175
  0x000000010411616b: movabs $0x148,%rsi
  0x0000000104116175: mov    (%rax,%rsi,1),%rdi
  0x0000000104116179: lea    0x1(%rdi),%rdi
  0x000000010411617d: mov    %rdi,(%rax,%rsi,1)
  0x0000000104116181: jle    0x000000010411619c  ;*if_icmple
                                                ; - java.lang.AbstractStringBuilder::hugeCapacity@18 (line 163)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)

  0x0000000104116187: movabs $0x1176bbdf8,%rax  ;   {metadata(method data for {method} {0x0000000117475650} &apos;hugeCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000104116191: incl   0x158(%rax)
  0x0000000104116197: jmpq   0x00000001041161a1  ;*goto
                                                ; - java.lang.AbstractStringBuilder::hugeCapacity@22 (line 163)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)

  0x000000010411619c: mov    $0x7ffffff7,%edx   ;*ireturn
                                                ; - java.lang.AbstractStringBuilder::hugeCapacity@27 (line 163)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)

  0x00000001041161a1: movabs $0x117633678,%rax  ;   {metadata(method data for {method} {0x00000001174755a0} &apos;newCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000001041161ab: incl   0x178(%rax)
  0x00000001041161b1: jmpq   0x00000001041161b9  ;*goto
                                                ; - java.lang.AbstractStringBuilder::newCapacity@34 (line 155)

  0x00000001041161b6: mov    %rax,%rdx
  0x00000001041161b9: mov    %rdx,%rax
  0x00000001041161bc: add    $0x40,%rsp
  0x00000001041161c0: pop    %rbp
  0x00000001041161c1: test   %eax,-0x30b60c7(%rip)        # 0x0000000101060100
                                                ;   {poll_return}
  0x00000001041161c7: retq                      ;*ireturn
                                                ; - java.lang.AbstractStringBuilder::newCapacity@38 (line 154)

  0x00000001041161c8: jmpq   0x0000000104116280  ;   {no_reloc}
  0x00000001041161cd: add    %al,(%rax)
  0x00000001041161cf: add    %al,(%rax)
  0x00000001041161d1: add    %cl,-0x75(%rcx)
  0x00000001041161d4: rex.RXB (bad) 
  0x00000001041161d6: lea    0x20(%rax),%rdi
  0x00000001041161da: cmp    0x70(%r15),%rdi
  0x00000001041161de: ja     0x000000010411628a
  0x00000001041161e4: mov    %rdi,0x60(%r15)
  0x00000001041161e8: mov    0xa8(%rdx),%rcx
  0x00000001041161ef: mov    %rcx,(%rax)
  0x00000001041161f2: mov    %rdx,%rcx
  0x00000001041161f5: shr    $0x3,%rcx
  0x00000001041161f9: mov    %ecx,0x8(%rax)
  0x00000001041161fc: xor    %rcx,%rcx
  0x00000001041161ff: mov    %ecx,0xc(%rax)
  0x0000000104116202: xor    %rcx,%rcx
  0x0000000104116205: mov    %rcx,0x10(%rax)
  0x0000000104116209: mov    %rcx,0x18(%rax)    ;*new  ; - java.lang.AbstractStringBuilder::hugeCapacity@7 (line 161)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)

  0x000000010411620d: mov    %rax,%rsi
  0x0000000104116210: movabs $0x1176bbdf8,%rdi  ;   {metadata(method data for {method} {0x0000000117475650} &apos;hugeCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000010411621a: addq   $0x1,0x128(%rdi)
  0x0000000104116222: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.AbstractStringBuilder::hugeCapacity@11 (line 161)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)

  0x0000000104116225: mov    %rax,0x30(%rsp)
  0x000000010411622a: nop
  0x000000010411622b: nop
  0x000000010411622c: nop
  0x000000010411622d: nop
  0x000000010411622e: nop
  0x000000010411622f: callq  0x00000001040460a0  ; OopMap{[48]=Oop off=660}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.AbstractStringBuilder::hugeCapacity@11 (line 161)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ;   {optimized virtual_call}
  0x0000000104116234: mov    0x30(%rsp),%rax
  0x0000000104116239: jmpq   0x00000001041162c2
  0x000000010411623e: mov    %rax,0x8(%rsp)
  0x0000000104116243: movq   $0xffffffffffffffff,(%rsp)
  0x000000010411624b: callq  0x0000000104102d20  ; OopMap{rsi=Oop off=688}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::newCapacity@-1 (line 150)
                                                ;   {runtime_call}
  0x0000000104116250: jmpq   0x0000000104115ffe
  0x0000000104116255: callq  0x0000000104072100  ; OopMap{rsi=Oop off=698}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::newCapacity@4 (line 150)
                                                ;   {runtime_call}
  0x000000010411625a: mov    %rax,0x8(%rsp)
  0x000000010411625f: movq   $0xffffffffffffffff,(%rsp)
  0x0000000104116267: callq  0x0000000104102d20  ; OopMap{off=716}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::hugeCapacity@-1 (line 160)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ;   {runtime_call}
  0x000000010411626c: jmpq   0x000000010411610b
  0x0000000104116271: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010411627b: mov    $0xa050f00,%eax
  0x0000000104116280: callq  0x0000000104101be0  ; OopMap{off=741}
                                                ;*new  ; - java.lang.AbstractStringBuilder::hugeCapacity@7 (line 161)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ;   {runtime_call}
  0x0000000104116285: jmpq   0x00000001041161c8
  0x000000010411628a: mov    %rdx,%rdx
  0x000000010411628d: callq  0x0000000104071260  ; OopMap{off=754}
                                                ;*new  ; - java.lang.AbstractStringBuilder::hugeCapacity@7 (line 161)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ;   {runtime_call}
  0x0000000104116292: jmpq   0x000000010411620d
  0x0000000104116297: nop
  0x0000000104116298: nop
  0x0000000104116299: mov    0x2a8(%r15),%rax
  0x00000001041162a0: movabs $0x0,%r10
  0x00000001041162aa: mov    %r10,0x2a8(%r15)
  0x00000001041162b1: movabs $0x0,%r10
  0x00000001041162bb: mov    %r10,0x2b0(%r15)
  0x00000001041162c2: add    $0x40,%rsp
  0x00000001041162c6: pop    %rbp
  0x00000001041162c7: jmpq   0x0000000104072c60  ;   {runtime_call}
  0x00000001041162cc: hlt    
  0x00000001041162cd: hlt    
  0x00000001041162ce: hlt    
  0x00000001041162cf: hlt    
  0x00000001041162d0: hlt    
  0x00000001041162d1: hlt    
  0x00000001041162d2: hlt    
  0x00000001041162d3: hlt    
  0x00000001041162d4: hlt    
  0x00000001041162d5: hlt    
  0x00000001041162d6: hlt    
  0x00000001041162d7: hlt    
  0x00000001041162d8: hlt    
  0x00000001041162d9: hlt    
  0x00000001041162da: hlt    
  0x00000001041162db: hlt    
  0x00000001041162dc: hlt    
  0x00000001041162dd: hlt    
  0x00000001041162de: hlt    
  0x00000001041162df: hlt    
[Stub Code]
  0x00000001041162e0: nop                       ;   {no_reloc}
  0x00000001041162e1: nop
  0x00000001041162e2: nop
  0x00000001041162e3: nop
  0x00000001041162e4: nop
  0x00000001041162e5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000001041162ef: jmpq   0x00000001041162ef  ;   {runtime_call}
[Exception Handler]
  0x00000001041162f4: callq  0x0000000104100420  ;   {runtime_call}
  0x00000001041162f9: mov    %rsp,-0x28(%rsp)
  0x00000001041162fe: sub    $0x80,%rsp
  0x0000000104116305: mov    %rax,0x78(%rsp)
  0x000000010411630a: mov    %rcx,0x70(%rsp)
  0x000000010411630f: mov    %rdx,0x68(%rsp)
  0x0000000104116314: mov    %rbx,0x60(%rsp)
  0x0000000104116319: mov    %rbp,0x50(%rsp)
  0x000000010411631e: mov    %rsi,0x48(%rsp)
  0x0000000104116323: mov    %rdi,0x40(%rsp)
  0x0000000104116328: mov    %r8,0x38(%rsp)
  0x000000010411632d: mov    %r9,0x30(%rsp)
  0x0000000104116332: mov    %r10,0x28(%rsp)
  0x0000000104116337: mov    %r11,0x20(%rsp)
  0x000000010411633c: mov    %r12,0x18(%rsp)
  0x0000000104116341: mov    %r13,0x10(%rsp)
  0x0000000104116346: mov    %r14,0x8(%rsp)
  0x000000010411634b: mov    %r15,(%rsp)
  0x000000010411634f: movabs $0x100641684,%rdi  ;   {external_word}
  0x0000000104116359: movabs $0x1041162f9,%rsi  ;   {internal_word}
  0x0000000104116363: mov    %rsp,%rdx
  0x0000000104116366: and    $0xfffffffffffffff0,%rsp
  0x000000010411636a: callq  0x000000010046a1f6  ;   {runtime_call}
  0x000000010411636f: hlt    
[Deopt Handler Code]
  0x0000000104116370: movabs $0x104116370,%r10  ;   {section_word}
  0x000000010411637a: push   %r10
  0x000000010411637c: jmpq   0x0000000104047500  ;   {runtime_call}
  0x0000000104116381: hlt    
  0x0000000104116382: hlt    
  0x0000000104116383: hlt    
  0x0000000104116384: hlt    
  0x0000000104116385: hlt    
  0x0000000104116386: hlt    
  0x0000000104116387: hlt    
<nmethod compile_id='21' compiler='C1' level='3' entry='0x0000000104115fa0' size='1976' address='0x0000000104115e10' relocation_offset='296' insts_offset='400' stub_offset='1232' scopes_data_offset='1416' scopes_pcs_offset='1584' dependencies_offset='1952' nul_chk_table_offset='1960' method='java/lang/AbstractStringBuilder newCapacity (I)I' bytes='39' count='772' iicount='772' stamp='0.560'/>
<writer thread='3075'/>
<task_queued compile_id='23' method='java/lang/ref/Reference &lt;init&gt; (Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V' bytes='25' count='768' iicount='768' level='3' stamp='0.560' comment='tiered' hot_count='768'/>
<writer thread='17155'/>
Decoding compiled method 0x0000000104115150:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000001174057e0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;
  # parm0:    rsi:rsi   = &apos;[C&apos;
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  # parm3:    r8:r8     = &apos;[C&apos;
  # parm4:    r9        = int
  # parm5:    rdi       = int
  # parm6:    [sp+0x50]   = int  (sp of caller)
  0x0000000104115300: mov    %eax,-0x14000(%rsp)
  0x0000000104115307: push   %rbp
  0x0000000104115308: sub    $0x40,%rsp
  0x000000010411530c: mov    %edx,0x20(%rsp)
  0x0000000104115310: mov    %edi,0x24(%rsp)
  0x0000000104115314: movabs $0x1175d4220,%rax  ;   {metadata(method data for {method} {0x00000001174057e0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x000000010411531e: mov    0xdc(%rax),%ebx
  0x0000000104115324: add    $0x8,%ebx
  0x0000000104115327: mov    %ebx,0xdc(%rax)
  0x000000010411532d: movabs $0x1174057e0,%rax  ;   {metadata({method} {0x00000001174057e0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000104115337: and    $0x1ff8,%ebx
  0x000000010411533d: cmp    $0x0,%ebx
  0x0000000104115340: je     0x00000001041157d4  ;*iload
                                                ; - java.lang.String::indexOf@0 (line 1756)

  0x0000000104115346: mov    0x50(%rsp),%eax
  0x000000010411534a: cmp    %ecx,%eax
  0x000000010411534c: movabs $0x1175d4220,%rbx  ;   {metadata(method data for {method} {0x00000001174057e0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000104115356: movabs $0x108,%r11
  0x0000000104115360: jl     0x0000000104115370
  0x0000000104115366: movabs $0x118,%r11
  0x0000000104115370: mov    (%rbx,%r11,1),%r13
  0x0000000104115374: lea    0x1(%r13),%r13
  0x0000000104115378: mov    %r13,(%rbx,%r11,1)
  0x000000010411537c: jl     0x00000001041153c0  ;*if_icmplt
                                                ; - java.lang.String::indexOf@3 (line 1756)

  0x0000000104115382: cmp    $0x0,%edi
  0x0000000104115385: movabs $0x1175d4220,%rax  ;   {metadata(method data for {method} {0x00000001174057e0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x000000010411538f: movabs $0x128,%rsi
  0x0000000104115399: jne    0x00000001041153a9
  0x000000010411539f: movabs $0x138,%rsi
  0x00000001041153a9: mov    (%rax,%rsi,1),%rdi
  0x00000001041153ad: lea    0x1(%rdi),%rdi
  0x00000001041153b1: mov    %rdi,(%rax,%rsi,1)
  0x00000001041153b5: jne    0x00000001041157c0
  0x00000001041153bb: jmpq   0x00000001041157ab  ;*ifne
                                                ; - java.lang.String::indexOf@8 (line 1757)

  0x00000001041153c0: cmp    $0x0,%eax
  0x00000001041153c3: movabs $0x1175d4220,%rbx  ;   {metadata(method data for {method} {0x00000001174057e0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00000001041153cd: movabs $0x160,%r11
  0x00000001041153d7: jge    0x00000001041153e7
  0x00000001041153dd: movabs $0x170,%r11
  0x00000001041153e7: mov    (%rbx,%r11,1),%r13
  0x00000001041153eb: lea    0x1(%r13),%r13
  0x00000001041153ef: mov    %r13,(%rbx,%r11,1)
  0x00000001041153f3: jge    0x00000001041153fe  ;*ifge
                                                ; - java.lang.String::indexOf@19 (line 1759)

  0x00000001041153f9: mov    $0x0,%eax          ;*iload
                                                ; - java.lang.String::indexOf@25 (line 1762)

  0x00000001041153fe: cmp    $0x0,%edi
  0x0000000104115401: movabs $0x1175d4220,%rbx  ;   {metadata(method data for {method} {0x00000001174057e0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x000000010411540b: movabs $0x180,%r11
  0x0000000104115415: jne    0x0000000104115425
  0x000000010411541b: movabs $0x190,%r11
  0x0000000104115425: mov    (%rbx,%r11,1),%r13
  0x0000000104115429: lea    0x1(%r13),%r13
  0x000000010411542d: mov    %r13,(%rbx,%r11,1)
  0x0000000104115431: je     0x000000010411579f  ;*ifne
                                                ; - java.lang.String::indexOf@27 (line 1762)

  0x0000000104115437: movslq %r9d,%rbx
  0x000000010411543a: cmp    0xc(%r8),%r9d      ; implicit exception: dispatches to 0x00000001041157eb
  0x000000010411543e: jae    0x00000001041157f5
  0x0000000104115444: movzwl 0x10(%r8,%rbx,2),%ebx  ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1766)

  0x000000010411544a: mov    %ebx,0x28(%rsp)
  0x000000010411544e: sub    %edi,%ecx
  0x0000000104115450: add    %edx,%ecx
  0x0000000104115452: add    %edx,%eax
  0x0000000104115454: nopl   0x0(%rax)
  0x0000000104115458: cmp    %ecx,%eax
  0x000000010411545a: movabs $0x1175d4220,%r11
<writer thread='3075'/>
[Loaded java.util.LinkedHashMap$LinkedKeySet from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='17155'/>
  ;   {metadata(method data for {method} {0x00000001174057e0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000104115464: movabs $0x1a0,%r13
  0x000000010411546e: jg     0x000000010411547e
  0x0000000104115474: movabs $0x1b0,%r13
  0x000000010411547e: mov    (%r11,%r13,1),%r14
  0x0000000104115482: lea    0x1(%r14),%r14
  0x0000000104115486: mov    %r14,(%r11,%r13,1)
  0x000000010411548a: jg     0x000000010411578e  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@57 (line 1769)

  0x0000000104115490: movslq %eax,%r11
  0x0000000104115493: cmp    0xc(%rsi),%eax     ; implicit exception: dispatches to 0x00000001041157fe
  0x0000000104115496: jae    0x0000000104115808
  0x000000010411549c: movzwl 0x10(%rsi,%r11,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)

  0x00000001041154a2: cmp    %ebx,%r11d
  0x00000001041154a5: movabs $0x1175d4220,%r11  ;   {metadata(method data for {method} {0x00000001174057e0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00000001041154af: movabs $0x1c0,%r13
  0x00000001041154b9: je     0x00000001041154c9
  0x00000001041154bf: movabs $0x1d0,%r13
  0x00000001041154c9: mov    (%r11,%r13,1),%r14
  0x00000001041154cd: lea    0x1(%r14),%r14
  0x00000001041154d1: mov    %r14,(%r11,%r13,1)
  0x00000001041154d5: je     0x00000001041155b3
  0x00000001041154db: jmpq   0x0000000104115579  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@66 (line 1771)

  0x00000001041154e0: movslq %eax,%r11
  0x00000001041154e3: cmp    0xc(%rsi),%eax
  0x00000001041154e6: jae    0x0000000104115811
  0x00000001041154ec: movzwl 0x10(%rsi,%r11,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1772)

  0x00000001041154f2: cmp    %ebx,%r11d
  0x00000001041154f5: movabs $0x1175d4220,%r11  ;   {metadata(method data for {method} {0x00000001174057e0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00000001041154ff: movabs $0x200,%r13
  0x0000000104115509: je     0x0000000104115519
  0x000000010411550f: movabs $0x210,%r13
  0x0000000104115519: mov    (%r11,%r13,1),%r14
  0x000000010411551d: lea    0x1(%r14),%r14
  0x0000000104115521: mov    %r14,(%r11,%r13,1)
  0x0000000104115525: je     0x00000001041155b3  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@85 (line 1772)

  0x000000010411552b: movabs $0x1175d4220,%r11  ;   {metadata(method data for {method} {0x00000001174057e0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000104115535: mov    0xe0(%r11),%r13d
  0x000000010411553c: add    $0x8,%r13d
  0x0000000104115540: mov    %r13d,0xe0(%r11)
  0x0000000104115547: movabs $0x1174057e0,%r11  ;   {metadata({method} {0x00000001174057e0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000104115551: and    $0xfff8,%r13d
  0x0000000104115558: cmp    $0x0,%r13d
  0x000000010411555c: je     0x000000010411581a  ; OopMap{r8=Oop rsi=Oop off=610}
                                                ;*goto
                                                ; - java.lang.String::indexOf@88 (line 1772)

  0x0000000104115562: test   %eax,-0x30b5468(%rip)        # 0x0000000101060100
                                                ;   {poll}
  0x0000000104115568: movabs $0x1175d4220,%r11  ;   {metadata(method data for {method} {0x00000001174057e0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000104115572: incl   0x220(%r11)        ;*goto
                                                ; - java.lang.String::indexOf@88 (line 1772)

  0x0000000104115579: inc    %eax
  0x000000010411557b: cmp    %ecx,%eax
  0x000000010411557d: movabs $0x1175d4220,%r11  ;   {metadata(method data for {method} {0x00000001174057e0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000104115587: movabs $0x1e0,%r13
  0x0000000104115591: jg     0x00000001041155a1
  0x0000000104115597: movabs $0x1f0,%r13
  0x00000001041155a1: mov    (%r11,%r13,1),%r14
  0x00000001041155a5: lea    0x1(%r14),%r14
  0x00000001041155a9: mov    %r14,(%r11,%r13,1)
  0x00000001041155ad: jle    0x00000001041154e0  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@76 (line 1772)

  0x00000001041155b3: cmp    %ecx,%eax
  0x00000001041155b5: movabs $0x1175d4220,%r11  ;   {metadata(method data for {method} {0x00000001174057e0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00000001041155bf: movabs $0x238,%r13
  0x00000001041155c9: jg     0x00000001041155d9
  0x00000001041155cf: movabs $0x248,%r13
  0x00000001041155d9: mov    (%r11,%r13,1),%r14
  0x00000001041155dd: lea    0x1(%r14),%r14
  0x00000001041155e1: mov    %r14,(%r11,%r13,1)
  0x00000001041155e5: jg     0x0000000104115725  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@95 (line 1776)

  0x00000001041155eb: mov    %rax,%r11
  0x00000001041155ee: inc    %r11d
  0x00000001041155f1: mov    %r11,%r13
  0x00000001041155f4: add    %edi,%r13d
  0x00000001041155f7: dec    %r13d
  0x00000001041155fa: mov    %r9,%r14
  0x00000001041155fd: inc    %r14d
  0x0000000104115600: jmpq   0x00000001041156b3  ;*iload
                                                ; - java.lang.String::indexOf@119 (line 1779)

  0x0000000104115605: data16 xchg %ax,%ax
  0x0000000104115608: movslq %r11d,%rdi
  0x000000010411560b: cmp    0xc(%rsi),%r11d
  0x000000010411560f: jae    0x0000000104115831
  0x0000000104115615: movzwl 0x10(%rsi,%rdi,2),%edi  ;*caload
                                                ; - java.lang.String::indexOf@129 (line 1779)

  0x000000010411561a: movslq %r14d,%rbx
  0x000000010411561d: cmp    0xc(%r8),%r14d
  0x0000000104115621: jae    0x000000010411583a
  0x0000000104115627: movzwl 0x10(%r8,%rbx,2),%ebx  ;*caload
                                                ; - java.lang.String::indexOf@133 (line 1779)

  0x000000010411562d: cmp    %ebx,%edi
  0x000000010411562f: movabs $0x1175d4220,%rdi  ;   {metadata(method data for {method} {0x00000001174057e0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000104115639: movabs $0x278,%rbx
  0x0000000104115643: jne    0x0000000104115653
  0x0000000104115649: movabs $0x288,%rbx
  0x0000000104115653: mov    (%rdi,%rbx,1),%rdx
  0x0000000104115657: lea    0x1(%rdx),%rdx
  0x000000010411565b: mov    %rdx,(%rdi,%rbx,1)
  0x000000010411565f: jne    0x00000001041156ec  ;*if_icmpne
                                                ; - java.lang.String::indexOf@134 (line 1779)

  0x0000000104115665: inc    %r11d
  0x0000000104115668: inc    %r14d
  0x000000010411566b: movabs $0x1175d4220,%rdi  ;   {metadata(method data for {method} {0x00000001174057e0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000104115675: mov    0xe0(%rdi),%ebx
  0x000000010411567b: add    $0x8,%ebx
  0x000000010411567e: mov    %ebx,0xe0(%rdi)
  0x0000000104115684: movabs $0x1174057e0,%rdi  ;   {metadata({method} {0x00000001174057e0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x000000010411568e: and    $0xfff8,%ebx
  0x0000000104115694: cmp    $0x0,%ebx
  0x0000000104115697: je     0x0000000104115843  ; OopMap{r8=Oop rsi=Oop off=925}
                                                ;*goto
                                                ; - java.lang.String::indexOf@143 (line 1780)

  0x000000010411569d: test   %eax,-0x30b55a3(%rip)        # 0x0000000101060100
                                                ;   {poll}
  0x00000001041156a3: movabs $0x1175d4220,%rdi  ;   {metadata(method data for {method} {0x00000001174057e0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00000001041156ad: incl   0x298(%rdi)        ;*goto
                                                ; - java.lang.String::indexOf@143 (line 1780)

  0x00000001041156b3: cmp    %r13d,%r11d
  0x00000001041156b6: movabs $0x1175d4220,%rdx  ;   {metadata(method data for {method} {0x00000001174057e0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00000001041156c0: movabs $0x258,%rdi
  0x00000001041156ca: jge    0x00000001041156da
  0x00000001041156d0: movabs $0x268,%rdi
  0x00000001041156da: mov    (%rdx,%rdi,1),%rbx
  0x00000001041156de: lea    0x1(%rbx),%rbx
  0x00000001041156e2: mov    %rbx,(%rdx,%rdi,1)
  0x00000001041156e6: jl     0x0000000104115608  ;*if_icmpge
                                                ; - java.lang.String::indexOf@123 (line 1779)

  0x00000001041156ec: cmp    %r13d,%r11d
  0x00000001041156ef: movabs $0x1175d4220,%rdi  ;   {metadata(method data for {method} {0x00000001174057e0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00000001041156f9: movabs $0x2b0,%rbx
  0x0000000104115703: jne    0x0000000104115713
  0x0000000104115709: movabs $0x2c0,%rbx
  0x0000000104115713: mov    (%rdi,%rbx,1),%rdx
  0x0000000104115717: lea    0x1(%rdx),%rdx
  0x000000010411571b: mov    %rdx,(%rdi,%rbx,1)
  0x000000010411571f: je     0x000000010411577c  ;*if_icmpne
                                                ; - java.lang.String::indexOf@150 (line 1782)

  0x0000000104115725: inc    %eax
  0x0000000104115727: movabs $0x1175d4220,%rdi  ;   {metadata(method data for {method} {0x00000001174057e0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000104115731: mov    0xe0(%rdi),%ebx
  0x0000000104115737: add    $0x8,%ebx
  0x000000010411573a: mov    %ebx,0xe0(%rdi)
  0x0000000104115740: movabs $0x1174057e0,%rdi  ;   {metadata({method} {0x00000001174057e0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x000000010411574a: and    $0xfff8,%ebx
  0x0000000104115750: cmp    $0x0,%ebx
  0x0000000104115753: je     0x000000010411585a  ; OopMap{r8=Oop rsi=Oop off=1113}
                                                ;*goto
                                                ; - java.lang.String::indexOf@161 (line 1769)

  0x0000000104115759: test   %eax,-0x30b565f(%rip)        # 0x0000000101060100
                                                ;   {poll}
  0x000000010411575f: movabs $0x1175d4220,%rdi  ;   {metadata(method data for {method} {0x00000001174057e0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000104115769: incl   0x2d0(%rdi)
  0x000000010411576f: mov    0x28(%rsp),%ebx
  0x0000000104115773: mov    0x24(%rsp),%edi
  0x0000000104115777: jmpq   0x0000000104115458  ;*goto
                                                ; - java.lang.String::indexOf@161 (line 1769)

  0x000000010411577c: mov    0x20(%rsp),%edx
  0x0000000104115780: sub    %edx,%eax
  0x0000000104115782: add    $0x40,%rsp
  0x0000000104115786: pop    %rbp
  0x0000000104115787: test   %eax,-0x30b568d(%rip)        # 0x0000000101060100
                                                ;   {poll_return}
  0x000000010411578d: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@157 (line 1784)

  0x000000010411578e: mov    $0xffffffff,%eax
  0x0000000104115793: add    $0x40,%rsp
  0x0000000104115797: pop    %rbp
  0x0000000104115798: test   %eax,-0x30b569e(%rip)        # 0x0000000101060100
                                                ;   {poll_return}
  0x000000010411579e: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@165 (line 1788)

  0x000000010411579f: add    $0x40,%rsp
  0x00000001041157a3: pop    %rbp
  0x00000001041157a4: test   %eax,-0x30b56aa(%rip)        # 0x0000000101060100
                                                ;   {poll_return}
  0x00000001041157aa: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@32 (line 1763)

  0x00000001041157ab: movabs $0x1175d4220,%rax  ;   {metadata(method data for {method} {0x00000001174057e0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00000001041157b5: incl   0x148(%rax)
  0x00000001041157bb: jmpq   0x00000001041157c5  ;*goto
                                                ; - java.lang.String::indexOf@12 (line 1757)

  0x00000001041157c0: mov    $0xffffffff,%ecx   ;*ireturn
                                                ; - java.lang.String::indexOf@16 (line 1757)

  0x00000001041157c5: mov    %rcx,%rax
  0x00000001041157c8: add    $0x40,%rsp
  0x00000001041157cc: pop    %rbp
  0x00000001041157cd: test   %eax,-0x30b56d3(%rip)        # 0x0000000101060100
                                                ;   {poll_return}
  0x00000001041157d3: retq   
  0x00000001041157d4: mov    %rax,0x8(%rsp)
  0x00000001041157d9: movq   $0xffffffffffffffff,(%rsp)
  0x00000001041157e1: callq  0x0000000104102d20  ; OopMap{rsi=Oop r8=Oop off=1254}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1756)
                                                ;   {runtime_call}
  0x00000001041157e6: jmpq   0x0000000104115346
  0x00000001041157eb: callq  0x0000000104072100  ; OopMap{r8=Oop rsi=Oop off=1264}
                                                ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1766)
                                                ;   {runtime_call}
  0x00000001041157f0: callq  0x0000000104072100  ; OopMap{r8=Oop rsi=Oop off=1269}
                                                ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1766)
                                                ;   {runtime_call}
  0x00000001041157f5: mov    %r9,(%rsp)
  0x00000001041157f9: callq  0x00000001040727c0  ; OopMap{r8=Oop rsi=Oop off=1278}
                                                ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1766)
                                                ;   {runtime_call}
  0x00000001041157fe: callq  0x0000000104072100  ; OopMap{r8=Oop rsi=Oop off=1283}
                                                ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)
                                                ;   {runtime_call}
  0x0000000104115803: callq  0x0000000104072100  ; OopMap{r8=Oop rsi=Oop off=1288}
                                                ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)
                                                ;   {runtime_call}
  0x0000000104115808: mov    %rax,(%rsp)
  0x000000010411580c: callq  0x00000001040727c0  ; OopMap{r8=Oop rsi=Oop off=1297}
                                                ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)
                                                ;   {runtime_call}
  0x0000000104115811: mov    %rax,(%rsp)
  0x0000000104115815: callq  0x00000001040727c0  ; OopMap{r8=Oop rsi=Oop off=1306}
                                                ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1772)
                                                ;   {runtime_call}
  0x000000010411581a: mov    %r11,0x8(%rsp)
  0x000000010411581f: movq   $0x58,(%rsp)
  0x0000000104115827: callq  0x0000000104102d20  ; OopMap{r8=Oop rsi=Oop off=1324}
                                                ;*goto
                                                ; - java.lang.String::indexOf@88 (line 1772)
                                                ;   {runtime_call}
  0x000000010411582c: jmpq   0x0000000104115562
  0x0000000104115831: mov    %r11,(%rsp)
  0x0000000104115835: callq  0x00000001040727c0  ; OopMap{r8=Oop rsi=Oop off=1338}
                                                ;*caload
                                                ; - java.lang.String::indexOf@129 (line 1779)
                                                ;   {runtime_call}
  0x000000010411583a: mov    %r14,(%rsp)
  0x000000010411583e: callq  0x00000001040727c0  ; OopMap{r8=Oop rsi=Oop off=1347}
                                                ;*caload
                                                ; - java.lang.String::indexOf@133 (line 1779)
                                                ;   {runtime_call}
  0x0000000104115843: mov    %rdi,0x8(%rsp)
  0x0000000104115848: movq   $0x8f,(%rsp)
  0x0000000104115850: callq  0x0000000104102d20  ; OopMap{r8=Oop rsi=Oop off=1365}
                                                ;*goto
                                                ; - java.lang.String::indexOf@143 (line 1780)
                                                ;   {runtime_call}
  0x0000000104115855: jmpq   0x000000010411569d
  0x000000010411585a: mov    %rdi,0x8(%rsp)
  0x000000010411585f: movq   $0xa1,(%rsp)
  0x0000000104115867: callq  0x0000000104102d20  ; OopMap{r8=Oop rsi=Oop off=1388}
                                                ;*goto
                                                ; - java.lang.String::indexOf@161 (line 1769)
                                                ;   {runtime_call}
  0x000000010411586c: jmpq   0x0000000104115759
  0x0000000104115871: nop
  0x0000000104115872: nop
  0x0000000104115873: mov    0x2a8(%r15),%rax
  0x000000010411587a: movabs $0x0,%r10
  0x0000000104115884: mov    %r10,0x2a8(%r15)
  0x000000010411588b: movabs $0x0,%r10
  0x0000000104115895: mov    %r10,0x2b0(%r15)
  0x000000010411589c: add    $0x40,%rsp
  0x00000001041158a0: pop    %rbp
  0x00000001041158a1: jmpq   0x0000000104072c60  ;   {runtime_call}
  0x00000001041158a6: hlt    
  0x00000001041158a7: hlt    
  0x00000001041158a8: hlt    
  0x00000001041158a9: hlt    
  0x00000001041158aa: hlt    
  0x00000001041158ab: hlt    
  0x00000001041158ac: hlt    
  0x00000001041158ad: hlt    
  0x00000001041158ae: hlt    
  0x00000001041158af: hlt    
  0x00000001041158b0: hlt    
  0x00000001041158b1: hlt    
  0x00000001041158b2: hlt    
  0x00000001041158b3: hlt    
  0x00000001041158b4: hlt    
  0x00000001041158b5: hlt    
  0x00000001041158b6: hlt    
  0x00000001041158b7: hlt    
  0x00000001041158b8: hlt    
  0x00000001041158b9: hlt    
  0x00000001041158ba: hlt    
  0x00000001041158bb: hlt    
  0x00000001041158bc: hlt    
  0x00000001041158bd: hlt    
  0x00000001041158be: hlt    
  0x00000001041158bf: hlt    
[Exception Handler]
[Stub Code]
  0x00000001041158c0: callq  0x0000000104100420  ;   {no_reloc}
  0x00000001041158c5: mov    %rsp,-0x28(%rsp)
  0x00000001041158ca: sub    $0x80,%rsp
  0x00000001041158d1: mov    %rax,0x78(%rsp)
  0x00000001041158d6: mov    %rcx,0x70(%rsp)
  0x00000001041158db: mov    %rdx,0x68(%rsp)
  0x00000001041158e0: mov    %rbx,0x60(%rsp)
  0x00000001041158e5: mov    %rbp,0x50(%rsp)
  0x00000001041158ea: mov    %rsi,0x48(%rsp)
  0x00000001041158ef: mov    %rdi,0x40(%rsp)
  0x00000001041158f4: mov    %r8,0x38(%rsp)
  0x00000001041158f9: mov    %r9,0x30(%rsp)
  0x00000001041158fe: mov    %r10,0x28(%rsp)
  0x0000000104115903: mov    %r11,0x20(%rsp)
  0x0000000104115908: mov    %r12,0x18(%rsp)
  0x000000010411590d: mov    %r13,0x10(%rsp)
  0x0000000104115912: mov    %r14,0x8(%rsp)
  0x0000000104115917: mov    %r15,(%rsp)
  0x000000010411591b: movabs $0x100641684,%rdi  ;   {external_word}
  0x0000000104115925: movabs $0x1041158c5,%rsi  ;   {internal_word}
  0x000000010411592f: mov    %rsp,%rdx
  0x0000000104115932: and    $0xfffffffffffffff0,%rsp
  0x0000000104115936: callq  0x000000010046a1f6  ;   {runtime_call}
  0x000000010411593b: hlt    
[Deopt Handler Code]
  0x000000010411593c: movabs $0x10411593c,%r10  ;   {section_word}
  0x0000000104115946: push   %r10
  0x0000000104115948: jmpq   0x0000000104047500  ;   {runtime_call}
  0x000000010411594d: hlt    
  0x000000010411594e: hlt    
  0x000000010411594f: hlt    
<nmethod compile_id='22' compiler='C1' level='3' entry='0x0000000104115300' size='3232' address='0x0000000104115150' relocation_offset='296' insts_offset='432' stub_offset='1904' scopes_data_offset='2056' scopes_pcs_offset='2448' dependencies_offset='3184' nul_chk_table_offset='3192' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='351' backedge_count='28803' iicount='351' stamp='0.577'/>
<writer thread='3075'/>
[Loaded java.util.LinkedHashMap$LinkedHashIterator from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.LinkedHashMap$LinkedKeyIterator from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='17155'/>
Decoding compiled method 0x0000000104114c50:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000001174287a0} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V&apos; in &apos;java/lang/ref/Reference&apos;
  # this:     rsi:rsi   = &apos;java/lang/ref/Reference&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    rcx:rcx   = &apos;java/lang/ref/ReferenceQueue&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000104114dc0: mov    0x8(%rsi),%r10d
  0x0000000104114dc4: shl    $0x3,%r10
  0x0000000104114dc8: cmp    %rax,%r10
  0x0000000104114dcb: jne    0x0000000104045e60  ;   {runtime_call}
  0x0000000104114dd1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000104114ddc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000104114de0: mov    %eax,-0x14000(%rsp)
  0x0000000104114de7: push   %rbp
  0x0000000104114de8: sub    $0x30,%rsp
  0x0000000104114dec: movabs $0x117627800,%rdi  ;   {metadata(method data for {method} {0x00000001174287a0} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V&apos; in &apos;java/lang/ref/Reference&apos;)}
  0x0000000104114df6: mov    0xdc(%rdi),%ebx
  0x0000000104114dfc: add    $0x8,%ebx
  0x0000000104114dff: mov    %ebx,0xdc(%rdi)
  0x0000000104114e05: movabs $0x1174287a0,%rdi  ;   {metadata({method} {0x00000001174287a0} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V&apos; in &apos;java/lang/ref/Reference&apos;)}
  0x0000000104114e0f: and    $0x1ff8,%ebx
  0x0000000104114e15: cmp    $0x0,%ebx
  0x0000000104114e18: je     0x0000000104114f16  ;*aload_0
                                                ; - java.lang.ref.Reference::&lt;init&gt;@0 (line 306)

  0x0000000104114e1e: mov    %rsi,%rdi
  0x0000000104114e21: movabs $0x117627800,%rbx  ;   {metadata(method data for {method} {0x00000001174287a0} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V&apos; in &apos;java/lang/ref/Reference&apos;)}
  0x0000000104114e2b: addq   $0x1,0x108(%rbx)
  0x0000000104114e33: movabs $0x117577a10,%rdi  ;   {metadata(method data for {method} {0x0000000117400480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000104114e3d: mov    0xdc(%rdi),%ebx
  0x0000000104114e43: add    $0x8,%ebx
  0x0000000104114e46: mov    %ebx,0xdc(%rdi)
  0x0000000104114e4c: movabs $0x117400480,%rdi  ;   {metadata({method} {0x0000000117400480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000104114e56: and    $0x7ffff8,%ebx
  0x0000000104114e5c: cmp    $0x0,%ebx
  0x0000000104114e5f: je     0x0000000104114f2d
  0x0000000104114e65: mov    %rdx,%r10
  0x0000000104114e68: shr    $0x3,%r10
  0x0000000104114e6c: mov    %r10d,0xc(%rsi)
  0x0000000104114e70: mov    %rsi,%rdi
  0x0000000104114e73: shr    $0x9,%rdi
  0x0000000104114e77: movabs $0xfda96000,%rbx
  0x0000000104114e81: movb   $0x0,(%rdi,%rbx,1)  ;*putfield referent
                                                ; - java.lang.ref.Reference::&lt;init&gt;@6 (line 307)

  0x0000000104114e85: cmp    $0x0,%rcx
  0x0000000104114e89: movabs $0x117627800,%rdi  ;   {metadata(method data for {method} {0x00000001174287a0} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V&apos; in &apos;java/lang/ref/Reference&apos;)}
  0x0000000104114e93: movabs $0x118,%rbx
  0x0000000104114e9d: jne    0x0000000104114ead
  0x0000000104114ea3: movabs $0x128,%rbx
  0x0000000104114ead: mov    (%rdi,%rbx,1),%rax
  0x0000000104114eb1: lea    0x1(%rax),%rax
  0x0000000104114eb5: mov    %rax,(%rdi,%rbx,1)
  0x0000000104114eb9: jne    0x0000000104114ee5  ;*ifnonnull
                                                ; - java.lang.ref.Reference::&lt;init&gt;@11 (line 308)

  0x0000000104114ebf: movabs $0x795581b90,%rdi  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/ref/ReferenceQueue&apos;)}
  0x0000000104114ec9: mov    0x68(%rdi),%edi
  0x0000000104114ecc: shl    $0x3,%rdi          ;*getstatic NULL
                                                ; - java.lang.ref.Reference::&lt;init&gt;@14 (line 308)

  0x0000000104114ed0: movabs $0x117627800,%rbx  ;   {metadata(method data for {method} {0x00000001174287a0} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V&apos; in &apos;java/lang/ref/Reference&apos;)}
  0x0000000104114eda: incl   0x138(%rbx)
  0x0000000104114ee0: jmpq   0x0000000104114ee8  ;*goto
                                                ; - java.lang.ref.Reference::&lt;init&gt;@17 (line 308)

  0x0000000104114ee5: mov    %rcx,%rdi
  0x0000000104114ee8: mov    %rdi,%r10
  0x0000000104114eeb: shr    $0x3,%r10
  0x0000000104114eef: mov    %r10d,0x10(%rsi)
  0x0000000104114ef3: shr    $0x9,%rsi
  0x0000000104114ef7: movabs $0xfda96000,%rdi
  0x0000000104114f01: movb   $0x0,(%rsi,%rdi,1)
  0x0000000104114f05: lock addl $0x0,(%rsp)     ;*putfield queue
                                                ; - java.lang.ref.Reference::&lt;init&gt;@21 (line 308)

  0x0000000104114f0a: add    $0x30,%rsp
  0x0000000104114f0e: pop    %rbp
  0x0000000104114f0f: test   %eax,-0x30b4e15(%rip)        # 0x0000000101060100
                                                ;   {poll_return}
  0x0000000104114f15: retq   
  0x0000000104114f16: mov    %rdi,0x8(%rsp)
  0x0000000104114f1b: movq   $0xffffffffffffffff,(%rsp)
  0x0000000104114f23: callq  0x0000000104102d20  ; OopMap{rsi=Oop rdx=Oop rcx=Oop off=360}
                                                ;*synchronization entry
                                                ; - java.lang.ref.Reference::&lt;init&gt;@-1 (line 306)
                                                ;   {runtime_call}
  0x0000000104114f28: jmpq   0x0000000104114e1e
  0x0000000104114f2d: mov    %rdi,0x8(%rsp)
  0x0000000104114f32: movq   $0xffffffffffffffff,(%rsp)
  0x0000000104114f3a: callq  0x0000000104102d20  ; OopMap{rsi=Oop rdx=Oop rcx=Oop off=383}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.ref.Reference::&lt;init&gt;@1 (line 306)
                                                ;   {runtime_call}
  0x0000000104114f3f: jmpq   0x0000000104114e65
  0x0000000104114f44: nop
  0x0000000104114f45: nop
  0x0000000104114f46: mov    0x2a8(%r15),%rax
  0x0000000104114f4d: movabs $0x0,%r10
  0x0000000104114f57: mov    %r10,0x2a8(%r15)
  0x0000000104114f5e: movabs $0x0,%r10
  0x0000000104114f68: mov    %r10,0x2b0(%r15)
  0x0000000104114f6f: add    $0x30,%rsp
  0x0000000104114f73: pop    %rbp
  0x0000000104114f74: jmpq   0x0000000104072c60  ;   {runtime_call}
  0x0000000104114f79: hlt    
  0x0000000104114f7a: hlt    
  0x0000000104114f7b: hlt    
  0x0000000104114f7c: hlt    
  0x0000000104114f7d: hlt    
  0x0000000104114f7e: hlt    
  0x0000000104114f7f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000104114f80: callq  0x0000000104100420  ;   {no_reloc}
  0x0000000104114f85: mov    %rsp,-0x28(%rsp)
  0x0000000104114f8a: sub    $0x80,%rsp
  0x0000000104114f91: mov    %rax,0x78(%rsp)
  0x0000000104114f96: mov    %rcx,0x70(%rsp)
  0x0000000104114f9b: mov    %rdx,0x68(%rsp)
  0x0000000104114fa0: mov    %rbx,0x60(%rsp)
  0x0000000104114fa5: mov    %rbp,0x50(%rsp)
  0x0000000104114faa: mov    %rsi,0x48(%rsp)
  0x0000000104114faf: mov    %rdi,0x40(%rsp)
  0x0000000104114fb4: mov    %r8,0x38(%rsp)
  0x0000000104114fb9: mov    %r9,0x30(%rsp)
  0x0000000104114fbe: mov    %r10,0x28(%rsp)
  0x0000000104114fc3: mov    %r11,0x20(%rsp)
  0x0000000104114fc8: mov    %r12,0x18(%rsp)
  0x0000000104114fcd: mov    %r13,0x10(%rsp)
  0x0000000104114fd2: mov    %r14,0x8(%rsp)
  0x0000000104114fd7: mov    %r15,(%rsp)
  0x0000000104114fdb: movabs $0x100641684,%rdi  ;   {external_word}
  0x0000000104114fe5: movabs $0x104114f85,%rsi  ;   {internal_word}
  0x0000000104114fef: mov    %rsp,%rdx
  0x0000000104114ff2: and    $0xfffffffffffffff0,%rsp
  0x0000000104114ff6: callq  0x000000010046a1f6  ;   {runtime_call}
  0x0000000104114ffb: hlt    
[Deopt Handler Code]
  0x0000000104114ffc: movabs $0x104114ffc,%r10  ;   {section_word}
  0x0000000104115006: push   %r10
  0x0000000104115008: jmpq   0x0000000104047500  ;   {runtime_call}
  0x000000010411500d: hlt    
  0x000000010411500e: hlt    
  0x000000010411500f: hlt    
<nmethod compile_id='23' compiler='C1' level='3' entry='0x0000000104114dc0' size='1224' address='0x0000000104114c50' relocation_offset='296' insts_offset='368' stub_offset='816' scopes_data_offset='984' scopes_pcs_offset='1056' dependencies_offset='1216' method='java/lang/ref/Reference &lt;init&gt; (Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V' bytes='25' count='768' iicount='768' stamp='0.581'/>
<writer thread='3075'/>
<task_queued compile_id='24' method='java/util/HashMap$Node getKey ()Ljava/lang/Object;' bytes='5' count='128' iicount='128' level='1' stamp='0.581' comment='tiered' hot_count='128'/>
<task_queued compile_id='25' method='java/lang/String hashCode ()I' bytes='55' count='1855' backedge_count='61095' iicount='1855' stamp='0.581' comment='tiered' hot_count='1855'/>
<task_queued compile_id='26' method='java/io/ExpiringCache entryFor (Ljava/lang/String;)Ljava/io/ExpiringCache$Entry;' bytes='57' count='512' iicount='512' level='3' stamp='0.582' comment='tiered' hot_count='512'/>
<task_queued compile_id='27' method='java/util/LinkedHashMap get (Ljava/lang/Object;)Ljava/lang/Object;' bytes='33' count='512' iicount='512' level='3' stamp='0.582' comment='tiered' hot_count='512'/>
<task_queued compile_id='28' method='java/util/HashMap hash (Ljava/lang/Object;)I' bytes='20' count='1408' iicount='1408' level='3' stamp='0.582' comment='tiered' hot_count='1408'/>
<task_queued compile_id='29' method='java/util/HashMap getNode (ILjava/lang/Object;)Ljava/util/HashMap$Node;' bytes='148' count='1024' backedge_count='15' iicount='1024' level='3' stamp='0.582' comment='tiered' hot_count='1024'/>
<task_queued compile_id='30' method='java/net/URL getPath ()Ljava/lang/String;' bytes='5' count='640' iicount='640' level='1' stamp='0.582' comment='tiered' hot_count='640'/>
<task_queued compile_id='31' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='1792' iicount='1792' level='3' stamp='0.582' comment='tiered' hot_count='1792'/>
<task_queued compile_id='32' method='java/lang/String getChars (II[CI)V' bytes='62' count='1792' iicount='1792' level='3' stamp='0.582' comment='tiered' hot_count='1792'/>
[Loaded jdk.VolatileTest from file:/Users/chris/workspace/target/classes/]
<writer thread='17155'/>
Decoding compiled method 0x0000000104113bd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000001174ea6a0} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;
  # this:     rsi:rsi   = &apos;java/util/HashMap&apos;
  # parm0:    rdx       = int
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  #           [sp+0x60]  (sp of caller)
  0x0000000104113da0: mov    0x8(%rsi),%r10d
  0x0000000104113da4: shl    $0x3,%r10
  0x0000000104113da8: cmp    %rax,%r10
  0x0000000104113dab: jne    0x0000000104045e60  ;   {runtime_call}
  0x0000000104113db1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000104113dbc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000104113dc0: mov    %eax,-0x14000(%rsp)
  0x0000000104113dc7: push   %rbp
  0x0000000104113dc8: sub    $0x50,%rsp
  0x0000000104113dcc: mov    %edx,0x28(%rsp)
  0x0000000104113dd0: mov    %rcx,0x30(%rsp)
  0x0000000104113dd5: movabs $0x11761b2f8,%rdi  ;   {metadata(method data for {method} {0x00000001174ea6a0} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000104113ddf: mov    0xdc(%rdi),%ebx
  0x0000000104113de5: add    $0x8,%ebx
  0x0000000104113de8: mov    %ebx,0xdc(%rdi)
  0x0000000104113dee: movabs $0x1174ea6a0,%rdi  ;   {metadata({method} {0x00000001174ea6a0} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000104113df8: and    $0x1ff8,%ebx
  0x0000000104113dfe: cmp    $0x0,%ebx
  0x0000000104113e01: je     0x00000001041145d7  ;*aload_0
                                                ; - java.util.HashMap::getNode@0 (line 569)

  0x0000000104113e07: mov    0x24(%rsi),%esi
  0x0000000104113e0a: shl    $0x3,%rsi          ;*getfield table
                                                ; - java.util.HashMap::getNode@1 (line 569)

  0x0000000104113e0e: cmp    $0x0,%rsi
  0x0000000104113e12: movabs $0x11761b2f8,%rdi  ;   {metadata(method data for {method} {0x00000001174ea6a0} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000104113e1c: movabs $0x108,%rbx
  0x0000000104113e26: je     0x0000000104113e36
  0x0000000104113e2c: movabs $0x118,%rbx
  0x0000000104113e36: mov    (%rdi,%rbx,1),%rax
  0x0000000104113e3a: lea    0x1(%rax),%rax
  0x0000000104113e3e: mov    %rax,(%rdi,%rbx,1)
  0x0000000104113e42: je     0x0000000104114422  ;*ifnull
                                                ; - java.util.HashMap::getNode@6 (line 569)

  0x0000000104113e48: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - java.util.HashMap::getNode@10 (line 569)
                                                ; implicit exception: dispatches to 0x00000001041145ee
  0x0000000104113e4b: cmp    $0x0,%edi
  0x0000000104113e4e: movabs $0x11761b2f8,%rbx  ;   {metadata(method data for {method} {0x00000001174ea6a0} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000104113e58: movabs $0x128,%rax
  0x0000000104113e62: jle    0x0000000104113e72
  0x0000000104113e68: movabs $0x138,%rax
  0x0000000104113e72: mov    (%rbx,%rax,1),%r8
  0x0000000104113e76: lea    0x1(%r8),%r8
  0x0000000104113e7a: mov    %r8,(%rbx,%rax,1)
  0x0000000104113e7e: jle    0x0000000104114422  ;*ifle
                                                ; - java.util.HashMap::getNode@14 (line 569)

  0x0000000104113e84: dec    %edi
  0x0000000104113e86: and    %rdx,%rdi
  0x0000000104113e89: movslq %edi,%rbx
  0x0000000104113e8c: cmp    0xc(%rsi),%edi
  0x0000000104113e8f: jae    0x00000001041145f3
  0x0000000104113e95: mov    0x10(%rsi,%rbx,4),%edi
  0x0000000104113e99: shl    $0x3,%rdi          ;*aaload
                                                ; - java.util.HashMap::getNode@24 (line 569)

  0x0000000104113e9d: cmp    $0x0,%rdi
  0x0000000104113ea1: movabs $0x11761b2f8,%rsi  ;   {metadata(method data for {method} {0x00000001174ea6a0} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000104113eab: movabs $0x148,%rbx
  0x0000000104113eb5: je     0x0000000104113ec5
  0x0000000104113ebb: movabs $0x158,%rbx
  0x0000000104113ec5: mov    (%rsi,%rbx,1),%rax
  0x0000000104113ec9: lea    0x1(%rax),%rax
  0x0000000104113ecd: mov    %rax,(%rsi,%rbx,1)
  0x0000000104113ed1: je     0x0000000104114422  ;*ifnull
                                                ; - java.util.HashMap::getNode@28 (line 569)

  0x0000000104113ed7: mov    0xc(%rdi),%esi     ;*getfield hash
                                                ; - java.util.HashMap::getNode@33 (line 571)
                                                ; implicit exception: dispatches to 0x00000001041145fc
  0x0000000104113eda: cmp    %edx,%esi
  0x0000000104113edc: movabs $0x11761b2f8,%rsi  ;   {metadata(method data for {method} {0x00000001174ea6a0} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000104113ee6: movabs $0x168,%rbx
  0x0000000104113ef0: jne    0x0000000104113f00
  0x0000000104113ef6: movabs $0x178,%rbx
  0x0000000104113f00: mov    (%rsi,%rbx,1),%rax
  0x0000000104113f04: lea    0x1(%rax),%rax
  0x0000000104113f08: mov    %rax,(%rsi,%rbx,1)
  0x0000000104113f0c: jne    0x000000010411407a  ;*if_icmpne
                                                ; - java.util.HashMap::getNode@37 (line 571)

  0x0000000104113f12: mov    0x10(%rdi),%esi
  0x0000000104113f15: shl    $0x3,%rsi          ;*getfield key
                                                ; - java.util.HashMap::getNode@42 (line 571)

  0x0000000104113f19: cmp    %rcx,%rsi
  0x0000000104113f1c: movabs $0x11761b2f8,%rbx  ;   {metadata(method data for {method} {0x00000001174ea6a0} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000104113f26: movabs $0x188,%rax
  0x0000000104113f30: je     0x0000000104113f40
  0x0000000104113f36: movabs $0x198,%rax
  0x0000000104113f40: mov    (%rbx,%rax,1),%r8
  0x0000000104113f44: lea    0x1(%r8),%r8
  0x0000000104113f48: mov    %r8,(%rbx,%rax,1)
  0x0000000104113f4c: je     0x00000001041145c8  ;*if_acmpeq
                                                ; - java.util.HashMap::getNode@49 (line 571)

  0x0000000104113f52: cmp    $0x0,%rcx
  0x0000000104113f56: movabs $0x11761b2f8,%rbx  ;   {metadata(method data for {method} {0x00000001174ea6a0} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000104113f60: movabs $0x1a8,%rax
  0x0000000104113f6a: je     0x0000000104113f7a
  0x0000000104113f70: movabs $0x1b8,%rax
  0x0000000104113f7a: mov    (%rbx,%rax,1),%r8
  0x0000000104113f7e: lea    0x1(%r8),%r8
  0x0000000104113f82: mov    %r8,(%rbx,%rax,1)
  0x0000000104113f86: je     0x000000010411407a  ;*ifnull
                                                ; - java.util.HashMap::getNode@53 (line 571)

  0x0000000104113f8c: mov    %rdi,0x20(%rsp)
  0x0000000104113f91: cmp    (%rcx),%rax        ; implicit exception: dispatches to 0x0000000104114601
  0x0000000104113f94: mov    %rcx,%rbx
  0x0000000104113f97: movabs $0x11761b2f8,%rax  ;   {metadata(method data for {method} {0x00000001174ea6a0} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000104113fa1: mov    0x8(%rbx),%ebx
  0x0000000104113fa4: shl    $0x3,%rbx
  0x0000000104113fa8: cmp    0x1d0(%rax),%rbx
  0x0000000104113faf: jne    0x0000000104113fbe
  0x0000000104113fb1: addq   $0x1,0x1d8(%rax)
  0x0000000104113fb9: jmpq   0x0000000104114024
  0x0000000104113fbe: cmp    0x1e0(%rax),%rbx
  0x0000000104113fc5: jne    0x0000000104113fd4
  0x0000000104113fc7: addq   $0x1,0x1e8(%rax)
  0x0000000104113fcf: jmpq   0x0000000104114024
  0x0000000104113fd4: cmpq   $0x0,0x1d0(%rax)
  0x0000000104113fdf: jne    0x0000000104113ff8
  0x0000000104113fe1: mov    %rbx,0x1d0(%rax)
  0x0000000104113fe8: movq   $0x1,0x1d8(%rax)
  0x0000000104113ff3: jmpq   0x0000000104114024
  0x0000000104113ff8: cmpq   $0x0,0x1e0(%rax)
  0x0000000104114003: jne    0x000000010411401c
  0x0000000104114005: mov    %rbx,0x1e0(%rax)
  0x000000010411400c: movq   $0x1,0x1e8(%rax)
  0x0000000104114017: jmpq   0x0000000104114024
  0x000000010411401c: addq   $0x1,0x1c8(%rax)
  0x0000000104114024: mov    %rsi,%rdx
  0x0000000104114027: mov    %rcx,%rsi          ;*invokevirtual equals
                                                ; - java.util.HashMap::getNode@59 (line 572)

  0x000000010411402a: nop
  0x000000010411402b: nop
  0x000000010411402c: nop
  0x000000010411402d: movabs $0xffffffffffffffff,%rax
  0x0000000104114037: callq  0x00000001040462e0  ; OopMap{[48]=Oop [32]=Oop off=668}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::getNode@59 (line 572)
                                                ;   {virtual_call}
  0x000000010411403c: cmp    $0x0,%eax
  0x000000010411403f: movabs $0x11761b2f8,%rdx  ;   {metadata(method data for {method} {0x00000001174ea6a0} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000104114049: movabs $0x1f8,%rsi
<writer thread='3075'/>
[Loaded sun.launcher.LauncherHelper$FXHelper from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='17155'/>
  0x0000000104114053: je     0x0000000104114063
  0x0000000104114059: movabs $0x208,%rsi
  0x0000000104114063: mov    (%rdx,%rsi,1),%rdi
  0x0000000104114067: lea    0x1(%rdi),%rdi
  0x000000010411406b: mov    %rdi,(%rdx,%rsi,1)
  0x000000010411406f: mov    0x20(%rsp),%rdi
  0x0000000104114074: jne    0x00000001041145c8  ;*ifeq
                                                ; - java.util.HashMap::getNode@62 (line 572)

  0x000000010411407a: mov    0x18(%rdi),%edx
  0x000000010411407d: shl    $0x3,%rdx          ;*getfield next
                                                ; - java.util.HashMap::getNode@70 (line 574)

  0x0000000104114081: cmp    $0x0,%rdx
  0x0000000104114085: movabs $0x11761b2f8,%rsi  ;   {metadata(method data for {method} {0x00000001174ea6a0} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000010411408f: movabs $0x218,%rbx
  0x0000000104114099: je     0x00000001041140a9
  0x000000010411409f: movabs $0x228,%rbx
  0x00000001041140a9: mov    (%rsi,%rbx,1),%rax
  0x00000001041140ad: lea    0x1(%rax),%rax
  0x00000001041140b1: mov    %rax,(%rsi,%rbx,1)
  0x00000001041140b5: je     0x0000000104114422  ;*ifnull
                                                ; - java.util.HashMap::getNode@76 (line 574)

  0x00000001041140bb: cmp    $0x0,%rdi
  0x00000001041140bf: jne    0x00000001041140da
  0x00000001041140c1: movabs $0x11761b2f8,%rax  ;   {metadata(method data for {method} {0x00000001174ea6a0} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000001041140cb: orl    $0x100,0x230(%rax)
  0x00000001041140d5: jmpq   0x000000010411419a
  0x00000001041140da: movabs $0x7c0032c30,%rcx  ;   {metadata(&apos;java/util/HashMap$TreeNode&apos;)}
  0x00000001041140e4: mov    0x8(%rdi),%ebx
  0x00000001041140e7: shl    $0x3,%rbx
  0x00000001041140eb: cmp    %rbx,%rcx
  0x00000001041140ee: jne    0x000000010411417e
  0x00000001041140f4: movabs $0x11761b2f8,%rax  ;   {metadata(method data for {method} {0x00000001174ea6a0} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000001041140fe: mov    0x8(%rdi),%ecx
  0x0000000104114101: shl    $0x3,%rcx
  0x0000000104114105: cmp    0x240(%rax),%rcx
  0x000000010411410c: jne    0x000000010411411b
  0x000000010411410e: addq   $0x1,0x248(%rax)
  0x0000000104114116: jmpq   0x000000010411419f
  0x000000010411411b: cmp    0x250(%rax),%rcx
  0x0000000104114122: jne    0x0000000104114131
  0x0000000104114124: addq   $0x1,0x258(%rax)
  0x000000010411412c: jmpq   0x000000010411419f
  0x0000000104114131: cmpq   $0x0,0x240(%rax)
  0x000000010411413c: jne    0x0000000104114155
  0x000000010411413e: mov    %rcx,0x240(%rax)
  0x0000000104114145: movq   $0x1,0x248(%rax)
  0x0000000104114150: jmpq   0x000000010411419f
  0x0000000104114155: cmpq   $0x0,0x250(%rax)
  0x0000000104114160: jne    0x0000000104114179
  0x0000000104114162: mov    %rcx,0x250(%rax)
  0x0000000104114169: movq   $0x1,0x258(%rax)
  0x0000000104114174: jmpq   0x000000010411419f
  0x0000000104114179: jmpq   0x000000010411419f
  0x000000010411417e: movabs $0x11761b2f8,%rax  ;   {metadata(method data for {method} {0x00000001174ea6a0} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000104114188: subq   $0x1,0x238(%rax)
  0x0000000104114190: jmpq   0x000000010411419a
  0x0000000104114195: jmpq   0x000000010411419f
  0x000000010411419a: xor    %rsi,%rsi
  0x000000010411419d: jmp    0x00000001041141a9
  0x000000010411419f: movabs $0x1,%rsi          ;*instanceof
                                                ; - java.util.HashMap::getNode@81 (line 575)

  0x00000001041141a9: cmp    $0x0,%esi
  0x00000001041141ac: movabs $0x11761b2f8,%rsi  ;   {metadata(method data for {method} {0x00000001174ea6a0} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000001041141b6: movabs $0x268,%rbx
  0x00000001041141c0: je     0x00000001041141d0
  0x00000001041141c6: movabs $0x278,%rbx
  0x00000001041141d0: mov    (%rsi,%rbx,1),%rax
  0x00000001041141d4: lea    0x1(%rax),%rax
  0x00000001041141d8: mov    %rax,(%rsi,%rbx,1)
  0x00000001041141dc: jne    0x0000000104114438  ;*ifeq
                                                ; - java.util.HashMap::getNode@84 (line 575)

  0x00000001041141e2: nopw   0x0(%rax,%rax,1)
  0x00000001041141e8: mov    0x30(%rsp),%rcx
  0x00000001041141ed: mov    0x28(%rsp),%edi
  0x00000001041141f1: mov    0xc(%rdx),%esi     ;*getfield hash
                                                ; - java.util.HashMap::getNode@100 (line 578)
                                                ; implicit exception: dispatches to 0x0000000104114606
  0x00000001041141f4: cmp    %edi,%esi
  0x00000001041141f6: movabs $0x11761b2f8,%rsi  ;   {metadata(method data for {method} {0x00000001174ea6a0} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000104114200: movabs $0x2e8,%rbx
  0x000000010411420a: jne    0x000000010411421a
  0x0000000104114210: movabs $0x2f8,%rbx
  0x000000010411421a: mov    (%rsi,%rbx,1),%rax
  0x000000010411421e: lea    0x1(%rax),%rax
  0x0000000104114222: mov    %rax,(%rsi,%rbx,1)
  0x0000000104114226: jne    0x0000000104114392  ;*if_icmpne
                                                ; - java.util.HashMap::getNode@104 (line 578)

  0x000000010411422c: mov    0x10(%rdx),%esi
  0x000000010411422f: shl    $0x3,%rsi          ;*getfield key
                                                ; - java.util.HashMap::getNode@109 (line 578)

  0x0000000104114233: cmp    %rcx,%rsi
  0x0000000104114236: movabs $0x11761b2f8,%rbx  ;   {metadata(method data for {method} {0x00000001174ea6a0} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000104114240: movabs $0x308,%rax
  0x000000010411424a: je     0x000000010411425a
  0x0000000104114250: movabs $0x318,%rax
  0x000000010411425a: mov    (%rbx,%rax,1),%r8
  0x000000010411425e: lea    0x1(%r8),%r8
  0x0000000104114262: mov    %r8,(%rbx,%rax,1)
  0x0000000104114266: je     0x0000000104114413  ;*if_acmpeq
                                                ; - java.util.HashMap::getNode@116 (line 578)

  0x000000010411426c: cmp    $0x0,%rcx
  0x0000000104114270: movabs $0x11761b2f8,%rbx  ;   {metadata(method data for {method} {0x00000001174ea6a0} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000010411427a: movabs $0x328,%rax
  0x0000000104114284: je     0x0000000104114294
  0x000000010411428a: movabs $0x338,%rax
  0x0000000104114294: mov    (%rbx,%rax,1),%r8
  0x0000000104114298: lea    0x1(%r8),%r8
  0x000000010411429c: mov    %r8,(%rbx,%rax,1)
  0x00000001041142a0: je     0x0000000104114392  ;*ifnull
                                                ; - java.util.HashMap::getNode@120 (line 578)

  0x00000001041142a6: mov    %rdx,0x38(%rsp)
  0x00000001041142ab: cmp    (%rcx),%rax        ; implicit exception: dispatches to 0x000000010411460b
  0x00000001041142ae: mov    %rcx,%rbx
  0x00000001041142b1: movabs $0x11761b2f8,%rax  ;   {metadata(method data for {method} {0x00000001174ea6a0} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000001041142bb: mov    0x8(%rbx),%ebx
  0x00000001041142be: shl    $0x3,%rbx
  0x00000001041142c2: cmp    0x350(%rax),%rbx
  0x00000001041142c9: jne    0x00000001041142d8
  0x00000001041142cb: addq   $0x1,0x358(%rax)
  0x00000001041142d3: jmpq   0x000000010411433e
  0x00000001041142d8: cmp    0x360(%rax),%rbx
  0x00000001041142df: jne    0x00000001041142ee
  0x00000001041142e1: addq   $0x1,0x368(%rax)
  0x00000001041142e9: jmpq   0x000000010411433e
  0x00000001041142ee: cmpq   $0x0,0x350(%rax)
  0x00000001041142f9: jne    0x0000000104114312
  0x00000001041142fb: mov    %rbx,0x350(%rax)
  0x0000000104114302: movq   $0x1,0x358(%rax)
  0x000000010411430d: jmpq   0x000000010411433e
  0x0000000104114312: cmpq   $0x0,0x360(%rax)
  0x000000010411431d: jne    0x0000000104114336
  0x000000010411431f: mov    %rbx,0x360(%rax)
  0x0000000104114326: movq   $0x1,0x368(%rax)
  0x0000000104114331: jmpq   0x000000010411433e
  0x0000000104114336: addq   $0x1,0x348(%rax)
  0x000000010411433e: mov    %rsi,%rdx
  0x0000000104114341: mov    %rcx,%rsi          ;*invokevirtual equals
                                                ; - java.util.HashMap::getNode@126 (line 579)

  0x0000000104114344: nop
  0x0000000104114345: movabs $0xffffffffffffffff,%rax
  0x000000010411434f: callq  0x00000001040462e0  ; OopMap{[56]=Oop [48]=Oop off=1460}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::getNode@126 (line 579)
                                                ;   {virtual_call}
  0x0000000104114354: cmp    $0x0,%eax
  0x0000000104114357: movabs $0x11761b2f8,%rax  ;   {metadata(method data for {method} {0x00000001174ea6a0} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000104114361: movabs $0x378,%rdx
  0x000000010411436b: je     0x000000010411437b
  0x0000000104114371: movabs $0x388,%rdx
  0x000000010411437b: mov    (%rax,%rdx,1),%rcx
  0x000000010411437f: lea    0x1(%rcx),%rcx
  0x0000000104114383: mov    %rcx,(%rax,%rdx,1)
  0x0000000104114387: mov    0x38(%rsp),%rdx
  0x000000010411438c: jne    0x0000000104114413  ;*ifeq
                                                ; - java.util.HashMap::getNode@129 (line 579)

  0x0000000104114392: mov    0x18(%rdx),%eax
  0x0000000104114395: shl    $0x3,%rax          ;*getfield next
                                                ; - java.util.HashMap::getNode@137 (line 581)

  0x0000000104114399: movabs $0x11761b2f8,%rdx  ;   {metadata(method data for {method} {0x00000001174ea6a0} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000001041143a3: mov    0xe0(%rdx),%ecx
  0x00000001041143a9: add    $0x8,%ecx
  0x00000001041143ac: mov    %ecx,0xe0(%rdx)
  0x00000001041143b2: movabs $0x1174ea6a0,%rdx  ;   {metadata({method} {0x00000001174ea6a0} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000001041143bc: and    $0xfff8,%ecx
  0x00000001041143c2: cmp    $0x0,%ecx
  0x00000001041143c5: je     0x0000000104114610  ; OopMap{[48]=Oop rax=Oop off=1579}
                                                ;*ifnonnull
                                                ; - java.util.HashMap::getNode@143 (line 581)

  0x00000001041143cb: test   %eax,-0x30b42d1(%rip)        # 0x0000000101060100
                                                ;   {poll}
  0x00000001041143d1: cmp    $0x0,%rax
  0x00000001041143d5: movabs $0x11761b2f8,%rdx  ;   {metadata(method data for {method} {0x00000001174ea6a0} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000001041143df: movabs $0x398,%rcx
  0x00000001041143e9: jne    0x00000001041143f9
  0x00000001041143ef: movabs $0x3a8,%rcx
  0x00000001041143f9: mov    (%rdx,%rcx,1),%rsi
  0x00000001041143fd: lea    0x1(%rsi),%rsi
  0x0000000104114401: mov    %rsi,(%rdx,%rcx,1)
  0x0000000104114405: je     0x0000000104114422  ;*ifnonnull
                                                ; - java.util.HashMap::getNode@143 (line 581)

  0x000000010411440b: mov    %rax,%rdx
  0x000000010411440e: jmpq   0x00000001041141e8  ;*aload
                                                ; - java.util.HashMap::getNode@98 (line 578)

  0x0000000104114413: mov    %rdx,%rax
  0x0000000104114416: add    $0x50,%rsp
  0x000000010411441a: pop    %rbp
  0x000000010411441b: test   %eax,-0x30b4321(%rip)        # 0x0000000101060100
                                                ;   {poll_return}
  0x0000000104114421: retq                      ;*areturn
                                                ; - java.util.HashMap::getNode@134 (line 580)

  0x0000000104114422: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000010411442c: add    $0x50,%rsp
  0x0000000104114430: pop    %rbp
  0x0000000104114431: test   %eax,-0x30b4337(%rip)        # 0x0000000101060100
                                                ;   {poll_return}
  0x0000000104114437: retq                      ;*areturn
                                                ; - java.util.HashMap::getNode@147 (line 584)

  0x0000000104114438: mov    0x30(%rsp),%rcx
  0x000000010411443d: mov    0x28(%rsp),%edx
  0x0000000104114441: cmp    $0x0,%rdi
  0x0000000104114445: jne    0x0000000104114460
  0x0000000104114447: movabs $0x11761b2f8,%rbx  ;   {metadata(method data for {method} {0x00000001174ea6a0} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000104114451: orl    $0x100,0x280(%rbx)
  0x000000010411445b: jmpq   0x0000000104114520
  0x0000000104114460: movabs $0x7c0032c30,%rax  ;   {metadata(&apos;java/util/HashMap$TreeNode&apos;)}
  0x000000010411446a: mov    0x8(%rdi),%esi
  0x000000010411446d: shl    $0x3,%rsi
  0x0000000104114471: cmp    %rsi,%rax
  0x0000000104114474: jne    0x0000000104114504
  0x000000010411447a: movabs $0x11761b2f8,%rbx  ;   {metadata(method data for {method} {0x00000001174ea6a0} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000104114484: mov    0x8(%rdi),%eax
  0x0000000104114487: shl    $0x3,%rax
  0x000000010411448b: cmp    0x290(%rbx),%rax
  0x0000000104114492: jne    0x00000001041144a1
  0x0000000104114494: addq   $0x1,0x298(%rbx)
  0x000000010411449c: jmpq   0x0000000104114520
  0x00000001041144a1: cmp    0x2a0(%rbx),%rax
  0x00000001041144a8: jne    0x00000001041144b7
  0x00000001041144aa: addq   $0x1,0x2a8(%rbx)
  0x00000001041144b2: jmpq   0x0000000104114520
  0x00000001041144b7: cmpq   $0x0,0x290(%rbx)
  0x00000001041144c2: jne    0x00000001041144db
  0x00000001041144c4: mov    %rax,0x290(%rbx)
  0x00000001041144cb: movq   $0x1,0x298(%rbx)
  0x00000001041144d6: jmpq   0x0000000104114520
  0x00000001041144db: cmpq   $0x0,0x2a0(%rbx)
  0x00000001041144e6: jne    0x00000001041144ff
  0x00000001041144e8: mov    %rax,0x2a0(%rbx)
  0x00000001041144ef: movq   $0x1,0x2a8(%rbx)
  0x00000001041144fa: jmpq   0x0000000104114520
  0x00000001041144ff: jmpq   0x0000000104114520
  0x0000000104114504: movabs $0x11761b2f8,%rbx  ;   {metadata(method data for {method} {0x00000001174ea6a0} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000010411450e: subq   $0x1,0x288(%rbx)
  0x0000000104114516: jmpq   0x0000000104114627
  0x000000010411451b: jmpq   0x0000000104114520
  0x0000000104114520: mov    %rdi,%rsi          ;*checkcast
                                                ; - java.util.HashMap::getNode@89 (line 576)

  0x0000000104114523: cmp    (%rsi),%rax        ;*invokevirtual getTreeNode
                                                ; - java.util.HashMap::getNode@94 (line 576)
                                                ; implicit exception: dispatches to 0x0000000104114630
  0x0000000104114526: mov    %rsi,%rdi
  0x0000000104114529: movabs $0x11761b2f8,%rbx  ;   {metadata(method data for {method} {0x00000001174ea6a0} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000104114533: mov    0x8(%rdi),%edi
  0x0000000104114536: shl    $0x3,%rdi
  0x000000010411453a: cmp    0x2c0(%rbx),%rdi
  0x0000000104114541: jne    0x0000000104114550
  0x0000000104114543: addq   $0x1,0x2c8(%rbx)
  0x000000010411454b: jmpq   0x00000001041145b6
  0x0000000104114550: cmp    0x2d0(%rbx),%rdi
  0x0000000104114557: jne    0x0000000104114566
  0x0000000104114559: addq   $0x1,0x2d8(%rbx)
  0x0000000104114561: jmpq   0x00000001041145b6
  0x0000000104114566: cmpq   $0x0,0x2c0(%rbx)
  0x0000000104114571: jne    0x000000010411458a
  0x0000000104114573: mov    %rdi,0x2c0(%rbx)
  0x000000010411457a: movq   $0x1,0x2c8(%rbx)
  0x0000000104114585: jmpq   0x00000001041145b6
  0x000000010411458a: cmpq   $0x0,0x2d0(%rbx)
  0x0000000104114595: jne    0x00000001041145ae
  0x0000000104114597: mov    %rdi,0x2d0(%rbx)
  0x000000010411459e: movq   $0x1,0x2d8(%rbx)
  0x00000001041145a9: jmpq   0x00000001041145b6
  0x00000001041145ae: addq   $0x1,0x2b8(%rbx)
  0x00000001041145b6: nop
  0x00000001041145b7: callq  0x00000001040460a0  ; OopMap{off=2076}
                                                ;*invokevirtual getTreeNode
                                                ; - java.util.HashMap::getNode@94 (line 576)
                                                ;   {optimized virtual_call}
  0x00000001041145bc: add    $0x50,%rsp
  0x00000001041145c0: pop    %rbp
  0x00000001041145c1: test   %eax,-0x30b44c7(%rip)        # 0x0000000101060100
                                                ;   {poll_return}
  0x00000001041145c7: retq                      ;*areturn
                                                ; - java.util.HashMap::getNode@97 (line 576)

  0x00000001041145c8: mov    %rdi,%rax
  0x00000001041145cb: add    $0x50,%rsp
  0x00000001041145cf: pop    %rbp
  0x00000001041145d0: test   %eax,-0x30b44d6(%rip)        # 0x0000000101060100
                                                ;   {poll_return}
  0x00000001041145d6: retq   
  0x00000001041145d7: mov    %rdi,0x8(%rsp)
  0x00000001041145dc: movq   $0xffffffffffffffff,(%rsp)
  0x00000001041145e4: callq  0x0000000104102d20  ; OopMap{rsi=Oop rcx=Oop [48]=Oop off=2121}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::getNode@-1 (line 569)
                                                ;   {runtime_call}
  0x00000001041145e9: jmpq   0x0000000104113e07
  0x00000001041145ee: callq  0x0000000104072100  ; OopMap{rsi=Oop rcx=Oop [48]=Oop off=2131}
                                                ;*arraylength
                                                ; - java.util.HashMap::getNode@10 (line 569)
                                                ;   {runtime_call}
  0x00000001041145f3: mov    %rdi,(%rsp)
  0x00000001041145f7: callq  0x00000001040727c0  ; OopMap{rcx=Oop [48]=Oop rsi=Oop off=2140}
                                                ;*aaload
                                                ; - java.util.HashMap::getNode@24 (line 569)
                                                ;   {runtime_call}
  0x00000001041145fc: callq  0x0000000104072100  ; OopMap{rdi=Oop rcx=Oop [48]=Oop off=2145}
                                                ;*getfield hash
                                                ; - java.util.HashMap::getNode@33 (line 571)
                                                ;   {runtime_call}
  0x0000000104114601: callq  0x0000000104072100  ; OopMap{rcx=Oop [48]=Oop [32]=Oop rsi=Oop off=2150}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::getNode@59 (line 572)
                                                ;   {runtime_call}
  0x0000000104114606: callq  0x0000000104072100  ; OopMap{rdx=Oop rcx=Oop [48]=Oop off=2155}
                                                ;*getfield hash
                                                ; - java.util.HashMap::getNode@100 (line 578)
                                                ;   {runtime_call}
  0x000000010411460b: callq  0x0000000104072100  ; OopMap{rcx=Oop [48]=Oop [56]=Oop rsi=Oop off=2160}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::getNode@126 (line 579)
                                                ;   {runtime_call}
  0x0000000104114610: mov    %rdx,0x8(%rsp)
  0x0000000104114615: movq   $0x8f,(%rsp)
  0x000000010411461d: callq  0x0000000104102d20  ; OopMap{[48]=Oop rax=Oop off=2178}
                                                ;*ifnonnull
                                                ; - java.util.HashMap::getNode@143 (line 581)
                                                ;   {runtime_call}
  0x0000000104114622: jmpq   0x00000001041143cb
  0x0000000104114627: mov    %rdi,(%rsp)
  0x000000010411462b: callq  0x0000000104100780  ; OopMap{rcx=Oop [48]=Oop off=2192}
                                                ;*checkcast
                                                ; - java.util.HashMap::getNode@89 (line 576)
                                                ;   {runtime_call}
  0x0000000104114630: callq  0x0000000104072100  ; OopMap{rcx=Oop [48]=Oop rsi=Oop off=2197}
                                                ;*invokevirtual getTreeNode
                                                ; - java.util.HashMap::getNode@94 (line 576)
                                                ;   {runtime_call}
  0x0000000104114635: nop
  0x0000000104114636: nop
  0x0000000104114637: mov    0x2a8(%r15),%rax
  0x000000010411463e: movabs $0x0,%r10
  0x0000000104114648: mov    %r10,0x2a8(%r15)
  0x000000010411464f: movabs $0x0,%r10
  0x0000000104114659: mov    %r10,0x2b0(%r15)
  0x0000000104114660: add    $0x50,%rsp
  0x0000000104114664: pop    %rbp
  0x0000000104114665: jmpq   0x0000000104072c60  ;   {runtime_call}
  0x000000010411466a: hlt    
  0x000000010411466b: hlt    
  0x000000010411466c: hlt    
  0x000000010411466d: hlt    
  0x000000010411466e: hlt    
  0x000000010411466f: hlt    
  0x0000000104114670: hlt    
  0x0000000104114671: hlt    
  0x0000000104114672: hlt    
  0x0000000104114673: hlt    
  0x0000000104114674: hlt    
  0x0000000104114675: hlt    
  0x0000000104114676: hlt    
  0x0000000104114677: hlt    
  0x0000000104114678: hlt    
  0x0000000104114679: hlt    
  0x000000010411467a: hlt    
  0x000000010411467b: hlt    
  0x000000010411467c: hlt    
  0x000000010411467d: hlt    
  0x000000010411467e: hlt    
  0x000000010411467f: hlt    
[Stub Code]
  0x0000000104114680: nop                       ;   {no_reloc}
  0x0000000104114681: nop
  0x0000000104114682: nop
  0x0000000104114683: nop
  0x0000000104114684: nop
  0x0000000104114685: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010411468f: jmpq   0x000000010411468f  ;   {runtime_call}
  0x0000000104114694: nop
  0x0000000104114695: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010411469f: jmpq   0x000000010411469f  ;   {runtime_call}
  0x00000001041146a4: nop
  0x00000001041146a5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000001041146af: jmpq   0x00000001041146af  ;   {runtime_call}
[Exception Handler]
  0x00000001041146b4: callq  0x0000000104100420  ;   {runtime_call}
  0x00000001041146b9: mov    %rsp,-0x28(%rsp)
  0x00000001041146be: sub    $0x80,%rsp
  0x00000001041146c5: mov    %rax,0x78(%rsp)
  0x00000001041146ca: mov    %rcx,0x70(%rsp)
  0x00000001041146cf: mov    %rdx,0x68(%rsp)
  0x00000001041146d4: mov    %rbx,0x60(%rsp)
  0x00000001041146d9: mov    %rbp,0x50(%rsp)
  0x00000001041146de: mov    %rsi,0x48(%rsp)
  0x00000001041146e3: mov    %rdi,0x40(%rsp)
  0x00000001041146e8: mov    %r8,0x38(%rsp)
  0x00000001041146ed: mov    %r9,0x30(%rsp)
  0x00000001041146f2: mov    %r10,0x28(%rsp)
  0x00000001041146f7: mov    %r11,0x20(%rsp)
  0x00000001041146fc: mov    %r12,0x18(%rsp)
  0x0000000104114701: mov    %r13,0x10(%rsp)
  0x0000000104114706: mov    %r14,0x8(%rsp)
  0x000000010411470b: mov    %r15,(%rsp)
  0x000000010411470f: movabs $0x100641684,%rdi  ;   {external_word}
  0x0000000104114719: movabs $0x1041146b9,%rsi  ;   {internal_word}
  0x0000000104114723: mov    %rsp,%rdx
  0x0000000104114726: and    $0xfffffffffffffff0,%rsp
  0x000000010411472a: callq  0x000000010046a1f6  ;   {runtime_call}
  0x000000010411472f: hlt    
[Deopt Handler Code]
  0x0000000104114730: movabs $0x104114730,%r10  ;   {section_word}
  0x000000010411473a: push   %r10
  0x000000010411473c: jmpq   0x0000000104047500  ;   {runtime_call}
  0x0000000104114741: hlt    
  0x0000000104114742: hlt    
  0x0000000104114743: hlt    
  0x0000000104114744: hlt    
  0x0000000104114745: hlt    
  0x0000000104114746: hlt    
  0x0000000104114747: hlt    
<nmethod compile_id='29' compiler='C1' level='3' entry='0x0000000104113da0' size='4176' address='0x0000000104113bd0' relocation_offset='296' insts_offset='464' stub_offset='2736' scopes_data_offset='2944' scopes_pcs_offset='3328' dependencies_offset='4112' nul_chk_table_offset='4120' method='java/util/HashMap getNode (ILjava/lang/Object;)Ljava/util/HashMap$Node;' bytes='148' count='1060' backedge_count='22' iicount='1060' stamp='0.601'/>
<writer thread='14851'/>
Decoding compiled method 0x00000001041135d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000117405000} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x30]  (sp of caller)
  0x0000000104113720: mov    0x8(%rsi),%r10d
  0x0000000104113724: shl    $0x3,%r10
  0x0000000104113728: cmp    %r10,%rax
  0x000000010411372b: jne    0x0000000104045e60  ;   {runtime_call}
  0x0000000104113731: data16 xchg %ax,%ax
  0x0000000104113734: nopl   0x0(%rax,%rax,1)
  0x000000010411373c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000104113740: mov    %eax,-0x14000(%rsp)
  0x0000000104113747: push   %rbp
  0x0000000104113748: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1466)

  0x000000010411374c: vmovq  %rsi,%xmm0
  0x0000000104113751: mov    0x10(%rsi),%eax    ;*getfield hash
                                                ; - java.lang.String::hashCode@1 (line 1466)

  0x0000000104113754: test   %eax,%eax
  0x0000000104113756: jne    0x0000000104113896  ;*ifne
                                                ; - java.lang.String::hashCode@6 (line 1467)

  0x000000010411375c: 
<writer thread='3075'/>
[Loaded java.lang.Class$MethodArray from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='14851'/>
mov    0xc(%rsi),%ebp                           ;*getfield value
                                                ; - java.lang.String::hashCode@10 (line 1467)

  0x000000010411375f: mov    0xc(%r12,%rbp,8),%ebx  ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ; implicit exception: dispatches to 0x00000001041138bd
  0x0000000104113764: test   %ebx,%ebx
  0x0000000104113766: jle    0x00000001041138a2  ;*ifle
                                                ; - java.lang.String::hashCode@14 (line 1467)

  0x000000010411376c: test   %ebx,%ebx
  0x000000010411376e: jbe    0x00000001041138a6
  0x0000000104113774: mov    %ebx,%r11d
  0x0000000104113777: dec    %r11d
  0x000000010411377a: cmp    %ebx,%r11d
  0x000000010411377d: jae    0x00000001041138a6  ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1471)

  0x0000000104113783: movzwl 0x10(%r12,%rbp,8),%ecx  ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x0000000104113789: mov    %ebx,%edx
  0x000000010411378b: add    $0xfffffff9,%edx
  0x000000010411378e: mov    %ecx,%eax
  0x0000000104113790: shl    $0x5,%eax
  0x0000000104113793: lea    (%r12,%rbp,8),%r10
  0x0000000104113797: mov    $0x1,%r13d
  0x000000010411379d: mov    $0x80000000,%r8d
  0x00000001041137a3: cmp    %edx,%r11d
  0x00000001041137a6: cmovl  %r8d,%edx
  0x00000001041137aa: cmp    $0x1,%edx
  0x00000001041137ad: jle    0x0000000104113882
  0x00000001041137b3: sub    %ecx,%eax          ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1471)

  0x00000001041137b5: vmovd  %ebx,%xmm1
  0x00000001041137b9: jmp    0x00000001041137e2  ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1471)

  0x00000001041137bb: movzwl 0x10(%r10,%r13,2),%r11d
  0x00000001041137c1: sub    %ecx,%eax
  0x00000001041137c3: add    %r11d,%eax         ;*iadd
                                                ; - java.lang.String::hashCode@40 (line 1471)

  0x00000001041137c6: inc    %r13d              ;*iinc
                                                ; - java.lang.String::hashCode@42 (line 1470)

  0x00000001041137c9: cmp    %ebx,%r13d
  0x00000001041137cc: jge    0x000000010411388d  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x00000001041137d2: mov    %eax,%r11d
  0x00000001041137d5: shl    $0x5,%r11d
  0x00000001041137d9: mov    %eax,%ecx
  0x00000001041137db: mov    %r11d,%eax
  0x00000001041137de: jmp    0x00000001041137bb
  0x00000001041137e0: sub    %ecx,%eax          ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1471)

  0x00000001041137e2: movzwl 0x10(%r10,%r13,2),%r11d
  0x00000001041137e8: add    %r11d,%eax
  0x00000001041137eb: movslq %r13d,%r11
  0x00000001041137ee: movzwl 0x12(%r10,%r11,2),%r14d
  0x00000001041137f4: movzwl 0x1e(%r10,%r11,2),%r8d
  0x00000001041137fa: movzwl 0x1c(%r10,%r11,2),%ecx
  0x0000000104113800: movzwl 0x1a(%r10,%r11,2),%r9d
  0x0000000104113806: movzwl 0x18(%r10,%r11,2),%edi
  0x000000010411380c: movzwl 0x16(%r10,%r11,2),%ebx
  0x0000000104113812: movzwl 0x14(%r10,%r11,2),%esi
  0x0000000104113818: mov    %eax,%ebp
  0x000000010411381a: shl    $0x5,%ebp
  0x000000010411381d: sub    %eax,%ebp
  0x000000010411381f: add    %r14d,%ebp
  0x0000000104113822: mov    %ebp,%r11d
  0x0000000104113825: shl    $0x5,%r11d
  0x0000000104113829: sub    %ebp,%r11d
  0x000000010411382c: add    %esi,%r11d
  0x000000010411382f: mov    %r11d,%eax
  0x0000000104113832: shl    $0x5,%eax
  0x0000000104113835: sub    %r11d,%eax
  0x0000000104113838: add    %ebx,%eax
  0x000000010411383a: mov    %eax,%r11d
  0x000000010411383d: shl    $0x5,%r11d
  0x0000000104113841: sub    %eax,%r11d
  0x0000000104113844: add    %edi,%r11d
  0x0000000104113847: mov    %r11d,%edi
  0x000000010411384a: shl    $0x5,%edi
  0x000000010411384d: sub    %r11d,%edi
  0x0000000104113850: add    %r9d,%edi
  0x0000000104113853: mov    %edi,%r11d
  0x0000000104113856: shl    $0x5,%r11d
  0x000000010411385a: sub    %edi,%r11d
  0x000000010411385d: add    %ecx,%r11d
  0x0000000104113860: mov    %r11d,%ecx
  0x0000000104113863: shl    $0x5,%ecx
  0x0000000104113866: sub    %r11d,%ecx
  0x0000000104113869: add    %r8d,%ecx          ;*iadd
                                                ; - java.lang.String::hashCode@40 (line 1471)

  0x000000010411386c: mov    %ecx,%eax
  0x000000010411386e: shl    $0x5,%eax          ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1471)

  0x0000000104113871: add    $0x8,%r13d         ;*iinc
                                                ; - java.lang.String::hashCode@42 (line 1470)

  0x0000000104113875: cmp    %edx,%r13d
  0x0000000104113878: jl     0x00000001041137e0  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x000000010411387e: vmovd  %xmm1,%ebx
  0x0000000104113882: cmp    %ebx,%r13d
  0x0000000104113885: jl     0x00000001041137bb
  0x000000010411388b: mov    %ecx,%eax
  0x000000010411388d: vmovq  %xmm0,%r10
  0x0000000104113892: mov    %eax,0x10(%r10)    ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1466)

  0x0000000104113896: add    $0x20,%rsp
  0x000000010411389a: pop    %rbp
  0x000000010411389b: test   %eax,-0x30b38a1(%rip)        # 0x0000000101060000
                                                ;   {poll_return}
  0x00000001041138a1: retq   
  0x00000001041138a2: xor    %eax,%eax
  0x00000001041138a4: jmp    0x0000000104113896
  0x00000001041138a6: mov    $0xffffff86,%esi
  0x00000001041138ab: vmovsd %xmm0,(%rsp)
  0x00000001041138b0: data16 xchg %ax,%ax
  0x00000001041138b3: callq  0x00000001040456a0  ; OopMap{rbp=NarrowOop [0]=Oop off=408}
                                                ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1471)
                                                ;   {runtime_call}
  0x00000001041138b8: callq  0x00000001004ed904  ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1471)
                                                ;   {runtime_call}
  0x00000001041138bd: mov    $0xfffffff6,%esi
  0x00000001041138c2: nop
  0x00000001041138c3: callq  0x00000001040456a0  ; OopMap{off=424}
                                                ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ;   {runtime_call}
  0x00000001041138c8: callq  0x00000001004ed904  ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ;   {runtime_call}
  0x00000001041138cd: hlt    
  0x00000001041138ce: hlt    
  0x00000001041138cf: hlt    
  0x00000001041138d0: hlt    
  0x00000001041138d1: hlt    
  0x00000001041138d2: hlt    
  0x00000001041138d3: hlt    
  0x00000001041138d4: hlt    
  0x00000001041138d5: hlt    
  0x00000001041138d6: hlt    
  0x00000001041138d7: hlt    
  0x00000001041138d8: hlt    
  0x00000001041138d9: hlt    
  0x00000001041138da: hlt    
  0x00000001041138db: hlt    
  0x00000001041138dc: hlt    
  0x00000001041138dd: hlt    
  0x00000001041138de: hlt    
  0x00000001041138df: hlt    
[Exception Handler]
[Stub Code]
  0x00000001041138e0: jmpq   0x000000010406eda0  ;   {no_reloc}
[Deopt Handler Code]
  0x00000001041138e5: callq  0x00000001041138ea
  0x00000001041138ea: subq   $0x5,(%rsp)
  0x00000001041138ef: jmpq   0x0000000104047500  ;   {runtime_call}
  0x00000001041138f4: hlt    
  0x00000001041138f5: hlt    
  0x00000001041138f6: hlt    
  0x00000001041138f7: hlt    
<nmethod compile_id='25' compiler='C2' level='4' entry='0x0000000104113720' size='1352' address='0x00000001041135d0' relocation_offset='296' insts_offset='336' stub_offset='784' scopes_data_offset='816' scopes_pcs_offset='928' dependencies_offset='1328' nul_chk_table_offset='1336' method='java/lang/String hashCode ()I' bytes='55' count='1977' backedge_count='61098' iicount='1977' stamp='0.608'/>
<writer thread='17155'/>
Decoding compiled method 0x0000000104119a50:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000001174e9cf0} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000104119bc0: mov    %eax,-0x14000(%rsp)
  0x0000000104119bc7: push   %rbp
  0x0000000104119bc8: sub    $0x30,%rsp
  0x0000000104119bcc: movabs $0x1175d6368,%rdi  ;   {metadata(method data for {method} {0x00000001174e9cf0} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000104119bd6: mov    0xdc(%rdi),%ebx
  0x0000000104119bdc: add    $0x8,%ebx
  0x0000000104119bdf: mov    %ebx,0xdc(%rdi)
  0x0000000104119be5: movabs $0x1174e9cf0,%rdi  ;   {metadata({method} {0x00000001174e9cf0} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000104119bef: and    $0x1ff8,%ebx
  0x0000000104119bf5: cmp    $0x0,%ebx
  0x0000000104119bf8: je     0x0000000104119d0c  ;*aload_0
                                                ; - java.util.HashMap::hash@0 (line 339)

  0x0000000104119bfe: cmp    $0x0,%rsi
  0x0000000104119c02: movabs $0x1175d6368,%rdi  ;   {metadata(method data for {method} {0x00000001174e9cf0} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000104119c0c: movabs $0x108,%rbx
  0x0000000104119c16: jne    0x0000000104119c26
  0x0000000104119c1c: movabs $0x118,%rbx
  0x0000000104119c26: mov    (%rdi,%rbx,1),%rax
  0x0000000104119c2a: lea    0x1(%rax),%rax
  0x0000000104119c2e: mov    %rax,(%rdi,%rbx,1)
  0x0000000104119c32: jne    0x0000000104119c52  ;*ifnonnull
                                                ; - java.util.HashMap::hash@1 (line 339)

  0x0000000104119c38: movabs $0x1175d6368,%rsi  ;   {metadata(method data for {method} {0x00000001174e9cf0} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000104119c42: incl   0x128(%rsi)
  0x0000000104119c48: mov    $0x0,%esi
  0x0000000104119c4d: jmpq   0x0000000104119cfd  ;*goto
                                                ; - java.util.HashMap::hash@5 (line 339)

  0x0000000104119c52: cmp    (%rsi),%rax        ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; implicit exception: dispatches to 0x0000000104119d23
  0x0000000104119c55: mov    %rsi,%rdi
  0x0000000104119c58: movabs $0x1175d6368,%rbx  ;   {metadata(method data for {method} {0x00000001174e9cf0} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000104119c62: mov    0x8(%rdi),%edi
  0x0000000104119c65: shl    $0x3,%rdi
  0x0000000104119c69: cmp    0x148(%rbx),%rdi
  0x0000000104119c70: jne    0x0000000104119c7f
  0x0000000104119c72: addq   $0x1,0x150(%rbx)
  0x0000000104119c7a: jmpq   0x0000000104119ce5
  0x0000000104119c7f: cmp    0x158(%rbx),%rdi
  0x0000000104119c86: jne    0x0000000104119c95
  0x0000000104119c88: addq   $0x1,0x160(%rbx)
  0x0000000104119c90: jmpq   0x0000000104119ce5
  0x0000000104119c95: cmpq   $0x0,0x148(%rbx)
  0x0000000104119ca0: jne    0x0000000104119cb9
  0x0000000104119ca2: mov    %rdi,0x148(%rbx)
  0x0000000104119ca9: movq   $0x1,0x150(%rbx)
  0x0000000104119cb4: jmpq   0x0000000104119ce5
  0x0000000104119cb9: cmpq   $0x0,0x158(%rbx)
  0x0000000104119cc4: jne    0x0000000104119cdd
  0x0000000104119cc6: mov    %rdi,0x158(%rbx)
  0x0000000104119ccd: movq   $0x1,0x160(%rbx)
  0x0000000104119cd8: jmpq   0x0000000104119ce5
  0x0000000104119cdd: addq   $0x1,0x140(%rbx)
  0x0000000104119ce5: movabs $0xffffffffffffffff,%rax
  0x0000000104119cef: callq  0x00000001040462e0  ; OopMap{off=308}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ;   {virtual_call}
  0x0000000104119cf4: mov    %rax,%rsi
  0x0000000104119cf7: shr    $0x10,%esi
  0x0000000104119cfa: xor    %rax,%rsi
  0x0000000104119cfd: mov    %rsi,%rax
  0x0000000104119d00: add    $0x30,%rsp
  0x0000000104119d04: pop    %rbp
  0x0000000104119d05: test   %eax,-0x30b9c0b(%rip)        # 0x0000000101060100
                                                ;   {poll_return}
  0x0000000104119d0b: retq   
  0x0000000104119d0c: mov    %rdi,0x8(%rsp)
  0x0000000104119d11: movq   $0xffffffffffffffff,(%rsp)
  0x0000000104119d19: callq  0x0000000104102d20  ; OopMap{rsi=Oop off=350}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::hash@-1 (line 339)
                                                ;   {runtime_call}
  0x0000000104119d1e: jmpq   0x0000000104119bfe
  0x0000000104119d23: callq  0x0000000104072100  ; OopMap{rsi=Oop off=360}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ;   {runtime_call}
  0x0000000104119d28: nop
  0x0000000104119d29: nop
  0x0000000104119d2a: mov    0x2a8(%r15),%rax
  0x0000000104119d31: movabs $0x0,%r10
  0x0000000104119d3b: mov    %r10,0x2a8(%r15)
  0x0000000104119d42: movabs $0x0,%r10
  0x0000000104119d4c: mov    %r10,0x2b0(%r15)
  0x0000000104119d53: add    $0x30,%rsp
  0x0000000104119d57: pop    %rbp
  0x0000000104119d58: jmpq   0x0000000104072c60  ;   {runtime_call}
  0x0000000104119d5d: hlt    
  0x0000000104119d5e: hlt    
  0x0000000104119d5f: hlt    
[Stub Code]
  0x0000000104119d60: nop                       ;   {no_reloc}
  0x0000000104119d61: nop
  0x0000000104119d62: nop
  0x0000000104119d63: nop
  0x0000000104119d64: nop
  0x0000000104119d65: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000104119d6f: jmpq   0x0000000104119d6f  ;   {runtime_call}
[Exception Handler]
  0x0000000104119d74: callq  0x0000000104100420  ;   {runtime_call}
  0x0000000104119d79: mov    %rsp,-0x28(%rsp)
  0x0000000104119d7e: sub    $0x80,%rsp
  0x0000000104119d85: mov    %rax,0x78(%rsp)
  0x0000000104119d8a: mov    %rcx,0x70(%rsp)
  0x0000000104119d8f: mov    %rdx,0x68(%rsp)
  0x0000000104119d94: mov    %rbx,0x60(%rsp)
  0x0000000104119d99: mov    %rbp,0x50(%rsp)
  0x0000000104119d9e: mov    %rsi,0x48(%rsp)
  0x0000000104119da3: mov    %rdi,0x40(%rsp)
  0x0000000104119da8: mov    %r8,0x38(%rsp)
  0x0000000104119dad: mov    %r9,0x30(%rsp)
  0x0000000104119db2: mov    %r10,0x28(%rsp)
  0x0000000104119db7: mov    %r11,0x20(%rsp)
  0x0000000104119dbc: mov    %r12,0x18(%rsp)
  0x0000000104119dc1: mov    %r13,0x10(%rsp)
  0x0000000104119dc6: mov    %r14,0x8(%rsp)
  0x0000000104119dcb: mov    %r15,(%rsp)
  0x0000000104119dcf: movabs $0x100641684,%rdi  ;   {external_word}
  0x0000000104119dd9: movabs $0x104119d79,%rsi  ;   {internal_word}
  0x0000000104119de3: mov    %rsp,%rdx
  0x0000000104119de6: and    $0xfffffffffffffff0,%rsp
  0x0000000104119dea: callq  0x000000010046a1f6  ;   {runtime_call}
  0x0000000104119def: hlt    
[Deopt Handler Code]
  0x0000000104119df0: movabs $0x104119df0,%r10  ;   {section_word}
  0x0000000104119dfa: push   %r10
  0x0000000104119dfc: jmpq   0x0000000104047500  ;   {runtime_call}
  0x0000000104119e01: hlt    
  0x0000000104119e02: hlt    
  0x0000000104119e03: hlt    
  0x0000000104119e04: hlt    
  0x0000000104119e05: hlt    
  0x0000000104119e06: hlt    
  0x0000000104119e07: hlt    
<nmethod compile_id='28' compiler='C1' level='3' entry='0x0000000104119bc0' size='1176' address='0x0000000104119a50' relocation_offset='296' insts_offset='368' stub_offset='784' scopes_data_offset='960' scopes_pcs_offset='1008' dependencies_offset='1152' nul_chk_table_offset='1160' method='java/util/HashMap hash (Ljava/lang/Object;)I' bytes='20' count='1467' iicount='1467' stamp='0.639'/>
Decoding compiled method 0x0000000104119750:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000001174eec90} &apos;getKey&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/HashMap$Node&apos;
  #           [sp+0x40]  (sp of caller)
  0x00000001041198a0: mov    0x8(%rsi),%r10d
  0x00000001041198a4: shl    $0x3,%r10
  0x00000001041198a8: cmp    %rax,%r10
  0x00000001041198ab: jne    0x0000000104045e60  ;   {runtime_call}
  0x00000001041198b1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000001041198bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000001041198c0: mov    %eax,-0x14000(%rsp)
  0x00000001041198c7: push   %rbp
  0x00000001041198c8: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.util.HashMap$Node::getKey@0 (line 292)

  0x00000001041198cc: mov    0x10(%rsi),%eax
  0x00000001041198cf: shl    $0x3,%rax          ;*getfield key
                                                ; - java.util.HashMap$Node::getKey@1 (line 292)

  0x00000001041198d3: add    $0x30,%rsp
  0x00000001041198d7: pop    %rbp
  0x00000001041198d8: test   %eax,-0x30b97de(%rip)        # 0x0000000101060100
                                                ;   {poll_return}
  0x00000001041198de: retq   
  0x00000001041198df: nop
  0x00000001041198e0: nop
  0x00000001041198e1: mov    0x2a8(%r15),%rax
  0x00000001041198e8: movabs $0x0,%r10
  0x00000001041198f2: mov    %r10,0x2a8(%r15)
  0x00000001041198f9: movabs $0x0,%r10
  0x0000000104119903: mov    %r10,0x2b0(%r15)
  0x000000010411990a: add    $0x30,%rsp
  0x000000010411990e: pop    %rbp
  0x000000010411990f: jmpq   0x0000000104072c60  ;   {runtime_call}
  0x0000000104119914: hlt    
  0x0000000104119915: hlt    
  0x0000000104119916: hlt    
  0x0000000104119917: hlt    
  0x0000000104119918: hlt    
  0x0000000104119919: hlt    
  0x000000010411991a: hlt    
  0x000000010411991b: hlt    
  0x000000010411991c: hlt    
  0x000000010411991d: hlt    
  0x000000010411991e: hlt    
  0x000000010411991f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000104119920: callq  0x0000000104100420  ;   {no_reloc}
  0x0000000104119925: mov    %rsp,-0x28(%rsp)
  0x000000010411992a: sub    $0x80,%rsp
  0x0000000104119931: mov    %rax,0x78(%rsp)
  0x0000000104119936: mov    %rcx,0x70(%rsp)
  0x000000010411993b: mov    %rdx,0x68(%rsp)
  0x0000000104119940: mov    %rbx,0x60(%rsp)
  0x0000000104119945: mov    %rbp,0x50(%rsp)
  0x000000010411994a: mov    %rsi,0x48(%rsp)
  0x000000010411994f: mov    %rdi,0x40(%rsp)
  0x0000000104119954: mov    %r8,0x38(%rsp)
  0x0000000104119959: mov    %r9,0x30(%rsp)
  0x000000010411995e: mov    %r10,0x28(%rsp)
  0x0000000104119963: mov    %r11,0x20(%rsp)
  0x0000000104119968: mov    %r12,0x18(%rsp)
  0x000000010411996d: mov    %r13,0x10(%rsp)
  0x0000000104119972: mov    %r14,0x8(%rsp)
  0x0000000104119977: mov    %r15,(%rsp)
  0x000000010411997b: movabs $0x100641684,%rdi  ;   {external_word}
  0x0000000104119985: movabs $0x104119925,%rsi  ;   {internal_word}
  0x000000010411998f: mov    %rsp,%rdx
  0x0000000104119992: and    $0xfffffffffffffff0,%rsp
  0x0000000104119996: callq  0x000000010046a1f6  ;   {runtime_call}
  0x000000010411999b: hlt    
[Deopt Handler Code]
  0x000000010411999c: movabs $0x10411999c,%r10  ;   {section_word}
  0x00000001041199a6: push   %r10
  0x00000001041199a8: jmpq   0x0000000104047500  ;   {runtime_call}
  0x00000001041199ad: hlt    
  0x00000001041199ae: hlt    
  0x00000001041199af: hlt    
<nmethod compile_id='24' compiler='C1' level='1' entry='0x00000001041198a0' size='704' address='0x0000000104119750' relocation_offset='296' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' method='java/util/HashMap$Node getKey ()Ljava/lang/Object;' bytes='5' count='141' iicount='141' stamp='0.640'/>
<writer thread='3075'/>
[Loaded java.lang.Void from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
<task_queued compile_id='33' method='java/lang/String indexOf (II)I' bytes='70' count='1872' backedge_count='109506' iicount='1872' stamp='0.641' comment='tiered' hot_count='1872'/>
<task_queued compile_id='34' method='jdk/VolatileTest add (II)I' bytes='17' count='256' iicount='256' level='3' stamp='0.643' comment='tiered' hot_count='256'/>
<writer thread='17155'/>
Decoding compiled method 0x0000000104117750:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000117802c70} &apos;add&apos; &apos;(II)I&apos; in &apos;jdk/VolatileTest&apos;
  # this:     rsi:rsi   = &apos;jdk/VolatileTest&apos;
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  #           [sp+0x50]  (sp of caller)
  0x00000001041178a0: mov    0x8(%rsi),%r10d
  0x00000001041178a4: shl    $0x3,%r10
  0x00000001041178a8: cmp    %rax,%r10
  0x00000001041178ab: jne    0x0000000104045e60  ;   {runtime_call}
  0x00000001041178b1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000001041178bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000001041178c0: mov    %eax,-0x14000(%rsp)
  0x00000001041178c7: push   %rbp
  0x00000001041178c8: sub    $0x40,%rsp
  0x00000001041178cc: movabs $0x117803088,%rax  ;   {metadata(method data for {method} {0x0000000117802c70} &apos;add&apos; &apos;(II)I&apos; in &apos;jdk/VolatileTest&apos;)}
  0x00000001041178d6: mov    0xdc(%rax),%edi
  0x00000001041178dc: add    $0x8,%edi
  0x00000001041178df: mov    %edi,0xdc(%rax)
  0x00000001041178e5: movabs $0x117802c70,%rax  ;   {metadata({method} {0x0000000117802c70} &apos;add&apos; &apos;(II)I&apos; in &apos;jdk/VolatileTest&apos;)}
  0x00000001041178ef: and    $0x1ff8,%edi
  0x00000001041178f5: cmp    $0x0,%edi
  0x00000001041178f8: je     0x0000000104117934  ;*iload_1
                                                ; - jdk.VolatileTest::add@0 (line 9)

  0x00000001041178fe: add    %ecx,%edx
  0x0000000104117900: vmovsd 0x10(%rsi),%xmm0
  0x0000000104117905: vmovq  %xmm0,%rax         ;*getfield sum
                                                ; - jdk.VolatileTest::add@6 (line 10)

  0x000000010411790a: movslq %edx,%rdi
  0x000000010411790d: add    %rdi,%rax
  0x0000000104117910: mov    %rax,0x30(%rsp)
  0x0000000104117915: vmovsd 0x30(%rsp),%xmm0
  0x000000010411791b: vmovsd %xmm0,0x10(%rsi)
  0x0000000104117920: lock addl $0x0,(%rsp)     ;*putfield sum
                                                ; - jdk.VolatileTest::add@12 (line 10)

  0x0000000104117925: mov    %rdx,%rax
  0x0000000104117928: add    $0x40,%rsp
  0x000000010411792c: pop    %rbp
  0x000000010411792d: test   %eax,-0x30b7833(%rip)        # 0x0000000101060100
                                                ;   {poll_return}
  0x0000000104117933: retq   
  0x0000000104117934: mov    %rax,0x8(%rsp)
  0x0000000104117939: movq   $0xffffffffffffffff,(%rsp)
  0x0000000104117941: callq  0x0000000104102d20  ; OopMap{rsi=Oop off=166}
                                                ;*synchronization entry
                                                ; - jdk.VolatileTest::add@-1 (line 9)
                                                ;   {runtime_call}
  0x0000000104117946: jmp    0x00000001041178fe
  0x0000000104117948: nop
  0x0000000104117949: nop
  0x000000010411794a: mov    0x2a8(%r15),%rax
  0x0000000104117951: movabs $0x0,%r10
  0x000000010411795b: mov    %r10,0x2a8(%r15)
  0x0000000104117962: movabs $0x0,%r10
  0x000000010411796c: mov    %r10,0x2b0(%r15)
  0x0000000104117973: add    $0x40,%rsp
  0x0000000104117977: pop    %rbp
  0x0000000104117978: jmpq   0x0000000104072c60  ;   {runtime_call}
  0x000000010411797d: hlt    
  0x000000010411797e: hlt    
  0x000000010411797f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000104117980: callq  0x0000000104100420  ;   {no_reloc}
  0x0000000104117985: mov    %rsp,-0x28(%rsp)
  0x000000010411798a: sub    $0x80,%rsp
  0x0000000104117991: mov    %rax,0x78(%rsp)
  0x0000000104117996: mov    %rcx,0x70(%rsp)
  0x000000010411799b: mov    %rdx,0x68(%rsp)
  0x00000001041179a0: mov    %rbx,0x60(%rsp)
  0x00000001041179a5: mov    %rbp,0x50(%rsp)
  0x00000001041179aa: mov    %rsi,0x48(%rsp)
  0x00000001041179af: mov    %rdi,0x40(%rsp)
  0x00000001041179b4: mov    %r8,0x38(%rsp)
  0x00000001041179b9: mov    %r9,0x30(%rsp)
  0x00000001041179be: mov    %r10,0x28(%rsp)
  0x00000001041179c3: mov    %r11,0x20(%rsp)
  0x00000001041179c8: mov    %r12,0x18(%rsp)
  0x00000001041179cd: mov    %r13,0x10(%rsp)
  0x00000001041179d2: mov    %r14,0x8(%rsp)
  0x00000001041179d7: mov    %r15,(%rsp)
  0x00000001041179db: movabs $0x100641684,%rdi  ;   {external_word}
  0x00000001041179e5: movabs $0x104117985,%rsi  ;   {internal_word}
  0x00000001041179ef: mov    %rsp,%rdx
  0x00000001041179f2: and    $0xfffffffffffffff0,%rsp
  0x00000001041179f6: callq  0x000000010046a1f6  ;   {runtime_call}
  0x00000001041179fb: hlt    
[Deopt Handler Code]
  0x00000001041179fc: movabs $0x1041179fc,%r10  ;   {section_word}
  0x0000000104117a06: push   %r10
  0x0000000104117a08: jmpq   0x0000000104047500  ;   {runtime_call}
  0x0000000104117a0d: hlt    
  0x0000000104117a0e: hlt    
  0x0000000104117a0f: hlt    
<nmethod compile_id='34' compiler='C1' level='3' entry='0x00000001041178a0' size='864' address='0x0000000104117750' relocation_offset='296' insts_offset='336' stub_offset='560' scopes_data_offset='720' scopes_pcs_offset='760' dependencies_offset='856' oops_offset='704' method='jdk/VolatileTest add (II)I' bytes='17' count='29229' iicount='29235' stamp='0.646'/>
<writer thread='17667'/>
Decoding compiled method 0x000000010411b810:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000117405180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  #           [sp+0x40]  (sp of caller)
  0x000000010411b960: mov    0x8(%rsi),%r10d
  0x000000010411b964: shl    $0x3,%r10
  0x000000010411b968: cmp    %r10,%rax
  0x000000010411b96b: jne    0x0000000104045e60  ;   {runtime_call}
  0x000000010411b971: data16 xchg %ax,%ax
  0x000000010411b974: nopl   0x0(%rax,%rax,1)
  0x000000010411b97c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010411b980: mov    %eax,-0x14000(%rsp)
  0x000000010411b987: push   %rbp
  0x000000010411b988: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1546)

  0x000000010411b98c: mov    %rsi,%r10
  0x000000010411b98f: mov    0xc(%rsi),%r8d     ;*getfield value
                                                ; - java.lang.String::indexOf@1 (line 1546)

  0x000000010411b993: mov    0xc(%r12,%r8,8),%ebp  ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ; implicit exception: dispatches to 0x000000010411bb09
  0x000000010411b998: test   %ecx,%ecx
  0x000000010411b99a: jl     0x000000010411bad1  ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)

  0x000000010411b9a0: mov    $0xffffffff,%eax
  0x000000010411b9a5: cmp    %ebp,%ecx
  0x000000010411b9a7: jge    0x000000010411ba85  ;*if_icmplt
                                                ; - java.lang.String::indexOf@17 (line 1549)

  0x000000010411b9ad: cmp    $0x10000,%edx
  0x000000010411b9b3: jge    0x000000010411baed  ;*if_icmpge
                                                ; - java.lang.String::indexOf@25 (line 1554)

  0x000000010411b9b9: cmp    %ebp,%ecx
  0x000000010411b9bb: jae    0x000000010411bab5
  0x000000010411b9c1: mov    %ebp,%r10d
  0x000000010411b9c4: dec    %r10d
  0x000000010411b9c7: cmp    %ebp,%r10d
  0x000000010411b9ca: jae    0x000000010411bab5
  0x000000010411b9d0: lea    (%r12,%r8,8),%r9
  0x000000010411b9d4: mov    %ecx,%r11d
  0x000000010411b9d7: inc    %r11d              ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)

  0x000000010411b9da: movzwl 0x10(%r9,%rcx,2),%r8d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010411b9e0: cmp    %edx,%r8d
  0x000000010411b9e3: je     0x000000010411ba93  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010411b9e9: inc    %ecx               ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x000000010411b9eb: cmp    %r11d,%ecx
  0x000000010411b9ee: jl     0x000000010411b9da  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x000000010411b9f0: mov    %ebp,%r11d
  0x000000010411b9f3: add    $0xfffffff9,%r11d
  0x000000010411b9f7: mov    $0x80000000,%r8d
  0x000000010411b9fd: cmp    %r11d,%r10d
  0x000000010411ba00: cmovl  %r8d,%r11d
  0x000000010411ba04: cmp    %r11d,%ecx
  0x000000010411ba07: jge    0x000000010411ba6d
  0x000000010411ba09: nopl   0x0(%rax)          ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)

  0x000000010411ba10: movzwl 0x10(%r9,%rcx,2),%r10d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010411ba16: cmp    %edx,%r10d
  0x000000010411ba19: je     0x000000010411ba93  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010411ba1b: movslq %ecx,%r10
  0x000000010411ba1e: movzwl 0x12(%r9,%r10,2),%ebx  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010411ba24: cmp    %edx,%ebx
  0x000000010411ba26: je     0x000000010411ba91  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010411ba28: movzwl 0x14(%r9,%r10,2),%ebx  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010411ba2e: cmp    %edx,%ebx
  0x000000010411ba30: je     0x000000010411ba97  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010411ba32: movzwl 0x16(%r9,%r10,2),%ebx  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010411ba38: cmp    %edx,%ebx
  0x000000010411ba3a: je     0x000000010411ba9c  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010411ba3c: movzwl 0x18(%r9,%r10,2),%ebx  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010411ba42: cmp    %edx,%ebx
  0x000000010411ba44: je     0x000000010411baa1  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010411ba46: movzwl 0x1a(%r9,%r10,2),%ebx  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010411ba4c: cmp    %edx,%ebx
  0x000000010411ba4e: je     0x000000010411baa6  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010411ba50: movzwl 0x1c(%r9,%r10,2),%ebx  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010411ba56: cmp    %edx,%ebx
  0x000000010411ba58: je     0x000000010411baab  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010411ba5a: movzwl 0x1e(%r9,%r10,2),%r8d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010411ba60: cmp    %edx,%r8d
  0x000000010411ba63: je     0x000000010411bab0  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010411ba65: add    $0x8,%ecx          ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x000000010411ba68: cmp    %r11d,%ecx
  0x000000010411ba6b: jl     0x000000010411ba10  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x000000010411ba6d: cmp    %ebp,%ecx
  0x000000010411ba6f: jge    0x000000010411ba85
  0x000000010411ba71: data16 xchg %ax,%ax       ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)

  0x000000010411ba74: movzwl 0x10(%r9,%rcx,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010411ba7a: cmp    %edx,%r11d
  0x000000010411ba7d: je     0x000000010411ba93  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010411ba7f: inc    %ecx               ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x000000010411ba81: cmp    %ebp,%ecx
  0x000000010411ba83: jl     0x000000010411ba74  ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)

  0x000000010411ba85: add    $0x30,%rsp
  0x000000010411ba89: pop    %rbp
  0x000000010411ba8a: test   %eax,-0x30bba90(%rip)        # 0x0000000101060000
                                                ;   {poll_return}
  0x000000010411ba90: retq   
  0x000000010411ba91: inc    %ecx
  0x000000010411ba93: mov    %ecx,%eax
  0x000000010411ba95: jmp    0x000000010411ba85
  0x000000010411ba97: add    $0x2,%ecx
  0x000000010411ba9a: jmp    0x000000010411ba93
  0x000000010411ba9c: add    $0x3,%ecx
  0x000000010411ba9f: jmp    0x000000010411ba93
  0x000000010411baa1: add    $0x4,%ecx
  0x000000010411baa4: jmp    0x000000010411ba93
  0x000000010411baa6: add    $0x5,%ecx
  0x000000010411baa9: jmp    0x000000010411ba93
  0x000000010411baab: add    $0x6,%ecx
  0x000000010411baae: jmp    0x000000010411ba93
  0x000000010411bab0: add    $0x7,%ecx          ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x000000010411bab3: jmp    0x000000010411ba93
  0x000000010411bab5: mov    $0xffffff86,%esi
  0x000000010411baba: mov    %edx,(%rsp)
  0x000000010411babd: mov    %ecx,0x4(%rsp)
  0x000000010411bac1: mov    %r8d,0x8(%rsp)
  0x000000010411bac6: nop
  0x000000010411bac7: callq  0x00000001040456a0  ; OopMap{[8]=NarrowOop off=364}
                                                ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)
                                                ;   {runtime_call}
  0x000000010411bacc: callq  0x00000001004ed904  ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)
                                                ;   {runtime_call}
  0x000000010411bad1: mov    $0xffffff65,%esi
  0x000000010411bad6: mov    %edx,(%rsp)
  0x000000010411bad9: mov    %ecx,0x8(%rsp)
  0x000000010411badd: mov    %r10,0x10(%rsp)
  0x000000010411bae2: nop
  0x000000010411bae3: callq  0x00000001040456a0  ; OopMap{[16]=Oop off=392}
                                                ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)
                                                ;   {runtime_call}
  0x000000010411bae8: callq  0x00000001004ed904  ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)
                                                ;   {runtime_call}
  0x000000010411baed: mov    $0xffffff65,%esi
  0x000000010411baf2: mov    %ecx,0x4(%rsp)
  0x000000010411baf6: mov    %edx,0x8(%rsp)
  0x000000010411bafa: mov    %r10,0x10(%rsp)
  0x000000010411baff: callq  0x00000001040456a0  ; OopMap{[16]=Oop off=420}
                                                ;*if_icmpge
                                                ; - java.lang.String::indexOf@25 (line 1554)
                                                ;   {runtime_call}
  0x000000010411bb04: callq  0x00000001004ed904  ;*if_icmpge
                                                ; - java.lang.String::indexOf@25 (line 1554)
                                                ;   {runtime_call}
  0x000000010411bb09: mov    $0xfffffff6,%esi
  0x000000010411bb0e: nop
  0x000000010411bb0f: callq  0x00000001040456a0  ; OopMap{off=436}
                                                ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ;   {runtime_call}
  0x000000010411bb14: callq  0x00000001004ed904  ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ;   {runtime_call}
  0x000000010411bb19: hlt    
  0x000000010411bb1a: hlt    
  0x000000010411bb1b: hlt    
  0x000000010411bb1c: hlt    
  0x000000010411bb1d: hlt    
  0x000000010411bb1e: hlt    
  0x000000010411bb1f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010411bb20: jmpq   0x000000010406eda0  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010411bb25: callq  0x000000010411bb2a
  0x000000010411bb2a: subq   $0x5,(%rsp)
  0x000000010411bb2f: jmpq   0x0000000104047500  ;   {runtime_call}
  0x000000010411bb34: hlt    
  0x000000010411bb35: hlt    
  0x000000010411bb36: hlt    
  0x000000010411bb37: hlt    
<nmethod compile_id='33' compiler='C2' level='4' entry='0x000000010411b960' size='1736' address='0x000000010411b810' relocation_offset='296' insts_offset='336' stub_offset='784' scopes_data_offset='816' scopes_pcs_offset='976' dependencies_offset='1712' nul_chk_table_offset='1720' method='java/lang/String indexOf (II)I' bytes='70' count='1873' backedge_count='109526' iicount='1873' stamp='0.651'/>
<writer thread='3075'/>
<task_queued compile_id='35' method='jdk/VolatileTest add (II)I' bytes='17' count='30208' iicount='30208' stamp='0.651' comment='tiered' hot_count='30208'/>
<writer thread='17667'/>
Decoding compiled method 0x00000001041174d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000117802c70} &apos;add&apos; &apos;(II)I&apos; in &apos;jdk/VolatileTest&apos;
  # this:     rsi:rsi   = &apos;jdk/VolatileTest&apos;
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  #           [sp+0x20]  (sp of caller)
  0x0000000104117620: mov    0x8(%rsi),%r10d
  0x0000000104117624: shl    $0x3,%r10
  0x0000000104117628: cmp    %r10,%rax
  0x000000010411762b: jne    0x0000000104045e60  ;   {runtime_call}
  0x0000000104117631: data16 xchg %ax,%ax
  0x0000000104117634: nopl   0x0(%rax,%rax,1)
  0x000000010411763c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000104117640: sub    $0x18,%rsp
  0x0000000104117647: mov    %rbp,0x10(%rsp)    ;*synchronization entry
                                                ; - jdk.VolatileTest::add@-1 (line 9)

  0x000000010411764c: mov    0x10(%rsi),%r10    ;*putfield sum
                                                ; - jdk.VolatileTest::add@12 (line 10)

  0x0000000104117650: mov    %edx,%eax
  0x0000000104117652: add    %ecx,%eax          ;*iadd
                                                ; - jdk.VolatileTest::add@2 (line 9)

  0x0000000104117654: movslq %eax,%r11
  0x0000000104117657: add    %r10,%r11
  0x000000010411765a: mov    %r11,0x10(%rsi)
  0x000000010411765e: lock addl $0x0,(%rsp)     ;*putfield sum
                                                ; - jdk.VolatileTest::add@12 (line 10)

  0x0000000104117663: add    $0x10,%rsp
  0x0000000104117667: pop    %rbp
  0x0000000104117668: test   %eax,-0x30b766e(%rip)        # 0x0000000101060000
                                                ;   {poll_return}
  0x000000010411766e: retq   
  0x000000010411766f: hlt    
  0x0000000104117670: hlt    
  0x0000000104117671: hlt    
  0x0000000104117672: hlt    
  0x0000000104117673: hlt    
  0x0000000104117674: hlt    
  0x0000000104117675: hlt    
  0x0000000104117676: hlt    
  0x0000000104117677: hlt    
  0x0000000104117678: hlt    
  0x0000000104117679: hlt    
  0x000000010411767a: hlt    
  0x000000010411767b: hlt    
  0x000000010411767c: hlt    
  0x000000010411767d: hlt    
  0x000000010411767e: hlt    
  0x000000010411767f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000104117680: jmpq   0x000000010406eda0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000104117685: callq  0x000000010411768a
  0x000000010411768a: subq   $0x5,(%rsp)
  0x000000010411768f: jmpq   0x0000000104047500  ;   {runtime_call}
  0x0000000104117694: hlt    
  0x0000000104117695: hlt    
  0x0000000104117696: hlt    
  0x0000000104117697: hlt    
<nmethod compile_id='35' compiler='C2' level='4' entry='0x0000000104117620' size='600' address='0x00000001041174d0' relocation_offset='296' insts_offset='336' stub_offset='432' scopes_data_offset='472' scopes_pcs_offset='496' dependencies_offset='592' oops_offset='456' method='jdk/VolatileTest add (II)I' bytes='17' count='60416' iicount='60416' stamp='0.653'/>
<make_not_entrant thread='17667' compile_id='34' compiler='C1' level='3' stamp='0.653'/>
<writer thread='3075'/>
<task_queued compile_id='36' compile_kind='osr' method='jdk/VolatileTest main ([Ljava/lang/String;)V' bytes='106' count='1' backedge_count='60416' iicount='1' osr_bci='29' level='3' stamp='0.653' comment='tiered' hot_count='60416'/>
<writer thread='17155'/>
Decoding compiled method 0x000000010411bf10:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000117802dc8} &apos;main&apos; &apos;([Ljava/lang/String;)V&apos; in &apos;jdk/VolatileTest&apos;
  0x000000010411c220: mov    %eax,-0x14000(%rsp)
  0x000000010411c227: push   %rbp
  0x000000010411c228: sub    $0x110,%rsp
  0x000000010411c22f: movabs $0x1178031b8,%rax  ;   {metadata(method data for {method} {0x0000000117802dc8} &apos;main&apos; &apos;([Ljava/lang/String;)V&apos; in &apos;jdk/VolatileTest&apos;)}
  0x000000010411c239: mov    0xdc(%rax),%ebx
  0x000000010411c23f: add    $0x8,%ebx
  0x000000010411c242: mov    %ebx,0xdc(%rax)
  0x000000010411c248: movabs $0x117802dc8,%rax  ;   {metadata({method} {0x0000000117802dc8} &apos;main&apos; &apos;([Ljava/lang/String;)V&apos; in &apos;jdk/VolatileTest&apos;)}
  0x000000010411c252: and    $0x1ff8,%ebx
  0x000000010411c258: cmp    $0x0,%ebx
  0x000000010411c25b: je     0x000000010411d32f  ;*iconst_0
                                                ; - jdk.VolatileTest::main@0 (line 15)

  0x000000010411c261: movabs $0x795580c78,%rax  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x000000010411c26b: mov    0x6c(%rax),%r8d
  0x000000010411c26f: shl    $0x3,%r8           ;*getstatic out
                                                ; - jdk.VolatileTest::main@8 (line 17)

  0x000000010411c273: cmp    (%r8),%rax         ;*invokevirtual println
                                                ; - jdk.VolatileTest::main@12 (line 17)
                                                ; implicit exception: dispatches to 0x000000010411d346
  0x000000010411c276: mov    %r8,%rax
  0x000000010411c279: movabs $0x1178031b8,%rbx  ;   {metadata(method data for {method} {0x0000000117802dc8} &apos;main&apos; &apos;([Ljava/lang/String;)V&apos; in &apos;jdk/VolatileTest&apos;)}
  0x000000010411c283: movabs $0x7c0027950,%r10  ;   {metadata(&apos;java/io/PrintStream&apos;)}
  0x000000010411c28d: mov    %r10,0x110(%rbx)
  0x000000010411c294: addq   $0x1,0x118(%rbx)
  0x000000010411c29c: movabs $0x1176c1888,%rax  ;   {metadata(method data for {method} {0x0000000117547558} &apos;println&apos; &apos;(C)V&apos; in &apos;java/io/PrintStream&apos;)}
  0x000000010411c2a6: mov    0xdc(%rax),%ebx
  0x000000010411c2ac: add    $0x8,%ebx
  0x000000010411c2af: mov    %ebx,0xdc(%rax)
  0x000000010411c2b5: movabs $0x117547558,%rax  ;   {metadata({method} {0x0000000117547558} &apos;println&apos; &apos;(C)V&apos; in &apos;java/io/PrintStream&apos;)}
  0x000000010411c2bf: and    $0x7ffff8,%ebx
  0x000000010411c2c5: cmp    $0x0,%ebx
  0x000000010411c2c8: je     0x000000010411d34b
  0x000000010411c2ce: lea    0xf0(%rsp),%rbx
  0x000000010411c2d6: mov    %r8,0x8(%rbx)
  0x000000010411c2da: mov    (%r8),%rax
  0x000000010411c2dd: mov    %rax,%rdx
  0x000000010411c2e0: and    $0x7,%rdx
  0x000000010411c2e4: cmp    $0x5,%rdx
  0x000000010411c2e8: jne    0x000000010411c372
  0x000000010411c2ee: mov    0x8(%r8),%edx
  0x000000010411c2f2: shl    $0x3,%rdx
  0x000000010411c2f6: mov    0xa8(%rdx),%rdx
  0x000000010411c2fd: or     %r15,%rdx
  0x000000010411c300: xor    %rax,%rdx
  0x000000010411c303: and    $0xffffffffffffff87,%rdx
  0x000000010411c307: je     0x000000010411c39a
  0x000000010411c30d: test   $0x7,%rdx
  0x000000010411c314: jne    0x000000010411c35e
  0x000000010411c316: test   $0x300,%rdx
  0x000000010411c31d: jne    0x000000010411c33c
  0x000000010411c31f: and    $0x37f,%rax
  0x000000010411c326: mov    %rax,%rdx
  0x000000010411c329: or     %r15,%rdx
  0x000000010411c32c: lock cmpxchg %rdx,(%r8)
  0x000000010411c331: jne    0x000000010411d362
  0x000000010411c337: jmpq   0x000000010411c39a
  0x000000010411c33c: mov    0x8(%r8),%edx
  0x000000010411c340: shl    $0x3,%rdx
  0x000000010411c344: mov    0xa8(%rdx),%rdx
  0x000000010411c34b: or     %r15,%rdx
  0x000000010411c34e: lock cmpxchg %rdx,(%r8)
  0x000000010411c353: jne    0x000000010411d362
  0x000000010411c359: jmpq   0x000000010411c39a
  0x000000010411c35e: mov    0x8(%r8),%edx
  0x000000010411c362: shl    $0x3,%rdx
  0x000000010411c366: mov    0xa8(%rdx),%rdx
  0x000000010411c36d: lock cmpxchg %rdx,(%r8)
  0x000000010411c372: mov    (%r8),%rax
  0x000000010411c375: or     $0x1,%rax
  0x000000010411c379: mov    %rax,(%rbx)
  0x000000010411c37c: lock cmpxchg %rbx,(%r8)
  0x000000010411c381: je     0x000000010411c39a
  0x000000010411c387: sub    %rsp,%rax
  0x000000010411c38a: and    $0xfffffffffffff007,%rax
  0x000000010411c391: mov    %rax,(%rbx)
  0x000000010411c394: jne    0x000000010411d362  ;*monitorenter
                                                ; - java.io.PrintStream::println@3 (line 721)
                                                ; - jdk.VolatileTest::main@12 (line 17)

  0x000000010411c39a: mov    %r8,%rbx
  0x000000010411c39d: movabs $0x1176c1888,%rdx  ;   {metadata(method data for {method} {0x0000000117547558} &apos;println&apos; &apos;(C)V&apos; in &apos;java/io/PrintStream&apos;)}
  0x000000010411c3a7: movabs $0x7c0027950,%r10  ;   {metadata(&apos;java/io/PrintStream&apos;)}
  0x000000010411c3b1: mov    %r10,0x110(%rdx)
  0x000000010411c3b8: addq   $0x1,0x118(%rdx)
  0x000000010411c3c0: movabs $0x1176c1a30,%rbx  ;   {metadata(method data for {method} {0x0000000117546f10} &apos;print&apos; &apos;(C)V&apos; in &apos;java/io/PrintStream&apos;)}
  0x000000010411c3ca: mov    0xdc(%rbx),%edx
  0x000000010411c3d0: add    $0x8,%edx
  0x000000010411c3d3: mov    %edx,0xdc(%rbx)
  0x000000010411c3d9: movabs $0x117546f10,%rbx  ;   {metadata({method} {0x0000000117546f10} &apos;print&apos; &apos;(C)V&apos; in &apos;java/io/PrintStream&apos;)}
  0x000000010411c3e3: and    $0x7ffff8,%edx
  0x000000010411c3e9: cmp    $0x0,%edx
  0x000000010411c3ec: je     0x000000010411d375
  0x000000010411c3f2: movabs $0x1176c1a30,%rbx  ;   {metadata(method data for {method} {0x0000000117546f10} &apos;print&apos; &apos;(C)V&apos; in &apos;java/io/PrintStream&apos;)}
  0x000000010411c3fc: addq   $0x1,0x108(%rbx)
  0x000000010411c404: movabs $0x1176c1ba0,%rbx  ;   {metadata(method data for {method} {0x0000000117407468} &apos;valueOf&apos; &apos;(C)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000000010411c40e: mov    0xdc(%rbx),%edx
  0x000000010411c414: add    $0x8,%edx
  0x000000010411c417: mov    %edx,0xdc(%rbx)
  0x000000010411c41d: movabs $0x117407468,%rbx  ;   {metadata({method} {0x0000000117407468} &apos;valueOf&apos; &apos;(C)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000000010411c427: and    $0x7ffff8,%edx
  0x000000010411c42d: cmp    $0x0,%edx
  0x000000010411c430: je     0x000000010411d38c
  0x000000010411c436: mov    $0x1,%ebx
  0x000000010411c43b: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000000010411c445: movslq %ebx,%rbx
  0x000000010411c448: mov    %rbx,%rdi
  0x000000010411c44b: cmp    $0xffffff,%rbx
  0x000000010411c452: ja     0x000000010411d3a3
  0x000000010411c458: movabs $0x17,%rsi
  0x000000010411c462: lea    (%rsi,%rbx,2),%rsi
  0x000000010411c466: and    $0xfffffffffffffff8,%rsi
  0x000000010411c46a: mov    0x60(%r15),%rax
  0x000000010411c46e: lea    (%rax,%rsi,1),%rsi
  0x000000010411c472: cmp    0x70(%r15),%rsi
  0x000000010411c476: ja     0x000000010411d3a3
  0x000000010411c47c: mov    %rsi,0x60(%r15)
  0x000000010411c480: sub    %rax,%rsi
  0x000000010411c483: movq   $0x1,(%rax)
  0x000000010411c48a: mov    %rdx,%rcx
  0x000000010411c48d: shr    $0x3,%rcx
  0x000000010411c491: mov    %ecx,0x8(%rax)
  0x000000010411c494: mov    %ebx,0xc(%rax)
  0x000000010411c497: sub    $0x10,%rsi
  0x000000010411c49b: je     0x000000010411c4b2
  0x000000010411c4a1: xor    %rbx,%rbx
  0x000000010411c4a4: shr    $0x3,%rsi
  0x000000010411c4a8: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000010411c4ad: dec    %rsi
  0x000000010411c4b0: jne    0x000000010411c4a8
  0x000000010411c4b2: mov    %rax,%rbx          ;*newarray
                                                ; - java.lang.String::valueOf@1 (line 3084)
                                                ; - java.io.PrintStream::print@2 (line 583)
                                                ; - java.io.PrintStream::println@6 (line 722)
                                                ; - jdk.VolatileTest::main@12 (line 17)

  0x000000010411c4b5: mov    $0x31,%edx
  0x000000010411c4ba: mov    %dx,0x10(%rbx)     ;*castore
                                                ; - java.lang.String::valueOf@6 (line 3084)
                                                ; - java.io.PrintStream::print@2 (line 583)
                                                ; - java.io.PrintStream::println@6 (line 722)
                                                ; - jdk.VolatileTest::main@12 (line 17)

  0x000000010411c4be: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000010411c4c8: mov    0x60(%r15),%rax
  0x000000010411c4cc: lea    0x18(%rax),%rdi
  0x000000010411c4d0: cmp    0x70(%r15),%rdi
  0x000000010411c4d4: ja     0x000000010411d3ad
  0x000000010411c4da: mov    %rdi,0x60(%r15)
  0x000000010411c4de: mov    0xa8(%rdx),%rcx
  0x000000010411c4e5: mov    %rcx,(%rax)
  0x000000010411c4e8: mov    %rdx,%rcx
  0x000000010411c4eb: shr    $0x3,%rcx
  0x000000010411c4ef: mov    %ecx,0x8(%rax)
  0x000000010411c4f2: xor    %rcx,%rcx
  0x000000010411c4f5: mov    %ecx,0xc(%rax)
  0x000000010411c4f8: xor    %rcx,%rcx
  0x000000010411c4fb: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.String::valueOf@8 (line 3085)
                                                ; - java.io.PrintStream::print@2 (line 583)
                                                ; - java.io.PrintStream::println@6 (line 722)
                                                ; - jdk.VolatileTest::main@12 (line 17)

  0x000000010411c4ff: mov    %rax,%rdx
  0x000000010411c502: movabs $0x1176c1ba0,%rsi  ;   {metadata(method data for {method} {0x0000000117407468} &apos;valueOf&apos; &apos;(C)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x000000010411c50c: addq   $0x1,0x108(%rsi)
  0x000000010411c514: movabs $0x1176c1cd0,%rdx  ;   {metadata(method data for {method} {0x0000000117403bc8} &apos;&lt;init&gt;&apos; &apos;([CZ)V&apos; in &apos;java/lang/String&apos;)}
  0x000000010411c51e: mov    0xdc(%rdx),%esi
  0x000000010411c524: add    $0x8,%esi
  0x000000010411c527: mov    %esi,0xdc(%rdx)
  0x000000010411c52d: movabs $0x117403bc8,%rdx  ;   {metadata({method} {0x0000000117403bc8} &apos;&lt;init&gt;&apos; &apos;([CZ)V&apos; in &apos;java/lang/String&apos;)}
  0x000000010411c537: and    $0x7ffff8,%esi
  0x000000010411c53d: cmp    $0x0,%esi
  0x000000010411c540: je     0x000000010411d3ba
  0x000000010411c546: mov    %rax,%rdx
  0x000000010411c549: movabs $0x1176c1cd0,%rsi  ;   {metadata(method data for {method} {0x0000000117403bc8} &apos;&lt;init&gt;&apos; &apos;([CZ)V&apos; in &apos;java/lang/String&apos;)}
  0x000000010411c553: addq   $0x1,0x108(%rsi)
  0x000000010411c55b: movabs $0x117577a10,%rdx  ;   {metadata(method data for {method} {0x0000000117400480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000010411c565: mov    0xdc(%rdx),%esi
  0x000000010411c56b: add    $0x8,%esi
  0x000000010411c56e: mov    %esi,0xdc(%rdx)
  0x000000010411c574: movabs $0x117400480,%rdx  ;   {metadata({method} {0x0000000117400480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000010411c57e: and    $0x7ffff8,%esi
  0x000000010411c584: cmp    $0x0,%esi
  0x000000010411c587: je     0x000000010411d3d1
  0x000000010411c58d: mov    %rbx,%r10
  0x000000010411c590: shr    $0x3,%r10
  0x000000010411c594: mov    %r10d,0xc(%rax)
  0x000000010411c598: mov    %rax,%rdx
  0x000000010411c59b: shr    $0x9,%rdx
  0x000000010411c59f: movabs $0xfda96000,%rsi
  0x000000010411c5a9: movb   $0x0,(%rdx,%rsi,1)  ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@6 (line 611)
                                                ; - java.lang.String::valueOf@14 (line 3085)
                                                ; - java.io.PrintStream::print@2 (line 583)
                                                ; - java.io.PrintStream::println@6 (line 722)
                                                ; - jdk.VolatileTest::main@12 (line 17)

  0x000000010411c5ad: mov    %r8,%rdx
  0x000000010411c5b0: movabs $0x1176c1a30,%rsi  ;   {metadata(method data for {method} {0x0000000117546f10} &apos;print&apos; &apos;(C)V&apos; in &apos;java/io/PrintStream&apos;)}
  0x000000010411c5ba: addq   $0x1,0x118(%rsi)
  0x000000010411c5c2: mov    %rax,%rdx
  0x000000010411c5c5: mov    %r8,%rsi           ;*invokespecial write
                                                ; - java.io.PrintStream::print@5 (line 583)
                                                ; - java.io.PrintStream::println@6 (line 722)
                                                ; - jdk.VolatileTest::main@12 (line 17)

  0x000000010411c5c8: mov    %r8,0xa0(%rsp)
  0x000000010411c5d0: nop
  0x000000010411c5d1: nop
  0x000000010411c5d2: nop
  0x000000010411c5d3: nop
  0x000000010411c5d4: nop
  0x000000010411c5d5: nop
  0x000000010411c5d6: nop
  0x000000010411c5d7: callq  0x00000001040460a0  ; OopMap{[160]=Oop [248]=Oop off=956}
                                                ;*invokespecial write
                                                ; - java.io.PrintStream::print@5 (line 583)
                                                ; - java.io.PrintStream::println@6 (line 722)
                                                ; - jdk.VolatileTest::main@12 (line 17)
                                                ;   {optimized virtual_call}
  0x000000010411c5dc: mov    0xa0(%rsp),%r8
  0x000000010411c5e4: movabs $0x1176c1888,%rsi  ;   {metadata(method data for {method} {0x0000000117547558} &apos;println&apos; &apos;(C)V&apos; in &apos;java/io/PrintStream&apos;)}
  0x000000010411c5ee: addq   $0x1,0x138(%rsi)
  0x000000010411c5f6: mov    0xa0(%rsp),%rsi    ;*invokespecial newLine
                                                ; - java.io.PrintStream::println@10 (line 723)
                                                ; - jdk.VolatileTest::main@12 (line 17)

  0x000000010411c5fe: nop
  0x000000010411c5ff: callq  0x00000001040460a0  ; OopMap{[160]=Oop [248]=Oop off=996}
                                                ;*invokespecial newLine
                                                ; - java.io.PrintStream::println@10 (line 723)
                                                ; - jdk.VolatileTest::main@12 (line 17)
                                                ;   {optimized virtual_call}
  0x000000010411c604: lea    0xf0(%rsp),%rax
  0x000000010411c60c: mov    0x8(%rax),%rsi
  0x000000010411c610: mov    (%rsi),%rdx
  0x000000010411c613: and    $0x7,%rdx
  0x000000010411c617: cmp    $0x5,%rdx
  0x000000010411c61b: je     0x000000010411c638
  0x000000010411c621: mov    (%rax),%rdx
  0x000000010411c624: test   %rdx,%rdx
  0x000000010411c627: je     0x000000010411c638
  0x000000010411c62d: lock cmpxchg %rdx,(%rsi)
  0x000000010411c632: jne    0x000000010411d3e8  ;*monitorexit
                                                ; - java.io.PrintStream::println@14 (line 724)
                                                ; - jdk.VolatileTest::main@12 (line 17)

  0x000000010411c638: movabs $0x1176c1888,%rdx  ;   {metadata(method data for {method} {0x0000000117547558} &apos;println&apos; &apos;(C)V&apos; in &apos;java/io/PrintStream&apos;)}
  0x000000010411c642: incl   0x148(%rdx)        ;*goto
                                                ; - java.io.PrintStream::println@15 (line 724)
                                                ; - jdk.VolatileTest::main@12 (line 17)

  0x000000010411c648: movabs $0x7c0060828,%rdx  ;   {metadata(&apos;jdk/VolatileTest&apos;)}
  0x000000010411c652: mov    0x60(%r15),%rax
  0x000000010411c656: lea    0x18(%rax),%rdi
  0x000000010411c65a: cmp    0x70(%r15),%rdi
  0x000000010411c65e: ja     0x000000010411d3fe
  0x000000010411c664: mov    %rdi,0x60(%r15)
  0x000000010411c668: mov    0xa8(%rdx),%rcx
  0x000000010411c66f: mov    %rcx,(%rax)
  0x000000010411c672: mov    %rdx,%rcx
  0x000000010411c675: shr    $0x3,%rcx
  0x000000010411c679: mov    %ecx,0x8(%rax)
  0x000000010411c67c: xor    %rcx,%rcx
  0x000000010411c67f: mov    %ecx,0xc(%rax)
  0x000000010411c682: xor    %rcx,%rcx
  0x000000010411c685: mov    %rcx,0x10(%rax)    ;*new  ; - jdk.VolatileTest::main@15 (line 18)

  0x000000010411c689: mov    %rax,%rsi
  0x000000010411c68c: movabs $0x1178031b8,%rdi  ;   {metadata(method data for {method} {0x0000000117802dc8} &apos;main&apos; &apos;([Ljava/lang/String;)V&apos; in &apos;jdk/VolatileTest&apos;)}
  0x000000010411c696: addq   $0x1,0x138(%rdi)
  0x000000010411c69e: movabs $0x117803548,%rsi  ;   {metadata(method data for {method} {0x0000000117802b90} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;jdk/VolatileTest&apos;)}
  0x000000010411c6a8: mov    0xdc(%rsi),%edi
  0x000000010411c6ae: add    $0x8,%edi
  0x000000010411c6b1: mov    %edi,0xdc(%rsi)
  0x000000010411c6b7: movabs $0x117802b90,%rsi  ;   {metadata({method} {0x0000000117802b90} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;jdk/VolatileTest&apos;)}
  0x000000010411c6c1: and    $0x7ffff8,%edi
  0x000000010411c6c7: cmp    $0x0,%edi
  0x000000010411c6ca: je     0x000000010411d40b
  0x000000010411c6d0: mov    %rax,%rsi
  0x000000010411c6d3: movabs $0x117803548,%rdi  ;   {metadata(method data for {method} {0x0000000117802b90} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;jdk/VolatileTest&apos;)}
  0x000000010411c6dd: addq   $0x1,0x108(%rdi)
  0x000000010411c6e5: movabs $0x117577a10,%rsi  ;   {metadata(method data for {method} {0x0000000117400480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000010411c6ef: mov    0xdc(%rsi),%edi
  0x000000010411c6f5: add    $0x8,%edi
  0x000000010411c6f8: mov    %edi,0xdc(%rsi)
  0x000000010411c6fe: movabs $0x117400480,%rsi  ;   {metadata({method} {0x0000000117400480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000010411c708: and    $0x7ffff8,%edi
  0x000000010411c70e: cmp    $0x0,%edi
  0x000000010411c711: je     0x000000010411d422
  0x000000010411c717: mov    $0x0,%esi
  0x000000010411c71c: mov    $0x0,%edi
  0x000000010411c721: jmpq   0x000000010411c7fa  ;*iload
                                                ; - jdk.VolatileTest::main@29 (line 22)

  0x000000010411c726: xchg   %ax,%ax
  0x000000010411c728: cmp    (%rax),%rax        ;*invokevirtual add
                                                ; - jdk.VolatileTest::main@40 (line 23)
                                                ; implicit exception: dispatches to 0x000000010411d439
  0x000000010411c72b: mov    %rax,%rdx
  0x000000010411c72e: movabs $0x1178031b8,%rbx  ;   {metadata(method data for {method} {0x0000000117802dc8} &apos;main&apos; &apos;([Ljava/lang/String;)V&apos; in &apos;jdk/VolatileTest&apos;)}
  0x000000010411c738: movabs $0x7c0060828,%r10  ;   {metadata(&apos;jdk/VolatileTest&apos;)}
  0x000000010411c742: mov    %r10,0x170(%rbx)
  0x000000010411c749: addq   $0x1,0x178(%rbx)
  0x000000010411c751: movabs $0x117803088,%rdx  ;   {metadata(method data for {method} {0x0000000117802c70} &apos;add&apos; &apos;(II)I&apos; in &apos;jdk/VolatileTest&apos;)}
  0x000000010411c75b: mov    0xdc(%rdx),%ebx
  0x000000010411c761: add    $0x8,%ebx
  0x000000010411c764: mov    %ebx,0xdc(%rdx)
  0x000000010411c76a: movabs $0x117802c70,%rdx  ;   {metadata({method} {0x0000000117802c70} &apos;add&apos; &apos;(II)I&apos; in &apos;jdk/VolatileTest&apos;)}
  0x000000010411c774: and    $0x7ffff8,%ebx
  0x000000010411c77a: cmp    $0x0,%ebx
  0x000000010411c77d: je     0x000000010411d43e
  0x000000010411c783: inc    %edi
  0x000000010411c785: vmovsd 0x10(%rax),%xmm0
  0x000000010411c78a: vmovq  %xmm0,%rdx         ;*getfield sum
                                                ; - jdk.VolatileTest::add@6 (line 10)
                                                ; - jdk.VolatileTest::main@40 (line 23)

  0x000000010411c78f: movslq %edi,%rbx
  0x000000010411c792: add    %rbx,%rdx
  0x000000010411c795: mov    %rdx,0xb8(%rsp)
  0x000000010411c79d: vmovsd 0xb8(%rsp),%xmm0
  0x000000010411c7a6: vmovsd %xmm0,0x10(%rax)
  0x000000010411c7ab: lock addl $0x0,(%rsp)     ;*putfield sum
                                                ; - jdk.VolatileTest::add@12 (line 10)
                                                ; - jdk.VolatileTest::main@40 (line 23)

  0x000000010411c7b0: inc    %esi
  0x000000010411c7b2: movabs $0x1178031b8,%rdx  ;   {metadata(method data for {method} {0x0000000117802dc8} &apos;main&apos; &apos;([Ljava/lang/String;)V&apos; in &apos;jdk/VolatileTest&apos;)}
  0x000000010411c7bc: mov    0xe0(%rdx),%ebx
  0x000000010411c7c2: add    $0x8,%ebx
  0x000000010411c7c5: mov    %ebx,0xe0(%rdx)
  0x000000010411c7cb: movabs $0x117802dc8,%rdx  ;   {metadata({method} {0x0000000117802dc8} &apos;main&apos; &apos;([Ljava/lang/String;)V&apos; in &apos;jdk/VolatileTest&apos;)}
  0x000000010411c7d5: and    $0xfff8,%ebx
  0x000000010411c7db: cmp    $0x0,%ebx
  0x000000010411c7de: je     0x000000010411d455  ; OopMap{rax=Oop off=1476}
                                                ;*goto
                                                ; - jdk.VolatileTest::main@48 (line 22)

  0x000000010411c7e4: test   %eax,-0x30bc6ea(%rip)        # 0x0000000101060100
                                                ;   {poll}
  0x000000010411c7ea: movabs $0x1178031b8,%rdx  ;   {metadata(method data for {method} {0x0000000117802dc8} &apos;main&apos; &apos;([Ljava/lang/String;)V&apos; in &apos;jdk/VolatileTest&apos;)}
  0x000000010411c7f4: incl   0x198(%rdx)        ;*goto
                                                ; - jdk.VolatileTest::main@48 (line 22)

  0x000000010411c7fa: cmp    $0xf4240,%esi
  0x000000010411c800: movabs $0x1178031b8,%rdx  ;   {metadata(method data for {method} {0x0000000117802dc8} &apos;main&apos; &apos;([Ljava/lang/String;)V&apos; in &apos;jdk/VolatileTest&apos;)}
  0x000000010411c80a: movabs $0x148,%rbx
  0x000000010411c814: jge    0x000000010411c824
  0x000000010411c81a: movabs $0x158,%rbx
  0x000000010411c824: mov    (%rdx,%rbx,1),%rcx
  0x000000010411c828: lea    0x1(%rcx),%rcx
  0x000000010411c82c: mov    %rcx,(%rdx,%rbx,1)
  0x000000010411c830: jl     0x000000010411c728  ;*if_icmpge
                                                ; - jdk.VolatileTest::main@33 (line 22)

  0x000000010411c836: mov    %edi,0xc8(%rsp)
  0x000000010411c83d: mov    %rax,0xd8(%rsp)
  0x000000010411c845: movabs $0x795580c78,%rdx  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x000000010411c84f: mov    0x6c(%rdx),%ebx
  0x000000010411c852: shl    $0x3,%rbx          ;*getstatic out
                                                ; - jdk.VolatileTest::main@51 (line 26)

  0x000000010411c856: mov    %rbx,0xd0(%rsp)
  0x000000010411c85e: xchg   %ax,%ax
  0x000000010411c860: jmpq   0x000000010411d47b  ;   {no_reloc}
  0x000000010411c865: add    %al,(%rax)
  0x000000010411c867: add    %al,(%rax)
  0x000000010411c869: add    %ch,%cl
  0x000000010411c86b: (bad)  
  0x000000010411c86c: or     $0x0,%al
  0x000000010411c86e: add    %cl,-0x75(%rax)    ;*new  ; - jdk.VolatileTest::main@54 (line 26)

  0x000000010411c871: lock movabs $0x1178031b8,%rdx  ;   {metadata(method data for {method} {0x0000000117802dc8} &apos;main&apos; &apos;([Ljava/lang/String;)V&apos; in &apos;jdk/VolatileTest&apos;)}
  0x000000010411c87c: addq   $0x1,0x1b0(%rdx)
  0x000000010411c884: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - jdk.VolatileTest::main@58 (line 26)

  0x000000010411c887: mov    %rax,0xc0(%rsp)
  0x000000010411c88f: callq  0x00000001040460a0  ; OopMap{[192]=Oop [216]=Oop [208]=Oop off=1652}
                                                ;*invokespecial &lt;init&gt;
                                                ; - jdk.VolatileTest::main@58 (line 26)
                                                ;   {optimized virtual_call}
  0x000000010411c894: mov    0xc0(%rsp),%rax
  0x000000010411c89c: movabs $0x1178031b8,%rdx  ;   {metadata(method data for {method} {0x0000000117802dc8} &apos;main&apos; &apos;([Ljava/lang/String;)V&apos; in &apos;jdk/VolatileTest&apos;)}
  0x000000010411c8a6: mov    0x8(%rax),%eax
  0x000000010411c8a9: shl    $0x3,%rax
  0x000000010411c8ad: cmp    0x1c8(%rdx),%rax
  0x000000010411c8b4: jne    0x000000010411c8c3
  0x000000010411c8b6: addq   $0x1,0x1d0(%rdx)
  0x000000010411c8be: jmpq   0x000000010411c929
  0x000000010411c8c3: cmp    0x1d8(%rdx),%rax
  0x000000010411c8ca: jne    0x000000010411c8d9
  0x000000010411c8cc: addq   $0x1,0x1e0(%rdx)
  0x000000010411c8d4: jmpq   0x000000010411c929
  0x000000010411c8d9: cmpq   $0x0,0x1c8(%rdx)
  0x000000010411c8e4: jne    0x000000010411c8fd
  0x000000010411c8e6: mov    %rax,0x1c8(%rdx)
  0x000000010411c8ed: movq   $0x1,0x1d0(%rdx)
  0x000000010411c8f8: jmpq   0x000000010411c929
  0x000000010411c8fd: cmpq   $0x0,0x1d8(%rdx)
  0x000000010411c908: jne    0x000000010411c921
  0x000000010411c90a: mov    %rax,0x1d8(%rdx)
  0x000000010411c911: movq   $0x1,0x1e0(%rdx)
  0x000000010411c91c: jmpq   0x000000010411c929
  0x000000010411c921: addq   $0x1,0x1c0(%rdx)
  0x000000010411c929: movabs $0x795866950,%rdx  ;   {oop(&quot;Sum:&quot;)}
  0x000000010411c933: mov    0xc0(%rsp),%rsi    ;*invokevirtual append
                                                ; - jdk.VolatileTest::main@63 (line 26)

  0x000000010411c93b: nop
  0x000000010411c93c: nop
  0x000000010411c93d: movabs $0xffffffffffffffff,%rax
  0x000000010411c947: callq  0x00000001040462e0  ; OopMap{[216]=Oop [208]=Oop off=1836}
                                                ;*invokevirtual append
                                                ; - jdk.VolatileTest::main@63 (line 26)
                                                ;   {virtual_call}
  0x000000010411c94c: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x000000010411d492
  0x000000010411c94f: mov    %rax,%rdx
  0x000000010411c952: movabs $0x1178031b8,%rsi  ;   {metadata(method data for {method} {0x0000000117802dc8} &apos;main&apos; &apos;([Ljava/lang/String;)V&apos; in &apos;jdk/VolatileTest&apos;)}
  0x000000010411c95c: mov    0x8(%rdx),%edx
  0x000000010411c95f: shl    $0x3,%rdx
  0x000000010411c963: cmp    0x1f8(%rsi),%rdx
  0x000000010411c96a: jne    0x000000010411c979
  0x000000010411c96c: addq   $0x1,0x200(%rsi)
  0x000000010411c974: jmpq   0x000000010411c9df
  0x000000010411c979: cmp    0x208(%rsi),%rdx
  0x000000010411c980: jne    0x000000010411c98f
  0x000000010411c982: addq   $0x1,0x210(%rsi)
  0x000000010411c98a: jmpq   0x000000010411c9df
  0x000000010411c98f: cmpq   $0x0,0x1f8(%rsi)
  0x000000010411c99a: jne    0x000000010411c9b3
  0x000000010411c99c: mov    %rdx,0x1f8(%rsi)
  0x000000010411c9a3: movq   $0x1,0x200(%rsi)
  0x000000010411c9ae: jmpq   0x000000010411c9df
  0x000000010411c9b3: cmpq   $0x0,0x208(%rsi)
  0x000000010411c9be: jne    0x000000010411c9d7
  0x000000010411c9c0: mov    %rdx,0x208(%rsi)
  0x000000010411c9c7: movq   $0x1,0x210(%rsi)
  0x000000010411c9d2: jmpq   0x000000010411c9df
  0x000000010411c9d7: addq   $0x1,0x1f0(%rsi)
  0x000000010411c9df: mov    0xc8(%rsp),%edx
  0x000000010411c9e6: mov    %rax,%rsi          ;*invokevirtual append
                                                ; - jdk.VolatileTest::main@68 (line 26)

  0x000000010411c9e9: nop
  0x000000010411c9ea: nop
  0x000000010411c9eb: nop
  0x000000010411c9ec: nop
  0x000000010411c9ed: movabs $0xffffffffffffffff,%rax
  0x000000010411c9f7: callq  0x00000001040462e0  ; OopMap{[216]=Oop [208]=Oop off=2012}
                                                ;*invokevirtual append
                                                ; - jdk.VolatileTest::main@68 (line 26)
                                                ;   {virtual_call}
  0x000000010411c9fc: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x000000010411d497
  0x000000010411c9ff: mov    %rax,%rsi
  0x000000010411ca02: movabs $0x1178031b8,%rdi  ;   {metadata(method data for {method} {0x0000000117802dc8} &apos;main&apos; &apos;([Ljava/lang/String;)V&apos; in &apos;jdk/VolatileTest&apos;)}
  0x000000010411ca0c: mov    0x8(%rsi),%esi
  0x000000010411ca0f: shl    $0x3,%rsi
  0x000000010411ca13: cmp    0x228(%rdi),%rsi
  0x000000010411ca1a: jne    0x000000010411ca29
  0x000000010411ca1c: addq   $0x1,0x230(%rdi)
  0x000000010411ca24: jmpq   0x000000010411ca8f
  0x000000010411ca29: cmp    0x238(%rdi),%rsi
  0x000000010411ca30: jne    0x000000010411ca3f
  0x000000010411ca32: addq   $0x1,0x240(%rdi)
  0x000000010411ca3a: jmpq   0x000000010411ca8f
  0x000000010411ca3f: cmpq   $0x0,0x228(%rdi)
  0x000000010411ca4a: jne    0x000000010411ca63
  0x000000010411ca4c: mov    %rsi,0x228(%rdi)
  0x000000010411ca53: movq   $0x1,0x230(%rdi)
  0x000000010411ca5e: jmpq   0x000000010411ca8f
  0x000000010411ca63: cmpq   $0x0,0x238(%rdi)
  0x000000010411ca6e: jne    0x000000010411ca87
  0x000000010411ca70: mov    %rsi,0x238(%rdi)
  0x000000010411ca77: movq   $0x1,0x240(%rdi)
  0x000000010411ca82: jmpq   0x000000010411ca8f
  0x000000010411ca87: addq   $0x1,0x220(%rdi)
  0x000000010411ca8f: mov    %rax,%rsi          ;*invokevirtual toString
                                                ; - jdk.VolatileTest::main@71 (line 26)

  0x000000010411ca92: nop
  0x000000010411ca93: nop
  0x000000010411ca94: nop
  0x000000010411ca95: movabs $0xffffffffffffffff,%rax
  0x000000010411ca9f: callq  0x00000001040462e0  ; OopMap{[216]=Oop [208]=Oop off=2180}
                                                ;*invokevirtual toString
                                                ; - jdk.VolatileTest::main@71 (line 26)
                                                ;   {virtual_call}
  0x000000010411caa4: mov    %rax,%rdx          ;*invokevirtual toString
                                                ; - jdk.VolatileTest::main@71 (line 26)

  0x000000010411caa7: mov    0xd0(%rsp),%rbx
  0x000000010411caaf: cmp    (%rbx),%rax        ;*invokevirtual println
                                                ; - jdk.VolatileTest::main@74 (line 26)
                                                ; implicit exception: dispatches to 0x000000010411d49c
  0x000000010411cab2: mov    %rbx,%rax
  0x000000010411cab5: movabs $0x1178031b8,%rsi  ;   {metadata(method data for {method} {0x0000000117802dc8} &apos;main&apos; &apos;([Ljava/lang/String;)V&apos; in &apos;jdk/VolatileTest&apos;)}
  0x000000010411cabf: movabs $0x7c0027950,%r10  ;   {metadata(&apos;java/io/PrintStream&apos;)}
  0x000000010411cac9: mov    %r10,0x258(%rsi)
  0x000000010411cad0: addq   $0x1,0x260(%rsi)
  0x000000010411cad8: movabs $0x1176c23e8,%rax  ;   {metadata(method data for {method} {0x00000001175479d8} &apos;println&apos; &apos;(Ljava/lang/String;)V&apos; in &apos;java/io/PrintStream&apos;)}
  0x000000010411cae2: mov    0xdc(%rax),%esi
  0x000000010411cae8: add    $0x8,%esi
  0x000000010411caeb: mov    %esi,0xdc(%rax)
  0x000000010411caf1: movabs $0x1175479d8,%rax  ;   {metadata({method} {0x00000001175479d8} &apos;println&apos; &apos;(Ljava/lang/String;)V&apos; in &apos;java/io/PrintStream&apos;)}
  0x000000010411cafb: and    $0x7ffff8,%esi
  0x000000010411cb01: cmp    $0x0,%esi
  0x000000010411cb04: je     0x000000010411d4a1
  0x000000010411cb0a: lea    0xf0(%rsp),%rsi
  0x000000010411cb12: mov    %rbx,0x8(%rsi)
  0x000000010411cb16: mov    (%rbx),%rax
  0x000000010411cb19: mov    %rax,%rdi
  0x000000010411cb1c: and    $0x7,%rdi
  0x000000010411cb20: cmp    $0x5,%rdi
  0x000000010411cb24: jne    0x000000010411cbab
  0x000000010411cb2a: mov    0x8(%rbx),%edi
  0x000000010411cb2d: shl    $0x3,%rdi
  0x000000010411cb31: mov    0xa8(%rdi),%rdi
  0x000000010411cb38: or     %r15,%rdi
  0x000000010411cb3b: xor    %rax,%rdi
  0x000000010411cb3e: and    $0xffffffffffffff87,%rdi
  0x000000010411cb42: je     0x000000010411cbd3
  0x000000010411cb48: test   $0x7,%rdi
  0x000000010411cb4f: jne    0x000000010411cb98
  0x000000010411cb51: test   $0x300,%rdi
  0x000000010411cb58: jne    0x000000010411cb77
  0x000000010411cb5a: and    $0x37f,%rax
  0x000000010411cb61: mov    %rax,%rdi
  0x000000010411cb64: or     %r15,%rdi
  0x000000010411cb67: lock cmpxchg %rdi,(%rbx)
  0x000000010411cb6c: jne    0x000000010411d4b8
  0x000000010411cb72: jmpq   0x000000010411cbd3
  0x000000010411cb77: mov    0x8(%rbx),%edi
  0x000000010411cb7a: shl    $0x3,%rdi
  0x000000010411cb7e: mov    0xa8(%rdi),%rdi
  0x000000010411cb85: or     %r15,%rdi
  0x000000010411cb88: lock cmpxchg %rdi,(%rbx)
  0x000000010411cb8d: jne    0x000000010411d4b8
  0x000000010411cb93: jmpq   0x000000010411cbd3
  0x000000010411cb98: mov    0x8(%rbx),%edi
  0x000000010411cb9b: shl    $0x3,%rdi
  0x000000010411cb9f: mov    0xa8(%rdi),%rdi
  0x000000010411cba6: lock cmpxchg %rdi,(%rbx)
  0x000000010411cbab: mov    (%rbx),%rax
  0x000000010411cbae: or     $0x1,%rax
  0x000000010411cbb2: mov    %rax,(%rsi)
  0x000000010411cbb5: lock cmpxchg %rsi,(%rbx)
  0x000000010411cbba: je     0x000000010411cbd3
  0x000000010411cbc0: sub    %rsp,%rax
  0x000000010411cbc3: and    $0xfffffffffffff007,%rax
  0x000000010411cbca: mov    %rax,(%rsi)
  0x000000010411cbcd: jne    0x000000010411d4b8  ;*monitorenter
                                                ; - java.io.PrintStream::println@3 (line 805)
                                                ; - jdk.VolatileTest::main@74 (line 26)

  0x000000010411cbd3: mov    %rbx,%rsi
  0x000000010411cbd6: movabs $0x1176c23e8,%rdi  ;   {metadata(method data for {method} {0x00000001175479d8} &apos;println&apos; &apos;(Ljava/lang/String;)V&apos; in &apos;java/io/PrintStream&apos;)}
  0x000000010411cbe0: movabs $0x7c0027950,%r10  ;   {metadata(&apos;java/io/PrintStream&apos;)}
  0x000000010411cbea: mov    %r10,0x110(%rdi)
  0x000000010411cbf1: addq   $0x1,0x118(%rdi)
  0x000000010411cbf9: movabs $0x1176c2590,%rsi  ;   {metadata(method data for {method} {0x00000001175472a8} &apos;print&apos; &apos;(Ljava/lang/String;)V&apos; in &apos;java/io/PrintStream&apos;)}
  0x000000010411cc03: mov    0xdc(%rsi),%edi
  0x000000010411cc09: add    $0x8,%edi
  0x000000010411cc0c: mov    %edi,0xdc(%rsi)
  0x000000010411cc12: movabs $0x1175472a8,%rsi  ;   {metadata({method} {0x00000001175472a8} &apos;print&apos; &apos;(Ljava/lang/String;)V&apos; in &apos;java/io/PrintStream&apos;)}
  0x000000010411cc1c: and    $0x7ffff8,%edi
  0x000000010411cc22: cmp    $0x0,%edi
  0x000000010411cc25: je     0x000000010411d4cb
  0x000000010411cc2b: cmp    $0x0,%rdx
  0x000000010411cc2f: movabs $0x1176c2590,%rsi  ;   {metadata(method data for {method} {0x00000001175472a8} &apos;print&apos; &apos;(Ljava/lang/String;)V&apos; in &apos;java/io/PrintStream&apos;)}
  0x000000010411cc39: movabs $0x108,%rdi
  0x000000010411cc43: jne    0x000000010411cc53
  0x000000010411cc49: movabs $0x118,%rdi
  0x000000010411cc53: mov    (%rsi,%rdi,1),%rax
  0x000000010411cc57: lea    0x1(%rax),%rax
  0x000000010411cc5b: mov    %rax,(%rsi,%rdi,1)
  0x000000010411cc5f: jne    0x000000010411cc6f  ;*ifnonnull
                                                ; - java.io.PrintStream::print@1 (line 666)
                                                ; - java.io.PrintStream::println@6 (line 806)
                                                ; - jdk.VolatileTest::main@74 (line 26)

  0x000000010411cc65: movabs $0x7955840a0,%rdx  ;*aload_0
                                                ; - java.io.PrintStream::print@7 (line 669)
                                                ; - java.io.PrintStream::println@6 (line 806)
                                                ; - jdk.VolatileTest::main@74 (line 26)
                                                ;   {oop(&quot;null&quot;)}
  0x000000010411cc6f: mov    %rbx,%rsi
  0x000000010411cc72: movabs $0x1176c2590,%rdi  ;   {metadata(method data for {method} {0x00000001175472a8} &apos;print&apos; &apos;(Ljava/lang/String;)V&apos; in &apos;java/io/PrintStream&apos;)}
  0x000000010411cc7c: addq   $0x1,0x128(%rdi)
  0x000000010411cc84: mov    %rbx,%rsi          ;*invokespecial write
                                                ; - java.io.PrintStream::print@9 (line 669)
                                                ; - java.io.PrintStream::println@6 (line 806)
                                                ; - jdk.VolatileTest::main@74 (line 26)

  0x000000010411cc87: callq  0x00000001040460a0  ; OopMap{[216]=Oop [208]=Oop [248]=Oop off=2668}
                                                ;*invokespecial write
                                                ; - java.io.PrintStream::print@9 (line 669)
                                                ; - java.io.PrintStream::println@6 (line 806)
                                                ; - jdk.VolatileTest::main@74 (line 26)
                                                ;   {optimized virtual_call}
  0x000000010411cc8c: mov    0xd0(%rsp),%rbx
  0x000000010411cc94: mov    %rbx,%rsi
  0x000000010411cc97: movabs $0x1176c23e8,%rdi  ;   {metadata(method data for {method} {0x00000001175479d8} &apos;println&apos; &apos;(Ljava/lang/String;)V&apos; in &apos;java/io/PrintStream&apos;)}
  0x000000010411cca1: addq   $0x1,0x138(%rdi)
  0x000000010411cca9: mov    %rbx,%rsi          ;*invokespecial newLine
                                                ; - java.io.PrintStream::println@10 (line 807)
                                                ; - jdk.VolatileTest::main@74 (line 26)

  0x000000010411ccac: nop
  0x000000010411ccad: nop
  0x000000010411ccae: nop
  0x000000010411ccaf: callq  0x00000001040460a0  ; OopMap{[216]=Oop [208]=Oop [248]=Oop off=2708}
                                                ;*invokespecial newLine
                                                ; - java.io.PrintStream::println@10 (line 807)
                                                ; - jdk.VolatileTest::main@74 (line 26)
                                                ;   {optimized virtual_call}
  0x000000010411ccb4: lea    0xf0(%rsp),%rax
  0x000000010411ccbc: mov    0x8(%rax),%rsi
  0x000000010411ccc0: mov    (%rsi),%rdx
  0x000000010411ccc3: and    $0x7,%rdx
  0x000000010411ccc7: cmp    $0x5,%rdx
  0x000000010411cccb: je     0x000000010411cce8
  0x000000010411ccd1: mov    (%rax),%rdx
  0x000000010411ccd4: test   %rdx,%rdx
  0x000000010411ccd7: je     0x000000010411cce8
  0x000000010411ccdd: lock cmpxchg %rdx,(%rsi)
  0x000000010411cce2: jne    0x000000010411d4e2  ;*monitorexit
                                                ; - java.io.PrintStream::println@14 (line 808)
                                                ; - jdk.VolatileTest::main@74 (line 26)

  0x000000010411cce8: movabs $0x1176c23e8,%rdx  ;   {metadata(method data for {method} {0x00000001175479d8} &apos;println&apos; &apos;(Ljava/lang/String;)V&apos; in &apos;java/io/PrintStream&apos;)}
  0x000000010411ccf2: incl   0x148(%rdx)        ;*goto
                                                ; - java.io.PrintStream::println@15 (line 808)
                                                ; - jdk.VolatileTest::main@74 (line 26)

  0x000000010411ccf8: movabs $0x795580c78,%rdx  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x000000010411cd02: mov    0x6c(%rdx),%edi
  0x000000010411cd05: shl    $0x3,%rdi          ;*getstatic out
                                                ; - jdk.VolatileTest::main@77 (line 27)

  0x000000010411cd09: mov    %rdi,0xe8(%rsp)
  0x000000010411cd11: nopl   0x0(%rax)
  0x000000010411cd18: jmpq   0x000000010411d507  ;   {no_reloc}
  0x000000010411cd1d: add    %al,(%rax)
  0x000000010411cd1f: add    %al,(%rax)
  0x000000010411cd21: add    %ch,%cl
  0x000000010411cd23: (bad)  
  0x000000010411cd24: (bad)  
  0x000000010411cd25: add    %al,(%rax)         ;*new  ; - jdk.VolatileTest::main@80 (line 27)

  0x000000010411cd27: mov    %rax,%rsi
  0x000000010411cd2a: movabs $0x1178031b8,%rdx  ;   {metadata(method data for {method} {0x0000000117802dc8} &apos;main&apos; &apos;([Ljava/lang/String;)V&apos; in &apos;jdk/VolatileTest&apos;)}
  0x000000010411cd34: addq   $0x1,0x280(%rdx)
  0x000000010411cd3c: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - jdk.VolatileTest::main@84 (line 27)

  0x000000010411cd3f: mov    %rax,0xe0(%rsp)
  0x000000010411cd47: callq  0x00000001040460a0  ; OopMap{[224]=Oop [232]=Oop [216]=Oop off=2860}
                                                ;*invokespecial &lt;init&gt;
                                                ; - jdk.VolatileTest::main@84 (line 27)
                                                ;   {optimized virtual_call}
  0x000000010411cd4c: mov    0xe0(%rsp),%rax
  0x000000010411cd54: movabs $0x1178031b8,%rdx  ;   {metadata(method data for {method} {0x0000000117802dc8} &apos;main&apos; &apos;([Ljava/lang/String;)V&apos; in &apos;jdk/VolatileTest&apos;)}
  0x000000010411cd5e: mov    0x8(%rax),%eax
  0x000000010411cd61: shl    $0x3,%rax
  0x000000010411cd65: cmp    0x298(%rdx),%rax
  0x000000010411cd6c: jne    0x000000010411cd7b
  0x000000010411cd6e: addq   $0x1,0x2a0(%rdx)
  0x000000010411cd76: jmpq   0x000000010411cde1
  0x000000010411cd7b: cmp    0x2a8(%rdx),%rax
  0x000000010411cd82: jne    0x000000010411cd91
  0x000000010411cd84: addq   $0x1,0x2b0(%rdx)
  0x000000010411cd8c: jmpq   0x000000010411cde1
  0x000000010411cd91: cmpq   $0x0,0x298(%rdx)
  0x000000010411cd9c: jne    0x000000010411cdb5
  0x000000010411cd9e: mov    %rax,0x298(%rdx)
  0x000000010411cda5: movq   $0x1,0x2a0(%rdx)
  0x000000010411cdb0: jmpq   0x000000010411cde1
  0x000000010411cdb5: cmpq   $0x0,0x2a8(%rdx)
  0x000000010411cdc0: jne    0x000000010411cdd9
  0x000000010411cdc2: mov    %rax,0x2a8(%rdx)
  0x000000010411cdc9: movq   $0x1,0x2b0(%rdx)
  0x000000010411cdd4: jmpq   0x000000010411cde1
  0x000000010411cdd9: addq   $0x1,0x290(%rdx)
  0x000000010411cde1: movabs $0x795866980,%rdx  ;   {oop(&quot;VolatileTest.sum:&quot;)}
  0x000000010411cdeb: mov    0xe0(%rsp),%rsi    ;*invokevirtual append
                                                ; - jdk.VolatileTest::main@89 (line 27)

  0x000000010411cdf3: nop
  0x000000010411cdf4: nop
  0x000000010411cdf5: movabs $0xffffffffffffffff,%rax
  0x000000010411cdff: callq  0x00000001040462e0  ; OopMap{[232]=Oop [216]=Oop off=3044}
                                                ;*invokevirtual append
                                                ; - jdk.VolatileTest::main@89 (line 27)
                                                ;   {virtual_call}
  0x000000010411ce04: mov    0xd8(%rsp),%rdx
  0x000000010411ce0c: vmovsd 0x10(%rdx),%xmm0   ; implicit exception: dispatches to 0x000000010411d51e
  0x000000010411ce11: vmovq  %xmm0,%rdx         ;*getfield sum
                                                ; - jdk.VolatileTest::main@93 (line 27)

  0x000000010411ce16: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x000000010411d523
  0x000000010411ce19: mov    %rax,%rsi
  0x000000010411ce1c: movabs $0x1178031b8,%rdi  ;   {metadata(method data for {method} {0x0000000117802dc8} &apos;main&apos; &apos;([Ljava/lang/String;)V&apos; in &apos;jdk/VolatileTest&apos;)}
  0x000000010411ce26: mov    0x8(%rsi),%esi
  0x000000010411ce29: shl    $0x3,%rsi
  0x000000010411ce2d: cmp    0x2c8(%rdi),%rsi
  0x000000010411ce34: jne    0x000000010411ce43
  0x000000010411ce36: addq   $0x1,0x2d0(%rdi)
  0x000000010411ce3e: jmpq   0x000000010411cea9
  0x000000010411ce43: cmp    0x2d8(%rdi),%rsi
  0x000000010411ce4a: jne    0x000000010411ce59
  0x000000010411ce4c: addq   $0x1,0x2e0(%rdi)
  0x000000010411ce54: jmpq   0x000000010411cea9
  0x000000010411ce59: cmpq   $0x0,0x2c8(%rdi)
  0x000000010411ce64: jne    0x000000010411ce7d
  0x000000010411ce66: mov    %rsi,0x2c8(%rdi)
  0x000000010411ce6d: movq   $0x1,0x2d0(%rdi)
  0x000000010411ce78: jmpq   0x000000010411cea9
  0x000000010411ce7d: cmpq   $0x0,0x2d8(%rdi)
  0x000000010411ce88: jne    0x000000010411cea1
  0x000000010411ce8a: mov    %rsi,0x2d8(%rdi)
  0x000000010411ce91: movq   $0x1,0x2e0(%rdi)
  0x000000010411ce9c: jmpq   0x000000010411cea9
  0x000000010411cea1: addq   $0x1,0x2c0(%rdi)
  0x000000010411cea9: mov    %rax,%rsi          ;*invokevirtual append
                                                ; - jdk.VolatileTest::main@96 (line 27)

  0x000000010411ceac: nop
  0x000000010411cead: movabs $0xffffffffffffffff,%rax
  0x000000010411ceb7: callq  0x00000001040462e0  ; OopMap{[232]=Oop off=3228}
                                                ;*invokevirtual append
                                                ; - jdk.VolatileTest::main@96 (line 27)
                                                ;   {virtual_call}
  0x000000010411cebc: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x000000010411d528
  0x000000010411cebf: mov    %rax,%rsi
  0x000000010411cec2: movabs $0x1178031b8,%rdi  ;   {metadata(method data for {method} {0x0000000117802dc8} &apos;main&apos; &apos;([Ljava/lang/String;)V&apos; in &apos;jdk/VolatileTest&apos;)}
  0x000000010411cecc: mov    0x8(%rsi),%esi
  0x000000010411cecf: shl    $0x3,%rsi
  0x000000010411ced3: cmp    0x2f8(%rdi),%rsi
  0x000000010411ceda: jne    0x000000010411cee9
  0x000000010411cedc: addq   $0x1,0x300(%rdi)
  0x000000010411cee4: jmpq   0x000000010411cf4f
  0x000000010411cee9: cmp    0x308(%rdi),%rsi
  0x000000010411cef0: jne    0x000000010411ceff
  0x000000010411cef2: addq   $0x1,0x310(%rdi)
  0x000000010411cefa: jmpq   0x000000010411cf4f
  0x000000010411ceff: cmpq   $0x0,0x2f8(%rdi)
  0x000000010411cf0a: jne    0x000000010411cf23
  0x000000010411cf0c: mov    %rsi,0x2f8(%rdi)
  0x000000010411cf13: movq   $0x1,0x300(%rdi)
  0x000000010411cf1e: jmpq   0x000000010411cf4f
  0x000000010411cf23: cmpq   $0x0,0x308(%rdi)
  0x000000010411cf2e: jne    0x000000010411cf47
  0x000000010411cf30: mov    %rsi,0x308(%rdi)
  0x000000010411cf37: movq   $0x1,0x310(%rdi)
  0x000000010411cf42: jmpq   0x000000010411cf4f
  0x000000010411cf47: addq   $0x1,0x2f0(%rdi)
  0x000000010411cf4f: mov    %rax,%rsi          ;*invokevirtual toString
                                                ; - jdk.VolatileTest::main@99 (line 27)

  0x000000010411cf52: nop
  0x000000010411cf53: nop
  0x000000010411cf54: nop
  0x000000010411cf55: movabs $0xffffffffffffffff,%rax
  0x000000010411cf5f: callq  0x00000001040462e0  ; OopMap{[232]=Oop off=3396}
                                                ;*invokevirtual toString
                                                ; - jdk.VolatileTest::main@99 (line 27)
                                                ;   {virtual_call}
  0x000000010411cf64: mov    %rax,%rdx          ;*invokevirtual toString
                                                ; - jdk.VolatileTest::main@99 (line 27)

  0x000000010411cf67: mov    0xe8(%rsp),%rdi
  0x000000010411cf6f: cmp    (%rdi),%rax        ;*invokevirtual println
                                                ; - jdk.VolatileTest::main@102 (line 27)
                                                ; implicit exception: dispatches to 0x000000010411d52d
  0x000000010411cf72: mov    %rdi,%rax
  0x000000010411cf75: movabs $0x1178031b8,%rsi  ;   {metadata(method data for {method} {0x0000000117802dc8} &apos;main&apos; &apos;([Ljava/lang/String;)V&apos; in &apos;jdk/VolatileTest&apos;)}
  0x000000010411cf7f: movabs $0x7c0027950,%r10  ;   {metadata(&apos;java/io/PrintStream&apos;)}
  0x000000010411cf89: mov    %r10,0x328(%rsi)
  0x000000010411cf90: addq   $0x1,0x330(%rsi)
  0x000000010411cf98: movabs $0x1176c23e8,%rax  ;   {metadata(method data for {method} {0x00000001175479d8} &apos;println&apos; &apos;(Ljava/lang/String;)V&apos; in &apos;java/io/PrintStream&apos;)}
  0x000000010411cfa2: mov    0xdc(%rax),%esi
  0x000000010411cfa8: add    $0x8,%esi
  0x000000010411cfab: mov    %esi,0xdc(%rax)
  0x000000010411cfb1: movabs $0x1175479d8,%rax  ;   {metadata({method} {0x00000001175479d8} &apos;println&apos; &apos;(Ljava/lang/String;)V&apos; in &apos;java/io/PrintStream&apos;)}
  0x000000010411cfbb: and    $0x7ffff8,%esi
  0x000000010411cfc1: cmp    $0x0,%esi
  0x000000010411cfc4: je     0x000000010411d532
  0x000000010411cfca: lea    0xf0(%rsp),%rsi
  0x000000010411cfd2: mov    %rdi,0x8(%rsi)
  0x000000010411cfd6: mov    (%rdi),%rax
  0x000000010411cfd9: mov    %rax,%rbx
  0x000000010411cfdc: and    $0x7,%rbx
  0x000000010411cfe0: cmp    $0x5,%rbx
  0x000000010411cfe4: jne    0x000000010411d06b
  0x000000010411cfea: mov    0x8(%rdi),%ebx
  0x000000010411cfed: shl    $0x3,%rbx
  0x000000010411cff1: mov    0xa8(%rbx),%rbx
  0x000000010411cff8: or     %r15,%rbx
  0x000000010411cffb: xor    %rax,%rbx
  0x000000010411cffe: and    $0xffffffffffffff87,%rbx
  0x000000010411d002: je     0x000000010411d093
  0x000000010411d008: test   $0x7,%rbx
  0x000000010411d00f: jne    0x000000010411d058
  0x000000010411d011: test   $0x300,%rbx
  0x000000010411d018: jne    0x000000010411d037
  0x000000010411d01a: and    $0x37f,%rax
  0x000000010411d021: mov    %rax,%rbx
  0x000000010411d024: or     %r15,%rbx
  0x000000010411d027: lock cmpxchg %rbx,(%rdi)
  0x000000010411d02c: jne    0x000000010411d549
  0x000000010411d032: jmpq   0x000000010411d093
  0x000000010411d037: mov    0x8(%rdi),%ebx
  0x000000010411d03a: shl    $0x3,%rbx
  0x000000010411d03e: mov    0xa8(%rbx),%rbx
  0x000000010411d045: or     %r15,%rbx
  0x000000010411d048: lock cmpxchg %rbx,(%rdi)
  0x000000010411d04d: jne    0x000000010411d549
  0x000000010411d053: jmpq   0x000000010411d093
  0x000000010411d058: mov    0x8(%rdi),%ebx
  0x000000010411d05b: shl    $0x3,%rbx
  0x000000010411d05f: mov    0xa8(%rbx),%rbx
  0x000000010411d066: lock cmpxchg %rbx,(%rdi)
  0x000000010411d06b: mov    (%rdi),%rax
  0x000000010411d06e: or     $0x1,%rax
  0x000000010411d072: mov    %rax,(%rsi)
  0x000000010411d075: lock cmpxchg %rsi,(%rdi)
  0x000000010411d07a: je     0x000000010411d093
  0x000000010411d080: sub    %rsp,%rax
  0x000000010411d083: and    $0xfffffffffffff007,%rax
  0x000000010411d08a: mov    %rax,(%rsi)
  0x000000010411d08d: jne    0x000000010411d549  ;*monitorenter
                                                ; - java.io.PrintStream::println@3 (line 805)
                                                ; - jdk.VolatileTest::main@102 (line 27)

  0x000000010411d093: mov    %rdi,%rsi
  0x000000010411d096: movabs $0x1176c23e8,%rbx  ;   {metadata(method data for {method} {0x00000001175479d8} &apos;println&apos; &apos;(Ljava/lang/String;)V&apos; in &apos;java/io/PrintStream&apos;)}
  0x000000010411d0a0: movabs $0x7c0027950,%r10  ;   {metadata(&apos;java/io/PrintStream&apos;)}
  0x000000010411d0aa: mov    %r10,0x110(%rbx)
  0x000000010411d0b1: addq   $0x1,0x118(%rbx)
  0x000000010411d0b9: movabs $0x1176c2590,%rsi  ;   {metadata(method data for {method} {0x00000001175472a8} &apos;print&apos; &apos;(Ljava/lang/String;)V&apos; in &apos;java/io/PrintStream&apos;)}
  0x000000010411d0c3: mov    0xdc(%rsi),%ebx
  0x000000010411d0c9: add    $0x8,%ebx
  0x000000010411d0cc: mov    %ebx,0xdc(%rsi)
  0x000000010411d0d2: movabs $0x1175472a8,%rsi  ;   {metadata({method} {0x00000001175472a8} &apos;print&apos; &apos;(Ljava/lang/String;)V&apos; in &apos;java/io/PrintStream&apos;)}
  0x000000010411d0dc: and    $0x7ffff8,%ebx
  0x000000010411d0e2: cmp    $0x0,%ebx
  0x000000010411d0e5: je     0x000000010411d55c
  0x000000010411d0eb: cmp    $0x0,%rdx
  0x000000010411d0ef: movabs $0x1176c2590,%rsi  ;   {metadata(method data for {method} {0x00000001175472a8} &apos;print&apos; &apos;(Ljava/lang/String;)V&apos; in &apos;java/io/PrintStream&apos;)}
  0x000000010411d0f9: movabs $0x108,%rbx
  0x000000010411d103: jne    0x000000010411d113
  0x000000010411d109: movabs $0x118,%rbx
  0x000000010411d113: mov    (%rsi,%rbx,1),%rax
  0x000000010411d117: lea    0x1(%rax),%rax
  0x000000010411d11b: mov    %rax,(%rsi,%rbx,1)
  0x000000010411d11f: jne    0x000000010411d12f  ;*ifnonnull
                                                ; - java.io.PrintStream::print@1 (line 666)
                                                ; - java.io.PrintStream::println@6 (line 806)
                                                ; - jdk.VolatileTest::main@102 (line 27)

  0x000000010411d125: movabs $0x7955840a0,%rdx  ;*aload_0
                                                ; - java.io.PrintStream::print@7 (line 669)
                                                ; - java.io.PrintStream::println@6 (line 806)
                                                ; - jdk.VolatileTest::main@102 (line 27)
                                                ;   {oop(&quot;null&quot;)}
  0x000000010411d12f: mov    %rdi,%rsi
  0x000000010411d132: movabs $0x1176c2590,%rbx  ;   {metadata(method data for {method} {0x00000001175472a8} &apos;print&apos; &apos;(Ljava/lang/String;)V&apos; in &apos;java/io/PrintStream&apos;)}
  0x000000010411d13c: addq   $0x1,0x128(%rbx)
  0x000000010411d144: mov    %rdi,%rsi          ;*invokespecial write
                                                ; - java.io.PrintStream::print@9 (line 669)
                                                ; - java.io.PrintStream::println@6 (line 806)
                                                ; - jdk.VolatileTest::main@102 (line 27)

  0x000000010411d147: callq  0x00000001040460a0  ; OopMap{[232]=Oop [248]=Oop off=3884}
                                                ;*invokespecial write
                                                ; - java.io.PrintStream::print@9 (line 669)
                                                ; - java.io.PrintStream::println@6 (line 806)
                                                ; - jdk.VolatileTest::main@102 (line 27)
                                                ;   {optimized virtual_call}
  0x000000010411d14c: mov    0xe8(%rsp),%rdi
  0x000000010411d154: mov    %rdi,%rsi
  0x000000010411d157: movabs $0x1176c23e8,%rbx  ;   {metadata(method data for {method} {0x00000001175479d8} &apos;println&apos; &apos;(Ljava/lang/String;)V&apos; in &apos;java/io/PrintStream&apos;)}
  0x000000010411d161: addq   $0x1,0x138(%rbx)
  0x000000010411d169: mov    %rdi,%rsi          ;*invokespecial newLine
                                                ; - java.io.PrintStream::println@10 (line 807)
                                                ; - jdk.VolatileTest::main@102 (line 27)

  0x000000010411d16c: nop
  0x000000010411d16d: nop
  0x000000010411d16e: nop
  0x000000010411d16f: callq  0x00000001040460a0  ; OopMap{[232]=Oop [248]=Oop off=3924}
                                                ;*invokespecial newLine
                                                ; - java.io.PrintStream::println@10 (line 807)
                                                ; - jdk.VolatileTest::main@102 (line 27)
                                                ;   {optimized virtual_call}
  0x000000010411d174: lea    0xf0(%rsp),%rax
  0x000000010411d17c: mov    0x8(%rax),%rdi
  0x000000010411d180: mov    (%rdi),%rsi
  0x000000010411d183: and    $0x7,%rsi
  0x000000010411d187: cmp    $0x5,%rsi
  0x000000010411d18b: je     0x000000010411d1a8
  0x000000010411d191: mov    (%rax),%rsi
  0x000000010411d194: test   %rsi,%rsi
  0x000000010411d197: je     0x000000010411d1a8
  0x000000010411d19d: lock cmpxchg %rsi,(%rdi)
  0x000000010411d1a2: jne    0x000000010411d573  ;*monitorexit
                                                ; - java.io.PrintStream::println@14 (line 808)
                                                ; - jdk.VolatileTest::main@102 (line 27)

  0x000000010411d1a8: movabs $0x1176c23e8,%rax  ;   {metadata(method data for {method} {0x00000001175479d8} &apos;println&apos; &apos;(Ljava/lang/String;)V&apos; in &apos;java/io/PrintStream&apos;)}
  0x000000010411d1b2: incl   0x148(%rax)        ;*goto
                                                ; - java.io.PrintStream::println@15 (line 808)
                                                ; - jdk.VolatileTest::main@102 (line 27)

  0x000000010411d1b8: add    $0x110,%rsp
  0x000000010411d1bf: pop    %rbp
  0x000000010411d1c0: test   %eax,-0x30bd0c6(%rip)        # 0x0000000101060100
                                                ;   {poll_return}
  0x000000010411d1c6: retq                      ;*return
                                                ; - jdk.VolatileTest::main@105 (line 28)

  0x000000010411d1c7: mov    0x2a8(%r15),%rax
  0x000000010411d1ce: xor    %r10,%r10
  0x000000010411d1d1: mov    %r10,0x2a8(%r15)
  0x000000010411d1d8: xor    %r10,%r10
  0x000000010411d1db: mov    %r10,0x2b0(%r15)
  0x000000010411d1e2: mov    %rax,%rsi
  0x000000010411d1e5: lea    0xf0(%rsp),%rax
  0x000000010411d1ed: mov    0x8(%rax),%rbx
  0x000000010411d1f1: mov    (%rbx),%rdi
  0x000000010411d1f4: and    $0x7,%rdi
  0x000000010411d1f8: cmp    $0x5,%rdi
  0x000000010411d1fc: je     0x000000010411d219
  0x000000010411d202: mov    (%rax),%rdi
  0x000000010411d205: test   %rdi,%rdi
  0x000000010411d208: je     0x000000010411d219
  0x000000010411d20e: lock cmpxchg %rdi,(%rbx)
  0x000000010411d213: jne    0x000000010411d589  ;*monitorexit
                                                ; - java.io.PrintStream::println@20 (line 808)
                                                ; - jdk.VolatileTest::main@102 (line 27)

  0x000000010411d219: mov    %rsi,%rax
  0x000000010411d21c: jmpq   0x000000010411d5f6  ;*athrow
                                                ; - java.io.PrintStream::println@22 (line 808)
                                                ; - jdk.VolatileTest::main@102 (line 27)

  0x000000010411d221: mov    0x2a8(%r15),%rax
  0x000000010411d228: xor    %r10,%r10
  0x000000010411d22b: mov    %r10,0x2a8(%r15)
  0x000000010411d232: xor    %r10,%r10
  0x000000010411d235: mov    %r10,0x2b0(%r15)
  0x000000010411d23c: mov    %rax,%rsi
  0x000000010411d23f: lea    0xf0(%rsp),%rax
  0x000000010411d247: mov    0x8(%rax),%rbx
  0x000000010411d24b: mov    (%rbx),%rdi
  0x000000010411d24e: and    $0x7,%rdi
  0x000000010411d252: cmp    $0x5,%rdi
  0x000000010411d256: je     0x000000010411d273
  0x000000010411d25c: mov    (%rax),%rdi
  0x000000010411d25f: test   %rdi,%rdi
  0x000000010411d262: je     0x000000010411d273
  0x000000010411d268: lock cmpxchg %rdi,(%rbx)
  0x000000010411d26d: jne    0x000000010411d59f  ;*monitorexit
                                                ; - java.io.PrintStream::println@20 (line 808)
                                                ; - jdk.VolatileTest::main@74 (line 26)

  0x000000010411d273: mov    %rsi,%rax
  0x000000010411d276: jmpq   0x000000010411d5f6  ;*athrow
                                                ; - java.io.PrintStream::println@22 (line 808)
                                                ; - jdk.VolatileTest::main@74 (line 26)

  0x000000010411d27b: mov    0x2a8(%r15),%rax
  0x000000010411d282: xor    %r10,%r10
  0x000000010411d285: mov    %r10,0x2a8(%r15)
  0x000000010411d28c: xor    %r10,%r10
  0x000000010411d28f: mov    %r10,0x2b0(%r15)
  0x000000010411d296: mov    %rax,%rsi
  0x000000010411d299: lea    0xf0(%rsp),%rax
  0x000000010411d2a1: mov    0x8(%rax),%rbx
  0x000000010411d2a5: mov    (%rbx),%rdi
  0x000000010411d2a8: and    $0x7,%rdi
  0x000000010411d2ac: cmp    $0x5,%rdi
  0x000000010411d2b0: je     0x000000010411d2cd
  0x000000010411d2b6: mov    (%rax),%rdi
  0x000000010411d2b9: test   %rdi,%rdi
  0x000000010411d2bc: je     0x000000010411d2cd
  0x000000010411d2c2: lock cmpxchg %rdi,(%rbx)
  0x000000010411d2c7: jne    0x000000010411d5b5  ;*monitorexit
                                                ; - java.io.PrintStream::println@20 (line 724)
                                                ; - jdk.VolatileTest::main@12 (line 17)

  0x000000010411d2cd: mov    %rsi,%rax
  0x000000010411d2d0: jmpq   0x000000010411d5f6  ;*athrow
                                                ; - java.io.PrintStream::println@22 (line 724)
                                                ; - jdk.VolatileTest::main@12 (line 17)

  0x000000010411d2d5: mov    %eax,-0x14000(%rsp)
  0x000000010411d2dc: push   %rbp
  0x000000010411d2dd: sub    $0x110,%rsp
  0x000000010411d2e4: mov    0x10(%rsi),%rbx
  0x000000010411d2e8: mov    0x8(%rsi),%eax
  0x000000010411d2eb: mov    (%rsi),%edx
  0x000000010411d2ed: mov    %rsi,%rdi
  0x000000010411d2f0: mov    %rbx,0xb0(%rsp)
  0x000000010411d2f8: mov    %eax,0xac(%rsp)
  0x000000010411d2ff: mov    %edx,0xa8(%rsp)
  0x000000010411d306: callq  0x000000010054cb52  ;   {runtime_call}
  0x000000010411d30b: mov    0xa8(%rsp),%edx
  0x000000010411d312: mov    %rdx,%rsi
  0x000000010411d315: mov    0xac(%rsp),%eax
  0x000000010411d31c: mov    %rax,%rdi
  0x000000010411d31f: mov    0xb0(%rsp),%rbx
  0x000000010411d327: mov    %rbx,%rax
  0x000000010411d32a: jmpq   0x000000010411c7fa
  0x000000010411d32f: mov    %rax,0x8(%rsp)
  0x000000010411d334: movq   $0xffffffffffffffff,(%rsp)
  0x000000010411d33c: callq  0x0000000104102d20  ; OopMap{rsi=Oop off=4385}
                                                ;*synchronization entry
                                                ; - jdk.VolatileTest::main@-1 (line 15)
                                                ;   {runtime_call}
  0x000000010411d341: jmpq   0x000000010411c261
  0x000000010411d346: callq  0x0000000104072100  ; OopMap{r8=Oop off=4395}
                                                ;*invokevirtual println
                                                ; - jdk.VolatileTest::main@12 (line 17)
                                                ;   {runtime_call}
  0x000000010411d34b: mov    %rax,0x8(%rsp)
  0x000000010411d350: movq   $0xffffffffffffffff,(%rsp)
  0x000000010411d358: callq  0x0000000104102d20  ; OopMap{r8=Oop off=4413}
                                                ;*synchronization entry
                                                ; - java.io.PrintStream::println@-1 (line 721)
                                                ; - jdk.VolatileTest::main@12 (line 17)
                                                ;   {runtime_call}
  0x000000010411d35d: jmpq   0x000000010411c2ce
  0x000000010411d362: mov    %r8,0x8(%rsp)
  0x000000010411d367: mov    %rbx,(%rsp)
  0x000000010411d36b: callq  0x0000000104100ce0  ; OopMap{r8=Oop [248]=Oop off=4432}
                                                ;*monitorenter
                                                ; - java.io.PrintStream::println@3 (line 721)
                                                ; - jdk.VolatileTest::main@12 (line 17)
                                                ;   {runtime_call}
  0x000000010411d370: jmpq   0x000000010411c39a
  0x000000010411d375: mov    %rbx,0x8(%rsp)
  0x000000010411d37a: movq   $0xffffffffffffffff,(%rsp)
  0x000000010411d382: callq  0x0000000104102d20  ; OopMap{r8=Oop [248]=Oop off=4455}
                                                ;*synchronization entry
                                                ; - java.io.PrintStream::print@-1 (line 583)
                                                ; - java.io.PrintStream::println@6 (line 722)
                                                ; - jdk.VolatileTest::main@12 (line 17)
                                                ;   {runtime_call}
  0x000000010411d387: jmpq   0x000000010411c3f2
  0x000000010411d38c: mov    %rbx,0x8(%rsp)
  0x000000010411d391: movq   $0xffffffffffffffff,(%rsp)
  0x000000010411d399: callq  0x0000000104102d20  ; OopMap{r8=Oop [248]=Oop off=4478}
                                                ;*synchronization entry
                                                ; - java.lang.String::valueOf@-1 (line 3084)
                                                ; - java.io.PrintStream::print@2 (line 583)
                                                ; - java.io.PrintStream::println@6 (line 722)
                                                ; - jdk.VolatileTest::main@12 (line 17)
                                                ;   {runtime_call}
  0x000000010411d39e: jmpq   0x000000010411c436
  0x000000010411d3a3: callq  0x0000000104070920  ; OopMap{r8=Oop [248]=Oop off=4488}
                                                ;*newarray
                                                ; - java.lang.String::valueOf@1 (line 3084)
                                                ; - java.io.PrintStream::print@2 (line 583)
                                                ; - java.io.PrintStream::println@6 (line 722)
                                                ; - jdk.VolatileTest::main@12 (line 17)
                                                ;   {runtime_call}
  0x000000010411d3a8: jmpq   0x000000010411c4b2
  0x000000010411d3ad: mov    %rdx,%rdx
  0x000000010411d3b0: callq  0x0000000104071260  ; OopMap{r8=Oop rbx=Oop [248]=Oop off=4501}
                                                ;*new  ; - java.lang.String::valueOf@8 (line 3085)
                                                ; - java.io.PrintStream::print@2 (line 583)
                                                ; - java.io.PrintStream::println@6 (line 722)
                                                ; - jdk.VolatileTest::main@12 (line 17)
                                                ;   {runtime_call}
  0x000000010411d3b5: jmpq   0x000000010411c4ff
  0x000000010411d3ba: mov    %rdx,0x8(%rsp)
  0x000000010411d3bf: movq   $0xffffffffffffffff,(%rsp)
  0x000000010411d3c7: callq  0x0000000104102d20  ; OopMap{r8=Oop rbx=Oop rax=Oop [248]=Oop off=4524}
                                                ;*synchronization entry
                                                ; - java.lang.String::&lt;init&gt;@-1 (line 609)
                                                ; - java.lang.String::valueOf@14 (line 3085)
                                                ; - java.io.PrintStream::print@2 (line 583)
                                                ; - java.io.PrintStream::println@6 (line 722)
                                                ; - jdk.VolatileTest::main@12 (line 17)
                                                ;   {runtime_call}
  0x000000010411d3cc: jmpq   0x000000010411c546
  0x000000010411d3d1: mov    %rdx,0x8(%rsp)
  0x000000010411d3d6: movq   $0xffffffffffffffff,(%rsp)
  0x000000010411d3de: callq  0x0000000104102d20  ; OopMap{r8=Oop rbx=Oop rax=Oop [248]=Oop off=4547}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 609)
                                                ; - java.lang.String::valueOf@14 (line 3085)
                                                ; - java.io.PrintStream::print@2 (line 583)
                                                ; - java.io.PrintStream::println@6 (line 722)
                                                ; - jdk.VolatileTest::main@12 (line 17)
                                                ;   {runtime_call}
  0x000000010411d3e3: jmpq   0x000000010411c58d
  0x000000010411d3e8: lea    0xf0(%rsp),%rax
  0x000000010411d3f0: mov    %rax,(%rsp)
  0x000000010411d3f4: callq  0x0000000104101120  ;   {runtime_call}
  0x000000010411d3f9: jmpq   0x000000010411c638
  0x000000010411d3fe: mov    %rdx,%rdx
  0x000000010411d401: callq  0x0000000104071260  ; OopMap{off=4582}
                                                ;*new  ; - jdk.VolatileTest::main@15 (line 18)
                                                ;   {runtime_call}
  0x000000010411d406: jmpq   0x000000010411c689
  0x000000010411d40b: mov    %rsi,0x8(%rsp)
  0x000000010411d410: movq   $0xffffffffffffffff,(%rsp)
  0x000000010411d418: callq  0x0000000104102d20  ; OopMap{rax=Oop off=4605}
                                                ;*synchronization entry
                                                ; - jdk.VolatileTest::&lt;init&gt;@-1 (line 3)
                                                ; - jdk.VolatileTest::main@19 (line 18)
                                                ;   {runtime_call}
  0x000000010411d41d: jmpq   0x000000010411c6d0
  0x000000010411d422: mov    %rsi,0x8(%rsp)
  0x000000010411d427: movq   $0xffffffffffffffff,(%rsp)
  0x000000010411d42f: callq  0x0000000104102d20  ; OopMap{rax=Oop off=4628}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - jdk.VolatileTest::&lt;init&gt;@1 (line 3)
                                                ; - jdk.VolatileTest::main@19 (line 18)
                                                ;   {runtime_call}
  0x000000010411d434: jmpq   0x000000010411c717
  0x000000010411d439: callq  0x0000000104072100  ; OopMap{rax=Oop off=4638}
                                                ;*invokevirtual add
                                                ; - jdk.VolatileTest::main@40 (line 23)
                                                ;   {runtime_call}
  0x000000010411d43e: mov    %rdx,0x8(%rsp)
  0x000000010411d443: movq   $0xffffffffffffffff,(%rsp)
  0x000000010411d44b: callq  0x0000000104102d20  ; OopMap{rax=Oop off=4656}
                                                ;*synchronization entry
                                                ; - jdk.VolatileTest::add@-1 (line 9)
                                                ; - jdk.VolatileTest::main@40 (line 23)
                                                ;   {runtime_call}
  0x000000010411d450: jmpq   0x000000010411c783
  0x000000010411d455: mov    %rdx,0x8(%rsp)
  0x000000010411d45a: movq   $0x30,(%rsp)
  0x000000010411d462: callq  0x0000000104102d20  ; OopMap{rax=Oop off=4679}
                                                ;*goto
                                                ; - jdk.VolatileTest::main@48 (line 22)
                                                ;   {runtime_call}
  0x000000010411d467: jmpq   0x000000010411c7e4
  0x000000010411d46c: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010411d476: mov    $0xa050f00,%eax
  0x000000010411d47b: callq  0x0000000104101be0  ; OopMap{[216]=Oop rbx=Oop [208]=Oop off=4704}
                                                ;*new  ; - jdk.VolatileTest::main@54 (line 26)
                                                ;   {runtime_call}
  0x000000010411d480: jmpq   0x000000010411c860
  0x000000010411d485: mov    %rdx,%rdx
  0x000000010411d488: callq  0x00000001040716a0  ; OopMap{rbx=Oop [208]=Oop [216]=Oop off=4717}
                                                ;*new  ; - jdk.VolatileTest::main@54 (line 26)
                                                ;   {runtime_call}
  0x000000010411d48d: jmpq   0x000000010411c86f
  0x000000010411d492: callq  0x0000000104072100  ; OopMap{[216]=Oop [208]=Oop rax=Oop off=4727}
                                                ;*invokevirtual append
                                                ; - jdk.VolatileTest::main@68 (line 26)
                                                ;   {runtime_call}
  0x000000010411d497: callq  0x0000000104072100  ; OopMap{[216]=Oop [208]=Oop rax=Oop off=4732}
                                                ;*invokevirtual toString
                                                ; - jdk.VolatileTest::main@71 (line 26)
                                                ;   {runtime_call}
  0x000000010411d49c: callq  0x0000000104072100  ; OopMap{[216]=Oop rdx=Oop rbx=Oop [208]=Oop off=4737}
                                                ;*invokevirtual println
                                                ; - jdk.VolatileTest::main@74 (line 26)
                                                ;   {runtime_call}
  0x000000010411d4a1: mov    %rax,0x8(%rsp)
  0x000000010411d4a6: movq   $0xffffffffffffffff,(%rsp)
  0x000000010411d4ae: callq  0x0000000104102d20  ; OopMap{[216]=Oop rdx=Oop rbx=Oop [208]=Oop off=4755}
                                                ;*synchronization entry
                                                ; - java.io.PrintStream::println@-1 (line 805)
                                                ; - jdk.VolatileTest::main@74 (line 26)
                                                ;   {runtime_call}
  0x000000010411d4b3: jmpq   0x000000010411cb0a
  0x000000010411d4b8: mov    %rbx,0x8(%rsp)
  0x000000010411d4bd: mov    %rsi,(%rsp)
  0x000000010411d4c1: callq  0x0000000104100ce0  ; OopMap{[216]=Oop rdx=Oop rbx=Oop [208]=Oop [248]=Oop off=4774}
                                                ;*monitorenter
                                                ; - java.io.PrintStream::println@3 (line 805)
                                                ; - jdk.VolatileTest::main@74 (line 26)
                                                ;   {runtime_call}
  0x000000010411d4c6: jmpq   0x000000010411cbd3
  0x000000010411d4cb: mov    %rsi,0x8(%rsp)
  0x000000010411d4d0: movq   $0xffffffffffffffff,(%rsp)
  0x000000010411d4d8: callq  0x0000000104102d20  ; OopMap{[216]=Oop rdx=Oop rbx=Oop [208]=Oop [248]=Oop off=4797}
                                                ;*synchronization entry
                                                ; - java.io.PrintStream::print@-1 (line 666)
                                                ; - java.io.PrintStream::println@6 (line 806)
                                                ; - jdk.VolatileTest::main@74 (line 26)
                                                ;   {runtime_call}
  0x000000010411d4dd: jmpq   0x000000010411cc2b
  0x000000010411d4e2: lea    0xf0(%rsp),%rax
  0x000000010411d4ea: mov    %rax,(%rsp)
  0x000000010411d4ee: callq  0x0000000104101120  ;   {runtime_call}
  0x000000010411d4f3: jmpq   0x000000010411cce8
  0x000000010411d4f8: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010411d502: mov    $0xa050f00,%eax
  0x000000010411d507: callq  0x0000000104101be0  ; OopMap{[216]=Oop rdi=Oop [232]=Oop off=4844}
                                                ;*new  ; - jdk.VolatileTest::main@80 (line 27)
                                                ;   {runtime_call}
  0x000000010411d50c: jmpq   0x000000010411cd18
  0x000000010411d511: mov    %rdx,%rdx
  0x000000010411d514: callq  0x00000001040716a0  ; OopMap{rdi=Oop [232]=Oop [216]=Oop off=4857}
                                                ;*new  ; - jdk.VolatileTest::main@80 (line 27)
                                                ;   {runtime_call}
  0x000000010411d519: jmpq   0x000000010411cd27
  0x000000010411d51e: callq  0x0000000104072100  ; OopMap{[232]=Oop rax=Oop off=4867}
                                                ;*getfield sum
                                                ; - jdk.VolatileTest::main@93 (line 27)
                                                ;   {runtime_call}
  0x000000010411d523: callq  0x0000000104072100  ; OopMap{[232]=Oop rax=Oop off=4872}
                                                ;*invokevirtual append
                                                ; - jdk.VolatileTest::main@96 (line 27)
                                                ;   {runtime_call}
  0x000000010411d528: callq  0x0000000104072100  ; OopMap{[232]=Oop rax=Oop off=4877}
                                                ;*invokevirtual toString
                                                ; - jdk.VolatileTest::main@99 (line 27)
                                                ;   {runtime_call}
  0x000000010411d52d: callq  0x0000000104072100  ; OopMap{rdx=Oop rdi=Oop [232]=Oop off=4882}
                                                ;*invokevirtual println
                                                ; - jdk.VolatileTest::main@102 (line 27)
                                                ;   {runtime_call}
  0x000000010411d532: mov    %rax,0x8(%rsp)
  0x000000010411d537: movq   $0xffffffffffffffff,(%rsp)
  0x000000010411d53f: callq  0x0000000104102d20  ; OopMap{rdx=Oop rdi=Oop [232]=Oop off=4900}
                                                ;*synchronization entry
                                                ; - java.io.PrintStream::println@-1 (line 805)
                                                ; - jdk.VolatileTest::main@102 (line 27)
                                                ;   {runtime_call}
  0x000000010411d544: jmpq   0x000000010411cfca
  0x000000010411d549: mov    %rdi,0x8(%rsp)
  0x000000010411d54e: mov    %rsi,(%rsp)
  0x000000010411d552: callq  0x0000000104100ce0  ; OopMap{rdx=Oop rdi=Oop [232]=Oop [248]=Oop off=4919}
                                                ;*monitorenter
                                                ; - java.io.PrintStream::println@3 (line 805)
                                                ; - jdk.VolatileTest::main@102 (line 27)
                                                ;   {runtime_call}
  0x000000010411d557: jmpq   0x000000010411d093
  0x000000010411d55c: mov    %rsi,0x8(%rsp)
  0x000000010411d561: movq   $0xffffffffffffffff,(%rsp)
  0x000000010411d569: callq  0x0000000104102d20  ; OopMap{rdx=Oop rdi=Oop [232]=Oop [248]=Oop off=4942}
                                                ;*synchronization entry
                                                ; - java.io.PrintStream::print@-1 (line 666)
                                                ; - java.io.PrintStream::println@6 (line 806)
                                                ; - jdk.VolatileTest::main@102 (line 27)
                                                ;   {runtime_call}
  0x000000010411d56e: jmpq   0x000000010411d0eb
  0x000000010411d573: lea    0xf0(%rsp),%rax
  0x000000010411d57b: mov    %rax,(%rsp)
  0x000000010411d57f: callq  0x0000000104101120  ;   {runtime_call}
  0x000000010411d584: jmpq   0x000000010411d1a8
  0x000000010411d589: lea    0xf0(%rsp),%rax
  0x000000010411d591: mov    %rax,(%rsp)
  0x000000010411d595: callq  0x0000000104101120  ;   {runtime_call}
  0x000000010411d59a: jmpq   0x000000010411d219
  0x000000010411d59f: lea    0xf0(%rsp),%rax
  0x000000010411d5a7: mov    %rax,(%rsp)
  0x000000010411d5ab: callq  0x0000000104101120  ;   {runtime_call}
  0x000000010411d5b0: jmpq   0x000000010411d273
  0x000000010411d5b5: lea    0xf0(%rsp),%rax
  0x000000010411d5bd: mov    %rax,(%rsp)
  0x000000010411d5c1: callq  0x0000000104101120  ;   {runtime_call}
  0x000000010411d5c6: jmpq   0x000000010411d2cd
  0x000000010411d5cb: nop
  0x000000010411d5cc: nop
  0x000000010411d5cd: mov    0x2a8(%r15),%rax
  0x000000010411d5d4: movabs $0x0,%r10
  0x000000010411d5de: mov    %r10,0x2a8(%r15)
  0x000000010411d5e5: movabs $0x0,%r10
  0x000000010411d5ef: mov    %r10,0x2b0(%r15)
  0x000000010411d5f6: add    $0x110,%rsp
  0x000000010411d5fd: pop    %rbp
  0x000000010411d5fe: jmpq   0x0000000104072c60  ;   {runtime_call}
  0x000000010411d603: hlt    
  0x000000010411d604: hlt    
  0x000000010411d605: hlt    
  0x000000010411d606: hlt    
  0x000000010411d607: hlt    
  0x000000010411d608: hlt    
  0x000000010411d609: hlt    
  0x000000010411d60a: hlt    
  0x000000010411d60b: hlt    
  0x000000010411d60c: hlt    
  0x000000010411d60d: hlt    
  0x000000010411d60e: hlt    
  0x000000010411d60f: hlt    
  0x000000010411d610: hlt    
  0x000000010411d611: hlt    
  0x000000010411d612: hlt    
  0x000000010411d613: hlt    
  0x000000010411d614: hlt    
  0x000000010411d615: hlt    
  0x000000010411d616: hlt    
  0x000000010411d617: hlt    
  0x000000010411d618: hlt    
  0x000000010411d619: hlt    
  0x000000010411d61a: hlt    
  0x000000010411d61b: hlt    
  0x000000010411d61c: hlt    
  0x000000010411d61d: hlt    
  0x000000010411d61e: hlt    
  0x000000010411d61f: hlt    
[Stub Code]
  0x000000010411d620: nop                       ;   {no_reloc}
  0x000000010411d621: nop
  0x000000010411d622: nop
  0x000000010411d623: nop
  0x000000010411d624: nop
  0x000000010411d625: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010411d62f: jmpq   0x000000010411d62f  ;   {runtime_call}
  0x000000010411d634: nop
  0x000000010411d635: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010411d63f: jmpq   0x000000010411d63f  ;   {runtime_call}
  0x000000010411d644: nop
  0x000000010411d645: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010411d64f: jmpq   0x000000010411d64f  ;   {runtime_call}
  0x000000010411d654: nop
  0x000000010411d655: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010411d65f: jmpq   0x000000010411d65f  ;   {runtime_call}
  0x000000010411d664: nop
  0x000000010411d665: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010411d66f: jmpq   0x000000010411d66f  ;   {runtime_call}
  0x000000010411d674: nop
  0x000000010411d675: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010411d67f: jmpq   0x000000010411d67f  ;   {runtime_call}
  0x000000010411d684: nop
  0x000000010411d685: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010411d68f: jmpq   0x000000010411d68f  ;   {runtime_call}
  0x000000010411d694: nop
  0x000000010411d695: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010411d69f: jmpq   0x000000010411d69f  ;   {runtime_call}
  0x000000010411d6a4: nop
  0x000000010411d6a5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010411d6af: jmpq   0x000000010411d6af  ;   {runtime_call}
  0x000000010411d6b4: nop
  0x000000010411d6b5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010411d6bf: jmpq   0x000000010411d6bf  ;   {runtime_call}
  0x000000010411d6c4: nop
  0x000000010411d6c5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010411d6cf: jmpq   0x000000010411d6cf  ;   {runtime_call}
  0x000000010411d6d4: nop
  0x000000010411d6d5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010411d6df: jmpq   0x000000010411d6df  ;   {runtime_call}
  0x000000010411d6e4: nop
  0x000000010411d6e5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010411d6ef: jmpq   0x000000010411d6ef  ;   {runtime_call}
  0x000000010411d6f4: nop
  0x000000010411d6f5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010411d6ff: jmpq   0x000000010411d6ff  ;   {runtime_call}
[Exception Handler]
  0x000000010411d704: callq  0x0000000104100420  ;   {runtime_call}
  0x000000010411d709: mov    %rsp,-0x28(%rsp)
  0x000000010411d70e: sub    $0x80,%rsp
  0x000000010411d715: mov    %rax,0x78(%rsp)
  0x000000010411d71a: mov    %rcx,0x70(%rsp)
  0x000000010411d71f: mov    %rdx,0x68(%rsp)
  0x000000010411d724: mov    %rbx,0x60(%rsp)
  0x000000010411d729: mov    %rbp,0x50(%rsp)
  0x000000010411d72e: mov    %rsi,0x48(%rsp)
  0x000000010411d733: mov    %rdi,0x40(%rsp)
  0x000000010411d738: mov    %r8,0x38(%rsp)
  0x000000010411d73d: mov    %r9,0x30(%rsp)
  0x000000010411d742: mov    %r10,0x28(%rsp)
  0x000000010411d747: mov    %r11,0x20(%rsp)
  0x000000010411d74c: mov    %r12,0x18(%rsp)
  0x000000010411d751: mov    %r13,0x10(%rsp)
  0x000000010411d756: mov    %r14,0x8(%rsp)
  0x000000010411d75b: mov    %r15,(%rsp)
  0x000000010411d75f: movabs $0x100641684,%rdi  ;   {external_word}
  0x000000010411d769: movabs $0x10411d709,%rsi  ;   {internal_word}
  0x000000010411d773: mov    %rsp,%rdx
  0x000000010411d776: and    $0xfffffffffffffff0,%rsp
  0x000000010411d77a: callq  0x000000010046a1f6  ;   {runtime_call}
  0x000000010411d77f: hlt    
[Deopt Handler Code]
  0x000000010411d780: movabs $0x10411d780,%r10  ;   {section_word}
  0x000000010411d78a: push   %r10
  0x000000010411d78c: jmpq   0x0000000104047500  ;   {runtime_call}
  0x000000010411d791: hlt    
  0x000000010411d792: hlt    
  0x000000010411d793: hlt    
  0x000000010411d794: hlt    
  0x000000010411d795: hlt    
  0x000000010411d796: hlt    
  0x000000010411d797: hlt    
<nmethod compile_id='36' compile_kind='osr' compiler='C1' level='3' entry='0x000000010411c220' size='9544' address='0x000000010411bf10' relocation_offset='296' insts_offset='784' stub_offset='5904' scopes_data_offset='6384' scopes_pcs_offset='7552' dependencies_offset='9264' handler_table_offset='9272' nul_chk_table_offset='9464' oops_offset='6280' method='jdk/VolatileTest main ([Ljava/lang/String;)V' bytes='106' count='1' backedge_count='975227' iicount='1' stamp='0.687'/>
<writer thread='3075'/>
<task_queued compile_id='37' compile_kind='osr' method='jdk/VolatileTest main ([Ljava/lang/String;)V' bytes='106' count='1' backedge_count='978760' iicount='1' osr_bci='29' stamp='0.687' comment='tiered' hot_count='978760'/>
<task_queued compile_id='38' method='java/util/concurrent/ConcurrentHashMap tabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' bytes='21' count='256' iicount='256' level='3' stamp='0.688' comment='tiered' hot_count='256'/>
<writer thread='14851'/>
Decoding compiled method 0x000000010411e490:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000117802dc8} &apos;main&apos; &apos;([Ljava/lang/String;)V&apos; in &apos;jdk/VolatileTest&apos;
  0x000000010411e5e0: callq  0x00000001004ed904  ;   {runtime_call}
  0x000000010411e5e5: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010411e5f0: mov    %eax,-0x14000(%rsp)
  0x000000010411e5f7: push   %rbp
  0x000000010411e5f8: sub    $0x20,%rsp
  0x000000010411e5fc: mov    (%rsi),%ebx
  0x000000010411e5fe: mov    0x10(%rsi),%r14
  0x000000010411e602: mov    0x8(%rsi),%r13d
  0x000000010411e606: mov    %rsi,%rdi
  0x000000010411e609: movabs $0x10054cb52,%r10
  0x000000010411e613: callq  *%r10
  0x000000010411e616: mov    0x8(%r14),%r11d    ; implicit exception: dispatches to 0x000000010411e765
  0x000000010411e61a: cmp    $0xf800c105,%r11d  ;   {metadata(&apos;jdk/VolatileTest&apos;)}
  0x000000010411e621: jne    0x000000010411e749  ;*iload
                                                ; - jdk.VolatileTest::main@29 (line 22)

  0x000000010411e627: movabs $0x795580c78,%rcx  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x000000010411e631: cmp    $0xf4240,%ebx
  0x000000010411e637: jge    0x000000010411e741  ;*if_icmpge
                                                ; - jdk.VolatileTest::main@33 (line 22)

  0x000000010411e63d: mov    0x10(%r14),%rdi    ;*getfield sum
                                                ; - jdk.VolatileTest::add@6 (line 10)
                                                ; - jdk.VolatileTest::main@40 (line 23)

  0x000000010411e641: sub    %ebx,%r13d         ;*iload
                                                ; - jdk.VolatileTest::main@29 (line 22)

  0x000000010411e644: mov    %ebx,%r11d
  0x000000010411e647: inc    %r11d              ;*putfield sum
                                                ; - jdk.VolatileTest::add@12 (line 10)
                                                ; - jdk.VolatileTest::main@40 (line 23)

  0x000000010411e64a: mov    %ebx,%r9d
  0x000000010411e64d: add    %r13d,%r9d
  0x000000010411e650: inc    %r9d               ;*iadd
                                                ; - jdk.VolatileTest::add@2 (line 9)
                                                ; - jdk.VolatileTest::main@40 (line 23)

  0x000000010411e653: movslq %r9d,%r10
  0x000000010411e656: add    %rdi,%r10
  0x000000010411e659: mov    %r10,0x10(%r14)
  0x000000010411e65d: lock addl $0x0,(%rsp)     ;*putfield sum
                                                ; - jdk.VolatileTest::add@12 (line 10)
                                                ; - jdk.VolatileTest::main@40 (line 23)

  0x000000010411e662: mov    0x10(%r14),%rdi    ;*getfield sum
                                                ; - jdk.VolatileTest::add@6 (line 10)
                                                ; - jdk.VolatileTest::main@40 (line 23)

  0x000000010411e666: inc    %ebx               ;*iinc
                                                ; - jdk.VolatileTest::main@45 (line 22)

  0x000000010411e668: cmp    %r11d,%ebx
  0x000000010411e66b: jl     0x000000010411e64a  ;*if_icmpge
                                                ; - jdk.VolatileTest::main@33 (line 22)

  0x000000010411e66d: cmp    $0xf423d,%ebx
  0x000000010411e673: jge    0x000000010411e6f4
  0x000000010411e679: nopl   0x0(%rax)          ;*putfield sum
                                                ; - jdk.VolatileTest::add@12 (line 10)
                                                ; - jdk.VolatileTest::main@40 (line 23)

  0x000000010411e680: mov    %r13d,%r11d
  0x000000010411e683: add    %ebx,%r11d
  0x000000010411e686: mov    %r11d,%r9d
  0x000000010411e689: add    $0x4,%r9d          ;*iadd
                                                ; - jdk.VolatileTest::add@2 (line 9)
                                                ; - jdk.VolatileTest::main@40 (line 23)

  0x000000010411e68d: mov    %r11d,%r10d
  0x000000010411e690: add    $0x3,%r10d
  0x000000010411e694: movslq %r9d,%r8
  0x000000010411e697: movslq %r10d,%rsi
  0x000000010411e69a: mov    %r11d,%edx
  0x000000010411e69d: add    $0x2,%edx
  0x000000010411e6a0: inc    %r11d
  0x000000010411e6a3: movslq %edx,%r10
  0x000000010411e6a6: movslq %r11d,%r11
  0x000000010411e6a9: add    %rdi,%r11
  0x000000010411e6ac: mov    %r11,0x10(%r14)
  0x000000010411e6b0: lock addl $0x0,(%rsp)
  0x000000010411e6b5: mov    0x10(%r14),%r11
  0x000000010411e6b9: add    %r11,%r10
  0x000000010411e6bc: mov    %r10,0x10(%r14)
  0x000000010411e6c0: lock addl $0x0,(%rsp)
  0x000000010411e6c5: mov    0x10(%r14),%r10
  0x000000010411e6c9: add    %r10,%rsi
  0x000000010411e6cc: mov    %rsi,0x10(%r14)
  0x000000010411e6d0: lock addl $0x0,(%rsp)
  0x000000010411e6d5: mov    0x10(%r14),%r10
  0x000000010411e6d9: add    %r10,%r8
  0x000000010411e6dc: mov    %r8,0x10(%r14)
  0x000000010411e6e0: lock addl $0x0,(%rsp)     ;*putfield sum
                                                ; - jdk.VolatileTest::add@12 (line 10)
                                                ; - jdk.VolatileTest::main@40 (line 23)

  0x000000010411e6e5: mov    0x10(%r14),%rdi    ;*getfield sum
                                                ; - jdk.VolatileTest::add@6 (line 10)
                                                ; - jdk.VolatileTest::main@40 (line 23)

  0x000000010411e6e9: add    $0x4,%ebx          ;*iinc
                                                ; - jdk.VolatileTest::main@45 (line 22)

  0x000000010411e6ec: cmp    $0xf423d,%ebx
  0x000000010411e6f2: jl     0x000000010411e680  ;*if_icmpge
                                                ; - jdk.VolatileTest::main@33 (line 22)

  0x000000010411e6f4: cmp    $0xf4240,%ebx
  0x000000010411e6fa: jge    0x000000010411e726
  0x000000010411e6fc: jmp    0x000000010411e704
  0x000000010411e6fe: xchg   %ax,%ax
  0x000000010411e700: mov    0x10(%r14),%rdi    ;*putfield sum
                                                ; - jdk.VolatileTest::add@12 (line 10)
                                                ; - jdk.VolatileTest::main@40 (line 23)

  0x000000010411e704: mov    %ebx,%r9d
  0x000000010411e707: add    %r13d,%r9d
  0x000000010411e70a: inc    %r9d               ;*iadd
                                                ; - jdk.VolatileTest::add@2 (line 9)
                                                ; - jdk.VolatileTest::main@40 (line 23)

  0x000000010411e70d: movslq %r9d,%r10
  0x000000010411e710: add    %rdi,%r10
  0x000000010411e713: mov    %r10,0x10(%r14)
  0x000000010411e717: lock addl $0x0,(%rsp)     ;*putfield sum
                                                ; - jdk.VolatileTest::add@12 (line 10)
                                                ; - jdk.VolatileTest::main@40 (line 23)

  0x000000010411e71c: inc    %ebx               ;*iinc
                                                ; - jdk.VolatileTest::main@45 (line 22)

  0x000000010411e71e: cmp    $0xf4240,%ebx
  0x000000010411e724: jl     0x000000010411e700
  0x000000010411e726: mov    0x6c(%rcx),%ebp    ;*if_icmpge
                                                ; - jdk.VolatileTest::main@33 (line 22)

  0x000000010411e729: mov    $0x9,%esi
  0x000000010411e72e: mov    %r14,(%rsp)
  0x000000010411e732: mov    %r9d,0x8(%rsp)
  0x000000010411e737: callq  0x00000001040456a0  ; OopMap{rbp=NarrowOop [0]=Oop off=348}
                                                ;*new  ; - jdk.VolatileTest::main@54 (line 26)
                                                ;   {runtime_call}
  0x000000010411e73c: callq  0x00000001004ed904  ;*new
                                                ; - jdk.VolatileTest::main@54 (line 26)
                                                ;   {runtime_call}
  0x000000010411e741: mov    0x6c(%rcx),%ebp    ;*getstatic out
                                                ; - jdk.VolatileTest::main@51 (line 26)

  0x000000010411e744: mov    %r13d,%r9d
  0x000000010411e747: jmp    0x000000010411e729
  0x000000010411e749: mov    $0xffffff9d,%esi
  0x000000010411e74e: mov    %r14,%rbp
  0x000000010411e751: mov    %r13d,(%rsp)
  0x000000010411e755: mov    %ebx,0x4(%rsp)
  0x000000010411e759: xchg   %ax,%ax
  0x000000010411e75b: callq  0x00000001040456a0  ; OopMap{rbp=Oop off=384}
                                                ;*iload
                                                ; - jdk.VolatileTest::main@29 (line 22)
                                                ;   {runtime_call}
  0x000000010411e760: callq  0x00000001004ed904  ;   {runtime_call}
  0x000000010411e765: mov    $0xffffff86,%esi
  0x000000010411e76a: mov    %r13d,%ebp
  0x000000010411e76d: mov    %ebx,(%rsp)
  0x000000010411e770: data16 xchg %ax,%ax
  0x000000010411e773: callq  0x00000001040456a0  ; OopMap{off=408}
                                                ;*iload
                                                ; - jdk.VolatileTest::main@29 (line 22)
                                                ;   {runtime_call}
  0x000000010411e778: callq  0x00000001004ed904  ;*iload
                                                ; - jdk.VolatileTest::main@29 (line 22)
                                                ;   {runtime_call}
  0x000000010411e77d: hlt    
  0x000000010411e77e: hlt    
  0x000000010411e77f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010411e780: jmpq   0x000000010406eda0  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010411e785: callq  0x000000010411e78a
  0x000000010411e78a: subq   $0x5,(%rsp)
  0x000000010411e78f: jmpq   0x0000000104047500  ;   {runtime_call}
  0x000000010411e794: hlt    
  0x000000010411e795: hlt    
  0x000000010411e796: hlt    
  0x000000010411e797: hlt    
<nmethod compile_id='37' compile_kind='osr' compiler='C2' level='4' entry='0x000000010411e5e0' size='1416' address='0x000000010411e490' relocation_offset='296' insts_offset='336' stub_offset='752' scopes_data_offset='808' scopes_pcs_offset='928' dependencies_offset='1392' nul_chk_table_offset='1400' oops_offset='776' method='jdk/VolatileTest main ([Ljava/lang/String;)V' bytes='106' count='1' backedge_count='1000000' iicount='1' stamp='0.700'/>
<make_not_entrant thread='14851' compile_id='36' compile_kind='osr' compiler='C1' level='3' stamp='0.700'/>
<writer thread='3075'/>
Decoding compiled method 0x0000000104117150:
Code:
[Entry Point]
  # {method} {0x0000000117480c40} &apos;getObjectVolatile&apos; &apos;(Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;sun/misc/Unsafe&apos;
  # this:     rsi:rsi   = &apos;sun/misc/Unsafe&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    rcx:rcx   = long
  #           [sp+0x50]  (sp of caller)
  0x00000001041172c0: mov    0x8(%rsi),%r10d
  0x00000001041172c4: shl    $0x3,%r10
  0x00000001041172c8: cmp    %r10,%rax
  0x00000001041172cb: je     0x00000001041172d8
  0x00000001041172d1: jmpq   0x0000000104045e60  ;   {runtime_call}
  0x00000001041172d6: xchg   %ax,%ax
[Verified Entry Point]
  0x00000001041172d8: mov    %eax,-0x14000(%rsp)
  0x00000001041172df: push   %rbp
  0x00000001041172e0: mov    %rsp,%rbp
  0x00000001041172e3: sub    $0x40,%rsp
  0x00000001041172e7: mov    %rdx,0x8(%rsp)
  0x00000001041172ec: cmp    $0x0,%rdx
  0x00000001041172f0: lea    0x8(%rsp),%rdx
  0x00000001041172f5: cmove  0x8(%rsp),%rdx
  0x00000001041172fb: mov    %rsi,(%rsp)
  0x00000001041172ff: cmp    $0x0,%rsi
  0x0000000104117303: lea    (%rsp),%rsi
  0x0000000104117307: cmove  (%rsp),%rsi        ; OopMap{[8]=Oop [0]=Oop off=76}
  0x000000010411730c: movabs $0x10411730c,%r10  ;   {section_word}
  0x0000000104117316: mov    %r10,0x1e0(%r15)
  0x000000010411731d: mov    %rsp,0x1d8(%r15)
  0x0000000104117324: cmpb   $0x0,-0x37c1f71(%rip)        # 0x00000001009553ba
                                                ;   {external_word}
  0x000000010411732b: je     0x0000000104117367
  0x0000000104117331: push   %rsi
  0x0000000104117332: push   %rdx
  0x0000000104117333: push   %rcx
  0x0000000104117334: movabs $0x117480c40,%rsi  ;   {metadata({method} {0x0000000117480c40} &apos;getObjectVolatile&apos; &apos;(Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;sun/misc/Unsafe&apos;)}
  0x000000010411733e: mov    %r15,%rdi
  0x0000000104117341: test   $0xf,%esp
  0x0000000104117347: je     0x000000010411735f
  0x000000010411734d: sub    $0x8,%rsp
  0x0000000104117351: callq  0x0000000100550064  ;   {runtime_call}
  0x0000000104117356: add    $0x8,%rsp
  0x000000010411735a: jmpq   0x0000000104117364
  0x000000010411735f: callq  0x0000000100550064  ;   {runtime_call}
  0x0000000104117364: pop    %rcx
  0x0000000104117365: pop    %rdx
  0x0000000104117366: pop    %rsi
  0x0000000104117367: lea    0x1f8(%r15),%rdi
  0x000000010411736e: movl   $0x4,0x270(%r15)
  0x0000000104117379: callq  0x00000001005e7adf  ;   {runtime_call}
  0x000000010411737e: vzeroupper 
  0x0000000104117381: movl   $0x5,0x270(%r15)
  0x000000010411738c: lock addl $0x0,(%rsp)
  0x0000000104117391: cmpl   $0x0,-0x37b762b(%rip)        # 0x000000010095fd70
                                                ;   {external_word}
  0x000000010411739b: jne    0x00000001041173af
  0x00000001041173a1: cmpl   $0x0,0x30(%r15)
  0x00000001041173a9: je     0x00000001041173d0
  0x00000001041173af: mov    %rax,-0x8(%rbp)
  0x00000001041173b3: mov    %r15,%rdi
  0x00000001041173b6: mov    %rsp,%r12
  0x00000001041173b9: sub    $0x0,%rsp
  0x00000001041173bd: and    $0xfffffffffffffff0,%rsp
  0x00000001041173c1: callq  0x00000001005d2e1e  ;   {runtime_call}
  0x00000001041173c6: mov    %r12,%rsp
  0x00000001041173c9: xor    %r12,%r12
  0x00000001041173cc: mov    -0x8(%rbp),%rax
  0x00000001041173d0: movl   $0x8,0x270(%r15)
  0x00000001041173db: cmpl   $0x1,0x29c(%r15)
  0x00000001041173e6: je     0x0000000104117482
  0x00000001041173ec: cmpb   $0x0,-0x37c2039(%rip)        # 0x00000001009553ba
                                                ;   {external_word}
  0x00000001041173f3: je     0x0000000104117431
  0x00000001041173f9: mov    %rax,-0x8(%rbp)
  0x00000001041173fd: movabs $0x117480c40,%rsi  ;   {metadata({method} {0x0000000117480c40} &apos;getObjectVolatile&apos; &apos;(Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;sun/misc/Unsafe&apos;)}
  0x0000000104117407: mov    %r15,%rdi
  0x000000010411740a: test   $0xf,%esp
  0x0000000104117410: je     0x0000000104117428
  0x0000000104117416: sub    $0x8,%rsp
  0x000000010411741a: callq  0x000000010054ffd6  ;   {runtime_call}
  0x000000010411741f: add    $0x8,%rsp
  0x0000000104117423: jmpq   0x000000010411742d
  0x0000000104117428: callq  0x000000010054ffd6  ;   {runtime_call}
  0x000000010411742d: mov    -0x8(%rbp),%rax
  0x0000000104117431: movabs $0x0,%r10
  0x000000010411743b: mov    %r10,0x1d8(%r15)
  0x0000000104117442: movabs $0x0,%r10
  0x000000010411744c: mov    %r10,0x1e0(%r15)
  0x0000000104117453: test   %rax,%rax
  0x0000000104117456: je     0x000000010411745f
  0x000000010411745c: mov    (%rax),%rax
  0x000000010411745f: mov    0x38(%r15),%rcx
  0x0000000104117463: movl   $0x0,0x100(%rcx)
  0x000000010411746d: leaveq 
  0x000000010411746e: cmpq   $0x0,0x8(%r15)
  0x0000000104117476: jne    0x000000010411747d
  0x000000010411747c: retq   
  0x000000010411747d: jmpq   Stub::forward exception  ;   {runtime_call}
  0x0000000104117482: mov    %rax,-0x8(%rbp)
  0x0000000104117486: mov    %rsp,%r12
  0x0000000104117489: sub    $0x0,%rsp
  0x000000010411748d: and    $0xfffffffffffffff0,%rsp
  0x0000000104117491: callq  0x000000010054dd1c  ;   {runtime_call}
  0x0000000104117496: mov    %r12,%rsp
  0x0000000104117499: xor    %r12,%r12
  0x000000010411749c: mov    -0x8(%rbp),%rax
  0x00000001041174a0: jmpq   0x00000001041173ec
  0x00000001041174a5: hlt    
  0x00000001041174a6: hlt    
  0x00000001041174a7: hlt    
<nmethod compile_id='39' compile_kind='c2n' level='0' entry='0x00000001041172c0' size='856' address='0x0000000104117150' relocation_offset='296' consts_offset='856' insts_offset='368' method='sun/misc/Unsafe getObjectVolatile (Ljava/lang/Object;J)Ljava/lang/Object;' bytes='0' count='256' iicount='256' stamp='0.706'/>
<writer thread='17155'/>
Decoding compiled method 0x0000000104118b50:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000001175b0568} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;
  # parm0:    rsi:rsi   = &apos;[Ljava/util/concurrent/ConcurrentHashMap$Node;&apos;
  # parm1:    rdx       = int
  #           [sp+0x50]  (sp of caller)
  0x0000000104118cc0: mov    %eax,-0x14000(%rsp)
  0x0000000104118cc7: push   %rbp
  0x0000000104118cc8: sub    $0x40,%rsp
  0x0000000104118ccc: movabs $0x1176c26e8,%rcx  ;   {metadata(method data for {method} {0x00000001175b0568} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x0000000104118cd6: mov    0xdc(%rcx),%eax
  0x0000000104118cdc: add    $0x8,%eax
  0x0000000104118cdf: mov    %eax,0xdc(%rcx)
  0x0000000104118ce5: movabs $0x1175b0568,%rcx  ;   {metadata({method} {0x00000001175b0568} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x0000000104118cef: and    $0x1ff8,%eax
  0x0000000104118cf5: cmp    $0x0,%eax
  0x0000000104118cf8: je     0x0000000104118e09  ;*getstatic U
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@0 (line 755)

  0x0000000104118cfe: movslq %edx,%rdx
  0x0000000104118d01: mov    $0x2,%ecx
  0x0000000104118d06: shl    %cl,%rdx
  0x0000000104118d09: movabs $0x10,%r10
  0x0000000104118d13: add    %r10,%rdx
  0x0000000104118d16: mov    (%rsi,%rdx,1),%eax
  0x0000000104118d19: shl    $0x3,%rax
  0x0000000104118d1d: cmp    $0x0,%rax
  0x0000000104118d21: jne    0x0000000104118d3c
  0x0000000104118d23: movabs $0x1176c26e8,%rdi  ;   {metadata(method data for {method} {0x00000001175b0568} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x0000000104118d2d: orl    $0x100,0x130(%rdi)
  0x0000000104118d37: jmpq   0x0000000104118dfd
  0x0000000104118d3c: movabs $0x7c0035040,%rbx  ;   {metadata(&apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x0000000104118d46: mov    0x8(%rax),%edi
  0x0000000104118d49: shl    $0x3,%rdi
  0x0000000104118d4d: cmp    0x30(%rdi),%rbx
  0x0000000104118d51: jne    0x0000000104118de1
  0x0000000104118d57: movabs $0x1176c26e8,%rdi  ;   {metadata(method data for {method} {0x00000001175b0568} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x0000000104118d61: mov    0x8(%rax),%ebx
  0x0000000104118d64: shl    $0x3,%rbx
  0x0000000104118d68: cmp    0x140(%rdi),%rbx
  0x0000000104118d6f: jne    0x0000000104118d7e
  0x0000000104118d71: addq   $0x1,0x148(%rdi)
  0x0000000104118d79: jmpq   0x0000000104118dfd
  0x0000000104118d7e: cmp    0x150(%rdi),%rbx
  0x0000000104118d85: jne    0x0000000104118d94
  0x0000000104118d87: addq   $0x1,0x158(%rdi)
  0x0000000104118d8f: jmpq   0x0000000104118dfd
  0x0000000104118d94: cmpq   $0x0,0x140(%rdi)
  0x0000000104118d9f: jne    0x0000000104118db8
  0x0000000104118da1: mov    %rbx,0x140(%rdi)
  0x0000000104118da8: movq   $0x1,0x148(%rdi)
  0x0000000104118db3: jmpq   0x0000000104118dfd
  0x0000000104118db8: cmpq   $0x0,0x150(%rdi)
  0x0000000104118dc3: jne    0x0000000104118ddc
  0x0000000104118dc5: mov    %rbx,0x150(%rdi)
  0x0000000104118dcc: movq   $0x1,0x158(%rdi)
  0x0000000104118dd7: jmpq   0x0000000104118dfd
  0x0000000104118ddc: jmpq   0x0000000104118dfd
  0x0000000104118de1: movabs $0x1176c26e8,%rdi  ;   {metadata(method data for {method} {0x00000001175b0568} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x0000000104118deb: subq   $0x1,0x138(%rdi)
  0x0000000104118df3: jmpq   0x0000000104118e20
  0x0000000104118df8: jmpq   0x0000000104118dfd  ;*checkcast
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@17 (line 755)

  0x0000000104118dfd: add    $0x40,%rsp
  0x0000000104118e01: pop    %rbp
  0x0000000104118e02: test   %eax,-0x30b8d08(%rip)        # 0x0000000101060100
                                                ;   {poll_return}
  0x0000000104118e08: retq   
  0x0000000104118e09: mov    %rcx,0x8(%rsp)
  0x0000000104118e0e: movq   $0xffffffffffffffff,(%rsp)
  0x0000000104118e16: callq  0x0000000104102d20  ; OopMap{rsi=Oop off=347}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@-1 (line 755)
                                                ;   {runtime_call}
  0x0000000104118e1b: jmpq   0x0000000104118cfe
  0x0000000104118e20: mov    %rax,(%rsp)
  0x0000000104118e24: callq  0x0000000104100780  ; OopMap{off=361}
                                                ;*checkcast
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@17 (line 755)
                                                ;   {runtime_call}
  0x0000000104118e29: nop
  0x0000000104118e2a: nop
  0x0000000104118e2b: mov    0x2a8(%r15),%rax
  0x0000000104118e32: movabs $0x0,%r10
  0x0000000104118e3c: mov    %r10,0x2a8(%r15)
  0x0000000104118e43: movabs $0x0,%r10
  0x0000000104118e4d: mov    %r10,0x2b0(%r15)
  0x0000000104118e54: add    $0x40,%rsp
  0x0000000104118e58: pop    %rbp
  0x0000000104118e59: jmpq   0x0000000104072c60  ;   {runtime_call}
  0x0000000104118e5e: hlt    
  0x0000000104118e5f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000104118e60: callq  0x0000000104100420  ;   {no_reloc}
  0x0000000104118e65: mov    %rsp,-0x28(%rsp)
  0x0000000104118e6a: sub    $0x80,%rsp
  0x0000000104118e71: mov    %rax,0x78(%rsp)
  0x0000000104118e76: mov    %rcx,0x70(%rsp)
  0x0000000104118e7b: mov    %rdx,0x68(%rsp)
  0x0000000104118e80: mov    %rbx,0x60(%rsp)
  0x0000000104118e85: mov    %rbp,0x50(%rsp)
  0x0000000104118e8a: mov    %rsi,0x48(%rsp)
  0x0000000104118e8f: mov    %rdi,0x40(%rsp)
  0x0000000104118e94: mov    %r8,0x38(%rsp)
  0x0000000104118e99: mov    %r9,0x30(%rsp)
  0x0000000104118e9e: mov    %r10,0x28(%rsp)
  0x0000000104118ea3: mov    %r11,0x20(%rsp)
  0x0000000104118ea8: mov    %r12,0x18(%rsp)
  0x0000000104118ead: mov    %r13,0x10(%rsp)
  0x0000000104118eb2: mov    %r14,0x8(%rsp)
  0x0000000104118eb7: mov    %r15,(%rsp)
  0x0000000104118ebb: movabs $0x100641684,%rdi  ;   {external_word}
  0x0000000104118ec5: movabs $0x104118e65,%rsi  ;   {internal_word}
  0x0000000104118ecf: mov    %rsp,%rdx
  0x0000000104118ed2: and    $0xfffffffffffffff0,%rsp
  0x0000000104118ed6: callq  0x000000010046a1f6  ;   {runtime_call}
  0x0000000104118edb: hlt    
[Deopt Handler Code]
  0x0000000104118edc: movabs $0x104118edc,%r10  ;   {section_word}
  0x0000000104118ee6: push   %r10
  0x0000000104118ee8: jmpq   0x0000000104047500  ;   {runtime_call}
  0x0000000104118eed: hlt    
  0x0000000104118eee: hlt    
  0x0000000104118eef: hlt    
<nmethod compile_id='38' compiler='C1' level='3' entry='0x0000000104118cc0' size='1080' address='0x0000000104118b50' relocation_offset='296' insts_offset='368' stub_offset='784' scopes_data_offset='936' scopes_pcs_offset='976' dependencies_offset='1072' method='java/util/concurrent/ConcurrentHashMap tabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' bytes='21' count='382' iicount='382' stamp='0.709'/>
<writer thread='3075'/>
<task_queued compile_id='40' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='2176' iicount='2176' level='3' stamp='0.709' comment='tiered' hot_count='2176'/>
<task_queued compile_id='41' method='java/nio/Buffer position ()I' bytes='5' count='128' iicount='128' level='1' stamp='0.709' comment='tiered' hot_count='128'/>
[Loaded java.lang.Shutdown from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='17155'/>
Decoding compiled method 0x00000001041182d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000001174754e0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rsi:rsi   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    rdx       = int
  #           [sp+0xb0]  (sp of caller)
  0x0000000104118460: mov    0x8(%rsi),%r10d
  0x0000000104118464: shl    $0x3,%r10
  0x0000000104118468: cmp    %rax,%r10
  0x000000010411846b: jne    0x0000000104045e60  ;   {runtime_call}
  0x0000000104118471: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010411847c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000104118480: mov    %eax,-0x14000(%rsp)
  0x0000000104118487: push   %rbp
  0x0000000104118488: sub    $0xa0,%rsp
  0x000000010411848f: movabs $0x117615878,%rdi  ;   {metadata(method data for {method} {0x00000001174754e0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000104118499: mov    0xdc(%rdi),%ebx
  0x000000010411849f: add    $0x8,%ebx
  0x00000001041184a2: mov    %ebx,0xdc(%rdi)
  0x00000001041184a8: movabs $0x1174754e0,%rdi  ;   {metadata({method} {0x00000001174754e0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000001041184b2: and    $0x1ff8,%ebx
  0x00000001041184b8: cmp    $0x0,%ebx
  0x00000001041184bb: je     0x000000010411876f  ;*iload_1
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@0 (line 123)

  0x00000001041184c1: mov    0x10(%rsi),%edi
  0x00000001041184c4: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)

  0x00000001041184c8: mov    0xc(%rdi),%ebx     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; implicit exception: dispatches to 0x0000000104118786
  0x00000001041184cb: mov    %rdx,%rax
  0x00000001041184ce: sub    %ebx,%eax
  0x00000001041184d0: cmp    $0x0,%eax
  0x00000001041184d3: movabs $0x117615878,%rax  
<writer thread='3075'/>
[Loaded java.lang.Shutdown$Lock from /Library/Java/JavaVirtualMachines/jdk1.8.0_212.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='17155'/>
;   {metadata(method data for {method} {0x00000001174754e0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000001041184dd: movabs $0x108,%rcx
  0x00000001041184e7: jle    0x00000001041184f7
  0x00000001041184ed: movabs $0x118,%rcx
  0x00000001041184f7: mov    (%rax,%rcx,1),%r8
  0x00000001041184fb: lea    0x1(%r8),%r8
  0x00000001041184ff: mov    %r8,(%rax,%rcx,1)
  0x0000000104118503: jle    0x0000000104118760  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)

  0x0000000104118509: mov    %ebx,0x78(%rsp)
  0x000000010411850d: mov    %rdi,0x80(%rsp)
  0x0000000104118515: mov    %rsi,%rax
  0x0000000104118518: movabs $0x117615878,%rcx  ;   {metadata(method data for {method} {0x00000001174754e0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000104118522: addq   $0x1,0x128(%rcx)
  0x000000010411852a: mov    %rsi,%rax
  0x000000010411852d: mov    %rax,%rsi          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x0000000104118530: mov    %rax,0x88(%rsp)
  0x0000000104118538: nop
  0x0000000104118539: nop
  0x000000010411853a: nop
  0x000000010411853b: nop
  0x000000010411853c: nop
  0x000000010411853d: nop
  0x000000010411853e: nop
  0x000000010411853f: callq  0x00000001040460a0  ; OopMap{[128]=Oop [136]=Oop off=228}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ;   {optimized virtual_call}
  0x0000000104118544: mov    %rax,%r8           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x0000000104118547: movabs $0x117615878,%rbx  ;   {metadata(method data for {method} {0x00000001174754e0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000104118551: addq   $0x1,0x138(%rbx)
  0x0000000104118559: movabs $0x117627690,%rbx  ;   {metadata(method data for {method} {0x000000011751af20} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000104118563: mov    0xdc(%rbx),%edx
  0x0000000104118569: add    $0x8,%edx
  0x000000010411856c: mov    %edx,0xdc(%rbx)
  0x0000000104118572: movabs $0x11751af20,%rbx  ;   {metadata({method} {0x000000011751af20} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000010411857c: and    $0x7ffff8,%edx
  0x0000000104118582: cmp    $0x0,%edx
  0x0000000104118585: je     0x000000010411878b
  0x000000010411858b: mov    %r8,%rbx
  0x000000010411858e: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000104118598: movslq %ebx,%rbx
  0x000000010411859b: mov    %rbx,%rdi
  0x000000010411859e: cmp    $0xffffff,%rbx
  0x00000001041185a5: ja     0x00000001041187a2
  0x00000001041185ab: movabs $0x17,%rsi
  0x00000001041185b5: lea    (%rsi,%rbx,2),%rsi
  0x00000001041185b9: and    $0xfffffffffffffff8,%rsi
  0x00000001041185bd: mov    0x60(%r15),%rax
  0x00000001041185c1: lea    (%rax,%rsi,1),%rsi
  0x00000001041185c5: cmp    0x70(%r15),%rsi
  0x00000001041185c9: ja     0x00000001041187a2
  0x00000001041185cf: mov    %rsi,0x60(%r15)
  0x00000001041185d3: sub    %rax,%rsi
  0x00000001041185d6: movq   $0x1,(%rax)
  0x00000001041185dd: mov    %rdx,%rcx
  0x00000001041185e0: shr    $0x3,%rcx
  0x00000001041185e4: mov    %ecx,0x8(%rax)
  0x00000001041185e7: mov    %ebx,0xc(%rax)
  0x00000001041185ea: sub    $0x10,%rsi
  0x00000001041185ee: je     0x0000000104118605
  0x00000001041185f4: xor    %rbx,%rbx
  0x00000001041185f7: shr    $0x3,%rsi
  0x00000001041185fb: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000104118600: dec    %rsi
  0x0000000104118603: jne    0x00000001041185fb  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000000104118605: movabs $0x117627690,%rsi  ;   {metadata(method data for {method} {0x000000011751af20} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000010411860f: addq   $0x1,0x108(%rsi)
  0x0000000104118617: movabs $0x1175ca708,%rsi  ;   {metadata(method data for {method} {0x00000001174f67d8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000104118621: mov    0xdc(%rsi),%edx
  0x0000000104118627: add    $0x8,%edx
  0x000000010411862a: mov    %edx,0xdc(%rsi)
  0x0000000104118630: movabs $0x1174f67d8,%rsi  ;   {metadata({method} {0x00000001174f67d8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000010411863a: and    $0x7ffff8,%edx
  0x0000000104118640: cmp    $0x0,%edx
  0x0000000104118643: je     0x00000001041187ac
  0x0000000104118649: mov    0x78(%rsp),%ebx
  0x000000010411864d: cmp    %r8d,%ebx
  0x0000000104118650: movabs $0x1175ca708,%rsi  ;   {metadata(method data for {method} {0x00000001174f67d8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000010411865a: movabs $0x108,%rdx
  0x0000000104118664: jg     0x0000000104118674
  0x000000010411866a: movabs $0x118,%rdx
  0x0000000104118674: mov    (%rsi,%rdx,1),%rcx
  0x0000000104118678: lea    0x1(%rcx),%rcx
  0x000000010411867c: mov    %rcx,(%rsi,%rdx,1)
  0x0000000104118680: jg     0x000000010411869b  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000000104118686: movabs $0x1175ca708,%rsi  ;   {metadata(method data for {method} {0x00000001174f67d8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000104118690: incl   0x128(%rsi)
  0x0000000104118696: jmpq   0x000000010411869e  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x000000010411869b: mov    %r8,%rbx           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x000000010411869e: mov    0x80(%rsp),%rdi
  0x00000001041186a6: movabs $0x117627690,%rsi  ;   {metadata(method data for {method} {0x000000011751af20} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00000001041186b0: addq   $0x1,0x118(%rsi)
  0x00000001041186b8: mov    %rdi,%rsi
  0x00000001041186bb: mov    $0x0,%edx
  0x00000001041186c0: mov    %rax,%rcx
  0x00000001041186c3: mov    $0x0,%r8d
  0x00000001041186c9: mov    %rbx,%r9
  0x00000001041186cc: mov    %rax,0x90(%rsp)
  0x00000001041186d4: lea    (%rdx,%r9,1),%rdi
  0x00000001041186d8: cmp    0xc(%rsi),%edi
  0x00000001041186db: ja     0x00000001041187c3
  0x00000001041186e1: lea    (%r8,%r9,1),%rdi
  0x00000001041186e5: cmp    0xc(%rcx),%edi
  0x00000001041186e8: ja     0x00000001041187c3
  0x00000001041186ee: test   %r9d,%r9d
  0x00000001041186f1: jl     0x00000001041187c3
  0x00000001041186f7: je     0x0000000104118733
  0x00000001041186fd: movslq %edx,%rdx
  0x0000000104118700: movslq %r8d,%r8
  0x0000000104118703: lea    0x10(%rsi,%rdx,2),%rdi
  0x0000000104118708: lea    0x10(%rcx,%r8,2),%rsi
  0x000000010411870d: mov    %r9,%rdx
  0x0000000104118710: test   $0xf,%esp
  0x0000000104118716: je     0x000000010411872e
  0x000000010411871c: sub    $0x8,%rsp
  0x0000000104118720: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000104118725: add    $0x8,%rsp
  0x0000000104118729: jmpq   0x0000000104118733
  0x000000010411872e: callq  Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x0000000104118733: mov    0x90(%rsp),%rax
  0x000000010411873b: mov    0x88(%rsp),%rsi
  0x0000000104118743: mov    %rax,%r10
  0x0000000104118746: shr    $0x3,%r10
  0x000000010411874a: mov    %r10d,0x10(%rsi)
  0x000000010411874e: shr    $0x9,%rsi
  0x0000000104118752: movabs $0xfda96000,%rdi
  0x000000010411875c: movb   $0x0,(%rsi,%rdi,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)

  0x0000000104118760: add    $0xa0,%rsp
  0x0000000104118767: pop    %rbp
  0x0000000104118768: test   %eax,-0x30b866e(%rip)        # 0x0000000101060100
                                                ;   {poll_return}
  0x000000010411876e: retq   
  0x000000010411876f: mov    %rdi,0x8(%rsp)
  0x0000000104118774: movq   $0xffffffffffffffff,(%rsp)
  0x000000010411877c: callq  0x0000000104102d20  ; OopMap{rsi=Oop off=801}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ;   {runtime_call}
  0x0000000104118781: jmpq   0x00000001041184c1
  0x0000000104118786: callq  0x0000000104072100  ; OopMap{rsi=Oop rdi=Oop off=811}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ;   {runtime_call}
  0x000000010411878b: mov    %rbx,0x8(%rsp)
  0x0000000104118790: movq   $0xffffffffffffffff,(%rsp)
  0x0000000104118798: callq  0x0000000104102d20  ; OopMap{[128]=Oop [136]=Oop off=829}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x000000010411879d: jmpq   0x000000010411858b
  0x00000001041187a2: callq  0x0000000104070920  ; OopMap{[128]=Oop [136]=Oop off=839}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x00000001041187a7: jmpq   0x0000000104118605
  0x00000001041187ac: mov    %rsi,0x8(%rsp)
  0x00000001041187b1: movq   $0xffffffffffffffff,(%rsp)
  0x00000001041187b9: callq  0x0000000104102d20  ; OopMap{[128]=Oop [136]=Oop rax=Oop off=862}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x00000001041187be: jmpq   0x0000000104118649
  0x00000001041187c3: nop
  0x00000001041187c4: nop
  0x00000001041187c5: nop
  0x00000001041187c6: nop
  0x00000001041187c7: callq  0x0000000104046520  ; OopMap{[136]=Oop [144]=Oop off=876}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {static_call}
  0x00000001041187cc: jmpq   0x0000000104118733
  0x00000001041187d1: nop
  0x00000001041187d2: nop
  0x00000001041187d3: mov    0x2a8(%r15),%rax
  0x00000001041187da: movabs $0x0,%r10
  0x00000001041187e4: mov    %r10,0x2a8(%r15)
  0x00000001041187eb: movabs $0x0,%r10
  0x00000001041187f5: mov    %r10,0x2b0(%r15)
  0x00000001041187fc: add    $0xa0,%rsp
  0x0000000104118803: pop    %rbp
  0x0000000104118804: jmpq   0x0000000104072c60  ;   {runtime_call}
  0x0000000104118809: hlt    
  0x000000010411880a: hlt    
  0x000000010411880b: hlt    
  0x000000010411880c: hlt    
  0x000000010411880d: hlt    
  0x000000010411880e: hlt    
  0x000000010411880f: hlt    
  0x0000000104118810: hlt    
  0x0000000104118811: hlt    
  0x0000000104118812: hlt    
  0x0000000104118813: hlt    
  0x0000000104118814: hlt    
  0x0000000104118815: hlt    
  0x0000000104118816: hlt    
  0x0000000104118817: hlt    
  0x0000000104118818: hlt    
  0x0000000104118819: hlt    
  0x000000010411881a: hlt    
  0x000000010411881b: hlt    
  0x000000010411881c: hlt    
  0x000000010411881d: hlt    
  0x000000010411881e: hlt    
  0x000000010411881f: hlt    
[Stub Code]
  0x0000000104118820: nop                       ;   {no_reloc}
  0x0000000104118821: nop
  0x0000000104118822: nop
  0x0000000104118823: nop
  0x0000000104118824: nop
  0x0000000104118825: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010411882f: jmpq   0x000000010411882f  ;   {runtime_call}
  0x0000000104118834: nop
  0x0000000104118835: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010411883f: jmpq   0x000000010411883f  ;   {runtime_call}
[Exception Handler]
  0x0000000104118844: callq  0x0000000104100420  ;   {runtime_call}
  0x0000000104118849: mov    %rsp,-0x28(%rsp)
  0x000000010411884e: sub    $0x80,%rsp
  0x0000000104118855: mov    %rax,0x78(%rsp)
  0x000000010411885a: mov    %rcx,0x70(%rsp)
  0x000000010411885f: mov    %rdx,0x68(%rsp)
  0x0000000104118864: mov    %rbx,0x60(%rsp)
  0x0000000104118869: mov    %rbp,0x50(%rsp)
  0x000000010411886e: mov    %rsi,0x48(%rsp)
  0x0000000104118873: mov    %rdi,0x40(%rsp)
  0x0000000104118878: mov    %r8,0x38(%rsp)
  0x000000010411887d: mov    %r9,0x30(%rsp)
  0x0000000104118882: mov    %r10,0x28(%rsp)
  0x0000000104118887: mov    %r11,0x20(%rsp)
  0x000000010411888c: mov    %r12,0x18(%rsp)
  0x0000000104118891: mov    %r13,0x10(%rsp)
  0x0000000104118896: mov    %r14,0x8(%rsp)
  0x000000010411889b: mov    %r15,(%rsp)
  0x000000010411889f: movabs $0x100641684,%rdi  ;   {external_word}
  0x00000001041188a9: movabs $0x104118849,%rsi  ;   {internal_word}
  0x00000001041188b3: mov    %rsp,%rdx
  0x00000001041188b6: and    $0xfffffffffffffff0,%rsp
  0x00000001041188ba: callq  0x000000010046a1f6  ;   {runtime_call}
  0x00000001041188bf: hlt    
[Deopt Handler Code]
  0x00000001041188c0: movabs $0x1041188c0,%r10  ;   {section_word}
  0x00000001041188ca: push   %r10
  0x00000001041188cc: jmpq   0x0000000104047500  ;   {runtime_call}
  0x00000001041188d1: hlt    
  0x00000001041188d2: hlt    
  0x00000001041188d3: hlt    
  0x00000001041188d4: hlt    
  0x00000001041188d5: hlt    
  0x00000001041188d6: hlt    
  0x00000001041188d7: hlt    
<nmethod compile_id='40' compiler='C1' level='3' entry='0x0000000104118460' size='2128' address='0x00000001041182d0' relocation_offset='296' insts_offset='400' stub_offset='1360' scopes_data_offset='1568' scopes_pcs_offset='1768' dependencies_offset='2104' nul_chk_table_offset='2112' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='2178' iicount='2178' stamp='0.717'/>
Decoding compiled method 0x0000000104117fd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000117496208} &apos;position&apos; &apos;()I&apos; in &apos;java/nio/Buffer&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000104118120: mov    0x8(%rsi),%r10d
  0x0000000104118124: shl    $0x3,%r10
  0x0000000104118128: cmp    %rax,%r10
  0x000000010411812b: jne    0x0000000104045e60  ;   {runtime_call}
  0x0000000104118131: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010411813c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000104118140: mov    %eax,-0x14000(%rsp)
  0x0000000104118147: push   %rbp
  0x0000000104118148: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.nio.Buffer::position@0 (line 226)

  0x000000010411814c: mov    0x18(%rsi),%eax    ;*getfield position
                                                ; - java.nio.Buffer::position@1 (line 226)

  0x000000010411814f: add    $0x30,%rsp
  0x0000000104118153: pop    %rbp
  0x0000000104118154: test   %eax,-0x30b805a(%rip)        # 0x0000000101060100
                                                ;   {poll_return}
  0x000000010411815a: retq   
  0x000000010411815b: nop
  0x000000010411815c: nop
  0x000000010411815d: mov    0x2a8(%r15),%rax
  0x0000000104118164: movabs $0x0,%r10
  0x000000010411816e: mov    %r10,0x2a8(%r15)
  0x0000000104118175: movabs $0x0,%r10
  0x000000010411817f: mov    %r10,0x2b0(%r15)
  0x0000000104118186: add    $0x30,%rsp
  0x000000010411818a: pop    %rbp
  0x000000010411818b: jmpq   0x0000000104072c60  ;   {runtime_call}
  0x0000000104118190: hlt    
  0x0000000104118191: hlt    
  0x0000000104118192: hlt    
  0x0000000104118193: hlt    
  0x0000000104118194: hlt    
  0x0000000104118195: hlt    
  0x0000000104118196: hlt    
  0x0000000104118197: hlt    
  0x0000000104118198: hlt    
  0x0000000104118199: hlt    
  0x000000010411819a: hlt    
  0x000000010411819b: hlt    
  0x000000010411819c: hlt    
  0x000000010411819d: hlt    
  0x000000010411819e: hlt    
  0x000000010411819f: hlt    
[Exception Handler]
[Stub Code]
  0x00000001041181a0: callq  0x0000000104100420  ;   {no_reloc}
  0x00000001041181a5: mov    %rsp,-0x28(%rsp)
  0x00000001041181aa: sub    $0x80,%rsp
  0x00000001041181b1: mov    %rax,0x78(%rsp)
  0x00000001041181b6: mov    %rcx,0x70(%rsp)
  0x00000001041181bb: mov    %rdx,0x68(%rsp)
  0x00000001041181c0: mov    %rbx,0x60(%rsp)
  0x00000001041181c5: mov    %rbp,0x50(%rsp)
  0x00000001041181ca: mov    %rsi,0x48(%rsp)
  0x00000001041181cf: mov    %rdi,0x40(%rsp)
  0x00000001041181d4: mov    %r8,0x38(%rsp)
  0x00000001041181d9: mov    %r9,0x30(%rsp)
  0x00000001041181de: mov    %r10,0x28(%rsp)
  0x00000001041181e3: mov    %r11,0x20(%rsp)
  0x00000001041181e8: mov    %r12,0x18(%rsp)
  0x00000001041181ed: mov    %r13,0x10(%rsp)
  0x00000001041181f2: mov    %r14,0x8(%rsp)
  0x00000001041181f7: mov    %r15,(%rsp)
  0x00000001041181fb: movabs $0x100641684,%rdi  ;   {external_word}
  0x0000000104118205: movabs $0x1041181a5,%rsi  ;   {internal_word}
  0x000000010411820f: mov    %rsp,%rdx
  0x0000000104118212: and    $0xfffffffffffffff0,%rsp
  0x0000000104118216: callq  0x000000010046a1f6  ;   {runtime_call}
  0x000000010411821b: hlt    
[Deopt Handler Code]
  0x000000010411821c: movabs $0x10411821c,%r10  ;   {section_word}
  0x0000000104118226: push   %r10
  0x0000000104118228: jmpq   0x0000000104047500  ;   {runtime_call}
  0x000000010411822d: hlt    
  0x000000010411822e: hlt    
  0x000000010411822f: hlt    
<nmethod compile_id='41' compiler='C1' level='1' entry='0x0000000104118120' size='704' address='0x0000000104117fd0' relocation_offset='296' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' method='java/nio/Buffer position ()I' bytes='5' count='143' iicount='143' stamp='0.719'/>
<writer thread='21251'/>
<destroy_vm stamp='0.721'/>
<tty_done stamp='1.060'/>
</tty>
<compilation_log thread='17155'>
<start_compile_thread name='C1 CompilerThread2' thread='17155' process='76627' stamp='0.462'/>
<task compile_id='2' method='java/util/Arrays copyOf ([CI)[C' bytes='19' count='768' iicount='768' level='3' stamp='0.464'>
<phase name='buildIR' stamp='0.464'>
<klass id='833' name='[C' flags='1041'/>
<type id='733' name='int'/>
<klass id='844' name='java/util/Arrays' flags='1'/>
<method id='845' holder='844' name='copyOf' return='833' arguments='833 733' flags='9' bytes='19' iicount='768'/>
<parse method='845'  stamp='0.464'>
<bc code='184' bci='11'/>
<klass id='847' name='java/lang/Math' flags='17'/>
<method id='848' holder='847' name='min' return='733' arguments='733 733' flags='9' bytes='11' iicount='6902'/>
<call method='848' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='848'>
<parse_done stamp='0.464'/>
</parse>
<bc code='184' bci='14'/>
<type id='735' name='void'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<klass id='746' name='java/lang/System' flags='17'/>
<method id='850' holder='746' name='arraycopy' return='735' arguments='740 733 740 733 733' flags='265' bytes='0' compile_id='1' compile_kind='c2n' level='0' iicount='7040'/>
<call method='850' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.464'/>
</parse>
<phase name='optimize_blocks' stamp='0.464'>
<phase_done name='optimize_blocks' stamp='0.464'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.464'>
<phase_done name='rangeCheckElimination' stamp='0.464'/>
</phase>
<phase name='optimize_null_checks' stamp='0.464'>
<phase_done name='optimize_null_checks' stamp='0.464'/>
</phase>
<phase_done name='buildIR' stamp='0.464'/>
</phase>
<phase name='emit_lir' stamp='0.464'>
<phase name='lirGeneration' stamp='0.464'>
<phase_done name='lirGeneration' stamp='0.464'/>
</phase>
<phase name='linearScan' stamp='0.464'>
<phase_done name='linearScan' stamp='0.464'/>
</phase>
<phase_done name='emit_lir' stamp='0.464'/>
</phase>
<phase name='codeemit' stamp='0.464'>
<phase_done name='codeemit' stamp='0.465'/>
</phase>
<phase name='codeinstall' stamp='0.465'>
<phase_done name='codeinstall' stamp='0.468'/>
</phase>
<code_cache total_blobs='245' nmethods='2' adapters='159' free_code_cache='250592448'/>
<task_done success='1' nmsize='808' count='768' inlined_bytes='11' stamp='0.468'/>
</task>
<task compile_id='5' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='2753' backedge_count='5156' iicount='2754' level='3' stamp='0.471'>
<phase name='buildIR' stamp='0.471'>
<type id='727' name='boolean'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='844' holder='741' name='equals' return='727' arguments='740' flags='1' bytes='81' iicount='2762'/>
<parse method='844'  stamp='0.471'>
<parse_done stamp='0.471'/>
</parse>
<phase name='optimize_blocks' stamp='0.471'>
<phase_done name='optimize_blocks' stamp='0.471'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.471'>
<phase_done name='rangeCheckElimination' stamp='0.471'/>
</phase>
<phase name='optimize_null_checks' stamp='0.471'>
<phase_done name='optimize_null_checks' stamp='0.471'/>
</phase>
<phase_done name='buildIR' stamp='0.471'/>
</phase>
<phase name='emit_lir' stamp='0.471'>
<phase name='lirGeneration' stamp='0.471'>
<phase_done name='lirGeneration' stamp='0.471'/>
</phase>
<phase name='linearScan' stamp='0.471'>
<phase_done name='linearScan' stamp='0.471'/>
</phase>
<phase_done name='emit_lir' stamp='0.471'/>
</phase>
<phase name='codeemit' stamp='0.471'>
<phase_done name='codeemit' stamp='0.471'/>
</phase>
<phase name='codeinstall' stamp='0.471'>
<phase_done name='codeinstall' stamp='0.478'/>
</phase>
<code_cache total_blobs='253' nmethods='3' adapters='163' free_code_cache='250544960'/>
<task_done success='1' nmsize='1360' count='2781' backedge_count='5341' stamp='0.478'/>
</task>
<task compile_id='8' method='java/io/UnixFileSystem normalize (Ljava/lang/String;)Ljava/lang/String;' bytes='75' count='596' backedge_count='50232' iicount='596' level='3' stamp='0.487'>
<phase name='buildIR' stamp='0.487'>
<klass id='741' name='java/lang/String' flags='17'/>
<klass id='844' name='java/io/UnixFileSystem' flags='0'/>
<method id='845' holder='844' name='normalize' return='741' arguments='741' flags='1' bytes='75' iicount='596'/>
<parse method='845'  stamp='0.487'>
<bc code='182' bci='1'/>
<type id='733' name='int'/>
<method id='847' holder='741' name='length' return='733' flags='1' bytes='6' iicount='5352'/>
<call method='847' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='847'>
<parse_done stamp='0.487'/>
</parse>
<bc code='182' bci='19'/>
<type id='728' name='char'/>
<method id='849' holder='741' name='charAt' return='728' arguments='733' flags='1' bytes='29' iicount='58174'/>
<call method='849' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='849'>
<bc code='183' bci='18'/>
<type id='735' name='void'/>
<klass id='851' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='852' holder='851' name='&lt;init&gt;' return='735' arguments='733' unloaded='1'/>
<call method='852' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.490'/>
</parse>
<bc code='183' bci='44'/>
<method id='853' holder='844' name='normalize' return='741' arguments='741 733 733' flags='2' bytes='132' iicount='2'/>
<call method='853' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='844'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='69'/>
<call method='853' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='844'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.490'/>
</parse>
<phase name='optimize_blocks' stamp='0.490'>
<phase_done name='optimize_blocks' stamp='0.490'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.490'>
<phase_done name='rangeCheckElimination' stamp='0.490'/>
</phase>
<phase name='optimize_null_checks' stamp='0.490'>
<phase_done name='optimize_null_checks' stamp='0.490'/>
</phase>
<phase_done name='buildIR' stamp='0.490'/>
</phase>
<phase name='emit_lir' stamp='0.490'>
<phase name='lirGeneration' stamp='0.490'>
<phase_done name='lirGeneration' stamp='0.490'/>
</phase>
<phase name='linearScan' stamp='0.490'>
<phase_done name='linearScan' stamp='0.490'/>
</phase>
<phase_done name='emit_lir' stamp='0.490'/>
</phase>
<phase name='codeemit' stamp='0.490'>
<phase_done name='codeemit' stamp='0.490'/>
</phase>
<phase name='codeinstall' stamp='0.490'>
<dependency type='leaf_type' ctxk='844'/>
<phase_done name='codeinstall' stamp='0.498'/>
</phase>
<code_cache total_blobs='256' nmethods='8' adapters='163' free_code_cache='250547712'/>
<task_done success='1' nmsize='1640' count='596' backedge_count='50232' inlined_bytes='35' stamp='0.498'/>
</task>
<task compile_id='10' method='java/util/Hashtable get (Ljava/lang/Object;)Ljava/lang/Object;' bytes='69' count='257' backedge_count='50' iicount='257' level='3' stamp='0.498'>
<phase name='buildIR' stamp='0.499'>
<klass id='740' name='java/lang/Object' flags='1'/>
<klass id='777' name='java/util/Hashtable' flags='1'/>
<method id='844' holder='777' name='get' return='740' arguments='740' flags='33' bytes='69' iicount='257'/>
<parse method='844'  stamp='0.499'>
<bc code='182' bci='6'/>
<type id='733' name='int'/>
<method id='848' holder='740' name='hashCode' return='733' flags='257' bytes='0' iicount='408'/>
<call method='848' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='45'/>
<type id='727' name='boolean'/>
<method id='849' holder='740' name='equals' return='727' arguments='740' flags='1' bytes='11' iicount='1'/>
<call method='849' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.499'/>
</parse>
<phase name='optimize_blocks' stamp='0.499'>
<phase_done name='optimize_blocks' stamp='0.499'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.499'>
<phase_done name='rangeCheckElimination' stamp='0.499'/>
</phase>
<phase name='optimize_null_checks' stamp='0.499'>
<phase_done name='optimize_null_checks' stamp='0.499'/>
</phase>
<phase_done name='buildIR' stamp='0.499'/>
</phase>
<phase name='emit_lir' stamp='0.499'>
<phase name='lirGeneration' stamp='0.499'>
<phase_done name='lirGeneration' stamp='0.499'/>
</phase>
<phase name='linearScan' stamp='0.499'>
<phase_done name='linearScan' stamp='0.499'/>
</phase>
<phase_done name='emit_lir' stamp='0.499'/>
</phase>
<phase name='codeemit' stamp='0.499'>
<phase_done name='codeemit' stamp='0.499'/>
</phase>
<phase name='codeinstall' stamp='0.499'>
<phase_done name='codeinstall' stamp='0.506'/>
</phase>
<code_cache total_blobs='257' nmethods='9' adapters='163' free_code_cache='250544832'/>
<task_done success='1' nmsize='1592' count='260' backedge_count='51' stamp='0.506'/>
</task>
<task compile_id='11' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='1671' iicount='1671' level='3' stamp='0.506'>
<phase name='buildIR' stamp='0.506'>
<type id='735' name='void'/>
<klass id='833' name='[C' flags='1041'/>
<type id='733' name='int'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='844' holder='741' name='&lt;init&gt;' return='735' arguments='833 733 733' flags='1' bytes='82' iicount='1671'/>
<parse method='844'  stamp='0.506'>
<bc code='183' bci='1'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<method id='846' holder='740' name='&lt;init&gt;' return='735' flags='1' bytes='1' iicount='9049'/>
<call method='846' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='846'>
<parse_done stamp='0.506'/>
</parse>
<bc code='183' bci='13'/>
<klass id='848' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='849' holder='848' name='&lt;init&gt;' return='735' arguments='733' unloaded='1'/>
<call method='849' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='30'/>
<call method='849' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='65'/>
<call method='849' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='184' bci='75'/>
<klass id='851' name='java/util/Arrays' flags='1'/>
<method id='852' holder='851' name='copyOfRange' return='833' arguments='833 733 733' flags='9' bytes='63' iicount='1816'/>
<call method='852' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.506'/>
</parse>
<phase name='optimize_blocks' stamp='0.506'>
<phase_done name='optimize_blocks' stamp='0.506'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.506'>
<phase_done name='rangeCheckElimination' stamp='0.506'/>
</phase>
<phase name='optimize_null_checks' stamp='0.506'>
<phase_done name='optimize_null_checks' stamp='0.506'/>
</phase>
<phase_done name='buildIR' stamp='0.506'/>
</phase>
<phase name='emit_lir' stamp='0.506'>
<phase name='lirGeneration' stamp='0.506'>
<phase_done name='lirGeneration' stamp='0.506'/>
</phase>
<phase name='linearScan' stamp='0.506'>
<phase_done name='linearScan' stamp='0.507'/>
</phase>
<phase_done name='emit_lir' stamp='0.507'/>
</phase>
<phase name='codeemit' stamp='0.507'>
<phase_done name='codeemit' stamp='0.507'/>
</phase>
<phase name='codeinstall' stamp='0.507'>
<phase_done name='codeinstall' stamp='0.513'/>
</phase>
<code_cache total_blobs='258' nmethods='10' adapters='163' free_code_cache='250542080'/>
<task_done success='1' nmsize='1272' count='1671' inlined_bytes='1' stamp='0.513'/>
</task>
<task compile_id='9' method='java/lang/StringBuilder toString ()Ljava/lang/String;' bytes='17' count='514' iicount='514' level='3' stamp='0.513'>
<phase name='buildIR' stamp='0.513'>
<klass id='741' name='java/lang/String' flags='17'/>
<klass id='807' name='java/lang/StringBuilder' flags='17'/>
<method id='844' holder='807' name='toString' return='741' flags='1' bytes='17' iicount='514'/>
<parse method='844'  stamp='0.513'>
<bc code='183' bci='13'/>
<type id='735' name='void'/>
<klass id='833' name='[C' flags='1041'/>
<type id='733' name='int'/>
<method id='846' holder='741' name='&lt;init&gt;' return='735' arguments='833 733 733' flags='1' bytes='82' compile_id='11' compiler='C1' level='3' iicount='1671'/>
<call method='846' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.513'/>
</parse>
<phase name='optimize_blocks' stamp='0.513'>
<phase_done name='optimize_blocks' stamp='0.513'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.513'>
<phase_done name='rangeCheckElimination' stamp='0.513'/>
</phase>
<phase name='optimize_null_checks' stamp='0.513'>
<phase_done name='optimize_null_checks' stamp='0.513'/>
</phase>
<phase_done name='buildIR' stamp='0.513'/>
</phase>
<phase name='emit_lir' stamp='0.513'>
<phase name='lirGeneration' stamp='0.513'>
<phase_done name='lirGeneration' stamp='0.513'/>
</phase>
<phase name='linearScan' stamp='0.513'>
<phase_done name='linearScan' stamp='0.513'/>
</phase>
<phase_done name='emit_lir' stamp='0.513'/>
</phase>
<phase name='codeemit' stamp='0.513'>
<phase_done name='codeemit' stamp='0.513'/>
</phase>
<phase name='codeinstall' stamp='0.513'>
<phase_done name='codeinstall' stamp='0.516'/>
</phase>
<code_cache total_blobs='259' nmethods='11' adapters='163' free_code_cache='250540928'/>
<task_done success='1' nmsize='520' count='514' stamp='0.516'/>
</task>
<task compile_id='12' method='java/lang/String length ()I' bytes='6' count='5376' iicount='5376' level='3' stamp='0.516'>
<phase name='buildIR' stamp='0.516'>
<type id='733' name='int'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='844' holder='741' name='length' return='733' flags='1' bytes='6' iicount='5376'/>
<parse method='844'  stamp='0.516'>
<parse_done stamp='0.516'/>
</parse>
<phase name='optimize_blocks' stamp='0.516'>
<phase_done name='optimize_blocks' stamp='0.516'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.516'>
<phase_done name='rangeCheckElimination' stamp='0.516'/>
</phase>
<phase name='optimize_null_checks' stamp='0.516'>
<phase_done name='optimize_null_checks' stamp='0.516'/>
</phase>
<phase_done name='buildIR' stamp='0.516'/>
</phase>
<phase name='emit_lir' stamp='0.516'>
<phase name='lirGeneration' stamp='0.516'>
<phase_done name='lirGeneration' stamp='0.516'/>
</phase>
<phase name='linearScan' stamp='0.516'>
<phase_done name='linearScan' stamp='0.516'/>
</phase>
<phase_done name='emit_lir' stamp='0.516'/>
</phase>
<phase name='codeemit' stamp='0.516'>
<phase_done name='codeemit' stamp='0.516'/>
</phase>
<phase name='codeinstall' stamp='0.516'>
<phase_done name='codeinstall' stamp='0.518'/>
</phase>
<code_cache total_blobs='260' nmethods='12' adapters='163' free_code_cache='250539968'/>
<task_done success='1' nmsize='368' count='5448' stamp='0.518'/>
</task>
<task compile_id='13' method='java/lang/StringBuilder &lt;init&gt; ()V' bytes='7' count='512' iicount='512' level='3' stamp='0.518'>
<phase name='buildIR' stamp='0.518'>
<type id='735' name='void'/>
<klass id='807' name='java/lang/StringBuilder' flags='17'/>
<method id='844' holder='807' name='&lt;init&gt;' return='735' flags='1' bytes='7' iicount='512'/>
<parse method='844'  stamp='0.518'>
<bc code='183' bci='3'/>
<type id='733' name='int'/>
<klass id='805' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='846' holder='805' name='&lt;init&gt;' return='735' arguments='733' flags='0' bytes='12' iicount='671'/>
<call method='846' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='846'>
<bc code='183' bci='1'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<method id='848' holder='740' name='&lt;init&gt;' return='735' flags='1' bytes='1' iicount='9058'/>
<call method='848' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='848'>
<parse_done stamp='0.518'/>
</parse>
<parse_done stamp='0.518'/>
</parse>
<parse_done stamp='0.518'/>
</parse>
<phase name='optimize_blocks' stamp='0.518'>
<phase_done name='optimize_blocks' stamp='0.518'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.518'>
<phase_done name='rangeCheckElimination' stamp='0.518'/>
</phase>
<phase name='optimize_null_checks' stamp='0.518'>
<phase_done name='optimize_null_checks' stamp='0.518'/>
</phase>
<phase_done name='buildIR' stamp='0.518'/>
</phase>
<phase name='emit_lir' stamp='0.518'>
<phase name='lirGeneration' stamp='0.518'>
<phase_done name='lirGeneration' stamp='0.518'/>
</phase>
<phase name='linearScan' stamp='0.518'>
<phase_done name='linearScan' stamp='0.518'/>
</phase>
<phase_done name='emit_lir' stamp='0.518'/>
</phase>
<phase name='codeemit' stamp='0.518'>
<phase_done name='codeemit' stamp='0.518'/>
</phase>
<phase name='codeinstall' stamp='0.518'>
<phase_done name='codeinstall' stamp='0.521'/>
</phase>
<code_cache total_blobs='261' nmethods='13' adapters='163' free_code_cache='250538624'/>
<task_done success='1' nmsize='688' count='513' inlined_bytes='13' stamp='0.521'/>
</task>
<task compile_id='14' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='1426' backedge_count='2922' iicount='1426' level='3' stamp='0.522'>
<phase name='buildIR' stamp='0.522'>
<type id='727' name='boolean'/>
<klass id='741' name='java/lang/String' flags='17'/>
<type id='733' name='int'/>
<method id='844' holder='741' name='startsWith' return='727' arguments='741 733' flags='1' bytes='72' iicount='1430'/>
<parse method='844'  stamp='0.522'>
<parse_done stamp='0.522'/>
</parse>
<phase name='optimize_blocks' stamp='0.522'>
<phase_done name='optimize_blocks' stamp='0.522'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.522'>
<phase_done name='rangeCheckElimination' stamp='0.522'/>
</phase>
<phase name='optimize_null_checks' stamp='0.522'>
<phase_done name='optimize_null_checks' stamp='0.522'/>
</phase>
<phase_done name='buildIR' stamp='0.522'/>
</phase>
<phase name='emit_lir' stamp='0.522'>
<phase name='lirGeneration' stamp='0.522'>
<phase_done name='lirGeneration' stamp='0.522'/>
</phase>
<phase name='linearScan' stamp='0.522'>
<phase_done name='linearScan' stamp='0.522'/>
</phase>
<phase_done name='emit_lir' stamp='0.522'/>
</phase>
<phase name='codeemit' stamp='0.522'>
<phase_done name='codeemit' stamp='0.522'/>
</phase>
<phase name='codeinstall' stamp='0.522'>
<phase_done name='codeinstall' stamp='0.526'/>
</phase>
<code_cache total_blobs='264' nmethods='14' adapters='165' free_code_cache='250535616'/>
<task_done success='1' nmsize='816' count='1490' backedge_count='3031' stamp='0.526'/>
</task>
<task compile_id='15' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='846' iicount='846' level='3' stamp='0.526'>
<phase name='buildIR' stamp='0.526'>
<type id='727' name='boolean'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='844' holder='741' name='startsWith' return='727' arguments='741' flags='1' bytes='7' iicount='846'/>
<parse method='844'  stamp='0.526'>
<bc code='182' bci='3'/>
<type id='733' name='int'/>
<method id='846' holder='741' name='startsWith' return='727' arguments='741 733' flags='1' bytes='72' compile_id='14' compiler='C1' level='3' iicount='1490'/>
<call method='846' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.526'/>
</parse>
<phase name='optimize_blocks' stamp='0.526'>
<phase_done name='optimize_blocks' stamp='0.526'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.526'>
<phase_done name='rangeCheckElimination' stamp='0.526'/>
</phase>
<phase name='optimize_null_checks' stamp='0.526'>
<phase_done name='optimize_null_checks' stamp='0.526'/>
</phase>
<phase_done name='buildIR' stamp='0.526'/>
</phase>
<phase name='emit_lir' stamp='0.526'>
<phase name='lirGeneration' stamp='0.526'>
<phase_done name='lirGeneration' stamp='0.526'/>
</phase>
<phase name='linearScan' stamp='0.526'>
<phase_done name='linearScan' stamp='0.527'/>
</phase>
<phase_done name='emit_lir' stamp='0.527'/>
</phase>
<phase name='codeemit' stamp='0.527'>
<phase_done name='codeemit' stamp='0.527'/>
</phase>
<phase name='codeinstall' stamp='0.527'>
<phase_done name='codeinstall' stamp='0.528'/>
</phase>
<code_cache total_blobs='265' nmethods='15' adapters='165' free_code_cache='250534528'/>
<task_done success='1' nmsize='520' count='846' stamp='0.529'/>
</task>
<task compile_id='17' method='java/util/ArrayList size ()I' bytes='5' count='785' iicount='785' level='1' stamp='0.529'>
<phase name='buildIR' stamp='0.529'>
<type id='733' name='int'/>
<klass id='844' name='java/util/ArrayList' flags='1'/>
<method id='845' holder='844' name='size' return='733' flags='1' bytes='5' iicount='785'/>
<parse method='845'  stamp='0.529'>
<parse_done stamp='0.529'/>
</parse>
<phase name='optimize_blocks' stamp='0.529'>
<phase_done name='optimize_blocks' stamp='0.529'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.529'>
<phase_done name='rangeCheckElimination' stamp='0.529'/>
</phase>
<phase name='optimize_null_checks' stamp='0.529'>
<phase_done name='optimize_null_checks' stamp='0.529'/>
</phase>
<phase_done name='buildIR' stamp='0.529'/>
</phase>
<phase name='emit_lir' stamp='0.529'>
<phase name='lirGeneration' stamp='0.529'>
<phase_done name='lirGeneration' stamp='0.529'/>
</phase>
<phase name='linearScan' stamp='0.529'>
<phase_done name='linearScan' stamp='0.529'/>
</phase>
<phase_done name='emit_lir' stamp='0.529'/>
</phase>
<phase name='codeemit' stamp='0.529'>
<phase_done name='codeemit' stamp='0.529'/>
</phase>
<phase name='codeinstall' stamp='0.529'>
<phase_done name='codeinstall' stamp='0.530'/>
</phase>
<code_cache total_blobs='266' nmethods='16' adapters='165' free_code_cache='250533760'/>
<task_done success='1' nmsize='272' count='785' stamp='0.530'/>
</task>
<task compile_id='18' method='java/lang/String toCharArray ()[C' bytes='25' count='908' iicount='908' level='3' stamp='0.530'>
<phase name='buildIR' stamp='0.530'>
<klass id='833' name='[C' flags='1041'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='844' holder='741' name='toCharArray' return='833' flags='1' bytes='25' iicount='908'/>
<parse method='844'  stamp='0.530'>
<bc code='184' bci='20'/>
<type id='735' name='void'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<type id='733' name='int'/>
<klass id='746' name='java/lang/System' flags='17'/>
<method id='846' holder='746' name='arraycopy' return='735' arguments='740 733 740 733 733' flags='265' bytes='0' compile_id='1' compile_kind='c2n' level='0' iicount='7040'/>
<call method='846' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.530'/>
</parse>
<phase name='optimize_blocks' stamp='0.530'>
<phase_done name='optimize_blocks' stamp='0.530'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.530'>
<phase_done name='rangeCheckElimination' stamp='0.530'/>
</phase>
<phase name='optimize_null_checks' stamp='0.530'>
<phase_done name='optimize_null_checks' stamp='0.530'/>
</phase>
<phase_done name='buildIR' stamp='0.530'/>
</phase>
<phase name='emit_lir' stamp='0.530'>
<phase name='lirGeneration' stamp='0.530'>
<phase_done name='lirGeneration' stamp='0.530'/>
</phase>
<phase name='linearScan' stamp='0.530'>
<phase_done name='linearScan' stamp='0.530'/>
</phase>
<phase_done name='emit_lir' stamp='0.530'/>
</phase>
<phase name='codeemit' stamp='0.530'>
<phase_done name='codeemit' stamp='0.530'/>
</phase>
<phase name='codeinstall' stamp='0.530'>
<phase_done name='codeinstall' stamp='0.533'/>
</phase>
<code_cache total_blobs='268' nmethods='17' adapters='165' free_code_cache='250527040'/>
<task_done success='1' nmsize='648' count='908' stamp='0.533'/>
</task>
<task compile_id='16' method='java/lang/String endsWith (Ljava/lang/String;)Z' bytes='17' count='644' iicount='644' level='3' stamp='0.533'>
<phase name='buildIR' stamp='0.533'>
<type id='727' name='boolean'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='844' holder='741' name='endsWith' return='727' arguments='741' flags='1' bytes='17' iicount='644'/>
<parse method='844'  stamp='0.533'>
<bc code='182' bci='13'/>
<type id='733' name='int'/>
<method id='846' holder='741' name='startsWith' return='727' arguments='741 733' flags='1' bytes='72' compile_id='14' compiler='C1' level='3' iicount='1490'/>
<call method='846' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.534'/>
</parse>
<phase name='optimize_blocks' stamp='0.534'>
<phase_done name='optimize_blocks' stamp='0.534'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.534'>
<phase_done name='rangeCheckElimination' stamp='0.534'/>
</phase>
<phase name='optimize_null_checks' stamp='0.534'>
<phase_done name='optimize_null_checks' stamp='0.534'/>
</phase>
<phase_done name='buildIR' stamp='0.534'/>
</phase>
<phase name='emit_lir' stamp='0.534'>
<phase name='lirGeneration' stamp='0.534'>
<phase_done name='lirGeneration' stamp='0.534'/>
</phase>
<phase name='linearScan' stamp='0.534'>
<phase_done name='linearScan' stamp='0.534'/>
</phase>
<phase_done name='emit_lir' stamp='0.534'/>
</phase>
<phase name='codeemit' stamp='0.534'>
<phase_done name='codeemit' stamp='0.534'/>
</phase>
<phase name='codeinstall' stamp='0.534'>
<phase_done name='codeinstall' stamp='0.539'/>
</phase>
<code_cache total_blobs='270' nmethods='18' adapters='165' free_code_cache='250518784'/>
<task_done success='1' nmsize='552' count='644' stamp='0.540'/>
</task>
<task compile_id='21' method='java/lang/AbstractStringBuilder newCapacity (I)I' bytes='39' count='768' iicount='768' level='3' stamp='0.551'>
<phase name='buildIR' stamp='0.551'>
<type id='733' name='int'/>
<klass id='805' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='844' holder='805' name='newCapacity' return='733' arguments='733' flags='2' bytes='39' iicount='768'/>
<parse method='844'  stamp='0.551'>
<bc code='183' bci='31'/>
<method id='846' holder='805' name='hugeCapacity' return='733' arguments='733' flags='2' bytes='28' iicount='1'/>
<call method='846' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='846'>
<bc code='183' bci='11'/>
<type id='735' name='void'/>
<klass id='763' name='java/lang/OutOfMemoryError' flags='1'/>
<method id='848' holder='763' name='&lt;init&gt;' return='735' flags='1' bytes='5' iicount='1'/>
<call method='848' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<parse_done stamp='0.551'/>
</parse>
<parse_done stamp='0.551'/>
</parse>
<phase name='optimize_blocks' stamp='0.551'>
<phase_done name='optimize_blocks' stamp='0.551'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.551'>
<phase_done name='rangeCheckElimination' stamp='0.551'/>
</phase>
<phase name='optimize_null_checks' stamp='0.551'>
<phase_done name='optimize_null_checks' stamp='0.551'/>
</phase>
<phase_done name='buildIR' stamp='0.551'/>
</phase>
<phase name='emit_lir' stamp='0.551'>
<phase name='lirGeneration' stamp='0.551'>
<phase_done name='lirGeneration' stamp='0.551'/>
</phase>
<phase name='linearScan' stamp='0.551'>
<phase_done name='linearScan' stamp='0.551'/>
</phase>
<phase_done name='emit_lir' stamp='0.551'/>
</phase>
<phase name='codeemit' stamp='0.551'>
<phase_done name='codeemit' stamp='0.552'/>
</phase>
<phase name='codeinstall' stamp='0.552'>
<phase_done name='codeinstall' stamp='0.560'/>
</phase>
<code_cache total_blobs='271' nmethods='21' adapters='165' free_code_cache='250525440'/>
<task_done success='1' nmsize='1000' count='772' inlined_bytes='28' stamp='0.560'/>
</task>
<task compile_id='22' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='351' backedge_count='28803' iicount='351' level='3' stamp='0.560'>
<phase name='buildIR' stamp='0.560'>
<type id='733' name='int'/>
<klass id='833' name='[C' flags='1041'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='844' holder='741' name='indexOf' return='733' arguments='833 733 733 833 733 733 733' flags='8' bytes='166' iicount='351'/>
<parse method='844'  stamp='0.560'>
<parse_done stamp='0.560'/>
</parse>
<phase name='optimize_blocks' stamp='0.560'>
<phase_done name='optimize_blocks' stamp='0.560'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.560'>
<phase_done name='rangeCheckElimination' stamp='0.560'/>
</phase>
<phase name='optimize_null_checks' stamp='0.560'>
<phase_done name='optimize_null_checks' stamp='0.560'/>
</phase>
<phase_done name='buildIR' stamp='0.560'/>
</phase>
<phase name='emit_lir' stamp='0.560'>
<phase name='lirGeneration' stamp='0.560'>
<phase_done name='lirGeneration' stamp='0.560'/>
</phase>
<phase name='linearScan' stamp='0.560'>
<phase_done name='linearScan' stamp='0.560'/>
</phase>
<phase_done name='emit_lir' stamp='0.560'/>
</phase>
<phase name='codeemit' stamp='0.560'>
<phase_done name='codeemit' stamp='0.561'/>
</phase>
<phase name='codeinstall' stamp='0.561'>
<phase_done name='codeinstall' stamp='0.577'/>
</phase>
<code_cache total_blobs='272' nmethods='22' adapters='165' free_code_cache='250522176'/>
<task_done success='1' nmsize='1616' count='351' backedge_count='28803' stamp='0.577'/>
</task>
<task compile_id='23' method='java/lang/ref/Reference &lt;init&gt; (Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V' bytes='25' count='768' iicount='768' level='3' stamp='0.577'>
<phase name='buildIR' stamp='0.577'>
<type id='735' name='void'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<klass id='773' name='java/lang/ref/ReferenceQueue' flags='1'/>
<klass id='766' name='java/lang/ref/Reference' flags='1025'/>
<method id='844' holder='766' name='&lt;init&gt;' return='735' arguments='740 773' flags='0' bytes='25' iicount='768'/>
<parse method='844'  stamp='0.577'>
<bc code='183' bci='1'/>
<method id='846' holder='740' name='&lt;init&gt;' return='735' flags='1' bytes='1' compile_id='20' compiler='C2' level='4' iicount='9106'/>
<call method='846' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='846'>
<bc code='177' bci='0'/>
<dependency type='no_finalizable_subclasses' ctxk='766'/>
<parse_done stamp='0.577'/>
</parse>
<parse_done stamp='0.578'/>
</parse>
<phase name='optimize_blocks' stamp='0.578'>
<phase_done name='optimize_blocks' stamp='0.578'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.578'>
<phase_done name='rangeCheckElimination' stamp='0.578'/>
</phase>
<phase name='optimize_null_checks' stamp='0.578'>
<phase_done name='optimize_null_checks' stamp='0.578'/>
</phase>
<phase_done name='buildIR' stamp='0.578'/>
</phase>
<phase name='emit_lir' stamp='0.578'>
<phase name='lirGeneration' stamp='0.578'>
<phase_done name='lirGeneration' stamp='0.578'/>
</phase>
<phase name='linearScan' stamp='0.578'>
<phase_done name='linearScan' stamp='0.578'/>
</phase>
<phase_done name='emit_lir' stamp='0.578'/>
</phase>
<phase name='codeemit' stamp='0.578'>
<phase_done name='codeemit' stamp='0.578'/>
</phase>
<phase name='codeinstall' stamp='0.578'>
<dependency type='no_finalizable_subclasses' ctxk='766'/>
<phase_done name='codeinstall' stamp='0.581'/>
</phase>
<code_cache total_blobs='273' nmethods='23' adapters='165' free_code_cache='250520896'/>
<task_done success='1' nmsize='592' count='768' inlined_bytes='1' stamp='0.581'/>
</task>
<task compile_id='29' method='java/util/HashMap getNode (ILjava/lang/Object;)Ljava/util/HashMap$Node;' bytes='148' count='1060' backedge_count='22' iicount='1060' level='3' stamp='0.584'>
<phase name='buildIR' stamp='0.584'>
<klass id='845' name='java/util/HashMap$Node' flags='8'/>
<type id='733' name='int'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<klass id='844' name='java/util/HashMap' flags='1'/>
<method id='846' holder='844' name='getNode' return='845' arguments='733 740' flags='16' bytes='148' iicount='1060'/>
<parse method='846'  stamp='0.584'>
<bc code='182' bci='59'/>
<type id='727' name='boolean'/>
<method id='851' holder='740' name='equals' return='727' arguments='740' flags='1' bytes='11' iicount='1'/>
<call method='851' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='94'/>
<klass id='852' name='java/util/HashMap$TreeNode' flags='24'/>
<method id='853' holder='852' name='getTreeNode' return='852' arguments='733 740' flags='16' bytes='22' iicount='1'/>
<call method='853' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='126'/>
<call method='851' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.584'/>
</parse>
<phase name='optimize_blocks' stamp='0.584'>
<phase_done name='optimize_blocks' stamp='0.584'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.584'>
<phase_done name='rangeCheckElimination' stamp='0.584'/>
</phase>
<phase name='optimize_null_checks' stamp='0.584'>
<phase_done name='optimize_null_checks' stamp='0.584'/>
</phase>
<phase_done name='buildIR' stamp='0.584'/>
</phase>
<phase name='emit_lir' stamp='0.584'>
<phase name='lirGeneration' stamp='0.584'>
<phase_done name='lirGeneration' stamp='0.584'/>
</phase>
<phase name='linearScan' stamp='0.584'>
<phase_done name='linearScan' stamp='0.585'/>
</phase>
<phase_done name='emit_lir' stamp='0.585'/>
</phase>
<phase name='codeemit' stamp='0.585'>
<phase_done name='codeemit' stamp='0.585'/>
</phase>
<phase name='codeinstall' stamp='0.585'>
<phase_done name='codeinstall' stamp='0.601'/>
</phase>
<code_cache total_blobs='275' nmethods='24' adapters='165' free_code_cache='250511296'/>
<task_done success='1' nmsize='2472' count='1060' backedge_count='22' stamp='0.601'/>
</task>
<task compile_id='28' method='java/util/HashMap hash (Ljava/lang/Object;)I' bytes='20' count='1467' iicount='1467' level='3' stamp='0.601'>
<phase name='buildIR' stamp='0.601'>
<type id='733' name='int'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<klass id='844' name='java/util/HashMap' flags='1'/>
<method id='845' holder='844' name='hash' return='733' arguments='740' flags='24' bytes='20' iicount='1467'/>
<parse method='845'  stamp='0.602'>
<bc code='182' bci='9'/>
<method id='847' holder='740' name='hashCode' return='733' flags='257' bytes='0' iicount='413'/>
<call method='847' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.602'/>
</parse>
<phase name='optimize_blocks' stamp='0.602'>
<phase_done name='optimize_blocks' stamp='0.602'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.602'>
<phase_done name='rangeCheckElimination' stamp='0.602'/>
</phase>
<phase name='optimize_null_checks' stamp='0.602'>
<phase_done name='optimize_null_checks' stamp='0.602'/>
</phase>
<phase_done name='buildIR' stamp='0.602'/>
</phase>
<phase name='emit_lir' stamp='0.602'>
<phase name='lirGeneration' stamp='0.602'>
<phase_done name='lirGeneration' stamp='0.602'/>
</phase>
<phase name='linearScan' stamp='0.602'>
<phase_done name='linearScan' stamp='0.602'/>
</phase>
<phase_done name='emit_lir' stamp='0.602'/>
</phase>
<phase name='codeemit' stamp='0.602'>
<phase_done name='codeemit' stamp='0.602'/>
</phase>
<phase name='codeinstall' stamp='0.602'>
<phase_done name='codeinstall' stamp='0.639'/>
</phase>
<code_cache total_blobs='276' nmethods='26' adapters='165' free_code_cache='250513920'/>
<task_done success='1' nmsize='584' count='1467' stamp='0.639'/>
</task>
<task compile_id='32' method='java/lang/String getChars (II[CI)V' bytes='62' count='1794' iicount='1794' level='3' stamp='0.639'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='1794' stamp='0.639'/>
</task>
<task compile_id='31' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='1794' iicount='1794' level='3' stamp='0.639'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='1794' stamp='0.639'/>
</task>
<task compile_id='30' method='java/net/URL getPath ()Ljava/lang/String;' bytes='5' count='642' iicount='642' level='1' stamp='0.639'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='642' stamp='0.639'/>
</task>
<task compile_id='27' method='java/util/LinkedHashMap get (Ljava/lang/Object;)Ljava/lang/Object;' bytes='33' count='584' iicount='584' level='3' stamp='0.639'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='584' stamp='0.639'/>
</task>
<task compile_id='26' method='java/io/ExpiringCache entryFor (Ljava/lang/String;)Ljava/io/ExpiringCache$Entry;' bytes='57' count='584' iicount='584' level='3' stamp='0.639'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='584' stamp='0.639'/>
</task>
<task compile_id='24' method='java/util/HashMap$Node getKey ()Ljava/lang/Object;' bytes='5' count='141' iicount='141' level='1' stamp='0.639'>
<phase name='buildIR' stamp='0.639'>
<klass id='740' name='java/lang/Object' flags='1'/>
<klass id='844' name='java/util/HashMap$Node' flags='8'/>
<method id='845' holder='844' name='getKey' return='740' flags='17' bytes='5' iicount='141'/>
<parse method='845'  stamp='0.639'>
<parse_done stamp='0.639'/>
</parse>
<phase name='optimize_blocks' stamp='0.639'>
<phase_done name='optimize_blocks' stamp='0.639'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.639'>
<phase_done name='rangeCheckElimination' stamp='0.639'/>
</phase>
<phase name='optimize_null_checks' stamp='0.639'>
<phase_done name='optimize_null_checks' stamp='0.639'/>
</phase>
<phase_done name='buildIR' stamp='0.639'/>
</phase>
<phase name='emit_lir' stamp='0.639'>
<phase name='lirGeneration' stamp='0.639'>
<phase_done name='lirGeneration' stamp='0.639'/>
</phase>
<phase name='linearScan' stamp='0.639'>
<phase_done name='linearScan' stamp='0.639'/>
</phase>
<phase_done name='emit_lir' stamp='0.639'/>
</phase>
<phase name='codeemit' stamp='0.639'>
<phase_done name='codeemit' stamp='0.639'/>
</phase>
<phase name='codeinstall' stamp='0.639'>
<phase_done name='codeinstall' stamp='0.640'/>
</phase>
<code_cache total_blobs='277' nmethods='27' adapters='165' free_code_cache='250513152'/>
<task_done success='1' nmsize='272' count='141' stamp='0.640'/>
</task>
<task compile_id='34' method='jdk/VolatileTest add (II)I' bytes='17' count='3305' iicount='3311' level='3' stamp='0.643'>
<phase name='buildIR' stamp='0.644'>
<type id='733' name='int'/>
<klass id='844' name='jdk/VolatileTest' flags='1'/>
<method id='845' holder='844' name='add' return='733' arguments='733 733' flags='1' bytes='17' iicount='4466'/>
<parse method='845'  stamp='0.644'>
<parse_done stamp='0.644'/>
</parse>
<phase name='optimize_blocks' stamp='0.644'>
<phase_done name='optimize_blocks' stamp='0.644'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.644'>
<phase_done name='rangeCheckElimination' stamp='0.644'/>
</phase>
<phase name='optimize_null_checks' stamp='0.644'>
<phase_done name='optimize_null_checks' stamp='0.644'/>
</phase>
<phase_done name='buildIR' stamp='0.644'/>
</phase>
<phase name='emit_lir' stamp='0.644'>
<phase name='lirGeneration' stamp='0.644'>
<phase_done name='lirGeneration' stamp='0.644'/>
</phase>
<phase name='linearScan' stamp='0.644'>
<phase_done name='linearScan' stamp='0.644'/>
</phase>
<phase_done name='emit_lir' stamp='0.644'/>
</phase>
<phase name='codeemit' stamp='0.644'>
<phase_done name='codeemit' stamp='0.644'/>
</phase>
<phase name='codeinstall' stamp='0.644'>
<phase_done name='codeinstall' stamp='0.646'/>
</phase>
<code_cache total_blobs='281' nmethods='28' adapters='165' free_code_cache='250498560'/>
<task_done success='1' nmsize='368' count='29752' stamp='0.646'/>
</task>
<task compile_id='36' compile_kind='osr' method='jdk/VolatileTest main ([Ljava/lang/String;)V' bytes='106' count='1' backedge_count='61256' iicount='1' osr_bci='29' level='3' stamp='0.653'>
<phase name='buildIR' stamp='0.653'>
<type id='735' name='void'/>
<klass id='845' name='[Ljava/lang/String;' flags='1041'/>
<klass id='844' name='jdk/VolatileTest' flags='1'/>
<method id='846' holder='844' name='main' return='735' arguments='845' flags='9' bytes='106' iicount='1'/>
<parse method='846'  stamp='0.653'>
<bc code='182' bci='12'/>
<type id='728' name='char'/>
<klass id='848' name='java/io/PrintStream' flags='1'/>
<method id='850' holder='848' name='println' return='735' arguments='728' flags='1' bytes='24' iicount='1'/>
<call method='850' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='848'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='848'/>
<parse method='850'>
<bc code='182' bci='6'/>
<method id='852' holder='848' name='print' return='735' arguments='728' flags='1' bytes='9' iicount='1'/>
<call method='852' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='848'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='848'/>
<parse method='852'>
<bc code='184' bci='2'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='854' holder='741' name='valueOf' return='741' arguments='728' flags='9' bytes='18' iicount='1'/>
<call method='854' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='854'>
<bc code='183' bci='14'/>
<klass id='833' name='[C' flags='1041'/>
<type id='727' name='boolean'/>
<method id='856' holder='741' name='&lt;init&gt;' return='735' arguments='833 727' flags='0' bytes='10' iicount='207'/>
<call method='856' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='856'>
<bc code='183' bci='1'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<method id='858' holder='740' name='&lt;init&gt;' return='735' flags='1' bytes='1' compile_id='20' compiler='C2' level='4' iicount='9109'/>
<call method='858' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='858'>
<parse_done stamp='0.654'/>
</parse>
<parse_done stamp='0.654'/>
</parse>
<parse_done stamp='0.654'/>
</parse>
<bc code='183' bci='5'/>
<method id='860' holder='848' name='write' return='735' arguments='741' flags='2' bytes='83' iicount='1'/>
<call method='860' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='848'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.654'/>
</parse>
<bc code='183' bci='10'/>
<method id='862' holder='848' name='newLine' return='735' flags='2' bytes='73' iicount='1'/>
<call method='862' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='848'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.654'/>
</parse>
<bc code='183' bci='19'/>
<method id='864' holder='844' name='&lt;init&gt;' return='735' flags='1' bytes='10' iicount='1'/>
<call method='864' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='864'>
<bc code='183' bci='1'/>
<call method='858' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='858'>
<parse_done stamp='0.654'/>
</parse>
<parse_done stamp='0.654'/>
</parse>
<bc code='182' bci='40'/>
<type id='733' name='int'/>
<method id='866' holder='844' name='add' return='733' arguments='733 733' flags='1' bytes='17' compile_id='35' compiler='C2' level='4' iicount='60416'/>
<call method='866' instr='invokevirtual'/>
<dependency type='unique_concrete_method' ctxk='844' x='866'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='844'/>
<parse method='866'>
<parse_done stamp='0.654'/>
</parse>
<bc code='183' bci='58'/>
<klass id='868' name='java/lang/StringBuilder' unloaded='1'/>
<method id='869' holder='868' name='&lt;init&gt;' return='735' unloaded='1'/>
<call method='869' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='63'/>
<method id='871' holder='868' name='append' return='868' arguments='741' unloaded='1'/>
<call method='871' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='68'/>
<method id='872' holder='868' name='append' return='868' arguments='733' unloaded='1'/>
<call method='872' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='71'/>
<method id='873' holder='868' name='toString' return='741' unloaded='1'/>
<call method='873' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='74'/>
<method id='874' holder='848' name='println' return='735' arguments='741' flags='1' bytes='24' iicount='1'/>
<call method='874' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='848'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='848'/>
<parse method='874'>
<bc code='182' bci='6'/>
<method id='876' holder='848' name='print' return='735' arguments='741' flags='1' bytes='13' iicount='1'/>
<call method='876' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='848'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='848'/>
<parse method='876'>
<bc code='183' bci='9'/>
<call method='860' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='848'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.655'/>
</parse>
<bc code='183' bci='10'/>
<call method='862' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='848'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.655'/>
</parse>
<bc code='183' bci='84'/>
<call method='869' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='89'/>
<call method='871' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='96'/>
<type id='734' name='long'/>
<method id='880' holder='868' name='append' return='868' arguments='734' unloaded='1'/>
<call method='880' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='99'/>
<call method='873' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='102'/>
<call method='874' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='848'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='848'/>
<parse method='874'>
<bc code='182' bci='6'/>
<call method='876' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='848'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='848'/>
<parse method='876'>
<bc code='183' bci='9'/>
<call method='860' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='848'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.655'/>
</parse>
<bc code='183' bci='10'/>
<call method='862' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='848'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.655'/>
</parse>
<parse_done stamp='0.655'/>
</parse>
<phase name='optimize_blocks' stamp='0.655'>
<phase_done name='optimize_blocks' stamp='0.655'/>
</phase>
<phase name='optimize_null_checks' stamp='0.655'>
<phase_done name='optimize_null_checks' stamp='0.655'/>
</phase>
<phase_done name='buildIR' stamp='0.655'/>
</phase>
<phase name='emit_lir' stamp='0.655'>
<phase name='lirGeneration' stamp='0.655'>
<phase_done name='lirGeneration' stamp='0.655'/>
</phase>
<phase name='linearScan' stamp='0.655'>
<phase_done name='linearScan' stamp='0.655'/>
</phase>
<phase_done name='emit_lir' stamp='0.655'/>
</phase>
<phase name='codeemit' stamp='0.655'>
<phase_done name='codeemit' stamp='0.655'/>
</phase>
<phase name='codeinstall' stamp='0.655'>
<dependency type='leaf_type' ctxk='848'/>
<dependency type='leaf_type' ctxk='844'/>
<dependency type='unique_concrete_method' ctxk='844' x='866'/>
<phase_done name='codeinstall' stamp='0.687'/>
</phase>
<code_cache total_blobs='282' nmethods='31' adapters='165' free_code_cache='250498304'/>
<task_done success='1' nmsize='5496' count='1' backedge_count='978760' inlined_bytes='164' stamp='0.687'/>
</task>
<task compile_id='38' method='java/util/concurrent/ConcurrentHashMap tabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' bytes='21' count='256' iicount='256' level='3' stamp='0.700'>
<phase name='buildIR' stamp='0.700'>
<klass id='845' name='java/util/concurrent/ConcurrentHashMap$Node' flags='8'/>
<klass id='846' name='[Ljava/util/concurrent/ConcurrentHashMap$Node;' flags='1040'/>
<type id='733' name='int'/>
<klass id='844' name='java/util/concurrent/ConcurrentHashMap' flags='1'/>
<method id='847' holder='844' name='tabAt' return='845' arguments='846 733' flags='24' bytes='21' iicount='256'/>
<parse method='847'  stamp='0.700'>
<bc code='182' bci='14'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<type id='734' name='long'/>
<klass id='808' name='sun/misc/Unsafe' flags='17'/>
<method id='851' holder='808' name='getObjectVolatile' return='740' arguments='740 734' flags='257' bytes='0' iicount='256'/>
<call method='851' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.700'/>
</parse>
<phase name='optimize_blocks' stamp='0.700'>
<phase_done name='optimize_blocks' stamp='0.700'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.700'>
<phase_done name='rangeCheckElimination' stamp='0.700'/>
</phase>
<phase name='optimize_null_checks' stamp='0.700'>
<phase_done name='optimize_null_checks' stamp='0.700'/>
</phase>
<phase_done name='buildIR' stamp='0.700'/>
</phase>
<phase name='emit_lir' stamp='0.700'>
<phase name='lirGeneration' stamp='0.700'>
<phase_done name='lirGeneration' stamp='0.700'/>
</phase>
<phase name='linearScan' stamp='0.700'>
<phase_done name='linearScan' stamp='0.701'/>
</phase>
<phase_done name='emit_lir' stamp='0.701'/>
</phase>
<phase name='codeemit' stamp='0.701'>
<phase_done name='codeemit' stamp='0.701'/>
</phase>
<phase name='codeinstall' stamp='0.701'>
<phase_done name='codeinstall' stamp='0.709'/>
</phase>
<code_cache total_blobs='285' nmethods='34' adapters='165' free_code_cache='250494784'/>
<task_done success='1' nmsize='560' count='382' stamp='0.709'/>
</task>
<task compile_id='40' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='2176' iicount='2176' level='3' stamp='0.709'>
<phase name='buildIR' stamp='0.709'>
<type id='735' name='void'/>
<type id='733' name='int'/>
<klass id='805' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='844' holder='805' name='ensureCapacityInternal' return='735' arguments='733' flags='2' bytes='27' iicount='2176'/>
<parse method='844'  stamp='0.709'>
<bc code='183' bci='17'/>
<method id='846' holder='805' name='newCapacity' return='733' arguments='733' flags='2' bytes='39' compile_id='21' compiler='C1' level='3' iicount='774'/>
<call method='846' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='20'/>
<klass id='833' name='[C' flags='1041'/>
<klass id='848' name='java/util/Arrays' flags='1'/>
<method id='849' holder='848' name='copyOf' return='833' arguments='833 733' flags='9' bytes='19' compile_id='2' compiler='C1' level='3' iicount='800'/>
<call method='849' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='849'>
<bc code='184' bci='11'/>
<klass id='851' name='java/lang/Math' flags='17'/>
<method id='852' holder='851' name='min' return='733' arguments='733 733' flags='9' bytes='11' compile_id='6' compiler='C2' level='4' iicount='6946'/>
<call method='852' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='852'>
<parse_done stamp='0.710'/>
</parse>
<bc code='184' bci='14'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<klass id='746' name='java/lang/System' flags='17'/>
<method id='854' holder='746' name='arraycopy' return='735' arguments='740 733 740 733 733' flags='265' bytes='0' compile_id='1' compile_kind='c2n' level='0' iicount='7040'/>
<call method='854' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.710'/>
</parse>
<parse_done stamp='0.710'/>
</parse>
<phase name='optimize_blocks' stamp='0.710'>
<phase_done name='optimize_blocks' stamp='0.710'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.710'>
<phase_done name='rangeCheckElimination' stamp='0.710'/>
</phase>
<phase name='optimize_null_checks' stamp='0.710'>
<phase_done name='optimize_null_checks' stamp='0.710'/>
</phase>
<phase_done name='buildIR' stamp='0.710'/>
</phase>
<phase name='emit_lir' stamp='0.710'>
<phase name='lirGeneration' stamp='0.710'>
<phase_done name='lirGeneration' stamp='0.710'/>
</phase>
<phase name='linearScan' stamp='0.710'>
<phase_done name='linearScan' stamp='0.710'/>
</phase>
<phase_done name='emit_lir' stamp='0.710'/>
</phase>
<phase name='codeemit' stamp='0.710'>
<phase_done name='codeemit' stamp='0.710'/>
</phase>
<phase name='codeinstall' stamp='0.710'>
<phase_done name='codeinstall' stamp='0.717'/>
</phase>
<code_cache total_blobs='286' nmethods='35' adapters='165' free_code_cache='250492608'/>
<task_done success='1' nmsize='1144' count='2178' inlined_bytes='30' stamp='0.717'/>
</task>
<task compile_id='41' method='java/nio/Buffer position ()I' bytes='5' count='143' iicount='143' level='1' stamp='0.717'>
<phase name='buildIR' stamp='0.717'>
<type id='733' name='int'/>
<klass id='820' name='java/nio/Buffer' flags='1025'/>
<method id='844' holder='820' name='position' return='733' flags='17' bytes='5' iicount='143'/>
<parse method='844'  stamp='0.717'>
<parse_done stamp='0.717'/>
</parse>
<phase name='optimize_blocks' stamp='0.717'>
<phase_done name='optimize_blocks' stamp='0.717'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.717'>
<phase_done name='rangeCheckElimination' stamp='0.717'/>
</phase>
<phase name='optimize_null_checks' stamp='0.717'>
<phase_done name='optimize_null_checks' stamp='0.717'/>
</phase>
<phase_done name='buildIR' stamp='0.717'/>
</phase>
<phase name='emit_lir' stamp='0.717'>
<phase name='lirGeneration' stamp='0.717'>
<phase_done name='lirGeneration' stamp='0.717'/>
</phase>
<phase name='linearScan' stamp='0.717'>
<phase_done name='linearScan' stamp='0.717'/>
</phase>
<phase_done name='emit_lir' stamp='0.717'/>
</phase>
<phase name='codeemit' stamp='0.717'>
<phase_done name='codeemit' stamp='0.717'/>
</phase>
<phase name='codeinstall' stamp='0.717'>
<phase_done name='codeinstall' stamp='0.719'/>
</phase>
<code_cache total_blobs='287' nmethods='36' adapters='165' free_code_cache='250491840'/>
<task_done success='1' nmsize='272' count='143' stamp='0.719'/>
</task>
</compilation_log>
<compilation_log thread='14851'>
<start_compile_thread name='C2 CompilerThread1' thread='14851' process='76627' stamp='0.452'/>
<task compile_id='4' compile_kind='osr' method='java/lang/String hashCode ()I' bytes='55' count='1782' backedge_count='60416' iicount='1782' osr_bci='24' stamp='0.471'>
<phase name='parse' nodes='3' live='3' stamp='0.471'>
<type id='733' name='int'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='844' holder='741' name='hashCode' return='733' flags='1' bytes='55' iicount='1782'/>
<parse method='844' uses='1782' osr_bci='24' stamp='0.471'>
<uncommon_trap bci='24' reason='constraint' action='reinterpret'/>
<uncommon_trap bci='24' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='24' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='180' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<bc code='190' bci='29'/>
<uncommon_trap bci='29' reason='null_check' action='maybe_recompile'/>
<bc code='162' bci='30'/>
<branch target_bci='48' taken='762' not_taken='56327' cnt='57089' prob='0.0133476'/>
<bc code='52' bci='39'/>
<uncommon_trap bci='39' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='39' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='219' live='211' memory='54344' stamp='0.471'/>
</parse>
<phase_done name='parse' nodes='220' live='169' stamp='0.471'/>
</phase>
<phase name='optimizer' nodes='220' live='169' stamp='0.471'>
<phase name='idealLoop' nodes='230' live='160' stamp='0.471'>
<loop_tree>
<loop idx='230' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='245' live='154' stamp='0.472'/>
</phase>
<phase name='idealLoop' nodes='245' live='154' stamp='0.472'>
<loop_tree>
<loop idx='230' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='296' live='161' stamp='0.472'/>
</phase>
<phase name='idealLoop' nodes='296' live='161' stamp='0.472'>
<loop_tree>
<loop idx='301' main_loop='301' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='399' live='227' stamp='0.472'/>
</phase>
<phase name='ccp' nodes='399' live='227' stamp='0.472'>
<phase_done name='ccp' nodes='399' live='227' stamp='0.472'/>
</phase>
<phase name='idealLoop' nodes='402' live='220' stamp='0.472'>
<loop_tree>
<loop idx='364' inner_loop='1' pre_loop='301' >
</loop>
<loop idx='301' inner_loop='1' main_loop='301' >
</loop>
<loop idx='319' inner_loop='1' post_loop='301' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='402' live='214' stamp='0.472'/>
</phase>
<phase name='idealLoop' nodes='402' live='214' stamp='0.472'>
<loop_tree>
<loop idx='364' inner_loop='1' pre_loop='301' >
</loop>
<loop idx='431' inner_loop='1' main_loop='431' >
</loop>
<loop idx='319' inner_loop='1' post_loop='301' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='450' live='228' stamp='0.472'/>
</phase>
<phase name='idealLoop' nodes='450' live='228' stamp='0.472'>
<loop_tree>
<loop idx='364' inner_loop='1' pre_loop='301' >
</loop>
<loop idx='480' inner_loop='1' main_loop='480' >
</loop>
<loop idx='319' inner_loop='1' post_loop='301' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='493' live='251' stamp='0.473'/>
</phase>
<phase name='idealLoop' nodes='493' live='251' stamp='0.473'>
<loop_tree>
<loop idx='364' inner_loop='1' pre_loop='301' >
</loop>
<loop idx='543' inner_loop='1' main_loop='543' >
</loop>
<loop idx='319' inner_loop='1' post_loop='301' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='557' live='300' stamp='0.473'/>
</phase>
<phase name='idealLoop' nodes='557' live='300' stamp='0.473'>
<loop_tree>
<loop idx='364' inner_loop='1' pre_loop='301' >
</loop>
<loop idx='543' inner_loop='1' main_loop='543' >
</loop>
<loop idx='319' inner_loop='1' post_loop='301' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='560' live='293' stamp='0.473'/>
</phase>
<phase_done name='optimizer' nodes='624' live='271' stamp='0.473'/>
</phase>
<phase name='matcher' nodes='624' live='271' stamp='0.473'>
<phase_done name='matcher' nodes='238' live='238' stamp='0.474'/>
</phase>
<phase name='regalloc' nodes='300' live='297' stamp='0.474'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='369' live='344' stamp='0.475'/>
</phase>
<phase name='output' nodes='369' live='344' stamp='0.475'>
<phase_done name='output' nodes='384' live='355' stamp='0.478'/>
</phase>
<code_cache total_blobs='255' nmethods='4' adapters='163' free_code_cache='250536896'/>
<task_done success='1' nmsize='632' count='1800' backedge_count='60697' stamp='0.482'/>
</task>
<task compile_id='6' method='java/lang/Math min (II)I' bytes='11' count='6912' iicount='6912' stamp='0.486'>
<phase name='parse' nodes='3' live='3' stamp='0.486'>
<type id='733' name='int'/>
<klass id='844' name='java/lang/Math' flags='17'/>
<method id='845' holder='844' name='min' return='733' arguments='733 733' flags='9' bytes='11' iicount='6912'/>
<parse method='845' uses='6912' stamp='0.487'>
<bc code='163' bci='2'/>
<branch target_bci='9' taken='2465' not_taken='4447' cnt='6912' prob='0.356626'/>
<parse_done nodes='32' live='31' memory='23912' stamp='0.487'/>
</parse>
<phase_done name='parse' nodes='33' live='18' stamp='0.487'/>
</phase>
<phase name='optimizer' nodes='33' live='18' stamp='0.487'>
<phase name='ccp' nodes='33' live='18' stamp='0.487'>
<phase_done name='ccp' nodes='33' live='18' stamp='0.487'/>
</phase>
<phase name='idealLoop' nodes='33' live='18' stamp='0.487'>
<phase_done name='idealLoop' nodes='34' live='14' stamp='0.487'/>
</phase>
<phase_done name='optimizer' nodes='34' live='14' stamp='0.487'/>
</phase>
<phase name='matcher' nodes='34' live='14' stamp='0.487'>
<phase_done name='matcher' nodes='15' live='15' stamp='0.487'/>
</phase>
<phase name='regalloc' nodes='17' live='17' stamp='0.487'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='18' live='18' stamp='0.487'/>
</phase>
<phase name='output' nodes='18' live='18' stamp='0.487'>
<phase_done name='output' nodes='23' live='23' stamp='0.487'/>
</phase>
<code_cache total_blobs='256' nmethods='6' adapters='163' free_code_cache='250541120'/>
<task_done success='1' nmsize='56' count='6917' stamp='0.487'/>
</task>
<task compile_id='19' compile_kind='osr' method='sun/nio/cs/UTF_8$Encoder encode ([CII[B)I' bytes='359' count='1445' backedge_count='90112' iicount='1445' osr_bci='20' stamp='0.522'>
<phase name='parse' nodes='3' live='3' stamp='0.522'>
<type id='733' name='int'/>
<klass id='833' name='[C' flags='1041'/>
<klass id='836' name='[B' flags='1041'/>
<klass id='844' name='sun/nio/cs/UTF_8$Encoder' flags='26'/>
<method id='845' holder='844' name='encode' return='733' arguments='833 733 733 836' flags='1' bytes='359' iicount='1445'/>
<klass id='850' name='sun/nio/cs/Surrogate$Parser' unloaded='1'/>
<uncommon_trap method='845' bci='175' reason='unloaded' action='reinterpret' index='22' klass='850'/>
<uncommon_trap method='845' bci='153' reason='unloaded' action='reinterpret' index='22' klass='850'/>
<parse method='845' uses='1445' osr_bci='20' stamp='0.526'>
<uncommon_trap method='845' bci='175' reason='unloaded' action='reinterpret' index='22' klass='850'/>
<uncommon_trap method='845' bci='153' reason='unloaded' action='reinterpret' index='22' klass='850'/>
<uncommon_trap bci='20' reason='constraint' action='reinterpret'/>
<uncommon_trap bci='20' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='20' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='162' bci='24'/>
<branch target_bci='54' taken='1237' not_taken='72692' cnt='73929' prob='0.0167323'/>
<bc code='52' bci='29'/>
<uncommon_trap bci='29' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='29' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='162' bci='33'/>
<branch target_bci='54' taken='0' not_taken='72692' cnt='72692' prob='never'/>
<uncommon_trap bci='33' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='52' bci='48'/>
<uncommon_trap bci='48' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='84' bci='50'/>
<uncommon_trap bci='50' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='50' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='162' bci='57'/>
<branch target_bci='356' taken='1237' not_taken='0' cnt='1237' prob='always'/>
<uncommon_trap bci='57' reason='unstable_if' action='reinterpret' comment='taken always'/>
<parse_done nodes='299' live='288' memory='78072' stamp='0.527'/>
</parse>
<phase_done name='parse' nodes='300' live='233' stamp='0.527'/>
</phase>
<phase name='optimizer' nodes='300' live='233' stamp='0.527'>
<phase name='idealLoop' nodes='320' live='211' stamp='0.527'>
<loop_tree>
<loop idx='320' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='435' live='220' stamp='0.527'/>
</phase>
<phase name='idealLoop' nodes='435' live='220' stamp='0.527'>
<loop_tree>
<loop idx='440' main_loop='440' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='637' live='356' stamp='0.528'/>
</phase>
<phase name='idealLoop' nodes='637' live='356' stamp='0.528'>
<loop_tree>
<loop idx='568' inner_loop='1' pre_loop='440' >
</loop>
<loop idx='680' inner_loop='1' main_loop='680' >
</loop>
<loop idx='476' inner_loop='1' post_loop='440' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='720' live='374' stamp='0.528'/>
</phase>
<phase name='ccp' nodes='720' live='374' stamp='0.528'>
<phase_done name='ccp' nodes='720' live='374' stamp='0.528'/>
</phase>
<phase name='idealLoop' nodes='724' live='361' stamp='0.528'>
<loop_tree>
<loop idx='568' inner_loop='1' pre_loop='440' >
</loop>
<loop idx='680' inner_loop='1' main_loop='680' >
</loop>
<loop idx='476' inner_loop='1' post_loop='440' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='746' live='351' stamp='0.529'/>
</phase>
<phase name='idealLoop' nodes='746' live='351' stamp='0.529'>
<loop_tree>
<loop idx='568' inner_loop='1' pre_loop='440' >
</loop>
<loop idx='783' inner_loop='1' main_loop='783' >
</loop>
<loop idx='476' inner_loop='1' post_loop='440' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='817' live='404' stamp='0.529'/>
</phase>
<phase name='idealLoop' nodes='817' live='404' stamp='0.529'>
<loop_tree>
<loop idx='568' inner_loop='1' pre_loop='440' >
</loop>
<loop idx='783' inner_loop='1' main_loop='783' >
</loop>
<loop idx='476' inner_loop='1' post_loop='440' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='823' live='398' stamp='0.529'/>
</phase>
<phase_done name='optimizer' nodes='872' live='389' stamp='0.529'/>
</phase>
<phase name='matcher' nodes='872' live='389' stamp='0.529'>
<phase_done name='matcher' nodes='336' live='336' stamp='0.530'/>
</phase>
<phase name='regalloc' nodes='432' live='431' stamp='0.530'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='579' live='529' stamp='0.532'/>
</phase>
<phase name='output' nodes='579' live='529' stamp='0.532'>
<phase_done name='output' nodes='604' live='543' stamp='0.540'/>
</phase>
<code_cache total_blobs='270' nmethods='19' adapters='165' free_code_cache='250522880'/>
<task_done success='1' nmsize='1080' count='1451' backedge_count='90320' stamp='0.547'/>
</task>
<task compile_id='25' method='java/lang/String hashCode ()I' bytes='55' count='1865' backedge_count='61095' iicount='1866' stamp='0.581'>
<phase name='parse' nodes='3' live='3' stamp='0.582'>
<type id='733' name='int'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='844' holder='741' name='hashCode' return='733' flags='1' bytes='55' iicount='1894'/>
<parse method='844' uses='1894' stamp='0.582'>
<bc code='154' bci='6'/>
<branch target_bci='53' taken='791' not_taken='791' cnt='1582' prob='0.5'/>
<bc code='190' bci='13'/>
<uncommon_trap bci='13' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='14'/>
<branch target_bci='53' taken='2' not_taken='789' cnt='791' prob='0.00252845'/>
<bc code='162' bci='30'/>
<branch target_bci='48' taken='789' not_taken='56937' cnt='57726' prob='0.013668'/>
<uncommon_trap bci='33' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='33' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='39'/>
<uncommon_trap bci='39' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='190' bci='29'/>
<uncommon_trap bci='29' reason='null_check' action='maybe_recompile'/>
<bc code='162' bci='30'/>
<branch target_bci='48' taken='789' not_taken='56937' cnt='56937' prob='0.013668'/>
<parse_done nodes='190' live='184' memory='50008' stamp='0.582'/>
</parse>
<phase_done name='parse' nodes='191' live='124' stamp='0.582'/>
</phase>
<phase name='optimizer' nodes='191' live='124' stamp='0.582'>
<phase name='idealLoop' nodes='192' live='104' stamp='0.582'>
<loop_tree>
<loop idx='192' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='196' live='96' stamp='0.582'/>
</phase>
<phase name='idealLoop' nodes='196' live='96' stamp='0.582'>
<loop_tree>
<loop idx='201' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='222' live='102' stamp='0.582'/>
</phase>
<phase name='idealLoop' nodes='222' live='102' stamp='0.582'>
<loop_tree>
<loop idx='299' inner_loop='1' main_loop='299' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='312' live='172' stamp='0.583'/>
</phase>
<phase name='ccp' nodes='312' live='172' stamp='0.583'>
<phase_done name='ccp' nodes='312' live='172' stamp='0.583'/>
</phase>
<phase name='idealLoop' nodes='312' live='172' stamp='0.583'>
<loop_tree>
<loop idx='262' inner_loop='1' pre_loop='201' >
</loop>
<loop idx='348' inner_loop='1' main_loop='348' >
</loop>
<loop idx='234' inner_loop='1' post_loop='201' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='364' live='198' stamp='0.584'/>
</phase>
<phase name='idealLoop' nodes='364' live='198' stamp='0.584'>
<loop_tree>
<loop idx='262' inner_loop='1' pre_loop='201' >
</loop>
<loop idx='416' inner_loop='1' main_loop='416' >
</loop>
<loop idx='234' inner_loop='1' post_loop='201' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='432' live='246' stamp='0.584'/>
</phase>
<phase name='idealLoop' nodes='432' live='246' stamp='0.584'>
<loop_tree>
<loop idx='262' inner_loop='1' pre_loop='201' >
</loop>
<loop idx='416' inner_loop='1' main_loop='416' >
</loop>
<loop idx='234' inner_loop='1' post_loop='201' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='435' live='229' stamp='0.584'/>
</phase>
<phase name='idealLoop' nodes='435' live='229' stamp='0.584'>
<loop_tree>
<loop idx='262' inner_loop='1' pre_loop='201' >
</loop>
<loop idx='416' inner_loop='1' main_loop='416' >
</loop>
<loop idx='234' inner_loop='1' post_loop='201' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='445' live='212' stamp='0.585'/>
</phase>
<phase_done name='optimizer' nodes='507' live='195' stamp='0.585'/>
</phase>
<phase name='matcher' nodes='507' live='195' stamp='0.585'>
<phase_done name='matcher' nodes='169' live='169' stamp='0.585'/>
</phase>
<phase name='regalloc' nodes='205' live='204' stamp='0.586'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='238' live='229' stamp='0.587'/>
</phase>
<phase name='output' nodes='238' live='229' stamp='0.587'>
<phase_done name='output' nodes='250' live='238' stamp='0.601'/>
</phase>
<code_cache total_blobs='276' nmethods='25' adapters='165' free_code_cache='250509760'/>
<task_done success='1' nmsize='472' count='1977' backedge_count='61098' stamp='0.608'/>
</task>
<task compile_id='37' compile_kind='osr' method='jdk/VolatileTest main ([Ljava/lang/String;)V' bytes='106' count='1' backedge_count='1000000' iicount='1' osr_bci='29' stamp='0.688'>
<phase name='parse' nodes='3' live='3' stamp='0.689'>
<type id='735' name='void'/>
<klass id='845' name='[Ljava/lang/String;' flags='1041'/>
<klass id='844' name='jdk/VolatileTest' flags='1'/>
<method id='846' holder='844' name='main' return='735' arguments='845' flags='9' bytes='106' iicount='1'/>
<klass id='851' name='java/lang/StringBuilder' unloaded='1'/>
<uncommon_trap method='846' bci='54' reason='unloaded' action='reinterpret' index='9' klass='851'/>
<parse method='846' uses='1' osr_bci='29' stamp='0.689'>
<uncommon_trap method='846' bci='54' reason='unloaded' action='reinterpret' index='9' klass='851'/>
<dependency type='leaf_type' ctxk='844'/>
<dependency type='leaf_type' ctxk='844'/>
<uncommon_trap bci='29' reason='constraint' action='reinterpret'/>
<uncommon_trap bci='29' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='29' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='162' bci='33'/>
<branch target_bci='51' taken='1' not_taken='24312' cnt='24313' prob='4.11303e-05'/>
<bc code='182' bci='40'/>
<type id='733' name='int'/>
<method id='852' holder='844' name='add' return='733' arguments='733 733' flags='1' bytes='17' compile_id='35' compiler='C2' level='4' iicount='84728'/>
<dependency type='unique_concrete_method' ctxk='844' x='852'/>
<call method='852' count='24312' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='852' uses='24312' stamp='0.690'>
<uncommon_trap bci='40' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='162' live='157' memory='46384' stamp='0.690'/>
</parse>
<bc code='187' bci='54'/>
<uncommon_trap bci='54' reason='unloaded' action='reinterpret' index='9'/>
<parse_done nodes='176' live='170' memory='48704' stamp='0.690'/>
</parse>
<phase_done name='parse' nodes='176' live='123' stamp='0.690'/>
</phase>
<phase name='optimizer' nodes='176' live='123' stamp='0.690'>
<phase name='idealLoop' nodes='180' live='115' stamp='0.690'>
<loop_tree>
<loop idx='180' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='190' live='113' stamp='0.690'/>
</phase>
<phase name='idealLoop' nodes='190' live='113' stamp='0.690'>
<loop_tree>
<loop idx='180' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='233' live='126' stamp='0.690'/>
</phase>
<phase name='idealLoop' nodes='233' live='126' stamp='0.690'>
<loop_tree>
<loop idx='343' main_loop='343' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='366' live='207' stamp='0.691'/>
</phase>
<phase name='ccp' nodes='366' live='207' stamp='0.691'>
<phase_done name='ccp' nodes='366' live='207' stamp='0.691'/>
</phase>
<phase name='idealLoop' nodes='367' live='205' stamp='0.691'>
<loop_tree>
<loop idx='295' inner_loop='1' pre_loop='238' >
</loop>
<loop idx='343' inner_loop='1' main_loop='343' >
</loop>
<loop idx='255' inner_loop='1' post_loop='238' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='397' live='197' stamp='0.692'/>
</phase>
<phase name='idealLoop' nodes='397' live='197' stamp='0.692'>
<loop_tree>
<loop idx='295' inner_loop='1' pre_loop='238' >
</loop>
<loop idx='424' inner_loop='1' main_loop='424' >
</loop>
<loop idx='255' inner_loop='1' post_loop='238' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='452' live='230' stamp='0.692'/>
</phase>
<phase name='idealLoop' nodes='452' live='230' stamp='0.692'>
<loop_tree>
<loop idx='295' inner_loop='1' pre_loop='238' >
</loop>
<loop idx='424' inner_loop='1' main_loop='424' >
</loop>
<loop idx='255' inner_loop='1' post_loop='238' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='462' live='226' stamp='0.692'/>
</phase>
<phase_done name='optimizer' nodes='464' live='224' stamp='0.692'/>
</phase>
<phase name='matcher' nodes='464' live='224' stamp='0.692'>
<phase_done name='matcher' nodes='228' live='228' stamp='0.692'/>
</phase>
<phase name='regalloc' nodes='263' live='262' stamp='0.693'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='281' live='280' stamp='0.694'/>
</phase>
<phase name='output' nodes='281' live='280' stamp='0.694'>
<phase_done name='output' nodes='297' live='290' stamp='0.694'/>
</phase>
<dependency type='leaf_type' ctxk='844'/>
<dependency type='unique_concrete_method' ctxk='844' x='852'/>
<code_cache total_blobs='284' nmethods='32' adapters='165' free_code_cache='250491456'/>
<task_done success='1' nmsize='440' count='1' backedge_count='1000000' inlined_bytes='17' stamp='0.700'/>
</task>
</compilation_log>
<compilation_log thread='17667'>
<start_compile_thread name='C2 CompilerThread0' thread='17667' process='76627' stamp='0.440'/>
<task compile_id='3' compile_kind='osr' method='java/lang/String indexOf (II)I' bytes='70' count='1845' backedge_count='108545' iicount='1845' osr_bci='37' stamp='0.468'>
<phase name='parse' nodes='3' live='3' stamp='0.469'>
<type id='733' name='int'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='844' holder='741' name='indexOf' return='733' arguments='733 733' flags='1' bytes='70' iicount='1845'/>
<parse method='844' uses='1845' osr_bci='37' stamp='0.469'>
<uncommon_trap bci='37' reason='constraint' action='reinterpret'/>
<uncommon_trap bci='37' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='37' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='162' bci='40'/>
<branch target_bci='61' taken='1295' not_taken='103415' cnt='104710' prob='0.0123675'/>
<bc code='52' bci='47'/>
<uncommon_trap bci='47' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='47' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='160' bci='49'/>
<branch target_bci='55' taken='103389' not_taken='26' cnt='103415' prob='0.999749'/>
<parse_done nodes='169' live='162' memory='48008' stamp='0.469'/>
</parse>
<phase_done name='parse' nodes='170' live='125' stamp='0.469'/>
</phase>
<phase name='optimizer' nodes='170' live='125' stamp='0.469'>
<phase name='idealLoop' nodes='175' live='117' stamp='0.469'>
<loop_tree>
<loop idx='175' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='227' live='124' stamp='0.469'/>
</phase>
<phase name='idealLoop' nodes='227' live='124' stamp='0.469'>
<loop_tree>
<loop idx='232' main_loop='232' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='331' live='187' stamp='0.469'/>
</phase>
<phase name='idealLoop' nodes='331' live='187' stamp='0.469'>
<loop_tree>
<loop idx='303' inner_loop='1' pre_loop='232' >
</loop>
<loop idx='356' inner_loop='1' main_loop='356' >
</loop>
<loop idx='257' inner_loop='1' post_loop='232' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='379' live='205' stamp='0.470'/>
</phase>
<phase name='ccp' nodes='379' live='205' stamp='0.470'>
<phase_done name='ccp' nodes='379' live='205' stamp='0.470'/>
</phase>
<phase name='idealLoop' nodes='381' live='200' stamp='0.470'>
<loop_tree>
<loop idx='303' inner_loop='1' pre_loop='232' >
</loop>
<loop idx='356' inner_loop='1' main_loop='356' >
</loop>
<loop idx='257' inner_loop='1' post_loop='232' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='385' live='195' stamp='0.470'/>
</phase>
<phase name='idealLoop' nodes='385' live='195' stamp='0.470'>
<loop_tree>
<loop idx='303' inner_loop='1' pre_loop='232' >
</loop>
<loop idx='409' inner_loop='1' main_loop='409' >
</loop>
<loop idx='257' inner_loop='1' post_loop='232' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='431' live='231' stamp='0.470'/>
</phase>
<phase name='idealLoop' nodes='431' live='231' stamp='0.470'>
<loop_tree>
<loop idx='303' inner_loop='1' pre_loop='232' >
</loop>
<loop idx='474' inner_loop='1' main_loop='474' >
</loop>
<loop idx='257' inner_loop='1' post_loop='232' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='507' live='293' stamp='0.470'/>
</phase>
<phase name='idealLoop' nodes='507' live='293' stamp='0.470'>
<loop_tree>
<loop idx='303' inner_loop='1' pre_loop='232' >
</loop>
<loop idx='474' inner_loop='1' main_loop='474' >
</loop>
<loop idx='257' inner_loop='1' post_loop='232' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='507' live='286' stamp='0.471'/>
</phase>
<phase_done name='optimizer' nodes='567' live='273' stamp='0.471'/>
</phase>
<phase name='matcher' nodes='567' live='273' stamp='0.471'>
<phase_done name='matcher' nodes='219' live='219' stamp='0.471'/>
</phase>
<phase name='regalloc' nodes='302' live='302' stamp='0.471'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='321' live='318' stamp='0.472'/>
</phase>
<phase name='output' nodes='321' live='318' stamp='0.472'>
<phase_done name='output' nodes='355' live='329' stamp='0.478'/>
</phase>
<code_cache total_blobs='254' nmethods='5' adapters='163' free_code_cache='250547008'/>
<task_done success='1' nmsize='536' count='1845' backedge_count='108545' stamp='0.486'/>
</task>
<task compile_id='7' method='java/lang/String charAt (I)C' bytes='29' count='58116' iicount='58116' stamp='0.486'>
<phase name='parse' nodes='3' live='3' stamp='0.487'>
<type id='728' name='char'/>
<type id='733' name='int'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='844' holder='741' name='charAt' return='728' arguments='733' flags='1' bytes='29' iicount='58116'/>
<klass id='846' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<uncommon_trap method='844' bci='13' reason='unloaded' action='reinterpret' index='6' klass='846'/>
<parse method='844' uses='58116' stamp='0.487'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='58116' cnt='58116' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='58116' not_taken='0' cnt='58116' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='102' live='97' memory='35040' stamp='0.487'/>
</parse>
<phase_done name='parse' nodes='103' live='63' stamp='0.487'/>
</phase>
<phase name='optimizer' nodes='103' live='63' stamp='0.487'>
<phase name='ccp' nodes='103' live='63' stamp='0.487'>
<phase_done name='ccp' nodes='103' live='63' stamp='0.487'/>
</phase>
<phase name='idealLoop' nodes='103' live='63' stamp='0.487'>
<phase_done name='idealLoop' nodes='103' live='63' stamp='0.487'/>
</phase>
<phase_done name='optimizer' nodes='107' live='63' stamp='0.487'/>
</phase>
<phase name='matcher' nodes='107' live='63' stamp='0.487'>
<phase_done name='matcher' nodes='55' live='55' stamp='0.487'/>
</phase>
<phase name='regalloc' nodes='70' live='69' stamp='0.487'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='80' live='75' stamp='0.487'/>
</phase>
<phase name='output' nodes='80' live='75' stamp='0.487'>
<phase_done name='output' nodes='94' live='86' stamp='0.487'/>
</phase>
<code_cache total_blobs='256' nmethods='7' adapters='163' free_code_cache='250545536'/>
<task_done success='1' nmsize='216' count='58174' stamp='0.490'/>
</task>
<task compile_id='20' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='9093' iicount='9093' stamp='0.547'>
<phase name='parse' nodes='3' live='3' stamp='0.547'>
<type id='735' name='void'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<method id='844' holder='740' name='&lt;init&gt;' return='735' flags='1' bytes='1' iicount='9093'/>
<parse method='844' uses='9093' stamp='0.547'>
<parse_done nodes='54' live='53' memory='27144' stamp='0.547'/>
</parse>
<phase_done name='parse' nodes='56' live='38' stamp='0.547'/>
</phase>
<phase name='optimizer' nodes='56' live='38' stamp='0.547'>
<phase name='ccp' nodes='56' live='38' stamp='0.547'>
<phase_done name='ccp' nodes='56' live='38' stamp='0.547'/>
</phase>
<phase name='idealLoop' nodes='56' live='38' stamp='0.547'>
<phase_done name='idealLoop' nodes='56' live='38' stamp='0.547'/>
</phase>
<phase_done name='optimizer' nodes='56' live='37' stamp='0.547'/>
</phase>
<phase name='matcher' nodes='56' live='37' stamp='0.547'>
<phase_done name='matcher' nodes='33' live='33' stamp='0.547'/>
</phase>
<phase name='regalloc' nodes='42' live='42' stamp='0.548'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='45' live='44' stamp='0.548'/>
</phase>
<phase name='output' nodes='45' live='44' stamp='0.548'>
<phase_done name='output' nodes='55' live='53' stamp='0.548'/>
</phase>
<code_cache total_blobs='271' nmethods='20' adapters='165' free_code_cache='250522112'/>
<task_done success='1' nmsize='152' count='9093' stamp='0.551'/>
</task>
<task compile_id='33' method='java/lang/String indexOf (II)I' bytes='70' count='1872' backedge_count='109525' iicount='1872' stamp='0.641'>
<phase name='parse' nodes='3' live='3' stamp='0.641'>
<type id='733' name='int'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='844' holder='741' name='indexOf' return='733' arguments='733 733' flags='1' bytes='70' iicount='1872'/>
<parse method='844' uses='1872' stamp='0.641'>
<bc code='190' bci='4'/>
<uncommon_trap bci='4' reason='null_check' action='maybe_recompile'/>
<bc code='156' bci='7'/>
<branch target_bci='15' taken='1664' not_taken='0' cnt='1664' prob='always'/>
<uncommon_trap bci='7' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='161' bci='17'/>
<branch target_bci='22' taken='1348' not_taken='316' cnt='1664' prob='0.810096'/>
<bc code='162' bci='25'/>
<branch target_bci='63' taken='0' not_taken='1348' cnt='1348' prob='never'/>
<uncommon_trap bci='25' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='162' bci='40'/>
<branch target_bci='61' taken='1322' not_taken='104395' cnt='105717' prob='0.0125051'/>
<uncommon_trap bci='43' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='43' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='47'/>
<uncommon_trap bci='47' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='47' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='160' bci='49'/>
<branch target_bci='55' taken='104369' not_taken='26' cnt='104395' prob='0.999751'/>
<bc code='162' bci='40'/>
<branch target_bci='61' taken='1322' not_taken='104395' cnt='104369' prob='0.0125051'/>
<parse_done nodes='184' live='174' memory='50256' stamp='0.641'/>
</parse>
<phase_done name='parse' nodes='185' live='129' stamp='0.641'/>
</phase>
<phase name='optimizer' nodes='185' live='129' stamp='0.641'>
<phase name='idealLoop' nodes='186' live='115' stamp='0.641'>
<loop_tree>
<loop idx='192' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='193' live='105' stamp='0.641'/>
</phase>
<phase name='idealLoop' nodes='193' live='105' stamp='0.641'>
<loop_tree>
<loop idx='192' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='206' live='111' stamp='0.641'/>
</phase>
<phase name='idealLoop' nodes='206' live='111' stamp='0.641'>
<loop_tree>
<loop idx='282' inner_loop='1' main_loop='282' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='295' live='187' stamp='0.642'/>
</phase>
<phase name='ccp' nodes='295' live='187' stamp='0.642'>
<phase_done name='ccp' nodes='295' live='187' stamp='0.642'/>
</phase>
<phase name='idealLoop' nodes='295' live='187' stamp='0.642'>
<loop_tree>
<loop idx='246' inner_loop='1' pre_loop='192' >
</loop>
<loop idx='321' inner_loop='1' main_loop='321' >
</loop>
<loop idx='218' inner_loop='1' post_loop='192' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='342' live='222' stamp='0.642'/>
</phase>
<phase name='idealLoop' nodes='342' live='222' stamp='0.642'>
<loop_tree>
<loop idx='246' inner_loop='1' pre_loop='192' >
</loop>
<loop idx='385' inner_loop='1' main_loop='385' >
</loop>
<loop idx='218' inner_loop='1' post_loop='192' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='418' live='288' stamp='0.642'/>
</phase>
<phase name='idealLoop' nodes='418' live='288' stamp='0.642'>
<loop_tree>
<loop idx='246' inner_loop='1' pre_loop='192' >
</loop>
<loop idx='385' inner_loop='1' main_loop='385' >
</loop>
<loop idx='218' inner_loop='1' post_loop='192' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='418' live='271' stamp='0.642'/>
</phase>
<phase name='idealLoop' nodes='418' live='271' stamp='0.642'>
<loop_tree>
<loop idx='246' inner_loop='1' pre_loop='192' >
</loop>
<loop idx='385' inner_loop='1' main_loop='385' >
</loop>
<loop idx='218' inner_loop='1' post_loop='192' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='418' live='268' stamp='0.643'/>
</phase>
<phase_done name='optimizer' nodes='481' live='258' stamp='0.643'/>
</phase>
<phase name='matcher' nodes='481' live='258' stamp='0.643'>
<phase_done name='matcher' nodes='197' live='197' stamp='0.643'/>
</phase>
<phase name='regalloc' nodes='279' live='278' stamp='0.643'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='296' live='293' stamp='0.644'/>
</phase>
<phase name='output' nodes='296' live='293' stamp='0.644'>
<phase_done name='output' nodes='329' live='305' stamp='0.644'/>
</phase>
<code_cache total_blobs='281' nmethods='29' adapters='165' free_code_cache='250503168'/>
<task_done success='1' nmsize='472' count='1873' backedge_count='109526' stamp='0.651'/>
</task>
<task compile_id='35' method='jdk/VolatileTest add (II)I' bytes='17' count='30208' iicount='30208' stamp='0.651'>
<phase name='parse' nodes='3' live='3' stamp='0.651'>
<type id='733' name='int'/>
<klass id='844' name='jdk/VolatileTest' flags='1'/>
<method id='845' holder='844' name='add' return='733' arguments='733 733' flags='1' bytes='17' compile_id='34' compiler='C1' level='3' iicount='30647'/>
<parse method='845' uses='30647' stamp='0.651'>
<parse_done nodes='45' live='44' memory='25888' stamp='0.651'/>
</parse>
<phase_done name='parse' nodes='46' live='29' stamp='0.651'/>
</phase>
<phase name='optimizer' nodes='46' live='29' stamp='0.651'>
<phase name='ccp' nodes='46' live='29' stamp='0.651'>
<phase_done name='ccp' nodes='46' live='29' stamp='0.651'/>
</phase>
<phase name='idealLoop' nodes='46' live='29' stamp='0.651'>
<phase_done name='idealLoop' nodes='46' live='29' stamp='0.651'/>
</phase>
<phase_done name='optimizer' nodes='46' live='29' stamp='0.651'/>
</phase>
<phase name='matcher' nodes='46' live='29' stamp='0.651'>
<phase_done name='matcher' nodes='32' live='32' stamp='0.652'/>
</phase>
<phase name='regalloc' nodes='34' live='34' stamp='0.652'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='35' live='35' stamp='0.652'/>
</phase>
<phase name='output' nodes='35' live='35' stamp='0.652'>
<phase_done name='output' nodes='42' live='42' stamp='0.652'/>
</phase>
<code_cache total_blobs='282' nmethods='30' adapters='165' free_code_cache='250502528'/>
<task_done success='1' nmsize='120' count='60416' stamp='0.653'/>
</task>
</compilation_log>
<hotspot_log_done stamp='1.062'/>
</hotspot_log>
